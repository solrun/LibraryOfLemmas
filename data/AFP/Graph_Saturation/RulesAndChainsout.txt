Loading theory "Draft.MissingRelation" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.RulesAndChains" via "Draft.LabeledGraphs")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.507s cpu time, 0.051s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.MissingRelation"
### 0.156s elapsed time, 0.644s cpu time, 0.051s GC time
Loading theory "Draft.LabeledGraphs" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.RulesAndChains")
### theory "HOL-Library.Set_Algebras"
### 0.202s elapsed time, 0.830s cpu time, 0.051s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.339s elapsed time, 1.356s cpu time, 0.142s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.LabeledGraphs"
### 0.957s elapsed time, 3.606s cpu time, 0.828s GC time
Loading theory "Draft.RulesAndChains" (required by "Draft.RulesAndChainsMoreTemplates")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.004s elapsed time, 3.786s cpu time, 0.872s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.079s elapsed time, 3.914s cpu time, 0.859s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "WPC"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.RulesAndChains"
### 0.441s elapsed time, 1.276s cpu time, 0.122s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.911s elapsed time, 5.636s cpu time, 1.057s GC time
Loading theory "Draft.Templates" (required by "Draft.RulesAndChainsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.RulesAndChainsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.464s elapsed time, 0.505s cpu time, 0.049s GC time
Loading theory "Draft.RulesAndChainsMoreTemplates"
val templateLemmas =
   [("RulesAndChains.agree_on_equivp", "equivp (agree_on ?G)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("RulesAndChains.agree_on_refl", "agree_on ?R ?f ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("RulesAndChains.chain_sup_const", "chain_sup (%x. ?S) = ?S",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("RulesAndChains.maintained_refl", "maintained (?R, ?R) ?G",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1)),
           template_var 0)
         )),
    ("RulesAndChains.agree_on_empty", "agree_on (LG {} {}) ?f ?g",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0)),
             template_var 1),
           template_var 0)
         )),
    ("RulesAndChains.fair_chainD", "fair_chain ?Rs ?S ==> chain ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("RulesAndChains.maintained_then_fin_maintained",
     "maintained ?R ?G ==> fin_maintained ?R ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("RulesAndChains.Simple_WPC_Chain", "Simple_WPC ?t ?Rs ?S ==> chain ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("RulesAndChains.agree_on_comm",
     "agree_on ?X ?f ?g = agree_on ?X ?g ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("RulesAndChains.consequence_graphD",
     "consequence_graph ?Rs ?G ==> graph ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 0)))),
    ("RulesAndChains.map_graph_chain_sup",
     "map_graph ?g (chain_sup ?S) = chain_sup (map_graph ?g o ?S)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("RulesAndChains.chain_sup_graph", "chain ?S ==> graph (chain_sup ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("RulesAndChains.chain_then_restrict", "chain ?S ==> graph (?S ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app
          (template_hole 0,
           template_app (template_var 1, template_var 0))))),
    ("RulesAndChains.extensible_refl",
     "graph_homomorphism ?R ?G ?f ==> extensible (?R, ?R) ?G ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("RulesAndChains.chain_sup_subgraph",
     "chain ?S ==> subgraph (?S ?j) (chain_sup ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 1, template_var 0)),
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_var 1, template_var 0))))
           ))),
    ("RulesAndChains.wpc_least",
     "WPC ?t ?Rs ?S ==> least ?t ?Rs (?S 0) (chain_sup ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app (template_var 0, template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("RulesAndChains.consequence_graphD",
     "[| consequence_graph ?Rs ?G; ?R : ?Rs |] ==> maintained ?R ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("RulesAndChains.agree_on_ext",
     "agree_on ?G ?f\<^sub>1 ?f\<^sub>2 ==>
      agree_on ?G (?f\<^sub>1 O ?g) (?f\<^sub>2 O ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("RulesAndChains.graph_union_chain_sup",
     "(!!i. graph_union (?S i) ?C = ?C) ==>
      graph_union (chain_sup ?S) ?C = ?C",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_var 0))),
    ("RulesAndChains.extensible_chain_sup",
     "[| chain ?S; extensible ?R (?S ?j) ?f |]
      ==> extensible ?R (chain_sup ?S) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_var 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 3)),
             template_var 0)
           ))),
    ("RulesAndChains.agree_on_trans",
     "[| agree_on ?X ?f ?g; agree_on ?X ?g ?h |] ==> agree_on ?X ?f ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("RulesAndChains.chain",
     "[| chain ?S; ?i <= ?j |] ==> subgraph (?S ?i) (?S ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_var 2, template_var 1)),
               template_app (template_var 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 1))))
           ))),
    ("RulesAndChains.set_of_graph_rulesD",
     "[| set_of_graph_rules ?Rs; ?R : ?Rs |]
      ==> subgraph (fst ?R) (snd ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 0))))
           ))),
    ("RulesAndChains.agree_iff_subset",
     "[| graph_homomorphism ?G ?X ?f; univalent ?g |]
      ==> agree_on ?G ?f ?g = (?f <= ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RulesAndChains.extensibleI",
     "[| graph_homomorphism ?R2.0 ?G ?g; agree_on ?R1.0 ?f ?g |]
      ==> extensible (?R1.0, ?R2.0) ?G ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4)),
               template_var 3),
             template_var 0)
           ))),
    ("RulesAndChains.consequence_graphD",
     "[| consequence_graph ?Rs ?G; ?R : ?Rs |]
      ==> subgraph (fst ?R) (snd ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 3, template_var 0))))
           ))),
    ("RulesAndChains.wpc_least_consequence_graph",
     "[| WPC ?t ?Rs ?S; consequence_graph ?Rs (chain_sup ?S) |]
      ==> least_consequence_graph ?t ?Rs (?S 0) (chain_sup ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_app (template_var 0, template_hole 0)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("RulesAndChains.maintainedD",
     "[| maintained (?A, ?B) ?G; graph_homomorphism ?A ?G ?f |]
      ==> extensible (?A, ?B) ?G ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("RulesAndChains.agree_on_subset",
     "[| ?f <= ?g; vertices ?G <= Domain ?f; univalent ?g |]
      ==> agree_on ?G ?f ?g",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("RulesAndChains.maintainedI",
     "(!!f. graph_homomorphism ?A ?G f ==> extensible (?A, ?B) ?G f) ==>
      maintained (?A, ?B) ?G",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("RulesAndChains.agree_on_then_eq",
     "[| agree_on ?G ?f\<^sub>1 ?f\<^sub>2; Domain ?f\<^sub>1 = vertices ?G;
         Domain ?f\<^sub>2 = vertices ?G |]
      ==> ?f\<^sub>1 = ?f\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 2)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 2))],
       template_equation (template_var 1, template_var 0))),
    ("RulesAndChains.agree_on_subg_compose",
     "[| agree_on ?R ?g ?h; agree_on ?F ?f ?g; subgraph ?F ?R |]
      ==> agree_on ?F ?f ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 4),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("RulesAndChains.extensible_refl_concr",
     "graph_homomorphism (LG ?e\<^sub>1 ?v) ?G ?f ==>
      extensible (LG ?e\<^sub>1 ?v, LG ?e\<^sub>2 ?v) ?G ?f =
      graph_homomorphism (LG ?e\<^sub>2 ?v) ?G ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 3))),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 3)),
             template_var 2),
           template_var 1)))),
    ("RulesAndChains.fin_maintained_maintained",
     "finite_graph (fst ?R) ==> fin_maintained ?R ?G = maintained ?R ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 1)))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 8, template_var 1)))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app (template_hole 8, template_var 1)))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RulesAndChains.set_of_graph_rulesD",
     "[| set_of_graph_rules ?Rs; ?R : ?Rs |] ==> finite_graph (fst ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 5, template_var 0)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 5, template_var 0)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 5, template_var 0)))))
           ))),
    ("RulesAndChains.set_of_graph_rulesD",
     "[| set_of_graph_rules ?Rs; ?R : ?Rs |] ==> finite_graph (snd ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 5, template_var 0)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 5, template_var 0)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 5, template_var 0)))))
           ))),
    ("RulesAndChains.fair_chainD",
     "[| fair_chain ?Rs ?S; ?R : ?Rs;
         graph_homomorphism (fst ?R) (?S ?i) ?f |]
      ==> EX j. extensible ?R (?S j) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_app (template_var 3, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("RulesAndChains.extensibleD",
     "[| extensible ?R ?G ?f;
         !!g. [| graph_homomorphism (snd ?R) ?G g; agree_on (fst ?R) ?f g |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("RulesAndChains.leastI",
     "[| subgraph ?S ?G;
         !!C. consequence_graph ?Rs C ==> maintained (?S, ?G) C |]
      ==> least ?t ?Rs ?S ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 3),
             template_var 2)
           ))),
    ("RulesAndChains.maintainedD2",
     "[| maintained (?A, ?B) ?G; graph_homomorphism ?A ?G ?f;
         !!g. [| graph_homomorphism ?B ?G g; ?f <= g |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("RulesAndChains.find_graph_occurence_vertices",
     "[| chain ?S; finite ?V; univalent ?f;
         ?f `` ?V <= vertices (chain_sup ?S) |]
      ==> EX i. ?f `` ?V <= vertices (?S i)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 2)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("RulesAndChains.find_graph_occurence",
     "[| chain ?S; finite ?E; finite ?V;
         graph_homomorphism (LG ?E ?V) (chain_sup ?S) ?f |]
      ==> EX i. graph_homomorphism (LG ?E ?V) (?S i) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1)),
                template_app (template_hole 1, template_var 3)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("RulesAndChains.least_consequence_graphI",
     "[| consequence_graph ?Rs ?G; subgraph ?S ?G;
         !!C. consequence_graph ?Rs C ==> maintained (?S, ?G) C |]
      ==> least_consequence_graph ?t ?Rs ?S ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_var 2),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1),
             template_var 2)
           ))),
    ("RulesAndChains.find_graph_occurence_edges",
     "[| chain ?S; finite ?E; univalent ?f;
         on_triple ?f `` ?E <= edges (chain_sup ?S) |]
      ==> EX i. on_triple ?f `` ?E <= edges (?S i)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0)),
            template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 2)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("RulesAndChains.fair_chainI",
     "[| chain ?S;
         !!R f i.
            [| R : ?Rs; graph_homomorphism (fst R) (?S i) f |]
            ==> EX j. extensible R (?S j) f |]
      ==> fair_chain ?Rs ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("RulesAndChains.Simple_WPCI",
     "[| set_of_graph_rules ?Rs; graph (?S 0);
         !!i. ?S i = ?S (Suc i) |
              (EX R:?Rs. pushout_step ?t R (?S i) (?S (Suc i))) |]
      ==> Simple_WPC ?t ?Rs ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app (template_var 1, template_hole 7),
          template_app
           (template_hole 6,
            template_app (template_var 1, template_hole 7))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("RulesAndChains.consequence_graphI",
     "[| !!R. R : ?Rs ==> maintained R ?G;
         !!R. R : ?Rs ==> subgraph (fst R) (snd R); graph ?G |]
      ==> consequence_graph ?Rs ?G",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_equation
         (template_var 0, template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("RulesAndChains.weak_universalD",
     "[| weak_universal ?t ?R ?G\<^sub>1 ?G\<^sub>2 ?f\<^sub>1 ?f\<^sub>2;
         graph_homomorphism (snd ?R) ?G ?h\<^sub>1;
         graph_homomorphism ?G\<^sub>1 ?G ?h\<^sub>2;
         ?f\<^sub>1 O ?h\<^sub>2 <= ?h\<^sub>1 |]
      ==> EX h. graph_homomorphism ?G\<^sub>2 ?G h & ?h\<^sub>2 <= h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 7)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 6),
                template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 4), template_var 0),
          template_var 1)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("RulesAndChains.extend_for_chain",
     "[| ?g 0 = ?f; !!i. graph_homomorphism (?S i) ?C (?g i);
         !!i. agree_on (?S i) (?g i) (?g (i + 1)); chain ?S |]
      ==> extensible (?S 0, chain_sup ?S) ?C ?f",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_hole 9), template_var 2),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 1, template_hole 9)),
                   template_app (template_hole 0, template_var 1))),
               template_var 0),
             template_var 2)
           ))),
    ("RulesAndChains.fair_chain_impl_consequence_graph",
     "[| fair_chain ?Rs ?S;
         !!R. R : ?Rs ==> subgraph (fst R) (snd R) & finite_graph (fst R) |]
      ==> consequence_graph ?Rs (chain_sup ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("RulesAndChains.weak_universalI",
     "(!!h\<^sub>1 h\<^sub>2 G.
          [| graph_homomorphism (snd ?R) G h\<^sub>1;
             graph_homomorphism ?G\<^sub>1 G h\<^sub>2;
             ?f\<^sub>1 O h\<^sub>2 <= h\<^sub>1 |]
          ==> EX h. graph_homomorphism ?G\<^sub>2 G h & h\<^sub>2 <= h) ==>
      weak_universal ?t ?R ?G\<^sub>1 ?G\<^sub>2 ?f\<^sub>1 ?f\<^sub>2",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 2),
               template_var 3),
             template_var 0)
           ))),
    ("RulesAndChains.extensible_from_chainI",
     "[| chain ?S; graph_homomorphism (?S 0) ?C ?f;
         !!f i.
            graph_homomorphism (?S i) ?C f ==>
            EX h. graph_homomorphism (?S (Suc i)) ?C h &
                  agree_on (?S i) f h |]
      ==> extensible (?S 0, chain_sup ?S) ?C ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_var 2, template_hole 9)),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 2, template_hole 9)),
                   template_app (template_hole 0, template_var 2))),
               template_var 1),
             template_var 0)
           ))),
    ("RulesAndChains.fin_maintainedI",
     "(!!F f.
          [| finite_graph F; subgraph F (fst ?R);
             extensible (F, fst ?R) ?G f; graph_homomorphism F ?G f |]
          ==> extensible (F, snd ?R) ?G f) ==>
      fin_maintained ?R ?G",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]:
   (string * thm * template) list
### theory "Draft.RulesAndChainsMoreTemplates"
### 0.277s elapsed time, 0.368s cpu time, 0.000s GC time
val it = (): unit
