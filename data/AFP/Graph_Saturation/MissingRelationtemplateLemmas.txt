   [("MissingRelation.id_univalent", "univalent (Id_on ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("MissingRelation.Gr_univalent", "univalent (BNF_Def.Gr ?A ?f)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("MissingRelation.Gr_empty", "BNF_Def.Gr {} ?f = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("MissingRelation.Gr_domain", "Domain (BNF_Def.Gr ?A ?f) = ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("MissingRelation.idempotent_impl_trans", "idempotent ?r ==> trans ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("MissingRelation.Gr_card", "card (BNF_Def.Gr ?A ?f) = card ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("MissingRelation.range_dom", "?f `` Domain ?f = Range ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MissingRelation.Gr_range", "Range (BNF_Def.Gr ?A ?f) = ?f ` ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("MissingRelation.range_dom", "?f^-1 `` Range ?f = Domain ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("MissingRelation.fst_UNIV", "?A <= fst ` ?A \<times> UNIV",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         t_empty))),
    ("MissingRelation.univalent_char", "univalent ?R = (?R^-1 O ?R <= Id)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 0)),
         template_hole 0))),
    ("MissingRelation.univalent_set_distinctI",
     "distinct ?A ==> univalent (set (zip ?A ?B))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("MissingRelation.refl_on_tranclI",
     "refl_on ?A ?r ==> refl_on ?A (?r^+)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("MissingRelation.Id_on_domain",
     "Domain (Id_on ?A O ?f) = ?A Int Domain ?f",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("MissingRelation.set_zip_conv",
     "(set (zip ?A ?B))^-1 = set (zip ?B ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("MissingRelation.univalent_finite",
     "univalent ?R ==> card (Domain ?R) = card ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("MissingRelation.univalent_finite",
     "univalent ?R ==> finite (Domain ?R) = finite ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("MissingRelation.univalentI", "?R^-1 O ?R <= Id ==> univalent ?R",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0)),
            template_var 0),
          template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("MissingRelation.Gr_Image_image",
     "BNF_Def.Gr ?A ?f `` ?B = ?f ` (?A Int ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("MissingRelation.Gr_domain",
     "Domain (BNF_Def.Gr ?A id O ?R) = ?A Int Domain ?R",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("MissingRelation.Id_on_int", "Id_on ?A O ?f = ?A \<times> UNIV Int ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)),
         template_var 0))),
    ("MissingRelation.univalent_right_unique",
     "univalent {(x, y). ?r x y} = right_unique ?r",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))),
       template_app (template_hole 0, template_var 0))),
    ("MissingRelation.univalent_right_unique",
     "right_unique (%x y. (x, y) : ?R) = univalent ?R",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("MissingRelation.univalent_inter",
     "univalent ?f_a | univalent ?f_b ==> univalent (?f_a Int ?f_b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("MissingRelation.refl_trans_impl_idempotent",
     "[| refl_on ?A ?r; trans ?r |] ==> idempotent ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("MissingRelation.Domain_int_univ",
     "Domain (?A \<times> UNIV Int ?f) = ?A Int Domain ?f",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1), t_empty)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("MissingRelation.Image_Domain",
     "Domain ?R = ?A ==> ?R `` ?A = Range ?R",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("MissingRelation.univalent_composes",
     "[| univalent ?R; univalent ?S |] ==> univalent (?R O ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("MissingRelation.Domain_id_on",
     "Domain (?R O ?S) = Domain ?R Int ?R^-1 `` Domain ?S",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("MissingRelation.univalent_O_converse",
     "univalent (?R^-1) ==> ?R O ?R^-1 = Id_on (Domain ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("MissingRelation.Image_outside_Domain",
     "Domain ?R Int ?A = {} ==> ?R `` ?A = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("MissingRelation.Gr_insert",
     "BNF_Def.Gr (insert ?x ?F) ?f = insert (?x, ?f ?x) (BNF_Def.Gr ?F ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_var 0, template_var 2))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("MissingRelation.idempotent_subset",
     "[| idempotent ?R; ?S <= ?R |] ==> ?R O ?S <= ?R",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("MissingRelation.idempotent_subset",
     "[| idempotent ?R; ?S <= ?R |] ==> ?S O ?R <= ?R",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("MissingRelation.tuple_disj", "{y. y = ?x | y = ?z} = {?x, ?z}",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("MissingRelation.Domain_set_zip",
     "length ?A = length ?B ==> Domain (set (zip ?A ?B)) = set ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("MissingRelation.Range_set_zip",
     "length ?A = length ?B ==> Range (set (zip ?A ?B)) = set ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("MissingRelation.in_Gr",
     "((?x, ?y) : BNF_Def.Gr ?A ?f) = (?x : ?A & ?f ?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 0, template_var 3)),
               template_var 2))
           ))),
    ("MissingRelation.idempotent_subset",
     "[| idempotent ?R; ?S <= ?R |] ==> ?S O ?R O ?S <= ?R",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("MissingRelation.univalent_fn",
     "univalent ?R ==>
      BNF_Def.Gr (Domain ?R) (%x. SOME y. (x, y) : ?R) = ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           t_empty),
         template_var 0))),
    ("MissingRelation.univalent_insert",
     "(!!c. (?a, c) ~: ?R) ==>
      univalent (insert (?a, ?b) ?R) = univalent ?R",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("MissingRelation.list_sorted_max",
     "[| sorted ?list; ?list = ?x # ?xs |]
      ==> fold max ?xs ?x = last ?list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0),
           template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("MissingRelation.Gr_not_in",
     "?x ~: ?F | ?f ?x ~= ?y ==> (?x, ?y) ~: BNF_Def.Gr ?F ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 1, template_var 3)),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))
               )
           ))),
    ("MissingRelation.Domain_O",
     "[| ?a <= Domain ?x; ?x `` ?a <= Domain ?y |]
      ==> ?a <= Domain (?x O ?y)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("MissingRelation.univalentD",
     "[| univalent ?R; (?x, ?y) : ?R; (?x, ?z) : ?R |] ==> ?z = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)),
              template_var 3)
            )],
       template_equation (template_var 0, template_var 1))),
    ("MissingRelation.trancl_power_least",
     "(?p : ?R^+) = (EX n. ?p : ?R ^^ Suc n & (?p : ?R ^^ n --> n = 0))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("MissingRelation.univalent_union",
     "[| univalent ?f_a; univalent ?f_b;
         Domain ?f_a Int Domain ?f_b = Domain (?f_a Int ?f_b) |]
      ==> univalent (?f_a Un ?f_b)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)),
            template_app (template_hole 2, template_var 0)),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           )))]
