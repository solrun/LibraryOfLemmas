Loading theory "Draft.MissingRelation" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.LabeledGraphSemantics" via "Draft.LabeledGraphs")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.130s elapsed time, 0.532s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.MissingRelation"
### 0.153s elapsed time, 0.624s cpu time, 0.039s GC time
Loading theory "Draft.LabeledGraphs" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.LabeledGraphSemantics")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.207s elapsed time, 0.838s cpu time, 0.039s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.329s elapsed time, 1.308s cpu time, 0.130s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "Draft.LabeledGraphs"
### 0.952s elapsed time, 3.595s cpu time, 0.835s GC time
Loading theory "Draft.LabeledGraphSemantics" (required by "Draft.LabeledGraphSemanticsMoreTemplates")
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.007s elapsed time, 3.806s cpu time, 0.876s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.103s elapsed time, 4.005s cpu time, 0.863s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.999s elapsed time, 6.267s cpu time, 1.108s GC time
Loading theory "Draft.Templates" (required by "Draft.LabeledGraphSemanticsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.110s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LabeledGraphSemanticsMoreTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.534s elapsed time, 1.124s cpu time, 0.125s GC time
### theory "Draft.LabeledGraphSemantics"
### 1.699s elapsed time, 3.888s cpu time, 0.399s GC time
Loading theory "Draft.LabeledGraphSemanticsMoreTemplates"
val templateLemmas =
   [("LabeledGraphSemantics.graph_union_semantics",
     "(:?A:\<lbrakk>?e\<rbrakk>) Un (:?B:\<lbrakk>?e\<rbrakk>)
      <= :graph_union ?A ?B:\<lbrakk>?e\<rbrakk>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("LabeledGraphSemantics.semantics_subset_vertices",
     "graph ?A ==>
      :?A:\<lbrakk>?e\<rbrakk> <= vertices ?A \<times> vertices ?A",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 4, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           t_empty)))),
    ("LabeledGraphSemantics.semantics_in_vertices",
     "[| graph ?A; (?a, ?b) : :?A:\<lbrakk>?e\<rbrakk> |]
      ==> ?a : vertices ?A",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 3))
           ))),
    ("LabeledGraphSemantics.semantics_in_vertices",
     "[| graph ?A; (?a, ?b) : :?A:\<lbrakk>?e\<rbrakk> |]
      ==> ?b : vertices ?A",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 3))
           ))),
    ("LabeledGraphSemantics.getRel_dom",
     "[| graph ?G; (?a, ?b) : getRel ?l ?G |] ==> ?a : vertices ?G",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 3))
           ))),
    ("LabeledGraphSemantics.getRel_dom",
     "[| graph ?G; (?a, ?b) : getRel ?l ?G |] ==> ?b : vertices ?G",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 3))
           ))),
    ("LabeledGraphSemantics.graph_homomorphism_nonempty",
     "[| graph_homomorphism ?A ?B ?f; :?A:\<lbrakk>?e\<rbrakk> ~= {} |]
      ==> :?B:\<lbrakk>?e\<rbrakk> ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0),
              template_hole 3)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0),
             template_hole 0)
           ))),
    ("LabeledGraphSemantics.getRel_hom_map",
     "graph ?G ==>
      getRel ?l (map_graph_fn ?G ?f) = map_prod ?f ?f ` getRel ?l ?G",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("LabeledGraphSemantics.subgraph_semantics",
     "[| subgraph ?A ?B; (?a, ?b) : :?A:\<lbrakk>?e\<rbrakk> |]
      ==> (?a, ?b) : :?B:\<lbrakk>?e\<rbrakk>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("LabeledGraphSemantics.getRel_subgraph",
     "[| (?y, ?z) : getRel ?l ?G; subgraph ?G ?G' |]
      ==> (?y, ?z) : getRel ?l ?G'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("LabeledGraphSemantics.sentence_iff",
     "?G \<Turnstile> ?e\<^sub>1 \<sqsubseteq> ?e\<^sub>2 =
      (:?G:\<lbrakk>?e\<^sub>1\<rbrakk>
       <= :?G:\<lbrakk>?e\<^sub>2\<rbrakk>)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0)))),
    ("LabeledGraphSemantics.map_graph_semantics",
     "[| graph ?A; inj_on ?f (vertices ?A) |]
      ==> :map_graph_fn ?A ?f:\<lbrakk>?e\<rbrakk> =
          map_prod ?f ?f ` (:?A:\<lbrakk>?e\<rbrakk>)",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 7, template_var 2)),
                   template_var 1)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("LabeledGraphSemantics.map_graph_in",
     "[| graph ?G; (?a, ?b) : :?G:\<lbrakk>?e\<rbrakk> |]
      ==> (?f ?a, ?f ?b) : :map_graph_fn ?G ?f:\<lbrakk>?e\<rbrakk>",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 0, template_var 3)),
                 template_app (template_var 0, template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 4)),
                       template_var 0)),
                   template_var 4)),
               template_var 1))
           ))),
    ("LabeledGraphSemantics.getRel_homR",
     "[| (?y, ?z) : getRel ?l ?G; (?y, ?u) : ?f; (?z, ?v) : ?f |]
      ==> (?u, ?v) : getRel ?l (map_graph ?f ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))
           ))),
    ("LabeledGraphSemantics.getRel_hom",
     "[| (?y, ?z) : getRel ?l ?G; ?y : vertices ?G; ?z : vertices ?G |]
      ==> (?f ?y, ?f ?z) : getRel ?l (map_graph_fn ?G ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_var 0, template_var 4)),
                 template_app (template_var 0, template_var 3))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 5, template_var 1)),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("LabeledGraphSemantics.graph_homomorphism_semantics",
     "[| graph_homomorphism ?A ?B ?f; (?a, ?b) : :?A:\<lbrakk>?e\<rbrakk>;
         (?a, ?a') : ?f; (?b, ?b') : ?f |]
      ==> (?a', ?b') : :?B:\<lbrakk>?e\<rbrakk>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 1)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0)),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 6),
               template_var 2))
           ))),
    ("LabeledGraphSemantics.getRel_map_fn",
     "[| ?a2.0 : vertices ?G; ?b2.0 : vertices ?G;
         (?a2.0, ?b2.0) : getRel ?l ?G; ?f ?a2.0 = ?a; ?f ?b2.0 = ?b |]
      ==> (?a, ?b) : getRel ?l (map_graph_fn ?G ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 6),
              template_app (template_hole 9, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app (template_hole 9, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 4)),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 5))
            ),
        template_equation
         (template_app (template_var 2, template_var 6), template_var 1),
        template_equation
         (template_app (template_var 2, template_var 4), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 9, template_var 5)),
                     template_var 2)),
                 template_var 5)))
           ))),
    ("LabeledGraphSemantics.eq_as_subsets",
     "?G \<Turnstile> (?e\<^sub>1, ?e\<^sub>2) =
      (?G \<Turnstile> ?e\<^sub>1 \<sqsubseteq> ?e\<^sub>2 &
       ?G \<Turnstile> ?e\<^sub>2 \<sqsubseteq> ?e\<^sub>1)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0))))),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)))))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 1))))),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 1))))))
           )))]:
   (string * thm * template) list
### theory "Draft.LabeledGraphSemanticsMoreTemplates"
### 0.342s elapsed time, 0.492s cpu time, 0.038s GC time
val it = (): unit
