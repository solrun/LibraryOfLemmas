   [("StandardModels.consistent_iff_entails_nonsense",
     "(EX G. model ?C G ?T) = (~ entails ?t ?C ?T (\<bottom>, \<top>))",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_app (template_hole 2, template_hole 0)))))),
    ("StandardModels.standard_top_not_bot",
     "standard' ?C ?G ==>
      :?G:\<lbrakk>\<bottom>\<rbrakk> ~= :?G:\<lbrakk>\<top>\<rbrakk>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, t_empty),
                        template_var 1)),
                    template_hole 6),
                  template_hole 5),
                template_hole 4),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_hole 6)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_hole 5)))
           ))),
    ("StandardModels.ident_relI",
     "[| !!x. x : vertices ?G ==> (x, x) : getRel ?idt ?G;
         !!x y. (x, y) : getRel ?idt ?G ==> x = y;
         !!x y. (x, y) : getRel ?idt ?G ==> x : vertices ?G |]
      ==> ident_rel ?idt ?G",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 6, template_var 1)))))]
