   [("Perron_Frobenius_Aux.abs_norm1", "\<bar>norm1 ?v\<bar> = norm1 ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Perron_Frobenius_Aux.diagvector_const",
     "diagvector (%x. ?k) = mat ?k",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Perron_Frobenius_Aux.norm1_0_iff", "(norm1 ?v = 0) = (?v = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Perron_Frobenius_Aux.diagvector_eq_mat",
     "(diagvector ?x = mat ?a) = (?x = (%x. ?a))",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, t_empty))),
    ("Perron_Frobenius_Aux.norm1_scaleR",
     "norm1 (?r *\<^sub>R ?v) = \<bar>?r\<bar> * norm1 ?v",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Perron_Frobenius_Aux.norm_smult",
     "norm (?a *s ?x) = \<bar>?a\<bar> * norm ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Perron_Frobenius_Aux.vector_smult_distrib",
     "?A *v (?a *s ?x) = ?a *s (?A *v ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Perron_Frobenius_Aux.matrix_vect_scaleR",
     "?A *v ?a *\<^sub>R ?v = ?a *\<^sub>R (?A *v ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Perron_Frobenius_Aux.diagvector_mult_vector",
     "diagvector ?x *v ?y = (\<chi>i. ?x i * ?y $h i)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Perron_Frobenius_Aux.diagvector_mult",
     "diagvector ?x ** diagvector ?y = diagvector (%i. ?x i * ?y i)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Perron_Frobenius_Aux.matrix_add_rdistrib",
     "(?B + ?C) ** ?A = ?B ** ?A + ?C ** ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Perron_Frobenius_Aux.diagvector_mult_right",
     "?A ** diagvector ?x = (\<chi>i j. ?A $h i $h j * ?x j)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Perron_Frobenius_Aux.diagvector_mult_left",
     "diagvector ?x ** ?A = (\<chi>i j. ?x i * ?A $h i $h j)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty)))]
