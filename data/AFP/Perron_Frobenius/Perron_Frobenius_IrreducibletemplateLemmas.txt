   [("Perron_Frobenius_Irreducible.G_transpose",
     "fixed_mat.G (Finite_Cartesian_Product.transpose ?A) =
      (fixed_mat.G ?A)^-1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Perron_Frobenius_Irreducible.G_transpose_trancl",
     "(fixed_mat.G (Finite_Cartesian_Product.transpose ?A))^+ =
      ((fixed_mat.G ?A)^+)^-1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Perron_Frobenius_Irreducible.charpoly_of_real",
     "charpoly (HMA_Connect.map_matrix complex_of_real ?A) =
      map_poly complex_of_real (charpoly ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_app (template_hole 0, template_var 0)))),
    ("Perron_Frobenius_Irreducible.smult_eigen_value",
     "eigen_value ?A ?x ==> eigen_value (?a *k ?A) (?a * ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Perron_Frobenius_Irreducible.smult_eigen_vector",
     "eigen_vector ?A ?v ?x ==> eigen_vector (?a *k ?A) ?v (?a * ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Perron_Frobenius_Irreducible.order_charpoly_smult",
     "?k ~= 0 ==>
      order ?x (charpoly (?k *k ?A)) = order (?x / ?k) (charpoly ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app (template_hole 2, template_var 0)))))]
