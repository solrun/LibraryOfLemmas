   [("Roots_Unity.degree_root_unity", "degree (root_unity ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Roots_Unity.primitive_root_unity_explicit",
     "primitive_root_unity 1 ?x = (?x = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Roots_Unity.zero_root_unit", "(root_unity ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Roots_Unity.cis_add_pi", "cis (pi + ?x) = - cis ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Roots_Unity.zero_prod_root_unit",
     "(prod_root_unity ?ns = 0) = (0 : set ?ns)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Roots_Unity.root_unity_explicit", "(?x ^ 1 = 1) = (?x = 1)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Roots_Unity.cis_mult_cmod_id",
     "cis (Arg ?x) * complex_of_real (cmod ?x) = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Roots_Unity.primitive_root_unityD",
     "primitive_root_unity ?k ?x ==> ?k ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Roots_Unity.primitive_root_unity_explicit",
     "primitive_root_unity 2 ?x = (?x = - 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("Roots_Unity.primitive_root_unityD",
     "primitive_root_unity ?k ?x ==> ?x ^ ?k = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Roots_Unity.cis_plus_2pi", "cis (?x + 2 * pi) = cis ?x",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0))),
       template_app (template_hole 6, template_var 0))),
    ("Roots_Unity.cis_times_2pi", "cis (real ?n * 2 * pi) = 1",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))),
           template_hole 1)),
       template_hole 0)),
    ("Roots_Unity.poly_root_unity",
     "(poly (root_unity ?n) ?x = (0::?'a)) = (?x ^ ?n = (1::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0),
         template_hole 2),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Roots_Unity.rcis_mult_cis", "rcis ?n ?a * cis ?b = rcis ?n (?a + ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Roots_Unity.rcis_div_cis", "rcis ?n ?a / cis ?b = rcis ?n (?a - ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Roots_Unity.rcis_plus_2pi", "rcis ?y (?x + 2 * pi) = rcis ?y ?x",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0))),
       template_app
        (template_app (template_hole 6, template_var 1), template_var 0))),
    ("Roots_Unity.rcis_times_2pi",
     "rcis ?r (real ?n * 2 * pi) = complex_of_real ?r",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))),
           template_hole 1)),
       template_app (template_hole 0, template_var 1))),
    ("Roots_Unity.arg_rcis_cis",
     "0 < ?n ==> Arg (rcis ?n ?x) = Arg (cis ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Roots_Unity.degree_prod_root_unity",
     "0 ~: set ?ns ==> degree (prod_root_unity ?ns) = sum_list ?ns",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Roots_Unity.primitive_root_unity_dvd",
     "primitive_root_unity ?k ?x ==> (?x ^ ?n = 1) = (?k dvd ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Roots_Unity.primitive_root_unity_explicit",
     "primitive_root_unity 4 ?x = (?x : {\<i>, - \<i>})",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 6, template_hole 5)))),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 1, template_hole 2)),
             template_hole 0))))),
    ("Roots_Unity.order_monic_linear",
     "order ?x [:?y, 1::?'a:] = (if ?y + ?x = (0::?'a) then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_hole 6)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 1)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Roots_Unity.poly_prod_root_unity",
     "(poly (prod_root_unity ?ns) ?x = (0::?'a)) =
      (EX k:set ?ns. ?x ^ k = (1::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty))),
    ("Roots_Unity.root_unity_explicit",
     "(?x\<^sup>2 = 1) = (?x : {1, - 1})",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 0),
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)))),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 4)),
             template_hole 0))))),
    ("Roots_Unity.roots_of_unity", "?n ~= 0 ==> card {x. x ^ ?n = 1} = ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0))),
    ("Roots_Unity.rcis_inj_on", "?r ~= 0 ==> inj_on (rcis ?r) {0..<2 * pi}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_app (template_hole 5, template_hole 8),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_hole 0)))
           ))),
    ("Roots_Unity.order_root_unity",
     "?n ~= 0 ==>
      order ?x (root_unity ?n) = (if ?x ^ ?n = 1 then 1 else 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app (template_hole 5, template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_var 1)),
                     template_hole 1)),
                 template_hole 0),
               template_hole 7)
             )))),
    ("Roots_Unity.cis_plus_2pi_neq_1",
     "[| 0 < ?x; ?x < 2 * pi |] ==> cis ?x ~= 1",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5))),
            template_hole 4))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Roots_Unity.order_prod_root_unity",
     "0 ~: set ?ks ==>
      order ?x (prod_root_unity ?ks) =
      length (filter (%k. ?x ^ k = 1) ?ks)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_app (template_hole 8, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_var 1))))),
    ("Roots_Unity.primitive_root_unityD",
     "[| primitive_root_unity ?k ?x; ?k' ~= 0; ?x ^ ?k' = (1::?'a) |]
      ==> ?k <= ?k'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Roots_Unity.root_unity_explicit",
     "(?x ^ 4 = 1) = (?x : {1, - 1, \<i>, - \<i>})",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 0),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 7, template_hole 6))))),
         template_hole 5),
       template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 5),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 5)),
             template_app
              (template_app (template_hole 3, template_hole 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)),
                 template_hole 0))))))),
    ("Roots_Unity.roots_of_unity",
     "?n ~= 0 ==> {x. poly (root_unity ?n) x = 0} = {x. x ^ ?n = 1}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 6, t_empty)))),
    ("Roots_Unity.primitive_root_unity_exists",
     "[| ?k ~= 0; ?x ^ ?k = (1::?'a) |]
      ==> EX k'<=?k. primitive_root_unity k' ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0), template_var 1),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Roots_Unity.primitive_root_unity_simple_computation",
     "primitive_root_unity ?k ?x =
      (if ?k = 0 then False
       else ?x ^ ?k = (1::?'a) & (ALL i:{1..<?k}. ?x ^ i ~= (1::?'a)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_hole 9)),
               template_hole 8),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_var 1)),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 1)),
                 t_empty)))
           ))),
    ("Roots_Unity.root_unity_witness",
     "(PROD x<-?xs. [:- x, 1:]) = monom 1 ?n - 1 ==>
      (?x ^ ?n = 1) = (?x : set ?xs)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, t_empty), template_var 2)),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 9),
                template_var 1)),
            template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_hole 9),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Roots_Unity.roots_of_unity",
     "?n ~= 0 ==>
      (%i. cis (real i * 2 * pi / real ?n)) ` {0..<?n} = {x. x ^ ?n = 1}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_equation
        (template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 15),
             template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Roots_Unity.root_unity_decomp",
     "?n ~= 0 ==>
      root_unity ?n =
      (PROD i<-[0..<?n]. [:- cis (real i * 2 * pi / real ?n), 1:])",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 17))],
       template_equation
        (template_app (template_hole 15, template_var 0),
         template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, t_empty),
             template_app
              (template_app (template_hole 0, template_hole 17),
               template_var 0)))))),
    ("Roots_Unity.arg_eqD",
     "[| Arg (cis ?x) = Arg (cis ?y); - pi < ?x; ?x <= pi; - pi < ?y;
         ?y <= pi |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 1)),
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 0))),
        template_inequation
         (less_than, template_app (template_hole 2, template_hole 1),
          template_var 1),
        template_inequation (less_equals, template_var 1, template_hole 1),
        template_inequation
         (less_than, template_app (template_hole 2, template_hole 1),
          template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 1)],
       template_equation (template_var 1, template_var 0))),
    ("Roots_Unity.primitive_root_unity_explicit",
     "primitive_root_unity 3 ?x =
      (?x : {Complex (- 1 / 2) (sqrt 3 / 2),
             Complex (- 1 / 2) (- sqrt 3 / 2)})",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_hole 12,
             template_app (template_hole 11, template_hole 10))),
         template_var 0),
       template_app
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 10)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 11, template_hole 10)))),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 10))))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 10)))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 11, template_hole 10))))),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 10))))),
             template_hole 0))))),
    ("Roots_Unity.poly_roots_dvd",
     "[| ?p ~= 0; degree ?p = ?n; ?n <= card {x. poly ?p x = (0::?'a)};
         {x. poly ?p x = (0::?'a)} <= {x. poly ?q x = (0::?'a)} |]
      ==> ?p dvd ?q",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_equation
         (template_app (template_hole 8, template_var 2), template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 6, template_app (template_hole 5, t_empty))),
        template_inequation
         (less_equals, template_app (template_hole 5, t_empty),
          template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Roots_Unity.root_unity_explicit",
     "(?x ^ 3 = 1) =
      (?x : {1, Complex (- 1 / 2) (sqrt 3 / 2),
             Complex (- 1 / 2) (- sqrt 3 / 2)})",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 14, template_var 0),
             template_app
              (template_hole 13,
               template_app (template_hole 12, template_hole 11)))),
         template_hole 10),
       template_app
        (template_app (template_hole 9, template_var 0),
         template_app
          (template_app (template_hole 8, template_hole 10),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 11)))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 12, template_hole 11)))),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 11))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2, template_hole 11)))),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 12, template_hole 11))))),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 11))))),
               template_hole 0)))))),
    ("Roots_Unity.decompose_prod_root_unity",
     "[| ?p = prod_root_unity ?ks * ?f;
         decompose_prod_root_unity ?p = (?ks', ?g);
         !!x. cmod x = 1 ==> poly ?f x ~= 0; ?p ~= 0 |]
      ==> ?p = prod_root_unity ?ks' * ?f & ?f = ?g & set ?ks = set ?ks'",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 3)),
            template_var 2)),
        template_equation
         (template_app (template_hole 13, template_var 4),
          template_app
           (template_app (template_hole 12, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_negation
         (template_equation (template_var 4, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 17, template_var 4),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app (template_hole 15, template_var 1)),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 17, template_var 2),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Roots_Unity.decompose_prod_root_unity_main",
     "[| ?p = prod_root_unity ?ks * ?f;
         decompose_prod_root_unity_main ?p ?k = (?ks', ?g);
         !!x. cmod x = 1 ==> poly ?f x ~= 0;
         !!k'. ?k < k' ==> ~ root_unity k' dvd ?p |]
      ==> ?p = prod_root_unity ?ks' * ?f & ?f = ?g & set ?ks = set ?ks'",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 19,
              template_app (template_hole 18, template_var 4)),
            template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 5),
            template_var 2),
          template_app
           (template_app (template_hole 15, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 20, template_var 5),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app (template_hole 18, template_var 1)),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 20, template_var 3),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 4)),
                 template_app (template_hole 0, template_var 1))))
           )))]
