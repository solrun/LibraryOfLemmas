   [("Perron_Frobenius_Aux.norm1_ge_0", "0 <= norm1 ?v",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Perron_Frobenius_Aux.norm1_ge_norm", "norm ?v <= norm1 ?v",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Perron_Frobenius_Aux.norm1_cont", "isCont norm1 ?v",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0)
         )),
    ("Perron_Frobenius_Aux.abs_norm1", "\<bar>norm1 ?v\<bar> = norm1 ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Perron_Frobenius_Aux.diagvector_const",
     "diagvector (%x. ?k) = mat ?k",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Perron_Frobenius_Aux.continuous_matpow",
     "continuous_on ?R (%A. matpow A ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)
         )),
    ("Perron_Frobenius.convexS",
     "real_non_neg_mat ?A ==> convex (??.Perron_Frobenius.S ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Perron_Frobenius.boundedS",
     "real_non_neg_mat ?A ==> bounded (??.Perron_Frobenius.S ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Perron_Frobenius.closedS",
     "real_non_neg_mat ?A ==> closed (??.Perron_Frobenius.S ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Perron_Frobenius.compactS",
     "real_non_neg_mat ?A ==> compact (??.Perron_Frobenius.S ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Perron_Frobenius_Aux.norm1_0_iff", "(norm1 ?v = 0) = (?v = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Perron_Frobenius.perron_frobenius_eigen_value",
     "real_non_neg_mat ?A ==>
      eigen_value ?A (complex_of_real (HMA_Connect.spectral_radius ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Perron_Frobenius.non_emptyS",
     "real_non_neg_mat ?A ==> ??.Perron_Frobenius.S ?A ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Perron_Frobenius.max_v_ev",
     "real_non_neg_mat ?A ==> norm1 (??.Perron_Frobenius.max_v ?A) = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Perron_Frobenius_Aux.tendsto_matrix_vector_mult",
     "((*v) ?A \<longlongrightarrow> ?A *v ?v) (at ?v within ?S)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Perron_Frobenius_Aux.tendsto_matrix_matrix_mult",
     "((**) ?A \<longlongrightarrow> ?A ** ?B) (at ?B within ?S)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Perron_Frobenius_Aux.diagvector_eq_mat",
     "(diagvector ?x = mat ?a) = (?x = (%x. ?a))",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, t_empty))),
    ("Perron_Frobenius_Aux.norm1_scaleR",
     "norm1 (?r *\<^sub>R ?v) = \<bar>?r\<bar> * norm1 ?v",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Perron_Frobenius_Aux.norm_smult",
     "norm (?a *s ?x) = \<bar>?a\<bar> * norm ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Perron_Frobenius.max_v_ev",
     "real_non_neg_mat ?A ==>
      eigen_vector ?A (??.Perron_Frobenius.max_v ?A)
       (??.Perron_Frobenius.max_ev ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Perron_Frobenius.max_v_ev",
     "real_non_neg_mat ?A ==>
      cmod (??.Perron_Frobenius.max_ev ?A) =
      HMA_Connect.spectral_radius ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Perron_Frobenius_Aux.spectral_radius_max",
     "eigen_value ?A ?v ==> cmod ?v <= HMA_Connect.spectral_radius ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Perron_Frobenius_Aux.norm1_nonzero", "?v ~= 0 ==> 0 < norm1 ?v",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Perron_Frobenius_Aux.inverse_power_tendsto_zero",
     "(%x. inverse (of_nat x ^ Suc ?d)) \<longlonglongrightarrow> (0::?'a)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 7, t_empty),
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)
         )),
    ("Perron_Frobenius_Aux.vector_smult_distrib",
     "?A *v (?a *s ?x) = ?a *s (?A *v ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Perron_Frobenius_Aux.matrix_vect_scaleR",
     "?A *v ?a *\<^sub>R ?v = ?a *\<^sub>R (?A *v ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Perron_Frobenius_Aux.real_non_neg_matD",
     "real_non_neg_mat ?A ==> ?A $h ?i $h ?j : \<real>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Perron_Frobenius.rnn",
     "real_non_neg_mat ?A ==> ?A $h ?i $h ?j : \<real>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Perron_Frobenius_Aux.real_non_neg_matD",
     "real_non_neg_mat ?A ==> 0 <= Re (?A $h ?i $h ?j)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Perron_Frobenius.rnn",
     "real_non_neg_mat ?A ==> 0 <= Re (?A $h ?i $h ?j)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Perron_Frobenius_Aux.cmod_eq_Re",
     "cmod ?x = Re ?x ==> complex_of_real (Re ?x) = ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_var 0))),
    ("Perron_Frobenius_Aux.div_lt_nat", "?j < ?x * ?y ==> ?j div ?x < ?y",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Perron_Frobenius_Aux.diagvector_mult_vector",
     "diagvector ?x *v ?y = (\<chi>i. ?x i * ?y $h i)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Perron_Frobenius_Aux.diagvector_mult",
     "diagvector ?x ** diagvector ?y = diagvector (%i. ?x i * ?y i)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Perron_Frobenius_Aux.matrix_add_rdistrib",
     "(?B + ?C) ** ?A = ?B ** ?A + ?C ** ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Perron_Frobenius_Aux.spectral_radius_ev",
     "EX ev v.
         eigen_vector ?A v ev & cmod ev = HMA_Connect.spectral_radius ?A",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Perron_Frobenius.perron_frobenius",
     "real_non_neg_mat ?A ==>
      EX v. eigen_vector ?A v
             (complex_of_real (HMA_Connect.spectral_radius ?A)) &
            real_non_neg_vec v",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Perron_Frobenius.perron_frobenius_both",
     "real_non_neg_mat ?A ==>
      EX v. eigen_vector ?A v
             (complex_of_real (HMA_Connect.spectral_radius ?A)) &
            real_non_neg_vec v",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Perron_Frobenius_Aux.normalize_eigen_vector",
     "eigen_vector ?A ?v ?ev ==>
      eigen_vector ?A ((1 / norm1 ?v) *\<^sub>R ?v) ?ev",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app (template_hole 0, template_var 1))),
                 template_var 1)),
             template_var 0)
           ))),
    ("Perron_Frobenius_Aux.normalize_eigen_vector",
     "eigen_vector ?A ?v ?ev ==> norm1 ((1 / norm1 ?v) *\<^sub>R ?v) = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app (template_hole 3, template_var 1))),
             template_var 1)),
         template_hole 0))),
    ("Perron_Frobenius_Aux.nonneg_mat_power",
     "[| ?A : carrier_mat ?n ?n; nonneg_mat ?A |]
      ==> nonneg_mat (?A ^\<^sub>m ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Perron_Frobenius.rv_0",
     "real_non_neg_mat ?A ==>
      ((\<chi>i. complex_of_real (?v $h i)) = 0) = (?v = 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_bimplication
        (template_equation
          (template_app (template_hole 5, t_empty), template_hole 2),
         template_equation (template_var 0, template_hole 0)))),
    ("Perron_Frobenius_Aux.diagvector_mult_right",
     "?A ** diagvector ?x = (\<chi>i j. ?A $h i $h j * ?x j)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Perron_Frobenius_Aux.diagvector_mult_left",
     "diagvector ?x ** ?A = (\<chi>i j. ?x i * ?A $h i $h j)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Perron_Frobenius.B_norm",
     "real_non_neg_mat ?A ==>
      ??.Perron_Frobenius.B ?A $h ?i $h ?j = cmod (?A $h ?i $h ?j)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Perron_Frobenius_Aux.tendsto_matpower",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. matpow (?f x) ?n) \<longlongrightarrow> matpow ?a ?n) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Perron_Frobenius_Aux.poly_times_exp_tendsto_zero",
     "norm ?b < 1 ==>
      (%x. of_nat x ^ ?k * ?b ^ x) \<longlonglongrightarrow> (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 1),
          template_hole 7)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Perron_Frobenius_Aux.jordan_nf_root_char_poly",
     "[| jordan_nf ?A ?n_as; (?m, ?lam) : set ?n_as |]
      ==> poly (char_poly ?A) ?lam = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_var 0),
         template_hole 0))),
    ("Perron_Frobenius_Aux.trancl_image",
     "(?i, ?j) : ?R^+ ==> (?f ?i, ?f ?j) : (map_prod ?f ?f ` ?R)^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_var 0, template_var 3)),
                 template_app (template_var 0, template_var 2))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("Perron_Frobenius_Aux.det_dim_1",
     "[| ?A : carrier_mat ?n ?n; ?n = 1 |]
      ==> Determinant.det ?A = ?A $$ (0, 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 0))
            ),
        template_equation (template_var 0, template_hole 5)],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 0))))),
    ("Perron_Frobenius.rv_mult",
     "real_non_neg_mat ?A ==>
      ?A *v (\<chi>i. complex_of_real (?v $h i)) =
      (\<chi>i. complex_of_real ((??.Perron_Frobenius.B ?A *v ?v) $h i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("Perron_Frobenius_Aux.nonneg_matD",
     "[| nonneg_mat ?A; ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> (0::?'a) <= ?A $$ (?i, ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 2))],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Perron_Frobenius_Aux.inj_trancl_image",
     "inj ?f ==>
      ((?f ?i, ?f ?j) : (map_prod ?f ?f ` ?R)^+) = ((?i, ?j) : ?R^+)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_var 3, template_var 2)),
               template_app (template_var 3, template_var 1))),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 3)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Perron_Frobenius_Aux.poly_tendsto_pinfty",
     "[| 0 < lead_coeff ?p; degree ?p ~= 0 |]
      ==> (%x. ereal (poly ?p (real x)))
          \<longlonglongrightarrow> \<infinity>",
     template_implication
      ([template_inequation
         (less_than, template_hole 12,
          template_app
           (template_app (template_hole 11, template_var 0),
            template_app (template_hole 10, template_var 0))),
        template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 0),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Perron_Frobenius_Aux.tendsto_mat_mult",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x ** ?g x) \<longlongrightarrow> ?a ** ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app (template_hole 5, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Perron_Frobenius_Aux.nonneg_mat_mult",
     "[| nonneg_mat ?A; nonneg_mat ?B; ?A : carrier_mat ?nr ?n;
         ?B : carrier_mat ?n ?nc |]
      ==> nonneg_mat (?A * ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 4)),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))
           ))),
    ("Perron_Frobenius.mult_B_mono",
     "[| real_non_neg_mat ?A; !!i. ?w $h i <= ?v $h i |]
      ==> (??.Perron_Frobenius.B ?A *v ?w) $h ?i
          <= (??.Perron_Frobenius.B ?A *v ?v) $h ?i",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 1)),
           template_var 0)))),
    ("Perron_Frobenius.cont_f",
     "[| real_non_neg_mat ?A;
         !!v. v : ??.Perron_Frobenius.S ?A ==>
              ?A *v (\<chi>i. complex_of_real (v $h i)) ~= 0 |]
      ==> continuous_on (??.Perron_Frobenius.S ?A)
           (??.Perron_Frobenius.f ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 9, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Perron_Frobenius.image_f",
     "[| real_non_neg_mat ?A;
         !!v. v : ??.Perron_Frobenius.S ?A ==>
              ?A *v (\<chi>i. complex_of_real (v $h i)) ~= 0 |]
      ==> ??.Perron_Frobenius.f ?A ` ??.Perron_Frobenius.S ?A
          <= ??.Perron_Frobenius.S ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 10, template_var 0)),
         template_app (template_hole 10, template_var 0)))),
    ("Perron_Frobenius.perron_frobenius_positive_ev",
     "[| real_non_neg_mat ?A;
         !!v. v : ??.Perron_Frobenius.S ?A ==>
              ?A *v (\<chi>i. complex_of_real (v $h i)) ~= 0 |]
      ==> EX v. eigen_vector ?A v
                 (complex_of_real (HMA_Connect.spectral_radius ?A)) &
                real_non_neg_vec v",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Perron_Frobenius.normB_S",
     "[| real_non_neg_mat ?A;
         !!v. v : ??.Perron_Frobenius.S ?A ==>
              ?A *v (\<chi>i. complex_of_real (v $h i)) ~= 0;
         ?v : ??.Perron_Frobenius.S ?A |]
      ==> norm1 (??.Perron_Frobenius.B ?A *v ?v) ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 12, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Perron_Frobenius_Aux.det_dim_2",
     "[| ?A : carrier_mat ?n ?n; ?n = 2 |]
      ==> Determinant.det ?A =
          ?A $$ (0, 0) * ?A $$ (1, 1) - ?A $$ (0, 1) * ?A $$ (1, 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app (template_hole 12, template_var 0),
                template_var 0))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_hole 8)))],
       template_equation
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 1))),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_hole 0),
                   template_hole 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_hole 0),
                 template_hole 1)))))))]
