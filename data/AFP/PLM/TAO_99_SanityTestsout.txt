Loading theory "Draft.TAO_1_Embedding" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms" via "Draft.TAO_6_Identifiable" via "Draft.TAO_5_MetaSolver" via "Draft.TAO_4_BasicDefinitions" via "Draft.TAO_3_Quantifiable" via "Draft.TAO_2_Semantics")
Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms" via "Draft.TAO_6_Identifiable" via "Draft.TAO_5_MetaSolver" via "Draft.TAO_4_BasicDefinitions" via "Draft.TAO_3_Quantifiable" via "Draft.TAO_2_Semantics")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.128s elapsed time, 0.494s cpu time, 0.050s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
structure Eisbach_Rule_Insts: sig end
### theory "HOL-Library.Nat_Bijection"
### 0.337s elapsed time, 1.317s cpu time, 0.125s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.210s elapsed time, 0.822s cpu time, 0.075s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Eisbach.Eisbach"
### 0.533s elapsed time, 2.087s cpu time, 0.187s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.037s elapsed time, 3.988s cpu time, 0.711s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.997s elapsed time, 3.685s cpu time, 0.728s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.TAO_1_Embedding"
### 1.670s elapsed time, 6.078s cpu time, 0.915s GC time
Loading theory "Draft.TAO_2_Semantics" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms" via "Draft.TAO_6_Identifiable" via "Draft.TAO_5_MetaSolver" via "Draft.TAO_4_BasicDefinitions" via "Draft.TAO_3_Quantifiable")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale Semantics
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.931s elapsed time, 6.019s cpu time, 0.943s GC time
Loading theory "Draft.Templates" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.TAO_2_Semantics"
### 0.628s elapsed time, 1.297s cpu time, 0.095s GC time
Loading theory "Draft.TAO_3_Quantifiable" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms" via "Draft.TAO_6_Identifiable" via "Draft.TAO_5_MetaSolver" via "Draft.TAO_4_BasicDefinitions")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.110s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TAO_99_SanityTestsMoreTemplates")
class quantifiable = type +
  fixes forall :: "('a => \<o>) => \<o>"
  assumes
    "quantifiable_T8":
      "!!w \<psi>.
          [\<^bold>\<forall>x. \<psi> x in w] = (ALL x. [\<psi> x in w])"
instantiation
  \<nu> :: quantifiable
  forall_\<nu> == forall :: (\<nu> => \<o>) => \<o>
instantiation
  \<o> :: quantifiable
  forall_\<o> == forall :: (\<o> => \<o>) => \<o>
instantiation
  \<Pi>\<^sub>1 :: quantifiable
  forall_\<Pi>\<^sub>1 == forall :: (\<Pi>\<^sub>1 => \<o>) => \<o>
instantiation
  \<Pi>\<^sub>2 :: quantifiable
  forall_\<Pi>\<^sub>2 == forall :: (\<Pi>\<^sub>2 => \<o>) => \<o>
instantiation
  \<Pi>\<^sub>3 :: quantifiable
  forall_\<Pi>\<^sub>3 == forall :: (\<Pi>\<^sub>3 => \<o>) => \<o>
### theory "Draft.TAO_3_Quantifiable"
### 0.093s elapsed time, 0.186s cpu time, 0.000s GC time
Loading theory "Draft.TAO_4_BasicDefinitions" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms" via "Draft.TAO_6_Identifiable" via "Draft.TAO_5_MetaSolver")
### theory "Draft.TAO_4_BasicDefinitions"
### 0.180s elapsed time, 0.382s cpu time, 0.055s GC time
Loading theory "Draft.TAO_5_MetaSolver" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms" via "Draft.TAO_6_Identifiable")
locale MetaSolver
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.520s elapsed time, 1.064s cpu time, 0.055s GC time
### theory "Draft.TAO_5_MetaSolver"
### 0.440s elapsed time, 0.721s cpu time, 0.039s GC time
Loading theory "Draft.TAO_6_Identifiable" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests" via "Draft.TAO_7_Axioms")
class identifiable = type +
  fixes identity :: "'a => 'a => \<o>"
  assumes
    "l_identity":
      "!!w x y \<phi>.
          [| [x \<^bold>= y in w]; [\<phi> x in w] |] ==> [\<phi> y in w]"
instantiation
  \<kappa> :: identifiable
  identity_\<kappa> == identity :: \<kappa> => \<kappa> => \<o>
instantiation
  \<nu> :: identifiable
  identity_\<nu> == identity :: \<nu> => \<nu> => \<o>
instantiation
  \<Pi>\<^sub>1 :: identifiable
  identity_\<Pi>\<^sub>1 == identity ::
    \<Pi>\<^sub>1 => \<Pi>\<^sub>1 => \<o>
instantiation
  \<Pi>\<^sub>2 :: identifiable
  identity_\<Pi>\<^sub>2 == identity ::
    \<Pi>\<^sub>2 => \<Pi>\<^sub>2 => \<o>
instantiation
  \<Pi>\<^sub>3 :: identifiable
  identity_\<Pi>\<^sub>3 == identity ::
    \<Pi>\<^sub>3 => \<Pi>\<^sub>3 => \<o>
instantiation
  \<o> :: identifiable
  identity_\<o> == identity :: \<o> => \<o> => \<o>
### theory "Draft.TAO_6_Identifiable"
### 0.223s elapsed time, 0.223s cpu time, 0.000s GC time
Loading theory "Draft.TAO_7_Axioms" (required by "Draft.TAO_99_SanityTestsMoreTemplates" via "Draft.TAO_99_SanityTests")
locale Axioms
Proofs for inductive predicate(s) "SimpleExOrEnc"
  Proving monotonicity ...
### theory "Draft.TAO_7_Axioms"
### 0.195s elapsed time, 0.220s cpu time, 0.034s GC time
Loading theory "Draft.TAO_99_SanityTests" (required by "Draft.TAO_99_SanityTestsMoreTemplates")
locale SanityTests
### theory "Draft.TAO_99_SanityTests"
### 0.057s elapsed time, 0.058s cpu time, 0.000s GC time
Loading theory "Draft.TAO_99_SanityTestsMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.TAO_99_SanityTestsMoreTemplates"
### 0.345s elapsed time, 0.486s cpu time, 0.041s GC time
val it = (): unit
