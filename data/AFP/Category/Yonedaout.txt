Loading theory "HOL-Library.FuncSet" (required by "Draft.YonedaMoreTemplates" via "Draft.Yoneda" via "Draft.HomFunctors" via "Draft.SetCat" via "Draft.Cat")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.529s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.216s elapsed time, 0.886s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.299s cpu time, 0.118s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.394s elapsed time, 1.567s cpu time, 0.118s GC time
Loading theory "Draft.Cat" (required by "Draft.YonedaMoreTemplates" via "Draft.Yoneda" via "Draft.HomFunctors" via "Draft.SetCat")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale category
  fixes CC :: "('b, 'a, 'c) category_scheme"  (structure)
  assumes "category CC"
### theory "Draft.Cat"
### 0.362s elapsed time, 1.417s cpu time, 0.192s GC time
Loading theory "Draft.Functors" (required by "Draft.YonedaMoreTemplates" via "Draft.Yoneda" via "Draft.HomFunctors")
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.942s elapsed time, 3.540s cpu time, 0.835s GC time
Loading theory "Draft.SetCat" (required by "Draft.YonedaMoreTemplates" via "Draft.Yoneda" via "Draft.HomFunctors")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale two_cats
  fixes AA :: "('o1, 'a1, 'm1) category_scheme"  (structure)
    and BB :: "('o2, 'a2, 'm2) category_scheme"  (structure)
    and preserves_dom :: "('o1, 'a1, 'o2, 'a2) functor => bool"
    and preserves_cod :: "('o1, 'a1, 'o2, 'a2) functor => bool"
    and preserves_id :: "('o1, 'a1, 'o2, 'a2) functor => bool"
    and preserves_comp :: "('o1, 'a1, 'o2, 'a2) functor => bool"
  assumes "two_cats AA BB"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
locale functor
  fixes AA :: "('a, 'b, 'c) category_scheme"  (structure)
    and BB :: "('d, 'e, 'f) category_scheme"  (structure)
    and preserves_dom :: "('a, 'b, 'd, 'e) functor => bool"
    and preserves_cod :: "('a, 'b, 'd, 'e) functor => bool"
    and preserves_id :: "('a, 'b, 'd, 'e) functor => bool"
    and preserves_comp :: "('a, 'b, 'd, 'e) functor => bool"
    and F :: "('a, 'b, 'd, 'e) functor"  (structure)
  assumes "functor AA BB F"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
locale one_cat
  fixes AA :: "('a, 'b, 'c) category_scheme"  (structure)
    and BB :: "('a, 'b, 'c) category_scheme"  (structure)
    and preserves_dom :: "('a, 'b, 'a, 'b) functor => bool"
    and preserves_cod :: "('a, 'b, 'a, 'b) functor => bool"
    and preserves_id :: "('a, 'b, 'a, 'b) functor => bool"
    and preserves_comp :: "('a, 'b, 'a, 'b) functor => bool"
  assumes "one_cat AA BB"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
### theory "HOL-Library.Stream"
### 1.046s elapsed time, 3.960s cpu time, 0.838s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Functors"
### 0.660s elapsed time, 2.392s cpu time, 0.645s GC time
Loading theory "Draft.NatTrans" (required by "Draft.YonedaMoreTemplates" via "Draft.Yoneda")
Found termination order: "size <*mlex*> {}"
locale natural_transformation
  fixes AA :: "('a, 'b, 'c) category_scheme"  (structure)
    and BB :: "('d, 'e, 'f) category_scheme"  (structure)
    and preserves_dom :: "('a, 'b, 'd, 'e) functor => bool"
    and preserves_cod :: "('a, 'b, 'd, 'e) functor => bool"
    and preserves_id :: "('a, 'b, 'd, 'e) functor => bool"
    and preserves_comp :: "('a, 'b, 'd, 'e) functor => bool"
    and F :: "('a, 'b, 'd, 'e) functor"
    and G :: "('a, 'b, 'd, 'e) functor"
    and u :: "'a => 'e"
  assumes "natural_transformation AA BB F G u"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
Found termination order: "size <*mlex*> {}"
locale endoNT
  fixes AA :: "('a, 'b, 'c) category_scheme"  (structure)
    and BB :: "('a, 'b, 'c) category_scheme"  (structure)
    and preserves_dom :: "('a, 'b, 'a, 'b) functor => bool"
    and preserves_cod :: "('a, 'b, 'a, 'b) functor => bool"
    and preserves_id :: "('a, 'b, 'a, 'b) functor => bool"
    and preserves_comp :: "('a, 'b, 'a, 'b) functor => bool"
    and F :: "('a, 'b, 'a, 'b) functor"
    and G :: "('a, 'b, 'a, 'b) functor"
    and u :: "'a => 'b"
  assumes "endoNT AA BB F G u"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
### theory "Draft.SetCat"
### 0.373s elapsed time, 1.328s cpu time, 0.142s GC time
Loading theory "Draft.HomFunctors" (required by "Draft.YonedaMoreTemplates" via "Draft.Yoneda")
### theory "Draft.NatTrans"
### 0.129s elapsed time, 0.397s cpu time, 0.063s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale into_set
  fixes preserves_dom :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and preserves_cod :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and preserves_id :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and preserves_comp :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and AA :: "('o, 'a, 'm) category_scheme"  (structure)
    and BB :: "('a set, 'a set_arrow) category"  (structure)
    and U :: "'a set"
    and Set :: "('a set, 'a set_arrow) category"
    and
    homf :: "'o => ('o, 'a, 'a set, 'a set_arrow) functor"
      (\<open>Hom'(_,'_')\<close>)
  assumes "into_set AA BB"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
    and "U == UNIV"
    and "Set == set_cat U"
    and
    "!!A. Hom(A,_) ==
          (| om = restrict (hom AA A) (Ob),
             am = \<lambda>f\<in>Ar.
                     (| set_dom = Hom A (Dom f),
                        set_func = restrict ((\<bullet>) f) (Hom A (Dom f)),
                        set_cod = Hom A (Cod f) |) |)"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.HomFunctors"
### 0.283s elapsed time, 0.614s cpu time, 0.066s GC time
Loading theory "Draft.Yoneda" (required by "Draft.YonedaMoreTemplates")
Found termination order: "size <*mlex*> {}"
locale Yoneda
  fixes AA :: "('o, 'a, 'm) category_scheme"  (structure)
    and BB :: "('a set, 'a set_arrow) category"  (structure)
    and preserves_dom :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and preserves_cod :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and preserves_id :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and preserves_comp :: "('o, 'a, 'a set, 'a set_arrow) functor => bool"
    and F :: "('o, 'a, 'a set, 'a set_arrow) functor"  (structure)
    and U :: "'a set"
    and Set :: "('a set, 'a set_arrow) category"
    and
    homf :: "'o => ('o, 'a, 'a set, 'a set_arrow) functor"
      (\<open>Hom'(_,'_')\<close>)
    and
    sandwich :: "'o => 'a => 'o => 'a set_arrow"
      (\<open>\<sigma>'(_,_')\<close>)
    and
    unsandwich :: "'o => ('o => 'a set_arrow) => 'a"
      (\<open>\<sigma>\<^sup>\<leftarrow>'(_,_')\<close>)
  assumes "PROP Yoneda AA BB F"
  defines
    "!!G. preserves_dom G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Dom f) =
             Dom\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_cod G ==
          ALL f:Ar.
             G \<^bsub>\<o>\<^esub> (Cod f) =
             Cod\<^bsub>BB\<^esub> G \<^bsub>\<a>\<^esub> f"
    and
    "!!G. preserves_id G ==
          ALL A:Ob.
             G \<^bsub>\<a>\<^esub> (Id A) =
             Id\<^bsub>BB\<^esub> G \<^bsub>\<o>\<^esub> A"
    and
    "!!G. preserves_comp G ==
          ALL f:Ar.
             ALL g:Ar.
                Cod f = Dom g -->
                G \<^bsub>\<a>\<^esub> (g \<bullet> f) =
                G \<^bsub>\<a>\<^esub> g \<bullet>\<^bsub>BB\<^esub>
                G \<^bsub>\<a>\<^esub> f"
    and "U == UNIV"
    and "Set == set_cat U"
    and
    "!!A. Hom(A,_) ==
          (| om = restrict (hom AA A) (Ob),
             am = \<lambda>f\<in>Ar.
                     (| set_dom = Hom A (Dom f),
                        set_func = restrict ((\<bullet>) f) (Hom A (Dom f)),
                        set_cod = Hom A (Cod f) |) |)"
    and
    "!!A a.
        \<sigma>(A,a) ==
        \<lambda>B\<in>Ob.
           (| set_dom = Hom A B,
              set_func =
                \<lambda>f\<in>Hom A B.
                   set_func (F \<^bsub>\<a>\<^esub> f) a,
              set_cod = F \<^bsub>\<o>\<^esub> B |)"
    and "!!A u. \<sigma>\<^sup>\<leftarrow>(A,u) == set_func (u A) (Id A)"
### theory "HOL-Library.Tree"
### 2.018s elapsed time, 6.538s cpu time, 1.098s GC time
Loading theory "Draft.Templates" (required by "Draft.YonedaMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Yoneda"
### 0.333s elapsed time, 0.689s cpu time, 0.055s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.099s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.YonedaMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.487s elapsed time, 0.539s cpu time, 0.065s GC time
Loading theory "Draft.YonedaMoreTemplates"
val templateLemmas =
   [("Yoneda.bij_betw_eq",
     "bij_betw ?f ?A ?B =
      (inj_on ?f ?A &
       (ALL y:?B. EX x:?A. ?f x = y) & (ALL x:?A. ?f x : ?B))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 4, template_var 0), t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)))))]:
   (string * thm * template) list
### theory "Draft.YonedaMoreTemplates"
### 0.563s elapsed time, 1.230s cpu time, 0.761s GC time
val it = (): unit
