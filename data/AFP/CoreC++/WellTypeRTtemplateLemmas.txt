   [("WellTypeRT.typeof_NT",
     "?P \<turnstile> typeof\<^bsub>?h\<^esub> ?v = \<lfloor>NT\<rfloor> ==>
      ?v = Null",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1),
            template_var 0),
          template_app (template_hole 3, template_hole 2))],
       template_equation (template_var 0, template_hole 0))),
    ("WellTypeRT.typeof_Void",
     "?P \<turnstile> typeof\<^bsub>?h\<^esub> ?v =
      \<lfloor>Void\<rfloor> ==>
      ?v = Unit",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1),
            template_var 0),
          template_app (template_hole 3, template_hole 2))],
       template_equation (template_var 0, template_hole 0))),
    ("WellTypeRT.WT_implies_WTrt",
     "?P,?E \<turnstile> ?e :: ?T ==> ?P,?E,?h \<turnstile> ?e : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTs_implies_WTrts",
     "?P,?E \<turnstile> ?es [::] ?Ts ==>
      ?P,?E,?h \<turnstile> ?es [:] ?Ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTrts_same_length",
     "?P,?E,?h \<turnstile> ?es [:] ?Ts ==> length ?es = length ?Ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("WellTypeRT.type_eq_type",
     "typeof ?v = \<lfloor>?T\<rfloor> ==>
      ?P \<turnstile> typeof\<^bsub>?h\<^esub> ?v = \<lfloor>?T\<rfloor>",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app (template_hole 1, template_var 2)))),
    ("WellTypeRT.typeof_Boolean",
     "?P \<turnstile> typeof\<^bsub>?h\<^esub> ?v =
      \<lfloor>Boolean\<rfloor> ==>
      EX b. ?v = Bool b",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("WellTypeRT.typeof_Integer",
     "?P \<turnstile> typeof\<^bsub>?h\<^esub> ?v =
      \<lfloor>Integer\<rfloor> ==>
      EX i. ?v = Intg i",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_app (template_hole 4, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("WellTypeRT.WTrt_env_mono",
     "[| ?P,?E,?h \<turnstile> ?e : ?T; ?E \<subseteq>\<^sub>m ?E' |]
      ==> ?P,?E',?h \<turnstile> ?e : ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("WellTypeRT.WTrts_Val",
     "(?P,?E,?h \<turnstile> map Val ?vs [:] ?Ts) =
      (map ?P \<turnstile> typeof\<^bsub>?h\<^esub> ?vs = map Some ?Ts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> new ?C : ?T;
         [| ?T = Class ?C; is_class ?P ?C |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> throw ?e : ?T;
         !!T'. [| ?P,?E,?h \<turnstile> ?e : T'; is_refT T' |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?V:=?e : ?T;
         !!T'. [| ?E ?V = \<lfloor>?T\<rfloor>;
                  ?P,?E,?h \<turnstile> ?e : T';
                  ?P \<turnstile> T' \<le> ?T |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> while (?e) ?c : ?T;
         !!T. [| ?T = Void; ?P,?E,?h \<turnstile> ?e : Boolean;
                 ?P,?E,?h \<turnstile> ?c : T |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> Cast ?C ?e : ?T;
         !!T. [| ?T = Class ?C; ?P,?E,?h \<turnstile> ?e : T; is_refT T;
                 is_class ?P ?C |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> \<lparr>?C\<rparr>?e : ?T;
         !!T. [| ?T = Class ?C; ?P,?E,?h \<turnstile> ?e : T; is_refT T;
                 is_class ?P ?C |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> if (?e) ?e\<^sub>1 else ?e\<^sub>2 : ?T;
         [| ?P,?E,?h \<turnstile> ?e : Boolean;
            ?P,?E,?h \<turnstile> ?e\<^sub>1 : ?T;
            ?P,?E,?h \<turnstile> ?e\<^sub>2 : ?T |]
         ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_hole 0)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 1)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 2),
                     template_var 1)
                   )],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("WellTypeRT.typeof_Class_Subo",
     "?P \<turnstile> typeof\<^bsub>?h\<^esub> ?v =
      \<lfloor>Class ?C\<rfloor> ==>
      EX a Cs D S.
         ?v = Ref (a, Cs) &
         ?h a = \<lfloor>(D, S)\<rfloor> & Subobjs ?P D Cs & last Cs = ?C",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 16, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 15,
            template_app (template_hole 14, template_var 0)))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<bullet>?F{?Cs} : ?T;
         !!C. [| ?P,?E,?h \<turnstile> ?e : Class C; ?Cs ~= [];
                 ?P \<turnstile> C has least ?F:?T via ?Cs |]
              ==> ?Pa;
         ?P,?E,?h \<turnstile> ?e : NT ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 8, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_hole 0)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<^sub>1 \<guillemotleft>?bop\<guillemotright> ?e\<^sub>2 : ?T;
         !!T\<^sub>1 T\<^sub>2.
            [| ?P,?E,?h \<turnstile> ?e\<^sub>1 : T\<^sub>1;
               ?P,?E,?h \<turnstile> ?e\<^sub>2 : T\<^sub>2;
               case ?bop of Eq => ?T = Boolean
               | Add =>
                   T\<^sub>1 = Integer &
                   T\<^sub>2 = Integer & ?T = Integer |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> Call ?e None ?M ?es : ?T;
         !!C Ts m Cs Ts'.
            [| ?P,?E,?h \<turnstile> ?e : Class C;
               ?P \<turnstile> C has least ?M = (Ts, ?T, m) via Cs;
               ?P,?E,?h \<turnstile> ?es [:] Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?Pa;
         !!Ts. [| ?P,?E,?h \<turnstile> ?e : NT;
                  ?P,?E,?h \<turnstile> ?es [:] Ts |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 13, template_var 4),
                      template_hole 12),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> ?e\<bullet>?F{?Cs} := ?v : ?T;
         !!C T'.
            [| ?P,?E,?h \<turnstile> ?e : Class C; ?Cs ~= [];
               ?P \<turnstile> C has least ?F:?T via ?Cs;
               ?P,?E,?h \<turnstile> ?v : T'; ?P \<turnstile> T' \<le> ?T |]
            ==> ?Pa;
         !!T'. [| ?P,?E,?h \<turnstile> ?e : NT;
                  ?P,?E,?h \<turnstile> ?v : T';
                  ?P \<turnstile> T' \<le> ?T |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_elim_cases",
     "[| ?P,?E,?h \<turnstile> Call ?e \<lfloor>?C\<rfloor> ?M ?es : ?T;
         !!C' Ts m Cs Ts'.
            [| ?P,?E,?h \<turnstile> ?e : Class C';
               ?P \<turnstile> Path C' to ?C unique;
               ?P \<turnstile> ?C has least ?M = (Ts, ?T, m) via Cs;
               ?P,?E,?h \<turnstile> ?es [:] Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?Pa;
         !!Ts. [| ?P,?E,?h \<turnstile> ?e : NT;
                  ?P,?E,?h \<turnstile> ?es [:] Ts |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 14, template_var 5),
                      template_app (template_hole 13, template_var 4)),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("WellTypeRT.WTrt_inducts",
     "[| ?P,?x1a,?x2a \<turnstile> ?x3a : ?x4a;
         !!C E h. is_class ?P C ==> ?P1.0 E h (new C) (Class C);
         !!E h e T C.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E h (Cast C e) (Class C);
         !!E h e T C.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E h (\<lparr>C\<rparr>e) (Class C);
         !!h v T E.
            ?P \<turnstile> typeof\<^bsub>h\<^esub> v =
            \<lfloor>T\<rfloor> ==>
            ?P1.0 E h (Val v) T;
         !!E V T h. E V = \<lfloor>T\<rfloor> ==> ?P1.0 E h (Var V) T;
         !!E h e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2 bop T.
            [| ?P,E,h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E h e\<^sub>1 T\<^sub>1;
               ?P,E,h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E h e\<^sub>2 T\<^sub>2;
               case bop of Eq => T = Boolean
               | Add =>
                   T\<^sub>1 = Integer &
                   T\<^sub>2 = Integer & T = Integer |]
            ==> ?P1.0 E h
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 T;
         !!E V T h e T'.
            [| E V = \<lfloor>T\<rfloor>; ?P,E,h \<turnstile> e : T';
               ?P1.0 E h e T'; ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (V:=e) T;
         !!E h e C Cs F T.
            [| ?P,E,h \<turnstile> e : Class C; ?P1.0 E h e (Class C);
               Cs ~= []; ?P \<turnstile> C has least F:T via Cs |]
            ==> ?P1.0 E h (e\<bullet>F{Cs}) T;
         !!E h e F Cs T.
            [| ?P,E,h \<turnstile> e : NT; ?P1.0 E h e NT |]
            ==> ?P1.0 E h (e\<bullet>F{Cs}) T;
         !!E h e\<^sub>1 C Cs F T e\<^sub>2 T'.
            [| ?P,E,h \<turnstile> e\<^sub>1 : Class C;
               ?P1.0 E h e\<^sub>1 (Class C); Cs ~= [];
               ?P \<turnstile> C has least F:T via Cs;
               ?P,E,h \<turnstile> e\<^sub>2 : T'; ?P1.0 E h e\<^sub>2 T';
               ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) T;
         !!E h e\<^sub>1 e\<^sub>2 T' T F Cs.
            [| ?P,E,h \<turnstile> e\<^sub>1 : NT; ?P1.0 E h e\<^sub>1 NT;
               ?P,E,h \<turnstile> e\<^sub>2 : T'; ?P1.0 E h e\<^sub>2 T';
               ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) T;
         !!E h e C M Ts T a b Cs es Ts'.
            [| ?P,E,h \<turnstile> e : Class C; ?P1.0 E h e (Class C);
               ?P \<turnstile> C has least M = (Ts, T, a, b) via Cs;
               ?P,E,h \<turnstile> es [:] Ts'; ?P2.0 E h es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E h (Call e None M es) T;
         !!E h e C' C M Ts T a b Cs es Ts'.
            [| ?P,E,h \<turnstile> e : Class C'; ?P1.0 E h e (Class C');
               ?P \<turnstile> Path C' to C unique;
               ?P \<turnstile> C has least M = (Ts, T, a, b) via Cs;
               ?P,E,h \<turnstile> es [:] Ts'; ?P2.0 E h es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E h (Call e \<lfloor>C\<rfloor> M es) T;
         !!E h e es Ts Copt M T.
            [| ?P,E,h \<turnstile> e : NT; ?P1.0 E h e NT;
               ?P,E,h \<turnstile> es [:] Ts; ?P2.0 E h es Ts |]
            ==> ?P1.0 E h (Call e Copt M es) T;
         !!E V T h e T'.
            [| ?P,E(V |-> T),h \<turnstile> e : T';
               ?P1.0 (E(V |-> T)) h e T'; is_type ?P T |]
            ==> ?P1.0 E h {V:T; e} T';
         !!E h e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E h e\<^sub>1 T\<^sub>1;
               ?P,E,h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E h e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E h (e\<^sub>1;; e\<^sub>2) T\<^sub>2;
         !!E h e e\<^sub>1 T e\<^sub>2.
            [| ?P,E,h \<turnstile> e : Boolean; ?P1.0 E h e Boolean;
               ?P,E,h \<turnstile> e\<^sub>1 : T; ?P1.0 E h e\<^sub>1 T;
               ?P,E,h \<turnstile> e\<^sub>2 : T; ?P1.0 E h e\<^sub>2 T |]
            ==> ?P1.0 E h (if (e) e\<^sub>1 else e\<^sub>2) T;
         !!E h e c T.
            [| ?P,E,h \<turnstile> e : Boolean; ?P1.0 E h e Boolean;
               ?P,E,h \<turnstile> c : T; ?P1.0 E h c T |]
            ==> ?P1.0 E h (while (e) c) Void;
         !!E h e T' T.
            [| ?P,E,h \<turnstile> e : T'; ?P1.0 E h e T'; is_refT T' |]
            ==> ?P1.0 E h (throw e) T;
         !!E h. ?P2.0 E h [] [];
         !!E h e T es Ts.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T;
               ?P,E,h \<turnstile> es [:] Ts; ?P2.0 E h es Ts |]
            ==> ?P2.0 E h (e # es) (T # Ts) |]
      ==> ?P1.0 ?x1a ?x2a ?x3a ?x4a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 59, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 58, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 56, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("WellTypeRT.WTrt_inducts",
     "[| ?P,?x5a,?x6a \<turnstile> ?x7a [:] ?x8a;
         !!C E h. is_class ?P C ==> ?P1.0 E h (new C) (Class C);
         !!E h e T C.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E h (Cast C e) (Class C);
         !!E h e T C.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E h (\<lparr>C\<rparr>e) (Class C);
         !!h v T E.
            ?P \<turnstile> typeof\<^bsub>h\<^esub> v =
            \<lfloor>T\<rfloor> ==>
            ?P1.0 E h (Val v) T;
         !!E V T h. E V = \<lfloor>T\<rfloor> ==> ?P1.0 E h (Var V) T;
         !!E h e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2 bop T.
            [| ?P,E,h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E h e\<^sub>1 T\<^sub>1;
               ?P,E,h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E h e\<^sub>2 T\<^sub>2;
               case bop of Eq => T = Boolean
               | Add =>
                   T\<^sub>1 = Integer &
                   T\<^sub>2 = Integer & T = Integer |]
            ==> ?P1.0 E h
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 T;
         !!E V T h e T'.
            [| E V = \<lfloor>T\<rfloor>; ?P,E,h \<turnstile> e : T';
               ?P1.0 E h e T'; ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (V:=e) T;
         !!E h e C Cs F T.
            [| ?P,E,h \<turnstile> e : Class C; ?P1.0 E h e (Class C);
               Cs ~= []; ?P \<turnstile> C has least F:T via Cs |]
            ==> ?P1.0 E h (e\<bullet>F{Cs}) T;
         !!E h e F Cs T.
            [| ?P,E,h \<turnstile> e : NT; ?P1.0 E h e NT |]
            ==> ?P1.0 E h (e\<bullet>F{Cs}) T;
         !!E h e\<^sub>1 C Cs F T e\<^sub>2 T'.
            [| ?P,E,h \<turnstile> e\<^sub>1 : Class C;
               ?P1.0 E h e\<^sub>1 (Class C); Cs ~= [];
               ?P \<turnstile> C has least F:T via Cs;
               ?P,E,h \<turnstile> e\<^sub>2 : T'; ?P1.0 E h e\<^sub>2 T';
               ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) T;
         !!E h e\<^sub>1 e\<^sub>2 T' T F Cs.
            [| ?P,E,h \<turnstile> e\<^sub>1 : NT; ?P1.0 E h e\<^sub>1 NT;
               ?P,E,h \<turnstile> e\<^sub>2 : T'; ?P1.0 E h e\<^sub>2 T';
               ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) T;
         !!E h e C M Ts T a b Cs es Ts'.
            [| ?P,E,h \<turnstile> e : Class C; ?P1.0 E h e (Class C);
               ?P \<turnstile> C has least M = (Ts, T, a, b) via Cs;
               ?P,E,h \<turnstile> es [:] Ts'; ?P2.0 E h es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E h (Call e None M es) T;
         !!E h e C' C M Ts T a b Cs es Ts'.
            [| ?P,E,h \<turnstile> e : Class C'; ?P1.0 E h e (Class C');
               ?P \<turnstile> Path C' to C unique;
               ?P \<turnstile> C has least M = (Ts, T, a, b) via Cs;
               ?P,E,h \<turnstile> es [:] Ts'; ?P2.0 E h es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E h (Call e \<lfloor>C\<rfloor> M es) T;
         !!E h e es Ts Copt M T.
            [| ?P,E,h \<turnstile> e : NT; ?P1.0 E h e NT;
               ?P,E,h \<turnstile> es [:] Ts; ?P2.0 E h es Ts |]
            ==> ?P1.0 E h (Call e Copt M es) T;
         !!E V T h e T'.
            [| ?P,E(V |-> T),h \<turnstile> e : T';
               ?P1.0 (E(V |-> T)) h e T'; is_type ?P T |]
            ==> ?P1.0 E h {V:T; e} T';
         !!E h e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E h e\<^sub>1 T\<^sub>1;
               ?P,E,h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E h e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E h (e\<^sub>1;; e\<^sub>2) T\<^sub>2;
         !!E h e e\<^sub>1 T e\<^sub>2.
            [| ?P,E,h \<turnstile> e : Boolean; ?P1.0 E h e Boolean;
               ?P,E,h \<turnstile> e\<^sub>1 : T; ?P1.0 E h e\<^sub>1 T;
               ?P,E,h \<turnstile> e\<^sub>2 : T; ?P1.0 E h e\<^sub>2 T |]
            ==> ?P1.0 E h (if (e) e\<^sub>1 else e\<^sub>2) T;
         !!E h e c T.
            [| ?P,E,h \<turnstile> e : Boolean; ?P1.0 E h e Boolean;
               ?P,E,h \<turnstile> c : T; ?P1.0 E h c T |]
            ==> ?P1.0 E h (while (e) c) Void;
         !!E h e T' T.
            [| ?P,E,h \<turnstile> e : T'; ?P1.0 E h e T'; is_refT T' |]
            ==> ?P1.0 E h (throw e) T;
         !!E h. ?P2.0 E h [] [];
         !!E h e T es Ts.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T;
               ?P,E,h \<turnstile> es [:] Ts; ?P2.0 E h es Ts |]
            ==> ?P2.0 E h (e # es) (T # Ts) |]
      ==> ?P2.0 ?x5a ?x6a ?x7a ?x8a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 59, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 58, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 56, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty)),
        template_predicate (template_app (template_hole 57, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("WellTypeRT.WTrt_induct",
     "[| !!C E h. is_class ?P C ==> ?P1.0 E h (new C) (Class C);
         !!E h e T C.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E h (Cast C e) (Class C);
         !!E h e T C.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T; is_refT T;
               is_class ?P C |]
            ==> ?P1.0 E h (\<lparr>C\<rparr>e) (Class C);
         !!h v T E.
            ?P \<turnstile> typeof\<^bsub>h\<^esub> v =
            \<lfloor>T\<rfloor> ==>
            ?P1.0 E h (Val v) T;
         !!E V T h. E V = \<lfloor>T\<rfloor> ==> ?P1.0 E h (Var V) T;
         !!E h e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2 bop T.
            [| ?P,E,h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E h e\<^sub>1 T\<^sub>1;
               ?P,E,h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E h e\<^sub>2 T\<^sub>2;
               case bop of Eq => T = Boolean
               | Add =>
                   T\<^sub>1 = Integer &
                   T\<^sub>2 = Integer & T = Integer |]
            ==> ?P1.0 E h
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 T;
         !!E V T h e T'.
            [| E V = \<lfloor>T\<rfloor>; ?P,E,h \<turnstile> e : T';
               ?P1.0 E h e T'; ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (V:=e) T;
         !!E h e C Cs F T.
            [| ?P,E,h \<turnstile> e : Class C; ?P1.0 E h e (Class C);
               Cs ~= []; ?P \<turnstile> C has least F:T via Cs |]
            ==> ?P1.0 E h (e\<bullet>F{Cs}) T;
         !!E h e F Cs T.
            [| ?P,E,h \<turnstile> e : NT; ?P1.0 E h e NT |]
            ==> ?P1.0 E h (e\<bullet>F{Cs}) T;
         !!E h e\<^sub>1 C Cs F T e\<^sub>2 T'.
            [| ?P,E,h \<turnstile> e\<^sub>1 : Class C;
               ?P1.0 E h e\<^sub>1 (Class C); Cs ~= [];
               ?P \<turnstile> C has least F:T via Cs;
               ?P,E,h \<turnstile> e\<^sub>2 : T'; ?P1.0 E h e\<^sub>2 T';
               ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) T;
         !!E h e\<^sub>1 e\<^sub>2 T' T F Cs.
            [| ?P,E,h \<turnstile> e\<^sub>1 : NT; ?P1.0 E h e\<^sub>1 NT;
               ?P,E,h \<turnstile> e\<^sub>2 : T'; ?P1.0 E h e\<^sub>2 T';
               ?P \<turnstile> T' \<le> T |]
            ==> ?P1.0 E h (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) T;
         !!E h e C M Ts T a b Cs es Ts'.
            [| ?P,E,h \<turnstile> e : Class C; ?P1.0 E h e (Class C);
               ?P \<turnstile> C has least M = (Ts, T, a, b) via Cs;
               ?P,E,h \<turnstile> es [:] Ts'; ?P2.0 E h es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E h (Call e None M es) T;
         !!E h e C' C M Ts T a b Cs es Ts'.
            [| ?P,E,h \<turnstile> e : Class C'; ?P1.0 E h e (Class C');
               ?P \<turnstile> Path C' to C unique;
               ?P \<turnstile> C has least M = (Ts, T, a, b) via Cs;
               ?P,E,h \<turnstile> es [:] Ts'; ?P2.0 E h es Ts';
               ?P \<turnstile> Ts' [\<le>] Ts |]
            ==> ?P1.0 E h (Call e \<lfloor>C\<rfloor> M es) T;
         !!E h e es Ts Copt M T.
            [| ?P,E,h \<turnstile> e : NT; ?P1.0 E h e NT;
               ?P,E,h \<turnstile> es [:] Ts; ?P2.0 E h es Ts |]
            ==> ?P1.0 E h (Call e Copt M es) T;
         !!E V T h e T'.
            [| ?P,E(V |-> T),h \<turnstile> e : T';
               ?P1.0 (E(V |-> T)) h e T'; is_type ?P T |]
            ==> ?P1.0 E h {V:T; e} T';
         !!E h e\<^sub>1 T\<^sub>1 e\<^sub>2 T\<^sub>2.
            [| ?P,E,h \<turnstile> e\<^sub>1 : T\<^sub>1;
               ?P1.0 E h e\<^sub>1 T\<^sub>1;
               ?P,E,h \<turnstile> e\<^sub>2 : T\<^sub>2;
               ?P1.0 E h e\<^sub>2 T\<^sub>2 |]
            ==> ?P1.0 E h (e\<^sub>1;; e\<^sub>2) T\<^sub>2;
         !!E h e e\<^sub>1 T e\<^sub>2.
            [| ?P,E,h \<turnstile> e : Boolean; ?P1.0 E h e Boolean;
               ?P,E,h \<turnstile> e\<^sub>1 : T; ?P1.0 E h e\<^sub>1 T;
               ?P,E,h \<turnstile> e\<^sub>2 : T; ?P1.0 E h e\<^sub>2 T |]
            ==> ?P1.0 E h (if (e) e\<^sub>1 else e\<^sub>2) T;
         !!E h e c T.
            [| ?P,E,h \<turnstile> e : Boolean; ?P1.0 E h e Boolean;
               ?P,E,h \<turnstile> c : T; ?P1.0 E h c T |]
            ==> ?P1.0 E h (while (e) c) Void;
         !!E h e T' T.
            [| ?P,E,h \<turnstile> e : T'; ?P1.0 E h e T'; is_refT T' |]
            ==> ?P1.0 E h (throw e) T;
         !!E h. ?P2.0 E h [] [];
         !!E h e T es Ts.
            [| ?P,E,h \<turnstile> e : T; ?P1.0 E h e T;
               ?P,E,h \<turnstile> es [:] Ts; ?P2.0 E h es Ts |]
            ==> ?P2.0 E h (e # es) (T # Ts) |]
      ==> (?P,?x1a,?x2a \<turnstile> ?x3a : ?x4a -->
           ?P1.0 ?x1a ?x2a ?x3a ?x4a) &
          (?P,?x5a,?x6a \<turnstile> ?x7a [:] ?x8a -->
           ?P2.0 ?x5a ?x6a ?x7a ?x8a)",
     template_implication
      ([template_predicate (template_app (template_hole 61, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 59, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty)),
        template_predicate (template_app (template_hole 60, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 38,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 52, template_var 10),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_var 9, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 19, template_var 10),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_var 8, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)))
           )))]
