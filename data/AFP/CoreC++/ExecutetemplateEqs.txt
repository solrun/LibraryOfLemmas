   [("Execute.new_Addr'_code",
     "new_Addr' ?h = lowest (Option.is_none o ?h) 0",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Execute.init_obj_pred_conv",
     "set_of_pred (init_obj_pred ?P ?C) = Collect (init_obj' ?P ?C)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Execute.map_val_conv", "(?xs = map Val ?ys) = map_val ?xs ?ys",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Execute.app_eq", "app ?xs ?ys ?zs = (?zs = ?xs @ ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Execute.blank'_code",
     "blank' ?P ?C = (?C, set_of_pred (init_obj_pred ?P ?C))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Execute.subclsR_code",
     "?P \<turnstile> ?C \<prec>\<^sub>R ?D = subclsRp ?P ?C ?D",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Execute.leq_path_unfold",
     "?P,?C \<turnstile> ?Cs \<sqsubseteq> ?Ds =
      (leq_path1p ?P ?C)^** ?Cs ?Ds",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3),
         template_var 2))),
    ("Execute.Set_project_set",
     "Set_project (set ?xs) ?a =
      set (List.map_filter
            (%(a', b). if ?a = a' then \<lfloor>b\<rfloor> else None) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_var 1)))),
    ("Execute.map_val2_conv",
     "(?xs = map Val ?ys @ throw ?e # ?zs) =
      map_val2 ?xs ?ys (throw ?e # ?zs)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("Execute.LeastMethodDef_unfold",
     "(?P \<turnstile> ?C has least ?M = ?mthd via ?Cs) =
      (MethodDefs' ?P ?C ?M ?Cs ?mthd &
       LeastMethodDef_unique ?P ?C ?M ?Cs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0)))),
    ("Execute.init_class_fieldmap'_code",
     "init_class_fieldmap' ?P ?C =
      AList_Mapping.Mapping
       (map (%(F, T). (F, default_val T)) (fst (snd (the (class ?P ?C)))))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))))))),
    ("Execute.start_heap'_code",
     "start_heap' ?P =
      [addr_of_sys_xcpt NullPointer |-> blank' ?P NullPointer,
       addr_of_sys_xcpt ClassCast |-> blank' ?P ClassCast,
       addr_of_sys_xcpt OutOfMemory |-> blank' ?P OutOfMemory]",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 7, t_empty),
                       template_app (template_hole 5, template_hole 4)),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_hole 4)))),
                 template_app (template_hole 5, template_hole 1)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)))),
           template_app (template_hole 5, template_hole 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))))),
    ("Execute.LeastFieldDecl_unfold",
     "(?P \<turnstile> ?C has least ?F:?T via ?Cs) =
      (FieldDecls' ?P ?C ?F ?Cs ?T &
       (ALL Cs' T'.
           FieldDecls' ?P ?C ?F Cs' T' --> (leq_path1p ?P ?C)^** ?Cs Cs'))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Execute.path_unique_eq",
     "(?P \<turnstile> Path ?C to ?D unique) =
      (EX Cs.
          Subobjs ?P ?C Cs &
          last Cs = ?D &
          (ALL Cs'. Subobjs ?P ?C Cs' --> last Cs' = ?D --> Cs = Cs'))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Execute.FinalOverriderMethodDef_unfold",
     "(?P \<turnstile> ?R has overrider ?M = ?mthd via ?Cs) =
      (OverriderMethodDefs' ?P ?R ?M ?Cs ?mthd &
       (ALL Cs' mthd'.
           OverriderMethodDefs' ?P ?R ?M Cs' mthd' -->
           ?Cs = Cs' & ?mthd = mthd'))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)),
         template_app (template_hole 4, t_empty))))]
