Loading theory "Draft.Auxiliary" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects" via "Draft.SubObj" via "Draft.ClassRel" via "Draft.Decl" via "Draft.Expr" via "Draft.Value" via "Draft.Type")
Loading theory "Draft.Templates" (required by "Draft.BigStepTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.158s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.BigStepTemplates")
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### theory "Draft.Auxiliary"
### 0.265s elapsed time, 0.567s cpu time, 0.027s GC time
Loading theory "Draft.Type" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects" via "Draft.SubObj" via "Draft.ClassRel" via "Draft.Decl" via "Draft.Expr" via "Draft.Value")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.523s elapsed time, 1.078s cpu time, 0.086s GC time
consts
  getbase :: "base => char list"
consts
  isRepBase :: "base => bool"
consts
  isShBase :: "base => bool"
### theory "Draft.Type"
### 0.626s elapsed time, 0.975s cpu time, 0.060s GC time
Loading theory "Draft.Value" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects" via "Draft.SubObj" via "Draft.ClassRel" via "Draft.Decl" via "Draft.Expr")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Ref"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_addr :: "val => nat"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_path :: "val => char list list"
consts
  default_val :: "ty => val"
consts
  typeof :: "val => ty option"
### theory "Draft.Value"
### 0.403s elapsed time, 0.436s cpu time, 0.044s GC time
Loading theory "Draft.Expr" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects" via "Draft.SubObj" via "Draft.ClassRel" via "Draft.Decl")
Found termination order: "{}"
### Ambiguous input (line 80 of "$AFP/CoreC++/Expr.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_Update" ("_position" fv)
###       ("_updbind" ("_position" V) ("_position" e)))
###     ("\<^const>Set.union" ("_Finset" ("_position" V))
###       ("_applC" ("_position" fv) ("_position" e)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.expr.LAss" ("_position" V) ("_position" e)))
###     ("\<^const>Set.union" ("_Finset" ("_position" V))
###       ("_applC" ("_position" fv) ("_position" e)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 82 of "$AFP/CoreC++/Expr.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_Update" ("_position" fv)
###       ("_updbind"
###         ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" Cs))
###         ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.expr.LAss"
###         ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" Cs))
###         ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" fv)
###       ("\<^const>Expr.expr.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" Cs) ("_position" e\<^sub>2)))
###     ("\<^const>Set.union"
###       ("_applC" ("_position" fv) ("_position" e\<^sub>1))
###       ("_applC" ("_position" fv) ("_position" e\<^sub>2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  fv :: "expr => char list set"
  fvs :: "expr list => char list set"
### theory "Draft.Expr"
### 2.284s elapsed time, 2.721s cpu time, 0.618s GC time
Loading theory "Draft.Decl" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects" via "Draft.SubObj" via "Draft.ClassRel")
### theory "Draft.Decl"
### 0.097s elapsed time, 0.146s cpu time, 0.054s GC time
Loading theory "Draft.ClassRel" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects" via "Draft.SubObj")
Proofs for inductive predicate(s) "subclsRp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "subclsSp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
### theory "Draft.ClassRel"
### 0.170s elapsed time, 0.170s cpu time, 0.000s GC time
Loading theory "Draft.SubObj" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions" via "Draft.Objects")
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "Subobjs\<^sub>R"
  Proving monotonicity ...
Proofs for inductive predicate(s) "Subobjs"
  Proving monotonicity ...
Proofs for inductive predicate(s) "casts_to"
  Proving monotonicity ...
Proofs for inductive predicate(s) "Casts_to"
  Proving monotonicity ...
Proofs for inductive predicate(s) "leq_path1p"
  Proving monotonicity ...
### Ambiguous input (line 720 of "$AFP/CoreC++/SubObj.thy") produces 3 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" MinimalMethodDefs)
###     ("_cargs" ("_position" P) ("_cargs" ("_position" C) ("_position" M))))
###   ("_Coll" ("_pattern" ("_position" Cs) ("_position" mthd))
###     ("\<^const>HOL.conj"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" Cs) ("_tuple_arg" ("_position" mthd)))
###         ("_applC" ("_position" MethodDefs)
###           ("_cargs" ("_position" P)
###             ("_cargs" ("_position" C) ("_position" M)))))
###       ("_Ball" ("_pattern" ("_position" Cs') ("_position" mthd'))
###         ("_applC" ("_position" MethodDefs)
###           ("_cargs" ("_position" P)
###             ("_cargs" ("_position" C) ("_position" M))))
###         ("\<^const>HOL.eq"
###           ("\<^const>SubObj.leq_path" ("_position" P) ("_position" C)
###             ("_position" Cs')
###             ("\<^const>HOL.implies" ("_position" Cs) ("_position" Cs')))
###           ("_position" Cs))))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" MinimalMethodDefs)
###     ("_cargs" ("_position" P) ("_cargs" ("_position" C) ("_position" M))))
###   ("_Coll" ("_pattern" ("_position" Cs) ("_position" mthd))
###     ("\<^const>HOL.conj"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" Cs) ("_tuple_arg" ("_position" mthd)))
###         ("_applC" ("_position" MethodDefs)
###           ("_cargs" ("_position" P)
###             ("_cargs" ("_position" C) ("_position" M)))))
###       ("_Ball" ("_pattern" ("_position" Cs') ("_position" mthd'))
###         ("_applC" ("_position" MethodDefs)
###           ("_cargs" ("_position" P)
###             ("_cargs" ("_position" C) ("_position" M))))
###         ("\<^const>SubObj.leq_path" ("_position" P) ("_position" C)
###           ("_position" Cs')
###           ("\<^const>HOL.implies" ("_position" Cs)
###             ("\<^const>HOL.eq" ("_position" Cs') ("_position" Cs))))))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" MinimalMethodDefs)
###     ("_cargs" ("_position" P) ("_cargs" ("_position" C) ("_position" M))))
###   ("_Coll" ("_pattern" ("_position" Cs) ("_position" mthd))
###     ("\<^const>HOL.conj"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" Cs) ("_tuple_arg" ("_position" mthd)))
###         ("_applC" ("_position" MethodDefs)
###           ("_cargs" ("_position" P)
###             ("_cargs" ("_position" C) ("_position" M)))))
###       ("_Ball" ("_pattern" ("_position" Cs') ("_position" mthd'))
###         ("_applC" ("_position" MethodDefs)
###           ("_cargs" ("_position" P)
###             ("_cargs" ("_position" C) ("_position" M))))
###         ("\<^const>HOL.implies"
###           ("\<^const>SubObj.leq_path" ("_position" P) ("_position" C)
###             ("_position" Cs') ("_position" Cs))
###           ("\<^const>HOL.eq" ("_position" Cs') ("_position" Cs)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 725 of "$AFP/CoreC++/SubObj.thy") produces 2 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" OverriderMethodDefs)
###     ("_cargs" ("_position" P) ("_cargs" ("_position" R) ("_position" M))))
###   ("_Coll" ("_pattern" ("_position" Cs) ("_position" mthd))
###     ("\<^const>HOL.Ex_binder"
###       ("_idts" ("_position" Cs') ("_position" mthd'))
###       ("\<^const>HOL.conj"
###         ("\<^const>SubObj.LeastMethodDef" ("_position" P)
###           ("_applC" ("_position" ldc) ("_position" R)) ("_position" M)
###           ("_position" mthd') ("_position" Cs'))
###         ("\<^const>HOL.conj"
###           ("\<^const>Set.member"
###             ("_tuple" ("_position" Cs) ("_tuple_arg" ("_position" mthd)))
###             ("_applC" ("_position" MinimalMethodDefs)
###               ("_cargs" ("_position" P)
###                 ("_cargs" ("_applC" ("_position" mdc) ("_position" R))
###                   ("_position" M)))))
###           ("\<^const>SubObj.appendPath"
###             ("\<^const>SubObj.leq_path" ("_position" P)
###               ("_applC" ("_position" mdc) ("_position" R)) ("_position" Cs)
###               ("_applC" ("_position" snd) ("_position" R)))
###             ("_position" Cs')))))))
### ("\<^const>Pure.eq"
###   ("_applC" ("_position" OverriderMethodDefs)
###     ("_cargs" ("_position" P) ("_cargs" ("_position" R) ("_position" M))))
###   ("_Coll" ("_pattern" ("_position" Cs) ("_position" mthd))
###     ("\<^const>HOL.Ex_binder"
###       ("_idts" ("_position" Cs') ("_position" mthd'))
###       ("\<^const>HOL.conj"
###         ("\<^const>SubObj.LeastMethodDef" ("_position" P)
###           ("_applC" ("_position" ldc) ("_position" R)) ("_position" M)
###           ("_position" mthd') ("_position" Cs'))
###         ("\<^const>HOL.conj"
###           ("\<^const>Set.member"
###             ("_tuple" ("_position" Cs) ("_tuple_arg" ("_position" mthd)))
###             ("_applC" ("_position" MinimalMethodDefs)
###               ("_cargs" ("_position" P)
###                 ("_cargs" ("_applC" ("_position" mdc) ("_position" R))
###                   ("_position" M)))))
###           ("\<^const>SubObj.leq_path" ("_position" P)
###             ("_applC" ("_position" mdc) ("_position" R)) ("_position" Cs)
###             ("\<^const>SubObj.appendPath"
###               ("_applC" ("_position" snd) ("_position" R))
###               ("_position" Cs'))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "SelectMethodDef"
  Proving monotonicity ...
### theory "Draft.SubObj"
### 0.865s elapsed time, 0.930s cpu time, 0.087s GC time
Loading theory "Draft.Objects" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax" via "Draft.Exceptions")
Proofs for inductive predicate(s) "init_obj"
  Proving monotonicity ...
### theory "Draft.Objects"
### 0.069s elapsed time, 0.071s cpu time, 0.000s GC time
Loading theory "Draft.Exceptions" (required by "Draft.BigStepTemplates" via "Draft.BigStep" via "Draft.Syntax")
### theory "Draft.Exceptions"
### 0.105s elapsed time, 0.140s cpu time, 0.051s GC time
Loading theory "Draft.State" (required by "Draft.BigStepTemplates" via "Draft.BigStep")
Loading theory "Draft.Syntax" (required by "Draft.BigStepTemplates" via "Draft.BigStep")
### theory "Draft.Syntax"
### 0.034s elapsed time, 0.068s cpu time, 0.000s GC time
### theory "Draft.State"
### 0.035s elapsed time, 0.070s cpu time, 0.000s GC time
Loading theory "Draft.BigStep" (required by "Draft.BigStepTemplates")
### Ambiguous input (line 172 of "$AFP/CoreC++/BigStep.thy") produces 4 parse trees:
### ("_bigimpl"
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P)
###         ("_MapUpd" ("_position" E)
###           ("_maplet" ("_position" V) ("_position" T)))
###         ("_position" e\<^sub>0)
###         ("_tuple" ("_position" h\<^sub>0)
###           ("_tuple_arg"
###             ("_applC" ("_position" l\<^sub>0)
###               ("\<^const>Expr.expr.LAss" ("_position" V)
###                 ("_position" None)))))
###         ("_position" e\<^sub>1)
###         ("_tuple" ("_position" h\<^sub>1)
###           ("_tuple_arg" ("_position" l\<^sub>1))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>1)
###             ("\<^const>Expr.expr.LAss" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### ("_bigimpl"
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P)
###         ("_MapUpd" ("_position" E)
###           ("_maplet" ("_position" V) ("_position" T)))
###         ("_position" e\<^sub>0)
###         ("_tuple" ("_position" h\<^sub>0)
###           ("_tuple_arg"
###             ("_Update" ("_position" l\<^sub>0)
###               ("_updbind" ("_position" V) ("_position" None)))))
###         ("_position" e\<^sub>1)
###         ("_tuple" ("_position" h\<^sub>1)
###           ("_tuple_arg" ("_position" l\<^sub>1))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_applC" ("_position" l\<^sub>1)
###             ("\<^const>Expr.expr.LAss" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### ("_bigimpl"
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P)
###         ("_MapUpd" ("_position" E)
###           ("_maplet" ("_position" V) ("_position" T)))
###         ("_position" e\<^sub>0)
###         ("_tuple" ("_position" h\<^sub>0)
###           ("_tuple_arg"
###             ("_applC" ("_position" l\<^sub>0)
###               ("\<^const>Expr.expr.LAss" ("_position" V)
###                 ("_position" None)))))
###         ("_position" e\<^sub>1)
###         ("_tuple" ("_position" h\<^sub>1)
###           ("_tuple_arg" ("_position" l\<^sub>1))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>1)
###             ("_updbind" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### ("_bigimpl"
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P)
###         ("_MapUpd" ("_position" E)
###           ("_maplet" ("_position" V) ("_position" T)))
###         ("_position" e\<^sub>0)
###         ("_tuple" ("_position" h\<^sub>0)
###           ("_tuple_arg"
###             ("_Update" ("_position" l\<^sub>0)
###               ("_updbind" ("_position" V) ("_position" None)))))
###         ("_position" e\<^sub>1)
###         ("_tuple" ("_position" h\<^sub>1)
###           ("_tuple_arg" ("_position" l\<^sub>1))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.Block" ("_position" V) ("_position" T)
###         ("_position" e\<^sub>0))
###       ("_tuple" ("_position" h\<^sub>0)
###         ("_tuple_arg" ("_position" l\<^sub>0)))
###       ("_position" e\<^sub>1)
###       ("_tuple" ("_position" h\<^sub>1)
###         ("_tuple_arg"
###           ("_Update" ("_position" l\<^sub>1)
###             ("_updbind" ("_position" V)
###               ("_applC" ("_position" l\<^sub>0) ("_position" V)))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 123 of "$AFP/CoreC++/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" E)
###         ("_position" e\<^sub>1) ("_position" s\<^sub>0)
###         ("_applC" ("_position" ref)
###           ("_tuple" ("_position" a) ("_tuple_arg" ("_position" Cs'))))
###         ("_position" s\<^sub>1)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" E)
###           ("_position" e\<^sub>2) ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_tuple" ("_position" h\<^sub>2)
###             ("_tuple_arg" ("_position" l\<^sub>2)))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" h\<^sub>2) ("_position" a))
###             ("_applC" ("_position" Some)
###               ("_tuple" ("_position" D) ("_tuple_arg" ("_position" S))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>SubObj.LeastFieldDecl" ("_position" P)
###               ("_applC" ("_position" last) ("_position" Cs'))
###               ("_position" F) ("_position" T) ("_position" Cs)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>SubObj.casts_to" ("_position" P) ("_position" T)
###                 ("_position" v) ("_position" v')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq" ("_position" Ds)
###                   ("\<^const>SubObj.appendPath" ("_position" Cs')
###                     ("_position" Cs))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Set.member"
###                     ("_tuple" ("_position" Ds)
###                       ("_tuple_arg" ("_position" fs)))
###                     ("_position" S)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq" ("_position" fs')
###                       ("_MapUpd" ("_position" fs)
###                         ("_maplet" ("_position" F) ("_position" v')))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>HOL.eq" ("_position" S')
###                         ("\<^const>Set.union"
###                           ("\<^const>Groups.minus_class.minus"
###                             ("_position" S)
###                             ("_Finset"
###                               ("_tuple" ("_position" Ds)
###                                 ("_tuple_arg" ("_position" fs)))))
###                           ("_Finset"
###                             ("_tuple" ("_position" Ds)
###                               ("_tuple_arg" ("_position" fs')))))))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>HOL.eq" ("_position" h\<^sub>2')
###                           ("_MapUpd" ("_position" h\<^sub>2)
###                             ("_maplet" ("_position" a)
###                               ("_tuple" ("_position" D)
###                                 ("_tuple_arg"
###                                   ("_position" S')))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.LAss"
###         ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" Cs))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0) ("_applC" ("_position" Val) ("_position" v'))
###       ("_tuple" ("_position" h\<^sub>2')
###         ("_tuple_arg" ("_position" l\<^sub>2))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" E)
###         ("_position" e\<^sub>1) ("_position" s\<^sub>0)
###         ("_applC" ("_position" ref)
###           ("_tuple" ("_position" a) ("_tuple_arg" ("_position" Cs'))))
###         ("_position" s\<^sub>1)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" E)
###           ("_position" e\<^sub>2) ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_tuple" ("_position" h\<^sub>2)
###             ("_tuple_arg" ("_position" l\<^sub>2)))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" h\<^sub>2) ("_position" a))
###             ("_applC" ("_position" Some)
###               ("_tuple" ("_position" D) ("_tuple_arg" ("_position" S))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>SubObj.LeastFieldDecl" ("_position" P)
###               ("_applC" ("_position" last) ("_position" Cs'))
###               ("_position" F) ("_position" T) ("_position" Cs)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>SubObj.casts_to" ("_position" P) ("_position" T)
###                 ("_position" v) ("_position" v')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq" ("_position" Ds)
###                   ("\<^const>SubObj.appendPath" ("_position" Cs')
###                     ("_position" Cs))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Set.member"
###                     ("_tuple" ("_position" Ds)
###                       ("_tuple_arg" ("_position" fs)))
###                     ("_position" S)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq" ("_position" fs')
###                       ("_MapUpd" ("_position" fs)
###                         ("_maplet" ("_position" F) ("_position" v')))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>HOL.eq" ("_position" S')
###                         ("\<^const>Set.union"
###                           ("\<^const>Groups.minus_class.minus"
###                             ("_position" S)
###                             ("_Finset"
###                               ("_tuple" ("_position" Ds)
###                                 ("_tuple_arg" ("_position" fs)))))
###                           ("_Finset"
###                             ("_tuple" ("_position" Ds)
###                               ("_tuple_arg" ("_position" fs')))))))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>HOL.eq" ("_position" h\<^sub>2')
###                           ("_MapUpd" ("_position" h\<^sub>2)
###                             ("_maplet" ("_position" a)
###                               ("_tuple" ("_position" D)
###                                 ("_tuple_arg"
###                                   ("_position" S')))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" Cs) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0) ("_applC" ("_position" Val) ("_position" v'))
###       ("_tuple" ("_position" h\<^sub>2')
###         ("_tuple_arg" ("_position" l\<^sub>2))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 130 of "$AFP/CoreC++/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" E)
###         ("_position" e\<^sub>1) ("_position" s\<^sub>0) ("_position" null)
###         ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" E)
###           ("_position" e\<^sub>2) ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.LAss"
###         ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" Cs))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" THROW) ("_position" NullPointer))
###       ("_position" s\<^sub>2))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" E)
###         ("_position" e\<^sub>1) ("_position" s\<^sub>0) ("_position" null)
###         ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" E)
###           ("_position" e\<^sub>2) ("_position" s\<^sub>1)
###           ("_applC" ("_position" Val) ("_position" v))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" Cs) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" THROW) ("_position" NullPointer))
###       ("_position" s\<^sub>2))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 134 of "$AFP/CoreC++/BigStep.thy") produces 2 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E) ("_position" e\<^sub>1)
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.LAss"
###         ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" Cs))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E) ("_position" e\<^sub>1)
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" Cs) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>1))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 138 of "$AFP/CoreC++/BigStep.thy") produces 2 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" E)
###         ("_position" e\<^sub>1) ("_position" s\<^sub>0)
###         ("_applC" ("_position" Val) ("_position" v))
###         ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" E)
###           ("_position" e\<^sub>2) ("_position" s\<^sub>1)
###           ("_applC" ("_position" throw) ("_position" e'))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.LAss"
###         ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###           ("_position" Cs))
###         ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>2))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>eval" ("_position" P) ("_position" E)
###         ("_position" e\<^sub>1) ("_position" s\<^sub>0)
###         ("_applC" ("_position" Val) ("_position" v))
###         ("_position" s\<^sub>1)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>eval" ("_position" P) ("_position" E)
###           ("_position" e\<^sub>2) ("_position" s\<^sub>1)
###           ("_applC" ("_position" throw) ("_position" e'))
###           ("_position" s\<^sub>2)))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>eval" ("_position" P) ("_position" E)
###       ("\<^const>Expr.expr.FAss" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" Cs) ("_position" e\<^sub>2))
###       ("_position" s\<^sub>0)
###       ("_applC" ("_position" throw) ("_position" e'))
###       ("_position" s\<^sub>2))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "eval", "evals"
  Proving monotonicity ...
### Ambiguous input (line 247 of "$AFP/CoreC++/BigStep.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BigStep.eval" ("_position" P) ("_position" E)
###     ("\<^const>Expr.expr.LAss"
###       ("\<^const>Expr.expr.FAcc" ("_position" e\<^sub>1) ("_position" F)
###         ("_position" Cs))
###       ("_position" e\<^sub>2))
###     ("_position" s) ("_position" e') ("_position" s')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>BigStep.eval" ("_position" P) ("_position" E)
###     ("\<^const>Expr.expr.FAss" ("_position" e\<^sub>1) ("_position" F)
###       ("_position" Cs) ("_position" e\<^sub>2))
###     ("_position" s) ("_position" e') ("_position" s')))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.BigStep"
### 2.638s elapsed time, 3.814s cpu time, 0.770s GC time
Loading theory "Draft.BigStepTemplates"
val templateLemmas =
   [("BigStep.finals_app_map", "finals (map Val ?vs @ ?es) = finals ?es",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("BigStep.not_finals_ConsI", "~ final ?e ==> ~ finals (?e # ?es)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("BigStep.eval_finalId",
     "final ?e ==>
      ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                         \<langle>?e,?s\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 0),
               template_var 3),
             template_var 0)
           ))),
    ("BigStep.eval_finalsId",
     "finals ?es ==>
      ?P,?E \<turnstile> \<langle>?es,?s\<rangle> [\<Rightarrow>]
                         \<langle>?es,?s\<rangle>",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 0),
               template_var 3),
             template_var 0)
           ))),
    ("BigStep.eval_final",
     "?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                         \<langle>?e',?s'\<rangle> ==>
      final ?e'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BigStep.evals_final",
     "?P,?E \<turnstile> \<langle>?es,?s\<rangle> [\<Rightarrow>]
                         \<langle>?es',?s'\<rangle> ==>
      finals ?es'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("BigStep.eval_lcl_incr",
     "?P,?E \<turnstile> \<langle>?e,
                          (?h\<^sub>0, ?l\<^sub>0)\<rangle> \<Rightarrow>
                         \<langle>?e',(?h\<^sub>1, ?l\<^sub>1)\<rangle> ==>
      dom ?l\<^sub>0 <= dom ?l\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("BigStep.evals_lcl_incr",
     "?P,?E \<turnstile> \<langle>?es,
                          (?h\<^sub>0, ?l\<^sub>0)\<rangle> [\<Rightarrow>]
                         \<langle>?es',(?h\<^sub>1, ?l\<^sub>1)\<rangle> ==>
      dom ?l\<^sub>0 <= dom ?l\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3)),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("BigStep.evals_cases",
     "[| ?P,?E \<turnstile> \<langle>[],?s\<rangle> [\<Rightarrow>]
                            \<langle>?e',?s'\<rangle>;
         [| ?e' = []; ?s' = ?s |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_hole 2),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 2)],
          template_implication
           ([template_equation (template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>Val ?v,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         [| ?e' = Val ?v; ?s' = ?s |] ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5),
                    template_app (template_hole 2, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 2, template_var 4))],
          template_implication
           ([template_equation (template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("BigStep.finalE",
     "[| final ?e; !!v. ?e = Val v ==> ?Q; !!r. ?e = Throw r ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_preserves_obj",
     "[| ?P,?E \<turnstile> \<langle>?e,(?h, ?l)\<rangle> \<Rightarrow>
                            \<langle>?e',(?h', ?l')\<rangle>;
         ?h ?a = \<lfloor>(?D, ?S)\<rfloor> |]
      ==> EX S'. ?h' ?a = \<lfloor>(?D, S')\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 6)),
                template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app (template_var 7, template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("BigStep.evals_preserves_obj",
     "[| ?P,?E \<turnstile> \<langle>?es,(?h, ?l)\<rangle> [\<Rightarrow>]
                            \<langle>?es',(?h', ?l')\<rangle>;
         ?h ?a = \<lfloor>(?D, ?S)\<rfloor> |]
      ==> EX S'. ?h' ?a = \<lfloor>(?D, S')\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 10),
                      template_var 9),
                    template_var 8),
                  template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 6)),
                template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app (template_var 7, template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>Var ?V,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!l v h.
            [| ?s = (h, l); ?e' = Val v; ?s' = (h, l);
               l ?V = \<lfloor>v\<rfloor> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 6),
                      template_var 5),
                    template_app (template_hole 9, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>?e\<^sub>1;; ?e\<^sub>2,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!v s\<^sub>1.
            [| ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>Val v,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!e. [| ?e' = throw e;
                 ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                     ?s\<rangle> \<Rightarrow>
                                    \<langle>throw e,?s'\<rangle> |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>{?V:?T; ?e\<^sub>1},
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!h\<^sub>0 l\<^sub>0 h\<^sub>1 l\<^sub>1.
            [| ?s = (h\<^sub>0, l\<^sub>0);
               ?s' = (h\<^sub>1, l\<^sub>1(?V := l\<^sub>0 ?V));
               ?P,?E(?V |->
               ?T) \<turnstile> \<langle>?e\<^sub>1,
                                 (h\<^sub>0, l\<^sub>0
                                  (?V := None))\<rangle> \<Rightarrow>
                                \<langle>?e',
                                 (h\<^sub>1, l\<^sub>1)\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 8),
                      template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.evals_cases",
     "[| ?P,?E \<turnstile> \<langle>?e # ?es,?s\<rangle> [\<Rightarrow>]
                            \<langle>?e',?s'\<rangle>;
         !!v s\<^sub>1 es'.
            [| ?e' = Val v # es';
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>Val v,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>es',?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e' # ?es;
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>throw ?e,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!r. [| ?e' = Throw r;
                 ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                    \<langle>ref r,?s'\<rangle> |]
              ==> ?Pa;
         [| ?e' = Throw (addr_of_sys_xcpt NullPointer, [NullPointer]);
            ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 12, template_var 6),
                      template_var 5),
                    template_app (template_hole 11, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_hole 11,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)),
                     template_app
                      (template_app (template_hole 3, template_hole 4),
                       template_hole 2))))))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 12, template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_app (template_hole 8, template_hole 1)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>if (?e) ?e\<^sub>1 else ?e\<^sub>2,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!s\<^sub>1.
            [| ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>true,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!s\<^sub>1.
            [| ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>false,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 8),
                      template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>?V:=?e,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!v h l T v'.
            [| ?e' = Val v'; ?s' = (h, l(?V |-> v'));
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>Val v,(h, l)\<rangle>;
               ?E ?V = \<lfloor>T\<rfloor>;
               ?P \<turnstile> T casts v to v'  |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 16, template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 15, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>new ?C,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!h a l.
            [| ?s = (h, l); ?e' = ref (a, [?C]);
               ?s' = (h(a |-> (?C, Collect (init_obj ?P ?C))), l);
               new_Addr h = \<lfloor>a\<rfloor> |]
            ==> ?Pa;
         !!h l.
            [| ?s = (h, l);
               ?e' = Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory]);
               ?s' = (h, l); new_Addr h = None |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 24, template_var 6),
                      template_var 5),
                    template_app (template_hole 23, template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>?e\<^sub>1 \<guillemotleft>?bop\<guillemotright> ?e\<^sub>2,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!v\<^sub>1 s\<^sub>1 v\<^sub>2 v.
            [| ?e' = Val v;
               ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>Val v\<^sub>1,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>Val v\<^sub>2,?s'\<rangle>;
               binop (?bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?Pa;
         !!e. [| ?e' = throw e;
                 ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                     ?s\<rangle> \<Rightarrow>
                                    \<langle>throw e,?s'\<rangle> |]
              ==> ?Pa;
         !!v\<^sub>1 s\<^sub>1 e.
            [| ?e' = throw e;
               ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>Val v\<^sub>1,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>throw e,?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 12, template_var 8),
                      template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>while (?b) ?c,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         [| ?e' = unit;
            ?P,?E \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                               \<langle>false,?s'\<rangle> |]
         ==> ?Pa;
         !!s\<^sub>1 v\<^sub>1 s\<^sub>2.
            [| ?P,?E \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                                  \<langle>true,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?c,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>Val v\<^sub>1,s\<^sub>2\<rangle>;
               ?P,?E \<turnstile> \<langle>while (?b) ?c,
                                   s\<^sub>2\<rangle> \<Rightarrow>
                                  \<langle>?e',?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!s\<^sub>1 e'.
            [| ?e' = throw e';
               ?P,?E \<turnstile> \<langle>?b,?s\<rangle> \<Rightarrow>
                                  \<langle>true,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?c,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 10, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 8, template_hole 7))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 11, template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 3),
                     template_app
                      (template_hole 8,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>?e\<bullet>?F{?Cs},
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!a Cs' h l D S fs v.
            [| ?e' = Val v; ?s' = (h, l);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs'),(h, l)\<rangle>;
               h a = \<lfloor>(D, S)\<rfloor>; (Cs' @\<^sub>p ?Cs, fs) : S;
               fs ?F = \<lfloor>v\<rfloor> |]
            ==> ?Pa;
         [| ?e' = Throw (addr_of_sys_xcpt NullPointer, [NullPointer]);
            ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 29, template_var 8),
                      template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 28, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_hole 6,
               template_app
                (template_hole 19,
                 template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app (template_hole 5, template_hole 4)),
                     template_app
                      (template_app (template_hole 3, template_hole 4),
                       template_hole 2))))))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 29, template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 3),
                     template_app (template_hole 19, template_hole 1)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>\<lparr>?C\<rparr>?e,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!a Cs Cs'.
            [| ?e' = ref (a, Cs @\<^sub>p Cs');
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),?s'\<rangle>;
               ?P \<turnstile> Path last Cs to ?C via Cs'  |]
            ==> ?Pa;
         !!a Cs Cs'.
            [| ?e' = ref (a, Cs @ [?C]);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs @ ?C # Cs'),
                                   ?s'\<rangle> |]
            ==> ?Pa;
         [| ?e' = null;
            ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!a Cs.
            [| ?e' = Throw (addr_of_sys_xcpt ClassCast, [ClassCast]);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),?s'\<rangle>;
               (last Cs, ?C) ~: (subcls1 ?P)^*; ?C ~: set Cs |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 25, template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 24, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 20, template_hole 11))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 25, template_var 7),
                           template_var 6),
                         template_var 4),
                       template_var 3),
                     template_app (template_hole 20, template_hole 11)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>?e\<^sub>1\<bullet>?F{?Cs} := ?e\<^sub>2,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!a Cs' s\<^sub>1 v h\<^sub>2 l\<^sub>2 D S T v' fs.
            [| ?e' = Val v';
               ?s' =
               (h\<^sub>2(a |->
                (D, insert (Cs' @\<^sub>p ?Cs, fs(?F |-> v'))
                     (S - {(Cs' @\<^sub>p ?Cs, fs)}))),
                l\<^sub>2);
               ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs'),s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>Val v,
                                   (h\<^sub>2, l\<^sub>2)\<rangle>;
               h\<^sub>2 a = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> last Cs' has least ?F:T via ?Cs;
               ?P \<turnstile> T casts v to v' ;
               (Cs' @\<^sub>p ?Cs, fs) : S |]
            ==> ?Pa;
         !!s\<^sub>1 v.
            [| ?e' = Throw (addr_of_sys_xcpt NullPointer, [NullPointer]);
               ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>null,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>Val v,?s'\<rangle> |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e\<^sub>1,
?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!v s\<^sub>1 e'.
            [| ?e' = throw e';
               ?P,?E \<turnstile> \<langle>?e\<^sub>1,
                                   ?s\<rangle> \<Rightarrow>
                                  \<langle>Val v,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?e\<^sub>2,
                                   s\<^sub>1\<rangle> \<Rightarrow>
                                  \<langle>throw e',?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 38, template_var 9),
                      template_var 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 37, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 36, t_empty)),
        template_predicate (template_app (template_hole 34, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>Call ?e \<lfloor>?C\<rfloor> ?M ?es,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!v s\<^sub>1 vs ex es'.
            [| ?e' = throw ex;
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>Val v,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>map Val vs @ throw ex # es',
                                   ?s'\<rangle> |]
            ==> ?Pa;
         !!a Cs s\<^sub>1 vs h\<^sub>2 l\<^sub>2 Cs'' Ts T pns body Cs' vs'
            h\<^sub>3 l\<^sub>3.
            [| ?s' = (h\<^sub>3, l\<^sub>2);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>map Val vs,
                                   (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P \<turnstile> Path last Cs to ?C unique;
               ?P \<turnstile> Path last Cs to ?C via Cs'' ;
               ?P \<turnstile> ?C has least ?M = (Ts, T, pns, body) via Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               ?P,?E(this |->
               Class (last ((Cs @\<^sub>p Cs'') @\<^sub>p Cs')), pns [|->]
               Ts) \<turnstile> \<langle>body,
                                 (h\<^sub>2,
                                  [this |->
                                   Ref (a,
  (Cs @\<^sub>p Cs'') @\<^sub>p Cs'),
                                   pns [|->] vs'])\<rangle> \<Rightarrow>
                                \<langle>?e',
                                 (h\<^sub>3, l\<^sub>3)\<rangle> |]
            ==> ?Pa;
         !!s\<^sub>1 vs.
            [| ?e' = Throw (addr_of_sys_xcpt NullPointer, [NullPointer]);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>null,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>map Val vs,?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 50, template_var 9),
                      template_var 8),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 49, template_var 7),
                          template_app (template_hole 48, template_var 6)),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 47, t_empty)),
        template_predicate (template_app (template_hole 44, t_empty)),
        template_predicate (template_app (template_hole 35, t_empty)),
        template_predicate (template_app (template_hole 43, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>Cast ?C ?e,?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!a Cs Cs'.
            [| ?e' = ref (a, Cs @\<^sub>p Cs');
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),?s'\<rangle>;
               ?P \<turnstile> Path last Cs to ?C unique;
               ?P \<turnstile> Path last Cs to ?C via Cs'  |]
            ==> ?Pa;
         !!a Cs Cs'.
            [| ?e' = ref (a, Cs @ [?C]);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs @ ?C # Cs'),
                                   ?s'\<rangle> |]
            ==> ?Pa;
         !!a Cs h l D S Cs'.
            [| ?e' = ref (a, Cs'); ?s' = (h, l);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),(h, l)\<rangle>;
               h a = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> Path D to ?C via Cs' ;
               ?P \<turnstile> Path D to ?C unique |]
            ==> ?Pa;
         [| ?e' = null;
            ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                               \<langle>null,?s'\<rangle> |]
         ==> ?Pa;
         !!a Cs h l D S.
            [| ?e' = null; ?s' = (h, l);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),(h, l)\<rangle>;
               h a = \<lfloor>(D, S)\<rfloor>;
               ~ ?P \<turnstile> Path D to ?C unique;
               ~ ?P \<turnstile> Path last Cs to ?C unique; ?C ~: set Cs |]
            ==> ?Pa;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 29, template_var 7),
                      template_var 6),
                    template_app
                     (template_app (template_hole 28, template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 24, template_hole 5))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 29, template_var 7),
                           template_var 6),
                         template_var 4),
                       template_var 3),
                     template_app (template_hole 24, template_hole 5)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 27, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_cases",
     "[| ?P,?E \<turnstile> \<langle>Call ?e None ?M ?es,
                             ?s\<rangle> \<Rightarrow>
                            \<langle>?e',?s'\<rangle>;
         !!e'. [| ?e' = throw e';
                  ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                     \<langle>throw e',?s'\<rangle> |]
               ==> ?Pa;
         !!v s\<^sub>1 vs ex es'.
            [| ?e' = throw ex;
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>Val v,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>map Val vs @ throw ex # es',
                                   ?s'\<rangle> |]
            ==> ?Pa;
         !!a Cs s\<^sub>1 vs h\<^sub>2 l\<^sub>2 C S Ts' T' pns' body' Ds Ts
            T pns body Cs' vs' h\<^sub>3 l\<^sub>3.
            [| ?s' = (h\<^sub>3, l\<^sub>2);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>ref (a, Cs),s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>map Val vs,
                                   (h\<^sub>2, l\<^sub>2)\<rangle>;
               h\<^sub>2 a = \<lfloor>(C, S)\<rfloor>;
               ?P \<turnstile> last
                                Cs has least ?M = (Ts', T', pns',
             body') via Ds;
               ?P \<turnstile> (C,Cs @\<^sub>p
                                  Ds) selects ?M = (Ts, T, pns,
              body) via Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               ?P,?E(this |-> Class (last Cs'), pns [|->]
               Ts) \<turnstile> \<langle>case T' of
   Class D => \<lparr>D\<rparr>body | _ => body,
                                 (h\<^sub>2,
                                  [this |-> Ref (a, Cs'), pns [|->]
                                   vs'])\<rangle> \<Rightarrow>
                                \<langle>?e',
                                 (h\<^sub>3, l\<^sub>3)\<rangle> |]
            ==> ?Pa;
         !!s\<^sub>1 vs.
            [| ?e' = Throw (addr_of_sys_xcpt NullPointer, [NullPointer]);
               ?P,?E \<turnstile> \<langle>?e,?s\<rangle> \<Rightarrow>
                                  \<langle>null,s\<^sub>1\<rangle>;
               ?P,?E \<turnstile> \<langle>?es,
                                   s\<^sub>1\<rangle> [\<Rightarrow>]
                                  \<langle>map Val vs,?s'\<rangle> |]
            ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 56, template_var 8),
                      template_var 7),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 55, template_var 6),
                          template_hole 54),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 53, t_empty)),
        template_predicate (template_app (template_hole 50, t_empty)),
        template_predicate (template_app (template_hole 41, t_empty)),
        template_predicate (template_app (template_hole 49, t_empty))],
       template_predicate (template_var 0))),
    ("BigStep.eval_evals_inducts",
     "[| ?P,?x1a \<turnstile> \<langle>?x2a,
                               (?x3a, ?x3b)\<rangle> \<Rightarrow>
                              \<langle>?x4a,(?x5a, ?x5b)\<rangle>;
         !!h a h' C E l.
            [| new_Addr h = \<lfloor>a\<rfloor>;
               h' = h(a |-> (C, Collect (init_obj ?P C))) |]
            ==> ?P1.0 E (new C) h l (ref (a, [C])) h' l;
         !!h E C l.
            new_Addr h = None ==>
            ?P1.0 E (new C) h l
             (Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) h l;
         !!E e a b aa Cs ab ba C Cs' Ds.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P \<turnstile> Path last Cs to C via Cs' ;
               Ds = Cs @\<^sub>p Cs' |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (ref (aa, Ds)) ab ba;
         !!E e a b aa Cs C Cs' ab ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs @ [C] @ Cs'),
                                  (ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs @ [C] @ Cs')) ab ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (ref (aa, Cs @ [C])) ab ba;
         !!E e a b aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b null aa ba;
         !!E e a b aa Cs ab ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               (last Cs, C) ~: (subcls1 ?P)^*; C ~: set Cs |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b
                 (Throw (addr_of_sys_xcpt ClassCast, [ClassCast])) ab ba;
         !!E e a b e' aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (throw e') aa ba;
         !!E e a b aa Cs ab ba C Cs' Ds.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P \<turnstile> Path last Cs to C unique;
               ?P \<turnstile> Path last Cs to C via Cs' ;
               Ds = Cs @\<^sub>p Cs' |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Ds)) ab ba;
         !!E e a b aa Cs C Cs' ab ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs @ [C] @ Cs'),
                                  (ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs @ [C] @ Cs')) ab ba |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Cs @ [C])) ab ba;
         !!E e a b aa Cs h l D S C Cs'.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) h l;
               h aa = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> Path D to C via Cs' ;
               ?P \<turnstile> Path D to C unique |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Cs')) h l;
         !!E e a b aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (Cast C e) a b null aa ba;
         !!E e a b aa Cs h l D S C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) h l;
               h aa = \<lfloor>(D, S)\<rfloor>;
               ~ ?P \<turnstile> Path D to C unique;
               ~ ?P \<turnstile> Path last Cs to C unique; C ~: set Cs |]
            ==> ?P1.0 E (Cast C e) a b null h l;
         !!E e a b e' aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (Cast C e) a b (throw e') aa ba;
         !!E v a b. ?P1.0 E (Val v) a b (Val v) a b;
         !!E e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 v\<^sub>2 ab bb bop v.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (Val v\<^sub>2) ab bb;
               binop (bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (Val v) ab bb;
         !!E e\<^sub>1 a b e aa ba bop e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (throw e) aa ba |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) aa ba;
         !!E e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 e ab bb bop.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (throw e) ab bb |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) ab bb;
         !!l V v E h.
            l V = \<lfloor>v\<rfloor> ==> ?P1.0 E (Var V) h l (Val v) h l;
         !!E e a b v h l V T v' l'.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(h, l)\<rangle>;
               ?P1.0 E e a b (Val v) h l; E V = \<lfloor>T\<rfloor>;
               ?P \<turnstile> T casts v to v' ; l' = l(V |-> v') |]
            ==> ?P1.0 E (V:=e) a b (Val v') h l';
         !!E e a b e' aa ba V.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (V:=e) a b (throw e') aa ba;
         !!E e a b aa Cs' h l D S Ds Cs fs F v.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs'),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs')) h l;
               h aa = \<lfloor>(D, S)\<rfloor>; Ds = Cs' @\<^sub>p Cs;
               (Ds, fs) : S; fs F = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b (Val v) h l;
         !!E e a b aa ba F Cs.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) aa
                 ba;
         !!E e a b e' aa ba F Cs.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b (throw e') aa ba;
         !!E e\<^sub>1 a b aa Cs' ab ba e\<^sub>2 v h\<^sub>2 l\<^sub>2 D S
            F T Cs v' Ds fs fs' S' h\<^sub>2'.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs'),(ab, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (ref (aa, Cs')) ab ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (ab, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 E e\<^sub>2 ab ba (Val v) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> last Cs' has least F:T via Cs;
               ?P \<turnstile> T casts v to v' ; Ds = Cs' @\<^sub>p Cs;
               (Ds, fs) : S; fs' = fs(F |-> v');
               S' = S - {(Ds, fs)} Un {(Ds, fs')};
               h\<^sub>2' = h\<^sub>2(aa |-> (D, S')) |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b (Val v')
                 h\<^sub>2' l\<^sub>2;
         !!E e\<^sub>1 a b aa ba e\<^sub>2 v ab bb F Cs.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b null aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (Val v) ab bb |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) ab
                 bb;
         !!E e\<^sub>1 a b e' aa ba F Cs e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (throw e') aa ba |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (throw e') aa ba;
         !!E e\<^sub>1 a b v aa ba e\<^sub>2 e' ab bb F Cs.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (throw e') ab bb |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (throw e') ab bb;
         !!E e a b e' aa ba Copt M es.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (Call e Copt M es) a b (throw e') aa ba;
         !!E e a b v aa ba es vs ex es' ab bb Copt M.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs @ throw ex # es',
                                  (ab, bb)\<rangle>;
               ?P2.0 E es aa ba (map Val vs @ throw ex # es') ab bb |]
            ==> ?P1.0 E (Call e Copt M es) a b (throw ex) ab bb;
         !!E e a b aa Cs ab ba ps vs h\<^sub>2 l\<^sub>2 C S M Ts' T' pns'
            body' Ds Ts T pns body Cs' vs' l\<^sub>2' new_body e' h\<^sub>3
            l\<^sub>3.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P,E \<turnstile> \<langle>ps,
                                  (ab, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 E ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, S)\<rfloor>;
               ?P \<turnstile> last
                                Cs has least M = (Ts', T', pns',
            body') via Ds;
               ?P \<turnstile> (C,Cs @\<^sub>p
                                  Ds) selects M = (Ts, T, pns,
             body) via Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               l\<^sub>2' = [this |-> Ref (aa, Cs'), pns [|->] vs'];
               new_body =
               (case T' of Class D => \<lparr>D\<rparr>body | _ => body);
               ?P,E(this |-> Class (last Cs'), pns [|->]
               Ts) \<turnstile> \<langle>new_body,
                                 (h\<^sub>2,
                                  l\<^sub>2')\<rangle> \<Rightarrow>
                                \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 (E(this |-> Class (last Cs'), pns [|->] Ts)) new_body
                h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 E (Call e None M ps) a b e' h\<^sub>3 l\<^sub>2;
         !!E e a b aa Cs ab ba ps vs h\<^sub>2 l\<^sub>2 C Cs'' M Ts T pns
            body Cs' Ds vs' l\<^sub>2' e' h\<^sub>3 l\<^sub>3.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P,E \<turnstile> \<langle>ps,
                                  (ab, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 E ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               ?P \<turnstile> Path last Cs to C unique;
               ?P \<turnstile> Path last Cs to C via Cs'' ;
               ?P \<turnstile> C has least M = (Ts, T, pns, body) via Cs';
               Ds = (Cs @\<^sub>p Cs'') @\<^sub>p Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               l\<^sub>2' = [this |-> Ref (aa, Ds), pns [|->] vs'];
               ?P,E(this |-> Class (last Ds), pns [|->]
               Ts) \<turnstile> \<langle>body,
                                 (h\<^sub>2,
                                  l\<^sub>2')\<rangle> \<Rightarrow>
                                \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 (E(this |-> Class (last Ds), pns [|->] Ts)) body
                h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 E (Call e \<lfloor>C\<rfloor> M ps) a b e' h\<^sub>3
                 l\<^sub>2;
         !!E e a b aa ba es vs ab bb Copt M.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,(ab, bb)\<rangle>;
               ?P2.0 E es aa ba (map Val vs) ab bb |]
            ==> ?P1.0 E (Call e Copt M es) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) ab
                 bb;
         !!E V T e\<^sub>0 h\<^sub>0 l\<^sub>0 e\<^sub>1 h\<^sub>1
            l\<^sub>1.
            [| ?P,E(V |->
               T) \<turnstile> \<langle>e\<^sub>0,
                                (h\<^sub>0, l\<^sub>0
                                 (V := None))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>1,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 (E(V |-> T)) e\<^sub>0 h\<^sub>0 (l\<^sub>0(V := None))
                e\<^sub>1 h\<^sub>1 l\<^sub>1 |]
            ==> ?P1.0 E {V:T; e\<^sub>0} h\<^sub>0 l\<^sub>0 e\<^sub>1
                 h\<^sub>1 (l\<^sub>1(V := l\<^sub>0 V));
         !!E e\<^sub>0 a b v aa ba e\<^sub>1 e\<^sub>2 ab bb.
            [| ?P,E \<turnstile> \<langle>e\<^sub>0,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>0 a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>1 aa ba e\<^sub>2 ab bb |]
            ==> ?P1.0 E (e\<^sub>0;; e\<^sub>1) a b e\<^sub>2 ab bb;
         !!E e\<^sub>0 a b e aa ba e\<^sub>1.
            [| ?P,E \<turnstile> \<langle>e\<^sub>0,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>0 a b (throw e) aa ba |]
            ==> ?P1.0 E (e\<^sub>0;; e\<^sub>1) a b (throw e) aa ba;
         !!E e a b aa ba e\<^sub>1 e' ab bb e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>1 aa ba e' ab bb |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!E e a b aa ba e\<^sub>2 e' ab bb e\<^sub>1.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 E e a b false aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba e' ab bb |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!E e a b e' aa ba e\<^sub>1 e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b (throw e') aa
                 ba;
         !!E e a b aa ba c.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 E e a b false aa ba |]
            ==> ?P1.0 E (while (e) c) a b unit aa ba;
         !!E e a b aa ba c v\<^sub>1 ab bb e\<^sub>3 ac bc.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(ab, bb)\<rangle>;
               ?P1.0 E c aa ba (Val v\<^sub>1) ab bb;
               ?P,E \<turnstile> \<langle>while (e) c,
                                  (ab, bb)\<rangle> \<Rightarrow>
                                 \<langle>e\<^sub>3,(ac, bc)\<rangle>;
               ?P1.0 E (while (e) c) ab bb e\<^sub>3 ac bc |]
            ==> ?P1.0 E (while (e) c) a b e\<^sub>3 ac bc;
         !!E e a b e' aa ba c.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (while (e) c) a b (throw e') aa ba;
         !!E e a b aa ba c e' ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 E c aa ba (throw e') ab bb |]
            ==> ?P1.0 E (while (e) c) a b (throw e') ab bb;
         !!E e a b aa ba ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, ba),(ab, bb)\<rangle>;
               ?P1.0 E e a b (ref (aa, ba)) ab bb |]
            ==> ?P1.0 E (throw e) a b (Throw (aa, ba)) ab bb;
         !!E e a b aa ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (throw e) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) aa
                 ba;
         !!E e a b e' aa ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (throw e) a b (throw e') aa ba;
         !!E a b. ?P2.0 E [] a b [] a b;
         !!E e a b v aa ba es es' ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>es',(ab, bb)\<rangle>;
               ?P2.0 E es aa ba es' ab bb |]
            ==> ?P2.0 E (e # es) a b (Val v # es') ab bb;
         !!E e a b e' aa ba es.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P2.0 E (e # es) a b (throw e' # es) aa ba |]
      ==> ?P1.0 ?x1a ?x2a ?x3a ?x3b ?x4a ?x5a ?x5b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 110, template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app (template_hole 109, template_var 6),
                    template_var 5)),
                template_var 4),
              template_app
               (template_app (template_hole 109, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 108, t_empty)),
        template_predicate (template_app (template_hole 108, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 104, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_var 1, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("BigStep.eval_evals_inducts",
     "[| ?P,?x6a \<turnstile> \<langle>?x7a,
                               (?x8a, ?x8b)\<rangle> [\<Rightarrow>]
                              \<langle>?x9a,(?x10a, ?x10b)\<rangle>;
         !!h a h' C E l.
            [| new_Addr h = \<lfloor>a\<rfloor>;
               h' = h(a |-> (C, Collect (init_obj ?P C))) |]
            ==> ?P1.0 E (new C) h l (ref (a, [C])) h' l;
         !!h E C l.
            new_Addr h = None ==>
            ?P1.0 E (new C) h l
             (Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) h l;
         !!E e a b aa Cs ab ba C Cs' Ds.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P \<turnstile> Path last Cs to C via Cs' ;
               Ds = Cs @\<^sub>p Cs' |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (ref (aa, Ds)) ab ba;
         !!E e a b aa Cs C Cs' ab ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs @ [C] @ Cs'),
                                  (ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs @ [C] @ Cs')) ab ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (ref (aa, Cs @ [C])) ab ba;
         !!E e a b aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b null aa ba;
         !!E e a b aa Cs ab ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               (last Cs, C) ~: (subcls1 ?P)^*; C ~: set Cs |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b
                 (Throw (addr_of_sys_xcpt ClassCast, [ClassCast])) ab ba;
         !!E e a b e' aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (throw e') aa ba;
         !!E e a b aa Cs ab ba C Cs' Ds.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P \<turnstile> Path last Cs to C unique;
               ?P \<turnstile> Path last Cs to C via Cs' ;
               Ds = Cs @\<^sub>p Cs' |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Ds)) ab ba;
         !!E e a b aa Cs C Cs' ab ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs @ [C] @ Cs'),
                                  (ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs @ [C] @ Cs')) ab ba |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Cs @ [C])) ab ba;
         !!E e a b aa Cs h l D S C Cs'.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) h l;
               h aa = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> Path D to C via Cs' ;
               ?P \<turnstile> Path D to C unique |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Cs')) h l;
         !!E e a b aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (Cast C e) a b null aa ba;
         !!E e a b aa Cs h l D S C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) h l;
               h aa = \<lfloor>(D, S)\<rfloor>;
               ~ ?P \<turnstile> Path D to C unique;
               ~ ?P \<turnstile> Path last Cs to C unique; C ~: set Cs |]
            ==> ?P1.0 E (Cast C e) a b null h l;
         !!E e a b e' aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (Cast C e) a b (throw e') aa ba;
         !!E v a b. ?P1.0 E (Val v) a b (Val v) a b;
         !!E e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 v\<^sub>2 ab bb bop v.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (Val v\<^sub>2) ab bb;
               binop (bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (Val v) ab bb;
         !!E e\<^sub>1 a b e aa ba bop e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (throw e) aa ba |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) aa ba;
         !!E e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 e ab bb bop.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (throw e) ab bb |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) ab bb;
         !!l V v E h.
            l V = \<lfloor>v\<rfloor> ==> ?P1.0 E (Var V) h l (Val v) h l;
         !!E e a b v h l V T v' l'.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(h, l)\<rangle>;
               ?P1.0 E e a b (Val v) h l; E V = \<lfloor>T\<rfloor>;
               ?P \<turnstile> T casts v to v' ; l' = l(V |-> v') |]
            ==> ?P1.0 E (V:=e) a b (Val v') h l';
         !!E e a b e' aa ba V.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (V:=e) a b (throw e') aa ba;
         !!E e a b aa Cs' h l D S Ds Cs fs F v.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs'),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs')) h l;
               h aa = \<lfloor>(D, S)\<rfloor>; Ds = Cs' @\<^sub>p Cs;
               (Ds, fs) : S; fs F = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b (Val v) h l;
         !!E e a b aa ba F Cs.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) aa
                 ba;
         !!E e a b e' aa ba F Cs.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b (throw e') aa ba;
         !!E e\<^sub>1 a b aa Cs' ab ba e\<^sub>2 v h\<^sub>2 l\<^sub>2 D S
            F T Cs v' Ds fs fs' S' h\<^sub>2'.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs'),(ab, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (ref (aa, Cs')) ab ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (ab, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 E e\<^sub>2 ab ba (Val v) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> last Cs' has least F:T via Cs;
               ?P \<turnstile> T casts v to v' ; Ds = Cs' @\<^sub>p Cs;
               (Ds, fs) : S; fs' = fs(F |-> v');
               S' = S - {(Ds, fs)} Un {(Ds, fs')};
               h\<^sub>2' = h\<^sub>2(aa |-> (D, S')) |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b (Val v')
                 h\<^sub>2' l\<^sub>2;
         !!E e\<^sub>1 a b aa ba e\<^sub>2 v ab bb F Cs.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b null aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (Val v) ab bb |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) ab
                 bb;
         !!E e\<^sub>1 a b e' aa ba F Cs e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (throw e') aa ba |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (throw e') aa ba;
         !!E e\<^sub>1 a b v aa ba e\<^sub>2 e' ab bb F Cs.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (throw e') ab bb |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (throw e') ab bb;
         !!E e a b e' aa ba Copt M es.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (Call e Copt M es) a b (throw e') aa ba;
         !!E e a b v aa ba es vs ex es' ab bb Copt M.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs @ throw ex # es',
                                  (ab, bb)\<rangle>;
               ?P2.0 E es aa ba (map Val vs @ throw ex # es') ab bb |]
            ==> ?P1.0 E (Call e Copt M es) a b (throw ex) ab bb;
         !!E e a b aa Cs ab ba ps vs h\<^sub>2 l\<^sub>2 C S M Ts' T' pns'
            body' Ds Ts T pns body Cs' vs' l\<^sub>2' new_body e' h\<^sub>3
            l\<^sub>3.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P,E \<turnstile> \<langle>ps,
                                  (ab, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 E ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, S)\<rfloor>;
               ?P \<turnstile> last
                                Cs has least M = (Ts', T', pns',
            body') via Ds;
               ?P \<turnstile> (C,Cs @\<^sub>p
                                  Ds) selects M = (Ts, T, pns,
             body) via Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               l\<^sub>2' = [this |-> Ref (aa, Cs'), pns [|->] vs'];
               new_body =
               (case T' of Class D => \<lparr>D\<rparr>body | _ => body);
               ?P,E(this |-> Class (last Cs'), pns [|->]
               Ts) \<turnstile> \<langle>new_body,
                                 (h\<^sub>2,
                                  l\<^sub>2')\<rangle> \<Rightarrow>
                                \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 (E(this |-> Class (last Cs'), pns [|->] Ts)) new_body
                h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 E (Call e None M ps) a b e' h\<^sub>3 l\<^sub>2;
         !!E e a b aa Cs ab ba ps vs h\<^sub>2 l\<^sub>2 C Cs'' M Ts T pns
            body Cs' Ds vs' l\<^sub>2' e' h\<^sub>3 l\<^sub>3.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P,E \<turnstile> \<langle>ps,
                                  (ab, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 E ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               ?P \<turnstile> Path last Cs to C unique;
               ?P \<turnstile> Path last Cs to C via Cs'' ;
               ?P \<turnstile> C has least M = (Ts, T, pns, body) via Cs';
               Ds = (Cs @\<^sub>p Cs'') @\<^sub>p Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               l\<^sub>2' = [this |-> Ref (aa, Ds), pns [|->] vs'];
               ?P,E(this |-> Class (last Ds), pns [|->]
               Ts) \<turnstile> \<langle>body,
                                 (h\<^sub>2,
                                  l\<^sub>2')\<rangle> \<Rightarrow>
                                \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 (E(this |-> Class (last Ds), pns [|->] Ts)) body
                h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 E (Call e \<lfloor>C\<rfloor> M ps) a b e' h\<^sub>3
                 l\<^sub>2;
         !!E e a b aa ba es vs ab bb Copt M.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,(ab, bb)\<rangle>;
               ?P2.0 E es aa ba (map Val vs) ab bb |]
            ==> ?P1.0 E (Call e Copt M es) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) ab
                 bb;
         !!E V T e\<^sub>0 h\<^sub>0 l\<^sub>0 e\<^sub>1 h\<^sub>1
            l\<^sub>1.
            [| ?P,E(V |->
               T) \<turnstile> \<langle>e\<^sub>0,
                                (h\<^sub>0, l\<^sub>0
                                 (V := None))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>1,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 (E(V |-> T)) e\<^sub>0 h\<^sub>0 (l\<^sub>0(V := None))
                e\<^sub>1 h\<^sub>1 l\<^sub>1 |]
            ==> ?P1.0 E {V:T; e\<^sub>0} h\<^sub>0 l\<^sub>0 e\<^sub>1
                 h\<^sub>1 (l\<^sub>1(V := l\<^sub>0 V));
         !!E e\<^sub>0 a b v aa ba e\<^sub>1 e\<^sub>2 ab bb.
            [| ?P,E \<turnstile> \<langle>e\<^sub>0,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>0 a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>1 aa ba e\<^sub>2 ab bb |]
            ==> ?P1.0 E (e\<^sub>0;; e\<^sub>1) a b e\<^sub>2 ab bb;
         !!E e\<^sub>0 a b e aa ba e\<^sub>1.
            [| ?P,E \<turnstile> \<langle>e\<^sub>0,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>0 a b (throw e) aa ba |]
            ==> ?P1.0 E (e\<^sub>0;; e\<^sub>1) a b (throw e) aa ba;
         !!E e a b aa ba e\<^sub>1 e' ab bb e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>1 aa ba e' ab bb |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!E e a b aa ba e\<^sub>2 e' ab bb e\<^sub>1.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 E e a b false aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba e' ab bb |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!E e a b e' aa ba e\<^sub>1 e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b (throw e') aa
                 ba;
         !!E e a b aa ba c.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 E e a b false aa ba |]
            ==> ?P1.0 E (while (e) c) a b unit aa ba;
         !!E e a b aa ba c v\<^sub>1 ab bb e\<^sub>3 ac bc.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(ab, bb)\<rangle>;
               ?P1.0 E c aa ba (Val v\<^sub>1) ab bb;
               ?P,E \<turnstile> \<langle>while (e) c,
                                  (ab, bb)\<rangle> \<Rightarrow>
                                 \<langle>e\<^sub>3,(ac, bc)\<rangle>;
               ?P1.0 E (while (e) c) ab bb e\<^sub>3 ac bc |]
            ==> ?P1.0 E (while (e) c) a b e\<^sub>3 ac bc;
         !!E e a b e' aa ba c.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (while (e) c) a b (throw e') aa ba;
         !!E e a b aa ba c e' ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 E c aa ba (throw e') ab bb |]
            ==> ?P1.0 E (while (e) c) a b (throw e') ab bb;
         !!E e a b aa ba ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, ba),(ab, bb)\<rangle>;
               ?P1.0 E e a b (ref (aa, ba)) ab bb |]
            ==> ?P1.0 E (throw e) a b (Throw (aa, ba)) ab bb;
         !!E e a b aa ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (throw e) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) aa
                 ba;
         !!E e a b e' aa ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (throw e) a b (throw e') aa ba;
         !!E a b. ?P2.0 E [] a b [] a b;
         !!E e a b v aa ba es es' ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>es',(ab, bb)\<rangle>;
               ?P2.0 E es aa ba es' ab bb |]
            ==> ?P2.0 E (e # es) a b (Val v # es') ab bb;
         !!E e a b e' aa ba es.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P2.0 E (e # es) a b (throw e' # es) aa ba |]
      ==> ?P2.0 ?x6a ?x7a ?x8a ?x8b ?x9a ?x10a ?x10b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 110, template_var 9),
                      template_var 8),
                    template_var 7),
                  template_app
                   (template_app (template_hole 109, template_var 6),
                    template_var 5)),
                template_var 4),
              template_app
               (template_app (template_hole 109, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 108, t_empty)),
        template_predicate (template_app (template_hole 108, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 104, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty)),
        template_predicate (template_app (template_hole 105, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_var 0, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("BigStep.eval_evals_induct",
     "[| !!h a h' C E l.
            [| new_Addr h = \<lfloor>a\<rfloor>;
               h' = h(a |-> (C, Collect (init_obj ?P C))) |]
            ==> ?P1.0 E (new C) h l (ref (a, [C])) h' l;
         !!h E C l.
            new_Addr h = None ==>
            ?P1.0 E (new C) h l
             (Throw (addr_of_sys_xcpt OutOfMemory, [OutOfMemory])) h l;
         !!E e a b aa Cs ab ba C Cs' Ds.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P \<turnstile> Path last Cs to C via Cs' ;
               Ds = Cs @\<^sub>p Cs' |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (ref (aa, Ds)) ab ba;
         !!E e a b aa Cs C Cs' ab ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs @ [C] @ Cs'),
                                  (ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs @ [C] @ Cs')) ab ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (ref (aa, Cs @ [C])) ab ba;
         !!E e a b aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b null aa ba;
         !!E e a b aa Cs ab ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               (last Cs, C) ~: (subcls1 ?P)^*; C ~: set Cs |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b
                 (Throw (addr_of_sys_xcpt ClassCast, [ClassCast])) ab ba;
         !!E e a b e' aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (\<lparr>C\<rparr>e) a b (throw e') aa ba;
         !!E e a b aa Cs ab ba C Cs' Ds.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P \<turnstile> Path last Cs to C unique;
               ?P \<turnstile> Path last Cs to C via Cs' ;
               Ds = Cs @\<^sub>p Cs' |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Ds)) ab ba;
         !!E e a b aa Cs C Cs' ab ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs @ [C] @ Cs'),
                                  (ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs @ [C] @ Cs')) ab ba |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Cs @ [C])) ab ba;
         !!E e a b aa Cs h l D S C Cs'.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) h l;
               h aa = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> Path D to C via Cs' ;
               ?P \<turnstile> Path D to C unique |]
            ==> ?P1.0 E (Cast C e) a b (ref (aa, Cs')) h l;
         !!E e a b aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (Cast C e) a b null aa ba;
         !!E e a b aa Cs h l D S C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) h l;
               h aa = \<lfloor>(D, S)\<rfloor>;
               ~ ?P \<turnstile> Path D to C unique;
               ~ ?P \<turnstile> Path last Cs to C unique; C ~: set Cs |]
            ==> ?P1.0 E (Cast C e) a b null h l;
         !!E e a b e' aa ba C.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (Cast C e) a b (throw e') aa ba;
         !!E v a b. ?P1.0 E (Val v) a b (Val v) a b;
         !!E e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 v\<^sub>2 ab bb bop v.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (Val v\<^sub>2) ab bb;
               binop (bop, v\<^sub>1, v\<^sub>2) = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (Val v) ab bb;
         !!E e\<^sub>1 a b e aa ba bop e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (throw e) aa ba |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) aa ba;
         !!E e\<^sub>1 a b v\<^sub>1 aa ba e\<^sub>2 e ab bb bop.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v\<^sub>1) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (throw e) ab bb |]
            ==> ?P1.0 E
                 (e\<^sub>1 \<guillemotleft>bop\<guillemotright> e\<^sub>2)
                 a b (throw e) ab bb;
         !!l V v E h.
            l V = \<lfloor>v\<rfloor> ==> ?P1.0 E (Var V) h l (Val v) h l;
         !!E e a b v h l V T v' l'.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(h, l)\<rangle>;
               ?P1.0 E e a b (Val v) h l; E V = \<lfloor>T\<rfloor>;
               ?P \<turnstile> T casts v to v' ; l' = l(V |-> v') |]
            ==> ?P1.0 E (V:=e) a b (Val v') h l';
         !!E e a b e' aa ba V.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (V:=e) a b (throw e') aa ba;
         !!E e a b aa Cs' h l D S Ds Cs fs F v.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs'),(h, l)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs')) h l;
               h aa = \<lfloor>(D, S)\<rfloor>; Ds = Cs' @\<^sub>p Cs;
               (Ds, fs) : S; fs F = \<lfloor>v\<rfloor> |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b (Val v) h l;
         !!E e a b aa ba F Cs.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) aa
                 ba;
         !!E e a b e' aa ba F Cs.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (e\<bullet>F{Cs}) a b (throw e') aa ba;
         !!E e\<^sub>1 a b aa Cs' ab ba e\<^sub>2 v h\<^sub>2 l\<^sub>2 D S
            F T Cs v' Ds fs fs' S' h\<^sub>2'.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs'),(ab, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (ref (aa, Cs')) ab ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (ab, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P1.0 E e\<^sub>2 ab ba (Val v) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(D, S)\<rfloor>;
               ?P \<turnstile> last Cs' has least F:T via Cs;
               ?P \<turnstile> T casts v to v' ; Ds = Cs' @\<^sub>p Cs;
               (Ds, fs) : S; fs' = fs(F |-> v');
               S' = S - {(Ds, fs)} Un {(Ds, fs')};
               h\<^sub>2' = h\<^sub>2(aa |-> (D, S')) |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b (Val v')
                 h\<^sub>2' l\<^sub>2;
         !!E e\<^sub>1 a b aa ba e\<^sub>2 v ab bb F Cs.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b null aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (Val v) ab bb |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) ab
                 bb;
         !!E e\<^sub>1 a b e' aa ba F Cs e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (throw e') aa ba |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (throw e') aa ba;
         !!E e\<^sub>1 a b v aa ba e\<^sub>2 e' ab bb F Cs.
            [| ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>1 a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba (throw e') ab bb |]
            ==> ?P1.0 E (e\<^sub>1\<bullet>F{Cs} := e\<^sub>2) a b
                 (throw e') ab bb;
         !!E e a b e' aa ba Copt M es.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (Call e Copt M es) a b (throw e') aa ba;
         !!E e a b v aa ba es vs ex es' ab bb Copt M.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs @ throw ex # es',
                                  (ab, bb)\<rangle>;
               ?P2.0 E es aa ba (map Val vs @ throw ex # es') ab bb |]
            ==> ?P1.0 E (Call e Copt M es) a b (throw ex) ab bb;
         !!E e a b aa Cs ab ba ps vs h\<^sub>2 l\<^sub>2 C S M Ts' T' pns'
            body' Ds Ts T pns body Cs' vs' l\<^sub>2' new_body e' h\<^sub>3
            l\<^sub>3.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P,E \<turnstile> \<langle>ps,
                                  (ab, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 E ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               h\<^sub>2 aa = \<lfloor>(C, S)\<rfloor>;
               ?P \<turnstile> last
                                Cs has least M = (Ts', T', pns',
            body') via Ds;
               ?P \<turnstile> (C,Cs @\<^sub>p
                                  Ds) selects M = (Ts, T, pns,
             body) via Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               l\<^sub>2' = [this |-> Ref (aa, Cs'), pns [|->] vs'];
               new_body =
               (case T' of Class D => \<lparr>D\<rparr>body | _ => body);
               ?P,E(this |-> Class (last Cs'), pns [|->]
               Ts) \<turnstile> \<langle>new_body,
                                 (h\<^sub>2,
                                  l\<^sub>2')\<rangle> \<Rightarrow>
                                \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 (E(this |-> Class (last Cs'), pns [|->] Ts)) new_body
                h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 E (Call e None M ps) a b e' h\<^sub>3 l\<^sub>2;
         !!E e a b aa Cs ab ba ps vs h\<^sub>2 l\<^sub>2 C Cs'' M Ts T pns
            body Cs' Ds vs' l\<^sub>2' e' h\<^sub>3 l\<^sub>3.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, Cs),(ab, ba)\<rangle>;
               ?P1.0 E e a b (ref (aa, Cs)) ab ba;
               ?P,E \<turnstile> \<langle>ps,
                                  (ab, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,
                                  (h\<^sub>2, l\<^sub>2)\<rangle>;
               ?P2.0 E ps ab ba (map Val vs) h\<^sub>2 l\<^sub>2;
               ?P \<turnstile> Path last Cs to C unique;
               ?P \<turnstile> Path last Cs to C via Cs'' ;
               ?P \<turnstile> C has least M = (Ts, T, pns, body) via Cs';
               Ds = (Cs @\<^sub>p Cs'') @\<^sub>p Cs';
               length vs = length pns; ?P \<turnstile> Ts Casts vs to vs' ;
               l\<^sub>2' = [this |-> Ref (aa, Ds), pns [|->] vs'];
               ?P,E(this |-> Class (last Ds), pns [|->]
               Ts) \<turnstile> \<langle>body,
                                 (h\<^sub>2,
                                  l\<^sub>2')\<rangle> \<Rightarrow>
                                \<langle>e',(h\<^sub>3, l\<^sub>3)\<rangle>;
               ?P1.0 (E(this |-> Class (last Ds), pns [|->] Ts)) body
                h\<^sub>2 l\<^sub>2' e' h\<^sub>3 l\<^sub>3 |]
            ==> ?P1.0 E (Call e \<lfloor>C\<rfloor> M ps) a b e' h\<^sub>3
                 l\<^sub>2;
         !!E e a b aa ba es vs ab bb Copt M.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>map Val vs,(ab, bb)\<rangle>;
               ?P2.0 E es aa ba (map Val vs) ab bb |]
            ==> ?P1.0 E (Call e Copt M es) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) ab
                 bb;
         !!E V T e\<^sub>0 h\<^sub>0 l\<^sub>0 e\<^sub>1 h\<^sub>1
            l\<^sub>1.
            [| ?P,E(V |->
               T) \<turnstile> \<langle>e\<^sub>0,
                                (h\<^sub>0, l\<^sub>0
                                 (V := None))\<rangle> \<Rightarrow>
                               \<langle>e\<^sub>1,
                                (h\<^sub>1, l\<^sub>1)\<rangle>;
               ?P1.0 (E(V |-> T)) e\<^sub>0 h\<^sub>0 (l\<^sub>0(V := None))
                e\<^sub>1 h\<^sub>1 l\<^sub>1 |]
            ==> ?P1.0 E {V:T; e\<^sub>0} h\<^sub>0 l\<^sub>0 e\<^sub>1
                 h\<^sub>1 (l\<^sub>1(V := l\<^sub>0 V));
         !!E e\<^sub>0 a b v aa ba e\<^sub>1 e\<^sub>2 ab bb.
            [| ?P,E \<turnstile> \<langle>e\<^sub>0,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>0 a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e\<^sub>2,(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>1 aa ba e\<^sub>2 ab bb |]
            ==> ?P1.0 E (e\<^sub>0;; e\<^sub>1) a b e\<^sub>2 ab bb;
         !!E e\<^sub>0 a b e aa ba e\<^sub>1.
            [| ?P,E \<turnstile> \<langle>e\<^sub>0,
                                  (a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e,(aa, ba)\<rangle>;
               ?P1.0 E e\<^sub>0 a b (throw e) aa ba |]
            ==> ?P1.0 E (e\<^sub>0;; e\<^sub>1) a b (throw e) aa ba;
         !!E e a b aa ba e\<^sub>1 e' ab bb e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>1,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>1 aa ba e' ab bb |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!E e a b aa ba e\<^sub>2 e' ab bb e\<^sub>1.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 E e a b false aa ba;
               ?P,E \<turnstile> \<langle>e\<^sub>2,
                                  (aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>e',(ab, bb)\<rangle>;
               ?P1.0 E e\<^sub>2 aa ba e' ab bb |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b e' ab bb;
         !!E e a b e' aa ba e\<^sub>1 e\<^sub>2.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (if (e) e\<^sub>1 else e\<^sub>2) a b (throw e') aa
                 ba;
         !!E e a b aa ba c.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>false,(aa, ba)\<rangle>;
               ?P1.0 E e a b false aa ba |]
            ==> ?P1.0 E (while (e) c) a b unit aa ba;
         !!E e a b aa ba c v\<^sub>1 ab bb e\<^sub>3 ac bc.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>Val v\<^sub>1,(ab, bb)\<rangle>;
               ?P1.0 E c aa ba (Val v\<^sub>1) ab bb;
               ?P,E \<turnstile> \<langle>while (e) c,
                                  (ab, bb)\<rangle> \<Rightarrow>
                                 \<langle>e\<^sub>3,(ac, bc)\<rangle>;
               ?P1.0 E (while (e) c) ab bb e\<^sub>3 ac bc |]
            ==> ?P1.0 E (while (e) c) a b e\<^sub>3 ac bc;
         !!E e a b e' aa ba c.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (while (e) c) a b (throw e') aa ba;
         !!E e a b aa ba c e' ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>true,(aa, ba)\<rangle>;
               ?P1.0 E e a b true aa ba;
               ?P,E \<turnstile> \<langle>c,(aa, ba)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(ab, bb)\<rangle>;
               ?P1.0 E c aa ba (throw e') ab bb |]
            ==> ?P1.0 E (while (e) c) a b (throw e') ab bb;
         !!E e a b aa ba ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>ref (aa, ba),(ab, bb)\<rangle>;
               ?P1.0 E e a b (ref (aa, ba)) ab bb |]
            ==> ?P1.0 E (throw e) a b (Throw (aa, ba)) ab bb;
         !!E e a b aa ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>null,(aa, ba)\<rangle>;
               ?P1.0 E e a b null aa ba |]
            ==> ?P1.0 E (throw e) a b
                 (Throw (addr_of_sys_xcpt NullPointer, [NullPointer])) aa
                 ba;
         !!E e a b e' aa ba.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P1.0 E (throw e) a b (throw e') aa ba;
         !!E a b. ?P2.0 E [] a b [] a b;
         !!E e a b v aa ba es es' ab bb.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>Val v,(aa, ba)\<rangle>;
               ?P1.0 E e a b (Val v) aa ba;
               ?P,E \<turnstile> \<langle>es,
                                  (aa, ba)\<rangle> [\<Rightarrow>]
                                 \<langle>es',(ab, bb)\<rangle>;
               ?P2.0 E es aa ba es' ab bb |]
            ==> ?P2.0 E (e # es) a b (Val v # es') ab bb;
         !!E e a b e' aa ba es.
            [| ?P,E \<turnstile> \<langle>e,(a, b)\<rangle> \<Rightarrow>
                                 \<langle>throw e',(aa, ba)\<rangle>;
               ?P1.0 E e a b (throw e') aa ba |]
            ==> ?P2.0 E (e # es) a b (throw e' # es) aa ba |]
      ==> (?P,?x1a \<turnstile> \<langle>?x2a,
                                 (?x3a, ?x3b)\<rangle> \<Rightarrow>
                                \<langle>?x4a,(?x5a, ?x5b)\<rangle> -->
           ?P1.0 ?x1a ?x2a ?x3a ?x3b ?x4a ?x5a ?x5b) &
          (?P,?x6a \<turnstile> \<langle>?x7a,
                                 (?x8a, ?x8b)\<rangle> [\<Rightarrow>]
                                \<langle>?x9a,(?x10a, ?x10b)\<rangle> -->
           ?P2.0 ?x6a ?x7a ?x8a ?x8b ?x9a ?x10a ?x10b)",
     template_implication
      ([template_predicate (template_app (template_hole 113, t_empty)),
        template_predicate (template_app (template_hole 113, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 109, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty)),
        template_predicate (template_app (template_hole 110, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 86, template_var 16),
                             template_var 13),
                           template_var 12),
                         template_app
                          (template_app (template_hole 85, template_var 11),
                           template_var 10)),
                       template_var 9),
                     template_app
                      (template_app (template_hole 85, template_var 8),
                       template_var 7))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_var 15, template_var 13),
                             template_var 12),
                           template_var 11),
                         template_var 10),
                       template_var 9),
                     template_var 8),
                   template_var 7))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 34, template_var 16),
                           template_var 6),
                         template_var 5),
                       template_app
                        (template_app (template_hole 85, template_var 4),
                         template_var 3)),
                     template_var 2),
                   template_app
                    (template_app (template_hole 85, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_var 14, template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.BigStepTemplates"
### 1.608s elapsed time, 1.745s cpu time, 0.064s GC time
val it = (): unit
