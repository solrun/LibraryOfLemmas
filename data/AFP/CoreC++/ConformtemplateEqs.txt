   [("Conform.conf_NT", "(?P,?h \<turnstile> ?v :\<le> NT) = (?v = Null)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Conform.conf_Null",
     "(?P,?h \<turnstile> Null :\<le> ?T) = ?P \<turnstile> NT \<le> ?T",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_hole 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_hole 0),
         template_var 0))),
    ("Conform.confs_rev",
     "(?P,?h \<turnstile> rev ?s [:\<le>] ?t) =
      (?P,?h \<turnstile> ?s [:\<le>] rev ?t)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Conform.confs_Cons2",
     "(?P,?h \<turnstile> ?xs [:\<le>] ?y # ?ys) =
      (EX z zs.
          ?xs = z # zs &
          ?P,?h \<turnstile> z :\<le> ?y &
          ?P,?h \<turnstile> zs [:\<le>] ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty)))]
