Loading theory "Draft.Incidence" (required by "Draft.OrderMoreTemplates" via "Draft.Order")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.143s elapsed time, 0.594s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.204s elapsed time, 0.839s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.330s elapsed time, 1.317s cpu time, 0.115s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.980s elapsed time, 3.658s cpu time, 0.880s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.050s elapsed time, 3.769s cpu time, 0.848s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.942s elapsed time, 6.008s cpu time, 1.109s GC time
Loading theory "Draft.Templates" (required by "Draft.OrderMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OrderMoreTemplates")
locale Eq_relation
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
  assumes "Eq_relation Eq Inv"
locale Definition_1
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
    and Line_on :: "Line => Point => bool"
  assumes "Definition_1 Eq Inv"
locale Axiom_1
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
    and Line_on :: "Line => Point => bool"
  assumes "Axiom_1 Eq Inv Line_on"
locale Incidence_Rule
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
    and Line_on :: "Line => Point => bool"
  assumes "Incidence_Rule Eq Inv Line_on"
### theory "Draft.Incidence"
### 2.676s elapsed time, 7.848s cpu time, 1.286s GC time
Loading theory "Draft.Order" (required by "Draft.OrderMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.541s elapsed time, 1.147s cpu time, 0.136s GC time
locale Definition_2
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
    and Line_on :: "Line => Point => bool"
    and Line_on_Seg :: "Line => Segment => bool"
    and Bet_Point :: "Segment => Point => bool"
    and Seg_on_Seg :: "Segment => Segment => bool"
    and Line_on_Line :: "Line => Line => bool"
    and Plane_sameside :: "Line => Point => Point => bool"
    and Plane_diffside :: "Line => Point => Point => bool"
  assumes
    "Definition_2 Eq Inv Line_on Line_on_Seg Bet_Point Plane_sameside
      Plane_diffside"
locale Axiom_2
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
    and Line_on :: "Line => Point => bool"
    and Line_on_Seg :: "Line => Segment => bool"
    and Bet_Point :: "Segment => Point => bool"
    and Seg_on_Seg :: "Segment => Segment => bool"
    and Line_on_Line :: "Line => Line => bool"
    and Plane_sameside :: "Line => Point => Point => bool"
    and Plane_diffside :: "Line => Point => Point => bool"
  assumes
    "Axiom_2 Eq Inv Line_on Line_on_Seg Bet_Point Plane_sameside
      Plane_diffside"
locale Order_Rule
  fixes Eq :: "Geo_objects => Geo_objects => bool"
    and Inv :: "bool => bool"
    and Line_on :: "Line => Point => bool"
    and Line_on_Seg :: "Line => Segment => bool"
    and Bet_Point :: "Segment => Point => bool"
    and Seg_on_Seg :: "Segment => Segment => bool"
    and Line_on_Line :: "Line => Line => bool"
    and Plane_sameside :: "Line => Point => Point => bool"
    and Plane_diffside :: "Line => Point => Point => bool"
  assumes
    "Order_Rule Eq Inv Line_on Line_on_Seg Bet_Point Seg_on_Seg Line_on_Line
      Plane_sameside Plane_diffside"
### theory "Draft.Order"
### 0.417s elapsed time, 0.597s cpu time, 0.244s GC time
Loading theory "Draft.OrderMoreTemplates"
val templateLemmas =
   [("Orderings.top1I", "top ?x",
     template_predicate (template_app (template_hole 0, template_var 0))),
    ("Complete_Partial_Order.chain_empty",
     "Complete_Partial_Order.chain ?ord {}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Orderings.top2I", "top ?x ?y",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)
         )),
    ("Orderings.order_less_irrefl", "~ ?x < ?x",
     template_negation
      (template_inequation (less_than, template_var 0, template_var 0))),
    ("Orderings.bot_apply", "bot ?x = bot",
     template_equation
      (template_app (template_hole 1, template_var 0), template_hole 0)),
    ("Orderings.top_apply", "top ?x = top",
     template_equation
      (template_app (template_hole 1, template_var 0), template_hole 0)),
    ("Orderings.bot_boolE", "bot ==> ?P",
     template_implication
      ([template_predicate (template_hole 0)],
       template_predicate (template_var 0))),
    ("Complete_Partial_Order.admissible_True",
     "ccpo.admissible ?lub ?ord (%x. True)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           t_empty)
         )),
    ("Complete_Partial_Order.admissible_const",
     "ccpo.admissible ?lub ?ord (%x. ?t)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           t_empty)
         )),
    ("Orderings.bot1E", "bot ?x ==> ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate (template_var 0))),
    ("Order_Relation.underS_notIn", "?a ~: underS ?r ?a",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))
             )
         )),
    ("Order_Relation.AboveS_Field", "AboveS ?r ?A <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation.under_Field", "under ?r ?a <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Order_Relation.underS_Field", "underS ?r ?a <= Field ?r",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Orderings.bot2E", "bot ?x ?y ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("Orderings.linorder_le_less_linear", "?x <= ?y | ?y < ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Orderings.linorder_linear", "?x <= ?y | ?y <= ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Orderings.max_min_same", "max ?x (min ?x ?y) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Orderings.max_min_same", "max ?y (min ?x ?y) = ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 1)),
    ("Orderings.max_min_same", "max (min ?x ?y) ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 1)),
    ("Orderings.max_min_same", "max (min ?x ?y) ?y = ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 0)),
    ("Order_Relation.AboveS_disjoint", "?A Int AboveS ?r ?A = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_hole 0)),
    ("Order_Relation.underS_subset_under", "underS ?r ?a <= under ?r ?a",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Order_Relation.partial_order_onD",
     "partial_order_on ?A ?r ==> antisym ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Order_Relation.partial_order_onD",
     "partial_order_on ?A ?r ==> trans ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Orderings.linorder_not_less", "(~ ?x < ?y) = (?y <= ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Orderings.linorder_not_le", "(~ ?x <= ?y) = (?y < ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Order_Relation.linear_order_on_converse",
     "linear_order_on ?A (?r^-1) = linear_order_on ?A ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Order_Relation.partial_order_on_converse",
     "partial_order_on ?A (?r^-1) = partial_order_on ?A ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Order_Relation.preorder_on_converse",
     "preorder_on ?A (?r^-1) = preorder_on ?A ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Orderings.order_eq_refl", "?x = ?y ==> ?x <= ?y",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Orderings.le_boolI'", "?P --> ?Q ==> ?P <= ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Order_Relation.partial_order_onD",
     "partial_order_on ?A ?r ==> refl_on ?A ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.order_less_imp_le", "?x < ?y ==> ?x <= ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Orderings.le_boolD", "?P <= ?Q ==> ?P --> ?Q",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.ordering_orderI",
     "ordering ?less_eq ?less ==> class.order ?less_eq ?less",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.preordering_preorderI",
     "preordering ?less_eq ?less ==> class.preorder ?less_eq ?less",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Order_Relation.linear_order_on_singleton",
     "linear_order_on {?x} {(?x, ?x)}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 0)),
             template_hole 0))
         )),
    ("Complete_Partial_Order.lfp_eq_fixp",
     "mono ?f ==> lfp ?f = ccpo_class.fixp ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Order_Relation.linear_order_on_acyclic",
     "linear_order_on ?A ?r ==> acyclic (?r - Id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Order_Relation.partial_order_on_acyclic",
     "partial_order_on ?A ?r ==> acyclic (?r - Id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Order_Relation.well_order_on_Field",
     "well_order_on ?A ?r ==> ?A = Field ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Orderings.order_less_not_sym", "?x < ?y ==> ~ ?y < ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (template_inequation (less_than, template_var 0, template_var 1)))),
    ("Orderings.le_boolI", "(?P ==> ?Q) ==> ?P <= ?Q",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Orderings.order_trans_rules", "[| ?P; ?P --> ?Q |] ==> ?Q",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate (template_var 0))),
    ("Orderings.order_trans_rules", "[| ?P --> ?Q; ?P |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            ),
        template_predicate (template_var 1)],
       template_predicate (template_var 0))),
    ("Order_Relation.strict_linear_order_on_diff_Id",
     "linear_order_on ?A ?r ==> strict_linear_order_on ?A (?r - Id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Orderings.order_less_imp_not_eq", "?x < ?y ==> (?x = ?y) = False",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Orderings.order_less_imp_not_eq2", "?x < ?y ==> (?y = ?x) = False",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Orderings.max_absorb2", "?x <= ?y ==> max ?x ?y = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Orderings.min_absorb1", "?x <= ?y ==> min ?x ?y = ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Orderings.max_absorb1", "?y <= ?x ==> max ?x ?y = ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Orderings.min_absorb2", "?y <= ?x ==> min ?x ?y = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Orderings.le_funD", "?f <= ?g ==> ?f ?x <= ?g ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Orderings.linorder_less_linear", "?x < ?y | ?x = ?y | ?y < ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))
         )),
    ("Orderings.eq_iff", "(?a = ?b) = (?a <= ?b & ?b <= ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Orderings.order_le_less", "(?x <= ?y) = (?x < ?y | ?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Order_Relation.linear_order_on_well_order_on",
     "finite ?r ==> linear_order_on ?A ?r = well_order_on ?A ?r",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Orderings.mono_compose", "mono ?Q ==> mono (%i x. ?Q i (?f x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Orderings.order_less_imp_not_less", "?x < ?y ==> (~ ?y < ?x) = True",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Orderings.order_trans_rules", "[| ?P ?a; ?a = ?b |] ==> ?P ?b",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_equation (template_var 1, template_var 0)],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("Orderings.rev_predicate1D", "[| ?P ?x; ?P <= ?Q |] ==> ?Q ?x",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Orderings.order_trans_rules", "[| ?a = ?b; ?P ?b |] ==> ?P ?a",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("Orderings.xt1", "[| ?b < ?a; ?a < ?b |] ==> ?P",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_predicate (template_var 0))),
    ("Orderings.order_less_asym'", "[| ?a < ?b; ?b < ?a |] ==> ?P",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_predicate (template_var 0))),
    ("Orderings.predicate1D", "[| ?P <= ?Q; ?P ?x |] ==> ?Q ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Orderings.order_less_le", "(?x < ?y) = (?x <= ?y & ?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Orderings.linorder_neq_iff", "(?x ~= ?y) = (?x < ?y | ?y < ?x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Orderings.order_less_imp_triv", "?x < ?y ==> (?y < ?x --> ?P) = True",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_var 0),
         template_hole 0))),
    ("Orderings.order_le_imp_less_or_eq", "?x <= ?y ==> ?x < ?y | ?x = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Orderings.order_antisym_conv", "?y <= ?x ==> (?x <= ?y) = (?x = ?y)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1)
              )],
         template_equation (template_var 0, template_var 1)))),
    ("Order_Relation.underS_Field2",
     "?a : Field ?r ==> underS ?r ?a < Field ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Order_Relation.underS_empty", "?a ~: Field ?r ==> underS ?r ?a = {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Orderings.le_funI", "(!!x. ?f x <= ?g x) ==> ?f <= ?g",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Complete_Partial_Order.chain_equality",
     "Complete_Partial_Order.chain (=) ?A = (ALL x:?A. ALL y:?A. x = y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Order_Relation.in_AboveS_underS",
     "?a : Field ?r ==> ?a : AboveS ?r (underS ?r ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Order_Relation.underS_Field3",
     "Field ?r ~= {} ==> underS ?r ?a < Field ?r",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Order_Relation.Field_relation_of",
     "refl_on ?A (relation_of ?P ?A) ==> Field (relation_of ?P ?A) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Orderings.predicate1I", "(!!x. ?P x ==> ?Q x) ==> ?P <= ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Order_Relation.partial_order_on_well_order_on",
     "[| finite ?r; partial_order_on ?A ?r |] ==> wf (?r - Id)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Complete_Partial_Order.chain_subset",
     "[| Complete_Partial_Order.chain ?ord ?A; ?B <= ?A |]
      ==> Complete_Partial_Order.chain ?ord ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Orderings.order_trans_rules", "[| ?r = ?s; ?s = ?t |] ==> ?r = ?t",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_equation (template_var 1, template_var 0)],
       template_equation (template_var 2, template_var 0))),
    ("Orderings.order_trans_rules", "[| ?a = ?b; ?b < ?c |] ==> ?a < ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Orderings.order_trans_rules", "[| ?a = ?b; ?b <= ?c |] ==> ?a <= ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Orderings.xt1", "[| ?a = ?b; ?c < ?b |] ==> ?c < ?a",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("Orderings.xt1", "[| ?a = ?b; ?c <= ?b |] ==> ?c <= ?a",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("Orderings.order_trans_rules", "[| ?a < ?b; ?b = ?c |] ==> ?a < ?c",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_equation (template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Orderings.xt1", "[| ?b < ?a; ?b = ?c |] ==> ?c < ?a",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_equation (template_var 2, template_var 0)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Orderings.xt1", "[| ?y < ?x; ?z < ?y |] ==> ?z < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Orderings.xt1", "[| ?y < ?x; ?z <= ?y |] ==> ?z < ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Orderings.order_less_trans", "[| ?x < ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Orderings.order_less_le_trans", "[| ?x < ?y; ?y <= ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Orderings.order_trans_rules", "[| ?a <= ?b; ?b = ?c |] ==> ?a <= ?c",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_equation (template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Orderings.antisym", "[| ?a <= ?b; ?b <= ?a |] ==> ?a = ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 1, template_var 0))),
    ("Orderings.xt1", "[| ?b <= ?a; ?b = ?c |] ==> ?c <= ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_equation (template_var 2, template_var 0)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Orderings.xt1", "[| ?y <= ?x; ?z < ?y |] ==> ?z < ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Orderings.xt1", "[| ?y <= ?x; ?x <= ?y |] ==> ?x = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 0, template_var 1))),
    ("Orderings.xt1", "[| ?y <= ?x; ?z <= ?y |] ==> ?z <= ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Orderings.order_le_less_trans", "[| ?x <= ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Orderings.order_trans_rules", "[| ?x <= ?y; ?y <= ?z |] ==> ?x <= ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Orderings.predicate2D", "[| ?P <= ?Q; ?P ?x ?y |] ==> ?Q ?x ?y",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Orderings.rev_predicate2D", "[| ?P ?x ?y; ?P <= ?Q |] ==> ?Q ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Order_Relation.well_order_on_Well_order",
     "well_order_on ?A ?r ==> ?A = Field ?r & Well_order ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0)),
               template_var 0))
           ))),
    ("Orderings.order_le_neq_trans", "[| ?a <= ?b; ?a ~= ?b |] ==> ?a < ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Orderings.xt1", "[| ?b <= ?a; ?a ~= ?b |] ==> ?b < ?a",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Orderings.order_neq_le_trans", "[| ?a ~= ?b; ?a <= ?b |] ==> ?a < ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Orderings.xt1", "[| ?a ~= ?b; ?b <= ?a |] ==> ?b < ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Complete_Partial_Order.chain_compr",
     "Complete_Partial_Order.chain ?ord ?A ==>
      Complete_Partial_Order.chain ?ord {x: ?A. ?P x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, t_empty))
           ))),
    ("Order_Relation.Partial_order_relation_ofI",
     "partial_order_on ?A (relation_of ?P ?A) ==>
      Partial_order (relation_of ?P ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("Orderings.order_less_asym", "[| ?x < ?y; ~ ?P ==> ?y < ?x |] ==> ?P",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_implication
         ([template_negation (template_predicate (template_var 0))],
          template_inequation (less_than, template_var 1, template_var 2))],
       template_predicate (template_var 0))),
    ("Orderings.le_boolE", "[| ?P <= ?Q; ?P; ?Q ==> ?R |] ==> ?R",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Orderings.ordering_dualI",
     "ordering (%a b. ?less_eq b a) (%a b. ?less b a) ==>
      ordering ?less_eq ?less",
     template_implication
      ([template_predicate
         (template_app (template_app (template_hole 0, t_empty), t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.preordering_dualI",
     "preordering (%a b. ?less_eq b a) (%a b. ?less b a) ==>
      preordering ?less_eq ?less",
     template_implication
      ([template_predicate
         (template_app (template_app (template_hole 0, t_empty), t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.le_funE", "[| ?f <= ?g; ?f ?x <= ?g ?x ==> ?P |] ==> ?P",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_implication
         ([template_inequation
            (less_equals, template_app (template_var 3, template_var 1),
             template_app (template_var 2, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Complete_Partial_Order.monotoneD",
     "[| monotone ?orda ?ordb ?f; ?orda ?x ?y |] ==> ?ordb (?f ?x) (?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 1), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app (template_var 2, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Orderings.predicate2I", "(!!x y. ?P x y ==> ?Q x y) ==> ?P <= ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Order_Relation.Refl_under_in",
     "[| Refl ?r; ?a : Field ?r |] ==> ?a : under ?r ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Orderings.linorder_le_cases",
     "[| ?x <= ?y ==> ?P; ?y <= ?x ==> ?P |] ==> ?P",
     template_implication
      ([template_implication
         ([template_inequation
            (less_equals, template_var 2, template_var 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_inequation
            (less_equals, template_var 1, template_var 2)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Order_Relation.under_incr",
     "[| trans ?r; (?a, ?b) : ?r |] ==> under ?r ?a <= under ?r ?b",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Order_Relation.well_order_on_domain",
     "[| well_order_on ?A ?r; (?a, ?b) : ?r |] ==> ?a : ?A & ?b : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("Order_Relation.refl_on_domain",
     "[| refl_on ?A ?r; (?a, ?b) : ?r |] ==> ?a : ?A & ?b : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("Order_Relation.Total_Id_Field",
     "[| Total ?r; ~ ?r <= Id |] ==> Field ?r = Field (?r - Id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_var 0)
            ),
        template_negation
         (
            template_inequation
             (less_equals, template_var 0, template_hole 2)
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 2))))),
    ("Complete_Partial_Order.admissible_all",
     "(!!y. ccpo.admissible ?lub ?ord (%x. ?P x y)) ==>
      ccpo.admissible ?lub ?ord (%x. ALL y. ?P x y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Complete_Partial_Order.monotoneI",
     "(!!x y. ?orda x y ==> ?ordb (?f x) (?f y)) ==>
      monotone ?orda ?ordb ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Order_Relation.wf_finite_segments",
     "[| irrefl ?r; trans ?r; !!x. finite {y. (y, x) : ?r} |] ==> wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Order_Relation.underS_incr",
     "[| trans ?r; antisym ?r; (?a, ?b) : ?r |]
      ==> underS ?r ?a <= underS ?r ?b",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Complete_Partial_Order.chainD",
     "[| Complete_Partial_Order.chain ?ord ?S; ?x : ?S; ?y : ?S |]
      ==> ?ord ?x ?y | ?ord ?y ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_var 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_var 3, template_var 0),
               template_var 1))
           ))),
    ("Order_Relation.Refl_under_underS",
     "[| Refl ?r; ?a : Field ?r |] ==> under ?r ?a = underS ?r ?a Un {?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Orderings.linorder_neqE",
     "[| ?x ~= ?y; ?x < ?y ==> ?R; ?y < ?x ==> ?R |] ==> ?R",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_implication
         ([template_inequation (less_than, template_var 2, template_var 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_inequation (less_than, template_var 1, template_var 2)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Order_Relation.Total_subset_Id",
     "[| Total ?r; ?r <= Id |] ==> ?r = {} | (EX a. ?r = {(a, a)})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 0, template_hole 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Orderings.linorder_strictI",
     "[| class.order ?less_eq ?less; !!a b. ?less a b | a = b | ?less b a |]
      ==> class.linorder ?less_eq ?less",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Complete_Partial_Order.admissible_conj",
     "[| ccpo.admissible ?lub ?ord ?P; ccpo.admissible ?lub ?ord ?Q |]
      ==> ccpo.admissible ?lub ?ord (%x. ?P x & ?Q x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             t_empty)
           ))),
    ("Order_Relation.trans_wf_iff",
     "trans ?r ==> wf ?r = (ALL a. wf (Restr ?r (?r^-1 `` {a})))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app (template_hole 6, t_empty)))),
    ("Complete_Partial_Order.admissible_ball",
     "(!!y. y : ?A ==> ccpo.admissible ?lub ?ord (%x. ?P x y)) ==>
      ccpo.admissible ?lub ?ord (%x. ALL y:?A. ?P x y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             t_empty)
           ))),
    ("Complete_Partial_Order.chainI",
     "(!!x y. [| x : ?S; y : ?S |] ==> ?ord x y | ?ord y x) ==>
      Complete_Partial_Order.chain ?ord ?S",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Order_Relation.wf_eq_minimal2",
     "wf ?r =
      (ALL A.
          A <= Field ?r & A ~= {} --> (EX a:A. ALL a':A. (a', a) ~: ?r))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app (template_hole 11, t_empty))),
    ("Orderings.ord_less_eq_subst",
     "[| ?a < ?b; ?f ?b = ?c; !!x y. x < y ==> ?f x < ?f y |]
      ==> ?f ?a < ?c",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app (template_var 1, template_var 2), template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_app (template_var 1, template_var 3),
         template_var 0))),
    ("Orderings.order_less_subst2",
     "[| ?a < ?b; ?f ?b < ?c; !!x y. x < y ==> ?f x < ?f y |]
      ==> ?f ?a < ?c",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_app (template_var 1, template_var 2),
          template_var 0),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_than, template_app (template_var 1, template_var 3),
         template_var 0))),
    ("Orderings.order_less_le_subst2",
     "[| ?a < ?b; ?f ?b <= ?c; !!x y. x < y ==> ?f x < ?f y |]
      ==> ?f ?a < ?c",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_app (template_var 1, template_var 2),
          template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_app (template_var 1, template_var 3),
         template_var 0))),
    ("Orderings.xt1",
     "[| ?b < ?a; ?f ?b = ?c; !!x y. y < x ==> ?f y < ?f x |]
      ==> ?c < ?f ?a",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app (template_var 1, template_var 3), template_var 0),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_than, template_var 0,
         template_app (template_var 1, template_var 2)))),
    ("Orderings.xt9",
     "[| ?b < ?a; ?c < ?f ?b; !!x y. y < x ==> ?f y < ?f x |]
      ==> ?c < ?f ?a",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 1,
          template_app (template_var 0, template_var 3)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_than, template_var 1,
         template_app (template_var 0, template_var 2)))),
    ("Orderings.xt5",
     "[| ?b < ?a; ?c <= ?f ?b; !!x y. y < x ==> ?f y < ?f x |]
      ==> ?c < ?f ?a",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 3)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_var 1,
         template_app (template_var 0, template_var 2)))),
    ("Orderings.ord_le_eq_subst",
     "[| ?a <= ?b; ?f ?b = ?c; !!x y. x <= y ==> ?f x <= ?f y |]
      ==> ?f ?a <= ?c",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app (template_var 1, template_var 2), template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 3),
         template_var 0))),
    ("Orderings.order_le_less_subst2",
     "[| ?a <= ?b; ?f ?b < ?c; !!x y. x <= y ==> ?f x <= ?f y |]
      ==> ?f ?a < ?c",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_than, template_app (template_var 1, template_var 2),
          template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_app (template_var 1, template_var 3),
         template_var 0))),
    ("Orderings.order_subst2",
     "[| ?a <= ?b; ?f ?b <= ?c; !!x y. x <= y ==> ?f x <= ?f y |]
      ==> ?f ?a <= ?c",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_app (template_var 1, template_var 2),
          template_var 0),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 3),
         template_var 0))),
    ("Orderings.xt1",
     "[| ?b <= ?a; ?f ?b = ?c; !!x y. y <= x ==> ?f y <= ?f x |]
      ==> ?c <= ?f ?a",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app (template_var 1, template_var 3), template_var 0),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_var 1, template_var 2)))),
    ("Orderings.xt7",
     "[| ?b <= ?a; ?c < ?f ?b; !!x y. y <= x ==> ?f y <= ?f x |]
      ==> ?c < ?f ?a",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 1,
          template_app (template_var 0, template_var 3)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_var 1,
         template_app (template_var 0, template_var 2)))),
    ("Orderings.xt3",
     "[| ?b <= ?a; ?c <= ?f ?b; !!x y. y <= x ==> ?f y <= ?f x |]
      ==> ?c <= ?f ?a",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 3)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_var 0, template_var 2)))),
    ("Orderings.ord_eq_less_subst",
     "[| ?a = ?f ?b; ?b < ?c; !!x y. x < y ==> ?f x < ?f y |]
      ==> ?a < ?f ?c",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_var 2, template_var 1)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_var 3,
         template_app (template_var 2, template_var 0)))),
    ("Orderings.ord_eq_le_subst",
     "[| ?a = ?f ?b; ?b <= ?c; !!x y. x <= y ==> ?f x <= ?f y |]
      ==> ?a <= ?f ?c",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_var 2, template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_equals, template_var 3,
         template_app (template_var 2, template_var 0)))),
    ("Orderings.xt1",
     "[| ?a = ?f ?b; ?c < ?b; !!x y. y < x ==> ?f y < ?f x |]
      ==> ?f ?c < ?a",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_var 2, template_var 1)),
        template_inequation (less_than, template_var 0, template_var 1),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_than, template_app (template_var 2, template_var 0),
         template_var 3))),
    ("Orderings.xt1",
     "[| ?a = ?f ?b; ?c <= ?b; !!x y. y <= x ==> ?f y <= ?f x |]
      ==> ?f ?c <= ?a",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_var 2, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_var 3))),
    ("Order_Relation.underS_incl_iff",
     "[| Linear_order ?r; ?a : Field ?r; ?b : Field ?r |]
      ==> (underS ?r ?a <= underS ?r ?b) = ((?a, ?b) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Orderings.order_less_subst1",
     "[| ?a < ?f ?b; ?b < ?c; !!x y. x < y ==> ?f x < ?f y |]
      ==> ?a < ?f ?c",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_var 2, template_var 1)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_than, template_var 3,
         template_app (template_var 2, template_var 0)))),
    ("Orderings.order_less_le_subst1",
     "[| ?a < ?f ?b; ?b <= ?c; !!x y. x <= y ==> ?f x <= ?f y |]
      ==> ?a < ?f ?c",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_var 2, template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_var 3,
         template_app (template_var 2, template_var 0)))),
    ("Orderings.xt8",
     "[| ?f ?b < ?a; ?c < ?b; !!x y. y < x ==> ?f y < ?f x |]
      ==> ?f ?c < ?a",
     template_implication
      ([template_inequation
         (less_than, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation (less_than, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_than, template_app (template_var 3, template_var 0),
         template_var 1))),
    ("Orderings.xt4",
     "[| ?f ?b < ?a; ?c <= ?b; !!x y. y <= x ==> ?f y <= ?f x |]
      ==> ?f ?c < ?a",
     template_implication
      ([template_inequation
         (less_than, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_app (template_var 3, template_var 0),
         template_var 1))),
    ("Orderings.order_le_less_subst1",
     "[| ?a <= ?f ?b; ?b < ?c; !!x y. x < y ==> ?f x < ?f y |]
      ==> ?a < ?f ?c",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_var 2, template_var 1)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_var 3,
         template_app (template_var 2, template_var 0)))),
    ("Orderings.order_subst1",
     "[| ?a <= ?f ?b; ?b <= ?c; !!x y. x <= y ==> ?f x <= ?f y |]
      ==> ?a <= ?f ?c",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_var 2, template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_var 3,
         template_app (template_var 2, template_var 0)))),
    ("Orderings.xt6",
     "[| ?f ?b <= ?a; ?c < ?b; !!x y. y < x ==> ?f y < ?f x |]
      ==> ?f ?c < ?a",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation (less_than, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_inequation
        (less_than, template_app (template_var 3, template_var 0),
         template_var 1))),
    ("Orderings.xt2",
     "[| ?f ?b <= ?a; ?c <= ?b; !!x y. y <= x ==> ?f y <= ?f x |]
      ==> ?f ?c <= ?a",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 0),
         template_var 1))),
    ("Order_Relation.Linear_order_in_diff_Id",
     "[| Linear_order ?r; ?a : Field ?r; ?b : Field ?r |]
      ==> ((?a, ?b) : ?r) = ((?b, ?a) ~: ?r - Id)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 7, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)))))),
    ("Complete_Partial_Order.chainE",
     "[| Complete_Partial_Order.chain ?ord ?S; ?x : ?S; ?y : ?S;
         ?ord ?x ?y ==> ?thesis; ?ord ?y ?x ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 4, template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_var 4, template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Order_Relation.Partial_order_eq_Image1_Image1_iff",
     "[| Partial_order ?r; ?a : Field ?r; ?b : Field ?r |]
      ==> (?r `` {?a} = ?r `` {?b}) = (?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 7, template_var 2))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_equation (template_var 1, template_var 0)))),
    ("Order_Relation.Linear_order_Well_order_iff",
     "Linear_order ?r ==>
      Well_order ?r =
      (ALL A<=Field ?r. A ~= {} --> (EX a:A. ALL a':A. (a, a') : ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 12, template_var 0)),
           template_var 0),
         template_app (template_hole 9, t_empty)))),
    ("Order_Relation.Linear_order_wf_diff_Id",
     "Linear_order ?r ==>
      wf (?r - Id) =
      (ALL A<=Field ?r. A ~= {} --> (EX a:A. ALL a':A. (a, a') : ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 0)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 0),
             template_hole 10)),
         template_app (template_hole 9, t_empty)))),
    ("Order_Relation.subset_Image1_Image1_iff",
     "[| Preorder ?r; ?a : Field ?r; ?b : Field ?r |]
      ==> (?r `` {?a} <= ?r `` {?b}) = ((?b, ?a) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 8, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2))),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Complete_Partial_Order.chain_imageI",
     "[| Complete_Partial_Order.chain ?le_a ?Y;
         !!x y. [| x : ?Y; y : ?Y; ?le_a x y |] ==> ?le_b (?f x) (?f y) |]
      ==> Complete_Partial_Order.chain ?le_b (?f ` ?Y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Order_Relation.subset_Image_Image_iff",
     "[| Preorder ?r; ?A <= Field ?r; ?B <= Field ?r |]
      ==> (?r `` ?A <= ?r `` ?B) = (ALL a:?A. EX b:?B. (b, a) : ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)))),
    ("Order_Relation.Refl_antisym_eq_Image1_Image1_iff",
     "[| Refl ?r; antisym ?r; ?a : Field ?r; ?b : Field ?r |]
      ==> (?r `` {?a} = ?r `` {?b}) = (?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 8, template_var 2))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_equation (template_var 1, template_var 0)))),
    ("Order_Relation.finite_Linear_order_induct",
     "[| Linear_order ?r; ?x : Field ?r; finite ?r;
         !!x. [| x : Field ?r; !!y. y : aboveS ?r x ==> ?P y |] ==> ?P x |]
      ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Order_Relation.finite_Partial_order_induct",
     "[| Partial_order ?r; ?x : Field ?r; finite ?r;
         !!x. [| x : Field ?r; !!y. y : aboveS ?r x ==> ?P y |] ==> ?P x |]
      ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Orderings.order_strictI",
     "[| !!a b. ?less_eq a b = (?less a b | a = b);
         !!a b. ?less a b ==> ~ ?less b a; !!a. ~ ?less a a;
         !!a b c. [| ?less a b; ?less b c |] ==> ?less a c |]
      ==> class.order ?less_eq ?less",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.ordering_strictI",
     "[| !!a b. ?less_eq a b = (?less a b | a = b);
         !!a b. ?less a b ==> ~ ?less b a; !!a. ~ ?less a a;
         !!a b c. [| ?less a b; ?less b c |] ==> ?less a c |]
      ==> ordering ?less_eq ?less",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Orderings.preordering_strictI",
     "[| !!a b. ?less_eq a b = (?less a b | a = b);
         !!a b. ?less a b ==> ~ ?less b a; !!a. ~ ?less a a;
         !!a b c. [| ?less a b; ?less b c |] ==> ?less a c |]
      ==> preordering ?less_eq ?less",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Order_Relation.partial_order_on_relation_ofI",
     "[| !!a. a : ?A ==> ?P a a;
         !!a b c. [| a : ?A; b : ?A; c : ?A; ?P a b; ?P b c |] ==> ?P a c;
         !!a b. [| a : ?A; b : ?A; ?P a b; ?P b a |] ==> a = b |]
      ==> partial_order_on ?A (relation_of ?P ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           )))]:
   (string * thm * template) list
### theory "Draft.OrderMoreTemplates"
### 0.597s elapsed time, 1.268s cpu time, 0.763s GC time
val it = (): unit
