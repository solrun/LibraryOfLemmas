Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SestoftConfTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.SestoftConfTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Stream" (required by "Draft.SestoftConfTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SestoftConfTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.559s cpu time, 0.050s GC time
Loading theory "Draft.SestoftConf" (required by "Draft.SestoftConfTemplates")
### theory "HOL-Library.Set_Algebras"
### 0.244s elapsed time, 0.993s cpu time, 0.050s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SestoftConfTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
instantiation
  stack_elem :: pt
  permute_stack_elem == permute :: perm => stack_elem => stack_elem
consts
  snth :: "'a stream => nat => 'a"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size_list size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size_list size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size_list size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.904s elapsed time, 3.568s cpu time, 0.330s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.994s elapsed time, 3.604s cpu time, 0.780s GC time
Proofs for inductive predicate(s) "boring_step"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "invariant"
  Proving monotonicity ...
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.SestoftConf"
### 1.494s elapsed time, 4.889s cpu time, 0.873s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.966s elapsed time, 5.819s cpu time, 0.962s GC time
Loading theory "Draft.Templates" (required by "Draft.SestoftConfTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.050s elapsed time, 0.065s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SestoftConfTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.491s elapsed time, 0.544s cpu time, 0.064s GC time
Loading theory "Draft.SestoftConfTemplates"
val templateLemmas =
   [("SestoftConf.heap_upds_ok_Nil", "heap_upds_ok (?\<Gamma>, [])",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("SestoftConf.invariant_True", "invariant ?rel (%_. True)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), t_empty)
         )),
    ("SestoftConf.ap_fv_subset", "ap ?S <= fv ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.dummies_fv_subset", "dummies ?S <= fv ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.ups_fv_subset", "upds ?S <= fv ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.fv_Arg", "fv (stack_elem.Arg ?v) = fv ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.fv_Dummy", "fv (Dummy ?v) = fv ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.fv_Upd", "fv (Upd ?v) = fv ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.set_upds_list", "set (upds_list ?S) = upds ?S",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.upds_map_Dummy", "upds (map Dummy ?l) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("SestoftConf.supp_Arg", "supp (stack_elem.Arg ?v) = supp ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.supp_Dummy", "supp (Dummy ?v) = supp ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.supp_Upd", "supp (Upd ?v) = supp ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.upds_list_map_Dummy", "upds_list (map Dummy ?l) = []",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("SestoftConf.dummies_map_Dummy", "dummies (map Dummy ?l) = set ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SestoftConf.fresh_Arg",
     "?a \<sharp> stack_elem.Arg ?v = ?a \<sharp> ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SestoftConf.fresh_Dummy", "?a \<sharp> Dummy ?v = ?a \<sharp> ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SestoftConf.fresh_Upd", "?a \<sharp> Upd ?v = ?a \<sharp> ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SestoftConf.upds_restr_stack",
     "upds (restr_stack ?V ?S) = upds ?S Int ?V",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_var 1))),
    ("SestoftConf.Arg_eqvt",
     "?\<pi> \<bullet> stack_elem.Arg ?v =
      stack_elem.Arg (?\<pi> \<bullet> ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SestoftConf.Dummy_eqvt",
     "?\<pi> \<bullet> Dummy ?v = Dummy (?\<pi> \<bullet> ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SestoftConf.Upd_eqvt",
     "?\<pi> \<bullet> Upd ?v = Upd (?\<pi> \<bullet> ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SestoftConf.fv_Alts", "fv (Alts ?e1.0 ?e2.0) = fv ?e1.0 Un fv ?e2.0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("SestoftConf.dummies_append",
     "dummies (?S @ ?S') = dummies ?S Un dummies ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SestoftConf.upds_append", "upds (?S @ ?S') = upds ?S Un upds ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SestoftConf.supp_Alts",
     "supp (Alts ?e1.0 ?e2.0) = supp ?e1.0 Un supp ?e2.0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("SestoftConf.restr_stack_noop",
     "(restr_stack ?V ?S = ?S) = (upds ?S <= ?V)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("SestoftConf.fresh_flattn",
     "atom ?a \<sharp> flattn ?S = atom ?a \<sharp> ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("SestoftConf.upds_list_append",
     "upds_list (?S @ ?S') = upds_list ?S @ upds_list ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SestoftConf.fresh_star_restict_stack",
     "?a \<sharp>* ?S ==> ?a \<sharp>* restr_stack ?V ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("SestoftConf.map_Dummy_inj",
     "(map Dummy ?l = map Dummy ?l') = (?l = ?l')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("SestoftConf.restr_stack_restr_stack",
     "restr_stack ?V (restr_stack ?V' ?S) = restr_stack (?V Int ?V') ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("SestoftConf.fresh_upds_list",
     "atom ?a \<sharp> ?S ==> atom ?a \<sharp> upds_list ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SestoftConf.fresh_star_flattn",
     "atom ` ?as \<sharp>* flattn ?S = atom ` ?as \<sharp>* ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0))),
    ("SestoftConf.heap_upds_ok_restr_stack",
     "heap_upds_ok (?\<Gamma>, ?S) ==>
      heap_upds_ok (?\<Gamma>, restr_stack ?V ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("SestoftConf.heap_upds_ok_delete",
     "heap_upds_ok (?\<Gamma>, ?S) ==>
      heap_upds_ok (delete ?x ?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("SestoftConf.heap_upds_ok_restrictA",
     "heap_upds_ok (?\<Gamma>, ?S) ==>
      heap_upds_ok (restrictA ?V ?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("SestoftConf.fresh_star_Alts",
     "?a \<sharp>* Alts ?e1.0 ?e2.0 =
      (?a \<sharp>* ?e1.0 & ?a \<sharp>* ?e2.0)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SestoftConf.fresh_Alts",
     "?a \<sharp> Alts ?e1.0 ?e2.0 =
      (?a \<sharp> ?e1.0 & ?a \<sharp> ?e2.0)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SestoftConf.Alts_eqvt",
     "?\<pi> \<bullet> Alts ?e1.0 ?e2.0 =
      Alts (?\<pi> \<bullet> ?e1.0) (?\<pi> \<bullet> ?e2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SestoftConf.heap_upds_ok_app1",
     "heap_upds_ok (?\<Gamma>, ?S) ==>
      heap_upds_ok (?\<Gamma>, stack_elem.Arg ?x # ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))
           ))),
    ("SestoftConf.fresh_distinct_ups",
     "atom ` ?V \<sharp>* ?S ==> ?V Int upds ?S = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("SestoftConf.fresh_star_upds_list",
     "atom ` ?as \<sharp>* ?S ==> atom ` ?as \<sharp>* upds_list ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SestoftConf.heap_upds_ok_app2",
     "heap_upds_ok (?\<Gamma>, stack_elem.Arg ?x # ?S) ==>
      heap_upds_ok (?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("SestoftConf.Upd_eq_restr_stackD2",
     "restr_stack ?V ?S' = Upd ?x # ?S ==> ?x : ?V",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1)),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 3)
           ))),
    ("SestoftConf.Upd_eq_restr_stackD",
     "Upd ?x # ?S = restr_stack ?V ?S' ==> ?x : ?V",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 3)),
            template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 1)
           ))),
    ("SestoftConf.heap_upds_ok_alts1",
     "heap_upds_ok (?\<Gamma>, ?S) ==>
      heap_upds_ok (?\<Gamma>, Alts ?e1.0 ?e2.0 # ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 2)))
           ))),
    ("SestoftConf.heap_upds_ok_alts2",
     "heap_upds_ok (?\<Gamma>, Alts ?e1.0 ?e2.0 # ?S) ==>
      heap_upds_ok (?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))
           ))),
    ("SestoftConf.invariantE",
     "[| invariant ?rel ?I; ?rel ?x ?y; ?I ?x |] ==> ?I ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_var 2, template_var 1))],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("SestoftConf.heap_upds_ok_to_heap",
     "heap_upds_ok (?\<Gamma>, Upd ?x # ?S) ==>
      heap_upds_ok ((?x, ?e) # ?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 2)),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0)),
                   template_var 3)),
               template_var 1))
           ))),
    ("SestoftConf.heap_upds_okE",
     "[| heap_upds_ok (?\<Gamma>, ?S); ?x : domA ?\<Gamma> |]
      ==> ?x ~: upds ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 0, template_var 1))
               )
           ))),
    ("SestoftConf.invariant_starE",
     "[| ?rel^** ?x ?y; invariant ?rel ?I; ?I ?x |] ==> ?I ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("SestoftConf.invariant_conj",
     "[| invariant ?rel ?I1.0; invariant ?rel ?I2.0 |]
      ==> invariant ?rel (%x. ?I1.0 x & ?I2.0 x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("SestoftConf.heap_upds_ok_upd",
     "heap_upds_ok (?\<Gamma>, Upd ?x # ?S) ==>
      ?x ~: domA ?\<Gamma> & ?x ~: upds ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 1, template_var 2)))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("SestoftConf.heap_upds_ok_let",
     "[| atom ` domA ?\<Delta> \<sharp>* ?S; heap_upds_ok (?\<Gamma>, ?S) |]
      ==> heap_upds_ok (?\<Delta> @ ?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 1))
           ))),
    ("SestoftConf.heap_upds_ok_to_stack",
     "[| ?x : domA ?\<Gamma>; heap_upds_ok (?\<Gamma>, ?S) |]
      ==> heap_upds_ok (delete ?x ?\<Gamma>, Upd ?x # ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("SestoftConf.heap_upds_ok_append",
     "[| domA ?\<Delta> Int upds ?S = {}; heap_upds_ok (?\<Gamma>, ?S) |]
      ==> heap_upds_ok (?\<Delta> @ ?\<Gamma>, ?S)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2)),
            template_app (template_hole 4, template_var 1)),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 1))
           ))),
    ("SestoftConf.heap_upds_ok_reorder",
     "[| ?x : domA ?\<Gamma>; heap_upds_ok (?\<Gamma>, ?S) |]
      ==> heap_upds_ok ((?x, ?e) # delete ?x ?\<Gamma>, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2))),
               template_var 1))
           ))),
    ("SestoftConf.heap_upds_ok_to_stack'",
     "[| map_of ?\<Gamma> ?x = Some ?e; heap_upds_ok (?\<Gamma>, ?S) |]
      ==> heap_upds_ok (delete ?x ?\<Gamma>, Upd ?x # ?S)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("SestoftConf.restr_stack_cong",
     "(!!x. x : upds ?S ==> (x : ?V) = (x : ?V')) ==>
      restr_stack ?V ?S = restr_stack ?V' ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SestoftConf.rtranclp_invariant_induct",
     "[| ?r^** ?a ?b; invariant ?r ?I; ?I ?a; ?P ?a;
         !!y z. [| ?r^** ?a y; ?r y z; ?I y; ?I z; ?P y |] ==> ?P z |]
      ==> ?P ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 1)
            ),
        template_predicate (template_app (template_var 1, template_var 3)),
        template_predicate (template_app (template_var 0, template_var 3)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (template_app (template_var 0, template_var 2))))]:
   (string * thm * template) list
### theory "Draft.SestoftConfTemplates"
### 0.533s elapsed time, 0.687s cpu time, 0.071s GC time
val it = (): unit
