Loading theory "Draft.ConstOn" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec")
Loading theory "HOL-Library.Stream" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### theory "Draft.ConstOn"
### 0.045s elapsed time, 0.216s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.558s cpu time, 0.051s GC time
Loading theory "Draft.Arity" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds" via "Draft.ArityAnalysisSig" via "Draft.AEnv")
instantiation
  Arity :: po
  below_Arity == below :: Arity => Arity => bool
instantiation
  Arity :: zero
  zero_Arity == zero_class.zero :: Arity
### theory "HOL-Library.Set_Algebras"
### 0.276s elapsed time, 1.123s cpu time, 0.051s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.ExtrEqs")
instantiation
  Arity :: one
  one_Arity == one_class.one :: Arity
### theory "Draft.Arity"
### 0.204s elapsed time, 0.800s cpu time, 0.088s GC time
Loading theory "Draft.SestoftConf" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.CardinalityAnalysisSig")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  stack_elem :: pt
  permute_stack_elem == permute :: perm => stack_elem => stack_elem
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size_list size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Stream"
### 0.861s elapsed time, 3.402s cpu time, 0.320s GC time
Loading theory "Draft.AEnv" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds" via "Draft.ArityAnalysisSig")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.998s elapsed time, 3.750s cpu time, 0.889s GC time
Loading theory "Draft.Cardinality-Domain" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.CardinalityAnalysisSig")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Cardinality-Domain"
### 0.086s elapsed time, 0.352s cpu time, 0.000s GC time
Loading theory "Draft.Arity-Nominal" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds" via "Draft.ArityAnalysisSig")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "boring_step"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Proofs for inductive predicate(s) "invariant"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.AEnv"
### 0.879s elapsed time, 3.307s cpu time, 0.789s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.SestoftConf"
### 1.517s elapsed time, 5.711s cpu time, 0.970s GC time
Loading theory "Draft.CardinalityAnalysisSig" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec")
instantiation
  Arity :: pure
  permute_Arity == permute :: perm => Arity => Arity
### theory "Draft.Arity-Nominal"
### 0.545s elapsed time, 1.997s cpu time, 0.250s GC time
Loading theory "Draft.ArityAnalysisSig" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.195s elapsed time, 8.025s cpu time, 1.238s GC time
Loading theory "Draft.Templates" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.221s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.NoCardinalityAnalysisTemplates")
locale CardinalityPrognosis
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
locale CardinalityHeap
  fixes
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
### theory "Draft.CardinalityAnalysisSig"
### 0.597s elapsed time, 1.842s cpu time, 0.215s GC time
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale ArityAnalysisHeap
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
locale ArityAnalysisHeapEqvt
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapEqvt Aheap"
### theory "Draft.ArityAnalysisSig"
### 0.622s elapsed time, 1.825s cpu time, 0.135s GC time
Loading theory "Draft.ArityAnalysisAbinds" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec" via "Draft.ArityAnalysisSpec")
Loading theory "Draft.ArityAnalysisStack" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis")
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
Found termination order: "size_list size <*mlex*> {}"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
### theory "Draft.ArityAnalysisAbinds"
### 0.318s elapsed time, 0.961s cpu time, 0.071s GC time
Loading theory "Draft.ArityAnalysisSpec" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis" via "Draft.CardinalityAnalysisSpec")
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale SubstArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "SubstArityAnalysis Aexp"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.642s elapsed time, 1.873s cpu time, 0.214s GC time
locale ArityAnalysisSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisSafe Aexp"
locale ArityAnalysisHeapSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapSafe Aexp Aheap"
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
locale ArityAnalysisLetSafeNoCard
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafeNoCard Aexp Aheap"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
### theory "Draft.ArityAnalysisStack"
### 0.561s elapsed time, 1.585s cpu time, 0.127s GC time
locale SubstArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "SubstArityAnalysis Aexp"
locale ArityAnalysisSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisSafe Aexp"
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
### theory "Draft.ArityAnalysisSpec"
### 0.280s elapsed time, 0.656s cpu time, 0.056s GC time
Loading theory "Draft.CardinalityAnalysisSpec" (required by "Draft.NoCardinalityAnalysisTemplates" via "Draft.NoCardinalityAnalysis")
locale CardinalityPrognosisEdom
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisEdom prognosis"
locale CardinalityPrognosisShape
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisShape prognosis"
locale CardinalityPrognosisApp
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisApp prognosis"
locale CardinalityPrognosisLam
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisLam prognosis"
locale CardinalityPrognosisVar
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisVar prognosis"
locale CardinalityPrognosisIfThenElse
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisIfThenElse prognosis"
locale CardinalityPrognosisLet
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
    and
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityPrognosisLet prognosis cHeap Aheap"
locale CardinalityHeapSafe
  fixes
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityHeapSafe cHeap Aheap"
locale CardinalityPrognosisSafe
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
    and
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityPrognosisSafe prognosis cHeap Aheap Aexp"
### theory "Draft.CardinalityAnalysisSpec"
### 0.504s elapsed time, 0.537s cpu time, 0.050s GC time
Loading theory "Draft.NoCardinalityAnalysis" (required by "Draft.NoCardinalityAnalysisTemplates")
locale NoCardinalityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "NoCardinalityAnalysis Aexp Aheap"
Found termination order: "{}"
### theory "Draft.NoCardinalityAnalysis"
### 0.364s elapsed time, 0.393s cpu time, 0.043s GC time
Loading theory "Draft.NoCardinalityAnalysisTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.NoCardinalityAnalysisTemplates"
### 0.630s elapsed time, 0.792s cpu time, 0.082s GC time
val it = (): unit
