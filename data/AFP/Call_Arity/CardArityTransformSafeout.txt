Loading theory "Draft.ConstOn" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.CardinalityAnalysisSpec")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.ConstOn"
### 0.048s elapsed time, 0.228s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.519s cpu time, 0.049s GC time
Loading theory "Draft.Arity" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityAnalysisSig" via "Draft.AEnv")
instantiation
  Arity :: po
  below_Arity == below :: Arity => Arity => bool
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.895s cpu time, 0.049s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.ExtrEqs")
instantiation
  Arity :: zero
  zero_Arity == zero_class.zero :: Arity
instantiation
  Arity :: one
  one_Arity == one_class.one :: Arity
### theory "Draft.Arity"
### 0.200s elapsed time, 0.779s cpu time, 0.082s GC time
Loading theory "Draft.EtaExpansion" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityEtaExpansionSafe" via "Draft.EtaExpansionSafe")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.EtaExpansion"
### 0.095s elapsed time, 0.372s cpu time, 0.000s GC time
Loading theory "Draft.SestoftConf" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityEtaExpansionSafe" via "Draft.EtaExpansionSafe" via "Draft.Sestoft")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
instantiation
  stack_elem :: pt
  permute_stack_elem == permute :: perm => stack_elem => stack_elem
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.856s elapsed time, 3.382s cpu time, 0.318s GC time
Loading theory "Draft.AEnv" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityAnalysisSig")
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.956s elapsed time, 3.633s cpu time, 0.840s GC time
Loading theory "Draft.Cardinality-Domain" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.CardinalityAnalysisSpec" via "Draft.CardinalityAnalysisSig")
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Cardinality-Domain"
### 0.097s elapsed time, 0.368s cpu time, 0.038s GC time
Loading theory "Draft.Arity-Nominal" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityAnalysisSig")
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "boring_step"
  Proving monotonicity ...
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "invariant"
### theory "Draft.AEnv"
### 0.890s elapsed time, 3.374s cpu time, 0.754s GC time
Loading theory "Draft.TransformTools" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.AbstractTransform")
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  Arity :: pure
  permute_Arity == permute :: perm => Arity => Arity
### theory "Draft.Arity-Nominal"
### 0.552s elapsed time, 2.163s cpu time, 0.211s GC time
Loading theory "Draft.ArityAnalysisSig" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.SestoftConf"
### 1.548s elapsed time, 5.962s cpu time, 1.007s GC time
Loading theory "Draft.ArityStack" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityEtaExpansionSafe")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.176s elapsed time, 8.428s cpu time, 1.199s GC time
Loading theory "Draft.Templates" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.086s elapsed time, 0.324s cpu time, 0.069s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CardArityTransformSafeTemplates")
Found termination order: "{}"
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale ArityAnalysisHeap
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
locale ArityAnalysisHeapEqvt
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapEqvt Aheap"
### theory "Draft.ArityAnalysisSig"
### 0.688s elapsed time, 2.711s cpu time, 0.194s GC time
Loading theory "Draft.Sestoft" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityEtaExpansionSafe" via "Draft.EtaExpansionSafe")
locale supp_bounded_transform
  fixes trans :: "'a => exp => exp"
  assumes "supp_bounded_transform trans"
### theory "Draft.TransformTools"
### 0.814s elapsed time, 3.205s cpu time, 0.261s GC time
Loading theory "Draft.CardinalityAnalysisSig" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.CardinalityAnalysisSpec")
Proofs for inductive predicate(s) "step"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.ArityStack"
### 0.671s elapsed time, 2.630s cpu time, 0.257s GC time
Loading theory "Draft.ArityAnalysisAbinds" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.CardinalityAnalysisSpec" via "Draft.ArityAnalysisSpec")
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
### theory "Draft.Sestoft"
### 0.218s elapsed time, 0.853s cpu time, 0.063s GC time
Loading theory "Draft.EtaExpansionSafe" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityEtaExpansionSafe")
Found termination order: "size_list size <*mlex*> {}"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
### theory "Draft.ArityAnalysisAbinds"
### 0.351s elapsed time, 1.380s cpu time, 0.076s GC time
Loading theory "Draft.SestoftGC" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.726s elapsed time, 2.840s cpu time, 0.270s GC time
Loading theory "Draft.ArityAnalysisSpec" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.CardinalityAnalysisSpec")
Proofs for inductive predicate(s) "gc_step"
Found termination order: "size_list size <*mlex*> {}"
  Proving monotonicity ...
### theory "Draft.EtaExpansionSafe"
### 0.329s elapsed time, 1.287s cpu time, 0.143s GC time
Loading theory "Draft.ArityAnalysisStack" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe")
locale SubstArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "SubstArityAnalysis Aexp"
Found termination order: "{}"
locale ArityAnalysisSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisSafe Aexp"
locale ArityAnalysisHeapSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapSafe Aexp Aheap"
locale CardinalityPrognosis
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
locale CardinalityHeap
  fixes
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
Found termination order: "{}"
### theory "Draft.CardinalityAnalysisSig"
### 0.664s elapsed time, 2.599s cpu time, 0.274s GC time
Loading theory "Draft.AbstractTransform" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform")
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
locale AbstractAnalProp
  fixes PropApp :: "'a => 'a"
    and PropLam :: "'a => 'a"
    and AnalLet :: "(Vars.var * exp) list => exp => 'a => 'b"
    and PropLetBody :: "'b => 'a"
    and PropLetHeap :: "'b => Vars.var => 'a\<^sub>\<bottom>"
    and PropIfScrut :: "'a => 'a"
  assumes
    "AbstractAnalProp PropApp PropLam AnalLet PropLetBody PropLetHeap
      PropIfScrut"
### theory "Draft.SestoftGC"
### 0.304s elapsed time, 1.187s cpu time, 0.135s GC time
Loading theory "Draft.ArityEtaExpansion" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform" via "Draft.ArityEtaExpansionSafe")
locale AbstractAnalPropSubst
  fixes PropApp :: "'a => 'a"
    and PropLam :: "'a => 'a"
    and AnalLet :: "(Vars.var * exp) list => exp => 'a => 'b"
    and PropLetBody :: "'b => 'a"
    and PropLetHeap :: "'b => Vars.var => 'a\<^sub>\<bottom>"
    and PropIfScrut :: "'a => 'a"
  assumes
    "AbstractAnalPropSubst PropApp PropLam AnalLet PropLetBody PropLetHeap
      PropIfScrut"
locale ArityAnalysisLetSafeNoCard
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafeNoCard Aexp Aheap"
locale SubstArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "SubstArityAnalysis Aexp"
locale AbstractTransform
  fixes PropApp :: "'a => 'a"
    and PropLam :: "'a => 'a"
    and AnalLet :: "(Vars.var * exp) list => exp => 'a => 'b"
    and PropLetBody :: "'b => 'a"
    and PropLetHeap :: "'b => Vars.var => 'a\<^sub>\<bottom>"
    and PropIfScrut :: "'a => 'a"
    and TransVar :: "'a => Vars.var => exp"
    and TransApp :: "'a => exp => Vars.var => exp"
    and TransLam :: "'a => Vars.var => exp => exp"
    and TransLet :: "'b => (Vars.var * exp) list => exp => exp"
  assumes
    "AbstractTransform PropApp PropLam AnalLet PropLetBody PropLetHeap
      PropIfScrut TransVar TransApp TransLam TransLet"
locale ArityAnalysisSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisSafe Aexp"
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
### theory "Draft.ArityAnalysisSpec"
### 0.358s elapsed time, 1.408s cpu time, 0.154s GC time
Loading theory "Draft.CardinalityAnalysisSpec" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe")
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
### theory "Draft.ArityAnalysisStack"
### 0.661s elapsed time, 2.596s cpu time, 0.239s GC time
Loading theory "Draft.ArityConsistent" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe")
locale AbstractTransformSubst
  fixes PropApp :: "'a => 'a"
    and PropLam :: "'a => 'a"
    and AnalLet :: "(Vars.var * exp) list => exp => 'a => 'b"
    and PropLetBody :: "'b => 'a"
    and PropLetHeap :: "'b => Vars.var => 'a\<^sub>\<bottom>"
    and PropIfScrut :: "'a => 'a"
    and TransVar :: "'a => Vars.var => exp"
    and TransApp :: "'a => exp => Vars.var => exp"
    and TransLam :: "'a => Vars.var => exp => exp"
    and TransLet :: "'b => (Vars.var * exp) list => exp => exp"
  assumes
    "AbstractTransformSubst PropApp PropLam AnalLet PropLetBody PropLetHeap
      PropIfScrut TransVar TransApp TransLam TransLet"
locale AbstractTransformBound
  fixes PropApp :: "'a => 'a"
    and PropLam :: "'a => 'a"
    and AnalLet :: "(Vars.var * exp) list => exp => 'a => 'b"
    and PropLetBody :: "'b => 'a"
    and PropLetHeap :: "'b => Vars.var => 'a\<^sub>\<bottom>"
    and PropIfScrut :: "'a => 'a"
    and trans :: "'c => exp => exp"
    and PropLetHeapTrans :: "'b => Vars.var => 'c\<^sub>\<bottom>"
  assumes
    "AbstractTransformBound PropApp PropLam AnalLet PropLetBody PropLetHeap
      PropIfScrut trans PropLetHeapTrans"
locale CardinalityPrognosisEdom
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisEdom prognosis"
locale CardinalityPrognosisShape
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisShape prognosis"
locale CardinalityPrognosisApp
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisApp prognosis"
### theory "Draft.ArityEtaExpansion"
### 0.644s elapsed time, 2.532s cpu time, 0.230s GC time
Loading theory "Draft.ArityEtaExpansionSafe" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe" via "Draft.ArityTransform")
locale CardinalityPrognosisLam
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisLam prognosis"
locale CardinalityPrognosisVar
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisVar prognosis"
locale CardinalityPrognosisIfThenElse
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
  assumes "CardinalityPrognosisIfThenElse prognosis"
locale CardinalityPrognosisLet
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
    and
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityPrognosisLet prognosis cHeap Aheap"
locale CardinalityHeapSafe
  fixes
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityHeapSafe cHeap Aheap"
locale CardinalityPrognosisSafe
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
    and
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityPrognosisSafe prognosis cHeap Aheap Aexp"
### theory "Draft.CardinalityAnalysisSpec"
### 0.720s elapsed time, 2.839s cpu time, 0.195s GC time
locale AbstractTransformBoundSubst
  fixes PropApp :: "'a => 'a"
    and PropLam :: "'a => 'a"
    and AnalLet :: "(Vars.var * exp) list => exp => 'a => 'b"
    and PropLetBody :: "'b => 'a"
    and PropLetHeap :: "'b => Vars.var => 'a\<^sub>\<bottom>"
    and PropIfScrut :: "'a => 'a"
    and trans :: "'c => exp => exp"
    and PropLetHeapTrans :: "'b => Vars.var => 'c\<^sub>\<bottom>"
  assumes
    "AbstractTransformBoundSubst PropApp PropLam AnalLet PropLetBody
      PropLetHeap PropIfScrut trans PropLetHeapTrans"
### theory "Draft.AbstractTransform"
### 0.982s elapsed time, 3.843s cpu time, 0.335s GC time
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
Proofs for inductive predicate(s) "stack_consistent"
  Proving monotonicity ...
Proofs for inductive predicate(s) "a_consistent"
  Proving monotonicity ...
### theory "Draft.ArityConsistent"
### 0.763s elapsed time, 2.451s cpu time, 0.206s GC time
### theory "Draft.ArityEtaExpansionSafe"
### 0.634s elapsed time, 1.716s cpu time, 0.147s GC time
Loading theory "Draft.ArityTransform" (required by "Draft.CardArityTransformSafeTemplates" via "Draft.CardArityTransformSafe")
locale ArityAnalysisHeapEqvt
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapEqvt Aheap"
### theory "Draft.ArityTransform"
### 0.518s elapsed time, 0.544s cpu time, 0.038s GC time
Loading theory "Draft.CardArityTransformSafe" (required by "Draft.CardArityTransformSafeTemplates")
locale CardinalityPrognosisSafe
  fixes
    prognosis ::
      "(Vars.var => Arity\<^sub>\<bottom>)
       => Arity list
          => Arity
             => (Vars.var * exp) list * exp * stack_elem list
                => Vars.var => one\<^sub>\<bottom>"
    and
    cHeap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => one\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "CardinalityPrognosisSafe prognosis cHeap Aheap Aexp"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "consistent"
  Proving monotonicity ...
### theory "Draft.CardArityTransformSafe"
### 1.143s elapsed time, 1.236s cpu time, 0.108s GC time
Loading theory "Draft.CardArityTransformSafeTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.CardArityTransformSafeTemplates"
### 0.654s elapsed time, 0.851s cpu time, 0.122s GC time
val it = (): unit
