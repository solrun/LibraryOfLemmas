Loading theory "Draft.ConstOn" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig" via "Draft.TTree-HOLCF" via "Draft.TTree")
Loading theory "Draft.List-Interleavings" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig" via "Draft.TTree-HOLCF" via "Draft.TTree")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
Proofs for inductive predicate(s) "interleave'"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
  Proving monotonicity ...
### theory "Draft.ConstOn"
### 0.047s elapsed time, 0.217s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.530s cpu time, 0.050s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.201s elapsed time, 0.784s cpu time, 0.050s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.ExtrEqs")
### theory "Draft.List-Interleavings"
### 0.335s elapsed time, 1.334s cpu time, 0.131s GC time
Loading theory "Draft.TTree" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig" via "Draft.TTree-HOLCF")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.963s elapsed time, 3.791s cpu time, 0.372s GC time
Loading theory "Draft.Set-Cpo" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig" via "Draft.TTree-HOLCF")
Found termination order: "size <*mlex*> {}"
instantiation
  set :: (type) below
  below_set == below :: 'a set => 'a set => bool
### theory "Draft.Set-Cpo"
### 0.246s elapsed time, 0.856s cpu time, 0.587s GC time
Loading theory "Draft.Arity" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.024s elapsed time, 3.882s cpu time, 0.953s GC time
Loading theory "Draft.Env-Set-Cpo" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.Cardinality-Domain-Lists")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (snd (snd (snd p)))) <*mlex*> {}"
instantiation
  Arity :: po
  below_Arity == below :: Arity => Arity => bool
### Ignoring conversion rule for operator Set.member
### Ignoring conversion rule for operator Set.member
Found termination order: "size <*mlex*> {}"
instantiation
  Arity :: zero
  zero_Arity == zero_class.zero :: Arity
instantiation
  Arity :: one
  one_Arity == one_class.one :: Arity
### theory "Draft.Arity"
### 0.225s elapsed time, 0.883s cpu time, 0.044s GC time
Loading theory "Draft.AEnv" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds" via "Draft.ArityAnalysisSig")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Env-Set-Cpo"
### 0.227s elapsed time, 0.897s cpu time, 0.081s GC time
Loading theory "Draft.AnalBinds" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig")
Proofs for inductive predicate(s) "substitute''"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.TTree"
### 1.250s elapsed time, 4.786s cpu time, 0.953s GC time
Loading theory "Draft.Cardinality-Domain" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.Cardinality-Domain-Lists")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Cardinality-Domain"
### 0.117s elapsed time, 0.452s cpu time, 0.096s GC time
Loading theory "Draft.TTree-HOLCF" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.TTreeAnalysisSig")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale ExpAnalysis
  fixes exp :: "exp => 'a -> 'b"
Found termination order: "size <*mlex*> {}"
### theory "Draft.AEnv"
### 0.708s elapsed time, 2.774s cpu time, 0.321s GC time
Loading theory "Draft.Arity-Nominal" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds" via "Draft.ArityAnalysisSig")
### Additional type variable(s) in specification of "AnalBinds_rel": 'a
### Additional type variable(s) in specification of "AnalBinds_dom": 'a
Found termination order: "size_list (%p. size (snd p)) <*mlex*> {}"
### theory "Draft.AnalBinds"
### 0.750s elapsed time, 2.964s cpu time, 0.240s GC time
Loading theory "Draft.Cardinality-Domain-Lists" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec")
### theory "HOL-Library.Tree"
### 2.206s elapsed time, 8.538s cpu time, 1.335s GC time
Loading theory "Draft.Templates" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.272s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TTreeAnalysisSpecTemplates")
instantiation
  ttree :: (type) below
  below_ttree == below :: 'a ttree => 'a ttree => bool
### theory "Draft.TTree-HOLCF"
### 0.915s elapsed time, 3.592s cpu time, 0.277s GC time
Loading theory "Draft.TTreeAnalysisSig" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec")
instantiation
  Arity :: pure
  permute_Arity == permute :: perm => Arity => Arity
### theory "Draft.Arity-Nominal"
### 0.502s elapsed time, 1.984s cpu time, 0.133s GC time
Loading theory "Draft.ArityAnalysisSig" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.ArityAnalysisSpec" via "Draft.ArityAnalysisAbinds")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.693s elapsed time, 2.737s cpu time, 0.243s GC time
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale ArityAnalysisHeap
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
locale ArityAnalysisHeapEqvt
  fixes
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapEqvt Aheap"
### theory "Draft.ArityAnalysisSig"
### 0.659s elapsed time, 2.459s cpu time, 0.216s GC time
Loading theory "Draft.ArityAnalysisAbinds" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec" via "Draft.ArityAnalysisSpec")
### theory "Draft.Cardinality-Domain-Lists"
### 1.083s elapsed time, 4.094s cpu time, 0.348s GC time
locale ArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
locale TTreeAnalysis
  fixes Texp :: "exp => Arity -> Vars.var ttree"
### theory "Draft.TTreeAnalysisSig"
### 0.780s elapsed time, 2.803s cpu time, 0.276s GC time
Found termination order: "size_list size <*mlex*> {}"
locale EdomArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "EdomArityAnalysis Aexp"
### theory "Draft.ArityAnalysisAbinds"
### 0.289s elapsed time, 0.442s cpu time, 0.060s GC time
Loading theory "Draft.ArityAnalysisSpec" (required by "Draft.TTreeAnalysisSpecTemplates" via "Draft.TTreeAnalysisSpec")
locale SubstArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "SubstArityAnalysis Aexp"
locale ArityAnalysisSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisSafe Aexp"
locale ArityAnalysisHeapSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisHeapSafe Aexp Aheap"
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
locale ArityAnalysisLetSafeNoCard
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafeNoCard Aexp Aheap"
locale SubstArityAnalysis
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "SubstArityAnalysis Aexp"
locale ArityAnalysisSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisSafe Aexp"
locale ArityAnalysisLetSafe
  fixes Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "ArityAnalysisLetSafe Aexp Aheap"
### theory "Draft.ArityAnalysisSpec"
### 0.227s elapsed time, 0.247s cpu time, 0.030s GC time
Loading theory "Draft.TTreeAnalysisSpec" (required by "Draft.TTreeAnalysisSpecTemplates")
locale TTreeAnalysisCarrier
  fixes Texp :: "exp => Arity -> Vars.var ttree"
    and Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "TTreeAnalysisCarrier Texp Aexp"
locale TTreeAnalysisSafe
  fixes Texp :: "exp => Arity -> Vars.var ttree"
    and Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
  assumes "TTreeAnalysisSafe Texp Aexp"
locale TTreeAnalysisCardinalityHeap
  fixes Texp :: "exp => Arity -> Vars.var ttree"
    and Aexp :: "exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and
    Aheap ::
      "(Vars.var * exp) list
       => exp => Arity -> Vars.var => Arity\<^sub>\<bottom>"
    and Theap :: "(Vars.var * exp) list => exp => Arity -> Vars.var ttree"
  assumes "TTreeAnalysisCardinalityHeap Texp Aexp Aheap Theap"
### theory "Draft.TTreeAnalysisSpec"
### 0.591s elapsed time, 0.619s cpu time, 0.039s GC time
Loading theory "Draft.TTreeAnalysisSpecTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.TTreeAnalysisSpecTemplates"
### 0.672s elapsed time, 0.854s cpu time, 0.122s GC time
val it = (): unit
