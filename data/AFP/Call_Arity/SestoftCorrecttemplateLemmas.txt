   [("SestoftCorrect.trace_nil",
     "(?c \<Rightarrow>\<^sup>*\<^bsub>[]\<^esub> ?c') = (?c = ?c')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("SestoftCorrect.bal_nil",
     "(?c \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>[]\<^esub> ?c') =
      (?c = ?c')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("SestoftCorrect.destruct_trace",
     "?c \<Rightarrow>\<^sup>*\<^bsub>?T\<^esub> ?c' ==>
      SestoftCorrect.steps ?c ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 2),
             template_var 0)
           ))),
    ("SestoftCorrect.build_trace",
     "SestoftCorrect.steps ?c ?c' ==>
      EX T. ?c \<Rightarrow>\<^sup>*\<^bsub>T\<^esub> ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SestoftCorrect.bal_stackD",
     "?c \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>?T\<^esub> ?c' ==>
      stack ?c' = stack ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 1, template_var 2)))),
    ("SestoftCorrect.isVal_stops",
     "[| isVal ?e;
         (?\<Gamma>, ?e,
          ?S) \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>?T\<^esub> (?\<Delta>,
                         ?z, ?S) |]
      ==> ?T = []",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 3))),
                template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 3)))
            )],
       template_equation (template_var 2, template_hole 0))),
    ("SestoftCorrect.Ball_subst",
     "(ALL p:set ?\<Gamma>[?y::h=?x]. ?f p) =
      (ALL p:set ?\<Gamma>. case p of (z, e) => ?f (z, e[?y::=?x]))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         t_empty))),
    ("SestoftCorrect.dummy_stack_extended",
     "[| set ?S <= range Dummy; ?x ~: range Dummy |]
      ==> (?S \<lesssim> ?x # ?S') = (?S \<lesssim> ?S')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_hole 6),
            template_hole 5)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SestoftCorrect.trace_consE",
     "[| ?conf \<Rightarrow>\<^sup>*\<^bsub>?conf' # ?T\<^esub> ?final;
         [| ?conf' \<Rightarrow>\<^sup>*\<^bsub>?T\<^esub> ?final;
            ?conf \<Rightarrow> ?conf' |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 4),
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("SestoftCorrect.stack_passes_lower_bound",
     "[| ?c\<^sub>3 \<Rightarrow> ?c\<^sub>4;
         stack ?c\<^sub>2 \<lesssim> stack ?c\<^sub>3;
         ~ stack ?c\<^sub>2 \<lesssim> stack ?c\<^sub>4 |]
      ==> stack ?c\<^sub>3 = stack ?c\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_app (template_hole 2, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app (template_hole 2, template_var 2),
         template_app (template_hole 2, template_var 0)))),
    ("SestoftCorrect.stack_passes_lower_bound",
     "[| ?c\<^sub>3 \<Rightarrow> ?c\<^sub>4;
         stack ?c\<^sub>2 \<lesssim> stack ?c\<^sub>3;
         ~ stack ?c\<^sub>2 \<lesssim> stack ?c\<^sub>4 |]
      ==> stack ?c\<^sub>4 = tl (stack ?c\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              template_app (template_hole 3, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("SestoftCorrect.lemma_3",
     "[| (?\<Gamma>, ?e,
          ?S) \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>?T\<^esub> (?\<Delta>,
                         ?z, ?S);
         isVal ?z |]
      ==> ?\<Gamma> : ?e \<Down>\<^bsub>upds_list
   ?S\<^esub> ?\<Delta> : ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3))),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 3)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_app (template_hole 0, template_var 3)),
               template_var 1),
             template_var 0)
           ))),
    ("SestoftCorrect.one_step_only",
     "?c \<Rightarrow> ?c' ==>
      stack ?c = stack ?c' |
      (EX x. stack ?c' = x # stack ?c) | (EX x. stack ?c = x # stack ?c')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 1, t_empty)),
               template_app (template_hole 1, t_empty)))
           ))),
    ("SestoftCorrect.lemma_2",
     "[| ?\<Gamma> : ?e \<Down>\<^bsub>?L\<^esub> ?\<Delta> : ?z;
         fv (?\<Gamma>, ?e, ?S) <= set ?L Un domA ?\<Gamma> |]
      ==> SestoftCorrect.steps (?\<Gamma>, ?e, ?S) (?\<Delta>, ?z, ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 0))),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3)),
            template_app (template_hole 2, template_var 5)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_app
                (template_app (template_hole 6, template_var 5),
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 0))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))
           ))),
    ("SestoftCorrect.balE",
     "[| ?c \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>?T\<^esub> ?c';
         [| ?c \<Rightarrow>\<^sup>*\<^bsub>?T\<^esub> ?c';
            ALL c':set ?T. stack ?c \<lesssim> stack c';
            stack ?c' = stack ?c |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 5),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 6),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   t_empty)
                 )],
            template_implication
             ([template_equation
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 5, template_var 3))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("SestoftCorrect.traces_list_all",
     "[| ?c \<Rightarrow>\<^sup>*\<^bsub>?T\<^esub> ?c'; ?P ?c';
         !!c c'. [| c \<Rightarrow> c'; ?P c' |] ==> ?P c |]
      ==> (ALL x:set ?T. ?P x) & ?P ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 t_empty)),
             template_app (template_var 0, template_var 3))
           ))),
    ("SestoftCorrect.dummy_stack_balanced",
     "[| set ?S <= range Dummy;
         SestoftCorrect.steps (?\<Gamma>, ?e, ?S) (?\<Delta>, ?z, ?S);
         !!T. (?\<Gamma>, ?e,
               ?S) \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>T\<^esub> (?\<Delta>,
                             ?z, ?S) ==>
              ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_hole 8),
            template_hole 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 5))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 5)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("SestoftCorrect.trace_induct_final",
     "[| ?x1.0 \<Rightarrow>\<^sup>*\<^bsub>?x2.0\<^esub> ?final;
         ?P ?final [] ?final;
         !!conf' T conf.
            [| conf' \<Rightarrow>\<^sup>*\<^bsub>T\<^esub> ?final;
               ?P conf' T ?final; conf \<Rightarrow> conf' |]
            ==> ?P conf (conf' # T) ?final |]
      ==> ?P ?x1.0 ?x2.0 ?final",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 0, template_var 1),
                template_hole 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 0, template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("SestoftCorrect.bal_consE",
     "[| ?c\<^sub>1 \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>?c\<^sub>2 #
                   ?T\<^esub> ?c\<^sub>5;
         stack ?c\<^sub>2 = ?s # stack ?c\<^sub>1;
         !!T\<^sub>1 c\<^sub>3 c\<^sub>4 T\<^sub>2.
            [| ?T = T\<^sub>1 @ c\<^sub>4 # T\<^sub>2;
               ?c\<^sub>2 \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>T\<^sub>1\<^esub> c\<^sub>3;
               c\<^sub>3 \<Rightarrow> c\<^sub>4;
               c\<^sub>4 \<Rightarrow>\<^sup>b\<^sup>*\<^bsub>T\<^sub>2\<^esub> ?c\<^sub>5 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_hole 7),
                  template_var 5),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 7, template_var 4),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 7, template_var 5))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("SestoftCorrect.traceWhile",
     "[| ?c\<^sub>1 \<Rightarrow>\<^sup>*\<^bsub>?T\<^esub> ?c\<^sub>4;
         ?P ?c\<^sub>1; ~ ?P ?c\<^sub>4;
         !!T\<^sub>1 c\<^sub>2 c\<^sub>3 T\<^sub>2.
            [| ?T = T\<^sub>1 @ c\<^sub>3 # T\<^sub>2;
               ?c\<^sub>1 \<Rightarrow>\<^sup>*\<^bsub>T\<^sub>1\<^esub> c\<^sub>2;
               ALL x:set T\<^sub>1. ?P x; ?P c\<^sub>2;
               c\<^sub>2 \<Rightarrow> c\<^sub>3; ~ ?P c\<^sub>3;
               c\<^sub>3 \<Rightarrow>\<^sup>*\<^bsub>T\<^sub>2\<^esub> ?c\<^sub>4 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_var 1, template_var 4)),
        template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 2))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("SestoftCorrect.conf_trace_induct_final",
     "[| (?\<Gamma>, ?e, ?S) \<Rightarrow>\<^sup>*\<^bsub>?T\<^esub> ?final;
         !!\<Gamma> e S.
            ?final = (\<Gamma>, e, S) ==>
            ?P \<Gamma> e S [] (\<Gamma>, e, S);
         !!\<Gamma> e S T \<Gamma>' e' S'.
            [| (\<Gamma>', e',
                S') \<Rightarrow>\<^sup>*\<^bsub>T\<^esub> ?final;
               ?P \<Gamma>' e' S' T ?final;
               (\<Gamma>, e, S) \<Rightarrow> (\<Gamma>', e', S') |]
            ==> ?P \<Gamma> e S ((\<Gamma>', e', S') # T) ?final |]
      ==> ?P ?\<Gamma> ?e ?S ?T ?final",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_app
                   (template_app (template_hole 8, template_var 5),
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3))),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_var 0, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           )))]
