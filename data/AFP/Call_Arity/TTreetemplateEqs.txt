   [("TTree.carrier_many_among", "carrier (many_among ?S) = ?S",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("TTree.carrier_singles", "carrier (singles ?S) = UNIV",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("TTree.possible_anything", "possible anything ?x' = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("TTree.possible_empty", "possible TTree.empty ?x' = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("TTree.both_empty1", "TTree.empty \<otimes>\<otimes> ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("TTree.both_empty2", "?t \<otimes>\<otimes> TTree.empty = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("TTree.either_empty1", "TTree.empty \<oplus>\<oplus> ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("TTree.either_empty2", "?t \<oplus>\<oplus> TTree.empty = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("TTree.either_idem", "?t \<oplus>\<oplus> ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("TTree.nxt_anything", "nxt anything ?x = anything",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("TTree.f_nxt_empty_set", "f_nxt ?f {} ?x = ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 1)),
    ("TTree.paths_not_empty", "(paths ?t = {}) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("TTree.nxt_single", "nxt (single ?x) ?x' = TTree.empty",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("TTree.carrier_many_calls", "carrier (many_calls ?x) = {?x}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("TTree.carrier_single", "carrier (single ?y) = {?y}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("TTree.substitute'_Nil", "substitute' ?f ?T ?t [] = True",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_hole 0)),
    ("TTree.both_comm",
     "?t \<otimes>\<otimes> ?t' = ?t' \<otimes>\<otimes> ?t",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("TTree.either_sym",
     "?t \<oplus>\<oplus> ?t2.0 = ?t2.0 \<oplus>\<oplus> ?t",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("TTree.possible_many_calls",
     "possible (many_calls ?x) ?x' = (?x = ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("TTree.possible_single", "possible (single ?x) ?x' = (?x = ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("TTree.carrier_ttree_restr",
     "carrier (ttree_restr ?S ?t) = ?S Int carrier ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("TTree.paths_injs_simps", "(paths ?t = paths ?t') = (?t = ?t')",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("TTree.substitute_simps", "([] : paths (substitute ?f ?T ?t)) = True",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("TTree.carrier_both",
     "carrier (?t \<otimes>\<otimes> ?t') = carrier ?t Un carrier ?t'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("TTree.carrier_either",
     "carrier (?t \<oplus>\<oplus> ?t') = carrier ?t Un carrier ?t'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("TTree.Union_paths_carrier", "\<Union> (set ` paths ?t) = carrier ?t",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("TTree.paths_Either",
     "paths (Either ?ts) = insert [] (\<Union> (paths ` ?ts))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 5),
             template_var 0))))),
    ("TTree.paths_either",
     "paths (?t \<oplus>\<oplus> ?t') = paths ?t Un paths ?t'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("TTree.paths_intersect",
     "paths (?t \<inter>\<inter> ?t') = paths ?t Int paths ?t'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("TTree.possible_substitute",
     "possible (substitute ?f ?T ?t) ?x = possible ?t ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("TTree.carrier_without", "carrier (without ?x ?t) = carrier ?t - {?x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("TTree.paths_single", "paths (single ?x) = {[], [?x]}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 2)),
           template_hole 0)))),
    ("TTree.both_assoc",
     "?t \<otimes>\<otimes> (?t' \<otimes>\<otimes> ?t'') =
      ?t \<otimes>\<otimes> ?t' \<otimes>\<otimes> ?t''",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("TTree.ttree_restr_tree_restr",
     "ttree_restr ?S (ttree_restr ?S' ?t) = ttree_restr (?S' Int ?S) ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("TTree.nxt_many_calls",
     "nxt (many_calls ?x) ?x' =
      (if ?x' = ?x then many_calls ?x else TTree.empty)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("TTree.filter_paths_conv_free_restr",
     "filter (%x'. x' : ?S) ` paths ?t = paths (ttree_restr ?S ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("TTree.possible_both",
     "possible (?t \<otimes>\<otimes> ?t') ?x =
      (possible ?t ?x | possible ?t' ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("TTree.possible_either",
     "possible (?t \<oplus>\<oplus> ?t') ?x =
      (possible ?t ?x | possible ?t' ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("TTree.elim_substitute'",
     "substitute' ?f ?T ?t ?xs = (?xs : paths (substitute ?f ?T ?t))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1))))),
    ("TTree.nxt_either",
     "nxt (?t \<oplus>\<oplus> ?t') ?x =
      nxt ?t ?x \<oplus>\<oplus> nxt ?t' ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("TTree.ttree_restr_both",
     "ttree_restr ?S (?t \<otimes>\<otimes> ?t') =
      ttree_restr ?S ?t \<otimes>\<otimes> ttree_restr ?S ?t'",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("TTree.either_both_distr",
     "?t' \<otimes>\<otimes> ?t \<oplus>\<oplus>
      ?t' \<otimes>\<otimes> ?t'' =
      ?t' \<otimes>\<otimes> (?t \<oplus>\<oplus> ?t'')",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("TTree.either_both_distr2",
     "?t' \<otimes>\<otimes> ?t \<oplus>\<oplus>
      ?t'' \<otimes>\<otimes> ?t =
      (?t' \<oplus>\<oplus> ?t'') \<otimes>\<otimes> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("TTree.filter_paths_conv_free_without",
     "filter (%x'. x' ~= ?y) ` paths ?t = paths (without ?y ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("TTree.f_nxt_upd_empty",
     "f_nxt (?f(?x' := TTree.empty)) ?T ?x = (f_nxt ?f ?T ?x)
      (?x' := TTree.empty)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_hole 0)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_hole 0))),
    ("TTree.filter_paths_conv_free_restr2",
     "filter (%x'. x' ~: ?S) ` paths ?t = paths (ttree_restr (- ?S) ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("TTree.nxt_singles",
     "nxt (singles ?S) ?x' =
      (if ?x' : ?S then without ?x' (singles ?S) else singles ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 3, template_var 1))),
         template_app (template_hole 3, template_var 1)))),
    ("TTree.nxt_both_many_calls",
     "nxt (many_calls ?x \<otimes>\<otimes> ?t) ?x =
      many_calls ?x \<otimes>\<otimes> (?t \<oplus>\<oplus> nxt ?t ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 1),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))))),
    ("TTree.paths_substitute_substitute''",
     "paths (substitute ?f ?T ?t) =
      (UN xs:paths ?t. Collect (substitute'' ?f ?T xs))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 5, template_var 0))))),
    ("TTree.substitute_either",
     "substitute ?f ?T (?t \<oplus>\<oplus> ?t') =
      substitute ?f ?T ?t \<oplus>\<oplus> substitute ?f ?T ?t'",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)))),
    ("TTree.paths_nxt_eq",
     "(?xs : paths (nxt ?t ?x)) = (?xs = [] | ?x # ?xs : paths ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_dunno)),
    ("TTree.Cons_path",
     "(?x # ?xs : paths ?t) = (possible ?t ?x & ?xs : paths (nxt ?t ?x))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))))),
    ("TTree.substitute_substitute''",
     "(?xs : paths (substitute ?f ?T ?t)) =
      (EX xs':paths ?t. substitute'' ?f ?T xs' ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         t_empty))),
    ("TTree.paths_both",
     "(?xs : paths (?t \<otimes>\<otimes> ?t')) =
      (EX ys:paths ?t. EX zs:paths ?t'. ?xs : ys \<otimes> zs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         t_empty))),
    ("TTree.f_nxt_eq_empty_iff",
     "(f_nxt ?f ?T ?x ?x' = TTree.empty) =
      (?f ?x' = TTree.empty | ?x' = ?x & ?x : ?T)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 4),
       template_dunno)),
    ("TTree.substitute'_Cons",
     "substitute' ?f ?T ?t (?x # ?xs) =
      (possible ?t ?x &
       substitute' (f_nxt ?f ?T ?x) ?T (nxt ?t ?x \<otimes>\<otimes> ?f ?x)
        ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_var 1)),
               template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app (template_var 4, template_var 1))),
           template_var 0)))),
    ("TTree.substitute_simps",
     "(?x # ?xs : paths (substitute ?f ?T ?t)) =
      (possible ?t ?x &
       ?xs
       : paths
          (substitute (f_nxt ?f ?T ?x) ?T
            (nxt ?t ?x \<otimes>\<otimes> ?f ?x)))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 4),
             template_var 3)),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 4)),
         template_app
          (template_app (template_hole 8, template_var 3),
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1),
                     template_var 4)),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_app (template_var 2, template_var 4)))))))),
    ("TTree.ex_ex_eq_hint",
     "(EX x. (EX xs ys. x = ?f xs ys & ?P xs ys) & ?Q x) =
      (EX xs ys. ?Q (?f xs ys) & ?P xs ys)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 2, t_empty))),
    ("TTree.nxt_both",
     "nxt (?t' \<otimes>\<otimes> ?t) ?x =
      (if possible ?t' ?x & possible ?t ?x
       then nxt ?t' ?x \<otimes>\<otimes> ?t \<oplus>\<oplus>
            ?t' \<otimes>\<otimes> nxt ?t ?x
       else if possible ?t' ?x then nxt ?t' ?x \<otimes>\<otimes> ?t
            else if possible ?t ?x then ?t' \<otimes>\<otimes> nxt ?t ?x
                 else TTree.empty)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0)),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0))),
             template_hole 0))))),
    ("TTree.Cons_both",
     "(?x # ?xs : paths (?t' \<otimes>\<otimes> ?t)) =
      (if possible ?t' ?x & possible ?t ?x
       then ?xs : paths (nxt ?t' ?x \<otimes>\<otimes> ?t) |
            ?xs : paths (?t' \<otimes>\<otimes> nxt ?t ?x)
       else if possible ?t' ?x
            then ?xs : paths (nxt ?t' ?x \<otimes>\<otimes> ?t)
            else if possible ?t ?x
                 then ?xs : paths (?t' \<otimes>\<otimes> nxt ?t ?x)
                 else False)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 3),
             template_var 2)),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 3))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 3)),
                     template_var 0)))),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 3)))))),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 3)),
                   template_var 0)))),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 9, template_var 2),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 3))))),
             template_hole 0)))))]
