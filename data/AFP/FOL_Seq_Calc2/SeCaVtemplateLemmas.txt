   [("SeCaV.p2", "params' ?p = params ?p",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SeCaV.p2'", "params'' ?p = params ?p",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SeCaV.p1", "paramst' ?t = paramst ?t",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SeCaV.p1'", "paramst'' ?t = paramst ?t",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SeCaV.s4", "inc_term ?t = liftt ?t",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SeCaV.s4", "inc_list ?l = liftts ?l",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SeCaV.p0", "paramsts ?ts = \<Union> (set (map paramst ?ts))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("SeCaV.member", "member ?p ?z = (?p : set ?z)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SeCaV.ext", "ext ?y ?z = (set ?z <= set ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SeCaV.s2", "new ?c ?p = (?c ~: params ?p)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("SeCaV.s1", "new_list ?c ?l = (?c ~: paramsts ?l)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("SeCaV.s1", "new_term ?c ?t = (?c ~: paramst ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("SeCaV.s6", "sub ?v ?s ?p = subst ?p ?s ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("SeCaV.s5", "sub_term ?v ?s ?t = substt ?t ?s ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("SeCaV.s5", "sub_list ?v ?s ?l = substts ?l ?s ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("SeCaV.Basic", "member (Neg ?p) ?z ==> \<tturnstile> ?p # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SeCaV.Ext", "[| \<tturnstile> ?z; ext ?y ?z |] ==> \<tturnstile> ?y",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("SeCaV.s3", "news ?c ?z = list_all (%p. ?c ~: params p) ?z",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("SeCaV.shift_eq", "?i = ?j ==> SeCaV.shift ?e ?i ?T ?j = ?T",
     template_implication
      ([template_equation (template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_var 0))),
    ("SeCaV.Neg",
     "\<tturnstile> ?p # ?z ==> \<tturnstile> Neg (Neg ?p) # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 0, template_var 1))),
               template_var 0))
           ))),
    ("SeCaV.lift_lemma",
     "semantics_term (SeCaV.shift ?e 0 ?x) ?f (liftt ?t) =
      semantics_term ?e ?f ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_var 0))),
    ("SeCaV.lift_lemma",
     "semantics_list (SeCaV.shift ?e 0 ?x) ?f (liftts ?ts) =
      semantics_list ?e ?f ?ts",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_var 0))),
    ("SeCaV.sound",
     "\<tturnstile> ?z ==> EX p:set ?z. semantics ?e ?f ?g p",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 3)),
             t_empty)
           ))),
    ("SeCaV.shift_gt", "?j < ?i ==> SeCaV.shift ?e ?i ?T ?j = ?e ?j",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("SeCaV.AlphaDis",
     "\<tturnstile> ?p # ?q # ?z ==> \<tturnstile> Dis ?p ?q # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("SeCaV.GammaExi",
     "\<tturnstile> sub 0 ?t ?p # ?z ==> \<tturnstile> Exi ?p # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("SeCaV.shift_lt", "?i < ?j ==> SeCaV.shift ?e ?i ?T ?j = ?e (?j - 1)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("SeCaV.AlphaImp",
     "\<tturnstile> Neg ?p # ?q # ?z ==> \<tturnstile> Imp ?p ?q # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("SeCaV.shift_commute",
     "SeCaV.shift (SeCaV.shift ?e ?i ?U) 0 ?T =
      SeCaV.shift (SeCaV.shift ?e 0 ?T) (Suc ?i) ?U",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1)),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_hole 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2)),
         template_var 1))),
    ("SeCaV.GammaUni",
     "\<tturnstile> Neg (sub 0 ?t ?p) # ?z ==>
      \<tturnstile> Neg (Uni ?p) # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 2),
                      template_var 1))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 1))),
               template_var 0))
           ))),
    ("SeCaV.AlphaCon",
     "\<tturnstile> Neg ?p # Neg ?q # ?z ==>
      \<tturnstile> Neg (Con ?p ?q) # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1))),
               template_var 0))
           ))),
    ("SeCaV.subst_lemma'",
     "semantics_term ?e ?f (substt ?t ?u ?i) =
      semantics_term (SeCaV.shift ?e ?i (semantics_term ?e ?f ?u)) ?f ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 1))),
           template_var 3),
         template_var 2))),
    ("SeCaV.subst_lemma'",
     "semantics_list ?e ?f (substts ?ts ?u ?i) =
      semantics_list (SeCaV.shift ?e ?i (semantics_term ?e ?f ?u)) ?f ?ts",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1))),
           template_var 3),
         template_var 2))),
    ("SeCaV.BetaCon",
     "[| \<tturnstile> ?p # ?z; \<tturnstile> ?q # ?z |]
      ==> \<tturnstile> Con ?p ?q # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 1))
           ))),
    ("SeCaV.upd_lemma'",
     "?n ~: paramst ?t ==>
      semantics_term ?e (?f(?n := ?z)) ?t = semantics_term ?e ?f ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 3)))),
    ("SeCaV.upd_lemma'",
     "?n ~: paramsts ?ts ==>
      semantics_list ?e (?f(?n := ?z)) ?ts = semantics_list ?e ?f ?ts",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app (template_hole 3, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 3)))),
    ("SeCaV.subst_lemma",
     "semantics ?e ?f ?g (subst ?a ?t ?i) =
      semantics (SeCaV.shift ?e ?i (semantics_term ?e ?f ?t)) ?f ?g ?a",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 1))),
             template_var 4),
           template_var 3),
         template_var 2))),
    ("SeCaV.BetaImp",
     "[| \<tturnstile> ?p # ?z; \<tturnstile> Neg ?q # ?z |]
      ==> \<tturnstile> Neg (Imp ?p ?q) # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 0)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_var 1))
           ))),
    ("SeCaV.upd_lemma",
     "?n ~: params ?p ==>
      semantics ?e (?f(?n := ?z)) ?g ?p = semantics ?e ?f ?g ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app (template_hole 3, template_var 4))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1)),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0),
           template_var 4)))),
    ("SeCaV.BetaDis",
     "[| \<tturnstile> Neg ?p # ?z; \<tturnstile> Neg ?q # ?z |]
      ==> \<tturnstile> Neg (Dis ?p ?q) # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 0)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_var 1))
           ))),
    ("SeCaV.DeltaUni",
     "[| \<tturnstile> sub 0 (Fun ?i []) ?p # ?z; news ?i (?p # ?z) |]
      ==> \<tturnstile> Uni ?p # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_hole 2)),
                    template_var 1)),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("SeCaV.DeltaExi",
     "[| \<tturnstile> Neg (sub 0 (Fun ?i []) ?p) # ?z; news ?i (?p # ?z) |]
      ==> \<tturnstile> Neg (Exi ?p) # ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_hole 4),
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_hole 2)),
                      template_var 1))),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 0, template_var 1))),
               template_var 0))
           )))]
