   [("Countermodel.terms_ne", "terms ?S ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Countermodel.terms_downwards_closed",
     "?t : terms ?S ==> set (subtermTm ?t) <= terms ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Countermodel.is_env_E", "is_env (terms ?S) (E ?S)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           t_empty)
         )),
    ("Countermodel.terms_cases",
     "?t : terms ?S ==> ?t = Fun 0 [] | (EX p:?S. ?t : set (subtermFm p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3))),
             template_app
              (template_app (template_hole 2, template_var 0), t_empty))
           ))),
    ("Countermodel.is_fdenot_F", "is_fdenot (terms ?S) (F ?S)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           t_empty)
         )),
    ("Countermodel.usemantics_E",
     "?t : terms ?S ==> semantics_term (E ?S) (F ?S) ?t = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_app (template_hole 4, t_empty), t_empty),
           template_var 1),
         template_var 1))),
    ("Countermodel.usemantics_E",
     "list_all (%t. t : terms ?S) ?ts ==>
      semantics_list (E ?S) (F ?S) ?ts = ?ts",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_app (template_hole 4, t_empty), t_empty),
           template_var 0),
         template_var 0))),
    ("Countermodel.Hintikka_counter_model",
     "Hintikka ?S ==>
      (?p : ?S -->
       ~ usemantics (terms ?S) (E ?S) (F ?S) (%n ts. Neg (Pre n ts) : ?S)
          ?p) &
      (Neg ?p : ?S -->
       usemantics (terms ?S) (E ?S) (F ?S) (%n ts. Neg (Pre n ts) : ?S)
        ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_var 1)),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_var 1)),
                           t_empty),
                         t_empty),
                       t_empty),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 1, template_var 0)),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 1)),
                       t_empty),
                     t_empty),
                   t_empty),
                 template_var 0)))
           )))]
