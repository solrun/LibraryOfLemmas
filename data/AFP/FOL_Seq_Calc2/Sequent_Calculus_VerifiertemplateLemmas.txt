   [("Sequent_Calculus_Verifier.to_from_fm", "to_fm (from_fm ?p) = ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Sequent_Calculus_Verifier.to_from_tm", "to_tm (from_tm ?t) = ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Sequent_Calculus_Verifier.to_from_tm",
     "to_tm_list (from_tm_list ?ts) = ?ts",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Sequent_Calculus_Verifier.liftt",
     "to_tm (FOL_Fitting.liftt ?t) = inc_term (to_tm ?t)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Sequent_Calculus_Verifier.liftt",
     "to_tm_list (FOL_Fitting.liftts ?l) = inc_list (to_tm_list ?l)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Sequent_Calculus_Verifier.sim",
     "\<turnstile> ?x ==> \<tturnstile> map to_fm ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Sequent_Calculus_Verifier.shift",
     "SeCaV.shift ?e 0 ?x = ?e\<langle>0:?x\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_hole 1),
         template_var 0))),
    ("Sequent_Calculus_Verifier.evalt",
     "semantics_term ?e ?f ?t = evalt ?e ?f (from_tm ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sequent_Calculus_Verifier.params",
     "FOL_Fitting.new ?c ?p = SeCaV.new ?c (to_fm ?p)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sequent_Calculus_Verifier.paramst",
     "FOL_Fitting.new_term ?c ?t = SeCaV.new_term ?c (to_tm ?t)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sequent_Calculus_Verifier.paramst",
     "FOL_Fitting.new_list ?c ?l = SeCaV.new_list ?c (to_tm_list ?l)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sequent_Calculus_Verifier.evalt",
     "semantics_list ?e ?f ?ts = evalts ?e ?f (from_tm_list ?ts)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sequent_Calculus_Verifier.Truth",
     "\<tturnstile> Imp (Pre 0 []) (Pre 0 []) # ?z",
     template_predicate
      (
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 0)),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))),
             template_var 0))
         )),
    ("Sequent_Calculus_Verifier.complete_sound",
     "\<tturnstile> [?q] ==> semantics ?e ?f ?g ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Sequent_Calculus_Verifier.semantics",
     "semantics ?e ?f ?g ?p = eval ?e ?f ?g (from_fm ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sequent_Calculus_Verifier.subst",
     "to_fm (?A[?t/?s]) = sub ?s (to_tm ?t) (to_fm ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 2)))),
    ("Sequent_Calculus_Verifier.substt",
     "to_tm (?t[?s/?v]) = sub_term ?v (to_tm ?s) (to_tm ?t)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 2)))),
    ("Sequent_Calculus_Verifier.substt",
     "to_tm_list (?l[?s/?v]) = sub_list ?v (to_tm ?s) (to_tm_list ?l)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 2)))),
    ("Sequent_Calculus_Verifier.list_params",
     "FOL_Fitting.news ?c ?z = SeCaV.news ?c (map to_fm ?z)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Sequent_Calculus_Verifier.complete_sound",
     "\<then> ?p ==> \<tturnstile> [?p]",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           )))]
