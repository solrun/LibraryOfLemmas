   [("Subcls.subcls1_single_valued", "single_valued (subcls1 ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Subcls.subcls_self_superclass",
     "[| ?P \<turnstile> ?C \<prec>\<^sup>1 ?C;
         ?P \<turnstile> ?C \<preceq>\<^sup>* ?D |]
      ==> ?D = ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 2)),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_app
               (template_hole 1,
                template_app (template_hole 2, template_var 1)))
            )],
       template_equation (template_var 0, template_var 2))),
    ("Subcls.class_subcls1",
     "[| class ?P ?y = class ?P' ?y;
         ?P \<turnstile> ?y \<prec>\<^sup>1 ?z |]
      ==> ?P' \<turnstile> ?y \<prec>\<^sup>1 ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)),
              template_app (template_hole 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Subcls.subcls_of_Obj",
     "[| ?P \<turnstile> ?C \<preceq>\<^sup>* Object;
         ?P \<turnstile> ?C \<preceq>\<^sup>* ?D |]
      ==> ?P \<turnstile> ?D \<preceq>\<^sup>* Object",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Subcls.subcls1_confluent",
     "[| ?P \<turnstile> ?a \<prec>\<^sup>1 ?b;
         ?P \<turnstile> ?a \<preceq>\<^sup>* ?c; ?a ~= ?c |]
      ==> ?P \<turnstile> ?b \<preceq>\<^sup>* ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 3, template_var 1)))
            ),
        template_negation
         (template_equation (template_var 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app (template_hole 3, template_var 1)))
           ))),
    ("Subcls.subcls_class_ex",
     "[| ?P \<turnstile> ?C \<preceq>\<^sup>* ?C'; ?C ~= ?C' |]
      ==> EX D' fs ms. class ?P ?C = \<lfloor>(D', fs, ms)\<rfloor>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)))
            ),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Subcls.subcls_of_Obj_acyclic",
     "[| ?P \<turnstile> ?C \<preceq>\<^sup>* Object; ?C ~= ?D |]
      ==> ~ (?P \<turnstile> ?C \<preceq>\<^sup>* ?D &
             ?P \<turnstile> ?D \<preceq>\<^sup>* ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_hole 5)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 2),
                         template_var 0)),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_var 2)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1))))
               )
           ))),
    ("Subcls.subcls_confluent",
     "[| ?P \<turnstile> ?C \<preceq>\<^sup>* ?C';
         ?P \<turnstile> ?C \<preceq>\<^sup>* ?C'' |]
      ==> ?P \<turnstile> ?C' \<preceq>\<^sup>* ?C'' |
          ?P \<turnstile> ?C'' \<preceq>\<^sup>* ?C'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1))))
           )))]
