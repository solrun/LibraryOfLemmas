   [("ClassesChanged.classes_changed_self", "classes_changed ?P ?P = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("ClassesChanged.classes_changed_sym",
     "classes_changed ?P ?P' = classes_changed ?P' ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("ClassesChanged.classes_changed_class_changed",
     "(?cn : classes_changed ?P1.0 ?P2.0) = class_changed ?P1.0 ?P2.0 ?cn",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("ClassesChanged.class_changed_cons",
     "fst ?t ~: classes_changed (?t # ?P) (?t # ?P')",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)))
             )
         )),
    ("ClassesChanged.classes_changed_class",
     "?cn ~: classes_changed ?P ?P' ==> class ?P ?cn = class ?P' ?cn",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("ClassesChanged.classes_changed_cons",
     "classes_changed (?t # ?P) (?t # ?P') =
      classes_changed ?P ?P' - {fst ?t}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_hole 0)))),
    ("ClassesChanged.classes_changed_class_set",
     "?S Int classes_changed ?P ?P' = {} ==>
      ALL C:?S. class ?P C = class ?P' C",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)
           ))),
    ("ClassesChanged.classes_changed_int_Cons",
     "?coll Int classes_changed ?P ?P' = {} ==>
      ?coll Int classes_changed (?t # ?P) (?t # ?P') = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_hole 1))),
    ("ClassesChanged.classes_changed_cons_eq",
     "classes_changed (?t # ?P) ?P' =
      classes_changed ?P ?P' - {fst ?t} Un
      (if class_changed [?t] ?P' (fst ?t) then {fst ?t} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_hole 3))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 8, template_var 2),
                       template_hole 0)),
                   template_var 0),
                 template_app (template_hole 4, template_var 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_hole 3)),
           template_hole 3))))]
