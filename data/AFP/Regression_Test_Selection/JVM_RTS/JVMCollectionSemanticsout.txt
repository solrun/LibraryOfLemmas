Loading theory "Draft.Semantics" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.CollectionSemantics")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
locale Semantics
  fixes small :: "'prog => 'state => 'state set"
    and endset :: "'state set"
  assumes "Semantics small endset"
locale Semantics
  fixes small :: "'prog => 'state => 'state set"
    and endset :: "'state set"
  assumes "Semantics small endset"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  small_nstep :: "'prog => 'state => nat => 'state set"
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.Semantics"
### 0.093s elapsed time, 0.405s cpu time, 0.000s GC time
Loading theory "Draft.CollectionSemantics" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.138s elapsed time, 0.570s cpu time, 0.041s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel")
locale CollectionSemantics
  fixes small :: "'prog => 'state => 'state set"
    and endset :: "'state set"
    and collect :: "'prog => 'state => 'state => 'coll"
    and combine :: "'coll => 'coll => 'coll"
    and collect_id :: "'coll"
  assumes "CollectionSemantics small endset combine collect_id"
locale CollectionSemantics
  fixes small :: "'prog => 'state => 'state set"
    and endset :: "'state set"
    and collect :: "'prog => 'state => 'state => 'coll"
    and combine :: "'coll => 'coll => 'coll"
    and collect_id :: "'coll"
  assumes "CollectionSemantics small endset combine collect_id"
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
consts
  csmall_nstep :: "'prog => 'state => nat => ('state * 'coll) set"
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.229s elapsed time, 0.932s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.CollectionSemantics"
### 0.217s elapsed time, 0.832s cpu time, 0.114s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.342s elapsed time, 1.377s cpu time, 0.114s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.270s elapsed time, 1.069s cpu time, 0.073s GC time
Loading theory "JinjaDCI.Auxiliary" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel" via "JinjaDCI.Decl" via "JinjaDCI.Type")
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### theory "JinjaDCI.Auxiliary"
### 0.145s elapsed time, 0.568s cpu time, 0.073s GC time
Loading theory "JinjaDCI.Type" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel" via "JinjaDCI.Decl")
consts
  shift :: "'a list => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.994s elapsed time, 3.776s cpu time, 0.880s GC time
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.081s elapsed time, 4.008s cpu time, 0.923s GC time
### theory "JinjaDCI.Type"
### 0.926s elapsed time, 3.314s cpu time, 0.850s GC time
Loading theory "JinjaDCI.Decl" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "JinjaDCI.Decl"
### 0.066s elapsed time, 0.135s cpu time, 0.000s GC time
Loading theory "Draft.ClassesChanged" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.ClassesAbove")
Loading theory "JinjaDCI.TypeRel" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects")
Found termination order: "size <*mlex*> {}"
### theory "Draft.ClassesChanged"
### 0.082s elapsed time, 0.246s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  supercls_lst :: "'m prog => char list list => bool"
Proofs for inductive predicate(s) "widen"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "Fields"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "JinjaDCI.TypeRel"
### 0.644s elapsed time, 1.446s cpu time, 0.176s GC time
Loading theory "Draft.Subcls" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.ClassesAbove")
Loading theory "JinjaDCI.Value" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects")
### theory "HOL-Library.Tree"
### 2.004s elapsed time, 6.286s cpu time, 1.171s GC time
Loading theory "Draft.Templates" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Subcls"
### 0.044s elapsed time, 0.130s cpu time, 0.000s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.060s elapsed time, 0.153s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.JVMCollectionSemanticsMoreTemplates")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "JinjaDCI.Value"
### 0.359s elapsed time, 0.817s cpu time, 0.056s GC time
Loading theory "JinjaDCI.Objects" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState")
consts
  typeof_h :: "heap => val => ty option"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.545s elapsed time, 1.146s cpu time, 0.117s GC time
Proofs for inductive predicate(s) "iprog"
  Proving monotonicity ...
### theory "JinjaDCI.Objects"
### 0.459s elapsed time, 0.819s cpu time, 0.115s GC time
Loading theory "JinjaDCI.Exceptions" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMExceptions")
Loading theory "JinjaDCI.JVMState" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions")
### theory "JinjaDCI.Exceptions"
### 0.126s elapsed time, 0.250s cpu time, 0.000s GC time
Loading theory "Draft.ClassesAbove" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics")
### theory "Draft.ClassesAbove"
### 0.335s elapsed time, 0.708s cpu time, 0.088s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "JinjaDCI.JVMState"
### 0.756s elapsed time, 1.296s cpu time, 0.135s GC time
Loading theory "JinjaDCI.JVMInstructions" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr")
### theory "JinjaDCI.JVMInstructions"
### 1.616s elapsed time, 2.338s cpu time, 1.002s GC time
Loading theory "JinjaDCI.JVMExceptions" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr")
consts
  match_ex_table ::
    "'m prog => char list => nat => ex_table => (nat * nat) option"
Found termination order:
  "(%p. size_list (%p. size (snd (snd (snd (snd (snd p))))))
         (fst (snd (snd (snd p))))) <*mlex*>
   {}"
### theory "JinjaDCI.JVMExceptions"
### 0.729s elapsed time, 0.802s cpu time, 0.086s GC time
Loading theory "JinjaDCI.JVMExecInstr" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec")
Found termination order: "{}"
consts
  exec_instr ::
    "instr
     => jvm_prog
        => heap
           => val list
              => val list
                 => char list
                    => char list
                       => nat
                          => init_call_status
                             => frame list => sheap => jvm_state"
### theory "JinjaDCI.JVMExecInstr"
### 0.756s elapsed time, 0.843s cpu time, 0.099s GC time
Loading theory "JinjaDCI.JVMExec" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics" via "Draft.JVMSemantics")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "exec_1p"
  Proving monotonicity ...
### theory "JinjaDCI.JVMExec"
### 1.873s elapsed time, 2.841s cpu time, 1.100s GC time
Loading theory "Draft.JVMSemantics" (required by "Draft.JVMCollectionSemanticsMoreTemplates" via "Draft.JVMCollectionSemantics")
Found termination order: "{}"
### theory "Draft.JVMSemantics"
### 0.293s elapsed time, 0.340s cpu time, 0.058s GC time
Loading theory "Draft.JVMCollectionSemantics" (required by "Draft.JVMCollectionSemanticsMoreTemplates")
Found termination order:
  "(%p. size_list (%p. size (snd (snd (snd (snd (snd p))))))
         (snd p)) <*mlex*>
   {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.JVMCollectionSemantics"
### 3.070s elapsed time, 3.828s cpu time, 0.307s GC time
Loading theory "Draft.JVMCollectionSemanticsMoreTemplates"
val templateLemmas =
   [("JVMCollectionSemantics.JVMnaive_csmallD",
     "(?\<sigma>', ?cset)
      : JVMNaiveCollectionSemantics.csmall ?P ?\<sigma> ==>
      JVMexec_ncollect ?P ?\<sigma> = ?cset &
      ?\<sigma>' : JVMsmall ?P ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))
           ))),
    ("JVMCollectionSemantics.JVMsmart_csmallD",
     "(?\<sigma>', ?cset)
      : JVMSmartCollectionSemantics.csmall ?P ?\<sigma> ==>
      JVMexec_scollect ?P ?\<sigma> = ?cset &
      ?\<sigma>' : JVMsmall ?P ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))
           ))),
    ("JVMCollectionSemantics.find_handler_classes_above_frames",
     "find_handler ?P ?a ?h ?frs ?sh = (?xp', ?h', ?frs', ?sh') ==>
      classes_above_frames ?P ?frs' <= classes_above_frames ?P ?frs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 8), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 8),
           template_var 5)))),
    ("JVMCollectionSemantics.classes_above_start_state",
     "classes_above_xcpts ?P Int classes_changed ?P ?P' = JVMcollect_id ==>
      start_state ?P = start_state ?P'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, t_empty),
                  template_hole 4))),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_hole 2)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("JVMCollectionSemantics.classes_above_matches_ex_entry",
     "classes_above ?P ?C Int classes_changed ?P ?P' = JVMcollect_id ==>
      matches_ex_entry ?P ?C ?pc ?xcp = matches_ex_entry ?P' ?C ?pc ?xcp",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9, template_app (template_hole 8, t_empty)),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 4),
             template_var 1),
           template_var 0)))),
    ("JVMCollectionSemantics.classes_above_match_ex_table",
     "classes_above ?P ?C Int classes_changed ?P ?P' = JVMcollect_id ==>
      match_ex_table ?P ?C ?pc ?es = match_ex_table ?P' ?C ?pc ?es",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9, template_app (template_hole 8, t_empty)),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 4),
             template_var 1),
           template_var 0)))),
    ("JVMCollectionSemantics.find_handler_pieces",
     "find_handler ?P ?a ?h ?frs ?sh = (?xp', ?h', ?frs', ?sh') ==>
      ?h = ?h' &
      ?sh = ?sh' &
      classes_above_frames ?P ?frs' <= classes_above_frames ?P ?frs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 6),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 8),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_var 5))))
           ))),
    ("JVMCollectionSemantics.classes_above_find_handler",
     "[| classes_above ?P (cname_of ?h ?a) Int classes_changed ?P ?P' =
         JVMcollect_id;
         classes_above_frames ?P ?frs Int classes_changed ?P ?P' =
         JVMcollect_id |]
      ==> find_handler ?P ?a ?h ?frs ?sh = find_handler ?P' ?a ?h ?frs ?sh",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)),
          template_hole 3),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 1)),
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 4),
               template_var 5),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 5),
             template_var 1),
           template_var 0)))),
    ("JVMCollectionSemantics.jvm_naive_to_smart_csmall_nstep_last_eq",
     "[| (?\<sigma>', ?cset\<^sub>n)
         : JVMNaiveCollectionSemantics.cbig ?P ?\<sigma>;
         (?\<sigma>', ?cset\<^sub>n)
         : JVMNaiveCollectionSemantics.csmall_nstep ?P ?\<sigma> ?n;
         (?\<sigma>', ?cset\<^sub>s)
         : JVMSmartCollectionSemantics.csmall_nstep ?P ?\<sigma> ?n' |]
      ==> ?n = ?n'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_hole 6),
                        template_hole 5),
                      t_empty),
                    template_hole 3),
                  template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 2, template_hole 7),
                          template_hole 5),
                        t_empty),
                      template_hole 3),
                    template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 1)),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 2, template_hole 7),
                          template_hole 1),
                        t_empty),
                      template_hole 3),
                    template_var 4),
                  template_var 3),
                template_var 0))
            )],
       template_equation (template_var 2, template_var 0)))]:
   (string * thm * template) list
### theory "Draft.JVMCollectionSemanticsMoreTemplates"
### 0.401s elapsed time, 0.610s cpu time, 0.061s GC time
val it = (): unit
