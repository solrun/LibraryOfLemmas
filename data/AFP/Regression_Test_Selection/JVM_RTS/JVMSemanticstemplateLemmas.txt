   [("JVMSemantics.start_state_nend", "start_state ?P ~: JVMendset",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)
             )
         )),
    ("JVMSemantics.JVMendset_final",
     "?\<sigma> : JVMendset ==> ALL P. JVMsmall P ?\<sigma> = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("JVMSemantics.JVMsmall_det",
     "JVMsmall ?P ?\<sigma> = {} |
      (EX \<sigma>'. JVMsmall ?P ?\<sigma> = {\<sigma>'})",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 2)),
           template_app (template_hole 1, t_empty))
         )),
    ("JVMSemantics.JVMsmall_prealloc_pres",
     "[| preallocated (fst (snd ?\<sigma>));
         ?\<sigma>' : JVMsmall ?P ?\<sigma> |]
      ==> preallocated (fst (snd ?\<sigma>'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)))
           )))]
