Loading theory "Draft.Semantics" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
locale Semantics
  fixes small :: "'prog => 'state => 'state set"
    and endset :: "'state set"
  assumes "Semantics small endset"
locale Semantics
  fixes small :: "'prog => 'state => 'state set"
    and endset :: "'state set"
  assumes "Semantics small endset"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
consts
  small_nstep :: "'prog => 'state => nat => 'state set"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Semantics"
### 0.089s elapsed time, 0.382s cpu time, 0.000s GC time
Loading theory "HOL-Library.Transitive_Closure_Table" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.527s cpu time, 0.045s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Proofs for inductive predicate(s) "rtrancl_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rtrancl_tab"
  Proving monotonicity ...
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.214s elapsed time, 0.868s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.327s elapsed time, 1.304s cpu time, 0.146s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Transitive_Closure_Table"
### 0.283s elapsed time, 1.116s cpu time, 0.101s GC time
Loading theory "JinjaDCI.Auxiliary" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel" via "JinjaDCI.Decl" via "JinjaDCI.Type")
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### Ignoring duplicate safe elimination (elim!)
### [| ?x # ?xs = map ?f ?ys;
###    EX z zs. ?ys = z # zs & ?x = ?f z & ?xs = map ?f zs ==> PROP ?W |]
### ==> PROP ?W
### theory "JinjaDCI.Auxiliary"
### 0.148s elapsed time, 0.582s cpu time, 0.081s GC time
Loading theory "JinjaDCI.Type" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel" via "JinjaDCI.Decl")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.009s elapsed time, 3.816s cpu time, 0.919s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.072s elapsed time, 3.915s cpu time, 0.818s GC time
Found termination order: "size <*mlex*> {}"
### theory "JinjaDCI.Type"
### 0.931s elapsed time, 3.279s cpu time, 0.819s GC time
Loading theory "JinjaDCI.Decl" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects" via "JinjaDCI.TypeRel")
Found termination order: "size <*mlex*> {}"
### theory "JinjaDCI.Decl"
### 0.061s elapsed time, 0.122s cpu time, 0.000s GC time
Loading theory "JinjaDCI.TypeRel" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "subcls1p"
  Proving monotonicity ...
consts
  supercls_lst :: "'m prog => char list list => bool"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "widen"
  Proving monotonicity ...
Proofs for inductive predicate(s) "Methods"
  Proving monotonicity ...
Proofs for inductive predicate(s) "Fields"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.981s elapsed time, 6.242s cpu time, 1.143s GC time
Loading theory "Draft.Templates" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.ExtrEqs")
### theory "JinjaDCI.TypeRel"
### 0.635s elapsed time, 1.389s cpu time, 0.215s GC time
Loading theory "JinjaDCI.Value" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState" via "JinjaDCI.Objects")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.077s elapsed time, 0.202s cpu time, 0.074s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.JVMSemanticsMoreTemplates")
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Addr"
consts
  the_Intg :: "val => int"
### No equation for constructor "Unit"
### No equation for constructor "Null"
### No equation for constructor "Bool"
### No equation for constructor "Intg"
consts
  the_Addr :: "val => nat"
consts
  default_val :: "ty => val"
### theory "JinjaDCI.Value"
### 0.552s elapsed time, 1.381s cpu time, 0.693s GC time
Loading theory "JinjaDCI.Objects" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions" via "JinjaDCI.JVMState")
consts
  typeof_h :: "heap => val => ty option"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.743s elapsed time, 1.779s cpu time, 0.732s GC time
Proofs for inductive predicate(s) "iprog"
  Proving monotonicity ...
### theory "JinjaDCI.Objects"
### 0.510s elapsed time, 0.739s cpu time, 0.039s GC time
Loading theory "JinjaDCI.Exceptions" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMExceptions")
Loading theory "JinjaDCI.JVMState" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr" via "JinjaDCI.JVMInstructions")
### theory "JinjaDCI.Exceptions"
### 0.140s elapsed time, 0.278s cpu time, 0.000s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "JinjaDCI.JVMState"
### 0.720s elapsed time, 0.905s cpu time, 0.058s GC time
Loading theory "JinjaDCI.JVMInstructions" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr")
### theory "JinjaDCI.JVMInstructions"
### 1.730s elapsed time, 2.463s cpu time, 1.026s GC time
Loading theory "JinjaDCI.JVMExceptions" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec" via "JinjaDCI.JVMExecInstr")
consts
  match_ex_table ::
    "'m prog => char list => nat => ex_table => (nat * nat) option"
Found termination order:
  "(%p. size_list (%p. size (snd (snd (snd (snd (snd p))))))
         (fst (snd (snd (snd p))))) <*mlex*>
   {}"
### theory "JinjaDCI.JVMExceptions"
### 0.707s elapsed time, 0.799s cpu time, 0.110s GC time
Loading theory "JinjaDCI.JVMExecInstr" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics" via "JinjaDCI.JVMExec")
Found termination order: "{}"
consts
  exec_instr ::
    "instr
     => jvm_prog
        => heap
           => val list
              => val list
                 => char list
                    => char list
                       => nat
                          => init_call_status
                             => frame list => sheap => jvm_state"
### theory "JinjaDCI.JVMExecInstr"
### 0.759s elapsed time, 0.810s cpu time, 0.050s GC time
Loading theory "JinjaDCI.JVMExec" (required by "Draft.JVMSemanticsMoreTemplates" via "Draft.JVMSemantics")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "exec_1p"
  Proving monotonicity ...
### theory "JinjaDCI.JVMExec"
### 1.598s elapsed time, 1.965s cpu time, 0.325s GC time
Loading theory "Draft.JVMSemantics" (required by "Draft.JVMSemanticsMoreTemplates")
Found termination order: "{}"
### theory "Draft.JVMSemantics"
### 0.280s elapsed time, 0.284s cpu time, 0.000s GC time
Loading theory "Draft.JVMSemanticsMoreTemplates"
val templateLemmas =
   [("JVMSemantics.start_state_nend", "start_state ?P ~: JVMendset",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)
             )
         )),
    ("JVMSemantics.JVMendset_final",
     "?\<sigma> : JVMendset ==> ALL P. JVMsmall P ?\<sigma> = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("JVMSemantics.JVMsmall_det",
     "JVMsmall ?P ?\<sigma> = {} |
      (EX \<sigma>'. JVMsmall ?P ?\<sigma> = {\<sigma>'})",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 2)),
           template_app (template_hole 1, t_empty))
         )),
    ("JVMSemantics.JVMsmall_prealloc_pres",
     "[| preallocated (fst (snd ?\<sigma>));
         ?\<sigma>' : JVMsmall ?P ?\<sigma> |]
      ==> preallocated (fst (snd ?\<sigma>'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)))
           )))]:
   (string * thm * template) list
### theory "Draft.JVMSemanticsMoreTemplates"
### 0.399s elapsed time, 0.569s cpu time, 0.082s GC time
val it = (): unit
