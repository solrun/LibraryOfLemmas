   [("ADS_Construction.hash_blindable_simps",
     "hash_blindable ?h (Blinded ?y) = ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("ADS_Construction.hash_blindable_simps",
     "hash_blindable ?h (Unblinded ?x) = Content (?h ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("ADS_Construction.in_set1_blindable\<^sub>m_iff",
     "(?x : set1_blindable\<^sub>m ?y) = (?y = Unblinded ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Unblinded ?x) (Blinded ?y') = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("ADS_Construction.hash_blindable_map",
     "hash_blindable ?f o map_blindable\<^sub>m ?g id =
      hash_blindable (?f o ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo ?z (Blinded ?x) = (?z = Blinded ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Blinded ?x') (Blinded ?y') =
      (?y' = ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 0, template_var 1))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Unblinded ?x) (Unblinded ?y) =
      ?bo ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("ADS_Construction.hash_tree_simps",
     "hash_tree ?h (Tree\<^sub>m ?x) =
      Tree\<^sub>h (hash_rt_F\<^sub>m ?h (hash_tree ?h) ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo (Blinded ?x) ?y =
      (hash_blindable ?h ?y = ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_var 1))),
    ("ADS_Construction.hash_map_blindable_simp",
     "hash_blindable ?f (map_blindable\<^sub>m ?f' id ?x) =
      hash_blindable (?f o ?f') ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Blinded ?x') (Unblinded ?y) =
      (Content (?h ?y) = ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 0, template_app (template_var 3, template_var 0)),
         template_var 1))),
    ("ADS_Construction.blindable\<^sub>m_map_compositionality",
     "map_blindable\<^sub>m ?f ?g o map_blindable\<^sub>m ?f' ?g' =
      map_blindable\<^sub>m (?f o ?f') (?g o ?g')",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo (Unblinded ?x) ?y =
      (EX y. ?y = Unblinded y & ?bo ?x y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("ADS_Construction.option_bind_comm",
     "?x >>= (%y. ?c >>= ?f y) = ?c >>= (%y. ?x >>= (%z. ?f z y))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("ADS_Construction.blinding_of_tree_simps",
     "blinding_of_tree ?h ?bo (Tree\<^sub>m ?t1.0) (Tree\<^sub>m ?t2.0) =
      blinding_of_blindable (map_prod ?h (map (hash_tree ?h)))
       (rel_prod ?bo (list_all2 (blinding_of_tree ?h ?bo))) ?t1.0 ?t2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2),
           template_app (template_hole 6, template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 2)))),
           template_var 1),
         template_var 0))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo ?z (Unblinded ?x) =
      ((EX x. ?z = Unblinded x & ?bo x ?x) |
       ?z = Blinded (Content (?h ?x)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_dunno)),
    ("ADS_Construction.set_rt_F\<^sub>m_eq",
     "{x. set1_blindable\<^sub>m x >>= fsts <= ?A &
          set1_blindable\<^sub>m x >>= snds >>= set <= ?B} =
      {x. set1_blindable\<^sub>m x
          <= {x. fsts x <= ?A & snds x <= {x. set x <= ?B}}}",
     template_equation
      (template_app (template_hole 14, t_empty),
       template_app (template_hole 14, t_empty)))]
