   [("ADS_Construction.is_none_parametric",
     "rel_fun (rel_option ?A) (=) Option.is_none Option.is_none",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.hash_blindable_simps",
     "hash_blindable ?h (Blinded ?y) = ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("ADS_Construction.hash_blindable'_parametric",
     "rel_fun (rel_blindable\<^sub>m ?A ?A) (rel_blindable\<^sub>h ?A)
       hash_blindable' hash_blindable'",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.hash_blindable_simps",
     "hash_blindable ?h (Unblinded ?x) = Content (?h ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("ADS_Construction.in_set1_blindable\<^sub>m_iff",
     "(?x : set1_blindable\<^sub>m ?y) = (?y = Unblinded ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Unblinded ?x) (Blinded ?y') = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("ADS_Construction.blinding_of_list_mono_pred",
     "?R <= ?R' ==> list_all2 ?R <= list_all2 ?R'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ADS_Construction.hash_blindable_map",
     "hash_blindable ?f o map_blindable\<^sub>m ?g id =
      hash_blindable (?f o ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo ?z (Blinded ?x) = (?z = Blinded ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Blinded ?x') (Blinded ?y') =
      (?y' = ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 0, template_var 1))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Unblinded ?x) (Unblinded ?y) =
      ?bo ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("ADS_Construction.hash_tree_simps",
     "hash_tree ?h (Tree\<^sub>m ?x) =
      Tree\<^sub>h (hash_rt_F\<^sub>m ?h (hash_tree ?h) ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("ADS_Construction.hash_blindable_parametric",
     "rel_fun (rel_fun ?A1.0 ?A2.0)
       (rel_fun (rel_blindable\<^sub>m ?A1.0 ?A2.0)
         (rel_blindable\<^sub>h ?A2.0))
       hash_blindable hash_blindable",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.hash_tree_parametric",
     "rel_fun (rel_fun ?A1.0 ?A2.0)
       (rel_fun (rel_rose_tree\<^sub>m ?A1.0 ?A2.0)
         (rel_rose_tree\<^sub>h ?A2.0))
       hash_tree hash_tree",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo (Blinded ?x) ?y =
      (hash_blindable ?h ?y = ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_var 1))),
    ("ADS_Construction.hash_map_blindable_simp",
     "hash_blindable ?f (map_blindable\<^sub>m ?f' id ?x) =
      hash_blindable (?f o ?f') ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("ADS_Construction.merge_discrete_parametric",
     "bi_unique ?A ==>
      rel_fun ?A (rel_fun ?A (rel_option ?A)) merge_discrete
       merge_discrete",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_hole 2, template_var 0))),
               template_hole 1),
             template_hole 0)
           ))),
    ("ADS_Construction.blinding_of_blindable_mono",
     "?bo <= ?bo' ==>
      blinding_of_blindable ?h ?bo <= blinding_of_blindable ?h ?bo'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("ADS_Construction.blinding_of_tree_mono",
     "?bo <= ?bo' ==> blinding_of_tree ?h ?bo <= blinding_of_tree ?h ?bo'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("ADS_Construction.blinding_of_fun_mono",
     "?R <= ?Ra ==> rel_fun (=) ?R <= rel_fun (=) ?Ra",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("ADS_Construction.blinding_of_list",
     "blinding_of_on UNIV ?h ?bo ==>
      blinding_of_on UNIV (map ?h) (list_all2 ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.blinding_of_blindable_simps2",
     "blinding_of_blindable ?h ?bo (Blinded ?x') (Unblinded ?y) =
      (Content (?h ?y) = ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 0, template_app (template_var 3, template_var 0)),
         template_var 1))),
    ("ADS_Construction.blinding_of_blindable",
     "blinding_of_on UNIV ?h ?bo ==>
      blinding_of_on UNIV (hash_blindable ?h)
       (blinding_of_blindable ?h ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_tree",
     "blinding_of_on UNIV ?h ?bo ==>
      blinding_of_on UNIV (hash_tree ?h) (blinding_of_tree ?h ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_fun",
     "blinding_of_on UNIV ?rh ?bo ==>
      blinding_of_on UNIV ((o) ?rh) (rel_fun (=) ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("ADS_Construction.merkle_list",
     "merkle_interface ?h ?bo ?m ==>
      merkle_interface (map ?h) (list_all2 ?bo) (merge_list ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.merkle_fun",
     "merkle_interface ?rh ?bo ?m ==>
      merkle_interface ((o) ?rh) (rel_fun (=) ?bo) (merge_fun ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.blindable\<^sub>m_map_compositionality",
     "map_blindable\<^sub>m ?f ?g o map_blindable\<^sub>m ?f' ?g' =
      map_blindable\<^sub>m (?f o ?f') (?g o ?g')",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("ADS_Construction.merkle_blindable",
     "merkle_interface ?h ?bo ?m ==>
      merkle_interface (hash_blindable ?h) (blinding_of_blindable ?h ?bo)
       (merge_blindable ?h ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.merkle_tree",
     "merkle_interface ?h ?bo ?m ==>
      merkle_interface (hash_tree ?h) (blinding_of_tree ?h ?bo)
       (merge_tree ?h ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.merge_list",
     "merge_on UNIV ?h ?bo ?m ==>
      merge_on UNIV (map ?h) (list_all2 ?bo) (merge_list ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.merge_fun",
     "merge_on UNIV ?rh ?bo ?m ==>
      merge_on UNIV ((o) ?rh) (rel_fun (=) ?bo) (merge_fun ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 2)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo (Unblinded ?x) ?y =
      (EX y. ?y = Unblinded y & ?bo ?x y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("ADS_Construction.blinding_of_on_list",
     "blinding_of_on ?A ?h ?bo ==>
      blinding_of_on {x. set x <= ?A} (map ?h) (list_all2 ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.merge_tree",
     "merge_on UNIV ?h ?bo ?m ==>
      merge_on UNIV (hash_tree ?h) (blinding_of_tree ?h ?bo)
       (merge_tree ?h ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.merge_blindable",
     "merge_on UNIV ?h ?bo ?m ==>
      merge_on UNIV (hash_blindable ?h) (blinding_of_blindable ?h ?bo)
       (merge_blindable ?h ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_list_hash",
     "?bo <= vimage2p ?h ?h (=) ==>
      list_all2 ?bo <= vimage2p (map ?h) (map ?h) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.blinding_of_sum_mono",
     "[| ?R1.0 <= ?R1a; ?R2.0 <= ?R2a |]
      ==> rel_sum ?R1.0 ?R2.0 <= rel_sum ?R1a ?R2a",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("ADS_Construction.blinding_of_prod_mono",
     "[| ?R1.0 <= ?R1a; ?R2.0 <= ?R2a |]
      ==> rel_prod ?R1.0 ?R2.0 <= rel_prod ?R1a ?R2a",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("ADS_Construction.blinding_of_on_blindable",
     "blinding_of_on ?A ?h ?bo ==>
      blinding_of_on {x. set1_blindable\<^sub>m x <= ?A} (hash_blindable ?h)
       (blinding_of_blindable ?h ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_on_tree",
     "blinding_of_on ?A ?h ?bo ==>
      blinding_of_on {x. set1_rose_tree\<^sub>m x <= ?A} (hash_tree ?h)
       (blinding_of_tree ?h ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_blindable_hash",
     "?bo <= vimage2p ?h ?h (=) ==>
      blinding_of_blindable ?h ?bo
      <= vimage2p (hash_blindable ?h) (hash_blindable ?h) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.blinding_of_tree_hash",
     "?bo <= vimage2p ?h ?h (=) ==>
      blinding_of_tree ?h ?bo
      <= vimage2p (hash_tree ?h) (hash_tree ?h) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.blinding_of_fun_hash",
     "?bo <= vimage2p ?rh ?rh (=) ==>
      rel_fun (=) ?bo <= vimage2p ((o) ?rh) ((o) ?rh) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 7, template_var 0),
              template_var 0),
            template_hole 6))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.option_bind_comm",
     "?x >>= (%y. ?c >>= ?f y) = ?c >>= (%y. ?x >>= (%z. ?f z y))",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("ADS_Construction.blinding_of_on_fun",
     "blinding_of_on ?A ?rh ?bo ==>
      blinding_of_on {x. range x <= ?A} ((o) ?rh) (rel_fun (=) ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("ADS_Construction.merge_on_list",
     "merge_on ?A ?h ?bo ?m ==>
      merge_on {x. set x <= ?A} (map ?h) (list_all2 ?bo) (merge_list ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.blinding_of_sum",
     "[| blinding_of_on UNIV ?rha ?boa; blinding_of_on UNIV ?rhb ?bob |]
      ==> blinding_of_on UNIV (map_sum ?rha ?rhb) (rel_sum ?boa ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_prod",
     "[| blinding_of_on UNIV ?rha ?boa; blinding_of_on UNIV ?rhb ?bob |]
      ==> blinding_of_on UNIV (map_prod ?rha ?rhb) (rel_prod ?boa ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.merge_fun_parametric",
     "rel_fun (rel_fun ?A (rel_fun ?B (rel_option ?C)))
       (rel_fun (rel_fun (=) ?A)
         (rel_fun (rel_fun (=) ?B) (rel_option (rel_fun (=) ?C))))
       merge_fun merge_fun",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_app (template_hole 7, template_var 0)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 1)),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 0))))),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.blinding_of_tree_simps",
     "blinding_of_tree ?h ?bo (Tree\<^sub>m ?t1.0) (Tree\<^sub>m ?t2.0) =
      blinding_of_blindable (map_prod ?h (map (hash_tree ?h)))
       (rel_prod ?bo (list_all2 (blinding_of_tree ?h ?bo))) ?t1.0 ?t2.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_var 2),
           template_app (template_hole 6, template_var 1)),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 3)))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 2)))),
           template_var 1),
         template_var 0))),
    ("ADS_Construction.merge_list_parametric",
     "bi_unique ?A ==>
      rel_fun (rel_fun ?A (rel_fun ?A (rel_option ?A)))
       (rel_fun (list_all2 ?A)
         (rel_fun (list_all2 ?A) (rel_option (list_all2 ?A))))
       merge_list merge_list",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_app (template_hole 6, template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 4, template_var 0)),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 4, template_var 0))))),
               template_hole 1),
             template_hole 0)
           ))),
    ("ADS_Construction.merge_on_tree",
     "merge_on ?A ?h ?bo ?m ==>
      merge_on {x. set1_rose_tree\<^sub>m x <= ?A} (hash_tree ?h)
       (blinding_of_tree ?h ?bo) (merge_tree ?h ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.merge_on_blindable",
     "merge_on ?A ?h ?bo ?m ==>
      merge_on {x. set1_blindable\<^sub>m x <= ?A} (hash_blindable ?h)
       (blinding_of_blindable ?h ?bo) (merge_blindable ?h ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ADS_Construction.merge_on_fun",
     "merge_on ?A ?rh ?bo ?m ==>
      merge_on {x. range x <= ?A} ((o) ?rh) (rel_fun (=) ?bo)
       (merge_fun ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty)),
                 template_app (template_hole 3, template_var 2)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ADS_Construction.blinding_of_list_mono",
     "(!!x y. ?bo x y --> ?bo' x y) ==>
      list_all2 ?bo ?x ?y --> list_all2 ?bo' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("ADS_Construction.merkle_sum",
     "[| merkle_interface ?rha ?boa ?ma; merkle_interface ?rhb ?bob ?mb |]
      ==> merkle_interface (map_sum ?rha ?rhb) (rel_sum ?boa ?bob)
           (merge_sum ?ma ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("ADS_Construction.merkle_product",
     "[| merkle_interface ?rha ?boa ?ma; merkle_interface ?rhb ?bob ?mb |]
      ==> merkle_interface (map_prod ?rha ?rhb) (rel_prod ?boa ?bob)
           (merge_prod ?ma ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_blindable_simps",
     "blinding_of_blindable ?h ?bo ?z (Unblinded ?x) =
      ((EX x. ?z = Unblinded x & ?bo x ?x) |
       ?z = Blinded (Content (?h ?x)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_var 3, template_var 0)))))
           ))),
    ("ADS_Construction.hash_rt_F\<^sub>m_parametric",
     "rel_fun (rel_fun ?A1.0 ?A3.0)
       (rel_fun (rel_fun ?A2.0 ?A4.0)
         (rel_fun
           (rel_blindable\<^sub>m (rel_prod ?A1.0 (list_all2 ?A2.0))
             (rel_prod ?A3.0 (list_all2 ?A4.0)))
           (rel_blindable\<^sub>h (rel_prod ?A3.0 (list_all2 ?A4.0)))))
       hash_rt_F\<^sub>m hash_rt_F\<^sub>m",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_var 3),
                           template_app (template_hole 5, template_var 1))),
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_app (template_hole 3, template_var 0)))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_app (template_hole 3, template_var 0)))))),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.blinding_of_blindable_parametric",
     "bi_unique ?A3.0 ==>
      rel_fun (rel_fun ?A1.0 ?A3.0)
       (rel_fun (rel_fun ?A2.0 (rel_fun ?A1.0 (=)))
         (rel_fun (rel_blindable\<^sub>m ?A2.0 ?A3.0)
           (rel_fun (rel_blindable\<^sub>m ?A1.0 ?A3.0) (=))))
       blinding_of_blindable blinding_of_blindable",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_hole 5))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 3, template_var 1),
                           template_var 2)),
                       template_hole 5)))),
               template_hole 1),
             template_hole 0)
           ))),
    ("ADS_Construction.merge_sum",
     "[| merge_on UNIV ?rha ?boa ?ma; merge_on UNIV ?rhb ?bob ?mb |]
      ==> merge_on UNIV (map_sum ?rha ?rhb) (rel_sum ?boa ?bob)
           (merge_sum ?ma ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("ADS_Construction.merge_prod",
     "[| merge_on UNIV ?rha ?boa ?ma; merge_on UNIV ?rhb ?bob ?mb |]
      ==> merge_on UNIV (map_prod ?rha ?rhb) (rel_prod ?boa ?bob)
           (merge_prod ?ma ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("ADS_Construction.merge_sum_parametric",
     "rel_fun (rel_fun ?A1.0 (rel_fun ?A2.0 (rel_option ?A3.0)))
       (rel_fun (rel_fun ?A4.0 (rel_fun ?A5.0 (rel_option ?A6.0)))
         (rel_fun (rel_sum ?A1.0 ?A4.0)
           (rel_fun (rel_sum ?A2.0 ?A5.0)
             (rel_option (rel_sum ?A3.0 ?A6.0)))))
       merge_sum merge_sum",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 5),
                   template_app
                    (template_app (template_hole 11, template_var 4),
                     template_app (template_hole 10, template_var 3)))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_app (template_hole 6, template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 1)),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 0)))))),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.merge_prod_parametric",
     "rel_fun (rel_fun ?A1.0 (rel_fun ?A2.0 (rel_option ?A3.0)))
       (rel_fun (rel_fun ?A4.0 (rel_fun ?A5.0 (rel_option ?A6.0)))
         (rel_fun (rel_prod ?A1.0 ?A4.0)
           (rel_fun (rel_prod ?A2.0 ?A5.0)
             (rel_option (rel_prod ?A3.0 ?A6.0)))))
       merge_prod merge_prod",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 5),
                   template_app
                    (template_app (template_hole 11, template_var 4),
                     template_app (template_hole 10, template_var 3)))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 2),
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_app (template_hole 6, template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 1)),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 0)))))),
             template_hole 1),
           template_hole 0)
         )),
    ("ADS_Construction.blinding_of_sum_hash",
     "[| ?boa <= vimage2p ?rha ?rha (=); ?bob <= vimage2p ?rhb ?rhb (=) |]
      ==> rel_sum ?boa ?bob
          <= vimage2p (map_sum ?rha ?rhb) (map_sum ?rha ?rhb) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_app (template_hole 9, template_var 2),
              template_var 2),
            template_hole 8)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.blinding_of_prod_hash",
     "[| ?boa <= vimage2p ?rha ?rha (=); ?bob <= vimage2p ?rhb ?rhb (=) |]
      ==> rel_prod ?boa ?bob
          <= vimage2p (map_prod ?rha ?rhb) (map_prod ?rha ?rhb) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_app (template_hole 9, template_var 2),
              template_var 2),
            template_hole 8)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.merge_blindable_parametric",
     "bi_unique ?A1.0 ==>
      rel_fun (rel_fun ?A2.0 ?A1.0)
       (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (rel_option ?A2.0)))
         (rel_fun (rel_blindable\<^sub>m ?A2.0 ?A1.0)
           (rel_fun (rel_blindable\<^sub>m ?A2.0 ?A1.0)
             (rel_option (rel_blindable\<^sub>m ?A2.0 ?A1.0)))))
       merge_blindable merge_blindable",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 0),
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_app (template_hole 6, template_var 0)))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 1)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 1)))))),
               template_hole 1),
             template_hole 0)
           ))),
    ("ADS_Construction.blinding_of_rt_F\<^sub>m_mono",
     "[| ?boa <= ?boa'; ?bob <= ?bob' |]
      ==> blinding_of_blindable (map_prod ?ha (map ?hb))
           (rel_prod ?boa (list_all2 ?bob))
          <= blinding_of_blindable (map_prod ?ha (map ?hb))
              (rel_prod ?boa' (list_all2 ?bob'))",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app (template_hole 0, template_var 3))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app (template_hole 0, template_var 2)))))),
    ("ADS_Construction.blinding_of_on_sum",
     "[| blinding_of_on ?A ?rha ?boa; blinding_of_on ?B ?rhb ?bob |]
      ==> blinding_of_on {x. setl x <= ?A & setr x <= ?B}
           (map_sum ?rha ?rhb) (rel_sum ?boa ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("ADS_Construction.blinding_of_on_prod",
     "[| blinding_of_on ?A ?rha ?boa; blinding_of_on ?B ?rhb ?bob |]
      ==> blinding_of_on {x. fsts x <= ?A & snds x <= ?B}
           (map_prod ?rha ?rhb) (rel_prod ?boa ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("ADS_Construction.merge_list_cong",
     "(!!a b. [| a : set ?x; b : set ?y |] ==> ?m a b = ?m' a b) ==>
      merge_list ?m ?x ?y = merge_list ?m' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2)))),
    ("ADS_Construction.blinding_of_rt_F\<^sub>m_hash",
     "[| ?boa <= vimage2p ?ha ?ha (=); ?bob <= vimage2p ?hb ?hb (=) |]
      ==> blinding_of_blindable (map_prod ?ha (map ?hb))
           (rel_prod ?boa (list_all2 ?bob))
          <= vimage2p (hash_rt_F\<^sub>m ?ha ?hb)
              (hash_rt_F\<^sub>m ?ha ?hb) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_app (template_hole 13, template_var 2),
              template_var 2),
            template_hole 12)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 10, template_var 0),
              template_var 0),
            template_hole 9))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("ADS_Construction.merge_on_sum",
     "[| merge_on ?A ?rha ?boa ?ma; merge_on ?B ?rhb ?bob ?mb |]
      ==> merge_on {x. setl x <= ?A & setr x <= ?B} (map_sum ?rha ?rhb)
           (rel_sum ?boa ?bob) (merge_sum ?ma ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, t_empty)),
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("ADS_Construction.merge_on_prod",
     "[| merge_on ?A ?rha ?boa ?ma; merge_on ?B ?rhb ?bob ?mb |]
      ==> merge_on {x. fsts x <= ?A & snds x <= ?B} (map_prod ?rha ?rhb)
           (rel_prod ?boa ?bob) (merge_prod ?ma ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, t_empty)),
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("ADS_Construction.merge_blindable_cong",
     "(!!a b.
          [| a : set1_blindable\<^sub>m ?x; b : set1_blindable\<^sub>m ?y |]
          ==> ?m a b = ?m' a b) ==>
      merge_blindable ?h ?m ?x ?y = merge_blindable ?h ?m' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 4),
           template_var 3)))),
    ("ADS_Construction.merge_tree_cong",
     "(!!a b.
          [| a : set1_rose_tree\<^sub>m ?x; b : set1_rose_tree\<^sub>m ?y |]
          ==> ?m a b = ?m' a b) ==>
      merge_tree ?h ?m ?x ?y = merge_tree ?h ?m' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 4),
           template_var 3)))),
    ("ADS_Construction.merge_fun_cong",
     "(!!a b. [| a : range ?f; b : range ?g |] ==> ?m a b = ?m' a b) ==>
      merge_fun ?m ?f ?g = merge_fun ?m' ?f ?g",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 2)))),
    ("ADS_Construction.set_rt_F\<^sub>m_eq",
     "{x. set1_blindable\<^sub>m x >>= fsts <= ?A &
          set1_blindable\<^sub>m x >>= snds >>= set <= ?B} =
      {x. set1_blindable\<^sub>m x
          <= {x. fsts x <= ?A & snds x <= {x. set x <= ?B}}}",
     template_equation
      (template_app (template_hole 14, t_empty),
       template_app (template_hole 14, t_empty))),
    ("ADS_Construction.blinding_of_rt_F\<^sub>m_mono_inductive",
     "[| !!x y. ?boa x y --> ?boa' x y; !!x y. ?bob x y --> ?bob' x y |]
      ==> blinding_of_blindable (map_prod ?ha (map ?hb))
           (rel_prod ?boa (list_all2 ?bob)) ?x ?y -->
          blinding_of_blindable (map_prod ?ha (map ?hb))
           (rel_prod ?boa' (list_all2 ?bob')) ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app (template_hole 2, template_var 2))),
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_app (template_hole 0, template_var 5))),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app (template_hole 2, template_var 2))),
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_app (template_hole 0, template_var 4))),
                 template_var 1),
               template_var 0))
           ))),
    ("ADS_Construction.merge_prod_cong",
     "[| !!a b. [| a : fsts ?p1.0; b : fsts ?p2.0 |] ==> ?ma a b = ?ma' a b;
         !!a b.
            [| a : snds ?p1.0; b : snds ?p2.0 |] ==> ?mb a b = ?mb' a b |]
      ==> merge_prod ?ma ?mb ?p1.0 ?p2.0 =
          merge_prod ?ma' ?mb' ?p1.0 ?p2.0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 5),
           template_var 4)))),
    ("ADS_Construction.merge_rt_F\<^sub>m_parametric",
     "[| bi_unique ?A3.0; bi_unique ?A4.0; bi_unique ?A2.0 |]
      ==> rel_fun (rel_fun ?A1.0 ?A3.0)
           (rel_fun (rel_fun ?A1.0 (rel_fun ?A1.0 (rel_option ?A1.0)))
             (rel_fun (rel_fun ?A2.0 ?A4.0)
               (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (rel_option ?A2.0)))
                 (rel_fun
                   (rel_blindable\<^sub>m (rel_prod ?A1.0 (list_all2 ?A2.0))
                     (rel_prod ?A3.0 (list_all2 ?A4.0)))
                   (rel_fun
                     (rel_blindable\<^sub>m
                       (rel_prod ?A1.0 (list_all2 ?A2.0))
                       (rel_prod ?A3.0 (list_all2 ?A4.0)))
                     (rel_option
                       (rel_blindable\<^sub>m
                         (rel_prod ?A1.0 (list_all2 ?A2.0))
                         (rel_prod ?A3.0 (list_all2 ?A4.0)))))))))
           merge_rt_F\<^sub>m merge_rt_F\<^sub>m",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 3)),
        template_predicate
         (template_app (template_hole 23, template_var 2)),
        template_predicate
         (template_app (template_hole 22, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app (template_hole 20, template_var 0),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app (template_hole 18, template_var 0),
                       template_app
                        (template_app (template_hole 17, template_var 0),
                         template_app (template_hole 16, template_var 0)))),
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app (template_hole 14, template_var 1),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app (template_hole 12, template_var 1),
                           template_app
                            (template_app
                              (template_hole 11, template_var 1),
                             template_app
                              (template_hole 10, template_var 1)))),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_app
                                  (template_hole 7, template_var 0),
                                 template_app
                                  (template_hole 6, template_var 1))),
                             template_app
                              (template_app
                                (template_hole 5, template_var 3),
                               template_app
                                (template_hole 4, template_var 2)))),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 7, template_var 0),
                                   template_app
                                    (template_hole 6, template_var 1))),
                               template_app
                                (template_app
                                  (template_hole 5, template_var 3),
                                 template_app
                                  (template_hole 4, template_var 2)))),
                           template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 7, template_var 0),
                                   template_app
                                    (template_hole 6, template_var 1))),
                               template_app
                                (template_app
                                  (template_hole 5, template_var 3),
                                 template_app
                                  (template_hole 4,
                                   template_var 2)))))))))),
               template_hole 1),
             template_hole 0)
           ))),
    ("ADS_Construction.merge_sum_cong",
     "[| ?x = ?x'; ?y = ?y';
         !!xl yl. [| ?x = Inl xl; ?y = Inl yl |] ==> ?ma xl yl = ?ma' xl yl;
         !!xr yr.
            [| ?x = Inr xr; ?y = Inr yr |] ==> ?mb xr yr = ?mb' xr yr |]
      ==> merge_sum ?ma ?mb ?x ?y = merge_sum ?ma' ?mb' ?x' ?y'",
     template_implication
      ([template_equation (template_var 7, template_var 6),
        template_equation (template_var 5, template_var 4),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 7),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 6),
           template_var 4)))),
    ("ADS_Construction.merge_rt_F\<^sub>m_cong",
     "[| !!a b.
            [| a : set1_blindable\<^sub>m ?x >>= fsts;
               b : set1_blindable\<^sub>m ?y >>= fsts |]
            ==> ?ma a b = ?ma' a b;
         !!a b.
            [| a : set1_blindable\<^sub>m ?x >>= snds >>= set;
               b : set1_blindable\<^sub>m ?y >>= snds >>= set |]
            ==> ?mm a b = ?mm' a b |]
      ==> merge_rt_F\<^sub>m ?ha ?ma ?hm ?mm ?x ?y =
          merge_rt_F\<^sub>m ?ha ?ma' ?hm ?mm' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 5),
                 template_var 0),
               template_var 3),
             template_var 7),
           template_var 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 7),
           template_var 6))))]
