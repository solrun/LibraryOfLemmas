   [("Canton_Transaction_Tree.view_of_zipper\<^sub>m_Nil",
     "view_of_zipper\<^sub>m ([], ?t) = ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Canton_Transaction_Tree.hash_blind_view",
     "hash_view (blind_view ?view) = hash_view (embed_view ?view)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Canton_Transaction_Tree.hash_blind_transaction",
     "hash_transaction (blind_transaction ?transaction) =
      hash_transaction (embed_transaction ?transaction)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Canton_Transaction_Tree.transaction_projection_for_same_hash",
     "hash_transaction (transaction_projection_for ?participant ?t) =
      hash_transaction (embed_transaction ?t)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Canton_Transaction_Tree.hash_view_simps",
     "hash_view (View\<^sub>m ?x) =
      View\<^sub>h
       (hash_blindable
         (map_prod (map_prod (hash_blindable id) (hash_blindable id))
           (map hash_view))
         ?x)",
     template_equation
      (template_app
        (template_hole 10, template_app (template_hole 9, template_var 0)),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)),
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_hole 10))),
           template_var 0)))),
    ("Canton_Transaction_Tree.hash_transaction_simps",
     "hash_transaction (Transaction\<^sub>m ?x) =
      Transaction\<^sub>h
       (hash_blindable
         (map_prod (map_prod (hash_blindable id) (hash_blindable id))
           (map hash_view))
         ?x)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)),
                   template_app (template_hole 3, template_hole 2))),
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Canton_Transaction_Tree.embed_view_simps",
     "embed_view (View ?vm ?vd ?vs) =
      View\<^sub>m
       (Unblinded ((Unblinded ?vm, Unblinded ?vd), map embed_view ?vs))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_app (template_hole 0, template_hole 8),
               template_var 0)))))),
    ("Canton_Transaction_Tree.embed_transaction_simps",
     "embed_transaction (Transaction ?cm ?pm ?views) =
      Transaction\<^sub>m
       (Unblinded ((Unblinded ?cm, Unblinded ?pm), map embed_view ?views))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Canton_Transaction_Tree.merge_view_simps",
     "merge_view (View\<^sub>m ?x) (View\<^sub>m ?y) =
      map_option View\<^sub>m
       (merge_rt_F\<^sub>m
         (map_prod (hash_blindable id) (hash_blindable id))
         (merge_prod (merge_blindable id merge_discrete)
           (merge_blindable id merge_discrete))
         hash_view merge_view ?x ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app (template_hole 13, template_var 1)),
         template_app (template_hole 13, template_var 0)),
       template_app
        (template_app (template_hole 12, template_hole 13),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 9, template_hole 8)),
                       template_app (template_hole 7, template_hole 6))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 8),
                         template_hole 3)),
                     template_app
                      (template_app (template_hole 2, template_hole 6),
                       template_hole 1))),
                 template_hole 0),
               template_hole 14),
             template_var 1),
           template_var 0)))),
    ("Canton_Transaction_Tree.blinding_of_transaction_iff",
     "blinding_of_transaction (Transaction\<^sub>m ?xa)
       (Transaction\<^sub>m ?x) =
      blinding_of_blindable
       (map_prod (map_prod (hash_blindable id) (hash_blindable id))
         (map hash_view))
       (rel_prod
         (rel_prod (blinding_of_blindable id (=))
           (blinding_of_blindable id (=)))
         (list_all2 blinding_of_view))
       ?xa ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 1)),
              template_app (template_hole 17, template_var 0))
            )],
       template_dunno)),
    ("Canton_Transaction_Tree.blinding_of_view_iff",
     "blinding_of_view (View\<^sub>m ?x) (View\<^sub>m ?y) =
      blinding_of_blindable
       (map_prod (map_prod (hash_blindable id) (hash_blindable id))
         (map hash_view))
       (rel_prod
         (rel_prod (blinding_of_blindable id (=))
           (blinding_of_blindable id (=)))
         (list_all2 blinding_of_view))
       ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 1)),
              template_app (template_hole 16, template_var 0))
            )],
       template_dunno)),
    ("Canton_Transaction_Tree.merge_transaction_simps",
     "merge_transaction (Transaction\<^sub>m ?xa) (Transaction\<^sub>m ?x) =
      map_option Transaction\<^sub>m
       (merge_blindable
         (map_prod (map_prod (hash_blindable id) (hash_blindable id))
           (map hash_view))
         (merge_prod
           (merge_prod (merge_blindable id merge_discrete)
             (merge_blindable id merge_discrete))
           (merge_list merge_view))
         ?xa ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app (template_hole 18, template_var 1)),
         template_app (template_hole 18, template_var 0)),
       template_app
        (template_app (template_hole 17, template_hole 18),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 13, template_hole 12)),
                       template_app (template_hole 11, template_hole 10))),
                   template_app (template_hole 9, template_hole 8))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_hole 12),
                         template_hole 4)),
                     template_app
                      (template_app (template_hole 3, template_hole 10),
                       template_hole 2))),
                 template_app (template_hole 1, template_hole 0))),
             template_var 1),
           template_var 0))))]
