Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.Merkle_Interface" via "HOL-Library.Monad_Syntax")
Loading theory "HOL-Library.Conditional_Parametricity" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.Merkle_Interface")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.113s elapsed time, 0.480s cpu time, 0.000s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.Merkle_Interface")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.152s elapsed time, 0.624s cpu time, 0.033s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Library.Monad_Syntax"
### 0.042s elapsed time, 0.156s cpu time, 0.033s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
signature CONDITIONAL_PARAMETRICITY =
  sig
    exception WARNING of string
    val default_settings: settings
    val get_parametricity_theorems: Proof.context -> thm list
    val mk_cond_goal: Proof.context -> thm -> term * thm
    val mk_goal: Proof.context -> term -> term
    val mk_param_goal_from_eq_def: Proof.context -> thm -> term
    val parametric_constant:
       settings ->
         Attrib.binding * thm -> Proof.context -> thm * Proof.context
    val prove_find_goal_cond:
       settings -> Proof.context -> thm list -> thm option -> term -> thm
    val prove_goal: settings -> Proof.context -> thm option -> term -> thm
    val quiet_settings: settings
    type settings =
       {suppress_print_theorem: bool,
        suppress_warnings: bool,
        use_equality_heuristic: bool, warnings_as_errors: bool}
    val step_tac: settings -> Proof.context -> thm list -> int -> tactic
  end
structure Conditional_Parametricity: CONDITIONAL_PARAMETRICITY
### theory "HOL-Library.Conditional_Parametricity"
### 0.377s elapsed time, 1.505s cpu time, 0.110s GC time
Loading theory "Draft.Merkle_Interface" (required by "Draft.Merkle_InterfaceMoreTemplates")
### theory "HOL-Library.Nat_Bijection"
### 0.380s elapsed time, 1.516s cpu time, 0.110s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.235s elapsed time, 0.926s cpu time, 0.078s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs")
locale merkle_interface
  fixes h :: "'a\<^sub>m => 'a\<^sub>h"
    and bo :: "'a\<^sub>m => 'a\<^sub>m => bool"
    and m :: "'a\<^sub>m => 'a\<^sub>m => 'a\<^sub>m option"
  assumes "merkle_interface h bo m"
locale blinding_respects_hashes
  fixes h :: "'a\<^sub>m => 'a\<^sub>h"
    and bo :: "'a\<^sub>m => 'a\<^sub>m => bool"
  assumes "blinding_respects_hashes h bo"
locale blinding_of_on
  fixes A :: "'a\<^sub>m set"
    and h :: "'a\<^sub>m => 'a\<^sub>h"
    and bo :: "'a\<^sub>m => 'a\<^sub>m => bool"
  assumes "blinding_of_on A h bo"
locale merge_on
  fixes A :: "'a\<^sub>m set"
    and h :: "'a\<^sub>m => 'a\<^sub>h"
    and bo :: "'a\<^sub>m => 'a\<^sub>m => bool"
    and m :: "'a\<^sub>m => 'a\<^sub>m => 'a\<^sub>m option"
  assumes "merge_on A h bo m"
theorem
  le_fun_parametric:
    [| (?A1.0 ===> ?A3.0 ===> (=)) (<=) (<=); bi_total ?A2.0 |]
    ==> ((?A2.0 ===> ?A1.0) ===> (?A2.0 ===> ?A3.0) ===> (=)) (<=) (<=)
theorem
  vimage2p_parametric:
    ((?A1.0 ===> ?A3.0) ===>
     (?A2.0 ===> ?A4.0) ===>
     (?A3.0 ===> ?A4.0 ===> ?A5.0) ===> ?A1.0 ===> ?A2.0 ===> ?A5.0)
     vimage2p vimage2p
theorem
  blinding_respects_hashes_parametric_aux:
    [| (?A1.0 ===> (?A2.0 ===> ?A2.0 ===> (=)) ===> ?A4.0) (<=) (<=);
       bi_unique ?A3.0 |]
    ==> ((?A2.0 ===> ?A3.0) ===> ?A1.0 ===> ?A4.0) blinding_respects_hashes
         blinding_respects_hashes
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
theorem
  blinding_of_on_axioms_parametric:
    [| bi_unique ?A; bi_total ?A |]
    ==> (rel_set ?A ===> (?A ===> ?A ===> (=)) ===> (=))
         blinding_of_on_axioms blinding_of_on_axioms
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
theorem
  blinding_of_on_parametric:
    [| bi_total ?A1.0; bi_unique ?A2.0; bi_unique ?A1.0 |]
    ==> (rel_set ?A1.0 ===>
         (?A1.0 ===> ?A2.0) ===> (?A1.0 ===> ?A1.0 ===> (=)) ===> (=))
         blinding_of_on blinding_of_on
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
theorem
  antisymp_parametric:
    [| bi_unique ?A; bi_total ?A |]
    ==> ((?A ===> ?A ===> (=)) ===> (=)) antisymp antisymp
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
theorem
  transp_parametric:
    bi_total ?A ==> ((?A ===> ?A ===> (=)) ===> (=)) transp transp
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
theorem
  merge_on_axioms_parametric:
    [| bi_unique ?A2.0; bi_total ?A2.0; bi_unique ?A1.0 |]
    ==> (rel_set ?A2.0 ===>
         (?A2.0 ===> ?A1.0) ===>
         (?A2.0 ===> ?A2.0 ===> (=)) ===>
         (?A2.0 ===> ?A2.0 ===> rel_option ?A2.0) ===> (=))
         merge_on_axioms merge_on_axioms
### theory "HOL-Library.BigO"
### 1.227s elapsed time, 4.680s cpu time, 0.915s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.296s elapsed time, 4.898s cpu time, 0.915s GC time
theorem
  merge_on_parametric:
    [| bi_unique ?A2.0; bi_total ?A1.0; bi_unique ?A1.0 |]
    ==> (rel_set ?A1.0 ===>
         (?A1.0 ===> ?A2.0) ===>
         (?A1.0 ===> ?A1.0 ===> (=)) ===>
         (?A1.0 ===> ?A1.0 ===> rel_option ?A1.0) ===> (=))
         merge_on merge_on
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
theorem
  merkle_interface_parametric:
    [| bi_total ?A2.0; bi_unique ?A2.0; bi_unique ?A1.0 |]
    ==> ((?A2.0 ===> ?A1.0) ===>
         (?A2.0 ===> ?A2.0 ===> (=)) ===>
         (?A2.0 ===> ?A2.0 ===> rel_option ?A2.0) ===> (=))
         merkle_interface merkle_interface
### theory "Draft.Merkle_Interface"
### 1.672s elapsed time, 5.711s cpu time, 0.989s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.174s elapsed time, 6.906s cpu time, 1.116s GC time
Loading theory "Draft.Templates" (required by "Draft.Merkle_InterfaceMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.065s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Merkle_InterfaceMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.459s elapsed time, 0.464s cpu time, 0.000s GC time
Loading theory "Draft.Merkle_InterfaceMoreTemplates"
val templateLemmas =
   [("Merkle_Interface.case_unit_parametric",
     "rel_fun ?A (rel_fun (=) ?A) case_unit case_unit",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0)),
             template_hole 1),
           template_hole 0)
         )),
    ("Merkle_Interface.reflp_eq_onp",
     "reflp ?R = (eq_onp (%x. True) <= ?R)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("Merkle_Interface.merkle_interface_aux",
     "merkle_interface ?h ?bo ?m = merge_on UNIV ?h ?bo ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Merkle_Interface.merkle_interfaceI",
     "merge_on UNIV ?h ?bo ?m ==> merkle_interface ?h ?bo ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Merkle_Interface.vimage2p_map_list_all2",
     "vimage2p (map ?f) (map ?g) (list_all2 ?A) =
      list_all2 (vimage2p ?f ?g ?A)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Merkle_Interface.transp_parametric",
     "bi_total ?A ==>
      rel_fun (rel_fun ?A (rel_fun ?A (=))) (=) transp transp",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2))),
                 template_hole 2),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.equivclp_least",
     "[| ?r <= ?s; equivp ?s |] ==> equivclp ?r <= ?s",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Merkle_Interface.vimage2p_mono'",
     "?R <= ?S ==> vimage2p ?f ?g ?R <= vimage2p ?f ?g ?S",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Merkle_Interface.antisymp_parametric",
     "[| bi_unique ?A; bi_total ?A |]
      ==> rel_fun (rel_fun ?A (rel_fun ?A (=))) (=) antisymp antisymp",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2))),
                 template_hole 2),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.eq_onpE",
     "[| eq_onp ?P ?x ?y; [| ?x = ?y; ?P ?y |] ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_var 1)],
          template_implication
           ([template_predicate
              (template_app (template_var 3, template_var 1))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Merkle_Interface.vimage2p_map_rel_prod",
     "vimage2p (map_prod ?f ?g) (map_prod ?f' ?g') (rel_prod ?A ?B) =
      rel_prod (vimage2p ?f ?f' ?A) (vimage2p ?g ?g' ?B)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Merkle_Interface.blinding_of_on_axioms_parametric",
     "[| bi_unique ?A; bi_total ?A |]
      ==> rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_fun ?A (=))) (=))
           blinding_of_on_axioms blinding_of_on_axioms",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_hole 2))),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.vimage2p_parametric",
     "rel_fun (rel_fun ?A1.0 ?A3.0)
       (rel_fun (rel_fun ?A2.0 ?A4.0)
         (rel_fun (rel_fun ?A3.0 (rel_fun ?A4.0 ?A5.0))
           (rel_fun ?A1.0 (rel_fun ?A2.0 ?A5.0))))
       vimage2p vimage2p",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 4),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 0))))),
             template_hole 1),
           template_hole 0)
         )),
    ("Merkle_Interface.le_fun_parametric",
     "[| rel_fun ?A1.0 (rel_fun ?A3.0 (=)) (<=) (<=); bi_total ?A2.0 |]
      ==> rel_fun (rel_fun ?A2.0 ?A1.0) (rel_fun (rel_fun ?A2.0 ?A3.0) (=))
           (<=) (<=)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_hole 8)),
                template_hole 7),
              template_hole 6)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 1)),
                   template_hole 8)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.blinding_respects_hashes_parametric_aux",
     "[| rel_fun ?A1.0 (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (=))) ?A4.0)
          (<=) (<=);
         bi_unique ?A3.0 |]
      ==> rel_fun (rel_fun ?A2.0 ?A3.0) (rel_fun ?A1.0 ?A4.0)
           blinding_respects_hashes blinding_respects_hashes",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_app
                         (template_app (template_hole 8, template_var 2),
                          template_hole 7))),
                    template_var 1)),
                template_hole 6),
              template_hole 5)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 1)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.blinding_of_on_parametric",
     "[| bi_total ?A1.0; bi_unique ?A2.0; bi_unique ?A1.0 |]
      ==> rel_fun (rel_set ?A1.0)
           (rel_fun (rel_fun ?A1.0 ?A2.0)
             (rel_fun (rel_fun ?A1.0 (rel_fun ?A1.0 (=))) (=)))
           blinding_of_on blinding_of_on",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_app (template_hole 3, template_var 1),
                           template_hole 2))),
                     template_hole 2))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.blinding_respects_hashes_parametric",
     "[| bi_unique ?A2.0; bi_total ?A1.0 |]
      ==> rel_fun (rel_fun ?A1.0 ?A2.0)
           (rel_fun (rel_fun ?A1.0 (rel_fun ?A1.0 (=))) (=))
           blinding_respects_hashes blinding_respects_hashes",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         t_empty))),
                   t_empty)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.merkle_interface_parametric",
     "[| bi_total ?A2.0; bi_unique ?A2.0; bi_unique ?A1.0 |]
      ==> rel_fun (rel_fun ?A2.0 ?A1.0)
           (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (=)))
             (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (rel_option ?A2.0)))
               (=)))
           merkle_interface merkle_interface",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_app
                        (template_app (template_hole 7, template_var 1),
                         template_hole 6))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_app (template_hole 3, template_var 1),
                           template_app
                            (template_hole 2, template_var 1)))),
                     template_hole 6))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.merge_on_axioms_parametric",
     "[| bi_unique ?A2.0; bi_total ?A2.0; bi_unique ?A1.0 |]
      ==> rel_fun (rel_set ?A2.0)
           (rel_fun (rel_fun ?A2.0 ?A1.0)
             (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (=)))
               (rel_fun (rel_fun ?A2.0 (rel_fun ?A2.0 (rel_option ?A2.0)))
                 (=))))
           merge_on_axioms merge_on_axioms",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app (template_hole 12, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_var 1),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 1),
                         template_app
                          (template_app (template_hole 7, template_var 1),
                           template_hole 6))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 1),
                           template_app
                            (template_app (template_hole 3, template_var 1),
                             template_app
                              (template_hole 2, template_var 1)))),
                       template_hole 6)))),
               template_hole 1),
             template_hole 0)
           ))),
    ("Merkle_Interface.merge_on_parametric",
     "[| bi_unique ?A2.0; bi_total ?A1.0; bi_unique ?A1.0 |]
      ==> rel_fun (rel_set ?A1.0)
           (rel_fun (rel_fun ?A1.0 ?A2.0)
             (rel_fun (rel_fun ?A1.0 (rel_fun ?A1.0 (=)))
               (rel_fun (rel_fun ?A1.0 (rel_fun ?A1.0 (rel_option ?A1.0)))
                 (=))))
           merge_on merge_on",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_predicate
         (template_app (template_hole 15, template_var 0)),
        template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app (template_hole 12, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, template_var 0),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 0),
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_hole 6))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_app
                            (template_app (template_hole 3, template_var 0),
                             template_app
                              (template_hole 2, template_var 0)))),
                       template_hole 6)))),
               template_hole 1),
             template_hole 0)
           )))]:
   (string * thm * template) list
### theory "Draft.Merkle_InterfaceMoreTemplates"
### 0.316s elapsed time, 0.430s cpu time, 0.055s GC time
val it = (): unit
