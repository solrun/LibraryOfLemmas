   [("Generic_ADS_Construction.root_hash_T_simps",
     "root_hash_T ?rha (T\<^sub>m ?x) =
      T\<^sub>h (root_hash_F ?rha (root_hash_T ?rha) ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Generic_ADS_Construction.blinding_respects_hashes_T",
     "blinding_respects_hashes ?rh ?bo ==>
      blinding_respects_hashes (root_hash_T ?rh) (blinding_of_T ?rh ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.irrefl_subterm_T",
     "?x : set3_F\<^sub>m ?y ==> ?y ~= the_T\<^sub>m ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("Generic_ADS_Construction.root_hash_G_unfold",
     "root_hash_G ?rha ?rhb =
      G\<^sub>h o root_hash_F (root_hash_T ?rha) ?rhb o the_G\<^sub>m",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))),
         template_hole 0))),
    ("Generic_ADS_Construction.root_hash_G_simps",
     "root_hash_G ?rha ?rhb (G\<^sub>m ?x) =
      G\<^sub>h (root_hash_F (root_hash_T ?rha) ?rhb ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Generic_ADS_Construction.blinding_of_T_mono",
     "?bo <= ?bo' ==> blinding_of_T ?rh ?bo <= blinding_of_T ?rh ?bo'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Generic_ADS_Construction.blinding_of_T",
     "blinding_of_on UNIV ?rh ?bo ==>
      blinding_of_on UNIV (root_hash_T ?rh) (blinding_of_T ?rh ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_G_unfold",
     "blinding_of_G ?rha ?boa ?rhb ?bob =
      vimage2p the_G\<^sub>m the_G\<^sub>m
       (blinding_of_F (root_hash_T ?rha) (blinding_of_T ?rha ?boa) ?rhb
         ?bob)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Generic_ADS_Construction.merge_T",
     "merge_on UNIV ?rh ?bo ?m ==>
      merge_on UNIV (root_hash_T ?rh) (blinding_of_T ?rh ?bo)
       (merge_T ?rh ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_on_T",
     "blinding_of_on ?A ?rh ?bo ==>
      blinding_of_on {x. set1_T\<^sub>m x <= ?A} (root_hash_T ?rh)
       (blinding_of_T ?rh ?bo)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_T_root_hash",
     "?bo <= vimage2p ?rh ?rh (=) ==>
      blinding_of_T ?rh ?bo
      <= vimage2p (root_hash_T ?rh) (root_hash_T ?rh) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Generic_ADS_Construction.blinding_respects_hashes_F",
     "[| blinding_respects_hashes ?rha ?boa;
         blinding_respects_hashes ?rhb ?bob |]
      ==> blinding_respects_hashes (root_hash_F ?rha ?rhb)
           (blinding_of_F ?rha ?boa ?rhb ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_G_mono",
     "[| ?boa <= ?boa'; ?bob <= ?bob' |]
      ==> blinding_of_G ?rha ?boa ?rhb ?bob
          <= blinding_of_G ?rha ?boa' ?rhb ?bob'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 5),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4),
             template_var 0),
           template_var 2)))),
    ("Generic_ADS_Construction.blinding_of_F_mono",
     "[| ?boa <= ?boa'; ?bob <= ?bob' |]
      ==> blinding_of_F ?rha ?boa ?rhb ?bob
          <= blinding_of_F ?rha ?boa' ?rhb ?bob'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 5),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4),
             template_var 0),
           template_var 2)))),
    ("Generic_ADS_Construction.merge_G_simps",
     "merge_G ?rha ?ma ?rhb ?mb (G\<^sub>m ?x) (G\<^sub>m ?y) =
      map_option G\<^sub>m
       (merge_F (root_hash_T ?rha) (merge_T ?rha ?ma) ?rhb ?mb ?x ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 5)),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4)),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Generic_ADS_Construction.merge_on_T",
     "merge_on ?A ?rh ?bo ?m ==>
      merge_on {x. set1_T\<^sub>m x <= ?A} (root_hash_T ?rh)
       (blinding_of_T ?rh ?bo) (merge_T ?rh ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_G",
     "[| blinding_of_on UNIV ?rha ?boa; blinding_of_on UNIV ?rhb ?bob |]
      ==> blinding_of_on UNIV (root_hash_G ?rha ?rhb)
           (blinding_of_G ?rha ?boa ?rhb ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.merge_F",
     "[| merge_on UNIV ?rha ?boa ?ma; merge_on UNIV ?rhb ?bob ?mb |]
      ==> merge_on UNIV (root_hash_F ?rha ?rhb)
           (blinding_of_F ?rha ?boa ?rhb ?bob) (merge_F ?rha ?ma ?rhb ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.merge_G",
     "[| merge_on UNIV ?rha ?boa ?ma; merge_on UNIV ?rhb ?bob ?mb |]
      ==> merge_on UNIV (root_hash_G ?rha ?rhb)
           (blinding_of_G ?rha ?boa ?rhb ?bob) (merge_G ?rha ?ma ?rhb ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.merge_T_cong",
     "(!!a b. a : set1_T\<^sub>m ?x ==> ?m a b = ?m' a b) ==>
      merge_T ?rh ?m ?x ?y = merge_T ?rh ?m' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 4),
           template_var 0)))),
    ("Generic_ADS_Construction.blinding_of_G_root_hash",
     "[| ?boa <= vimage2p ?rha ?rha (=); ?bob <= vimage2p ?rhb ?rhb (=) |]
      ==> blinding_of_G ?rha ?boa ?rhb ?bob
          <= vimage2p (root_hash_G ?rha ?rhb) (root_hash_G ?rha ?rhb) (=)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_app (template_hole 9, template_var 2),
              template_var 2),
            template_hole 8)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0),
            template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 3),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("Generic_ADS_Construction.blinding_of_on_G",
     "[| blinding_of_on ?A ?rha ?boa; blinding_of_on ?B ?rhb ?bob |]
      ==> blinding_of_on
           {x. set1_G\<^sub>m x <= ?A & set3_G\<^sub>m x <= ?B}
           (root_hash_G ?rha ?rhb) (blinding_of_G ?rha ?boa ?rhb ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_on_F",
     "[| blinding_of_on ?A ?rha ?boa; blinding_of_on ?B ?rhb ?bob |]
      ==> blinding_of_on
           {x. set1_F\<^sub>m x <= ?A & set3_F\<^sub>m x <= ?B}
           (root_hash_F ?rha ?rhb) (blinding_of_F ?rha ?boa ?rhb ?bob)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.merge_on_F",
     "[| merge_on ?A ?rha ?boa ?ma; merge_on ?B ?rhb ?bob ?mb |]
      ==> merge_on {x. set1_F\<^sub>m x <= ?A & set3_F\<^sub>m x <= ?B}
           (root_hash_F ?rha ?rhb) (blinding_of_F ?rha ?boa ?rhb ?bob)
           (merge_F ?rha ?ma ?rhb ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, t_empty)),
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 5),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 4),
                 template_var 2),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.merge_on_G",
     "[| merge_on ?A ?rha ?boa ?ma; merge_on ?B ?rhb ?bob ?mb |]
      ==> merge_on {x. set1_G\<^sub>m x <= ?A & set3_G\<^sub>m x <= ?B}
           (root_hash_G ?rha ?rhb) (blinding_of_G ?rha ?boa ?rhb ?bob)
           (merge_G ?rha ?ma ?rhb ?mb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, t_empty)),
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 5),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 4),
                 template_var 2),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.blinding_of_F_mono_inductive",
     "[| !!x y. ?boa x y --> ?boa' x y; !!x y. ?bob x y --> ?bob' x y |]
      ==> blinding_of_F ?rha ?boa ?rhb ?bob ?x ?y -->
          blinding_of_F ?rha ?boa' ?rhb ?bob' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 7),
                       template_var 2),
                     template_var 5),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 6),
                     template_var 2),
                   template_var 4),
                 template_var 1),
               template_var 0))
           ))),
    ("Generic_ADS_Construction.merge_G_cong",
     "[| !!a b. a : set1_G\<^sub>m ?x ==> ?ma a b = ?ma' a b;
         !!a b. a : set3_G\<^sub>m ?x ==> ?mb a b = ?mb' a b |]
      ==> merge_G ?rha ?ma ?rhb ?mb ?x ?y =
          merge_G ?rha ?ma' ?rhb ?mb' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 6),
                 template_var 1),
               template_var 4),
             template_var 7),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1),
               template_var 3),
             template_var 7),
           template_var 0)))),
    ("Generic_ADS_Construction.merge_F_cong",
     "[| !!a b. a : set1_F\<^sub>m ?x ==> ?ma a b = ?ma' a b;
         !!a b. a : set3_F\<^sub>m ?x ==> ?mb a b = ?mb' a b |]
      ==> merge_F ?rha ?ma ?rhb ?mb ?x ?y =
          merge_F ?rha ?ma' ?rhb ?mb' ?x ?y",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 6),
                 template_var 1),
               template_var 4),
             template_var 7),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 5),
                 template_var 1),
               template_var 3),
             template_var 7),
           template_var 0))))]
