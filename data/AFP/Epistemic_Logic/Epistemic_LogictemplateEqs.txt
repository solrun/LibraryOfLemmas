   [("Epistemic_Logic.imply_append",
     "imply (?ps @ ?ps') ?q = imply ?ps (imply ?ps' ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Epistemic_Logic.main\<^sub>K",
     "valid\<^sub>K ?p = (\<turnstile>\<^sub>K ?p)",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Epistemic_Logic.extend_bound",
     "\<Union> (extend ?A ?S ?f ` {..?m}) = extend ?A ?S ?f ?m",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Epistemic_Logic.main\<^sub>T",
     "valid\<^sub>T ?p = (\<turnstile>\<^sub>T ?p)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Epistemic_Logic.main\<^sub>K\<^sub>B",
     "valid\<^sub>K\<^sub>B ?p = (\<turnstile>\<^sub>K\<^sub>B ?p)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Epistemic_Logic.main\<^sub>K\<^sub>4",
     "valid\<^sub>K\<^sub>4 ?p = (\<turnstile>\<^sub>K\<^sub>4 ?p)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Epistemic_Logic.eval_semantics",
     "eval (?pi ?w) (semantics (Kripke ?W ?pi ?r) ?w) ?p =
      (Kripke ?W ?pi ?r, ?w \<Turnstile> ?p)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_var 4, template_var 3)),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 1)),
           template_var 3),
         template_var 0))),
    ("Epistemic_Logic.main\<^sub>S\<^sub>5'",
     "valid\<^sub>S\<^sub>5 ?p = (\<turnstile>\<^sub>S\<^sub>5' ?p)",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Epistemic_Logic.main\<^sub>S\<^sub>4",
     "valid\<^sub>S\<^sub>4 ?p = (\<turnstile>\<^sub>S\<^sub>4 ?p)",
     template_equation
      (template_app (template_hole 10, t_empty),
       template_app
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("Epistemic_Logic.main\<^sub>S\<^sub>5",
     "valid\<^sub>S\<^sub>5 ?p = (AxTB4 \<turnstile> ?p)",
     template_equation
      (template_app (template_hole 13, t_empty),
       template_app
        (template_app (template_hole 4, t_empty), template_var 0)))]
