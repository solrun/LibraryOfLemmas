   [("Designs.H1_idem2", "H1 (H1 ?P) = H1 ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Designs.H2_idem2", "H2 (H2 ?P) = H2 ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Designs.t_comp_lz_d", "(true ;; (?P \<turnstile> ?Q)) = true",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_hole 1)),
    ("Designs.H1_H2_commute2", "H1 (H2 ?P) = H2 (H1 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Designs.div_not_distr",
     "\<sigma>f (\<not> ?P) = (\<not> \<sigma>f ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Designs.conv_not_distr",
     "\<sigma>t (\<not> ?P) = (\<not> \<sigma>t ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Designs.design_eq1",
     "(?P \<turnstile> ?Q) = (?P \<turnstile> ?P \<and> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Designs.pi_comp_left_unit",
     "(\<Pi>d ;; (?P \<turnstile> ?Q)) = (?P \<turnstile> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Designs.div_conj_distr",
     "\<sigma>f (?P \<and> ?Q) = (\<sigma>f ?P \<and> \<sigma>f ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Designs.div_disj_distr",
     "\<sigma>f (?P \<or> ?Q) = (\<sigma>f ?P \<or> \<sigma>f ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Designs.div_imp_distr",
     "\<sigma>f (?P \<longrightarrow> ?Q) =
      (\<sigma>f ?P \<longrightarrow> \<sigma>f ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Designs.conv_conj_distr",
     "\<sigma>t (?P \<and> ?Q) = (\<sigma>t ?P \<and> \<sigma>t ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Designs.conv_disj_distr",
     "\<sigma>t (?P \<or> ?Q) = (\<sigma>t ?P \<or> \<sigma>t ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Designs.conv_imp_distr",
     "\<sigma>t (?P \<longrightarrow> ?Q) =
      (\<sigma>t ?P \<longrightarrow> \<sigma>t ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Designs.t3_1_4_2",
     "((?P1.0 \<turnstile> ?Q1.0) \<triangleleft> ?b \<triangleright> 
          (?P2.0 \<turnstile> ?Q2.0)) =
      (?P1.0 \<triangleleft> ?b \<triangleright> 
          ?P2.0 \<turnstile> ?Q1.0 \<triangleleft> ?b \<triangleright> 
                                ?Q2.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Designs.H2_J",
     "(ALL A.
          case A of
          (A, A') =>
            ?P (A, A'(| ok := False |)) --> ?P (A, A'(| ok := True |))) =
      ?P is H2 healthy",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_hole 0)))]
