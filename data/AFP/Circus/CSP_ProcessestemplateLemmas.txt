   [("CSP_Processes.rd_is_CSP1", "R (?r \<turnstile> ?p) is CSP1 healthy",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_hole 0)
         )),
    ("CSP_Processes.CSP1_R_commute", "CSP1 (R ?P) = R (CSP1 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("CSP_Processes.CSP1_R1_commute2", "CSP1 (R1 ?P) = R1 (CSP1 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("CSP_Processes.CSP1_is_R1_H1_2", "CSP1 (R1 ?P) = R1 (H1 ?P)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("CSP_Processes.CSP2_R_commute", "CSP2 (R ?P) = R (CSP2 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("CSP_Processes.H2_CSP1_commute2", "H2 (CSP1 ?P) = CSP1 (H2 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("CSP_Processes.CSP_is_CSP1",
     "is_CSP_process ?P ==> ?P is CSP1 healthy",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("CSP_Processes.CSP_is_CSP2",
     "is_CSP_process ?P ==> ?P is CSP2 healthy",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("CSP_Processes.CSP_is_R", "is_CSP_process ?P ==> ?P is R healthy",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("CSP_Processes.seq_CSP2",
     "?Q is CSP2 healthy ==> ?P ;; ?Q is CSP2 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("CSP_Processes.CSP1_is_R1_H1",
     "?P is R1 healthy ==> CSP1 ?P = R1 (H1 ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("CSP_Processes.disj_CSP",
     "[| is_CSP_process ?P; is_CSP_process ?Q |]
      ==> is_CSP_process (?P \<or> ?Q)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CSP_Processes.CSP_meet",
     "[| is_CSP_process ?x; is_CSP_process ?y |]
      ==> is_CSP_process (?x \<and> ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CSP_Processes.CSP_join",
     "[| is_CSP_process ?x; is_CSP_process ?y |]
      ==> is_CSP_process (?x \<or> ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CSP_Processes.seq_CSP1",
     "[| ?P is CSP1 healthy; ?Q is CSP1 healthy |]
      ==> ?P ;; ?Q is CSP1 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.disj_CSP1",
     "[| ?P is CSP1 healthy; ?Q is CSP1 healthy |]
      ==> ?P \<or> ?Q is CSP1 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.disj_CSP2",
     "[| ?P is CSP2 healthy; ?Q is CSP2 healthy |]
      ==> ?P \<or> ?Q is CSP2 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.seq_R",
     "[| ?P is R healthy; ?Q is R healthy |] ==> ?P ;; ?Q is R healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.CSP1_meet",
     "[| ?x is CSP1 healthy; ?y is CSP1 healthy |]
      ==> ?x \<and> ?y is CSP1 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.CSP1_join",
     "[| ?x is CSP1 healthy; ?y is CSP1 healthy |]
      ==> ?x \<or> ?y is CSP1 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.CSP2_meet",
     "[| ?x is CSP2 healthy; ?y is CSP2 healthy |]
      ==> ?x \<and> ?y is CSP2 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.CSP2_join",
     "[| ?x is CSP2 healthy; ?y is CSP2 healthy |]
      ==> ?x \<or> ?y is CSP2 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("CSP_Processes.CSP2_notok",
     "CSP2 ?P (?a, ?b(| ok := False |)) = ?P (?a, ?b(| ok := False |))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("CSP_Processes.CSP_is_rd",
     "is_CSP_process ?P ==>
      ?P = R (\<not> ?P\<^sup>f\<^sub>f \<turnstile> ?P\<^sup>t\<^sub>f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_hole 1),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 0),
                 template_hole 1),
               template_var 0)))))),
    ("CSP_Processes.CSP2_notok_b",
     "?P (?a, ?b(| ok := False |)) ==> CSP2 ?P (?a, ?b(| ok := False |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, t_empty), template_var 0)))
           ))),
    ("CSP_Processes.CSP2_notok_a",
     "CSP2 ?P (?a, ?b(| ok := False |)) ==> ?P (?a, ?b(| ok := False |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_app (template_hole 1, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_var 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, t_empty), template_var 0)))
           ))),
    ("CSP_Processes.seq_CSP",
     "[| ?P is CSP1 healthy; ?P is R healthy; is_CSP_process ?Q |]
      ==> is_CSP_process (?P ;; ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CSP_Processes.CSP1_is_R1_H1_b",
     "(?P = (R o R1 o H1 o H2) ?P) = (?P = (R o CSP1 o H2) ?P)",
     template_bimplication
      (template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_hole 3)),
                 template_hole 2)),
             template_hole 1),
           template_var 0)),
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_hole 0)),
             template_hole 1),
           template_var 0)))),
    ("CSP_Processes.t_or_f_a",
     "?P (?a, ?b) ==>
      ?P (?a, ?b(| ok := True |)) | ?P (?a, ?b(| ok := False |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_var 2,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_var 0)))),
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_var 0))))
           ))),
    ("CSP_Processes.is_CSP_processE1",
     "[| is_CSP_process ?P;
         [| ?P is CSP1 healthy; ?P is CSP2 healthy; ?P is R healthy |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 1)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 0)
                   )],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("CSP_Processes.CSP2_ok",
     "CSP2 ?P (?a, ?b(| ok := True |)) =
      (?P (?a, ?b(| ok := True |)) | ?P (?a, ?b(| ok := False |)))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, t_empty), template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_var 2,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 3, t_empty),
                 template_var 0)))),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, t_empty),
               template_var 0)))))),
    ("CSP_Processes.CSP2_ok_a",
     "CSP2 ?P (?a, ?b(| ok := True |)) ==>
      ?P (?a, ?b(| ok := True |)) | ?P (?a, ?b(| ok := False |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, t_empty), template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 2,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_var 0)))),
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_var 0))))
           ))),
    ("CSP_Processes.CSP2_ok_b",
     "?P (?a, ?b(| ok := True |)) | ?P (?a, ?b(| ok := False |)) ==>
      CSP2 ?P (?a, ?b(| ok := True |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_var 2,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app
                     (template_app (template_hole 3, t_empty),
                      template_var 0)))),
              template_app
               (template_var 2,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, t_empty),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 3, t_empty), template_var 0)))
           ))),
    ("CSP_Processes.rd_is_CSP",
     "ALL a b. ?r (a, b(| ok := True |)) --> ?r (a, b(| ok := False |)) ==>
      is_CSP_process (R (?r \<turnstile> ?p))",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("CSP_Processes.is_CSP_processE2",
     "[| is_CSP_process ?P;
         [| CSP1 ?P = ?P; CSP2 ?P = ?P; R ?P = ?P |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_implication
         ([template_equation
            (template_app (template_hole 2, template_var 1),
             template_var 1)],
          template_implication
           ([template_equation
              (template_app (template_hole 1, template_var 1),
               template_var 1)],
            template_implication
             ([template_equation
                (template_app (template_hole 0, template_var 1),
                 template_var 1)],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("CSP_Processes.rd_is_CSP2",
     "ALL a b. ?r (a, b(| ok := True |)) --> ?r (a, b(| ok := False |)) ==>
      R (?r \<turnstile> ?p) is CSP2 healthy",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("CSP_Processes.rd_ind_wait",
     "R (\<not> ?P\<^sup>f\<^sub>f \<turnstile> ?P\<^sup>t\<^sub>f) =
      R (\<not> (%(A, A').
                    ?P (A, A'
                        (| ok :=
                             False |))) \<turnstile> %(A, A').
                  ?P (A, A'(| ok := True |)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 4),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 3),
               template_hole 4),
             template_var 0))),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 2, t_empty))),
           template_app (template_hole 2, t_empty))))),
    ("CSP_Processes.rd_H1_H2_R_H1_H2",
     "R (\<not> (H1 o H2)
                 (%(A, A').
                     ?P (A, A'
                         (| ok :=
                              False |))) \<turnstile> (H1 o H2)
                 (%(A, A'). ?P (A, A'(| ok := True |)))) =
      (R o H1 o H2) ?P",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_hole 5),
                 template_app (template_hole 4, t_empty)))),
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5),
             template_app (template_hole 4, t_empty)))),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 7, template_hole 10),
               template_hole 6)),
           template_hole 5),
         template_var 0))),
    ("CSP_Processes.CSP2_t_f",
     "[| CSP2 (R (?r \<turnstile> ?p)) (?a, ?b);
         CSP2 (R (?r \<turnstile> ?p)) (?a, ?b(| ok := False |)) |
         CSP2 (R (?r \<turnstile> ?p)) (?a, ?b(| ok := True |)) ==>
         ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 4),
                           template_var 3))),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 4),
                         template_var 3))),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_var 1))))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("CSP_Processes.rd_H1",
     "R (\<not> (%(A, A').
                    ?P (A, A'
                        (| ok :=
                             False |))) \<turnstile> %(A, A').
                  ?P (A, A'(| ok := True |))) =
      R (\<not> H1 (%(A, A').
                       ?P (A, A'
                           (| ok :=
                                False |))) \<turnstile> H1
                   (%(A, A'). ?P (A, A'(| ok := True |))))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6, template_app (template_hole 5, t_empty))),
           template_app (template_hole 5, t_empty))),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 0,
                 template_app (template_hole 5, t_empty)))),
           template_app
            (template_hole 0, template_app (template_hole 5, t_empty)))))),
    ("CSP_Processes.rd_H1_H2",
     "R (\<not> H1 (%(A, A').
                       ?P (A, A'
                           (| ok :=
                                False |))) \<turnstile> H1
                   (%(A, A'). ?P (A, A'(| ok := True |)))) =
      R (\<not> (H1 o H2)
                 (%(A, A').
                     ?P (A, A'
                         (| ok :=
                              False |))) \<turnstile> (H1 o H2)
                 (%(A, A'). ?P (A, A'(| ok := True |))))",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 6, t_empty)))),
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty)))),
       template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 7),
                   template_hole 0),
                 template_app (template_hole 6, t_empty)))),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 7),
               template_hole 0),
             template_app (template_hole 6, t_empty))))))]
