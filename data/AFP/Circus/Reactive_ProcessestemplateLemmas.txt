   [("Reactive_Processes.prefix_diff_empty", "?l - [] = ?l",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Reactive_Processes.prefix_diff_eq", "?l - ?l = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Reactive_Processes.tr_filter_empty", "tr_filter ?l {} = ?l",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Reactive_Processes.R_idem2", "R (R ?P) = R ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Reactive_Processes.R1_idem2", "R1 (R1 ?x) = R1 ?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Reactive_Processes.R2_idem2", "R2 (R2 ?x) = R2 ?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Reactive_Processes.R3_idem2", "R3 (R3 ?x) = R3 ?x",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Reactive_Processes.list_diff_empty", "the (list_diff ?l []) = ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Reactive_Processes.R_H2_commute2", "R (H2 ?P) = H2 (R ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Reactive_Processes.R1_H2_commute2", "R1 (H2 ?P) = H2 (R1 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Reactive_Processes.R2_H2_commute2", "R2 (H2 ?P) = H2 (R2 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Reactive_Processes.R3_H2_commute2", "R3 (H2 ?P) = H2 (R3 ?P)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Reactive_Processes.prefix_diff", "?l @ ?t - ?l = ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("Reactive_Processes.R_is_R1", "?P is R healthy ==> ?P is R1 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("Reactive_Processes.R_is_R2", "?P is R healthy ==> ?P is R2 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("Reactive_Processes.R_is_R3", "?P is R healthy ==> ?P is R3 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0)
           ))),
    ("Reactive_Processes.in_imp_not_fcs",
     "?x : ?S ==> ~ filter_chan_set ?x ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("Reactive_Processes.R_disj2", "R (?P \<or> ?Q) = (R ?P \<or> R ?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Reactive_Processes.prefix_diff3", "?l @ ?m - (?l @ ?t) = ?m - ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Reactive_Processes.prefix_diff4", "?a # ?m - (?a # ?t) = ?m - ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Reactive_Processes.prefix_diff2", "?l @ ?m @ ?t - (?l @ ?m) = ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1)),
       template_var 0)),
    ("Reactive_Processes.prefix_diff1", "(?l @ ?m) @ ?t - (?l @ ?m) = ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1)),
       template_var 0)),
    ("Reactive_Processes.tr_filter_un",
     "tr_filter ?l (?s1.0 Un ?s2.0) = tr_filter (tr_filter ?l ?s1.0) ?s2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Reactive_Processes.prefix_subst1", "?m = ?l @ ?t ==> ?m - ?l = ?t",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Reactive_Processes.prefix_subst", "?l @ ?t = ?m ==> ?m - ?l = ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Reactive_Processes.tr_filter_conc",
     "tr_filter (?a @ ?b) ?cs = tr_filter ?a ?cs @ tr_filter ?b ?cs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Reactive_Processes.filter_chan_set_hd_tr_filter",
     "tr_filter ?l ?cs ~= [] -->
      filter_chan_set (hd (tr_filter ?l ?cs)) ?cs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_var 0))
         )),
    ("Reactive_Processes.tr_filter_conc_eq2",
     "?a @ ?b = tr_filter (?a @ ?c) ?cs --> ?a = tr_filter ?a ?cs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_var 0))),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)))
         )),
    ("Reactive_Processes.tr_filter_conc_eq1",
     "?a @ ?b = tr_filter (?a @ ?c) ?cs --> ?b = tr_filter ?c ?cs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_var 0))),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Reactive_Processes.R_disj",
     "[| ?P is R healthy; ?Q is R healthy |] ==> ?P \<or> ?Q is R healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Reactive_Processes.R1_comp",
     "[| ?P is R1 healthy; ?Q is R1 healthy |] ==> ?P ;; ?Q is R1 healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Reactive_Processes.R_meet",
     "[| ?x is R healthy; ?y is R healthy |] ==> ?x \<and> ?y is R healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Reactive_Processes.R_join",
     "[| ?x is R healthy; ?y is R healthy |] ==> ?x \<or> ?y is R healthy",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Reactive_Processes.list_diff_empty_eq",
     "[| ?l1.0 - ?l2.0 = []; ?l2.0 \<le> ?l1.0 |] ==> ?l1.0 = ?l2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Reactive_Processes.trf_imp_filtercs",
     "[| ?xs = tr_filter ?ys ?cs; ?xs ~= [] |]
      ==> filter_chan_set (hd ?xs) ?cs",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)
           ))),
    ("Reactive_Processes.R1_comp2",
     "[| ?P is R1 healthy; ?Q is R1 healthy |]
      ==> R1 (?P ;; ?Q) = (R1 ?P ;; ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Reactive_Processes.tr_filter_conc_eq",
     "(?a @ ?b = tr_filter (?a @ ?c) ?cs) =
      (?b = tr_filter ?c ?cs & ?a = tr_filter ?a ?cs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0)))
           ))),
    ("Reactive_Processes.filtercs_imp_trf",
     "[| filter_chan_set ?x ?cs; ?xs = tr_filter ?ys ?cs |]
      ==> ?x # ?xs = tr_filter (?x # ?ys) ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2)))),
    ("Reactive_Processes.tr_filter_conc_eq3",
     "(?b = tr_filter (?a @ ?c) ?cs) =
      (EX b1 b2.
          ?b = b1 @ b2 & b2 = tr_filter ?c ?cs & b1 = tr_filter ?a ?cs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Reactive_Processes.alpha_d_more_eqI",
     "[| tr ?r = tr ?r'; wait ?r = wait ?r'; ref ?r = ref ?r';
         alpha_rp.more ?r = alpha_rp.more ?r' |]
      ==> alpha_d.more ?r = alpha_d.more ?r'",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Reactive_Processes.alpha_d_more_eqE",
     "[| alpha_d.more ?r = alpha_d.more ?r';
         [| tr ?r = tr ?r'; wait ?r = wait ?r'; ref ?r = ref ?r';
            alpha_rp.more ?r = alpha_rp.more ?r' |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_implication
         ([template_equation
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 6, template_var 1))],
          template_implication
           ([template_equation
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 4, template_var 1))],
            template_implication
             ([template_equation
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 2, template_var 1))],
              template_implication
               ([template_equation
                  (template_app (template_hole 0, template_var 2),
                   template_app (template_hole 0, template_var 1))],
                template_predicate (template_var 0)))))],
       template_predicate (template_var 0))),
    ("Reactive_Processes.alpha_rp_eqE",
     "[| ?r = ?r';
         [| ok ?r = ok ?r'; tr ?r = tr ?r'; wait ?r = wait ?r';
            ref ?r = ref ?r'; alpha_rp.more ?r = alpha_rp.more ?r' |]
         ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_implication
         ([template_equation
            (template_app (template_hole 7, template_var 2),
             template_app (template_hole 7, template_var 1))],
          template_implication
           ([template_equation
              (template_app (template_hole 5, template_var 2),
               template_app (template_hole 5, template_var 1))],
            template_implication
             ([template_equation
                (template_app (template_hole 4, template_var 2),
                 template_app (template_hole 4, template_var 1))],
              template_implication
               ([template_equation
                  (template_app (template_hole 2, template_var 2),
                   template_app (template_hole 2, template_var 1))],
                template_implication
                 ([template_equation
                    (template_app (template_hole 0, template_var 2),
                     template_app (template_hole 0, template_var 1))],
                  template_predicate (template_var 0))))))],
       template_predicate (template_var 0)))]
