   [("Digraph.in_arcs_int_arcs",
     "in_arcs ?G ?u Int arcs ?G = in_arcs ?G ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Digraph.out_arcs_int_arcs",
     "out_arcs ?G ?u Int arcs ?G = out_arcs ?G ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Digraph.arcs_ends_conv",
     "arcs_ends ?G = (%e. (tail ?G e, head ?G e)) ` arcs ?G",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Digraph.in_in_arcs_conv",
     "(?e : in_arcs ?G ?v) = (?e : arcs ?G & head ?G ?e = ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Digraph.in_out_arcs_conv",
     "(?e : out_arcs ?G ?v) = (?e : arcs ?G & tail ?G ?e = ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Digraph.symmetric_conv",
     "symmetric ?G =
      (ALL e1:arcs ?G.
          EX e2:arcs ?G.
             tail ?G e1 = head ?G e2 & head ?G e1 = tail ?G e2)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         t_empty)))]
