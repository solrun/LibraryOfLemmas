   [("Subdivision.arc_to_ends_with_proj", "arc_to_ends (with_proj ?G) = id",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Subdivision.subdivision_pair_conv",
     "??.Subdivision.pair_sd ?G ?H = subdivision_pair ?G ?H",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Subdivision.subdivision_pair_simps",
     "subdivision_pair ?G ?a =
      (?a = ?G & pair_bidirected_digraph ?G |
       (EX e w H.
           ?a = subdivide H e w &
           e : parcs H & w ~: pverts H & subdivision_pair ?G H))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_var 1)),
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 1)))),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_var 0)),
                template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 0))))
            )],
       template_dunno))]
