   [("Kuratowski.progressing_rev_path",
     "progressing (rev_path ?p) = progressing ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Kuratowski.sd_path_Nil_iff", "(sd_path ?e ?w ?p = []) = (?p = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Kuratowski.progressing_Cons_Cons",
     "progressing ((?u, ?v) # (?v, ?w) # ?es) =
      (?u ~= ?w & progressing ((?v, ?w) # ?es))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_dunno)),
    ("Kuratowski.progressing_Cons",
     "progressing (?x # ?xs) =
      (?xs = [] |
       ?xs ~= [] &
       ~ (fst ?x = snd (hd ?xs) & snd ?x = fst (hd ?xs)) &
       progressing ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Kuratowski.progressing_append_iff",
     "progressing (?xs @ ?ys) =
      (progressing ?xs &
       progressing ?ys &
       (?xs ~= [] & ?ys ~= [] -->
        fst (last ?xs) ~= snd (hd ?ys) | snd (last ?xs) ~= fst (hd ?ys)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            )],
       template_dunno))]
