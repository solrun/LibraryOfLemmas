   [("Kuratowski.progressing_single", "progressing [?e]",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Kuratowski.progressing_rev_path",
     "progressing (rev_path ?p) = progressing ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Kuratowski.pair_graphI_complete",
     "K\<^bsub>?n\<^esub> (with_proj ?G) ==> pair_graph ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Kuratowski.progressing_appendD1",
     "progressing (?p @ ?q) ==> progressing ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Kuratowski.progressing_appendD2",
     "progressing (?p @ ?q) ==> progressing ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Kuratowski.progressing_ConsD",
     "progressing (?e # ?es) ==> progressing ?es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Kuratowski.pair_graphI_complete_bipartite",
     "K\<^bsub>?m,?n\<^esub> (with_proj ?G) ==> pair_graph ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Kuratowski.sd_path_Nil_iff", "(sd_path ?e ?w ?p = []) = (?p = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Kuratowski.verts3_K5",
     "K\<^bsub>5\<^esub> (with_proj ?G) ==>
      verts3 (with_proj ?G) = verts (with_proj ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4)))),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("Kuratowski.verts3_K33",
     "K\<^bsub>3,3\<^esub> (with_proj ?G) ==>
      verts3 (with_proj ?G) = verts (with_proj ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("Kuratowski.progressing_Cons_Cons",
     "progressing ((?u, ?v) # (?v, ?w) # ?es) =
      (?u ~= ?w & progressing ((?v, ?w) # ?es))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("Kuratowski.progressing_Cons",
     "progressing (?x # ?xs) =
      (?xs = [] |
       ?xs ~= [] &
       ~ (fst ?x = snd (hd ?xs) & snd ?x = fst (hd ?xs)) &
       progressing ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_hole 6))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_var 1)),
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 0)))),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 1, template_var 1)),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 0, template_var 0)))))),
                 template_app (template_hole 10, template_var 0))))
           ))),
    ("Kuratowski.K5_contractedI",
     "[| subdivision_pair ?G ?H; K\<^bsub>5\<^esub> (with_proj ?G) |]
      ==> K\<^bsub>5\<^esub>
           (with_proj
             (gen_contr_graph (with_proj ?H) (verts3 (with_proj ?H))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0)),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_hole 2)))),
              template_app (template_hole 9, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 9, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 9, template_var 0)))))
           ))),
    ("Kuratowski.progressing_append_iff",
     "progressing (?xs @ ?ys) =
      (progressing ?xs &
       progressing ?ys &
       (?xs ~= [] & ?ys ~= [] -->
        fst (last ?xs) ~= snd (hd ?ys) | snd (last ?xs) ~= fst (hd ?ys)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 12, template_var 1)),
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 12, template_var 0)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_var 1),
                           template_hole 6))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_hole 6)))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_var 1))),
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 0, template_var 0))))),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 1,
                           template_app (template_hole 2, template_var 1))),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0, template_var 0))))))))
           ))),
    ("Kuratowski.K33_contractedI",
     "[| subdivision_pair ?G ?H; K\<^bsub>3,3\<^esub> (with_proj ?G) |]
      ==> K\<^bsub>3,3\<^esub>
           (with_proj
             (gen_contr_graph (with_proj ?H) (verts3 (with_proj ?H))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0)),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_hole 2))),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2))),
              template_app (template_hole 8, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 8, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_var 0)))))
           )))]
