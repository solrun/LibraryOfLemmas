   [("Stuff.NOMATCH_cong", "NOMATCH ?val ?pat = NOMATCH ?val ?pat",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Stuff.butlast_rev", "butlast (rev ?p) = rev (tl ?p)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Stuff.tl_rev", "tl (rev ?p) = rev (butlast ?p)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Stuff.list_set_tl", "?x : set (tl ?xs) ==> ?x : set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Stuff.sym_diff", "[| sym ?A; sym ?B |] ==> sym (?A - ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Stuff.take_drop_take",
     "take ?n ?xs @ drop ?n (take ?m ?xs) = take (max ?n ?m) ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Stuff.drop_take_drop",
     "drop ?n (take ?m ?xs) @ drop ?m ?xs = drop (min ?n ?m) ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Stuff.ereal_Inf_finite_Min",
     "[| finite ?S; ?S ~= {} |] ==> Inf ?S = Min ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Stuff.card_Ex_subset", "?k <= card ?M ==> EX N<=?M. card N = ?k",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Stuff.not_mem_less_INF",
     "[| ?f ?x < Inf (?f ` ?S); ?x : ?S |] ==> False",
     template_implication
      ([template_inequation
         (less_than, template_app (template_var 2, template_var 1),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, t_empty), template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("Stuff.finite_INF_in",
     "[| finite ?S; ?S ~= {} |] ==> Inf (?f ` ?S) : ?f ` ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Stuff.not_distinct_decomp_min_not_distinct",
     "~ distinct ?ws ==>
      EX xs y ys zs. ?ws = xs @ y # ys @ y # zs & distinct (ys @ [y])",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Stuff.not_distinct_decomp_min_prefix",
     "~ distinct ?ws ==>
      EX xs ys zs y.
         ?ws = xs @ y # ys @ y # zs &
         distinct xs & y ~: set xs & y ~: set ys",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 0))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Stuff.list_exhaust_NSC",
     "[| ?xs = [] ==> ?thesis; !!x. ?xs = [x] ==> ?thesis;
         !!x y ys. ?xs = x # y # ys ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 3)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Stuff.list_exhaust2",
     "[| [| ?y = []; ?ya = [] |] ==> ?P;
         !!x21 x22. [| ?y = []; ?ya = x21 # x22 |] ==> ?P;
         !!x21 x22. [| ?y = x21 # x22; ?ya = [] |] ==> ?P;
         !!x21 x22 x21a x22a.
            [| ?y = x21 # x22; ?ya = x21a # x22a |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 2, template_hole 8)],
          template_implication
           ([template_equation (template_var 1, template_hole 6)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]
