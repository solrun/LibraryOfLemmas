Loading theory "Draft.DFS_Framework_Misc" (required by "Draft.Param_DFSTemplates" via "Draft.Param_DFS" via "Draft.DFS_Framework_Refine_Aux")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Param_DFSTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Param_DFSTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Param_DFSTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
### theory "Draft.DFS_Framework_Misc"
### 0.045s elapsed time, 0.219s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Param_DFSTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.560s cpu time, 0.052s GC time
Loading theory "Draft.DFS_Framework_Refine_Aux" (required by "Draft.Param_DFSTemplates" via "Draft.Param_DFS")
### theory "HOL-Library.Set_Algebras"
### 0.233s elapsed time, 0.956s cpu time, 0.052s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Param_DFSTemplates" via "Draft.ExtrEqs")
### theory "Draft.DFS_Framework_Refine_Aux"
### 0.253s elapsed time, 0.983s cpu time, 0.100s GC time
Loading theory "Draft.Param_DFS" (required by "Draft.Param_DFSTemplates")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.919s elapsed time, 3.594s cpu time, 0.374s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.000s elapsed time, 3.623s cpu time, 0.890s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.101s elapsed time, 6.276s cpu time, 1.154s GC time
Loading theory "Draft.Templates" (required by "Draft.Param_DFSTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Param_DFSTemplates")
locale param_DFS_defs
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.546s elapsed time, 1.124s cpu time, 0.088s GC time
locale param_DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "param_DFS G"
locale DFS_invar
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
    and s :: "('v, 'es) state_scheme"
  assumes "DFS_invar G param s"
locale param_DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "param_DFS G"
locale param_DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "param_DFS G"
locale DFS_invar
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
    and s :: "('v, 'es) state_scheme"
  assumes "DFS_invar G param s"
locale param_DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "param_DFS G"
locale DFS_invar
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
    and s :: "('v, 'es) state_scheme"
  assumes "DFS_invar G param s"
locale param_DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "param_DFS G"
locale param_DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "param_DFS G"
locale DFS
  fixes G :: "('v, 'more) graph_rec_scheme"
    and param :: "('v, ('v, 'es) state_scheme, 'es) gen_parameterization"
  assumes "DFS G param"
### theory "Draft.Param_DFS"
### 3.222s elapsed time, 7.102s cpu time, 1.149s GC time
Loading theory "Draft.Param_DFSTemplates"
val templateLemmas =
   [("Param_DFS.dflt_parametrization_simp",
     "gen_parameterization.more (dflt_parametrization ?more ?on_init) = ()",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Param_DFS.dflt_parametrization_simp",
     "on_init (dflt_parametrization ?more ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Param_DFS.dflt_parametrization_simp",
     "is_break (dflt_parametrization ?more ?on_init) = (%_. False)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Param_DFS.dflt_parametrization_simp",
     "on_finish (dflt_parametrization ?more ?on_init) =
      (%_. RETURN o ?more)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Param_DFS.dflt_parametrization_simp",
     "on_new_root (dflt_parametrization ?more ?on_init) =
      (%_. RETURN o ?more)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Param_DFS.dflt_parametrization_simp",
     "on_back_edge (dflt_parametrization ?more ?on_init) =
      (%_ _. RETURN o ?more)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Param_DFS.dflt_parametrization_simp",
     "on_cross_edge (dflt_parametrization ?more ?on_init) =
      (%_ _. RETURN o ?more)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Param_DFS.dflt_parametrization_simp",
     "on_discover (dflt_parametrization ?more ?on_init) =
      (%_ _. RETURN o ?more)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Param_DFS.dflt_parametrization_simp",
     "is_break_update ?is_break' (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = %_ _. RETURN o ?more, on_finish = %_. RETURN o ?more,
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = %_ _. RETURN o ?more,
         is_break = ?is_break' (%_. False) |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     t_empty),
                   t_empty),
                 t_empty),
               t_empty),
             t_empty),
           template_app (template_var 2, t_empty)),
         template_hole 0))),
    ("Param_DFS.dflt_parametrization_simp",
     "gen_parameterization.more_update ?more'
       (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = %_ _. RETURN o ?more, on_finish = %_. RETURN o ?more,
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = %_ _. RETURN o ?more, is_break = %_. False,
         ... = ?more' () |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     t_empty),
                   t_empty),
                 t_empty),
               t_empty),
             t_empty),
           t_empty),
         template_app (template_var 2, template_hole 0)))),
    ("Param_DFS.dflt_parametrization_simp",
     "on_back_edge_update ?on_back_edge'
       (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = %_ _. RETURN o ?more, on_finish = %_. RETURN o ?more,
         on_back_edge = ?on_back_edge' (%_ _. RETURN o ?more),
         on_cross_edge = %_ _. RETURN o ?more, is_break = %_. False |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     t_empty),
                   t_empty),
                 t_empty),
               template_app (template_var 2, t_empty)),
             t_empty),
           t_empty),
         template_hole 0))),
    ("Param_DFS.dflt_parametrization_simp",
     "on_cross_edge_update ?on_cross_edge'
       (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = %_ _. RETURN o ?more, on_finish = %_. RETURN o ?more,
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = ?on_cross_edge' (%_ _. RETURN o ?more),
         is_break = %_. False |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     t_empty),
                   t_empty),
                 t_empty),
               t_empty),
             template_app (template_var 2, t_empty)),
           t_empty),
         template_hole 0))),
    ("Param_DFS.dflt_parametrization_simp",
     "on_discover_update ?on_discover'
       (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = ?on_discover' (%_ _. RETURN o ?more),
         on_finish = %_. RETURN o ?more,
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = %_ _. RETURN o ?more, is_break = %_. False |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     t_empty),
                   template_app (template_var 2, t_empty)),
                 t_empty),
               t_empty),
             t_empty),
           t_empty),
         template_hole 0))),
    ("Param_DFS.dflt_parametrization_simp",
     "on_finish_update ?on_finish' (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = %_ _. RETURN o ?more,
         on_finish = ?on_finish' (%_. RETURN o ?more),
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = %_ _. RETURN o ?more, is_break = %_. False |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     t_empty),
                   t_empty),
                 template_app (template_var 2, t_empty)),
               t_empty),
             t_empty),
           t_empty),
         template_hole 0))),
    ("Param_DFS.dflt_parametrization_simp",
     "on_init_update ?on_init' (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init' ?on_init, on_new_root = %_. RETURN o ?more,
         on_discover = %_ _. RETURN o ?more, on_finish = %_. RETURN o ?more,
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = %_ _. RETURN o ?more, is_break = %_. False |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_var 2, template_var 0)),
                     t_empty),
                   t_empty),
                 t_empty),
               t_empty),
             t_empty),
           t_empty),
         template_hole 0))),
    ("Param_DFS.dflt_parametrization_simp",
     "on_new_root_update ?on_new_root'
       (dflt_parametrization ?more ?on_init) =
      (| on_init = ?on_init,
         on_new_root = ?on_new_root' (%_. RETURN o ?more),
         on_discover = %_ _. RETURN o ?more, on_finish = %_. RETURN o ?more,
         on_back_edge = %_ _. RETURN o ?more,
         on_cross_edge = %_ _. RETURN o ?more, is_break = %_. False |)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app (template_var 2, t_empty)),
                   t_empty),
                 t_empty),
               t_empty),
             t_empty),
           t_empty),
         template_hole 0)))]:
   (string * thm * template) list
### theory "Draft.Param_DFSTemplates"
### 2.132s elapsed time, 3.041s cpu time, 0.938s GC time
val it = (): unit
