   [("Simplex_for_Reals.incremental_simplex_real",
     "checked_simplex ?cs {} (init_simplex ?cs)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Simplex_for_Reals.minimal_unsat_core_real_conv",
     "minimal_unsat_core_real ?I ?ics = minimal_unsat_core ?I ?ics",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Simplex_for_Reals.of_rat_val_constraint",
     "of_rat_val ?v \<Turnstile>\<^sub>c ?c = ?v \<Turnstile>\<^sub>c ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Simplex_for_Reals.of_rat_lec_sum",
     "of_rat_lec (sum_list ?c) = sum_list (map of_rat_lec ?c)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Simplex_for_Reals.of_rat_val_eval",
     "?p \<lbrace> of_rat_val ?v \<rbrace> =
      real_of_rat ?p \<lbrace> ?v \<rbrace>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Simplex_for_Reals.of_rat_lec_add",
     "of_rat_lec (?c + ?d) = of_rat_lec ?c + of_rat_lec ?d",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Simplex_for_Reals.sat_scale_rat_real",
     "?v \<Turnstile>\<^sub>c ?c ==> ?v \<Turnstile>\<^sub>c (?r *R ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "checked_simplex ?cs ?J ?s ==> invariant_simplex ?cs ?J ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Simplex_for_Reals.lec_of_constraint_real",
     "is_le ?c ==>
      ?v \<Turnstile>\<^sub>l\<^sub>e of_rat_lec (lec_of_constraint ?c) =
      ?v \<Turnstile>\<^sub>c ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Simplex_for_Reals.of_rat_val_constraints",
     "of_rat_val ?v \<Turnstile>\<^sub>r\<^sub>c\<^sub>s ?cs =
      ?v \<Turnstile>\<^sub>c\<^sub>s ?cs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), t_empty),
       template_app
        (template_app (template_hole 3, template_var 1), t_empty))),
    ("Simplex_for_Reals.simplex_real",
     "simplex ?cs = Inr ?v ==>
      \<langle>?v\<rangle> \<Turnstile>\<^sub>c\<^sub>s set ?cs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty)
           ))),
    ("Simplex_for_Reals.simplex_index_real",
     "simplex_index ?cs = Inr ?v ==>
      \<langle>?v\<rangle> \<Turnstile>\<^sub>c\<^sub>s (snd ` set ?cs)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 1))),
             t_empty)
           ))),
    ("Simplex_for_Reals.simplex_real",
     "simplex ?cs = Inl ?I ==>
      \<nexists>v. v \<Turnstile>\<^sub>r\<^sub>c\<^sub>s set ?cs",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_negation
        (template_predicate (template_app (template_hole 3, t_empty))))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| invariant_simplex ?cs ?J ?s; check_simplex ?s = Inr ?s' |]
      ==> checked_simplex ?cs ?J ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| checked_simplex ?cs ?J ?s; solution_simplex ?s = ?v |]
      ==> (?J, ?v) \<Turnstile>\<^sub>i\<^sub>c\<^sub>s set ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| invariant_simplex ?cs ?J ?s; assert_simplex ?j ?s = Inr ?s' |]
      ==> invariant_simplex ?cs (insert ?j ?J) ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("Simplex_for_Reals.rat_real_conversion",
     "finite ?cs ==>
      (EX v. v \<Turnstile>\<^sub>c\<^sub>s ?cs) =
      (EX v. v \<Turnstile>\<^sub>r\<^sub>c\<^sub>s ?cs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 1, t_empty)))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| invariant_simplex ?cs ?J ?s; assert_all_simplex ?K ?s = Inr ?s' |]
      ==> invariant_simplex ?cs (?J Un set ?K) ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| invariant_simplex ?cs ?J ?s; check_simplex ?s = Inl ?I |]
      ==> set ?I <= ?J & minimal_unsat_core_real (set ?I) ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0)),
               template_var 3))
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| invariant_simplex ?cs ?J ?s; assert_simplex ?j ?s = Inl ?I |]
      ==> set ?I <= insert ?j ?J & minimal_unsat_core_real (set ?I) ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 2),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 0)),
               template_var 4))
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| invariant_simplex ?cs ?J ?s; assert_all_simplex ?K ?s = Inl ?I |]
      ==> set ?I <= set ?K Un ?J & minimal_unsat_core_real (set ?I) ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 2),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_var 1)),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 0)),
               template_var 4))
           ))),
    ("Simplex_for_Reals.incremental_simplex_real",
     "[| checked_simplex ?cs ?J ?s; checkpoint_simplex ?s = ?c;
         invariant_simplex ?cs ?K ?s'; backtrack_simplex ?c ?s' = ?s'';
         ?J <= ?K |]
      ==> invariant_simplex ?cs ?J ?s''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4), template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 6),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 1),
          template_var 0),
        template_inequation (less_equals, template_var 5, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 6),
               template_var 5),
             template_var 0)
           ))),
    ("Simplex_for_Reals.simplex_index_real",
     "simplex_index ?cs = Inl ?I ==>
      set ?I <= fst ` set ?cs &
      (\<nexists>v.
          (set ?I, v) \<Turnstile>\<^sub>r\<^sub>i\<^sub>c\<^sub>s
          set ?cs) &
      (distinct_indices ?cs -->
       (ALL J<set ?I.
           EX v. (J, v) \<Turnstile>\<^sub>i\<^sub>c\<^sub>s set ?cs))",
     template_implication
      ([template_equation
         (template_app (template_hole 18, template_var 1),
          template_app (template_hole 17, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app (template_hole 14, template_var 0)),
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app (template_hole 11, template_var 1)))),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_hole 10,
                   template_app (template_hole 9, t_empty))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 4, t_empty))))
           ))),
    ("Simplex_for_Reals.simplex_real",
     "simplex ?cs = Inl ?I ==>
      set ?I <= {0..<length ?cs} &
      (\<nexists>v.
          v \<Turnstile>\<^sub>r\<^sub>c\<^sub>s {?cs ! i |i. i : set ?I}) &
      (ALL J<set ?I.
          EX v. v \<Turnstile>\<^sub>c\<^sub>s {?cs ! i |i. i : J})",
     template_implication
      ([template_equation
         (template_app (template_hole 21, template_var 1),
          template_app (template_hole 20, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 18,
                   template_app (template_hole 17, template_var 0)),
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_app (template_hole 14, template_var 1)))),
             template_app
              (template_app
                (template_hole 19,
                 template_app
                  (template_hole 13,
                   template_app (template_hole 12, t_empty))),
               template_app (template_hole 4, t_empty)))
           )))]
