Loading theory "HOL-Library.Function_Algebras" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.171s elapsed time, 0.695s cpu time, 0.054s GC time
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.235s elapsed time, 0.883s cpu time, 0.054s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.353s elapsed time, 1.236s cpu time, 0.054s GC time
Loading theory "Draft.HF" (required by "Draft.HFMoreTemplates")
Loading theory "HOL-Library.Stream" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs")
instantiation
  hf :: zero
  zero_hf == zero_class.zero :: hf
instantiation
  hf :: sup
  sup_hf == sup :: hf => hf => hf
instantiation
  hf :: inf
  inf_hf == inf :: hf => hf => hf
instantiation
  hf :: minus
  minus_hf == minus :: hf => hf => hf
instantiation
  hf :: order
  less_eq_hf == less_eq :: hf => hf => bool
  less_hf == less :: hf => hf => bool
instantiation
  hf :: distrib_lattice
instantiation
  hf :: bounded_lattice_bot
  bot_hf == bot :: hf
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
instantiation
  hf :: times
  times_hf == times :: hf => hf => hf
instantiation
  hf :: mult_zero
instantiation
  hf :: zero_neq_one
  one_hf == one_class.one :: hf
instantiation
  hf :: plus
  plus_hf == plus :: hf => hf => hf
### theory "HOL-Library.BigO"
### 0.917s elapsed time, 3.494s cpu time, 0.360s GC time
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
### theory "Draft.HF"
### 0.815s elapsed time, 3.162s cpu time, 0.239s GC time
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.420s elapsed time, 4.686s cpu time, 1.024s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.443s elapsed time, 6.711s cpu time, 1.176s GC time
Loading theory "Draft.Templates" (required by "Draft.HFMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.134s cpu time, 0.062s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.HFMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.511s elapsed time, 0.517s cpu time, 0.000s GC time
Loading theory "Draft.HFMoreTemplates"
val templateLemmas =
   [("HF.finite_hfset", "finite (hfset ?a)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("HF.zero_le", "0 <= ?x",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("HF.hrelation_restr", "hrelation (hrestrict ?r ?x)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("HF.hmem_hempty", "?a \<^bold>\<notin> 0",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("HF.hmem_not_refl", "?x \<^bold>\<notin> ?x",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)
             )
         )),
    ("HF.Inl_nonzero", "HF.Inl ?x ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("HF.Inr_nonzero", "HF.Inr ?x ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("HF.zero_hdiff", "0 - ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("HF.hdiff_zero", "?x - 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("HF.times_empty2", "?A * 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("HF.times_empty1", "0 * ?B = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("HF.HCollect_hempty", "HCollect ?P 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("HF.HF_hfset", "HF (hfset ?a) = ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("HF.HSigma_empty1", "HSigma 0 ?B = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("HF.RepFun_0", "RepFun 0 ?f = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("HF.Replace_0", "Replace 0 ?R = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("HF.hinter_hempty_right", "?A \<sqinter> 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("HF.hinter_hempty_left", "0 \<sqinter> ?A = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("HF.hunion_hempty_right", "?A \<squnion> 0 = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("HF.hunion_hempty_left", "0 \<squnion> ?A = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("HF.zero_notin_hpair", "0 \<^bold>\<notin> <?x, ?y>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("HF.hinsert_nonempty", "?A \<triangleleft> ?a ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("HF.hpair_neq_fst", "<?a, ?b> ~= ?a",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("HF.hpair_neq_snd", "<?a, ?b> ~= ?b",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("HF.hpair_nonzero", "<?x, ?y> ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("HF.triv_RepFun", "{|x . x<: ?A|} = ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), t_empty),
       template_var 0)),
    ("HF.hfst_conv", "hfst <?a, ?b> = ?a",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("HF.hsnd_conv", "hsnd <?a, ?b> = ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("HF.hemptyE", "?a <: 0 ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate (template_var 0))),
    ("HF.hdomain_not_mem", "<hdomain ?r, ?a> \<^bold>\<notin> ?r",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 0)),
               template_var 1)
             )
         )),
    ("HF.less_eq_hempty", "(?u <= 0) = (?u = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("HF.hb_all_simps", "HBall 0 ?P = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("HF.hb_ex_simps", "HBex 0 ?P = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_hole 0)),
    ("HF.Inl_Inr_iff", "(HF.Inl ?a = HF.Inr ?b) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("HF.Inr_Inl_iff", "(HF.Inr ?b = HF.Inl ?a) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("HF.less_two_power", "?n < 2 ^ ?n",
     template_inequation
      (less_than, template_var 0,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("HF.hmem_not_sym", "~ (?x <: ?y & ?y <: ?x)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))
             )
         )),
    ("HF.sum_case_Inl", "sum_case ?f ?g (HF.Inl ?x) = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 2, template_var 0))),
    ("HF.sum_case_Inr", "sum_case ?f ?g (HF.Inr ?y) = ?g ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 1, template_var 0))),
    ("HF.HPow_iff", "(?u <: HPow ?x) = (?u <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("HF.hfunction_restr", "hfunction ?r ==> hfunction (hrestrict ?r ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("HF.hsplit", "hsplit ?c <?a, ?b> = ?c ?a ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("HF.hinsert_eq_sup", "?b \<triangleleft> ?a = ?b \<squnion> {|?a|}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_hole 0)))),
    ("HF.HUnion_hinsert",
     "\<Squnion>(?A \<triangleleft> ?a) = ?a \<squnion> \<Squnion>?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("HF.hdomain_restr",
     "hdomain (hrestrict ?r ?x) = hdomain ?r \<sqinter> ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("HF.app_singleton", "app {|<?x, ?y>|} ?x = ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_var 1),
       template_var 0)),
    ("HF.hfset_hinsert",
     "hfset (?b \<triangleleft> ?a) = insert ?a (hfset ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("HF.Inl_iff", "(HF.Inl ?a = HF.Inl ?b) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("HF.Inr_iff", "(HF.Inr ?a = HF.Inr ?b) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("HF.HPow_mono_strict_iff", "(HPow ?x < HPow ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("HF.HPow_mono_iff", "(HPow ?x <= HPow ?y) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("HF.hfset_HF", "finite ?A ==> hfset (HF ?A) = ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("HF.hmem_ne", "?x <: ?y ==> ?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("HF.HUnion_hunion",
     "\<Squnion>(?A \<squnion> ?B) = \<Squnion>?A \<squnion> \<Squnion>?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("HF.hdomain_hunion",
     "hdomain (?f \<squnion> ?g) = hdomain ?f \<squnion> hdomain ?g",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("HF.hfset_hdiff", "hfset (?x - ?y) = hfset ?x - hfset ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("HF.hempty_iff", "(?z = 0) = (ALL x. x \<^bold>\<notin> ?z)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("HF.hrelation_hunion",
     "hrelation (?f \<squnion> ?g) = (hrelation ?f & hrelation ?g)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("HF.hbex_triv_one_point1", "(EX x<:?A. x = ?a) = (?a <: ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("HF.hbex_triv_one_point2", "HBex ?A ((=) ?a) = (?a <: ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("HF.Inl_in_sum_iff", "(HF.Inl ?a <: ?A + ?B) = (?a <: ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 1))),
    ("HF.Inr_in_sum_iff", "(HF.Inr ?b <: ?A + ?B) = (?b <: ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("HF.hmem_Sup_ne", "?x <: ?y ==> \<Squnion>?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("HF.HPow_mono_strict", "?x < ?y ==> HPow ?x < HPow ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HF.HPow_mono", "?x <= ?y ==> HPow ?x <= HPow ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HF.powerset", "EX z. ALL u. (u <: z) = (u <= ?x)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("HF.hinsert_commute",
     "?z \<triangleleft> ?y \<triangleleft> ?x =
      ?z \<triangleleft> ?x \<triangleleft> ?y",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("HF.hunion_hinsert_right",
     "?B \<squnion> (?A \<triangleleft> ?x) =
      ?B \<squnion> ?A \<triangleleft> ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("HF.hunion_hinsert_left",
     "(?A \<triangleleft> ?x) \<squnion> ?B =
      ?A \<squnion> ?B \<triangleleft> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("HF.hdomain_ins",
     "hdomain (?r \<triangleleft> <?x, ?y>) =
      hdomain ?r \<triangleleft> ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 2, template_var 0)))),
    ("HF.hmem_HF_iff", "(?x <: HF ?A) = (?x : ?A & finite ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("HF.singleton_eq_iff", "({|?a|} = {|?b|}) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_equation (template_var 1, template_var 0))),
    ("HF.hdomainI", "<?x, ?y> <: ?f ==> ?x <: hdomain ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HF.RepFun_hinsert",
     "RepFun (?b \<triangleleft> ?a) ?f =
      RepFun ?b ?f \<triangleleft> ?f ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("HF.hball_triv", "(ALL x<:?A. ?P) = ((EX x. x <: ?A) --> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), t_empty),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("HF.hbex_triv", "(EX x<:?A. ?P) = ((EX x. x <: ?A) & ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), t_empty),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0))),
    ("HF.HCollect_iff", "(?x <: HCollect ?P ?A) = (?P ?x & ?x <: ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 1, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("HF.timesD1", "<?a, ?b> <: ?A * ?B ==> ?a <: ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 1)
           ))),
    ("HF.timesD2", "<?a, ?b> <: ?A * ?B ==> ?b <: ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("HF.HSigmaD1", "<?a, ?b> <: HSigma ?A ?B ==> ?a <: ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 1)
           ))),
    ("HF.hdiff_insert", "?A - (?B \<triangleleft> ?a) = ?A - ?B - {|?a|}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("HF.RepFun_hunion",
     "RepFun (?A \<squnion> ?B) ?f = RepFun ?A ?f \<squnion> RepFun ?B ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("HF.Replace_hunion",
     "Replace (?A \<squnion> ?B) ?R =
      Replace ?A ?R \<squnion> Replace ?B ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("HF.hf_ext", "(?a = ?b) = (ALL x. (x <: ?a) = (x <: ?b))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("HF.hmem_hinsert",
     "(?a <: ?c \<triangleleft> ?b) = (?a = ?b | ?a <: ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("HF.hinter_iff", "(?u <: ?x \<sqinter> ?y) = (?u <: ?x & ?u <: ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("HF.hunion_iff", "(?x <: ?a \<squnion> ?b) = (?x <: ?a | ?x <: ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("HF.times_empty_iff", "(?A * ?B = 0) = (?A = 0 | ?B = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("HF.less_eq_insert1_iff",
     "(?y \<triangleleft> ?x <= ?z) = (?x <: ?z & ?y <= ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("HF.hb_all_simps", "(~ HBall ?A ?P) = (EX x<:?A. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("HF.hb_ex_simps", "(~ HBex ?A ?P) = (ALL x<:?A. ~ ?P x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("HF.HSigmaD2", "<?a, ?b> <: HSigma ?A ?B ==> ?b <: ?B ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_var 0, template_var 3))
           ))),
    ("HF.rev_hsubsetD", "[| ?c <: ?A; ?A <= ?B |] ==> ?c <: ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("HF.hsubsetD", "[| ?A <= ?B; ?c <: ?A |] ==> ?c <: ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("HF.comprehension", "EX z. ALL u. (u <: z) = (u <: ?x & ?P u)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("HF.hcard_hinsert_if",
     "hcard (?y \<triangleleft> ?x) =
      (if ?x <: ?y then hcard ?y else Suc (hcard ?y))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("HF.HUnion_iff", "(?x <: \<Squnion>?A) = (EX y. y <: ?A & ?x <: y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("HF.hdiff_iff",
     "(?u <: ?x - ?y) = (?u <: ?x & ?u \<^bold>\<notin> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("HF.app_hrestrict",
     "?x <: ?A ==> app (hrestrict ?f ?A) ?x = app ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("HF.hcard_hdiff1_less", "?x <: ?z ==> hcard (?z - {|?x|}) < hcard ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app (template_hole 3, template_var 0)))),
    ("HF.hf_equalityI", "(!!x. (x <: ?a) = (x <: ?b)) ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("HF.hbexI", "[| ?P ?x; ?x <: ?A |] ==> HBex ?A ?P",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("HF.rev_hbexI", "[| ?x <: ?A; ?P ?x |] ==> HBex ?A ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("HF.hbspec", "[| HBall ?A ?P; ?x <: ?A |] ==> ?P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("HF.binary_union", "EX z. ALL u. (u <: z) = (u <: ?x | u <: ?y)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("HF.is_hsum_cases",
     "(EX x. ?z = HF.Inl x | ?z = HF.Inr x) | ~ is_hsum ?z",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HF.hcard_union_inter",
     "hcard (?x \<squnion> ?y) + hcard (?x \<sqinter> ?y) =
      hcard ?x + hcard ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("HF.hb_all_simps", "(ALL x<:?A. ?P | ?Q x) = (?P | HBall ?A ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("HF.hb_all_simps", "(ALL x<:?A. ?P x | ?Q) = (HBall ?A ?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_var 0))),
    ("HF.hb_all_simps", "(ALL x<:?A. ?P --> ?Q x) = (?P --> HBall ?A ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("HF.hb_all_simps", "(ALL x<:?A. ?P x --> ?Q) = (HBex ?A ?P --> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)),
         template_var 0))),
    ("HF.hb_ex_simps", "(EX x<:?A. ?P & ?Q x) = (?P & HBex ?A ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("HF.hb_ex_simps", "(EX x<:?A. ?P x & ?Q) = (HBex ?A ?P & ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_var 0))),
    ("HF.times_iff", "(<?a, ?b> <: ?A * ?B) = (?a <: ?A & ?b <: ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("HF.sum_equal_iff", "(?A + ?B = ?C + ?D) = (?A = ?C & ?B = ?D)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("HF.hpair_iff", "(<?a, ?b> = <?a', ?b'>) = (?a = ?a' & ?b = ?b')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("HF.sum_subset_iff", "(?A + ?B <= ?C + ?D) = (?A <= ?C & ?B <= ?D)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("HF.HInter_hinsert",
     "?A ~= 0 ==>
      \<Sqinter>(?A \<triangleleft> ?a) = ?a \<sqinter> \<Sqinter>?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("HF.hsubsetI", "(!!x. x <: ?A ==> x <: ?B) ==> ?A <= ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("HF.contra_hsubsetD", "[| ?A <= ?B; ?c ~: ?B |] ==> ?c ~: ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)
               )
           ))),
    ("HF.rev_contra_hsubsetD", "[| ?c ~: ?B; ?A <= ?B |] ==> ?c ~: ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)
               )
           ))),
    ("HF.RepFun_iff", "(?v <: RepFun ?A ?f) = (EX u. u <: ?A & ?v = ?f u)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("HF.hb_all_simps",
     "HBall (HCollect ?Q ?A) ?P = (ALL x<:?A. ?Q x --> ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("HF.hb_all_simps",
     "HBall (?B \<triangleleft> ?a) ?P = (?P ?a & HBall ?B ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("HF.hb_ex_simps", "HBex (HCollect ?Q ?A) ?P = (EX x<:?A. ?Q x & ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("HF.hb_ex_simps",
     "HBex (?B \<triangleleft> ?a) ?P = (?P ?a | HBex ?B ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("HF.HSigma_iff",
     "(<?a, ?b> <: HSigma ?A ?B) = (?a <: ?A & ?b <: ?B ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_var 0, template_var 3))))),
    ("HF.HUN_iff",
     "(?b <: \<Squnion>RepFun ?A ?B) = (EX x<:?A. ?b <: ?B x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1), t_empty))),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("HF.hball_one_point1",
     "(ALL x<:?A. x = ?a --> ?P x) = (?a <: ?A --> ?P ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("HF.hball_one_point2",
     "(ALL x<:?A. ?a = x --> ?P x) = (?a <: ?A --> ?P ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("HF.hbex_one_point1", "(EX x<:?A. x = ?a & ?P x) = (?a <: ?A & ?P ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("HF.hbex_one_point2", "(EX x<:?A. ?a = x & ?P x) = (?a <: ?A & ?P ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app (template_var 0, template_var 1)))),
    ("HF.hballI", "(!!x. x <: ?A ==> ?P x) ==> HBall ?A ?P",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("HF.app_equality",
     "[| hfunction ?f; <?x, ?y> <: ?f |] ==> app ?f ?x = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("HF.HCollectI", "[| ?a <: ?A; ?P ?a |] ==> ?a <: HCollect ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))
           ))),
    ("HF.union_of_set", "EX z. ALL u. (u <: z) = (EX y. y <: ?x & u <: y)",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("HF.le_HCollect_iff",
     "(?A <= HCollect ?P ?B) = (?A <= ?B & HBall ?A ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("HF.app_ins2",
     "?x' ~= ?x ==> app (?f \<triangleleft> <?x, ?y>) ?x' = app ?f ?x'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 3)))),
    ("HF.foundation", "?z ~= 0 ==> EX w. w <: ?z & w \<sqinter> ?z = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("HF.hfunction_ins",
     "[| hfunction ?f; ?x \<^bold>\<notin> hdomain ?f |]
      ==> hfunction (?f \<triangleleft> <?x, ?y>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("HF.timesI", "[| ?a <: ?A; ?b <: ?B |] ==> <?a, ?b> <: ?A * ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HF.replacement_fun",
     "EX z. ALL v. (v <: z) = (EX u. u <: ?x & v = ?f u)",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("HF.hinsert_hdiff_if",
     "(?A \<triangleleft> ?x) - ?B =
      (if ?x <: ?B then ?A - ?B else ?A - ?B \<triangleleft> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("HF.hinter_hinsert_right",
     "?B \<sqinter> (?A \<triangleleft> ?x) =
      (if ?x <: ?B then ?B \<sqinter> ?A \<triangleleft> ?x
       else ?B \<sqinter> ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("HF.hinter_hinsert_left",
     "(?A \<triangleleft> ?x) \<sqinter> ?B =
      (if ?x <: ?B then ?A \<sqinter> ?B \<triangleleft> ?x
       else ?A \<sqinter> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("HF.HSigmaI",
     "[| ?a <: ?A; ?b <: ?B ?a |] ==> <?a, ?b> <: HSigma ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("HF.hinsert_iff",
     "(?z = ?x \<triangleleft> ?y) =
      (ALL u. (u <: ?z) = (u <: ?x | u = ?y))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("HF.hfunction_hunion",
     "hdomain ?f \<sqinter> hdomain ?g = 0 ==>
      hfunction (?f \<squnion> ?g) = (hfunction ?f & hfunction ?g)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("HF.HUN_I",
     "[| ?a <: ?A; ?b <: ?B ?a |] ==> ?b <: \<Squnion>RepFun ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2), t_empty)))
           ))),
    ("HF.hf_equalityE",
     "[| ?A = ?B; [| ?A <= ?B; ?B <= ?A |] ==> ?P |] ==> ?P",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_implication
         ([template_inequation
            (less_equals, template_var 2, template_var 1)],
          template_implication
           ([template_inequation
              (less_equals, template_var 1, template_var 2)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HF.HINT_E",
     "[| ?b <: \<Sqinter>RepFun ?A ?B; ?a <: ?A |] ==> ?b <: ?B ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2), t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_var 1, template_var 0))
           ))),
    ("HF.hball_conj_distrib",
     "(ALL x<:?A. ?P x & ?Q x) = (HBall ?A ?P & HBall ?A ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("HF.hbex_disj_distrib",
     "(EX x<:?A. ?P x | ?Q x) = (HBex ?A ?P | HBex ?A ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)))),
    ("HF.Rep_hf_hinsert",
     "?a \<^bold>\<notin> ?b ==>
      Rep_hf (?b \<triangleleft> ?a) = 2 ^ Rep_hf ?a + Rep_hf ?b",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_app (template_hole 6, template_var 1))),
           template_app (template_hole 6, template_var 0))))),
    ("HF.HInter_iff",
     "?A ~= 0 ==> (?x <: \<Sqinter>?A) = (ALL y. y <: ?A --> ?x <: y)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, t_empty)))),
    ("HF.HINT_iff",
     "(?b <: \<Sqinter>RepFun ?A ?B) = ((ALL x<:?A. ?b <: ?B x) & ?A ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1), t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1), t_empty)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("HF.hf_induct_ax",
     "[| ?P 0; ALL x. ?P x --> (ALL y. ?P y --> ?P (x \<triangleleft> y)) |]
      ==> ?P ?x",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("HF.hbexE", "[| HBex ?A ?P; !!x. [| x <: ?A; ?P x |] ==> ?Q |] ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("HF.HCollectE",
     "[| ?a <: HCollect ?P ?A; [| ?a <: ?A; ?P ?a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, t_empty), template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (template_app (template_var 2, template_var 3))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HF.bexCI",
     "[| ALL x<:?A. ~ ?P x ==> ?P ?a; ?a <: ?A |] ==> HBex ?A ?P",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2), t_empty)
               )],
          template_predicate
           (template_app (template_var 1, template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)
           ))),
    ("HF.hrestrict_iff",
     "(?z <: hrestrict ?r ?A) =
      (?z <: ?r & (EX x y. ?z = <x, y> & x <: ?A))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("HF.timesE2",
     "[| <?a, ?b> <: ?A * ?B; [| ?a <: ?A; ?b <: ?B |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HF.hpair_inject",
     "[| <?a, ?b> = <?a', ?b'>; [| ?a = ?a'; ?b = ?b' |] ==> ?R |] ==> ?R",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HF.hsubsetCE",
     "[| ?A <= ?B; ?c \<^bold>\<notin> ?A ==> ?P; ?c <: ?B ==> ?P |]
      ==> ?P",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)
                   )
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("HF.HSigmaE2",
     "[| <?a, ?b> <: HSigma ?A ?B;
         [| ?a <: ?A; ?b <: ?B ?a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app (template_var 1, template_var 4))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("HF.hballE",
     "[| HBall ?A ?P; ?P ?x ==> ?Q; ?x \<^bold>\<notin> ?A ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3), t_empty)
            ),
        template_implication
         ([template_predicate
            (template_app (template_var 2, template_var 1))],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)
                   )
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("HF.Replace_iff",
     "(?v <: Replace ?A ?R) =
      (EX u. u <: ?A & ?R u ?v & (ALL y. ?R u y --> y = ?v))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("HF.less_eq_insert2_iff",
     "(?z <= ?y \<triangleleft> ?x) =
      (?z <= ?y |
       (EX u. u \<triangleleft> ?x = ?z &
              ?x \<^bold>\<notin> u & u <= ?y))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 0)),
         template_app (template_hole 4, t_empty)))),
    ("HF.RepFun_cong",
     "[| ?A = ?B; !!x. x <: ?B ==> ?f x = ?g x |]
      ==> RepFun ?A ?f = RepFun ?B ?g",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("HF.sum_iff",
     "(?u <: ?A + ?B) =
      ((EX x. x <: ?A & ?u = HF.Inl x) | (EX y. y <: ?B & ?u = HF.Inr y))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("HF.doubleton_eq_iff",
     "({|?a, ?b|} = {|?c, ?d|}) = (?a = ?c & ?b = ?d | ?a = ?d & ?b = ?c)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_hole 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)))
           ))),
    ("HF.HUN_E",
     "[| ?b <: \<Squnion>RepFun ?A ?B;
         !!x. [| x <: ?A; ?b <: ?B x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2), t_empty)))
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("HF.HINT_I",
     "[| !!x. x <: ?A ==> ?b <: ?B x; ?A ~= 0 |]
      ==> ?b <: \<Sqinter>RepFun ?A ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2), t_empty)))
           ))),
    ("HF.hf_cases",
     "[| ?y = 0 ==> ?thesis;
         !!a b.
            [| ?y = b \<triangleleft> a; a \<^bold>\<notin> b |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 4)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("HF.hf_induct",
     "[| ?P 0;
         !!x y.
            [| ?P x; ?P y; x \<^bold>\<notin> y |]
            ==> ?P (y \<triangleleft> x) |]
      ==> ?P ?z",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("HF.hball_cong",
     "[| ?A = ?A'; !!x. x <: ?A' ==> ?P x = ?P' x |]
      ==> HBall ?A ?P = HBall ?A' ?P'",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("HF.hbex_cong",
     "[| ?A = ?A'; !!x. x <: ?A' ==> ?P x = ?P' x |]
      ==> HBex ?A ?P = HBex ?A' ?P'",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("HF.Replace_cong",
     "[| ?A = ?B; !!x y. x <: ?B ==> ?P x y = ?Q x y |]
      ==> Replace ?A ?P = Replace ?B ?Q",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("HF.HF_HUnion",
     "[| finite ?A; !!x. x : ?A ==> finite (?B x) |]
      ==> HF (\<Union> (?B ` ?A)) = (UN x<:HF ?A. HF (?B x))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1)),
             t_empty))))),
    ("HF.timesE",
     "[| ?c <: ?A * ?B;
         !!x y. [| x <: ?A; y <: ?B; ?c = <x, y> |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("HF.HSigmaE",
     "[| ?c <: HSigma ?A ?B;
         !!x y. [| x <: ?A; y <: ?B x; ?c = <x, y> |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("HF.sum_case_split",
     "?P (sum_case ?f ?g ?a) =
      ((ALL x. ?a = HF.Inl x --> ?P (?f x)) &
       (ALL y. ?a = HF.Inr y --> ?P (?g y)) &
       (~ is_hsum ?a --> ?P undefined))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app (template_var 3, template_hole 0)))))),
    ("HF.finite_cases",
     "[| finite ?F; ?F = {} ==> ?P;
         !!A x. [| ?F = insert x A; x ~: A; finite A |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_implication
         ([template_equation (template_var 1, template_hole 5)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("HF.sum_case_split_asm",
     "?P (sum_case ?f ?g ?a) =
      (~ ((EX x. ?a = HF.Inl x & ~ ?P (?f x)) |
          (EX y. ?a = HF.Inr y & ~ ?P (?g y)) |
          ~ is_hsum ?a & ~ ?P undefined))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 8,
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_hole 8,
                 template_app (template_var 3, template_hole 0)))))))),
    ("HF.PrimReplace_iff",
     "ALL u v v'. u <: ?A --> ?R u v --> ?R u v' --> v' = v ==>
      (?v <: PrimReplace ?A ?R) = (EX u. u <: ?A & ?R u ?v)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, t_empty)))),
    ("HF.replacement",
     "ALL u v v'. u <: ?x --> ?R u v --> ?R u v' --> v' = v ==>
      EX z. ALL v. (v <: z) = (EX u. u <: ?x & ?R u v)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HF.sumE",
     "[| ?u <: ?A + ?B; !!x. [| x <: ?A; ?u = HF.Inl x |] ==> ?thesis;
         !!y. [| y <: ?B; ?u = HF.Inr y |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.HFMoreTemplates"
### 0.410s elapsed time, 0.554s cpu time, 0.062s GC time
val it = (): unit
