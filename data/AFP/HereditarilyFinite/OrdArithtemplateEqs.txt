   [("OrdArith.hadd_0_left", "0 @+ ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("OrdArith.hadd_0_right", "?x @+ 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("OrdArith.pred_succ", "pred (succ ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("OrdArith.hfunction_shift_iff",
     "hfunction (shift ?f ?delta) = hfunction ?f",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("OrdArith.hdomain_shift_disjoint",
     "?delta \<sqinter> hdomain (shift ?f ?delta) = 0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))),
       template_hole 0)),
    ("OrdArith.RepFun_hadd_disjoint",
     "?x \<sqinter> RepFun ?y ((@+) ?x) = 0",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1))),
       template_hole 0)),
    ("OrdArith.hadd_succ_right", "?x @+ succ ?y = succ (?x @+ ?y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("OrdArith.hmem_self_hadd", "(?k1.0 <: ?k1.0 @+ ?k2.0) = (0 <: ?k2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 0), template_var 0))),
    ("OrdArith.ord_of_add", "ord_of (?i + ?j) = ord_of ?i @+ ord_of ?j",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("OrdArith.OrdDom_hunion",
     "OrdDom (?s1.0 \<squnion> ?s2.0) = (OrdDom ?s1.0 & OrdDom ?s2.0)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("OrdArith.hadd_assoc", "?x @+ ?y @+ ?z = ?x @+ (?y @+ ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("OrdArith.app_shift", "app (shift ?f ?k) (?k @+ ?j) = app ?f ?j",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("OrdArith.hadd_hmem_cancel", "(?x @+ ?y <: ?x @+ ?z) = (?y <: ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("OrdArith.hadd_cancel_right", "(?x @+ ?y = ?x @+ ?z) = (?y = ?z)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("OrdArith.hadd", "?x @+ ?y = ?x \<squnion> RepFun ?y ((@+) ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), t_empty)))),
    ("OrdArith.hdomain_shift_add",
     "hdomain (shift ?f ?delta) = RepFun (hdomain ?f) ((@+) ?delta)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         t_empty))),
    ("OrdArith.hadd_hinsert_right",
     "?x @+ (?z \<triangleleft> ?y) = ?x @+ ?z \<triangleleft> ?x @+ ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("OrdArith.hmem_shift_add_iff",
     "(<?delta @+ ?n, ?y> <: shift ?f ?delta) = (<?n, ?y> <: ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 3)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0))),
    ("OrdArith.RepFun_hadd_cancel",
     "(RepFun ?y ((@+) ?x) = RepFun ?z ((@+) ?x)) = (?y = ?z)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), t_empty),
         template_app
          (template_app (template_hole 1, template_var 0), t_empty)),
       template_equation (template_var 2, template_var 0))),
    ("OrdArith.hmem_shift_iff",
     "(<?m, ?y> <: shift ?f ?delta) =
      (EX n. ?m = ?delta @+ n & <n, ?y> <: ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("OrdArith.BuildSeq_conj_distrib",
     "BuildSeq (%x. ?B x & ?P x) (%x y z. ?C x y z & ?P x) ?s ?k ?y =
      (BuildSeq ?B ?C ?s ?k ?y & (ALL l<:succ ?k. ?P (app ?s l)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, t_empty), t_empty),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           t_empty))))]
