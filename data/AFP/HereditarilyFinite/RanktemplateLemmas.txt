   [("Rank.Ord_rank", "Ord (rank ?a)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Rank.Transset_eclose", "Transset (eclose ?X)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Rank.le_eclose", "?X <= eclose ?X",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Rank.le_Vset_rank", "?a <= Vset (rank ?a)",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Rank.in_Vset_rank", "?a <: Vset (succ (rank ?a))",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Rank.fst_in_eclose", "?x <: eclose <?x, ?y>",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Rank.snd_in_eclose", "?y <: eclose <?x, ?y>",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))
         )),
    ("Rank.rank_eclose", "rank (eclose ?x) = rank ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rank.Vset_Transset", "Ord ?m ==> Transset (Vset ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Rank.eclose_succ", "eclose (succ ?a) = eclose ?a \<triangleleft> ?a",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("Rank.rank_singleton", "rank {|?a|} = succ (rank ?a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Rank.Vset_universal", "EX n. Ord n & ?x <: Vset n",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Rank.eclose_singleton",
     "eclose {|?a|} = eclose ?a \<triangleleft> ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("Rank.Vset_non", "~ Ord ?x ==> Vset ?x = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Rank.hmemrec", "hmemrec ?G ?a = ?G (ecut (hmemrec ?G) ?a) ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app
          (template_var 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 0))),
    ("Rank.eclose_sup",
     "eclose (?a \<squnion> ?b) = eclose ?a \<squnion> eclose ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Rank.rank_sup",
     "rank (?a \<squnion> ?b) = rank ?a \<squnion> rank ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Rank.hmem_rel_iff_hmem_eclose",
     "((?x, ?y) : hmem_rel) = (?x <: eclose ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Rank.rank_lt", "?a <: ?b ==> rank ?a < rank ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Rank.hmem_eclose_le", "?y <: ?x ==> eclose ?y <= eclose ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Rank.rank_mono", "?x <= ?y ==> rank ?x <= rank ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Rank.Vset_rank_lt", "?a <: Vset ?k ==> rank ?a < ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Rank.rank_hinsert",
     "rank (?b \<triangleleft> ?a) = rank ?b \<squnion> succ (rank ?a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 1))))),
    ("Rank.Vset_succ", "Ord ?k ==> Vset (succ ?k) = HPow (Vset ?k)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Rank.Sup_ne", "?x ~= 0 ==> \<Squnion>?x ~= ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 0), template_var 0)
           ))),
    ("Rank.eclose_hinsert",
     "eclose (?b \<triangleleft> ?a) =
      eclose ?b \<squnion> (eclose ?a \<triangleleft> ?a)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 2, template_var 1))))),
    ("Rank.rank_HUnion_less", "?x ~= 0 ==> rank (\<Squnion>?x) < rank ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Rank.Ord_inf", "[| Ord ?k; Ord ?l |] ==> Ord (?k \<sqinter> ?l)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Rank.Ord_sup", "[| Ord ?k; Ord ?l |] ==> Ord (?k \<squnion> ?l)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Rank.ecut_apply", "?y <: eclose ?x ==> ecut ?f ?x ?y = ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Rank.eclose_minimal",
     "[| Transset ?Y; ?X <= ?Y |] ==> eclose ?X <= ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Rank.RepFun_ecut",
     "?y <= ?z ==> RepFun ?y (ecut ?f ?z) = RepFun ?y ?f",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Rank.Vset_mono_strict",
     "[| Ord ?m; ?n <: ?m |] ==> Vset ?n < Vset ?m",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Rank.Vset_mono", "[| Ord ?m; ?n <= ?m |] ==> Vset ?n <= Vset ?m",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Rank.Vset_succ_rank_le",
     "[| Ord ?k; ?a <: Vset (succ ?k) |] ==> rank ?a <= ?k",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Rank.VsetI", "[| succ (rank ?a) <= ?k; Ord ?k |] ==> ?a <: Vset ?k",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1)),
          template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Rank.OrdLeast_Ord",
     "[| Ord ?k; ?P ?k |] ==> Ord (LEAST n. Ord n & ?P n)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Rank.OrdLeastI", "[| Ord ?k; ?P ?k |] ==> ?P (LEAST n. Ord n & ?P n)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 1, t_empty))
           ))),
    ("Rank.OrdLeast_le",
     "[| Ord ?k; ?P ?k |] ==> (LEAST n. Ord n & ?P n) <= ?k",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_inequation
        (less_equals, template_app (template_hole 1, t_empty),
         template_var 1))),
    ("Rank.hmem_induct", "(!!x. (!!y. y <: x ==> ?P y) ==> ?P x) ==> ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Rank.hmem_rel_induct",
     "(!!x. (!!y. (y, x) : hmem_rel ==> ?P y) ==> ?P x) ==> ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Rank.Ord_minimal",
     "[| Ord ?k; ?P ?k |]
      ==> EX n. Ord n & ?P n & (ALL m. Ord m & ?P m --> n <= m)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty))))]
