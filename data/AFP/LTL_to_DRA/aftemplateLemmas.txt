   [("af.Rep_Abs_equiv", "Rep (Abs ?\<phi>) \<equiv>\<^sub>P ?\<phi>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("af.af\<^sub>G_simps", "af\<^sub>G false ?w = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("af.af\<^sub>G_simps", "af\<^sub>G true ?w = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("af.af_simps", "af false ?w = false",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("af.af_simps", "af true ?w = true",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("af.nested_propos",
     "nested_propos (Unf ?\<phi>) <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("af.nested_propos",
     "nested_propos (Unf\<^sub>G ?\<phi>) <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("af.af_G_nested_propos",
     "nested_propos (af_G_letter ?\<phi> ?\<nu>) <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("af.nested_propos",
     "nested_propos (af_G_letter_opt ?\<phi> ?\<nu>)
      <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("af.af_nested_propos",
     "nested_propos (af_letter ?\<phi> ?\<nu>) <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("af.nested_propos",
     "nested_propos (af_letter_opt ?\<phi> ?\<nu>)
      <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("af.nested_propos",
     "nested_propos (step ?\<phi> ?\<nu>) <= nested_propos ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("af.G_af\<^sub>G_simp",
     "\<^bold>G (af\<^sub>G ?\<phi> ?w) = \<^bold>G ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("af.G_af_simp", "\<^bold>G (af ?\<phi> ?w) = \<^bold>G ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("Tree.Leaf_mirror",
     "(\<langle>\<rangle> = mirror ?t) = (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_equation (template_var 0, template_hole 1))),
    ("Tree.mirror_Leaf",
     "(mirror ?t = \<langle>\<rangle>) = (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("af.af\<^sub>G_simps", "af\<^sub>G (G ?\<phi>) ?w = G ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("af.af_G_letter_abs_opt_split",
     "\<up>Unf\<^sub>G (\<up>step ?\<Phi> ?\<nu>) =
      \<up>af\<^sub>G\<^sub>\<UU> ?\<Phi> ?\<nu>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Tree.eq_Leaf_map_tree",
     "(\<langle>\<rangle> = map_tree ?f ?t) = (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Tree.eq_map_tree_Leaf",
     "(map_tree ?f ?t = \<langle>\<rangle>) = (?t = \<langle>\<rangle>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("af.af_equals_af\<^sub>G_base_cases",
     "af false ?w = af\<^sub>G false ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 0),
           template_hole 1),
         template_var 0))),
    ("af.af_equals_af\<^sub>G_base_cases",
     "af true ?w = af\<^sub>G true ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 0),
           template_hole 1),
         template_var 0))),
    ("af.Rep_step",
     "Rep (\<up>step ?\<Phi> ?\<nu>) \<equiv>\<^sub>P
      step (Rep ?\<Phi>) ?\<nu>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_var 0))
         )),
    ("af.respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      Unf ?\<phi> \<equiv>\<^sub>P Unf ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      Unf\<^sub>G ?\<phi> \<equiv>\<^sub>P Unf\<^sub>G ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      Unf ?\<phi> \<longrightarrow>\<^sub>P Unf ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      Unf\<^sub>G ?\<phi> \<longrightarrow>\<^sub>P Unf\<^sub>G ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("af.af_equals_af\<^sub>G_base_cases",
     "af p(?a) ?w = af\<^sub>G p(?a) ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 0),
           template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("af.af_equals_af\<^sub>G_base_cases",
     "af (np(?a)) ?w = af\<^sub>G (np(?a)) ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 0),
           template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("af.af_to_af_opt",
     "Unf (af ?\<phi> ?w) = af\<^sub>\<UU> (Unf ?\<phi>) ?w",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 0),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("af.af_to_af_opt",
     "Unf\<^sub>G (af\<^sub>G ?\<phi> ?w) =
      af\<^sub>G\<^sub>\<UU> (Unf\<^sub>G ?\<phi>) ?w",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 0),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("af.af_ltl_continuation",
     "(?w \<frown> ?w') \<Turnstile> ?\<phi> =
      ?w' \<Turnstile> af ?\<phi> ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 2)))),
    ("af.af\<^sub>G_simps",
     "af\<^sub>G (X ?\<phi>) (?x # ?xs) = af\<^sub>G ?\<phi> ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 2),
         template_var 0))),
    ("af.af_simps", "af (X ?\<phi>) (?x # ?xs) = af ?\<phi> ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 2),
         template_var 0))),
    ("af.af_G_respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      af_G_letter ?\<phi> ?\<nu> \<equiv>\<^sub>P
      af_G_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      af_G_letter_opt ?\<phi> ?\<nu> \<equiv>\<^sub>P
      af_G_letter_opt ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.af_respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      af_letter ?\<phi> ?\<nu> \<equiv>\<^sub>P af_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      af_letter_opt ?\<phi> ?\<nu> \<equiv>\<^sub>P
      af_letter_opt ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      step ?\<phi> ?\<nu> \<equiv>\<^sub>P step ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.af_G_respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af_G_letter ?\<phi> ?\<nu> \<longrightarrow>\<^sub>P
      af_G_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af_G_letter_opt ?\<phi> ?\<nu> \<longrightarrow>\<^sub>P
      af_G_letter_opt ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.af_respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af_letter ?\<phi> ?\<nu> \<longrightarrow>\<^sub>P
      af_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af_letter_opt ?\<phi> ?\<nu> \<longrightarrow>\<^sub>P
      af_letter_opt ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.respectfulness",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      step ?\<phi> ?\<nu> \<longrightarrow>\<^sub>P step ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.af_G_letter_free_F",
     "\<^bold>G ?\<phi> = {} ==>
      \<^bold>G (af_G_letter ?\<phi> ?\<nu>) = {}",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("af.af_G_letter_free_F",
     "\<^bold>G ?\<phi> = {} ==> \<^bold>G (af_letter ?\<phi> ?\<nu>) = {}",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("af.af_G_respectfulness'",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      af\<^sub>G ?\<phi> ?w \<equiv>\<^sub>P af\<^sub>G ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af_respectfulness'",
     "?\<phi> \<equiv>\<^sub>P ?\<psi> ==>
      af ?\<phi> ?w \<equiv>\<^sub>P af ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af_G_respectfulness'",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af\<^sub>G ?\<phi> ?w \<longrightarrow>\<^sub>P
      af\<^sub>G ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af_respectfulness'",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af ?\<phi> ?w \<longrightarrow>\<^sub>P af ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af_implies_af\<^sub>G",
     "?S \<Turnstile>\<^sub>P af ?\<phi> ?w ==>
      ?S \<Turnstile>\<^sub>P af\<^sub>G ?\<phi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af_implies_af\<^sub>G_2",
     "?w \<Turnstile> af ?\<phi> ?xs ==>
      ?w \<Turnstile> af\<^sub>G ?\<phi> ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af_ltl_continuation_suffix",
     "?w \<Turnstile> ?\<phi> =
      suffix ?i ?w \<Turnstile> af ?\<phi> (prefix ?i ?w)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0),
             template_var 0))))),
    ("af.af_G_free",
     "\<^bold>G ?\<phi> = {} ==> af ?\<phi> ?w = af\<^sub>G ?\<phi> ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 0),
             template_var 1),
           template_var 0)))),
    ("af.af\<^sub>G_decompose",
     "af\<^sub>G (?\<phi> and ?\<psi>) ?w =
      af\<^sub>G ?\<phi> ?w and af\<^sub>G ?\<psi> ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("af.af\<^sub>G_decompose",
     "af\<^sub>G (?\<phi> or ?\<psi>) ?w =
      af\<^sub>G ?\<phi> ?w or af\<^sub>G ?\<psi> ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("af.af_decompose",
     "af (?\<phi> and ?\<psi>) ?w = af ?\<phi> ?w and af ?\<psi> ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("af.af_decompose",
     "af (?\<phi> or ?\<psi>) ?w = af ?\<phi> ?w or af ?\<psi> ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("af.af_equiv",
     "af ?\<phi> (?w @ [?\<nu>]) =
      step (af\<^sub>\<UU> (Unf ?\<phi>) ?w) ?\<nu>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_var 0))),
    ("af.af_abs_equiv",
     "foldl \<up>af ?\<psi> (?xs @ [?x]) =
      \<up>step (foldl \<up>af\<^sub>\<UU> (\<up>Unf ?\<psi>) ?xs) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_var 0))),
    ("Tree.neq_Leaf_iff",
     "(?t ~= \<langle>\<rangle>) =
      (EX l a r. ?t = \<langle>l, a, r\<rangle>)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app (template_hole 2, t_empty))),
    ("af.af\<^sub>G_F",
     "af\<^sub>G (F ?\<phi>) ?w =
      Or (F ?\<phi> # map (af\<^sub>G ?\<phi>) (suffixes ?w))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("af.af_F",
     "af (F ?\<phi>) ?w = Or (F ?\<phi> # map (af ?\<phi>) (suffixes ?w))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("af.af_G",
     "af (G ?\<phi>) ?w = And (G ?\<phi> # map (af ?\<phi>) (suffixes ?w))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("af.af_equiv'",
     "af ?\<phi> (prefix (Suc ?i) ?w) =
      step (af\<^sub>\<UU> (Unf ?\<phi>) (prefix ?i ?w)) (?w ?i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4),
               template_var 0))),
         template_app (template_var 1, template_var 0)))),
    ("af.Unf\<^sub>G_\<G>",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P Unf\<^sub>G ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("af.af_G_letter_sat_core",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P af_G_letter ?\<phi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.af_G_letter_opt_sat_core",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P af_G_letter_opt ?\<phi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.step_\<G>",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P step ?\<phi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("af.af\<^sub>G_sat_core",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P af\<^sub>G ?\<phi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af\<^sub>G_keeps_F_and_S",
     "[| ?ys ~= []; ?S \<Turnstile>\<^sub>P af\<^sub>G ?\<phi> ?ys |]
      ==> ?S \<Turnstile>\<^sub>P af\<^sub>G (F ?\<phi>) (?xs @ ?ys)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("af.af_G_letter_sat_core_lifted",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P Rep ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P Rep (\<up>af\<^sub>G ?\<phi> ?\<nu>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("af.af_G_letter_opt_sat_core_lifted",
     "[| Only_G ?\<G>; ?\<G> \<Turnstile>\<^sub>P Rep ?\<phi> |]
      ==> ?\<G> \<Turnstile>\<^sub>P
          Rep (\<up>af\<^sub>G\<^sub>\<UU> ?\<phi> ?\<nu>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Real_Vector_Spaces.real_vector_eq_affinity",
     "?m ~= 0 ==>
      (?y = ?m *\<^sub>R ?x + ?c) =
      (?y /\<^sub>R ?m - ?c /\<^sub>R ?m = ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6))],
       template_bimplication
        (template_equation
          (template_var 2,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_var 0)),
         template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 3)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 3)),
               template_var 0)),
           template_var 1)))),
    ("Real_Vector_Spaces.real_vector_affinity_eq",
     "?m ~= 0 ==>
      (?m *\<^sub>R ?x + ?c = ?y) =
      (?x = ?y /\<^sub>R ?m - ?c /\<^sub>R ?m)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_equation
          (template_var 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 3)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 3)),
               template_var 1)))))),
    ("af.af_G_ltl_continuation",
     "ALL \<psi>:\<^bold>G ?\<phi>.
         ?w' \<Turnstile> \<psi> = (?w \<frown> ?w') \<Turnstile> \<psi> ==>
      (?w \<frown> ?w') \<Turnstile> ?\<phi> =
      ?w' \<Turnstile> af\<^sub>G ?\<phi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0))))),
    ("af.af\<^sub>G_eval\<^sub>G",
     "Only_G ?\<G> ==>
      ?\<G> \<Turnstile>\<^sub>P
      af\<^sub>G (eval\<^sub>G ?\<G> ?\<phi>) ?w =
      ?\<G> \<Turnstile>\<^sub>P
      eval\<^sub>G ?\<G> (af\<^sub>G ?\<phi> ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_var 0)))))),
    ("af.af\<^sub>G_U",
     "af\<^sub>G (?\<phi> U ?\<psi>) (?x # ?xs) =
      af\<^sub>G (?\<phi> U ?\<psi>)
       ?xs and af\<^sub>G ?\<phi>
                (?x # ?xs) or af\<^sub>G ?\<psi> (?x # ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("af.af_U",
     "af (?\<phi> U ?\<psi>) (?x # ?xs) =
      af (?\<phi> U ?\<psi>)
       ?xs and af ?\<phi> (?x # ?xs) or af ?\<psi> (?x # ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("af.af\<^sub>G_ltl_continuation_suffix",
     "ALL \<psi>:\<^bold>G ?\<phi>.
         ?w \<Turnstile> \<psi> = suffix ?i ?w \<Turnstile> \<psi> ==>
      ?w \<Turnstile> ?\<phi> =
      suffix ?i ?w \<Turnstile> af\<^sub>G ?\<phi> (prefix ?i ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0),
               template_var 0)))))),
    ("af.af\<^sub>G_sat_core_generalized",
     "[| Only_G ?\<G>; ?i <= ?j;
         ?\<G> \<Turnstile>\<^sub>P af\<^sub>G ?\<phi> (prefix ?i ?w) |]
      ==> ?\<G> \<Turnstile>\<^sub>P af\<^sub>G ?\<phi> (prefix ?j ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4), t_empty)
            ),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 0),
                    template_hole 0),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0),
                 template_var 2)))
           ))),
    ("af.af\<^sub>G_subsequence_U",
     "af\<^sub>G (?\<phi> U ?\<psi>) (prefix (Suc ?n) ?w) =
      af\<^sub>G (?\<phi> U ?\<psi>)
       (?w [1 \<rightarrow> Suc ?n]) and af\<^sub>G ?\<phi>
    (prefix (Suc ?n) ?w) or af\<^sub>G ?\<psi> (prefix (Suc ?n) ?w)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 0),
                   template_app (template_hole 3, template_var 0)))),
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4),
                 template_app (template_hole 3, template_var 0))))),
         template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 5, template_var 1),
               template_hole 4),
             template_app (template_hole 3, template_var 0)))))),
    ("af.af\<^sub>G_implies_af_eval\<^sub>G'",
     "[| ?S \<Turnstile>\<^sub>P eval\<^sub>G ?\<G> (af\<^sub>G ?\<phi> ?w);
         !!\<psi>. G \<psi> : ?\<G> ==> ?S \<Turnstile>\<^sub>P G \<psi>;
         !!\<psi> i.
            [| G \<psi> : ?\<G>; i < length ?w |]
            ==> ?S \<Turnstile>\<^sub>P
                eval\<^sub>G ?\<G> (af\<^sub>G \<psi> (drop i ?w)) |]
      ==> ?S \<Turnstile>\<^sub>P af ?\<phi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 9, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("af.af\<^sub>G_implies_af_eval\<^sub>G",
     "[| ?S \<Turnstile>\<^sub>P
         eval\<^sub>G ?\<G> (af\<^sub>G ?\<phi> (prefix ?j ?w));
         !!\<psi>. G \<psi> : ?\<G> ==> ?S \<Turnstile>\<^sub>P G \<psi>;
         !!\<psi> i.
            [| G \<psi> : ?\<G>; i <= ?j |]
            ==> ?S \<Turnstile>\<^sub>P
                eval\<^sub>G ?\<G>
                 (af\<^sub>G \<psi> (?w [i \<rightarrow> ?j])) |]
      ==> ?S \<Turnstile>\<^sub>P af ?\<phi> (prefix ?j ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 2),
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 1),
                      template_hole 6),
                    template_var 0))))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 9, template_hole 0),
                 template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 6),
                 template_var 0)))
           )))]
