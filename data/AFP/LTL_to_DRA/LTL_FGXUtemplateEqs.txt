   [("LTL_FGXU.ltl\<^sub>P_abs_rep", "Abs (Rep ?\<phi>) = ?\<phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("LTL_FGXU.Rep_Abs_prop_entailment",
     "?A \<Turnstile>\<^sub>P Rep (Abs ?\<phi>) =
      ?A \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("LTL_FGXU.eval\<^sub>G_prop_entailment",
     "?S \<Turnstile>\<^sub>P eval\<^sub>G ?S ?\<phi> =
      ?S \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("LTL_FGXU.sat_models_invariant",
     "(?A : sat_models (Abs ?\<phi>)) = ?A \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL_FGXU.LTL_prop_entailment_restrict_to_propos",
     "?S \<Turnstile>\<^sub>P ?\<phi> =
      (?S Int propos ?\<phi>) \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("LTL_FGXU.eval\<^sub>G_And_map",
     "eval\<^sub>G ?S (And ?xs) = And (map (eval\<^sub>G ?S) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("LTL_FGXU.eval\<^sub>G_Or_map",
     "eval\<^sub>G ?S (Or ?xs) = Or (map (eval\<^sub>G ?S) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("LTL_FGXU.ltl_models_equiv_prop_entailment",
     "?w \<Turnstile> ?\<phi> =
      {\<chi>. ?w \<Turnstile> \<chi>} \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("LTL_FGXU.ltl_prop_implies_equiv",
     "(?\<phi> \<longrightarrow>\<^sub>P ?\<psi> &
       ?\<psi> \<longrightarrow>\<^sub>P ?\<phi>) =
      ?\<phi> \<equiv>\<^sub>P ?\<psi>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL_FGXU.eval\<^sub>G_subst",
     "eval\<^sub>G ?S ?\<phi> =
      subst ?\<phi> (%\<chi>. Some (eval\<^sub>G ?S \<chi>))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("LTL_FGXU.And_prop_entailment",
     "?S \<Turnstile>\<^sub>P And ?xs =
      (ALL x:set ?xs. ?S \<Turnstile>\<^sub>P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("LTL_FGXU.Or_prop_entailment",
     "?S \<Turnstile>\<^sub>P Or ?xs =
      (EX x:set ?xs. ?S \<Turnstile>\<^sub>P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("LTL_FGXU.And_prop_entailment_abs",
     "?S \<up>\<Turnstile>\<^sub>P \<up>And ?xs =
      (ALL x:set ?xs. ?S \<up>\<Turnstile>\<^sub>P x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("LTL_FGXU.And_semantics",
     "?w \<Turnstile> And ?xs = (ALL x:set ?xs. ?w \<Turnstile> x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("LTL_FGXU.Or_semantics",
     "?w \<Turnstile> Or ?xs = (EX x:set ?xs. ?w \<Turnstile> x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("LTL_FGXU.and_abs_conjunction",
     "?S \<up>\<Turnstile>\<^sub>P ?\<phi> \<up>and ?\<psi> =
      (?S \<up>\<Turnstile>\<^sub>P ?\<phi> &
       ?S \<up>\<Turnstile>\<^sub>P ?\<psi>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("LTL_FGXU.LTL_FG_suffix",
     "suffix ?i ?w \<Turnstile> F G ?\<phi> = ?w \<Turnstile> F G ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("LTL_FGXU.LTL_GF_suffix",
     "suffix ?i ?w \<Turnstile> G (F ?\<phi>) =
      ?w \<Turnstile> G (F ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("LTL_FGXU.LTL_F_one_step_unfolding",
     "?w \<Turnstile> F ?\<phi> =
      (?w \<Turnstile> ?\<phi> | ?w \<Turnstile> X (F ?\<phi>))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)))))),
    ("LTL_FGXU.LTL_G_one_step_unfolding",
     "?w \<Turnstile> G ?\<phi> =
      (?w \<Turnstile> ?\<phi> & ?w \<Turnstile> X (G ?\<phi>))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)))))),
    ("LTL_FGXU.LTL_FG_almost_all_suffixes",
     "?w \<Turnstile> F G ?\<phi> =
      (MOST i. suffix i ?w \<Turnstile> ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("LTL_FGXU.LTL_GF_infinitely_many_suffixes",
     "?w \<Turnstile> G (F ?\<phi>) =
      (INFM i. suffix i ?w \<Turnstile> ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, t_empty), template_hole 0))),
    ("LTL_FGXU.And_append_S",
     "?S \<Turnstile>\<^sub>P And (?xs @ ?ys) =
      ?S \<Turnstile>\<^sub>P And ?xs and And ?ys",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("LTL_FGXU.Or_append_S",
     "?S \<Turnstile>\<^sub>P Or (?xs @ ?ys) =
      ?S \<Turnstile>\<^sub>P Or ?xs or Or ?ys",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("LTL_FGXU.And_propos",
     "propos (And ?xs) = \<Union> {propos x |x. x : set ?xs}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("LTL_FGXU.Or_propos",
     "propos (Or ?xs) = \<Union> {propos x |x. x : set ?xs}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("LTL_FGXU.foldl_LTLAnd_prop_entailment",
     "?S \<Turnstile>\<^sub>P foldl LTLAnd ?i ?xs =
      (?S \<Turnstile>\<^sub>P ?i &
       (ALL y:set ?xs. ?S \<Turnstile>\<^sub>P y))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("LTL_FGXU.foldl_LTLOr_prop_entailment",
     "?S \<Turnstile>\<^sub>P foldl LTLOr ?i ?xs =
      (?S \<Turnstile>\<^sub>P ?i |
       (EX y:set ?xs. ?S \<Turnstile>\<^sub>P y))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("LTL_FGXU.foldl_LTLAnd_prop_entailment_abs",
     "?S \<up>\<Turnstile>\<^sub>P foldl and_abs ?i ?xs =
      (?S \<up>\<Turnstile>\<^sub>P ?i &
       (ALL y:set ?xs. ?S \<up>\<Turnstile>\<^sub>P y))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("LTL_FGXU.LTL_U_one_step_unfolding",
     "?w \<Turnstile> ?\<phi> U ?\<psi> =
      (?w \<Turnstile> ?\<psi> |
       ?w \<Turnstile> ?\<phi> & ?w \<Turnstile> X (?\<phi> U ?\<psi>))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))))))),
    ("LTL_FGXU.ltl_prop_equiv_subst_S",
     "?S \<Turnstile>\<^sub>P subst ?\<phi> ?m =
      (?S - dom ?m Un
       {uu_.
        EX \<chi> \<chi>'.
           uu_ = \<chi> &
           \<chi> : dom ?m &
           ?m \<chi> = Some \<chi>' &
           ?S \<Turnstile>\<^sub>P \<chi>'}) \<Turnstile>\<^sub>P
      ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app (template_hole 7, template_var 0))),
             template_app (template_hole 6, t_empty))),
         template_var 1)))]
