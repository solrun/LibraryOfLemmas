   [("List2.remdups_fwd_distinct", "distinct (remdups_fwd ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("List2.remdups_fwd_acc_distinct",
     "distinct (remdups_fwd_acc ?Acc ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("List2.remdups_fwd_set", "set (remdups_fwd ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("List2.remdups_fwd_acc_set",
     "set (remdups_fwd_acc ?Acc ?xs) = set ?xs - ?Acc",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_var 1))),
    ("List2.remdups_fwd_eq", "remdups_fwd ?xs = (rev o remdups o rev) ?xs",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_hole 1),
         template_var 0))),
    ("List2.remdups_fwd_filter",
     "remdups_fwd (filter ?P ?xs) = filter ?P (remdups_fwd ?xs)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("List2.remdups_fwd_acc_empty",
     "(set ?xs <= ?Acc) = (remdups_fwd_acc ?Acc ?xs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("List2.remdups_fwd_acc_filter",
     "remdups_fwd_acc ?Acc (filter ?P ?xs) =
      filter ?P (remdups_fwd_acc ?Acc ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("List2.suffixes_append",
     "suffixes (?xs @ ?ys) =
      suffixes ?ys @ map (%zs. zs @ ?ys) (suffixes ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 3, template_var 1))))),
    ("List2.remdups_fwd_acc_append",
     "remdups_fwd_acc ?Acc (?xs @ ?ys) =
      remdups_fwd_acc ?Acc ?xs @ remdups_fwd_acc (?Acc Un set ?xs) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("List2.finite_lists_length_eqE",
     "finite ?A ==> finite {xs. set xs = ?A & length xs = ?n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("List2.set_list",
     "[| finite (set ` ?XS); !!xs. xs : ?XS ==> distinct xs |]
      ==> finite ?XS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List2.takeWhile_foo",
     "?x ~: set ?ys ==> ?ys = takeWhile (%y. y ~= ?x) (?ys @ ?x # ?zs)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("List2.finite_set2",
     "[| card ?A = ?n; finite ?A |]
      ==> finite {xs. set xs = ?A & distinct xs}",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1), template_var 0),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))
           ))),
    ("List2.list_empty_prefix",
     "[| ?xs @ ?y # ?zs = ?y # ?us; ?y ~: set ?xs |] ==> ?xs = []",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 1, template_var 3))
                )
            )],
       template_equation (template_var 3, template_hole 0))),
    ("List2.remdups_fwd_acc_drop",
     "set ?ys <= ?Acc Un set ?xs ==>
      remdups_fwd_acc ?Acc (?xs @ ?ys @ ?zs) =
      remdups_fwd_acc ?Acc (?xs @ ?zs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_app (template_hole 4, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("List2.set_foldl_append",
     "set (foldl (@) ?i ?xs) = set ?i Un \<Union> {set x |x. x : set ?xs}",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 9, template_var 1)),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("List2.takeWhile_distinct",
     "distinct (?xs' @ ?x # ?xs'') ==>
      (?y : set (takeWhile (%y. y ~= ?x) (?xs' @ ?x # ?xs''))) =
      (?y : set ?xs')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 1))))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 3))))),
    ("List2.foldl_break_append",
     "foldl_break ?f ?s ?a (?xs @ ?ys) =
      (if ?s (foldl_break ?f ?s ?a ?xs) then foldl_break ?f ?s ?a ?xs
       else foldl_break ?f ?s (foldl_break ?f ?s ?a ?xs) ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_var 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("List2.sorted_pre",
     "(!!x y xs ys. ?zs = xs @ [x, y] @ ys ==> x <= y) ==> sorted ?zs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0)
           ))),
    ("List2.filter_split'",
     "filter ?P ?xs = ?ys @ ?zs ==>
      EX us vs. ?xs = us @ vs & filter ?P us = ?ys & filter ?P vs = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("List2.remdups_fwd_split",
     "remdups_fwd_acc ?Acc ?xs = ?ys @ ?zs ==>
      EX us vs.
         ?xs = us @ vs &
         remdups_fwd_acc ?Acc us = ?ys &
         remdups_fwd_acc (?Acc Un set ?ys) vs = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("List2.filter_map_split_iff",
     "(filter ?P (map ?f ?xs) = ?ys @ ?zs) =
      (EX us vs.
          ?xs = us @ vs &
          filter ?P (map ?f us) = ?ys & filter ?P (map ?f vs) = ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 4),
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2))),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("List2.takeWhile_split",
     "[| ?x : set ?xs; ?y : set (takeWhile (%y. y ~= ?x) ?xs) |]
      ==> EX xs' xs'' xs'''. ?xs = xs' @ ?y # xs'' @ ?x # xs'''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, t_empty), template_var 1)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("List2.filter_splitE",
     "[| filter ?P ?xs = ?ys @ ?zs;
         !!us vs.
            [| ?xs = us @ vs; filter ?P us = ?ys; filter ?P vs = ?zs |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("List2.map_splitE",
     "[| map ?f ?xs = ?ys @ ?zs;
         !!us vs.
            [| ?xs = us @ vs; map ?f us = ?ys; map ?f vs = ?zs |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("List2.sorted_list",
     "[| ?x : set ?xs; ?y : set ?xs; sorted (map ?f ?xs); ?f ?x < ?f ?y |]
      ==> EX xs' xs'' xs'''. ?xs = xs' @ ?x # xs'' @ ?y # xs'''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_var 2))
            ),
        template_inequation
         (less_than, template_app (template_var 0, template_var 3),
          template_app (template_var 0, template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("List2.filter_map_splitE",
     "[| filter ?P (map ?f ?xs) = ?ys @ ?zs;
         !!us vs.
            [| ?xs = us @ vs; filter ?P (map ?f us) = ?ys;
               filter ?P (map ?f vs) = ?zs |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 5),
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("List2.remdups_fwd_split_exact_iff",
     "(remdups_fwd_acc ?Acc ?xs = ?ys @ ?x # ?zs) =
      (EX us vs.
          ?xs = us @ ?x # vs &
          ?x ~: ?Acc &
          ?x ~: set us &
          remdups_fwd_acc ?Acc us = ?ys &
          remdups_fwd_acc (?Acc Un set ?ys Un {?x}) vs = ?zs)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3)),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0))),
       template_app (template_hole 7, t_empty))),
    ("List2.remdups_fwd_split_exact",
     "remdups_fwd_acc ?Acc ?xs = ?ys @ ?x # ?zs ==>
      EX us vs.
         ?xs = us @ ?x # vs &
         ?x ~: ?Acc &
         ?x ~: set ?ys &
         remdups_fwd_acc ?Acc us = ?ys &
         remdups_fwd_acc (?Acc Un set ?ys Un {?x}) vs = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 9, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("List2.remdups_fwd_split_exactE",
     "[| remdups_fwd_acc ?Acc ?xs = ?ys @ ?x # ?zs;
         !!us vs.
            [| ?xs = us @ ?x # vs; ?x ~: set us;
               remdups_fwd_acc ?Acc us = ?ys;
               remdups_fwd_acc (?Acc Un set ?ys Un {?x}) vs = ?zs |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0)))]
