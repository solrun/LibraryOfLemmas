   [("LTL_Impl.G_list_distinct", "distinct (G_list ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LTL_Impl.reduced_ifex", "reduced (ifex_of_ltl ?b) {}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("LTL_Impl.G_eq_G_list", "\<^bold>G ?\<phi> = set (G_list ?\<phi>)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("LTL_Impl.remove_constants_correct",
     "?S \<Turnstile>\<^sub>P ?\<phi> =
      ?S \<Turnstile>\<^sub>P remove_constants\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("LTL_Impl.val_ifex",
     "val_ifex (ifex_of_ltl ?b) ?s = {x. ?s x} \<Turnstile>\<^sub>P ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 1))),
    ("LTL_Impl.mk_and'_correct",
     "?S \<Turnstile>\<^sub>P mk_and' ?x ?y =
      ?S \<Turnstile>\<^sub>P ?x and ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("LTL_Impl.mk_or'_correct",
     "?S \<Turnstile>\<^sub>P mk_or' ?x ?y =
      ?S \<Turnstile>\<^sub>P ?x or ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("LTL_Impl.in_entailment",
     "[| in_and ?x ?y; ?S \<Turnstile>\<^sub>P ?y |]
      ==> ?S \<Turnstile>\<^sub>P ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("LTL_Impl.in_entailment",
     "[| in_or ?x ?y; ?S \<Turnstile>\<^sub>P ?x |]
      ==> ?S \<Turnstile>\<^sub>P ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("LTL_Impl.mk_and_correct",
     "?S \<Turnstile>\<^sub>P mk_and ?f ?x ?y =
      ?S \<Turnstile>\<^sub>P ?f ?x and ?f ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("LTL_Impl.mk_or_correct",
     "?S \<Turnstile>\<^sub>P mk_or ?f ?x ?y =
      ?S \<Turnstile>\<^sub>P ?f ?x or ?f ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0)))))]
