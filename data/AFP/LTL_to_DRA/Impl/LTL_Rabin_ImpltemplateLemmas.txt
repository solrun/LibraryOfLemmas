   [("LTL_Rabin_Impl.ltl_to_generalized_rabin\<^sub>C_af_correct",
     "range ?w <= set ?\<Sigma> ==>
      ?w \<Turnstile> ?\<phi> =
      accept\<^sub>G\<^sub>R_LTS
       (ltl_to_generalized_rabin\<^sub>C_af ?\<Sigma> ?\<phi>) ?w",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 2),
            template_hole 5),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("LTL_Rabin_Impl.ltl_to_generalized_rabin\<^sub>C_af\<^sub>\<UU>_correct",
     "range ?w <= set ?\<Sigma> ==>
      ?w \<Turnstile> ?\<phi> =
      accept\<^sub>G\<^sub>R_LTS
       (ltl_to_generalized_rabin\<^sub>C_af\<^sub>\<UU> ?\<Sigma> ?\<phi>)
       ?w",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 2),
            template_hole 5),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("LTL_Rabin_Impl.M_fin\<^sub>C_af_correct",
     "[| ?t : reach\<^sub>t ?\<Sigma>
               (ltl_to_rabin_base_code_def.delta\<^sub>C \<up>af
                 \<up>af\<^sub>G Abs ?\<Sigma>)
               (ltl_to_rabin_base_code_def.initial\<^sub>C Abs Abs ?\<phi>);
         dom ?\<pi> <= \<^bold>G ?\<phi> |]
      ==> (abstract_transition ?t : M_fin ?\<pi>) =
          M_fin\<^sub>C_af ?\<phi> (mapping.Mapping ?\<pi>) ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_hole 12),
                        template_hole 11),
                      template_hole 10),
                    template_var 2)),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 10),
                    template_hole 10),
                  template_var 1)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_var 3)))),
    ("LTL_Rabin_Impl.M_fin\<^sub>C_af\<^sub>\<UU>_correct",
     "[| ?t : reach\<^sub>t ?\<Sigma>
               (ltl_to_rabin_base_code_def.delta\<^sub>C \<up>af\<^sub>\<UU>
                 \<up>af\<^sub>G\<^sub>\<UU> (Abs o Unf\<^sub>G) ?\<Sigma>)
               (ltl_to_rabin_base_code_def.initial\<^sub>C (Abs o Unf)
                 (Abs o Unf\<^sub>G) ?\<phi>);
         dom ?\<pi> <= \<^bold>G ?\<phi> |]
      ==> (abstract_transition ?t : M\<^sub>\<UU>_fin ?\<pi>) =
          M_fin\<^sub>C_af\<^sub>\<UU> ?\<phi> (mapping.Mapping ?\<pi>) ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 17, template_var 2),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_hole 15),
                        template_hole 14),
                      template_app
                       (template_app (template_hole 13, template_hole 12),
                        template_hole 11)),
                    template_var 2)),
                template_app
                 (template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 13, template_hole 12),
                        template_hole 9)),
                    template_app
                     (template_app (template_hole 13, template_hole 12),
                      template_hole 11)),
                  template_var 1)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 0),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_var 3))))]
