Loading theory "HOL-Library.FuncSet" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.Topological_Space" via "Jacobson_Basic_Algebra.Set_Theory")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.130s elapsed time, 0.537s cpu time, 0.047s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.203s elapsed time, 0.828s cpu time, 0.047s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.295s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.380s elapsed time, 1.518s cpu time, 0.120s GC time
Loading theory "Jacobson_Basic_Algebra.Set_Theory" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.Topological_Space")
locale map
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "map \<alpha> S T"
locale surjective_map
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "surjective_map \<alpha> S T"
locale injective_map
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "injective_map \<alpha> S T"
locale bijective
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "bijective \<alpha> S T"
locale bijective_map
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "bijective_map \<alpha> S T"
locale map
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "map \<alpha> S T"
locale equivalence
  fixes S :: "'a set"
    and E :: "('a * 'a) set"
  assumes "equivalence S E"
locale partition
  fixes S :: "'a set"
    and P :: "'a set set"
  assumes "partition S P"
locale equivalence
  fixes S :: "'a set"
    and E :: "('a * 'a) set"
  assumes "equivalence S E"
locale partition
  fixes S :: "'a set"
    and P :: "'a set set"
  assumes "partition S P"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
locale equivalence
  fixes S :: "'a set"
    and E :: "('a * 'a) set"
  assumes "equivalence S E"
Found termination order: "size <*mlex*> {}"
locale equivalence
  fixes S :: "'a set"
    and E :: "('a * 'a) set"
  assumes "equivalence S E"
consts
  shift :: "'a list => 'a stream => 'a stream"
locale fiber_relation_notation
  fixes S :: "'a set"
locale fiber_relation
  fixes \<alpha> :: "'a => 'b"
    and S :: "'a set"
    and T :: "'b set"
  assumes "fiber_relation \<alpha> S T"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Jacobson_Basic_Algebra.Set_Theory"
### 0.380s elapsed time, 1.492s cpu time, 0.183s GC time
Loading theory "Draft.Set_Extras" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.Topological_Space")
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.Set_Extras"
### 0.053s elapsed time, 0.209s cpu time, 0.000s GC time
Loading theory "Draft.Topological_Space" (required by "Draft.Topological_SpaceMoreTemplates")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.874s elapsed time, 3.318s cpu time, 0.745s GC time
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
locale Topological_Space.topological_space
  fixes S :: "'a set"
    and is_open :: "'a set => bool"
  assumes "topological_space S is_open"
### theory "HOL-Library.Stream"
### 0.991s elapsed time, 3.593s cpu time, 0.748s GC time
locale Topological_Space.t2_space
  fixes S :: "'a set"
    and is_open :: "'a set => bool"
  assumes "t2_space S is_open"
Proofs for inductive predicate(s) "generated_topology"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
locale cover_of_subset
  fixes X :: "'a set"
    and U :: "'a set"
    and index :: "real set"
    and cover :: "real => 'a set"
  assumes "cover_of_subset X U index cover"
locale open_cover_of_subset
  fixes X :: "'a set"
    and is_open :: "'a set => bool"
    and U :: "'a set"
    and I :: "real set"
    and C :: "real => 'a set"
  assumes "open_cover_of_subset X is_open U I C"
Found termination order: "size <*mlex*> {}"
locale open_cover_of_open_subset
  fixes X :: "'a set"
    and is_open :: "'a set => bool"
    and U :: "'a set"
    and I :: "real set"
    and C :: "real => 'a set"
  assumes "open_cover_of_open_subset X is_open U I C"
locale ind_topology
  fixes X :: "'a set"
    and is_open :: "'a set => bool"
    and S :: "'a set"
  assumes "ind_topology X is_open S"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale continuous_map
  fixes S :: "'a set"
    and is_open :: "'a set => bool"
    and S' :: "'b set"
    and is_open' :: "'b set => bool"
    and f :: "'a => 'b"
  assumes "continuous_map S is_open S' is_open' f"
locale homeomorphism
  fixes S :: "'a set"
    and is_open :: "'a set => bool"
    and S' :: "'b set"
    and is_open' :: "'b set => bool"
    and f :: "'a => 'b"
  assumes "homeomorphism S is_open S' is_open' f"
### Ambiguous input (line 251 of "$AFP/Grothendieck_Schemes/Topological_Space.thy") produces 2 parse trees:
### ("\<^const>Pure.eq"
###   ("_applC"
###     ("\<^const>Topological_Spaces.topological_space_class.tendsto"
###       ("_position" f) ("_position" l))
###     ("_position" F))
###   ("_applC" ("_position" filterlim)
###     ("_cargs" ("_position" f)
###       ("_cargs" ("_applC" ("_position" nhds) ("_position" l))
###         ("_position" F)))))
### ("\<^const>Pure.eq"
###   ("_applC" ("\<^fixed>tendsto" ("_position" f) ("_position" l))
###     ("_position" F))
###   ("_applC" ("_position" filterlim)
###     ("_cargs" ("_position" f)
###       ("_cargs" ("_applC" ("_position" nhds) ("_position" l))
###         ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Found termination order: "size <*mlex*> {}"
### Ambiguous input (line 254 of "$AFP/Grothendieck_Schemes/Topological_Space.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" Lim) ("_cargs" ("_position" A) ("_position" f)))
###     ("_The" ("_position" l)
###       ("_applC" ("\<^const>local.tendsto" ("_position" f) ("_position" l))
###         ("_position" A)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" Lim) ("_cargs" ("_position" A) ("_position" f)))
###     ("_The" ("_position" l)
###       ("_applC"
###         ("\<^const>Topological_Spaces.topological_space_class.tendsto"
###           ("_position" f) ("_position" l))
###         ("_position" A)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Topological_Space"
### 0.717s elapsed time, 2.120s cpu time, 0.641s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.784s elapsed time, 5.273s cpu time, 0.952s GC time
Loading theory "Draft.Templates" (required by "Draft.Topological_SpaceMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Topological_SpaceMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.452s elapsed time, 0.459s cpu time, 0.000s GC time
Loading theory "Draft.Topological_SpaceMoreTemplates"
val templateLemmas =
   [("Topological_Spaces.decseq_const", "decseq (%x. ?k)",
     template_predicate (template_app (template_hole 0, t_empty))),
    ("Topological_Spaces.incseq_const", "incseq (%x. ?k)",
     template_predicate (template_app (template_hole 0, t_empty))),
    ("Topological_Spaces.topological_space_generate_topology",
     "class.topological_space (generate_topology ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.continuous_bot", "continuous bot ?f",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Topological_Spaces.continuous_on_discrete", "continuous_on ?A ?f",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)
         )),
    ("Topological_Spaces.continuous_on_id'", "continuous_on ?s id",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Topological_Spaces.continuous_on_empty", "continuous_on {} ?f",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Topological_Spaces.continuous_intros", "continuous_on ?S norm",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Topological_Spaces.continuous_intros", "continuous_on ?A arsinh",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Topological_Spaces.continuous_on_swap", "continuous_on ?A prod.swap",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Topological_Spaces.continuous_intros", "open {?a<..}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.continuous_intros", "open {..<?a}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.closed_atLeast", "closed {?a..}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.closed_atMost", "closed {..?a}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.connected_Ici", "connected {?a..}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.connected_Iic", "connected {..?a}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.connected_Ioi", "connected {?a<..}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.connected_Iio", "connected {..<?a}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Topological_Spaces.convergent_const", "convergent (%n. ?c)",
     template_predicate (template_app (template_hole 0, t_empty))),
    ("Topological_Space.generated_topology_empty",
     "generated_topology ?S ?B {}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Topological_Spaces.continuous_const", "continuous ?F (%x. ?c)",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)
         )),
    ("Topological_Spaces.continuous_on_id", "continuous_on ?s (%x. x)",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), t_empty)
         )),
    ("Topological_Spaces.continuous_on_const", "continuous_on ?s (%x. ?c)",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)
         )),
    ("Topological_Spaces.continuous_intros", "open {?a<..<?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.closed_atLeastAtMost", "closed {?a..?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.connected_Icc", "connected {?a..?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.connected_Ico", "connected {?a..<?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.connected_Ioc", "connected {?a<..?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.connected_Ioo", "connected {?a<..<?b}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.uniformly_continuous_on_id",
     "uniformly_continuous_on ?s (%x. x)",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), t_empty)
         )),
    ("Topological_Spaces.uniformly_continuous_on_const",
     "uniformly_continuous_on ?s (%x. ?c)",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)
         )),
    ("Topological_Spaces.strict_mono_add", "strict_mono (%n. n + ?k)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Topological_Space.generated_topology_is_topology",
     "topological_space ?S (generated_topology ?S ?B)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.continuous_id", "continuous (at ?x within ?S) id",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)
         )),
    ("Topological_Spaces.continuous_discrete",
     "continuous (at ?x within ?A) ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)
         )),
    ("Topological_Spaces.continuous_intros", "isCont arsinh ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0)
         )),
    ("Topological_Spaces.isCont_swap", "isCont prod.swap ?a",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0)
         )),
    ("Topological_Spaces.continuous_on_sing", "continuous_on {?x} ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)
         )),
    ("Topological_Spaces.tendsto_intros",
     "((%x. ?k) \<longlongrightarrow> ?k) ?F",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Topological_Spaces.lim_const", "lim (%m. ?a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), t_empty),
       template_var 0)),
    ("Topological_Spaces.continuous_ident",
     "continuous (at ?x within ?S) (%x. x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?A (%z. pochhammer z ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)
         )),
    ("Topological_Spaces.decseq_imp_monoseq", "decseq ?X ==> monoseq ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.incseq_imp_monoseq", "incseq ?X ==> monoseq ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.trivial_limit_at_left_real", "at_left ?x ~= bot",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Topological_Spaces.trivial_limit_at_right_real", "at_right ?x ~= bot",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Topological_Spaces.continuous_intros", "open ?S ==> closed (- ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros", "closed ?S ==> open (- ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Topological_Spaces.tendsto_intros",
     "((%x. x) \<longlongrightarrow> ?a) (at ?a within ?s)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Topological_Spaces.fst_vimage_eq_Times",
     "fst -` ?S = ?S \<times> UNIV",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Topological_Spaces.snd_vimage_eq_Times",
     "snd -` ?S = UNIV \<times> ?S",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), t_empty))),
    ("Topological_Spaces.decseq_eq_incseq",
     "decseq ?X = incseq (%n. - ?X n)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Topological_Spaces.monoseq_iff",
     "monoseq ?X = (incseq ?X | decseq ?X)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.continuous_intros",
     "isCont (%z. pochhammer z ?n) ?z",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           t_empty)
         )),
    ("Topological_Spaces.filterlim_subseq",
     "strict_mono ?f ==> filterlim ?f sequentially sequentially",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_hole 0)
           ))),
    ("Topological_Spaces.seq_suble", "strict_mono ?f ==> ?n <= ?f ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_var 1, template_var 0)))),
    ("Topological_Spaces.open_vimage_fst", "open ?S ==> open (fst -` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Topological_Spaces.open_vimage_snd", "open ?S ==> open (snd -` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Topological_Spaces.open_image_fst", "open ?S ==> open (fst ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Topological_Spaces.open_image_snd", "open ?S ==> open (snd ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "closed ?S ==> closed (insert ?a ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.closed_vimage_fst",
     "closed ?S ==> closed (fst -` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Topological_Spaces.closed_vimage_snd",
     "closed ?S ==> closed (snd -` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_trivial_limit",
     "?net = bot ==> continuous ?net ?f",
     template_implication
      ([template_equation (template_var 1, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Topological_Spaces.uniformly_continuous_imp_continuous",
     "uniformly_continuous_on ?s ?f ==> continuous_on ?s ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Topological_Spaces.eventually_at_right_less",
     "eventually ((<) ?x) (at_right ?x)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Topological_Spaces.tendsto_intros",
     "(%n. ?a / of_nat n) \<longlonglongrightarrow> (0::?'a)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)
         )),
    ("Topological_Spaces.LIM_Uniq", "?< L. ?f \<midarrow>?a\<rightarrow> L",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.monoseq_minus",
     "monoseq ?a ==> monoseq (%n. - ?a n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Topological_Spaces.continuous_intros",
     "?A <= {1..} ==> continuous_on ?A arcosh",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Topological_Space.generated_topology_subset",
     "generated_topology ?S ?B ?U ==> ?U <= ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("Topological_Spaces.convergentI",
     "?X \<longlonglongrightarrow> ?L ==> convergent ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Topological_Spaces.seq_monosub",
     "EX f. strict_mono f & monoseq (%n. ?s (f n))",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Topological_Spaces.convergent_LIMSEQ_iff",
     "convergent ?X = ?X \<longlonglongrightarrow> lim ?X",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_hole 0))),
    ("Topological_Spaces.LIMSEQ_const_iff",
     "(%n. ?k) \<longlonglongrightarrow> ?l = (?k = ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Topological_Spaces.nhds_prod",
     "nhds (?a, ?b) = nhds ?a \<times>\<^sub>F nhds ?b",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.decseq_SucD", "decseq ?A ==> ?A (Suc ?i) <= ?A ?i",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_var 1, template_app (template_hole 0, template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Topological_Spaces.incseq_SucD", "incseq ?A ==> ?A ?i <= ?A (Suc ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Topological_Spaces.continuous_intros", "1 < ?x ==> isCont arcosh ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_hole 0)
           ))),
    ("Topological_Spaces.continuous_intros",
     "ALL S:?K. closed S ==> closed (\<Inter> ?K)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Topological_Spaces.decseq_Suc_iff",
     "decseq ?f = (ALL n. ?f (Suc n) <= ?f n)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Topological_Spaces.incseq_Suc_iff",
     "incseq ?f = (ALL n. ?f n <= ?f (Suc n))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Topological_Spaces.strict_mono_Suc_iff",
     "strict_mono ?f = (ALL n. ?f n < ?f (Suc n))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Topological_Spaces.convergentD",
     "convergent ?X ==> EX L. ?X \<longlonglongrightarrow> L",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Topological_Spaces.tendsto_eq_intros",
     "?x = ?y ==> ((%x. ?x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. cos (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. sin (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. - ?f x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. norm (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. \<bar>?f x\<bar>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. sqrt (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. arctan (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. arsinh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_fst",
     "continuous ?F ?f ==> continuous ?F (%x. fst (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_snd",
     "continuous ?F ?f ==> continuous ?F (%x. snd (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. cosh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. exp (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. sinh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?g ==> continuous ?F (%x. of_real (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?g ==> continuous ?F (%x. cnj (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. cos (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. sin (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. norm (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?A ?f ==> continuous_on ?A (%x. cis (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. \<bar>?f x\<bar>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. sqrt (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. arctan (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_on_fst",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. fst (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_on_snd",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. snd (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?A ?f ==> continuous_on ?A (%x. cosh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?A ?f ==> continuous_on ?A (%x. sinh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. exp (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. - ?f x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. of_real (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. Im (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. Re (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. cnj (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?A ?f ==> continuous_on ?A (%x. arsinh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "?A <= {- 1<..<1} ==> continuous_on ?A artanh",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2)),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Topological_Spaces.continuous_on_eq_continuous_within",
     "continuous_on ?s ?f = (ALL x:?s. continuous (at x within ?s) ?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. ?f x ^ ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous ?F ?f ==> continuous ?F (%x. root ?n (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. root ?n (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. pochhammer (?f x) ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "continuous_on ?s ?f ==> continuous_on ?s (%x. ?f x ^ ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.limI",
     "?X \<longlonglongrightarrow> ?L ==> lim ?X = ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 2), template_var 1),
         template_var 0))),
    ("Topological_Spaces.continuous_at_imp_continuous_at_within",
     "isCont ?f ?x ==> continuous (at ?x within ?s) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_hole 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.mono_SucI1",
     "ALL n. ?X n <= ?X (Suc n) ==> monoseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.mono_SucI2",
     "ALL n. ?X (Suc n) <= ?X n ==> monoseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.incseq_SucI",
     "(!!n. ?X n <= ?X (Suc n)) ==> incseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.decseq_SucI",
     "(!!n. ?X (Suc n) <= ?X n) ==> decseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.strict_mono_o",
     "[| strict_mono ?r; strict_mono ?s |] ==> strict_mono (?r o ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| open ?S; open ?T |] ==> open (?S Un ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| open ?S; closed ?T |] ==> open (?S\<setminus>?T)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| closed ?S; open ?T |] ==> closed (?S\<setminus>?T)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| closed ?S; closed ?T |] ==> closed (?S Int ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| closed ?S; closed ?T |] ==> closed (?S Un ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.convergent_subseq_convergent",
     "[| convergent ?X; strict_mono ?f |] ==> convergent (?X o ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.eventually_eventually",
     "(\<forall>\<^sub>F y in nhds ?x. eventually ?P (nhds y)) =
      eventually ?P (nhds ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.tendsto_eq_intros",
     "?x = ?y ==> ((%x. x) \<longlongrightarrow> ?y) (at ?x within ?s1)",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Topological_Spaces.LIM_const_eq",
     "(%x. ?k) \<midarrow>?a\<rightarrow> ?L ==> ?k = ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty),
                template_app (template_hole 3, template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_equation (template_var 2, template_var 1))),
    ("Topological_Spaces.continuous_at_imp_continuous_on",
     "ALL x:?s. isCont ?f x ==> continuous_on ?s ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Topological_Spaces.strict_mono_compose",
     "[| strict_mono ?r; strict_mono ?s |] ==> strict_mono (%x. ?r (?s x))",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Topological_Spaces.open_Times",
     "[| open ?S; open ?T |] ==> open (?S \<times> ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Topological_Spaces.open_vimage",
     "[| open ?s; continuous_on UNIV ?f |] ==> open (?f -` ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.closed_Times",
     "[| closed ?S; closed ?T |] ==> closed (?S \<times> ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Topological_Spaces.closed_vimage",
     "[| closed ?s; continuous_on UNIV ?f |] ==> closed (?f -` ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.connected_Times",
     "[| connected ?S; connected ?T |] ==> connected (?S \<times> ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Topological_Spaces.compact_continuous_image",
     "[| continuous_on ?s ?f; compact ?s |] ==> compact (?f ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.connected_continuous_image",
     "[| continuous_on ?s ?f; connected ?s |] ==> connected (?f ` ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.continuous_on_subset",
     "[| continuous_on ?s ?f; ?t <= ?s |] ==> continuous_on ?t ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Topological_Spaces.continuous_at",
     "isCont ?f ?x = ?f \<midarrow>?x\<rightarrow> ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app (template_var 0, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_hole 2)))),
    ("Topological_Spaces.continuous_within",
     "continuous (at ?x within ?s) ?f =
      (?f \<longlongrightarrow> ?f ?x) (at ?x within ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app (template_var 0, template_var 2))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("Topological_Spaces.LIMSEQ_INF",
     "decseq ?X ==> ?X \<longlonglongrightarrow> Inf (range ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_hole 1)))),
             template_hole 0)
           ))),
    ("Topological_Spaces.LIMSEQ_SUP",
     "incseq ?X ==> ?X \<longlonglongrightarrow> Sup (range ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_hole 1)))),
             template_hole 0)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "(0::?'a1) = ?y ==>
      (%n. (1::?'a1) / of_nat n) \<longlonglongrightarrow> ?y",
     template_implication
      ([template_equation (template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "(0::?'a1) = ?y ==> (%n. ?a1 / of_nat n) \<longlonglongrightarrow> ?y",
     template_implication
      ([template_equation (template_hole 5, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 1, template_var 1)),
             template_hole 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "norm ?x < 1 ==> (^) ?x \<longlonglongrightarrow> (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Topological_Spaces.sequentially_offset",
     "eventually ?P sequentially ==>
      \<forall>\<^sub>F i in sequentially. ?P (i + ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| finite ?S; ALL T:?S. open T |] ==> open (\<Inter> ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| finite ?S; ALL T:?S. closed T |] ==> closed (\<Union> ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Topological_Spaces.decseqD",
     "[| decseq ?f; ?i <= ?j |] ==> ?f ?j <= ?f ?i",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app (template_var 2, template_var 1)))),
    ("Topological_Spaces.incseqD",
     "[| incseq ?f; ?i <= ?j |] ==> ?f ?i <= ?f ?j",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Topological_Spaces.strict_mono_leD",
     "[| strict_mono ?r; ?m <= ?n |] ==> ?r ?m <= ?r ?n",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Topological_Spaces.tendsto_compose_filtermap",
     "((?g o ?f) \<longlongrightarrow> ?T) ?F =
      (?g \<longlongrightarrow> ?T) (filtermap ?f ?F)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Topological_Spaces.LIM_const_not_eq",
     "?k ~= ?L ==> ~ (%x. ?k) \<midarrow>?a\<rightarrow> ?L",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, t_empty),
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))
               )
           ))),
    ("Topological_Spaces.LIM_not_zero",
     "?k ~= (0::?'aa) ==> ~ (%x. ?k) \<midarrow>?a\<rightarrow> (0::?'aa)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 3, t_empty),
                   template_app (template_hole 2, template_hole 4)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))
               )
           ))),
    ("Topological_Spaces.LIMSEQ_Suc",
     "?f \<longlonglongrightarrow> ?l ==>
      (%n. ?f (Suc n)) \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_hole 1)
           ))),
    ("Topological_Spaces.isContD",
     "isCont ?f ?x ==> ?f \<midarrow>?x\<rightarrow> ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 0,
                 template_app (template_var 0, template_var 1))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))
           ))),
    ("Topological_Spaces.isCont_fst",
     "isCont ?f ?a ==> isCont (%x. fst (?f x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)
           ))),
    ("Topological_Spaces.isCont_snd",
     "isCont ?f ?a ==> isCont (%x. snd (?f x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "ALL x:?A. open (?B x) ==> open (\<Union> (?B ` ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Topological_Spaces.continuous_intros",
     "ALL x:?A. closed (?B x) ==> closed (\<Inter> (?B ` ?A))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Topological_Spaces.LIMSEQ_imp_Suc",
     "(%n. ?f (Suc n)) \<longlonglongrightarrow> ?l ==>
      ?f \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Topological_Spaces.decseq_ge",
     "[| decseq ?X; ?X \<longlonglongrightarrow> ?L |] ==> ?L <= ?X ?n",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_hole 1)
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_var 2, template_var 0)))),
    ("Topological_Spaces.incseq_le",
     "[| incseq ?X; ?X \<longlonglongrightarrow> ?L |] ==> ?X ?n <= ?L",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_hole 1)
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_var 1))),
    ("Topological_Spaces.eventually_subseq",
     "[| strict_mono ?r; eventually ?P sequentially |]
      ==> \<forall>\<^sub>F n in sequentially. ?P (?r n)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Topological_Spaces.tendsto_at_iff_tendsto_nhds",
     "?g \<midarrow>?l\<rightarrow> ?g ?l =
      (?g \<longlongrightarrow> ?g ?l) (nhds ?l)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.continuous_on_eq_continuous_at",
     "open ?s ==> continuous_on ?s ?f = (ALL x:?s. isCont ?f x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. norm (?f x)) \<longlongrightarrow> norm ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?l) ?F ==>
      ((%x. \<bar>?f x\<bar>) \<longlongrightarrow> \<bar>?l\<bar>) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?x) ?F ==>
      ((%x. sqrt (?f x)) \<longlongrightarrow> sqrt ?x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?x) ?F ==>
      ((%x. arctan (?f x)) \<longlongrightarrow> arctan ?x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_fst",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. fst (?f x)) \<longlongrightarrow> fst ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_snd",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. snd (?f x)) \<longlongrightarrow> snd ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. cos (?f x)) \<longlongrightarrow> cos ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. sin (?f x)) \<longlongrightarrow> sin ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. - ?f x) \<longlongrightarrow> - ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. arsinh (?f x)) \<longlongrightarrow> arsinh ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. cosh (?f x)) \<longlongrightarrow> cosh ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. exp (?f x)) \<longlongrightarrow> exp ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. sinh (?f x)) \<longlongrightarrow> sinh ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. of_real (?g x)) \<longlongrightarrow> of_real ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Im (?g x)) \<longlongrightarrow> Im ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Re (?g x)) \<longlongrightarrow> Re ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. cnj (?g x)) \<longlongrightarrow> cnj ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.LIMSEQ_ignore_initial_segment",
     "?f \<longlonglongrightarrow> ?a ==>
      (%n. ?f (n + ?k)) \<longlonglongrightarrow> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 1)),
             template_hole 1)
           ))),
    ("Topological_Spaces.seq_offset_neg",
     "?f \<longlonglongrightarrow> ?l ==>
      (%i. ?f (i - ?k)) \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 1)),
             template_hole 1)
           ))),
    ("Topological_Spaces.Lim_ident_at",
     "at ?x within ?s ~= bot ==> Lim (at ?x within ?s) (%x. x) = ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           t_empty),
         template_var 1))),
    ("Topological_Spaces.LIMSEQ_offset",
     "(%n. ?f (n + ?k)) \<longlonglongrightarrow> ?a ==>
      ?f \<longlonglongrightarrow> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| - 1 < ?x; ?x < 1 |] ==> isCont artanh ?x",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_hole 4),
          template_var 0),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_hole 0)
           ))),
    ("Topological_Spaces.LIMSEQ_lessThan_iff_atMost",
     "(%n. ?f {..<n}) \<longlonglongrightarrow> ?x =
      (%n. ?f {..n}) \<longlonglongrightarrow> ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_hole 1))),
    ("Topological_Spaces.not_eventually_sequentiallyD",
     "~ eventually ?P sequentially ==>
      EX r. strict_mono r & (ALL n. ~ ?P (r n))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)
                )
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Topological_Spaces.monoI2",
     "ALL m n. m <= n --> ?X n <= ?X m ==> monoseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.monoI1",
     "ALL m n. m <= n --> ?X m <= ?X n ==> monoseq ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.lim_le",
     "[| convergent ?f; !!n. ?f n <= ?x |] ==> lim ?f <= ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0))),
    ("Topological_Spaces.continuous_on_compose",
     "[| continuous_on ?s ?f; continuous_on (?f ` ?s) ?g |]
      ==> continuous_on ?s (?g o ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.tendsto_cong_limit",
     "[| (?f \<longlongrightarrow> ?l) ?F; ?k = ?l |]
      ==> (?f \<longlongrightarrow> ?k) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_equation (template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app (template_hole 1, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.connected_iff_const",
     "connected ?S =
      (ALL P. continuous_on ?S P --> (EX c. ALL s:?S. P s = c))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.INT_decseq_offset",
     "decseq ?F ==> \<Inter> (range ?F) = \<Inter> (?F ` {?n..})",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?a) ?F ==>
      ((%x. ?f x ^ ?n) \<longlongrightarrow> ?a ^ ?n) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(?f \<longlongrightarrow> ?x) ?F ==>
      ((%x. root ?n (?f x)) \<longlongrightarrow> root ?n ?x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 1)
           ))),
    ("Topological_Spaces.connectedD_const",
     "[| connected ?S; continuous_on ?S ?P |] ==> EX c. ALL s:?S. ?P s = c",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. ?f x - ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_max",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. max (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_min",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. min (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_Pair",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. (?f x, ?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. ?f x ^ ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. dist (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; continuous ?F ?g |]
      ==> continuous ?F (%x. ?f x *\<^sub>R ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.closed_Collect_eq",
     "[| continuous_on UNIV ?f; continuous_on UNIV ?g |]
      ==> closed {x. ?f x = ?g x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Topological_Spaces.continuous_on_max",
     "[| continuous_on ?A ?f; continuous_on ?A ?g |]
      ==> continuous_on ?A (%x. max (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_on_min",
     "[| continuous_on ?A ?f; continuous_on ?A ?g |]
      ==> continuous_on ?A (%x. min (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.open_Collect_less",
     "[| continuous_on UNIV ?f; continuous_on UNIV ?g |]
      ==> open {x. ?f x < ?g x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Topological_Spaces.closed_Collect_le",
     "[| continuous_on UNIV ?f; continuous_on UNIV ?g |]
      ==> closed {x. ?f x <= ?g x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Topological_Spaces.continuous_on_Pair",
     "[| continuous_on ?s ?f; continuous_on ?s ?g |]
      ==> continuous_on ?s (%x. (?f x, ?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?A ?f; continuous_on ?A ?g |]
      ==> continuous_on ?A (%x. ?f x ^ ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g |]
      ==> continuous_on ?s (%x. dist (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g |]
      ==> continuous_on ?s (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g |]
      ==> continuous_on ?s (%x. ?f x - ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g |]
      ==> continuous_on ?s (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?A ?f; continuous_on ?A ?g |]
      ==> continuous_on ?A (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g |]
      ==> continuous_on ?s (%x. ?f x *\<^sub>R ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.uniformly_continuous_on_compose",
     "[| uniformly_continuous_on ?s ?g;
         uniformly_continuous_on (?g ` ?s) ?f |]
      ==> uniformly_continuous_on ?s (%x. ?f (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.tendsto_Lim",
     "[| ?net ~= bot; (?f \<longlongrightarrow> ?l) ?net |]
      ==> Lim ?net ?f = ?l",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 0)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Topological_Spaces.LIMSEQ_subseq_LIMSEQ",
     "[| ?X \<longlonglongrightarrow> ?L; strict_mono ?f |]
      ==> (?X o ?f) \<longlonglongrightarrow> ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_hole 2)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_app (template_hole 3, template_var 1)),
             template_hole 2)
           ))),
    ("Topological_Spaces.subset_snd_imageI",
     "[| ?A \<times> ?B <= ?S; ?x : ?A |] ==> ?B <= snd ` ?S",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 3), t_empty),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Topological_Spaces.subset_fst_imageI",
     "[| ?A \<times> ?B <= ?S; ?y : ?B |] ==> ?A <= fst ` ?S",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 3), t_empty),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Topological_Spaces.continuous_at_split",
     "isCont ?f ?x =
      (continuous (at_left ?x) ?f & continuous (at_right ?x) ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 1, template_var 1))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("Topological_Spaces.connected_Times_eq",
     "connected (?S \<times> ?T) =
      (?S = {} | ?T = {} | connected ?S & connected ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Topological_Spaces.tendsto_at_within_iff_tendsto_nhds",
     "(?g \<longlongrightarrow> ?g ?l) (at ?l within ?S) =
      (?g \<longlongrightarrow> ?g ?l) (inf (nhds ?l) (principal ?S))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app (template_var 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app (template_var 2, template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Topological_Spaces.continuous_on_open_vimage",
     "open ?s ==>
      continuous_on ?s ?f =
      (ALL B. open B --> open (?f \<^sup>\<inverse> ?s B))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("Topological_Spaces.continuous_on_closed_vimage",
     "closed ?s ==>
      continuous_on ?s ?f =
      (ALL B. closed B --> closed (?f \<^sup>\<inverse> ?s B))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("Topological_Spaces.approx_from_above_dense_linorder",
     "?x < ?y ==> EX u. (ALL n. ?x < u n) & u \<longlonglongrightarrow> ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Topological_Spaces.approx_from_below_dense_linorder",
     "?y < ?x ==> EX u. (ALL n. u n < ?x) & u \<longlonglongrightarrow> ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Topological_Spaces.continuous_intros",
     "[| finite ?A; ALL x:?A. open (?B x) |] ==> open (\<Inter> (?B ` ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| finite ?A; ALL x:?A. closed (?B x) |]
      ==> closed (\<Union> (?B ` ?A))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 1)))
           ))),
    ("Topological_Spaces.INF_Lim",
     "[| decseq ?X; ?X \<longlonglongrightarrow> ?l |]
      ==> Inf (range ?X) = ?l",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_var 0)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)),
         template_var 0))),
    ("Topological_Spaces.SUP_Lim",
     "[| incseq ?X; ?X \<longlonglongrightarrow> ?l |]
      ==> Sup (range ?X) = ?l",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app (template_hole 5, template_var 0)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)),
         template_var 0))),
    ("Topological_Spaces.open_Collect_neq",
     "[| continuous_on UNIV ?f; continuous_on UNIV ?g |]
      ==> open {x. ?f x ~= ?g x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| filterlim ?f at_infinity ?F; 0 < ?n |]
      ==> LIM x ?F. ?f x ^ ?n :> at_infinity",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), template_hole 3),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| norm ?x1 < 1; (0::?'a1) = ?y |]
      ==> (^) ?x1 \<longlonglongrightarrow> ?y",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_hole 6),
        template_equation (template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Topological_Spaces.tendsto_within_subset",
     "[| filterlim ?f ?l (at ?x within ?S); ?T <= ?S |]
      ==> filterlim ?f ?l (at ?x within ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Topological_Spaces.Sup_lim",
     "[| !!n. ?b n : ?s; ?b \<longlonglongrightarrow> ?a |]
      ==> ?a <= Sup ?s",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("Topological_Spaces.Inf_lim",
     "[| !!n. ?b n : ?s; ?b \<longlonglongrightarrow> ?a |]
      ==> Inf ?s <= ?a",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 0)),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Topological_Spaces.closed_vimage_Int",
     "[| closed ?s; continuous_on ?t ?f; closed ?t |]
      ==> closed (?f \<^sup>\<inverse> ?t ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1))
           ))),
    ("Topological_Spaces.connected_contains_Icc",
     "[| connected ?A; ?a : ?A; ?b : ?A |] ==> {?a..?b} <= ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Topological_Spaces.connected_contains_Ioo",
     "[| connected ?A; ?a : ?A; ?b : ?A |] ==> {?a<..<?b} <= ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Topological_Spaces.monoseq_Suc",
     "monoseq ?X =
      ((ALL n. ?X n <= ?X (Suc n)) | (ALL n. ?X (Suc n) <= ?X n))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app (template_hole 2, t_empty)))),
    ("Topological_Spaces.connectedI_const",
     "(!!P. continuous_on ?S P ==> EX c. ALL s:?S. P s = c) ==>
      connected ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.continuous_within_open",
     "[| ?a : ?A; open ?A |]
      ==> continuous (at ?a within ?A) ?f = isCont ?f ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)),
           template_var 0)))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; \<forall>\<^sub>F x in ?F. 1 <= ?f x |]
      ==> continuous ?F (%x. arcosh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.connected_Un",
     "[| connected ?s; connected ?t; ?s Int ?t ~= {} |]
      ==> connected (?s Un ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.uniformly_continuous_on_uniformity",
     "uniformly_continuous_on ?s ?f =
      (LIM (x, y) uniformity_on ?s. (?f x, ?f y) :> uniformity)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_hole 4),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               t_empty)))))),
    ("Topological_Spaces.Inf_as_limit",
     "?A ~= {} ==>
      EX u. (ALL n. u n : ?A) & u \<longlonglongrightarrow> Inf ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Topological_Spaces.filterlim_at_within_not_equal",
     "filterlim ?f (at ?a within ?s) ?F ==>
      \<forall>\<^sub>F w in ?F. ?f w : ?s & ?f w ~= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_var 1)
           ))),
    ("Topological_Spaces.generate_topology_Union",
     "(!!k. k : ?I ==> generate_topology ?S (?K k)) ==>
      generate_topology ?S (\<Union> (?K ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. ?f x ~= (0::?'b) |]
      ==> continuous_on ?s (%x. sgn (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. ?f x ~= (0::?'b) |]
      ==> continuous_on ?s (%x. inverse (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. ?f x ~= 0 |]
      ==> continuous_on ?s (%x. ln (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; cosh ?a1 = ?y |]
      ==> ((%x. cosh (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; exp ?a1 = ?y |]
      ==> ((%x. exp (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; sinh ?a1 = ?y |]
      ==> ((%x. sinh (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; - ?a1 = ?y |]
      ==> ((%x. - ?f1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; norm ?a1 = ?y |]
      ==> ((%x. norm (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; arsinh ?a1 = ?y |]
      ==> ((%x. arsinh (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?l1) ?F; \<bar>?l1\<bar> = ?y |]
      ==> ((%x. \<bar>?f1 x\<bar>) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?x1) ?F; sqrt ?x1 = ?y |]
      ==> ((%x. sqrt (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?x1) ?F; arctan ?x1 = ?y |]
      ==> ((%x. arctan (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?g1 \<longlongrightarrow> ?a1) ?F; of_real ?a1 = ?y |]
      ==> ((%x. of_real (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?g1 \<longlongrightarrow> ?a1) ?F; Im ?a1 = ?y |]
      ==> ((%x. Im (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?g1 \<longlongrightarrow> ?a1) ?F; Re ?a1 = ?y |]
      ==> ((%x. Re (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?g1 \<longlongrightarrow> ?a1) ?F; cnj ?a1 = ?y |]
      ==> ((%x. cnj (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; fst ?a1 = ?y |]
      ==> ((%x. fst (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; snd ?a1 = ?y |]
      ==> ((%x. snd (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; cos ?a1 = ?y |]
      ==> ((%x. cos (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; sin ?a1 = ?y |]
      ==> ((%x. sin (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.continuous_on_Icc_at_rightD",
     "[| continuous_on {?a..?b} ?f; ?a < ?b |]
      ==> (?f \<longlongrightarrow> ?f ?a) (at_right ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_var 0, template_var 2))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Topological_Spaces.continuous_on_Icc_at_leftD",
     "[| continuous_on {?a..?b} ?f; ?a < ?b |]
      ==> (?f \<longlongrightarrow> ?f ?b) (at_left ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_var 0, template_var 1))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Topological_Spaces.LIM_unique",
     "[| ?f \<midarrow>?a\<rightarrow> ?L;
         ?f \<midarrow>?a\<rightarrow> ?M |]
      ==> ?L = ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Topological_Spaces.connected_Union",
     "[| !!s. s : ?S ==> connected s; \<Inter> ?S ~= {} |]
      ==> connected (\<Union> ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Topological_Spaces.continuous_on_inv_into",
     "[| continuous_on ?s ?f; compact ?s; inj_on ?f ?s |]
      ==> continuous_on (?f ` ?s) (the_inv_into ?s ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.connected_iff_interval",
     "connected ?U = (ALL x:?U. ALL y:?U. ALL z>=x. z <= y --> z : ?U)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, template_var 0), t_empty))),
    ("Topological_Spaces.filterlim_at_split",
     "filterlim ?f ?F (at ?x) =
      (filterlim ?f ?F (at_left ?x) & filterlim ?f ?F (at_right ?x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 0)))))),
    ("Topological_Spaces.eventually_Lim_ident_at",
     "eventually (?P (Lim (at ?x within ?X) (%x. x))) (at ?x within ?X) =
      eventually (?P ?x) (at ?x within ?X)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Topological_Spaces.isCont_cong",
     "\<forall>\<^sub>F x in nhds ?x. ?f x = ?g x ==>
      isCont ?f ?x = isCont ?g ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 1)))),
    ("Topological_Spaces.continuous_intros",
     "(!!i. i : ?I ==> continuous ?F (?f i)) ==>
      continuous ?F (%x. SUM i:?I. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "(!!i. i : ?I ==> continuous ?F (?f i)) ==>
      continuous ?F (%x. PROD i:?I. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "(!!i. i : ?I ==> continuous_on ?S (?f i)) ==>
      continuous_on ?S (%x. SUM i:?I. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "(!!i. i : ?I ==> continuous_on ?S (?f i)) ==>
      continuous_on ?S (%x. PROD i:?I. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "(!!i. i : ?S ==> continuous ?F (?f i)) ==>
      continuous ?F (%x. PROD i:?S. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "(!!i. i : ?S ==> continuous_on ?s (?f i)) ==>
      continuous_on ?s (%x. PROD i:?S. ?f i x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; cosh (?f (Lim ?F (%x. x))) ~= (0::?'a) |]
      ==> continuous ?F (%x. tanh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 3,
                template_app
                 (template_var 0,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    t_empty))),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. cos (?f x) ~= (0::?'a) |]
      ==> continuous_on ?s (%x. tan (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. sin (?f x) ~= (0::?'a) |]
      ==> continuous_on ?s (%x. cot (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. ?f x ~= (0::?'b) |]
      ==> continuous_on ?s (%x. ?f x powi ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; ?a ~= 0 |]
      ==> ((%x. ln (?f x)) \<longlongrightarrow> ln ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?l) ?F; ?l ~= (0::?'a) |]
      ==> ((%x. sgn (?f x)) \<longlongrightarrow> sgn ?l) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; ?a ~= (0::?'a) |]
      ==> ((%x. inverse (?f x)) \<longlongrightarrow> inverse ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.Lim_bounded",
     "[| ?f \<longlonglongrightarrow> ?l; ALL n>=?M. ?f n <= ?C |]
      ==> ?l <= ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Topological_Spaces.Lim_bounded2",
     "[| ?f \<longlonglongrightarrow> ?l; ALL n>=?N. ?C <= ?f n |]
      ==> ?C <= ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("Topological_Spaces.continuous_at_compose",
     "[| isCont ?f ?a; isCont ?g (?f ?a) |] ==> isCont (?g o ?f) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_hole 5)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 1, template_var 2)),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_hole 5)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?a; ?f ?a ~= (0::?'b) |] ==> isCont (%x. sgn (?f x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?a within ?s) ?f; ?f ?a ~= (0::?'b) |]
      ==> continuous (at ?a within ?s) (%x. sgn (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?a within ?s) ?f; ?f ?a ~= (0::?'b) |]
      ==> continuous (at ?a within ?s) (%x. inverse (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?x; ?f ?x ~= 0 |] ==> isCont (%x. ln (?f x)) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 4)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?x within ?s) ?f; ?f ?x ~= 0 |]
      ==> continuous (at ?x within ?s) (%x. ln (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_on_open_invariant",
     "continuous_on ?s ?f =
      (ALL B.
          open B -->
          (EX A. open A & A Int ?s = ?f \<^sup>\<inverse> ?s B))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Topological_Spaces.continuous_on_closed_invariant",
     "continuous_on ?s ?f =
      (ALL B.
          closed B -->
          (EX A. closed A & A Int ?s = ?f \<^sup>\<inverse> ?s B))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous ?F ?f; ?f (Lim ?F (%x. x)) : {- 1<..<1} |]
      ==> continuous ?F (%x. artanh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_var 0,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    t_empty))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_hole 1)),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.tendsto_imp_filterlim_at_right",
     "[| (?f \<longlongrightarrow> ?L) ?F;
         \<forall>\<^sub>F x in ?F. ?L < ?f x |]
      ==> filterlim ?f (at_right ?L) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_imp_filterlim_at_left",
     "[| (?f \<longlongrightarrow> ?L) ?F;
         \<forall>\<^sub>F x in ?F. ?f x < ?L |]
      ==> filterlim ?f (at_left ?L) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; cos ?a ~= (0::?'a) |]
      ==> ((%x. tan (?f x)) \<longlongrightarrow> tan ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; sin ?a ~= (0::?'a) |]
      ==> ((%x. cot (?f x)) \<longlongrightarrow> cot ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; ?a1 ^ ?n1 = ?y |]
      ==> ((%x. ?f1 x ^ ?n1) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app (template_hole 2, template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?x1) ?F; root ?n1 ?x1 = ?y |]
      ==> ((%x. root ?n1 (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app (template_hole 2, template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 1), template_var 3),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; cosh ?a ~= (0::?'a) |]
      ==> ((%x. tanh (?f x)) \<longlongrightarrow> tanh ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?a; cos (?f ?a) ~= (0::?'a) |]
      ==> isCont (%x. tan (?f x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 2,
                template_app (template_var 0, template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?a; sin (?f ?a) ~= (0::?'a) |]
      ==> isCont (%x. cot (?f x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 2,
                template_app (template_var 0, template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 5)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?x within ?s) ?f; cos (?f ?x) ~= (0::?'a) |]
      ==> continuous (at ?x within ?s) (%x. tan (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 2,
                template_app (template_var 0, template_var 2)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?x within ?s) ?f; sin (?f ?x) ~= (0::?'a) |]
      ==> continuous (at ?x within ?s) (%x. cot (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 2,
                template_app (template_var 0, template_var 2)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Topological_Spaces.isCont_o2",
     "[| isCont ?f ?a; isCont ?g (?f ?a) |] ==> isCont (%x. ?g (?f x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_var 1, template_var 2)),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)),
             t_empty)
           ))),
    ("Topological_Spaces.isCont_tendsto_compose",
     "[| isCont ?g ?l; (?f \<longlongrightarrow> ?l) ?F |]
      ==> ((%x. ?g (?f x)) \<longlongrightarrow> ?g ?l) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_hole 4)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app (template_hole 2, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 3))),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?a within ?s) ?f; ?f ?a ~= (0::?'b) |]
      ==> continuous (at ?a within ?s) (%x. ?f x powi ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 3),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?x within ?A) ?f; cosh (?f ?x) ~= (0::?'a) |]
      ==> continuous (at ?x within ?A) (%x. tanh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 2,
                template_app (template_var 0, template_var 2)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_within_compose3",
     "[| isCont ?g (?f ?x); continuous (at ?x within ?s) ?f |]
      ==> continuous (at ?x within ?s) (%x. ?g (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_var 3, template_var 2)),
                  template_hole 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_on_compose2",
     "[| continuous_on ?t ?g; continuous_on ?s ?f; ?f ` ?s <= ?t |]
      ==> continuous_on ?s (%x. ?g (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_on_open_Un",
     "[| open ?s; open ?t; continuous_on ?s ?f; continuous_on ?t ?f |]
      ==> continuous_on (?s Un ?t) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_on_closed_Un",
     "[| closed ?s; closed ?t; continuous_on ?s ?f; continuous_on ?t ?f |]
      ==> continuous_on (?s Un ?t) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Topological_Spaces.eventually_nhds_top",
     "?b < top ==> eventually ?P (nhds top) = (EX b<top. ALL z>b. ?P z)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 7)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, template_hole 7)),
         template_app (template_hole 3, t_empty)))),
    ("Topological_Spaces.continuous_on_swap_args",
     "continuous_on (?A \<times> ?B) (%(x, y). ?d x y) ==>
      continuous_on (?B \<times> ?A) (%(x, y). ?d y x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2), t_empty)),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1), t_empty)),
             template_app (template_hole 0, t_empty))
           ))),
    ("Topological_Spaces.tendsto_within_open",
     "[| ?a : ?S; open ?S |]
      ==> (?f \<longlongrightarrow> ?l) (at ?a within ?S) =
          ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?A ?f; !!x. x : ?A ==> 1 <= ?f x |]
      ==> continuous_on ?A (%x. arcosh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; ?a ~= (0::?'a) |]
      ==> ((%x. ?f x powi ?n) \<longlongrightarrow> ?a powi ?n) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Topological_Spaces.LIMSEQ_le_const",
     "[| ?X \<longlonglongrightarrow> ?x; EX N. ALL n>=N. ?a <= ?X n |]
      ==> ?a <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Topological_Spaces.LIMSEQ_le_const2",
     "[| ?X \<longlonglongrightarrow> ?x; EX N. ALL n>=N. ?X n <= ?a |]
      ==> ?x <= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Topological_Spaces.continuous_within_compose",
     "[| continuous (at ?x within ?s) ?f;
         continuous (at (?f ?x) within ?f ` ?s) ?g |]
      ==> continuous (at ?x within ?s) (?g o ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_var 1, template_var 3)),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Topological_Spaces.isCont_Pair",
     "[| isCont ?f ?a; isCont ?g ?a |] ==> isCont (%x. (?f x, ?g x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_hole 3)),
             t_empty)
           ))),
    ("Topological_Spaces.filterlim_split_at",
     "[| filterlim ?f ?F (at_left ?x); filterlim ?f ?F (at_right ?x) |]
      ==> filterlim ?f ?F (at ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 2, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 0))
           ))),
    ("Topological_Spaces.continuous_on_inv",
     "[| continuous_on ?s ?f; compact ?s; ALL x:?s. ?g (?f x) = x |]
      ==> continuous_on (?f ` ?s) ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_imp_open_vimage",
     "[| continuous_on ?s ?f; open ?s; open ?B; ?f -` ?B <= ?s |]
      ==> open (?f -` ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Topological_Spaces.eventually_filtercomap_nhds",
     "eventually ?P (filtercomap ?f (nhds ?x)) =
      (EX S. open S & ?x : S & (ALL x. ?f x : S --> ?P x))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app (template_hole 6, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("Topological_Spaces.eventually_at_right_field",
     "eventually ?P (at_right ?x) = (EX b>?x. ALL y>?x. y < b --> ?P y)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.eventually_at_left_field",
     "eventually ?P (at_left ?x) = (EX b<?x. ALL y>b. y < ?x --> ?P y)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.continuous_within_compose2",
     "[| continuous (at ?x within ?s) ?f;
         continuous (at (?f ?x) within ?f ` ?s) ?g |]
      ==> continuous (at ?x within ?s) (%x. ?g (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_var 1, template_var 3)),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_on_cong_simp",
     "[| ?s = ?t; !!x. x : ?t =simp=> ?f x = ?g x |]
      ==> continuous_on ?s ?f = continuous_on ?t ?g",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Topological_Spaces.continuous_on_cong",
     "[| ?s = ?t; !!x. x : ?t ==> ?f x = ?g x |]
      ==> continuous_on ?s ?f = continuous_on ?t ?g",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. - 1 <= ?f x & ?f x <= 1 |]
      ==> continuous_on ?s (%x. arccos (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; ALL x:?s. - 1 <= ?f x & ?f x <= 1 |]
      ==> continuous_on ?s (%x. arcsin (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?A ?f; !!x. x : ?A ==> cosh (?f x) ~= (0::?'a) |]
      ==> continuous_on ?A (%x. tanh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.tendsto_Pair",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. (?f x, ?g x)) \<longlongrightarrow> (?a, ?b)) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app (template_hole 5, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. Complex (?f x) (?g x)) \<longlongrightarrow> Complex ?a ?b)
           ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x - ?g x) \<longlongrightarrow> ?a - ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x + ?g x) \<longlongrightarrow> ?a + ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?l) ?F;
         (?g \<longlongrightarrow> ?m) ?F |]
      ==> ((%x. dist (?f x) (?g x)) \<longlongrightarrow> dist ?l ?m) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x * ?g x) \<longlongrightarrow> ?a * ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?X \<longlongrightarrow> ?x) ?net;
         (?Y \<longlongrightarrow> ?y) ?net |]
      ==> ((%x. max (?X x) (?Y x)) \<longlongrightarrow> max ?x ?y) ?net",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?X \<longlongrightarrow> ?x) ?net;
         (?Y \<longlongrightarrow> ?y) ?net |]
      ==> ((%x. min (?X x) (?Y x)) \<longlongrightarrow> min ?x ?y) ?net",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app (template_hole 1, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x ^ ?g x) \<longlongrightarrow> ?a ^ ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x *\<^sub>R ?g x) \<longlongrightarrow> ?a *\<^sub>R ?b)
           ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_compose",
     "[| ?g \<midarrow>?l\<rightarrow> ?g ?l;
         (?f \<longlongrightarrow> ?l) ?F |]
      ==> ((%x. ?g (?f x)) \<longlongrightarrow> ?g ?l) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_hole 5,
                  template_app (template_var 3, template_var 2))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app
                (template_hole 5,
                 template_app (template_var 3, template_var 2))),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_attains_sup",
     "[| compact ?s; ?s ~= {}; continuous_on ?s ?f |]
      ==> EX x:?s. ALL y:?s. ?f y <= ?f x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.continuous_attains_inf",
     "[| compact ?s; ?s ~= {}; continuous_on ?s ?f |]
      ==> EX x:?s. ALL y:?s. ?f x <= ?f y",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.lim_explicit",
     "?f \<longlonglongrightarrow> ?f0.0 =
      (ALL S. open S --> ?f0.0 : S --> (EX N. ALL n>=N. ?f n : S))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 1),
           template_app (template_hole 8, template_var 0)),
         template_hole 7),
       template_app (template_hole 6, t_empty))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?A ?f; !!x. x : ?A ==> ?f x : {- 1<..<1} |]
      ==> continuous_on ?A (%x. artanh (?f x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)
           ))),
    ("Topological_Spaces.filtermap_nhds_open_map",
     "[| isCont ?f ?a; !!S. open S ==> open (?f ` S) |]
      ==> filtermap ?f (nhds ?a) = nhds (?f ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_var 0, template_var 1))))),
    ("Topological_Spaces.continuous_on_open_Union",
     "[| !!s. s : ?S ==> open s; !!s. s : ?S ==> continuous_on s ?f |]
      ==> continuous_on (\<Union> ?S) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; - 1 < ?a; ?a < 1 |]
      ==> ((%x. artanh (?f x)) \<longlongrightarrow> artanh ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_app (template_hole 2, template_hole 1),
          template_var 1),
        template_inequation (less_than, template_var 1, template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?l1) ?F; ?l1 ~= (0::?'a1);
         sgn ?l1 = ?y |]
      ==> ((%x. sgn (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; ?a1 ~= (0::?'a1);
         inverse ?a1 = ?y |]
      ==> ((%x. inverse (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; ?a1 ~= 0; ln ?a1 = ?y |]
      ==> ((%x. ln (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 1)),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g;
         ALL x:?s. ?g x ~= (0::?'b) |]
      ==> continuous_on ?s (%x. ?f x / ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g; ALL x:?s. ?f x ~= 0 |]
      ==> continuous_on ?s (%x. ?f x powr ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; cosh ?a1 ~= (0::?'a1);
         tanh ?a1 = ?y |]
      ==> ((%x. tanh (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 5, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; cos ?a1 ~= (0::?'a1);
         tan ?a1 = ?y |]
      ==> ((%x. tan (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 5, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; sin ?a1 ~= (0::?'a1);
         cot ?a1 = ?y |]
      ==> ((%x. cot (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 5, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.LIM_equal",
     "ALL x. x ~= ?a --> ?f x = ?g x ==>
      ?f \<midarrow>?a\<rightarrow> ?l = ?g \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Topological_Spaces.uniformly_continuous_onD",
     "[| uniformly_continuous_on ?s ?f; eventually ?E uniformity |]
      ==> \<forall>\<^sub>F (x, y) in uniformity.
             x : ?s --> y : ?s --> ?E (?f x, ?f y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_hole 0)
           ))),
    ("Topological_Spaces.tendsto_within_open_NO_MATCH",
     "[| ?a : ?S; NO_MATCH UNIV ?S; open ?S |]
      ==> (?f \<longlongrightarrow> ?l) (at ?a within ?S) =
          ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; ?a1 ~= (0::?'a1);
         ?a1 powi ?n1 = ?y |]
      ==> ((%x. ?f1 x powi ?n1) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app (template_hole 4, template_var 3)),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 1)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 0)),
             template_var 2)
           ))),
    ("Topological_Spaces.Lim_in_closed_set",
     "[| closed ?S; \<forall>\<^sub>F x in ?F. ?f x : ?S; ?F ~= bot;
         (?f \<longlongrightarrow> ?l) ?F |]
      ==> ?l : ?S",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0), template_var 3)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; 1 <= ?a;
         \<forall>\<^sub>F x in ?F. 1 <= ?f x |]
      ==> ((%x. arcosh (?f x)) \<longlongrightarrow> arcosh ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_inequation (less_equals, template_hole 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(!!i. i : ?I ==> (?f i \<longlongrightarrow> ?a i) ?F) ==>
      ((%x. SUM i:?I. ?f i x) \<longlongrightarrow> sum ?a ?I) ?F",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 3))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(!!i. i : ?I ==> (?f i \<longlongrightarrow> ?a i) ?F) ==>
      ((%x. PROD i:?I. ?f i x) \<longlongrightarrow> prod ?a ?I) ?F",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 3))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "(!!i. i : ?S ==> (?f i \<longlongrightarrow> ?L i) ?F) ==>
      ((%x. PROD i:?S. ?f i x) \<longlongrightarrow> prod ?L ?S) ?F",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 3))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; ?a1 - ?b1 = ?y |]
      ==> ((%x. ?f1 x - ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; ?a1 + ?b1 = ?y |]
      ==> ((%x. ?f1 x + ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?l1) ?F;
         (?g1 \<longlongrightarrow> ?m1) ?F; dist ?l1 ?m1 = ?y |]
      ==> ((%x. dist (?f1 x) (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; ?a1 * ?b1 = ?y |]
      ==> ((%x. ?f1 x * ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?X1 \<longlongrightarrow> ?x1) ?F;
         (?Y1 \<longlongrightarrow> ?y1) ?F; max ?x1 ?y1 = ?y |]
      ==> ((%x. max (?X1 x) (?Y1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?X1 \<longlongrightarrow> ?x1) ?F;
         (?Y1 \<longlongrightarrow> ?y1) ?F; min ?x1 ?y1 = ?y |]
      ==> ((%x. min (?X1 x) (?Y1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app (template_hole 2, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; ?a1 ^ ?b1 = ?y |]
      ==> ((%x. ?f1 x ^ ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; (?a1, ?b1) = ?y |]
      ==> ((%x. (?f1 x, ?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_app (template_hole 6, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; ?a1 *\<^sub>R ?b1 = ?y |]
      ==> ((%x. ?f1 x *\<^sub>R ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; Complex ?a1 ?b1 = ?y |]
      ==> ((%x. Complex (?f1 x) (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?a; isCont ?g ?a; ?g ?a ~= (0::?'b) |]
      ==> isCont (%x. ?f x / ?g x) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?a within ?s) ?f; continuous (at ?a within ?s) ?g;
         ?g ?a ~= (0::?'b) |]
      ==> continuous (at ?a within ?s) (%x. ?f x / ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 0, template_var 3),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?a; isCont ?g ?a; ?f ?a ~= 0 |]
      ==> isCont (%x. ?f x powr ?g x) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?a within ?s) ?f; continuous (at ?a within ?s) ?g;
         ?f ?a ~= 0 |]
      ==> continuous (at ?a within ?s) (%x. ?f x powr ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 3),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             t_empty)
           ))),
    ("Topological_Spaces.lim_mono",
     "[| !!n. ?N <= n ==> ?X n <= ?Y n; ?X \<longlonglongrightarrow> ?x;
         ?Y \<longlonglongrightarrow> ?y |]
      ==> ?x <= ?y",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 0)),
              template_hole 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Topological_Spaces.eventually_filtercomap_at_topological",
     "eventually ?P (filtercomap ?f (at ?A within ?B)) =
      (EX S. open S &
             ?A : S & (ALL x. ?f x : S Int ?B\<setminus>{?A} --> ?P x))",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 3),
         template_app
          (template_app (template_hole 11, template_var 2),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0))),
       template_app (template_hole 9, t_empty))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv",
     "(ALL S.
          (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
          (%n. ?X (S n)) \<longlonglongrightarrow> ?L) =
      ?X \<midarrow>?a\<rightarrow> ?L",
     template_equation
      (template_app (template_hole 13, t_empty),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("Topological_Spaces.continuous_on_generate_topology",
     "[| open = generate_topology ?X;
         !!B. B : ?X ==>
              EX C. open C & C Int ?A = ?f \<^sup>\<inverse> ?A B |]
      ==> continuous_on ?A ?f",
     template_implication
      ([template_equation
         (template_hole 10, template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; (?g \<longlongrightarrow> ?b) ?F;
         ?b ~= (0::?'a) |]
      ==> ((%x. ?f x / ?g x) \<longlongrightarrow> ?a / ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app (template_hole 4, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 0)),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.LIMSEQ_le",
     "[| ?X \<longlonglongrightarrow> ?x; ?Y \<longlonglongrightarrow> ?y;
         EX N. ALL n>=N. ?X n <= ?Y n |]
      ==> ?x <= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; - 1 < ?a1; ?a1 < 1;
         artanh ?a1 = ?y |]
      ==> ((%x. artanh (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 3, template_hole 2),
          template_var 2),
        template_inequation (less_than, template_var 2, template_hole 2),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 5, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.connected_diff_open_from_closed",
     "[| ?s <= ?t; ?t <= ?u; open ?s; closed ?t; connected ?u;
         connected (?t\<setminus>?s) |]
      ==> connected (?u\<setminus>?s)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv1",
     "?f \<midarrow>?a\<rightarrow> ?l ==>
      ALL S.
         (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
         (%n. ?f (S n)) \<longlonglongrightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_hole 10))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv2",
     "ALL S.
         (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
         (%n. ?f (S n)) \<longlonglongrightarrow> ?l ==>
      ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("Topological_Spaces.connectedI_interval",
     "(!!x y z. [| x : ?U; y : ?U; x <= z; z <= y |] ==> z : ?U) ==>
      connected ?U",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.continuous_on_open_UN",
     "[| !!s. s : ?S ==> open (?A s);
         !!s. s : ?S ==> continuous_on (?A s) ?f |]
      ==> continuous_on (\<Union> (?A ` ?S)) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 2))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_at_iff_sequentially",
     "(?f \<longlongrightarrow> ?a) (at ?x within ?s) =
      (ALL X.
          (ALL i. X i : ?s\<setminus>{?x}) -->
          X \<longlonglongrightarrow> ?x -->
          (?f o X) \<longlonglongrightarrow> ?a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 14, template_var 3),
           template_app (template_hole 13, template_var 2)),
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Topological_Spaces.open_prod_intro",
     "(!!x. x : ?S ==>
            EX A B.
               open A & open B & x : A \<times> B & A \<times> B <= ?S) ==>
      open ?S",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.tendsto_compose_eventually",
     "[| ?g \<midarrow>?l\<rightarrow> ?m; (?f \<longlongrightarrow> ?l) ?F;
         \<forall>\<^sub>F x in ?F. ?f x ~= ?l |]
      ==> ((%x. ?g (?f x)) \<longlongrightarrow> ?m) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_app (template_hole 8, template_var 3)),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_hole 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_var 2)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 8, template_var 3)),
             template_var 0)
           ))),
    ("Topological_Spaces.continuous_at_Inf_antimono",
     "[| antimono ?f; continuous (at_right (Inf ?S)) ?f; ?S ~= {};
         bdd_below ?S |]
      ==> ?f (Inf ?S) = Sup (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)))),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Topological_Spaces.continuous_at_Sup_antimono",
     "[| antimono ?f; continuous (at_left (Sup ?S)) ?f; ?S ~= {};
         bdd_above ?S |]
      ==> ?f (Sup ?S) = Inf (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)))),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Topological_Spaces.continuous_at_Inf_mono",
     "[| mono ?f; continuous (at_right (Inf ?S)) ?f; ?S ~= {};
         bdd_below ?S |]
      ==> ?f (Inf ?S) = Inf (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)))),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Topological_Spaces.continuous_at_Sup_mono",
     "[| mono ?f; continuous (at_left (Sup ?S)) ?f; ?S ~= {};
         bdd_above ?S |]
      ==> ?f (Sup ?S) = Sup (?f ` ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 8, template_var 0)))),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 0))))),
    ("Topological_Spaces.connected_local_const",
     "[| connected ?A; ?a : ?A; ?b : ?A;
         ALL a:?A. \<forall>\<^sub>F b in at a within ?A. ?f a = ?f b |]
      ==> ?f ?a = ?f ?b",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            )],
       template_equation
        (template_app (template_var 0, template_var 2),
         template_app (template_var 0, template_var 1)))),
    ("Topological_Spaces.continuous_onI_mono",
     "[| open (?f ` ?A);
         !!x y. [| x : ?A; y : ?A; x <= y |] ==> ?f x <= ?f y |]
      ==> continuous_on ?A ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Topological_Spaces.continuous_on_tendsto_compose",
     "[| continuous_on ?s ?f; (?g \<longlongrightarrow> ?l) ?F; ?l : ?s;
         \<forall>\<^sub>F x in ?F. ?g x : ?s |]
      ==> ((%x. ?f (?g x)) \<longlongrightarrow> ?f ?l) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 1))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F; 1 <= ?a1;
         \<forall>\<^sub>F x in ?F. 1 <= ?f1 x; arcosh ?a1 = ?y |]
      ==> ((%x. arcosh (?f1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_equals, template_hole 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 1)
            ),
        template_equation
         (template_app (template_hole 0, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 5, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.continuous_within_topological",
     "continuous (at ?x within ?s) ?f =
      (ALL B.
          open B -->
          ?f ?x : B -->
          (EX A. open A & ?x : A & (ALL y:?s. y : A --> ?f y : B)))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| !!i. i : ?I1 ==> (?f1 i \<longlongrightarrow> ?a1 i) ?F;
         sum ?a1 ?I1 = ?y |]
      ==> ((%x. SUM i:?I1. ?f1 i x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 0, t_empty), template_var 4),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| !!i. i : ?I1 ==> (?f1 i \<longlongrightarrow> ?a1 i) ?F;
         prod ?a1 ?I1 = ?y |]
      ==> ((%x. PROD i:?I1. ?f1 i x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 0, t_empty), template_var 4),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| !!i. i : ?S1 ==> (?f1 i \<longlongrightarrow> ?L1 i) ?F;
         prod ?L1 ?S1 = ?y |]
      ==> ((%x. PROD i:?S1. ?f1 i x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 0, t_empty), template_var 4),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_var 1)
           ))),
    ("Topological_Spaces.continuous_on_topological",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL B.
             open B -->
             ?f x : B -->
             (EX A. open A & x : A & (ALL y:?s. y : A --> ?f y : B)))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, template_var 1), t_empty))),
    ("Topological_Spaces.continuous_on_closed_Union",
     "[| finite ?I; !!i. i : ?I ==> closed (?U i);
         !!i. i : ?I ==> continuous_on (?U i) ?f |]
      ==> continuous_on (\<Union> (?U ` ?I)) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 2))),
             template_var 0)
           ))),
    ("Topological_Spaces.tendsto_compose_at",
     "[| (?f \<longlongrightarrow> ?y) ?F; ?g \<midarrow>?y\<rightarrow> ?z;
         \<forall>\<^sub>F w in ?F. ?f w = ?y --> ?g ?y = ?z |]
      ==> ((?g o ?f) \<longlongrightarrow> ?z) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_app (template_hole 10, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 1),
                template_app (template_hole 8, template_var 0)),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_hole 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4)),
               template_app (template_hole 8, template_var 0)),
             template_var 2)
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; ?b1 ~= (0::?'a1);
         ?a1 / ?b1 = ?y |]
      ==> ((%x. ?f1 x / ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app (template_hole 4, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_var 1)),
              template_var 3)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 4, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.IVT'",
     "[| ?f ?a <= ?y; ?y <= ?f ?b; ?a <= ?b; continuous_on {?a..?b} ?f |]
      ==> EX x>=?a. x <= ?b & ?f x = ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 3, template_var 0)),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Topological_Spaces.IVT2'",
     "[| ?f ?b <= ?y; ?y <= ?f ?a; ?a <= ?b; continuous_on {?a..?b} ?f |]
      ==> EX x>=?a. x <= ?b & ?f x = ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 3, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Topological_Spaces.connected_closedD",
     "[| connected ?s; ?A Int ?B Int ?s = {}; ?s <= ?A Un ?B; closed ?A;
         closed ?B |]
      ==> ?A Int ?s = {} | ?B Int ?s = {}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0)),
            template_var 2),
          template_hole 4),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 2)),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 2)),
               template_hole 4))
           ))),
    ("Topological_Spaces.LIM_cong",
     "[| ?a = ?b; !!x. x ~= ?b ==> ?f x = ?g x; ?l = ?m |]
      ==> ?f \<midarrow>?a\<rightarrow> ?l =
          ?g \<midarrow>?b\<rightarrow> ?m",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_hole 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_hole 0))))),
    ("Topological_Spaces.LIM_compose_eventually",
     "[| ?f \<midarrow>?a\<rightarrow> ?b; ?g \<midarrow>?b\<rightarrow> ?c;
         \<forall>\<^sub>F x in at ?a. ?f x ~= ?b |]
      ==> (%x. ?g (?f x)) \<midarrow>?a\<rightarrow> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_app (template_hole 10, template_var 3)),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_hole 8))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, t_empty),
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_hole 8))
           ))),
    ("Topological_Spaces.connected_closed",
     "connected ?s =
      (\<nexists>A B.
          closed A &
          closed B &
          ?s <= A Un B &
          A Int B Int ?s = {} & A Int ?s ~= {} & B Int ?s ~= {})",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_hole 8, template_app (template_hole 7, t_empty)))),
    ("Topological_Spaces.open_prod_elim",
     "[| open ?S; ?x : ?S;
         !!A B.
            [| open A; open B; ?x : A \<times> B; A \<times> B <= ?S |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; (?g \<longlongrightarrow> ?b) ?F;
         0 < ?a; ?a ~= 1; 0 < ?b |]
      ==> ((%x. log (?f x) (?g x)) \<longlongrightarrow> log ?a ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_app (template_hole 6, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 0)),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 4, template_var 3),
        template_negation
         (template_equation (template_var 3, template_hole 1)),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| isCont ?f ?a; isCont ?g ?a; 0 < ?f ?a; ?f ?a ~= 1; 0 < ?g ?a |]
      ==> isCont (%x. log (?f x) (?g x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_var 1, template_var 2)),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 2),
              template_hole 1)
            ),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_hole 6)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous (at ?a within ?s) ?f; continuous (at ?a within ?s) ?g;
         0 < ?f ?a; ?f ?a ~= 1; 0 < ?g ?a |]
      ==> continuous (at ?a within ?s) (%x. log (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_var 1, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 3),
              template_hole 1)
            ),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_var 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             t_empty)
           ))),
    ("Topological_Spaces.tendsto_intros",
     "[| (?f \<longlongrightarrow> ?a) ?F; (?g \<longlongrightarrow> ?b) ?F;
         ?a ~= 0 | 0 < ?b & (\<forall>\<^sub>F x in ?F. 0 <= ?f x) |]
      ==> ((%x. ?f x powr ?g x) \<longlongrightarrow> ?a powr ?b) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_app (template_hole 9, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_app (template_hole 9, template_var 0)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 5))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 5),
                    template_var 0)),
                template_app
                 (template_app (template_hole 2, t_empty), template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Topological_Spaces.continuous_intros",
     "[| continuous_on ?s ?f; continuous_on ?s ?g; ALL x:?s. 0 < ?f x;
         ALL x:?s. ?f x ~= 1; ALL x:?s. 0 < ?g x |]
      ==> continuous_on ?s (%x. log (?f x) (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_inj_imp_mono",
     "[| ?a < ?x; ?x < ?b; continuous_on {?a..?b} ?f; inj_on ?f {?a..?b} |]
      ==> ?f ?a < ?f ?x & ?f ?x < ?f ?b | ?f ?b < ?f ?x & ?f ?x < ?f ?a",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_var 0, template_var 3)),
                     template_app (template_var 0, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 0, template_var 2)),
                   template_app (template_var 0, template_var 1)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 0, template_var 1)),
                   template_app (template_var 0, template_var 2))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 0, template_var 2)),
                 template_app (template_var 0, template_var 3))))
           ))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F; 0 < ?a1; ?a1 ~= 1; 0 < ?b1;
         log ?a1 ?b1 = ?y |]
      ==> ((%x. log (?f1 x) (?g1 x)) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_app (template_hole 6, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_var 3)
            ),
        template_inequation (less_than, template_hole 4, template_var 4),
        template_negation
         (template_equation (template_var 4, template_hole 1)),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 6, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.sequentially_imp_eventually_at_right",
     "[| ?a < ?b;
         !!f. [| !!n. ?a < f n; !!n. f n < ?b; decseq f;
                 f \<longlonglongrightarrow> ?a |]
              ==> \<forall>\<^sub>F n in sequentially. ?P (f n) |]
      ==> eventually ?P (at_right ?a)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Topological_Spaces.sequentially_imp_eventually_at_left",
     "[| ?b < ?a;
         !!f. [| !!n. ?b < f n; !!n. f n < ?a; incseq f;
                 f \<longlonglongrightarrow> ?a |]
              ==> \<forall>\<^sub>F n in sequentially. ?P (f n) |]
      ==> eventually ?P (at_left ?a)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Topological_Spaces.IVT",
     "[| ?f ?a <= ?y; ?y <= ?f ?b; ?a <= ?b;
         ALL x. ?a <= x & x <= ?b --> isCont ?f x |]
      ==> EX x>=?a. x <= ?b & ?f x = ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 3, template_var 0)),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Topological_Spaces.IVT2",
     "[| ?f ?b <= ?y; ?y <= ?f ?a; ?a <= ?b;
         ALL x. ?a <= x & x <= ?b --> isCont ?f x |]
      ==> EX x>=?a. x <= ?b & ?f x = ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 3, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Topological_Spaces.tendsto_eq_intros",
     "[| (?f1 \<longlongrightarrow> ?a1) ?F;
         (?g1 \<longlongrightarrow> ?b1) ?F;
         ?a1 ~= 0 | 0 < ?b1 & (\<forall>\<^sub>F x in ?F. 0 <= ?f1 x);
         ?a1 powr ?b1 = ?y |]
      ==> ((%x. ?f1 x powr ?g1 x) \<longlongrightarrow> ?y) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_app (template_hole 9, template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_app (template_hole 9, template_var 1)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_hole 5))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 5),
                    template_var 1)),
                template_app
                 (template_app (template_hole 2, t_empty), template_var 3)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 4), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app (template_hole 9, template_var 0)),
             template_var 3)
           ))),
    ("Topological_Spaces.monoseq_le",
     "[| monoseq ?a; ?a \<longlonglongrightarrow> ?x |]
      ==> (ALL n. ?a n <= ?x) & (ALL m n. m <= n --> ?a m <= ?a n) |
          (ALL n. ?x <= ?a n) & (ALL m n. m <= n --> ?a n <= ?a m)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_app (template_hole 7, template_var 0)),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_app (template_hole 3, t_empty))),
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app (template_hole 3, t_empty)))
           ))),
    ("Topological_Spaces.tendsto_at_right_sequentially",
     "[| ?a < ?b;
         !!S. [| !!n. ?a < S n; !!n. S n < ?b; decseq S;
                 S \<longlonglongrightarrow> ?a |]
              ==> (%n. ?X (S n)) \<longlonglongrightarrow> ?L |]
      ==> (?X \<longlongrightarrow> ?L) (at_right ?a)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Topological_Spaces.tendsto_at_left_sequentially",
     "[| ?b < ?a;
         !!S. [| !!n. S n < ?a; !!n. ?b < S n; incseq S;
                 S \<longlonglongrightarrow> ?a |]
              ==> (%n. ?X (S n)) \<longlonglongrightarrow> ?L |]
      ==> (?X \<longlongrightarrow> ?L) (at_left ?a)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Topological_Spaces.continuous_on_IccI",
     "[| (?f \<longlongrightarrow> ?f ?a) (at_right ?a);
         (?f \<longlongrightarrow> ?f ?b) (at_left ?b);
         !!x. [| ?a < x; x < ?b |] ==> ?f \<midarrow>x\<rightarrow> ?f x;
         ?a < ?b |]
      ==> continuous_on {?a..?b} ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_hole 8,
                  template_app (template_var 2, template_var 1))),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app (template_hole 6, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_hole 8,
                  template_app (template_var 2, template_var 0))),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_app (template_hole 5, template_var 0)))
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("Topological_Spaces.continuous_on_cases",
     "[| closed ?s; closed ?t; continuous_on ?s ?f; continuous_on ?t ?g;
         ALL x. x : ?s & ~ ?P x | x : ?t & ?P x --> ?f x = ?g x |]
      ==> continuous_on (?s Un ?t) (%x. if ?P x then ?f x else ?g x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             t_empty)
           ))),
    ("Topological_Spaces.continuous_on_compose_Pair",
     "[| continuous_on (Sigma ?A ?B) (%(a, b). ?f a b); continuous_on ?C ?g;
         continuous_on ?C ?h; !!c. c : ?C ==> ?g c : ?A;
         !!c. c : ?C ==> ?h c : ?B (?g c) |]
      ==> continuous_on ?C (%c. ?f (?g c) (?h c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_app (template_hole 7, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)
           ))),
    ("Topological_Spaces.continuous_on_If",
     "[| closed ?s; closed ?t; continuous_on ?s ?f; continuous_on ?t ?g;
         !!x. [| x : ?s; ~ ?P x |] ==> ?f x = ?g x;
         !!x. [| x : ?t; ?P x |] ==> ?f x = ?g x |]
      ==> continuous_on (?s Un ?t) (%x. if ?P x then ?f x else ?g x)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             t_empty)
           ))),
    ("Topological_Spaces.filterlim_at_bot_at_right",
     "[| !!x y. [| ?Q x; ?Q y; x <= y |] ==> ?f x <= ?f y;
         !!x. ?P x ==> ?f (?g x) = x; !!x. ?P x ==> ?Q (?g x);
         eventually ?Q (at_right ?a); !!b. ?Q b ==> ?a < b;
         eventually ?P at_bot |]
      ==> filterlim ?f at_bot (at_right ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 0)))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_hole 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app (template_hole 4, template_var 0)))
           ))),
    ("Topological_Spaces.filterlim_at_top_at_left",
     "[| !!x y. [| ?Q x; ?Q y; x <= y |] ==> ?f x <= ?f y;
         !!x. ?P x ==> ?f (?g x) = x; !!x. ?P x ==> ?Q (?g x);
         eventually ?Q (at_left ?a); !!b. ?Q b ==> b < ?a;
         eventually ?P at_top |]
      ==> filterlim ?f at_top (at_left ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 0)))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_hole 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app (template_hole 4, template_var 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.Topological_SpaceMoreTemplates"
### 0.477s elapsed time, 0.598s cpu time, 0.080s GC time
val it = (): unit
