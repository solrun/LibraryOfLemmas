   [("Topological_Spaces.lim_const", "lim (%m. ?a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), t_empty),
       template_var 0)),
    ("Topological_Spaces.fst_vimage_eq_Times",
     "fst -` ?S = ?S \<times> UNIV",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Topological_Spaces.snd_vimage_eq_Times",
     "snd -` ?S = UNIV \<times> ?S",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), t_empty))),
    ("Topological_Spaces.decseq_eq_incseq",
     "decseq ?X = incseq (%n. - ?X n)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Topological_Spaces.monoseq_iff",
     "monoseq ?X = (incseq ?X | decseq ?X)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.convergent_LIMSEQ_iff",
     "convergent ?X = ?X \<longlonglongrightarrow> lim ?X",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_hole 0))),
    ("Topological_Spaces.LIMSEQ_const_iff",
     "(%n. ?k) \<longlonglongrightarrow> ?l = (?k = ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Topological_Spaces.nhds_prod",
     "nhds (?a, ?b) = nhds ?a \<times>\<^sub>F nhds ?b",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.decseq_Suc_iff",
     "decseq ?f = (ALL n. ?f (Suc n) <= ?f n)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Topological_Spaces.incseq_Suc_iff",
     "incseq ?f = (ALL n. ?f n <= ?f (Suc n))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Topological_Spaces.strict_mono_Suc_iff",
     "strict_mono ?f = (ALL n. ?f n < ?f (Suc n))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Topological_Spaces.continuous_on_eq_continuous_within",
     "continuous_on ?s ?f = (ALL x:?s. continuous (at x within ?s) ?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Topological_Spaces.eventually_eventually",
     "(\<forall>\<^sub>F y in nhds ?x. eventually ?P (nhds y)) =
      eventually ?P (nhds ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.continuous_at",
     "isCont ?f ?x = ?f \<midarrow>?x\<rightarrow> ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app (template_var 0, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_hole 2)))),
    ("Topological_Spaces.continuous_within",
     "continuous (at ?x within ?s) ?f =
      (?f \<longlongrightarrow> ?f ?x) (at ?x within ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app (template_var 0, template_var 2))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("Topological_Spaces.tendsto_compose_filtermap",
     "((?g o ?f) \<longlongrightarrow> ?T) ?F =
      (?g \<longlongrightarrow> ?T) (filtermap ?f ?F)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Topological_Spaces.tendsto_at_iff_tendsto_nhds",
     "?g \<midarrow>?l\<rightarrow> ?g ?l =
      (?g \<longlongrightarrow> ?g ?l) (nhds ?l)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Topological_Spaces.LIMSEQ_lessThan_iff_atMost",
     "(%n. ?f {..<n}) \<longlonglongrightarrow> ?x =
      (%n. ?f {..n}) \<longlonglongrightarrow> ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_hole 1))),
    ("Topological_Spaces.connected_iff_const",
     "connected ?S =
      (ALL P. continuous_on ?S P --> (EX c. ALL s:?S. P s = c))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.continuous_at_split",
     "isCont ?f ?x =
      (continuous (at_left ?x) ?f & continuous (at_right ?x) ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 1, template_var 1))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("Topological_Spaces.connected_Times_eq",
     "connected (?S \<times> ?T) =
      (?S = {} | ?T = {} | connected ?S & connected ?T)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 1), t_empty))
            )],
       template_dunno)),
    ("Topological_Spaces.tendsto_at_within_iff_tendsto_nhds",
     "(?g \<longlongrightarrow> ?g ?l) (at ?l within ?S) =
      (?g \<longlongrightarrow> ?g ?l) (inf (nhds ?l) (principal ?S))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app (template_var 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app (template_var 2, template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Topological_Spaces.monoseq_Suc",
     "monoseq ?X =
      ((ALL n. ?X n <= ?X (Suc n)) | (ALL n. ?X (Suc n) <= ?X n))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app (template_hole 2, t_empty)))),
    ("Topological_Spaces.uniformly_continuous_on_uniformity",
     "uniformly_continuous_on ?s ?f =
      (LIM (x, y) uniformity_on ?s. (?f x, ?f y) :> uniformity)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_hole 4),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               t_empty)))))),
    ("Topological_Spaces.connected_iff_interval",
     "connected ?U = (ALL x:?U. ALL y:?U. ALL z>=x. z <= y --> z : ?U)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, template_var 0), t_empty))),
    ("Topological_Spaces.filterlim_at_split",
     "filterlim ?f ?F (at ?x) =
      (filterlim ?f ?F (at_left ?x) & filterlim ?f ?F (at_right ?x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 0)))))),
    ("Topological_Spaces.eventually_Lim_ident_at",
     "eventually (?P (Lim (at ?x within ?X) (%x. x))) (at ?x within ?X) =
      eventually (?P ?x) (at ?x within ?X)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Topological_Spaces.continuous_on_open_invariant",
     "continuous_on ?s ?f =
      (ALL B.
          open B -->
          (EX A. open A & A Int ?s = ?f \<^sup>\<inverse> ?s B))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Topological_Spaces.continuous_on_closed_invariant",
     "continuous_on ?s ?f =
      (ALL B.
          closed B -->
          (EX A. closed A & A Int ?s = ?f \<^sup>\<inverse> ?s B))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Topological_Spaces.eventually_filtercomap_nhds",
     "eventually ?P (filtercomap ?f (nhds ?x)) =
      (EX S. open S & ?x : S & (ALL x. ?f x : S --> ?P x))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app (template_hole 6, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("Topological_Spaces.eventually_at_right_field",
     "eventually ?P (at_right ?x) = (EX b>?x. ALL y>?x. y < b --> ?P y)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.eventually_at_left_field",
     "eventually ?P (at_left ?x) = (EX b<?x. ALL y>b. y < ?x --> ?P y)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 5, template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("Topological_Spaces.lim_explicit",
     "?f \<longlonglongrightarrow> ?f0.0 =
      (ALL S. open S --> ?f0.0 : S --> (EX N. ALL n>=N. ?f n : S))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 1),
           template_app (template_hole 8, template_var 0)),
         template_hole 7),
       template_app (template_hole 6, t_empty))),
    ("Topological_Spaces.eventually_filtercomap_at_topological",
     "eventually ?P (filtercomap ?f (at ?A within ?B)) =
      (EX S. open S &
             ?A : S & (ALL x. ?f x : S Int ?B\<setminus>{?A} --> ?P x))",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 3),
         template_app
          (template_app (template_hole 11, template_var 2),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0))),
       template_app (template_hole 9, t_empty))),
    ("Topological_Spaces.LIMSEQ_SEQ_conv",
     "(ALL S.
          (ALL n. S n ~= ?a) & S \<longlonglongrightarrow> ?a -->
          (%n. ?X (S n)) \<longlonglongrightarrow> ?L) =
      ?X \<midarrow>?a\<rightarrow> ?L",
     template_equation
      (template_app (template_hole 13, t_empty),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("Topological_Spaces.tendsto_at_iff_sequentially",
     "(?f \<longlongrightarrow> ?a) (at ?x within ?s) =
      (ALL X.
          (ALL i. X i : ?s\<setminus>{?x}) -->
          X \<longlonglongrightarrow> ?x -->
          (?f o X) \<longlonglongrightarrow> ?a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 14, template_var 3),
           template_app (template_hole 13, template_var 2)),
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Topological_Spaces.continuous_within_topological",
     "continuous (at ?x within ?s) ?f =
      (ALL B.
          open B -->
          ?f ?x : B -->
          (EX A. open A & ?x : A & (ALL y:?s. y : A --> ?f y : B)))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Topological_Spaces.continuous_on_topological",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL B.
             open B -->
             ?f x : B -->
             (EX A. open A & x : A & (ALL y:?s. y : A --> ?f y : B)))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, template_var 1), t_empty))),
    ("Topological_Spaces.connected_closed",
     "connected ?s =
      (\<nexists>A B.
          closed A &
          closed B &
          ?s <= A Un B &
          A Int B Int ?s = {} & A Int ?s ~= {} & B Int ?s ~= {})",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_hole 8, template_app (template_hole 7, t_empty))))]
