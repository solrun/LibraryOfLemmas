Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.151s elapsed time, 0.626s cpu time, 0.044s GC time
Loading theory "HOL-Library.While_Combinator" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.TortoiseHare" via "Draft.Basis")
### theory "HOL-Library.Set_Algebras"
### 0.196s elapsed time, 0.805s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.347s elapsed time, 1.397s cpu time, 0.131s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "HOL-Library.While_Combinator"
### 0.400s elapsed time, 1.578s cpu time, 0.156s GC time
Loading theory "Draft.Basis" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.TortoiseHare")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
locale fx0
  fixes f :: "'a => 'a"
    and x0 :: "'a"
Proofs for coinductive predicate(s) "streamsp"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
  Proving monotonicity ...
locale properties
  fixes f :: "'a => 'a"
    and x0 :: "'a"
    and lambda :: "nat"
    and mu :: "nat"
  assumes "Basis.properties f x0 lambda mu"
### theory "Draft.Basis"
### 0.261s elapsed time, 1.023s cpu time, 0.126s GC time
Loading theory "Draft.TortoiseHare" (required by "Draft.TortoiseHareMoreTemplates")
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.958s elapsed time, 3.624s cpu time, 0.794s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
locale properties
  fixes f :: "'a => 'a"
    and x0 :: "'a"
    and lambda :: "nat"
    and mu :: "nat"
  assumes "Basis.properties f x0 lambda mu"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### Cannot skip proof of schematic goal statement
### theory "HOL-Library.Stream"
### 1.050s elapsed time, 3.776s cpu time, 0.745s GC time
Found termination order: "size <*mlex*> {}"
See theory exports
### theory "Draft.TortoiseHare"
### 0.657s elapsed time, 2.116s cpu time, 0.618s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.937s elapsed time, 5.874s cpu time, 0.989s GC time
Loading theory "Draft.Templates" (required by "Draft.TortoiseHareMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.064s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TortoiseHareMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.472s elapsed time, 0.522s cpu time, 0.058s GC time
Loading theory "Draft.TortoiseHareMoreTemplates"
val templateLemmas =
   [("TortoiseHare.tortoise_hare_correct",
     "?s' = fx0.tortoise_hare ?f ?x ?arbitrary ==>
      fx0.properties ?f ?x (l ?s') (m ?s')",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app (template_hole 1, template_var 3)),
             template_app (template_hole 0, template_var 3))
           ))),
    ("TortoiseHare.tortoise_hare_code",
     "fx0.tortoise_hare ?f ?x =
      while (%s. hare s ~= tortoise s)
       (%s. s(| hare := ?f (hare s), l := l s + 1 |)) o
      (%s. s(| l := 1, hare := ?f (tortoise s) |)) o
      (while (%s. hare s ~= tortoise s)
        (%s. s(| tortoise := ?f (tortoise s), hare := ?f (hare s),
                 m := m s + 1 |)) o
       (%s. s(| m := 0, tortoise := ?x |)) o
       (while (%s. hare s ~= tortoise s)
         (%s. s(| nu := nu s + 1, tortoise := ?f (tortoise s),
                  hare := ?f (?f (hare s)) |)) o
        (%s. s(| nu := 1, tortoise := ?f ?x, hare := ?f (?f ?x) |))))",
     template_equation
      (template_app
        (template_app (template_hole 17, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, t_empty), t_empty)),
             t_empty)),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, t_empty), t_empty)),
               t_empty)),
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, t_empty), t_empty)),
             t_empty)))))]:
   (string * thm * template) list
### theory "Draft.TortoiseHareMoreTemplates"
### 0.317s elapsed time, 0.437s cpu time, 0.000s GC time
val it = (): unit
