   [("Cauchy_Index_Theorem.jump_const", "jump (%_. ?c) ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_hole 0)),
    ("Cauchy_Index_Theorem.cindexE_empty", "cindexE ?a ?a ?f = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Cauchy_Index_Theorem.cindex_const", "cindex ?a ?b (%_. ?c) = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         t_empty),
       template_hole 0)),
    ("Cauchy_Index_Theorem.sgnx_poly_at_bot",
     "sgnx (poly ?p) at_bot = sgn_neg_inf ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Cauchy_Index_Theorem.sgnx_poly_at_top",
     "sgnx (poly ?p) at_top = sgn_pos_inf ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Cauchy_Index_Theorem.cindex_pathE_point",
     "cindex_pathE (linepath ?a ?a) ?b = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 1)),
         template_var 0),
       template_hole 0)),
    ("Cauchy_Index_Theorem.jumpF_pathfinish_reversepath",
     "jumpF_pathfinish (reversepath ?g) ?z = jumpF_pathstart ?g ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cauchy_Index_Theorem.jumpF_pathstart_reversepath",
     "jumpF_pathstart (reversepath ?g) ?z = jumpF_pathfinish ?g ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Cauchy_Index_Theorem.cindex_path_reversepath",
     "cindex_path (reversepath ?g) ?z = - cindex_path ?g ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Cauchy_Index_Theorem.cindex_pathE_reversepath'",
     "cindex_pathE ?g ?z = - cindex_pathE (reversepath ?g) ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Cauchy_Index_Theorem.cindex_pathE_reversepath",
     "cindex_pathE (reversepath ?g) ?z = - cindex_pathE ?g ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Cauchy_Index_Theorem.jumpF_pathfinish_joinpaths",
     "jumpF_pathfinish (?g1.0 +++ ?g2.0) ?z = jumpF_pathfinish ?g2.0 ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Cauchy_Index_Theorem.jumpF_pathstart_joinpaths",
     "jumpF_pathstart (?g1.0 +++ ?g2.0) ?z = jumpF_pathstart ?g1.0 ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Cauchy_Index_Theorem.has_sgnx_inverse",
     "(?f has_sgnx ?c) ?F = ((inverse o ?f) has_sgnx inverse ?c) ?F",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Cauchy_Index_Theorem.sign_r_pos_sgnx_iff",
     "sign_r_pos ?p ?a = (0 < sgnx (poly ?p) (at_right ?a))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)))))),
    ("Cauchy_Index_Theorem.jump_jump_poly",
     "jump (%x. poly ?q x / poly ?p x) ?a = jump_poly ?q ?p ?a",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Cauchy_Index_Theorem.cindex_eq_cindex_poly",
     "cindex ?a ?b (%x. poly ?q x / poly ?p x) = cindex_poly ?a ?b ?q ?p",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         t_empty),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Cauchy_Index_Theorem.has_sgnx_split",
     "(?f has_sgnx ?c) (at ?x) =
      ((?f has_sgnx ?c) (at_left ?x) & (?f has_sgnx ?c) (at_right ?x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 0)))))),
    ("Cauchy_Index_Theorem.jumpF_tan_comp",
     "jumpF (?f o tan) (at_right ?x) =
      (if cos ?x = 0 then jumpF ?f at_bot
       else jumpF ?f (at_right (tan ?x)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6)),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 0)))
            )],
       template_dunno)),
    ("Cauchy_Index_Theorem.jumpF_tan_comp",
     "jumpF (?f o tan) (at_left ?x) =
      (if cos ?x = 0 then jumpF ?f at_top
       else jumpF ?f (at_left (tan ?x)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6)),
              template_app
               (template_app (template_hole 5, template_var 0),
                template_app (template_hole 4, template_var 0)))
            )],
       template_dunno))]
