   [("Missing_Topology.uniform_discrete_imp_discrete",
     "uniform_discrete ?S ==> discrete ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Missing_Topology.uniform_discrete_imp_closed",
     "uniform_discrete ?S ==> closed ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Missing_Topology.uniform_discrete_insert",
     "uniform_discrete (insert ?a ?S) = uniform_discrete ?S",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Missing_Topology.continuous_on_discrete",
     "discrete ?S ==> continuous_on ?S ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Missing_Topology.uniform_discrete_finite_iff",
     "(uniform_discrete ?S & bounded ?S) = finite ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Topology.discrete_compact_finite_iff",
     "(discrete ?S & compact ?S) = finite ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Missing_Topology.eventually_uminus_at_top_at_bot",
     "eventually (?P o uminus) at_bot = eventually ?P at_top",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 1),
       template_app
        (template_app (template_hole 4, template_var 0), template_hole 0))),
    ("Missing_Topology.eventually_uminus_at_top_at_bot",
     "eventually (?P o uminus) at_top = eventually ?P at_bot",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 1),
       template_app
        (template_app (template_hole 4, template_var 0), template_hole 0))),
    ("Missing_Topology.eventually_comp_filtermap",
     "eventually (?P o ?f) ?F = eventually ?P (filtermap ?f ?F)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Missing_Topology.uniform_discrete_subset",
     "[| uniform_discrete ?S; ?T <= ?S |] ==> uniform_discrete ?T",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Missing_Topology.discrete_subset",
     "[| discrete ?S; ?T <= ?S |] ==> discrete ?T",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Missing_Topology.isolate_islimpt_iff",
     "?x isolate ?S = (~ ?x islimpt ?S & ?x : ?S)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Missing_Topology.eventually_at_bot_linorderI",
     "(!!x. x <= ?c ==> ?P x) ==> eventually ?P at_bot",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Missing_Topology.eventually_at_infinityI",
     "(!!x. ?c <= norm x ==> ?P x) ==> eventually ?P at_infinity",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Missing_Topology.open_times_image",
     "[| open ?S; ?c ~= (0::?'a) |] ==> open ((*) ?c ` ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Missing_Topology.tendsto_inverse_0_at_infinity",
     "filterlim ?f at_infinity ?F ==>
      ((%x. inverse (?f x)) \<longlongrightarrow> 0) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, t_empty), template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 1, template_hole 0)),
             template_var 0)
           ))),
    ("Missing_Topology.isolate_insert",
     "?x isolate insert ?a ?S =
      (?x isolate ?S | ?x = ?a & ~ ?x islimpt ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))))
           ))),
    ("Missing_Topology.continuous_on_at_right",
     "[| continuous_on {?a..?b} ?f; ?a < ?b |]
      ==> continuous (at_right ?a) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 2))),
             template_var 0)
           ))),
    ("Missing_Topology.continuous_on_at_left",
     "[| continuous_on {?a..?b} ?f; ?a < ?b |]
      ==> continuous (at_left ?b) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Missing_Topology.isolate_subset",
     "[| ?x isolate ?S; ?T <= ?S; ?x : ?T |] ==> ?x isolate ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Missing_Topology.filterlim_at_top_at_bot",
     "[| filterlim ?f at_top ?F; filterlim ?f at_bot ?F; ?F ~= bot |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 4),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_predicate (template_hole 0))),
    ("Missing_Topology.filterlim_at_bot_nhds",
     "[| filterlim ?f at_bot ?F; (?f \<longlongrightarrow> ?c) ?F;
         ?F ~= bot |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 4, template_var 0)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate (template_hole 0))),
    ("Missing_Topology.filterlim_at_top_nhds",
     "[| filterlim ?f at_top ?F; (?f \<longlongrightarrow> ?c) ?F;
         ?F ~= bot |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 4, template_var 0)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate (template_hole 0))),
    ("Missing_Topology.filtermap_at_bot_linear_eq",
     "?c ~= (0::?'a) ==>
      filtermap (%x. x * ?c + ?b) at_bot =
      (if (0::?'a) < ?c then at_bot else at_top)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_hole 3),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 8),
                 template_var 1)),
             template_hole 3),
           template_hole 0)))),
    ("Missing_Topology.filtermap_at_top_linear_eq",
     "?c ~= (0::?'a) ==>
      filtermap (%x. x * ?c + ?b) at_top =
      (if (0::?'a) < ?c then at_top else at_bot)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_hole 3),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 8),
                 template_var 1)),
             template_hole 3),
           template_hole 0)))),
    ("Missing_Topology.filterlim_at_infinity_times",
     "[| filterlim ?f at_infinity ?F; filterlim ?g at_infinity ?F |]
      ==> LIM x ?F. ?f x * ?g x :> at_infinity",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_hole 1),
             template_var 1)
           ))),
    ("Missing_Topology.filterlim_tendsto_add_at_bot_iff",
     "(?f \<longlongrightarrow> ?c) ?F ==>
      (LIM x ?F. ?f x + ?g x :> at_bot) = filterlim ?g at_bot ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, t_empty), template_hole 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, t_empty), template_hole 0),
           template_var 1)))),
    ("Missing_Topology.filterlim_tendsto_add_at_top_iff",
     "(?f \<longlongrightarrow> ?c) ?F ==>
      (LIM x ?F. ?f x + ?g x :> at_top) = filterlim ?g at_top ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, t_empty), template_hole 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, t_empty), template_hole 0),
           template_var 1)))),
    ("Missing_Topology.eventually_times_inverse_1",
     "[| (?f \<longlongrightarrow> ?c) ?F; ?c ~= (0::?'b) |]
      ==> \<forall>\<^sub>F x in ?F. inverse (?f x) * ?f x = (1::?'b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_var 1)),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_var 0)
           ))),
    ("Missing_Topology.isolate_dist_Ex_iff",
     "?x isolate ?S =
      (?x : ?S & (EX e>0. ALL y:?S. dist ?x y < e --> y = ?x))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app (template_hole 6, t_empty)))),
    ("Missing_Topology.filterlim_tendsto_pos_mult_at_bot_iff",
     "[| (?f \<longlongrightarrow> ?c) ?F; 0 < ?c |]
      ==> (LIM x ?F. ?f x * ?g x :> at_bot) = filterlim ?g at_bot ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty), template_hole 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 0),
           template_var 1)))),
    ("Missing_Topology.filterlim_tendsto_neg_mult_at_bot_iff",
     "[| (?f \<longlongrightarrow> ?c) ?F; ?c < 0 |]
      ==> (LIM x ?F. ?f x * ?g x :> at_bot) = filterlim ?g at_top ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_than, template_var 2, template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, t_empty), template_hole 1),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 0),
           template_var 1)))),
    ("Missing_Topology.uniform_discrete_image_scale",
     "[| uniform_discrete ?S;
         ALL x:?S. ALL y:?S. dist x y = ?c * dist (?f x) (?f y) |]
      ==> uniform_discrete (?f ` ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Missing_Topology.filtermap_nhds_open_map",
     "[| isCont ?f ?a; !!S. open S ==> open (?f ` S) |]
      ==> filtermap ?f (nhds ?a) = nhds (?f ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 0,
           template_app (template_var 0, template_var 1))))),
    ("Missing_Topology.filterlim_tendsto_pos_mult_at_top_iff",
     "[| (?f \<longlongrightarrow> ?c) ?F; 0 < ?c |]
      ==> (LIM x ?F. ?f x * ?g x :> at_top) = filterlim ?g at_top ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty), template_hole 0),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 6, t_empty), template_hole 0),
           template_var 1)))),
    ("Missing_Topology.filterlim_tendsto_neg_mult_at_top_iff",
     "[| (?f \<longlongrightarrow> ?c) ?F; ?c < 0 |]
      ==> (LIM x ?F. ?f x * ?g x :> at_top) = filterlim ?g at_bot ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_than, template_var 2, template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, t_empty), template_hole 1),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 7, t_empty), template_hole 0),
           template_var 1)))),
    ("Missing_Topology.filterlim_at_infinity_divide_iff",
     "[| (?f \<longlongrightarrow> ?c) ?F; ?c ~= (0::?'b) |]
      ==> (LIM x ?F. ?f x / ?g x :> at_infinity) =
          filterlim ?g (at (0::?'b)) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_app (template_hole 8, template_var 2)),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, t_empty), template_hole 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 5),
               template_hole 0)),
           template_var 1)))),
    ("Missing_Topology.image_linear_greaterThan",
     "?c ~= (0::?'a) ==>
      (%x. ?c * x + ?b) ` {?x<..} =
      (if (0::?'a) < ?c then {?c * ?x + ?b<..} else {..<?c * ?x + ?b})",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 8),
                 template_var 2)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0)),
                 template_var 1))),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0)),
               template_var 1)))))),
    ("Missing_Topology.image_linear_lessThan",
     "?c ~= (0::?'a) ==>
      (%x. ?c * x + ?b) ` {..<?x} =
      (if (0::?'a) < ?c then {..<?c * ?x + ?b} else {?c * ?x + ?b<..})",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 8),
                 template_var 2)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0)),
                 template_var 1))),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0)),
               template_var 1)))))),
    ("Missing_Topology.filterlim_at_bot_linear_iff",
     "?c ~= (0::?'a) ==>
      (LIM x at_bot. ?f (x * ?c + ?b) :> ?F2.0) =
      (if (0::?'a) < ?c then filterlim ?f ?F2.0 at_bot
       else filterlim ?f ?F2.0 at_top)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty), template_var 0),
           template_hole 3),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 6, t_empty), template_var 0),
               template_hole 3)),
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), template_var 0),
             template_hole 0))))),
    ("Missing_Topology.filterlim_at_top_linear_iff",
     "?c ~= (0::?'a) ==>
      (LIM x at_top. ?f (x * ?c + ?b) :> ?F2.0) =
      (if (0::?'a) < ?c then filterlim ?f ?F2.0 at_top
       else filterlim ?f ?F2.0 at_bot)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty), template_var 0),
           template_hole 3),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 6, t_empty), template_var 0),
               template_hole 3)),
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), template_var 0),
             template_hole 0))))),
    ("Missing_Topology.uniformI1",
     "[| 0 < ?e; !!x y. [| x : ?S; y : ?S; dist x y < ?e |] ==> x = y |]
      ==> uniform_discrete ?S",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Missing_Topology.uniformI2",
     "[| 0 < ?e; !!x y. [| x : ?S; y : ?S; x ~= y |] ==> ?e <= dist x y |]
      ==> uniform_discrete ?S",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Missing_Topology.continuous_on_neq_split",
     "[| ALL x:?s. ?f x ~= ?y; continuous_on ?s ?f; connected ?s |]
      ==> (ALL x:?s. ?y < ?f x) | (ALL x:?s. ?f x < ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 6, template_var 2), t_empty)),
             template_app
              (template_app (template_hole 6, template_var 2), t_empty))
           ))),
    ("Missing_Topology.filtermap_linear_at_within",
     "[| bij ?f; isCont ?f ?a; !!S. open S ==> open (?f ` S) |]
      ==> filtermap ?f (at ?a within ?S) = at (?f ?a) within ?f ` ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_hole 10),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 10)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("Missing_Topology.Lim_add",
     "[| EX y. (?f \<longlongrightarrow> y) ?F;
         EX y. (?g \<longlongrightarrow> y) ?F; ?F ~= bot |]
      ==> Lim ?F ?f + Lim ?F ?g = Lim ?F (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Missing_Topology.filtermap_linear_at_right",
     "?c ~= (0::?'a) ==>
      filtermap (%x. ?c * x + ?b) (at_right ?x) =
      (if (0::?'a) < ?c then at_right (?c * ?x + ?b)
       else at_left (?c * ?x + ?b))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9))],
       template_equation
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 9),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0)),
                   template_var 1)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0)),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_var 1))))))),
    ("Missing_Topology.filtermap_linear_at_left",
     "?c ~= (0::?'a) ==>
      filtermap (%x. ?c * x + ?b) (at_left ?x) =
      (if (0::?'a) < ?c then at_left (?c * ?x + ?b)
       else at_right (?c * ?x + ?b))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9))],
       template_equation
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 9),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0)),
                   template_var 1)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 0)),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_var 1)))))))]
