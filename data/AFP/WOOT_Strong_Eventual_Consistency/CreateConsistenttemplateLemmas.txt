   [("CreateConsistent.subset_mono",
     "?N <= ?M ==> I ` insert_messages ?N <= I ` insert_messages ?M",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("CreateConsistent.nth_visible_eff",
     "nth_visible ?s ?n = Inr ?i ==> extended_to_set ?i <= I ` set ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 2))))),
    ("CreateConsistent.bind_simp",
     "?x >>= ?y = Inr ?r ==> ?y (projr ?x) = Inr ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), t_empty),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 0, template_var 2)),
         template_app (template_hole 1, template_var 0)))),
    ("CreateConsistent.create_delete_consistent",
     "[| consistent ?M; is_associated_string ?N ?s; ?N <= ?M;
         Inr ?m = create_delete ?s ?n |]
      ==> consistent (?M Un {?m})",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 3, template_var 4),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("CreateConsistent.create_insert_p_s_ordered",
     "[| is_associated_string ?N ?s; a_conditions (insert_messages ?N) ?a;
         Inr (Insert ?m) = create_insert ?s ?n ?\<sigma> ?new_id |]
      ==> ?a (P ?m) < ?a (S ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 6)),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 3)),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 2),
              template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_var 4, template_app (template_hole 1, template_var 3)),
         template_app
          (template_var 4,
           template_app (template_hole 0, template_var 3))))),
    ("CreateConsistent.nth_visible_inc'",
     "[| sorted_wrt (<) (map ?a (ext_ids ?s)); nth_visible ?s ?n = Inr ?i;
         nth_visible ?s (Suc ?n) = Inr ?j |]
      ==> ?a ?i < ?a ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_app (template_hole 4, template_var 3)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3),
            template_app (template_hole 0, template_var 2)),
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_than, template_app (template_var 4, template_var 1),
         template_app (template_var 4, template_var 0)))),
    ("CreateConsistent.deps_insert",
     "[| \<Union> (deps ` ?M) <= I ` insert_messages ?M;
         deps ?m <= I ` insert_messages ?M |]
      ==> \<Union> (deps ` (?M Un {?m}))
          <= I ` insert_messages (?M Un {?m})",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)),
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_app (template_hole 3, template_var 1))),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_app (template_hole 3, template_var 1)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))))))),
    ("CreateConsistent.wf_add",
     "[| wfP (depends_on ?M);
         !!n. n : ?M Un {?m} ==> I ?m ~: deps (Insert n); ?m ~: ?M |]
      ==> wfP (depends_on (?M Un {?m}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))))
           ))),
    ("CreateConsistent.create_insert_consistent",
     "[| consistent ?M; is_associated_string ?N ?s; ?N <= ?M;
         Inr ?m = create_insert ?s ?n ?\<sigma> ?new_id;
         ?new_id ~: I ` insert_messages ?M |]
      ==> consistent (?M Un {?m})",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 5, template_var 6),
        template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 2),
              template_var 1),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 6)))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 2, template_var 6),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_hole 0)))
           )))]
