Loading theory "Deriving.Derive_Manager" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.Data" via "Datatype_Order_Generator.Order_Generator" via "Datatype_Order_Generator.Derive_Aux")
Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency" via "Draft.Psi")
Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.ErrorMonad" via "Certification_Monads.Error_Monad" via "HOL-Library.Monad_Syntax")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
signature DERIVE_MANAGER =
  sig
    val derive: string -> string -> string -> theory -> theory
    val derive_cmd: string -> string -> string -> theory -> theory
    val print_info: theory -> unit
    val register_derive:
       string ->
         string ->
           (string -> string -> theory -> theory) -> theory -> theory
  end
structure Derive_Manager: DERIVE_MANAGER
### theory "Deriving.Derive_Manager"
### 0.052s elapsed time, 0.205s cpu time, 0.000s GC time
Loading theory "Datatype_Order_Generator.Derive_Aux" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.Data" via "Datatype_Order_Generator.Order_Generator")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.102s elapsed time, 0.389s cpu time, 0.031s GC time
Loading theory "Certification_Monads.Error_Syntax" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.ErrorMonad" via "Certification_Monads.Error_Monad")
### theory "Certification_Monads.Error_Syntax"
### 0.025s elapsed time, 0.103s cpu time, 0.000s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.ErrorMonad" via "Certification_Monads.Error_Monad")
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
### theory "HOL-Library.Function_Algebras"
### 0.160s elapsed time, 0.620s cpu time, 0.031s GC time
Loading theory "HOL-Library.List_Lexorder" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency" via "Draft.SortKeys")
### theory "HOL-Library.Monad_Syntax"
### 0.037s elapsed time, 0.145s cpu time, 0.000s GC time
Loading theory "Certification_Monads.Error_Monad" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.ErrorMonad")
instantiation
  list :: (ord) ord
  less_eq_list == less_eq :: 'a list => 'a list => bool
  less_list == less :: 'a list => 'a list => bool
### Rewrite rule not in simpset:
### [| distinct (map fst ?xys3); (?x3, ?y3) : set ?xys3 |]
### ==> map_of ?xys3 ?x3 = Some ?y3 == True
### Rewrite rule not in simpset:
### ?m2.3 ?k3 = Some ?k'3 ==>
### (?m1.3 \<circ>\<^sub>m ?m2.3) ?k3 = ?m1.3 ?k'3 == True
### Rewrite rule not in simpset:
### ?n3 ?k3 = Some ?xx3 ==> (?m3 ++ ?n3) ?k3 = Some ?xx3 == True
### ML warning (line 140 of "$AFP/Datatype_Order_Generator/derive_aux.ML"):
### Value identifier (sort) has not been referenced.
signature DERIVE_AUX =
  sig
    val HOLogic_list_all: term list * term -> term
    val HOLogic_list_conj: term list -> term
    val HOLogic_list_implies: term list * term -> term
    val define_overloaded:
       string * term -> local_theory -> thm * local_theory
    val define_overloaded_generic:
       Attrib.binding * term -> local_theory -> thm * local_theory
    val dt_number_recs: Old_Datatype_Aux.dtyp list -> int * (int * int) list
    val inductive_thm:
       theory ->
         (term list * term list) list ->
           thm ->
             sort ->
               (Proof.context ->
                  int ->
                    thm list ->
                      thm list -> term list -> term list -> tactic)
                 -> thm
    val mk_Some: term -> term
    val mk_binary_thm:
       (theory ->
          Old_Datatype_Aux.info ->
            sort -> 'a -> (term list * term list) list)
         ->
         (theory ->
            Old_Datatype_Aux.info ->
              sort -> (int -> term) * ('b * int * int) list)
           ->
           string ->
             theory ->
               Old_Datatype_Aux.info ->
                 'a ->
                   sort ->
                     (Proof.context ->
                        thm list ->
                          thm list ->
                            thm ->
                              (Proof.context -> thm list -> tactic) ->
                                int ->
                                  term list ->
                                    term list ->
                                      string * Old_Datatype_Aux.dtyp list ->
  (Old_Datatype_Aux.dtyp -> term -> ...) -> tactic)
                       -> thm
    val mk_case_tac:
       Proof.context ->
         term option list list ->
           thm ->
             (Proof.context * int * thm list * (string * cterm) list ->
                tactic)
               -> tactic
    val mk_def: typ -> string -> term -> term
    val mk_solve_with_tac: Proof.context -> thm list -> tactic -> tactic
    val mk_xs: theory -> Old_Datatype_Aux.info -> sort -> int -> int -> term
    val my_print_tac: Proof.context -> string -> tactic
    val my_simp_set: simpset
    val prop_trm_to_major_imp: (term list * 'a) list -> term * 'a
    val rulify_only_asm: Proof.context -> thm -> thm
    val split_last: 'a list -> 'a list * 'a
    val typ_and_vs_of_typname:
       theory -> string -> sort -> typ * (string * sort) list
    val typ_subst_for_sort:
       theory -> Old_Datatype_Aux.info -> sort -> typ -> typ
  end
structure Derive_Aux: DERIVE_AUX
### theory "Datatype_Order_Generator.Derive_Aux"
### 0.157s elapsed time, 0.615s cpu time, 0.031s GC time
Loading theory "Datatype_Order_Generator.Order_Generator" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms" via "Draft.Data")
instantiation
  list :: (linorder) distrib_lattice
  inf_list == inf :: 'a list => 'a list => 'a list
  sup_list == sup :: 'a list => 'a list => 'a list
structure Eisbach_Rule_Insts: sig end
instantiation
  list :: (order) order_bot
  bot_list == bot :: 'a list
### theory "HOL-Library.List_Lexorder"
### 0.125s elapsed time, 0.481s cpu time, 0.058s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### ML warning (line 134 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 140 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 146 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 211 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 173 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 307 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 318 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 363 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 382 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 397 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 430 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 438 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 474 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Matches are not exhaustive.
### ML warning (line 524 of "$AFP/Datatype_Order_Generator/order_generator.ML"):
### Pattern is not exhaustive.
signature ORDER_GENERATOR =
  sig
    val derive: int -> string -> string -> theory -> theory
    val mk_antisym_thm: theory -> Old_Datatype_Aux.info -> thm -> thm -> thm
    val mk_le_refl_thm: theory -> Old_Datatype_Aux.info -> thm
    val mk_less_eq_idx:
       theory ->
         Old_Datatype_Aux.info -> sort -> int -> term -> term -> term
    val mk_less_idx:
       theory ->
         Old_Datatype_Aux.info ->
           sort -> (int -> term) * (term * int * int) list
    val mk_less_le_not_le_thm: theory -> Old_Datatype_Aux.info -> thm
    val mk_linear_thm: theory -> Old_Datatype_Aux.info -> thm
    val mk_order_thms: theory -> Old_Datatype_Aux.info -> thm list
    val mk_transitivity_thms: theory -> Old_Datatype_Aux.info -> thm * thm
  end
structure Order_Generator: ORDER_GENERATOR
### theory "Datatype_Order_Generator.Order_Generator"
### 0.192s elapsed time, 0.742s cpu time, 0.095s GC time
Loading theory "Draft.Data" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms")
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Eisbach.Eisbach"
### 0.486s elapsed time, 1.902s cpu time, 0.126s GC time
Loading theory "HOL-Library.Product_Lexorder" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency" via "Draft.SortKeys")
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
instantiation
  prod :: (linorder, linorder) distrib_lattice
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
### theory "HOL-Library.Nat_Bijection"
### 0.309s elapsed time, 1.250s cpu time, 0.110s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Product_Lexorder"
### 0.117s elapsed time, 0.493s cpu time, 0.073s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.224s elapsed time, 0.881s cpu time, 0.117s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency" via "Draft.Sorting")
Found termination order: "size_list size <*mlex*> {}"
creating orders for datatype extended
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
registered extended in class ord
registered extended in class order
registered extended in class linorder
Found termination order: "size_list size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Certification_Monads.Error_Monad"
### 1.173s elapsed time, 4.490s cpu time, 0.918s GC time
Loading theory "Draft.ErrorMonad" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms" via "Draft.BasicAlgorithms")
consts
  snth :: "'a stream => nat => 'a"
consts
  prefixes :: "'a list => 'a list list"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "{}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "{}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "{}"
### theory "Draft.ErrorMonad"
### 0.296s elapsed time, 1.171s cpu time, 0.099s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.144s elapsed time, 4.351s cpu time, 0.956s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs")
consts
  suffixes :: "'a list => 'a list list"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Sublist"
### 1.956s elapsed time, 7.388s cpu time, 2.057s GC time
Loading theory "Draft.Sorting" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.118s elapsed time, 4.238s cpu time, 1.246s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Sorting"
### 0.119s elapsed time, 0.420s cpu time, 0.028s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Data"
### 2.848s elapsed time, 10.292s cpu time, 2.342s GC time
Loading theory "Draft.BasicAlgorithms" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.CreateAlgorithms")
Loading theory "Draft.SortKeys" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.BasicAlgorithms"
### 0.497s elapsed time, 1.530s cpu time, 0.135s GC time
Loading theory "Draft.CreateAlgorithms" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent")
Loading theory "Draft.IntegrateAlgorithm" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency" via "Draft.DistributedExecution")
creating orders for datatype sort_dir
registered sort_dir in class ord
registered sort_dir in class order
registered sort_dir in class linorder
### theory "HOL-Library.Tree"
### 2.166s elapsed time, 7.301s cpu time, 1.556s GC time
Loading theory "Draft.Templates" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.081s elapsed time, 0.313s cpu time, 0.059s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CreateConsistentMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.CreateAlgorithms"
### 0.511s elapsed time, 2.009s cpu time, 0.201s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.IntegrateAlgorithm"
### 0.697s elapsed time, 2.579s cpu time, 0.201s GC time
Loading theory "Draft.DistributedExecution" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency")
Found termination order: "size <*mlex*> {}"
instantiation
  sort_key :: (ord) ord
  less_eq_sort_key == less_eq :: 'a sort_key => 'a sort_key => bool
  less_sort_key == less :: 'a sort_key => 'a sort_key => bool
instantiation
  sort_key :: (order) order
instantiation
  sort_key :: (linorder) linorder
### theory "Draft.SortKeys"
### 1.282s elapsed time, 4.397s cpu time, 0.391s GC time
Loading theory "Draft.Psi" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent" via "Draft.Consistency")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.681s elapsed time, 2.433s cpu time, 0.196s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Psi"
### 0.748s elapsed time, 1.594s cpu time, 0.128s GC time
locale dist_execution_preliminary
  fixes events :: "'p => ('p, 's) event list"
  assumes "dist_execution_preliminary TYPE('p)"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale dist_execution
  fixes events :: "'a => ('a, 'b) event list"
  assumes "dist_execution events"
### theory "Draft.DistributedExecution"
### 1.882s elapsed time, 3.815s cpu time, 1.447s GC time
Loading theory "Draft.Consistency" (required by "Draft.CreateConsistentMoreTemplates" via "Draft.CreateConsistent")
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Consistency"
### 0.513s elapsed time, 0.661s cpu time, 0.083s GC time
Loading theory "Draft.CreateConsistent" (required by "Draft.CreateConsistentMoreTemplates")
### theory "Draft.CreateConsistent"
### 0.052s elapsed time, 0.052s cpu time, 0.000s GC time
Loading theory "Draft.CreateConsistentMoreTemplates"
val templateLemmas =
   [("CreateConsistent.subset_mono",
     "?N <= ?M ==> I ` insert_messages ?N <= I ` insert_messages ?M",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("CreateConsistent.nth_visible_eff",
     "nth_visible ?s ?n = Inr ?i ==> extended_to_set ?i <= I ` set ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 2))))),
    ("CreateConsistent.bind_simp",
     "?x >>= ?y = Inr ?r ==> ?y (projr ?x) = Inr ?r",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), t_empty),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 0, template_var 2)),
         template_app (template_hole 1, template_var 0)))),
    ("CreateConsistent.create_delete_consistent",
     "[| consistent ?M; is_associated_string ?N ?s; ?N <= ?M;
         Inr ?m = create_delete ?s ?n |]
      ==> consistent (?M Un {?m})",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 3, template_var 4),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("CreateConsistent.create_insert_p_s_ordered",
     "[| is_associated_string ?N ?s; a_conditions (insert_messages ?N) ?a;
         Inr (Insert ?m) = create_insert ?s ?n ?\<sigma> ?new_id |]
      ==> ?a (P ?m) < ?a (S ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 6)),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 3)),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 2),
              template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_var 4, template_app (template_hole 1, template_var 3)),
         template_app
          (template_var 4,
           template_app (template_hole 0, template_var 3))))),
    ("CreateConsistent.nth_visible_inc'",
     "[| sorted_wrt (<) (map ?a (ext_ids ?s)); nth_visible ?s ?n = Inr ?i;
         nth_visible ?s (Suc ?n) = Inr ?j |]
      ==> ?a ?i < ?a ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_app (template_hole 4, template_var 3)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 3),
            template_app (template_hole 0, template_var 2)),
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_than, template_app (template_var 4, template_var 1),
         template_app (template_var 4, template_var 0)))),
    ("CreateConsistent.deps_insert",
     "[| \<Union> (deps ` ?M) <= I ` insert_messages ?M;
         deps ?m <= I ` insert_messages ?M |]
      ==> \<Union> (deps ` (?M Un {?m}))
          <= I ` insert_messages (?M Un {?m})",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)),
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_app (template_hole 3, template_var 1))),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_app (template_hole 3, template_var 1)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))))))),
    ("CreateConsistent.wf_add",
     "[| wfP (depends_on ?M);
         !!n. n : ?M Un {?m} ==> I ?m ~: deps (Insert n); ?m ~: ?M |]
      ==> wfP (depends_on (?M Un {?m}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))))
           ))),
    ("CreateConsistent.create_insert_consistent",
     "[| consistent ?M; is_associated_string ?N ?s; ?N <= ?M;
         Inr ?m = create_insert ?s ?n ?\<sigma> ?new_id;
         ?new_id ~: I ` insert_messages ?M |]
      ==> consistent (?M Un {?m})",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 5, template_var 6),
        template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 2),
              template_var 1),
            template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 6)))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 2, template_var 6),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_hole 0)))
           )))]:
   (string * thm * template) list
### theory "Draft.CreateConsistentMoreTemplates"
### 0.436s elapsed time, 0.572s cpu time, 0.000s GC time
val it = (): unit
