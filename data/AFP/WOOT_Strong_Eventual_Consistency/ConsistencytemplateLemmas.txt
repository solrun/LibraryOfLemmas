   [("Consistency.to_woot_character_keeps_i",
     "I (to_woot_character ?M ?m) = I ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Consistency.to_woot_character_keeps_P",
     "P (to_woot_character ?M ?m) = P ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Consistency.to_woot_character_keeps_S",
     "S (to_woot_character ?M ?m) = S ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Consistency.to_woot_character_insert_no_eff",
     "to_woot_character (insert (Insert ?m) ?M) = to_woot_character ?M",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Consistency.to_woot_character_keeps_i_lifted",
     "I ` to_woot_character ?M ` ?X = I ` ?X",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Consistency.pred_is_dep",
     "P ?m = \<lbrakk>?i\<rbrakk> --> ?i : deps (Insert ?m)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))))
         )),
    ("Consistency.succ_is_dep",
     "S ?m = \<lbrakk>?i\<rbrakk> --> ?i : deps (Insert ?m)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))))
         )),
    ("Consistency.associated_string_unique",
     "[| is_associated_string ?M ?s; is_associated_string ?M ?t |]
      ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Consistency.is_certified_associated_string_unique",
     "[| is_certified_associated_string ?M ?s;
         is_certified_associated_string ?M ?t |]
      ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Consistency.insert_insert_message",
     "insert_messages (?M Un {Insert ?m}) = insert_messages ?M Un {?m}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_hole 3))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Consistency.a_subset",
     "[| ?M <= ?N; a_conditions (insert_messages ?N) ?a |]
      ==> a_conditions (insert_messages ?M) ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)
           ))),
    ("Consistency.consistent_subset",
     "[| consistent ?N; ?M <= ?N;
         \<Union> (deps ` ?M) <= I ` insert_messages ?M |]
      ==> consistent ?M",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_app (template_hole 0, template_var 0)))],
       template_predicate
        (template_app (template_hole 8, template_var 0))))]
