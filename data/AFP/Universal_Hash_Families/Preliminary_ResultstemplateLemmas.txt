   [("Preliminary_Results.range_inter", "range ((Int) ?F) = Pow ?F",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Preliminary_Results.prob_space_restrict_space",
     "?M = measure_pmf ?p ==> prob_space (restrict_space ?M (set_pmf ?p))",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Preliminary_Results.sigma_sets_singletons_and_empty",
     "countable ?M ==> sigma_sets ?M (insert {} ((%k. {k}) ` ?M)) = Pow ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, t_empty), template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Preliminary_Results.pmf_of_set_eq_uniform",
     "[| finite ?A; ?A ~= {} |]
      ==> measure_pmf (pmf_of_set ?A) = uniform_measure discrete ?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)))),
    ("Preliminary_Results.set_comp_image_cong",
     "(!!x. ?P x ==> ?f x = ?h (?g x)) ==>
      {?f x |x. ?P x} = ?h ` {?g x |x. ?P x}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, t_empty)))))]
