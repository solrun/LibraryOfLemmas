   [("Refine_Basic.nofail_simps", "nofail (RES ?X) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Refine_Basic.nofail_simps", "nofail (RETURN ?x) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Refine_Basic.pw_ASSERT", "nofail (ASSERT ?\<Phi>) = ?\<Phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Refine_Basic.abs_fun_strict", "\<Up> ?R SUCCEED = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.abs_fun_simps", "\<Up> ?R FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.nres_monad2", "?M >>= RETURN = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Basic.bind_SUCCEED", "SUCCEED >>= ?f = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.bind_FAIL", "FAIL >>= ?f = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.conc_fun_strict", "\<Down> ?R SUCCEED = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.conc_fun_FAIL", "\<Down> ?R FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.pw_ASSUME", "inres (ASSUME ?\<Phi>) ?x = ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 1)),
    ("Refine_Basic.not_nofail_iff", "(~ nofail ?S) = (?S = FAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(?M <= SUCCEED) = (?M = SUCCEED)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Basic.nres_order_simps", "(FAIL <= ?M) = (?M = FAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Basic.intro_nofail", "(FAIL ~= ?S) = nofail ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.intro_nofail", "(?S ~= FAIL) = nofail ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.pw_conc_nofail", "nofail (\<Down> ?R ?S) = nofail ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.RES_Sup_RETURN", "Sup (RETURN ` ?X) = RES ?X",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.nres_monad1", "RETURN ?x >>= ?f = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Refine_Basic.SPEC_eq_is_RETURN", "SPEC ((=) ?x) = RETURN ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.RES_sng_eq_RETURN", "RES {?x} = RETURN ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.inres_simps", "inres (RES ?X) = (%x. x : ?X)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Refine_Basic.inres_simps", "inres (RETURN ?x) = (=) ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Refine_Basic.nres_more_simps", "(SUCCEED = RES ?X) = (?X = {})",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = SUCCEED) = (?X = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(Sup ?X = FAIL) = (FAIL : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("Refine_Basic.nres_order_simps", "(FAIL = Sup ?X) = (FAIL : ?X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_hole 2), template_var 0))),
    ("Refine_Basic.nf_inres_RES", "nf_inres (RES ?X) ?x = (?x : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Refine_Basic.nf_inres_SPEC",
     "nf_inres (SPEC ?\<Phi>) ?x = ?\<Phi> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Refine_Basic.let_to_bind_conv", "Let ?x ?f = RETURN ?x >>= ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Refine_Basic.ife_FAIL_to_ASSERT_cnv",
     "(if ?\<Phi> then ?m else FAIL) = op_nres_ASSERT_bnd ?\<Phi> ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.bind_to_let_conv", "RETURN ?x >>= ?f = Let ?x ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.nres_order_simps", "Sup (RES ` ?A) = RES (\<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.nres_order_simps", "Sup (RES ` ?A) = RES (\<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.nofail_RES_conv", "nofail ?m = (EX M. ?m = RES M)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Refine_Basic.nofail_SPEC_iff", "nofail ?m = (?m <= SPEC (%_. True))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.pw_Inf_nofail", "nofail (Inf ?C) = (EX x:?C. nofail x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_Sup_nofail", "nofail (Sup ?X) = (ALL x:?X. nofail x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.conc_fun_fail_iff",
     "(FAIL = \<Down> ?R ?S) = (?S = FAIL)",
     template_bimplication
      (template_equation
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_more_simps", "(RETURN ?x = RETURN ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = RES ?Y) = (?X = ?Y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.conc_fun_fail_iff",
     "(\<Down> ?R ?S = FAIL) = (?S = FAIL)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(RES ?X <= RES ?Y) = (?X <= ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.nres_order_simps",
     "(RETURN ?x <= RETURN ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.nres_order_simps", "(RETURN ?x <= RES ?Y) = (?x : ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.RETURN_SPEC_conv", "RETURN ?r = SPEC (%x. x = ?r)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.bind_RES", "RES ?X >>= ?f = Sup (?f ` ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.SPEC_eq_is_RETURN", "SPEC (%x. x = ?y) = RETURN ?y",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.pw_inf_nofail",
     "nofail (inf ?a ?b) = (nofail ?a | nofail ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Refine_Basic.pw_sup_nofail",
     "nofail (sup ?a ?b) = (nofail ?a & nofail ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Refine_Basic.conc_fun_RES", "\<Down> ?R (RES ?X) = RES (?R^-1 `` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Refine_Basic.push_in_let_conv",
     "Let ?x (RETURN o ?f) = RETURN (Let ?x ?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.bind_ASSERT_eq_if",
     "ASSERT ?\<Phi> >>= (%_. ?m) = (if ?\<Phi> then ?m else FAIL)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Refine_Basic.pw_Inf_inres",
     "inres (Inf ?C) ?r = (ALL M:?C. inres M ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_Sup_inres",
     "inres (Sup ?X) ?r = (EX M:?X. inres M ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.nres_more_simps", "(RETURN ?x = RES ?X) = ({?x} = ?X)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = RETURN ?x) = (?X = {?x})",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Refine_Basic.nres_order_simps",
     "(RES ?X <= RETURN ?y) = (?X <= {?y})",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Refine_Basic.pull_out_let_conv",
     "RETURN (Let ?x ?f) = (let x = ?x in RETURN (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.conc_fun_chain",
     "\<Down> ?R (\<Down> ?S ?M) = \<Down> (?R O ?S) ?M",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Refine_Basic.push_in_let_conv",
     "(let x = ?x in RETURN (?f x)) = RETURN (Let ?x ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_INF_nofail",
     "nofail (Inf (?f ` ?C)) = (EX x:?C. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_SUP_nofail",
     "nofail (Sup (?f ` ?X)) = (ALL x:?X. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_RES_bind_choose",
     "nofail (RES ?X >>= ?f) = (ALL x:?X. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.nres_order_simps",
     "(Sup (?f ` ?X) = FAIL) = (FAIL : ?f ` ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_order_simps",
     "(FAIL = Sup (?f ` ?X)) = (FAIL : ?f ` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_hole 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.bind_distrib_Sup1",
     "Sup ?M >>= ?f = (SUP m\<in>?M. m >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Refine_Basic.nres_rel_comp",
     "\<langle>?A\<rangle>nres_rel O \<langle>?B\<rangle>nres_rel =
      \<langle>?A O ?B\<rangle>nres_rel",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_inf_inres",
     "inres (inf ?a ?b) ?x = (inres ?a ?x & inres ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_sup_inres",
     "inres (sup ?a ?b) ?x = (inres ?a ?x | inres ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.RETURN_refine_iff",
     "(RETURN ?x <= \<Down> ?R (RETURN ?y)) = ((?x, ?y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Refine_Basic.in_nres_rel_iff",
     "((?a, ?b) : \<langle>?R\<rangle>nres_rel) = (?a <= \<Down> ?R ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.rel2p_nres_RETURN",
     "rel2p (\<langle>?A\<rangle>nres_rel) (RETURN ?x) (RETURN ?y) =
      rel2p ?A ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Refine_Basic.conc_fun_RETURN",
     "\<Down> ?R (RETURN ?x) = SPEC (%y. (y, ?x) : ?R)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.inf_RETURN_RES",
     "inf (RETURN ?x) (RES ?X) = (if ?x : ?X then RETURN ?x else SUCCEED)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 4, template_var 1)),
         template_hole 0))),
    ("Refine_Basic.inf_RETURN_RES",
     "inf (RES ?X) (RETURN ?x) = (if ?x : ?X then RETURN ?x else SUCCEED)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Refine_Basic.bind_distrib_sup1",
     "sup ?M ?N >>= ?f = sup (?M >>= ?f) (?N >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_monad3",
     "?M >>= ?f >>= ?g = ?M >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.pw_INF_inres",
     "inres (Inf (?f ` ?C)) ?r = (ALL M:?C. inres (?f M) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_SUP_inres",
     "inres (Sup (?f ` ?X)) ?r = (EX M:?X. inres (?f M) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_RES_bind_choose",
     "inres (RES ?X >>= ?f) ?y = (EX x:?X. inres (?f x) ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.pull_out_RETURN_case_option",
     "(case ?x of None => RETURN ?a | Some v => RETURN (?f v)) =
      RETURN (case ?x of None => ?a | Some x => ?f x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Basic.RETURN_RES_refine_iff",
     "(RETURN ?x <= \<Down> ?R (RES ?Y)) = (EX y:?Y. (?x, y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("Refine_Basic.bind_distrib_sup2",
     "?m >>= (%x. sup (?f x) (?g x)) = sup (?m >>= ?f) (?m >>= ?g)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Refine_Basic.pw_bind_nofail",
     "nofail (?M >>= ?f) =
      (nofail ?M & (ALL x. inres ?M x --> nofail (?f x)))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.assert_bind_spec_conv",
     "(ASSERT ?\<Phi> >>= (%_. ?m) <= SPEC ?\<Psi>) =
      (?\<Phi> & ?m <= SPEC ?\<Psi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             t_empty)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))))),
    ("Refine_Basic.ASSERT_same_eq_conv",
     "(ASSERT ?\<Phi> >>= (%_. ?m) = ASSERT ?\<Phi> >>= (%_. ?n)) =
      (?\<Phi> --> ?m = ?n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)),
       template_dunno)),
    ("Refine_Basic.build_rel_SPEC_conv",
     "\<Down> (br ?\<alpha> ?I) (SPEC ?\<Phi>) =
      SPEC (%x. ?I x & ?\<Phi> (?\<alpha> x))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.summarize_ASSERT_conv",
     "ASSERT ?\<Phi> >>= (%_. ASSERT ?\<Psi> >>= (%_. ?m)) =
      ASSERT (?\<Phi> & ?\<Psi>) >>= (%_. ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         t_empty))),
    ("Refine_Basic.pw_abs_nofail",
     "nofail (\<Up> ?R ?M) =
      (nofail ?M & (ALL x. inres ?M x --> x : Domain ?R))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.intro_spec_refine_iff",
     "(RES ?X >>= ?f <= \<Down> ?R ?M) = (ALL x:?X. ?f x <= \<Down> ?R ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 3)),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), t_empty))),
    ("Refine_Basic.inf_RETURN_SPEC",
     "inf (RETURN ?x) (SPEC ?\<Phi>) = SPEC (%y. y = ?x & ?\<Phi> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.inf_RETURN_SPEC",
     "inf (SPEC ?\<Phi>) (RETURN ?x) = SPEC (%y. y = ?x & ?\<Phi> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_Basic.pw_bind_inres",
     "inres (?M >>= ?f) =
      (%x. nofail ?M --> (EX y. inres ?M y & inres (?f y) x))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Refine_Basic.pw_eq_iff",
     "(?S = ?S') =
      (nofail ?S = nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_bimplication
      (template_equation (template_var 1, template_var 0), template_dunno)),
    ("Refine_Basic.pw_le_iff",
     "(?S <= ?S') =
      (nofail ?S' --> nofail ?S & (ALL x. inres ?S x --> inres ?S' x))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.bind_le_shift",
     "(?m >>= ?f <= ?m') =
      (?m <= (if nofail ?m' then SPEC (%x. ?f x <= ?m') else FAIL))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty))),
           template_hole 0)))),
    ("Refine_Basic.bind_rule_complete",
     "(?M >>= ?f <= SPEC ?\<Phi>) =
      (?M <= SPEC (%x. ?f x <= SPEC ?\<Phi>))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("Refine_Basic.nres_bind_let_law",
     "Let ?v ?f >>= ?g = (let y = ?v in ?f y >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.pw_conc_inres",
     "inres (\<Down> ?R ?S') =
      (%s. nofail ?S' --> (EX s'. (s, s') : ?R & inres ?S' s'))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       t_empty)),
    ("Refine_Basic.pw_flat_ge_iff",
     "flat_ge ?S ?S' =
      (nofail ?S --> nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.SUP_img_rule_complete",
     "(ALL x. x : ?S --> ?f x <= SPEC ?\<Phi>) =
      (Sup (?f ` ?S) <= SPEC ?\<Phi>)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.bind_RES_RETURN_eq",
     "RES ?X >>= (%x. RETURN (?f x)) =
      SPEC (%uu_. EX x. uu_ = ?f x & x : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         t_empty),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.conc_fun_SPEC",
     "\<Down> ?R (SPEC ?\<Phi>) = SPEC (%y. EX x. (y, x) : ?R & ?\<Phi> x)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.If_bind_distrib",
     "(if ?b then ?t else ?e) >>= ?f =
      (if ?b then ?t >>= ?f else ?e >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Refine_Basic.pw_abs_inres",
     "inres (\<Up> ?R ?M) ?a =
      (nofail (\<Up> ?R ?M) --> (EX c. inres ?M c & (c, ?a) : ?R))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1))),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.case_prod_bind_simp",
     "(%x. (case x of (a, b) => ?f a b) <= SPEC ?\<Phi>) =
      (%(a, b). ?f a b <= SPEC ?\<Phi>)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Refine_Basic.ignore_snd_refine_conv",
     "(?m <= \<Down> (?R \<times>\<^sub>r UNIV) ?m') =
      (?m >>= RETURN o fst <= \<Down> ?R (?m' >>= RETURN o fst))",
     template_equation
      (template_app
        (template_app (template_hole 15, template_var 2),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_var 1)),
               template_hole 10)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)))))),
    ("Refine_Basic.refine2spec_aux",
     "(?a <= \<Down> ?R ?b) =
      (nofail ?b --> ?a <= SPEC (%r. EX x. inres ?b x & (r, x) : ?R))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 2),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app (template_hole 10, template_var 2),
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty)))))),
    ("Refine_Basic.pw_bind_le_iff",
     "(?M >>= ?f <= ?S) =
      ((nofail ?S --> nofail ?M) &
       (ALL x. nofail ?M & inres ?M x --> ?f x <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_var 2))),
         template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.pw_flat_le_iff",
     "flat_le ?S ?S' =
      ((EX x. inres ?S x) -->
       nofail ?S = nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Refine_Basic.pw_nres_rel_iff",
     "((?a, ?b) : \<langle>?A\<rangle>nres_rel) =
      (nofail (\<Down> ?A ?b) -->
       nofail ?a & (ALL x. inres ?a x --> inres (\<Down> ?A ?b) x))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.pw_ref_iff",
     "(?S <= \<Down> ?R ?S') =
      (nofail ?S' -->
       nofail ?S &
       (ALL x. inres ?S x --> (EX s'. (x, s') : ?R & inres ?S' s')))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_app (template_hole 5, t_empty))))),
    ("Refine_Basic.bind_RES_RETURN2_eq",
     "RES ?X >>= (%(x, y). RETURN (?f x y)) =
      SPEC (%uu_. EX x y. uu_ = ?f x y & (x, y) : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 1)),
         template_app (template_hole 9, t_empty)),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("Refine_Basic.pw_REC_nofail",
     "nofail (REC ?B ?x) =
      (trimono ?B &
       (EX F. (ALL x.
                  nofail (F x) -->
                  nofail (?B F x) &
                  (ALL x'. inres (?B F x) x' --> inres (F x) x')) &
              nofail (F ?x)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_RECT_nofail",
     "nofail (REC\<^sub>T ?B ?x) =
      (trimono ?B &
       (ALL F.
           (ALL y.
               nofail (?B F y) -->
               nofail (F y) &
               (ALL x. inres (F y) x --> inres (?B F y) x)) -->
           nofail (F ?x)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_REC_inres",
     "inres (REC ?B ?x) ?x' =
      (trimono ?B -->
       (ALL F.
           (ALL x''.
               nofail (F x'') -->
               nofail (?B F x'') &
               (ALL x. inres (?B F x'') x --> inres (F x'') x)) -->
           inres (F ?x) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_RECT_inres",
     "inres (REC\<^sub>T ?B ?x) ?x' =
      (trimono ?B -->
       (EX M. (ALL y.
                  nofail (?B M y) -->
                  nofail (M y) &
                  (ALL x. inres (M y) x --> inres (?B M y) x)) &
              inres (M ?x) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty))))]
