   [("Refine_More_Comb.OBTAIN_nofail", "nofail (OBTAIN ?P) = (EX x. ?P x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("Refine_More_Comb.SELECT_pw_simps",
     "inres (SELECT ?P) (Some ?x) = ?P ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 1, template_var 0))),
    ("Refine_More_Comb.SELECT_pw_simps",
     "inres (SELECT ?P) None = (ALL x. ~ ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Refine_More_Comb.OBTAIN_inres",
     "inres (OBTAIN ?P) ?x = ((ALL x. ~ ?P x) | ?P ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_var 1, template_var 0)))),
    ("Refine_More_Comb.SELECT_as_SPEC",
     "SELECT ?P =
      SPEC (%xa. case xa of None => ALL x. ~ ?P x | Some x => ?P x)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_More_Comb.OBTAIN_refine_iff",
     "(OBTAIN ?P <= \<Down> ?R (OBTAIN ?Q)) =
      (Ex ?Q --> Ex ?P & Collect ?P <= ?R^-1 `` Collect ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 2)),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_app (template_hole 9, template_var 0))),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 0))))))),
    ("Refine_More_Comb.SELECT_pw",
     "inres (SELECT ?P) ?r =
      ((?r = None --> (ALL x. ~ ?P x)) & (ALL x. ?r = Some x --> ?P x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Refine_More_Comb.SELECT_refine_iff",
     "(SELECT ?P <= \<Down> (\<langle>?R\<rangle>option_rel) (SELECT ?P')) =
      ((Ex ?P' --> Ex ?P) &
       (ALL x. ?P x --> (EX x'. (x, x') : ?R & ?P' x')))",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 2)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 1)),
           template_app (template_hole 7, template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app (template_hole 3, template_var 2))),
         template_app (template_hole 2, t_empty))))]
