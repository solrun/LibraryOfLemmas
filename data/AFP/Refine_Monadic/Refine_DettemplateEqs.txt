   [("Refine_Det.inf_dres_addsimps", "inf dSUCCEEDi ?x = dSUCCEEDi",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Refine_Det.inf_dres_addsimps", "inf ?x dFAILi = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Det.inf_dres_addsimps", "inf ?x dSUCCEEDi = dSUCCEEDi",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Refine_Det.sup_dres_addsimps", "sup ?x dFAILi = dFAILi",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Refine_Det.sup_dres_addsimps", "sup ?x dSUCCEEDi = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Det.dres_monad2", "?M >>= dRETURN = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Det.dres_order_simps", "(dFAIL <= ?x) = (?x = dFAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Det.dres_order_simps", "(?x <= dSUCCEED) = (?x = dSUCCEED)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Det.dres_monad1", "dRETURN ?x >>= ?f = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Refine_Det.dres_monad3",
     "?M >>= ?f >>= ?g = ?M >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Det.less_eq_dres_split_conv",
     "(?a <= ?b) =
      (case (?a, ?b) of (dSUCCEEDi, xa) => True | (dFAILi, dFAILi) => True
       | (dFAILi, _) => False | (dRETURN aa, dSUCCEEDi) => False
       | (dRETURN aa, dFAILi) => True | (dRETURN aa, dRETURN b) => aa = b)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Det.inf_dres_split_conv",
     "inf ?a ?b =
      (case (?a, ?b) of (dSUCCEEDi, dSUCCEEDi) => dSUCCEEDi
       | (dSUCCEEDi, _) => dSUCCEEDi | (dFAILi, xa) => xa
       | (dRETURN aa, dSUCCEEDi) => dSUCCEEDi
       | (dRETURN aa, dFAILi) => dRETURN aa
       | (dRETURN aa, dRETURN b) =>
           if aa = b then dRETURN b else dSUCCEEDi)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Det.sup_dres_split_conv",
     "sup ?a ?b =
      (case (?a, ?b) of (dSUCCEEDi, xa) => xa
       | (dFAILi, dSUCCEEDi) => dFAILi | (dFAILi, _) => dFAILi
       | (dRETURN aa, dSUCCEEDi) => dRETURN aa
       | (dRETURN aa, dFAILi) => dFAILi
       | (dRETURN aa, dRETURN b) => if aa = b then dRETURN b else dFAILi)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0))))]
