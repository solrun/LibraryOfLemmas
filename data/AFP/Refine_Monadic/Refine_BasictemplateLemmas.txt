   [("Refine_Basic.nres_order_simps", "SUCCEED <= ?M",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Refine_Basic.nres_order_simps", "?M <= FAIL",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("Refine_Basic.nr_mono", "mono (%_. ?c)",
     template_predicate (template_app (template_hole 0, t_empty))),
    ("Refine_Basic.bind_mono2'", "mono ((>>=) ?M)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.abs_fun_mono", "mono (\<Up> ?R)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.conc_fun_mono", "mono (\<Down> ?R)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.pw_ASSUME", "nofail (ASSUME ?\<Phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.pw_ASSERT", "inres (ASSERT ?\<Phi>) ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("Refine_Basic.nres_inequalities", "FAIL ~= RES ?X",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.nres_inequalities", "RES ?X ~= FAIL",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Basic.nres_inequalities", "SUCCEED ~= RETURN ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.nres_inequalities", "FAIL ~= RETURN ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Refine_Basic.nres_inequalities", "RETURN ?x ~= SUCCEED",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Basic.nres_inequalities", "RETURN ?x ~= FAIL",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Refine_Basic.nofail_simps", "nofail (RES ?X) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Refine_Basic.nofail_simps", "nofail (RETURN ?x) = True",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Refine_Basic.pw_ASSERT", "nofail (ASSERT ?\<Phi>) = ?\<Phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Refine_Basic.abs_fun_strict", "\<Up> ?R SUCCEED = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.abs_fun_simps", "\<Up> ?R FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.nres_monad2", "?M >>= RETURN = ?M",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Refine_Basic.bind_SUCCEED", "SUCCEED >>= ?f = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.bind_FAIL", "FAIL >>= ?f = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Refine_Basic.conc_fun_strict", "\<Down> ?R SUCCEED = SUCCEED",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.conc_fun_FAIL", "\<Down> ?R FAIL = FAIL",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Refine_Basic.SUCCEED_refine", "SUCCEED <= \<Down> ?R ?X'",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.SUCCEED_rule", "SUCCEED <= SPEC ?\<Phi>",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.Id_refine", "?S <= \<Down> Id ?S",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Refine_Basic.FAIL_refine", "?X <= \<Down> ?R FAIL",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Refine_Basic.bind_mono1", "mono (%M. M >>= ?f)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Refine_Basic.pw_ASSUME", "inres (ASSUME ?\<Phi>) ?x = ?\<Phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 1)),
    ("Refine_Basic.not_nofail_iff", "(~ nofail ?S) = (?S = FAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(?M <= SUCCEED) = (?M = SUCCEED)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Basic.nres_order_simps", "(FAIL <= ?M) = (?M = FAIL)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Refine_Basic.intro_nofail", "(FAIL ~= ?S) = nofail ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.intro_nofail", "(?S ~= FAIL) = nofail ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.pw_conc_nofail", "nofail (\<Down> ?R ?S) = nofail ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.RES_Sup_RETURN", "Sup (RETURN ` ?X) = RES ?X",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.nres_monad1", "RETURN ?x >>= ?f = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Refine_Basic.SPEC_eq_is_RETURN", "SPEC ((=) ?x) = RETURN ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.RES_sng_eq_RETURN", "RES {?x} = RETURN ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.nr_mono_bind'", "mono (%F s. ?f s >>= F)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Refine_Basic.param_SUCCEED",
     "(SUCCEED, SUCCEED) : \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Refine_Basic.param_FAIL",
     "(FAIL, FAIL) : \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Refine_Basic.inres_simps", "inres (RES ?X) = (%x. x : ?X)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Refine_Basic.inres_simps", "inres (RETURN ?x) = (=) ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Refine_Basic.nres_more_simps", "(SUCCEED = RES ?X) = (?X = {})",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = SUCCEED) = (?X = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(Sup ?X = FAIL) = (FAIL : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1), template_var 0))),
    ("Refine_Basic.nres_order_simps", "(FAIL = Sup ?X) = (FAIL : ?X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_hole 2), template_var 0))),
    ("Refine_Basic.nf_inres_RES", "nf_inres (RES ?X) ?x = (?x : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Refine_Basic.nf_inres_SPEC",
     "nf_inres (SPEC ?\<Phi>) ?x = ?\<Phi> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Refine_Basic.let_to_bind_conv", "Let ?x ?f = RETURN ?x >>= ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Refine_Basic.ife_FAIL_to_ASSERT_cnv",
     "(if ?\<Phi> then ?m else FAIL) = op_nres_ASSERT_bnd ?\<Phi> ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.bind_to_let_conv", "RETURN ?x >>= ?f = Let ?x ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.nres_order_simps", "Sup (RES ` ?A) = RES (\<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.nres_order_simps", "Sup (RES ` ?A) = RES (\<Union> ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.FAIL_rule", "False ==> FAIL <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_hole 4)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.not_nofail_inres", "~ nofail ?S ==> inres ?S ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine_Basic.le_RES_nofailI", "?a <= RES ?x ==> nofail ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Refine_Basic.nofail_RES_conv", "nofail ?m = (EX M. ?m = RES M)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Refine_Basic.nofail_SPEC_iff", "nofail ?m = (?m <= SPEC (%_. True))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.pw_Inf_nofail", "nofail (Inf ?C) = (EX x:?C. nofail x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_Sup_nofail", "nofail (Sup ?X) = (ALL x:?X. nofail x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.conc_fun_fail_iff",
     "(FAIL = \<Down> ?R ?S) = (?S = FAIL)",
     template_bimplication
      (template_equation
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_more_simps", "(RETURN ?x = RETURN ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = RES ?Y) = (?X = ?Y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.conc_fun_fail_iff",
     "(\<Down> ?R ?S = FAIL) = (?S = FAIL)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Refine_Basic.nres_order_simps", "(RES ?X <= RES ?Y) = (?X <= ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.nres_order_simps",
     "(RETURN ?x <= RETURN ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.nres_order_simps", "(RETURN ?x <= RES ?Y) = (?x : ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Refine_Basic.RETURN_SPEC_conv", "RETURN ?r = SPEC (%x. x = ?r)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.bind_RES", "RES ?X >>= ?f = Sup (?f ` ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.SPEC_eq_is_RETURN", "SPEC (%x. x = ?y) = RETURN ?y",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Refine_Basic.the_RES_inv", "nofail ?m ==> RES (the_RES ?m) = ?m",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Refine_Basic.ac_galois",
     "single_valued ?R ==> galois_connection (\<Up> ?R) (\<Down> ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Refine_Basic.nres_order_simps", "FAIL : ?X ==> Sup ?X = FAIL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("Refine_Basic.SPEC_nofail", "?X <= SPEC ?\<Phi> ==> nofail ?X",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Refine_Basic.refine", "[| ?P; ?Q |] ==> ?P & ?Q",
     template_implication
      ([template_predicate (template_var 1),
        template_predicate (template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine_Basic.pw_inf_nofail",
     "nofail (inf ?a ?b) = (nofail ?a | nofail ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Refine_Basic.pw_sup_nofail",
     "nofail (sup ?a ?b) = (nofail ?a & nofail ?b)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Refine_Basic.conc_fun_RES", "\<Down> ?R (RES ?X) = RES (?R^-1 `` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Refine_Basic.push_in_let_conv",
     "Let ?x (RETURN o ?f) = RETURN (Let ?x ?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.bind_ASSERT_eq_if",
     "ASSERT ?\<Phi> >>= (%_. ?m) = (if ?\<Phi> then ?m else FAIL)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Refine_Basic.nofail_SPEC", "nofail ?m ==> ?m <= SPEC (%_. True)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.RETURN_rule", "?\<Phi> ?x ==> RETURN ?x <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Basic.refine_IdI", "?m <= ?m' ==> ?m <= \<Down> Id ?m'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Refine_Basic.refine_IdD", "?c <= \<Down> Id ?a ==> ?c <= ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Refine_Basic.pw_Inf_inres",
     "inres (Inf ?C) ?r = (ALL M:?C. inres M ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_Sup_inres",
     "inres (Sup ?X) ?r = (EX M:?X. inres M ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.nres_more_simps", "(RETURN ?x = RES ?X) = ({?x} = ?X)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Refine_Basic.nres_more_simps", "(RES ?X = RETURN ?x) = (?X = {?x})",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Refine_Basic.nres_order_simps",
     "(RES ?X <= RETURN ?y) = (?X <= {?y})",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Refine_Basic.pull_out_let_conv",
     "RETURN (Let ?x ?f) = (let x = ?x in RETURN (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.conc_fun_chain",
     "\<Down> ?R (\<Down> ?S ?M) = \<Down> (?R O ?S) ?M",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Refine_Basic.push_in_let_conv",
     "(let x = ?x in RETURN (?f x)) = RETURN (Let ?x ?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.param_RETURN",
     "(RETURN, RETURN) : ?R \<rightarrow> \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine_Basic.pwD1", "[| ?S <= ?S'; nofail ?S' |] ==> nofail ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Refine_Basic.pw_INF_nofail",
     "nofail (Inf (?f ` ?C)) = (EX x:?C. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_SUP_nofail",
     "nofail (Sup (?f ` ?X)) = (ALL x:?X. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Refine_Basic.pw_RES_bind_choose",
     "nofail (RES ?X >>= ?f) = (ALL x:?X. nofail (?f x))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.nres_order_simps",
     "(Sup (?f ` ?X) = FAIL) = (FAIL : ?f ` ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_hole 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_order_simps",
     "(FAIL = Sup (?f ` ?X)) = (FAIL : ?f ` ?X)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_hole 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.bind_distrib_Sup1",
     "Sup ?M >>= ?f = (SUP m\<in>?M. m >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Refine_Basic.nofail_antimono_fun",
     "?f <= ?g ==> nofail (?g ?x) --> nofail (?f ?x)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)))
           ))),
    ("Refine_Basic.conc_fun_R_mono",
     "?R <= ?R' ==> \<Down> ?R ?M <= \<Down> ?R' ?M",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.intro_prgR",
     "?c <= \<Down> ?R ?a ==> ?c <= \<Down> ?R ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.introR", "(?a, ?a') : ?R ==> (?a, ?a') : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Refine_Basic.le_SPEC_UNIV_rule",
     "?m <= SPEC (%_. True) ==> ?m <= RES UNIV",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 3, template_app (template_hole 2, t_empty)))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 3, template_hole 0)))),
    ("Refine_Basic.RETURN_to_SPEC_rule",
     "?m <= SPEC ((=) ?v) ==> ?m <= RETURN ?v",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Refine_Basic.le_nofailI", "(nofail ?M' ==> ?M <= ?M') ==> ?M <= ?M'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 1, template_var 1))],
          template_inequation
           (less_equals, template_var 0, template_var 1))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Basic.nres_rel_comp",
     "\<langle>?A\<rangle>nres_rel O \<langle>?B\<rangle>nres_rel =
      \<langle>?A O ?B\<rangle>nres_rel",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_inf_inres",
     "inres (inf ?a ?b) ?x = (inres ?a ?x & inres ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_sup_inres",
     "inres (sup ?a ?b) ?x = (inres ?a ?x | inres ?b ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.RETURN_refine_iff",
     "(RETURN ?x <= \<Down> ?R (RETURN ?y)) = ((?x, ?y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Refine_Basic.in_nres_rel_iff",
     "((?a, ?b) : \<langle>?R\<rangle>nres_rel) = (?a <= \<Down> ?R ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.rel2p_nres_RETURN",
     "rel2p (\<langle>?A\<rangle>nres_rel) (RETURN ?x) (RETURN ?y) =
      rel2p ?A ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Refine_Basic.conc_fun_RETURN",
     "\<Down> ?R (RETURN ?x) = SPEC (%y. (y, ?x) : ?R)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.inf_RETURN_RES",
     "inf (RETURN ?x) (RES ?X) = (if ?x : ?X then RETURN ?x else SUCCEED)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 4, template_var 1)),
         template_hole 0))),
    ("Refine_Basic.inf_RETURN_RES",
     "inf (RES ?X) (RETURN ?x) = (if ?x : ?X then RETURN ?x else SUCCEED)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Refine_Basic.bind_distrib_sup1",
     "sup ?M ?N >>= ?f = sup (?M >>= ?f) (?N >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_monad3",
     "?M >>= ?f >>= ?g = ?M >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.param_RES",
     "(RES, RES)
      : \<langle>?R\<rangle>set_rel \<rightarrow>
        \<langle>?R\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))
         )),
    ("Refine_Basic.unused_bind_RES_ne",
     "?X ~= {} ==> RES ?X >>= (%_. ?m) = ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           t_empty),
         template_var 0))),
    ("Refine_Basic.RECT_eq_REC'",
     "nofail (REC\<^sub>T ?B ?x) ==> REC\<^sub>T ?B ?x = REC ?B ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.ASSUME_refine",
     "(?\<Phi> ==> ?\<Phi>') ==>
      ASSUME ?\<Phi> <= \<Down> unit_rel (ASSUME ?\<Phi>')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.ASSERT_refine",
     "(?\<Phi>' ==> ?\<Phi>) ==>
      ASSERT ?\<Phi> <= \<Down> unit_rel (ASSERT ?\<Phi>')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 1))))),
    ("Refine_Basic.abs_fun_simps",
     "~ ?X <= Domain ?R ==> \<Up> ?R (RES ?X) = FAIL",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_equals, template_var 1,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Refine_Basic.nres_order_simps",
     "FAIL : ?f ` ?X ==> Sup (?f ` ?X) = FAIL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 3))),
    ("Refine_Basic.ASSUME_rule",
     "(?\<Phi> ==> ?\<Psi> ()) ==> ASSUME ?\<Phi> <= SPEC ?\<Psi>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate
           (template_app (template_var 0, template_hole 4)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.pwD2", "[| ?S <= ?S'; inres ?S ?x |] ==> inres ?S' ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Refine_Basic.pw_INF_inres",
     "inres (Inf (?f ` ?C)) ?r = (ALL M:?C. inres (?f M) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_SUP_inres",
     "inres (Sup (?f ` ?X)) ?r = (EX M:?X. inres (?f M) ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Refine_Basic.pw_RES_bind_choose",
     "inres (RES ?X >>= ?f) ?y = (EX x:?X. inres (?f x) ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.pull_out_RETURN_case_option",
     "(case ?x of None => RETURN ?a | Some v => RETURN (?f v)) =
      RETURN (case ?x of None => ?a | Some x => ?f x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Refine_Basic.nres_order_simps",
     "?A ~= {} ==> Inf (RES ` ?A) = RES (\<Inter> ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.nres_order_simps",
     "?A ~= {} ==> Inf (RES ` ?A) = RES (\<Inter> ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.Id_SPEC_refine",
     "?S <= SPEC ?\<Phi> ==> ?S <= \<Down> Id (SPEC ?\<Phi>)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)))))),
    ("Refine_Basic.nres_relI",
     "?c <= \<Down> ?R ?a ==> (?c, ?a) : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("Refine_Basic.RETURN_refine",
     "(?x, ?x') : ?R ==> RETURN ?x <= \<Down> ?R (RETURN ?x')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Basic.RETURN_ref_RETURND",
     "RETURN ?c <= \<Down> ?R (RETURN ?a) ==> (?c, ?a) : ?R",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Refine_Basic.nres_relD",
     "(?c, ?a) : \<langle>?R\<rangle>nres_rel ==> ?c <= \<Down> ?R ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Refine_Basic.inres_SPEC",
     "[| inres ?M ?x; ?M <= SPEC ?\<Phi> |] ==> ?\<Phi> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 1,
            template_app (template_hole 0, template_var 0)))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Refine_Basic.conc_abs_swap",
     "single_valued ?R ==> (?m' <= \<Down> ?R ?m) = (\<Up> ?R ?m' <= ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Refine_Basic.abs_fun_simps",
     "?X <= Domain ?R ==> \<Up> ?R (RES ?X) = RES (?R `` ?X)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Refine_Basic.remove_Let_refine",
     "?M <= \<Down> ?R (?f ?x) ==> ?M <= \<Down> ?R (Let ?x ?f)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app (template_var 1, template_var 0)))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Refine_Basic.intro_Let_refine",
     "?f ?x <= \<Down> ?R ?M' ==> Let ?x ?f <= \<Down> ?R ?M'",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.Let_rule",
     "?f ?x <= SPEC ?\<Phi> ==> Let ?x ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 2, template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.refine_vcg",
     "(?\<Phi> ==> ?M <= ?M') ==> ?M <= ASSERT ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Basic.refine_vcg",
     "(?\<Phi> ==> ?M <= ?M') ==> ASSUME ?\<Phi> >>= (%_. ?M) <= ?M'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty),
         template_var 0))),
    ("Refine_Basic.nofail_SPEC_triv_refine",
     "[| nofail ?m; !!x. ?\<Phi> x |] ==> ?m <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= ?B; ?B <= \<Down> Id ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| ?A <= ?B; \<Up> Id ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> Id ?B; ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> Id ?A <= ?B; ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 2),
          template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.lift_assnI",
     "[| (?s, ?s') : ?R; ?\<Phi> ?s' |] ==> lift_assn ?R ?\<Phi> ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Refine_Basic.RETURN_RES_refine_iff",
     "(RETURN ?x <= \<Down> ?R (RES ?Y)) = (EX y:?Y. (?x, y) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("Refine_Basic.bind_distrib_sup2",
     "?m >>= (%x. sup (?f x) (?g x)) = sup (?m >>= ?f) (?m >>= ?g)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Refine_Basic.ASSERT_rule",
     "[| ?\<Phi>; ?\<Phi> ==> ?\<Psi> () |]
      ==> ASSERT ?\<Phi> <= SPEC ?\<Psi>",
     template_implication
      ([template_predicate (template_var 1),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate
           (template_app (template_var 0, template_hole 4)))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.pw_bind_nofail",
     "nofail (?M >>= ?f) =
      (nofail ?M & (ALL x. inres ?M x --> nofail (?f x)))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.assert_bind_spec_conv",
     "(ASSERT ?\<Phi> >>= (%_. ?m) <= SPEC ?\<Psi>) =
      (?\<Phi> & ?m <= SPEC ?\<Psi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             t_empty)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))))),
    ("Refine_Basic.ASSERT_same_eq_conv",
     "(ASSERT ?\<Phi> >>= (%_. ?m) = ASSERT ?\<Phi> >>= (%_. ?n)) =
      (?\<Phi> --> ?m = ?n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)),
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Refine_Basic.build_rel_SPEC_conv",
     "\<Down> (br ?\<alpha> ?I) (SPEC ?\<Phi>) =
      SPEC (%x. ?I x & ?\<Phi> (?\<alpha> x))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.summarize_ASSERT_conv",
     "ASSERT ?\<Phi> >>= (%_. ASSERT ?\<Psi> >>= (%_. ?m)) =
      ASSERT (?\<Phi> & ?\<Psi>) >>= (%_. ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         t_empty))),
    ("Refine_Basic.intro_RETURN_Let_refine",
     "RETURN (?f ?x) <= \<Down> ?R ?M' ==>
      RETURN (Let ?x ?f) <= \<Down> ?R ?M'",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 2, template_app (template_var 3, template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.SPEC_rule",
     "(!!x. ?\<Phi> x ==> ?\<Phi>' x) ==> SPEC ?\<Phi> <= SPEC ?\<Phi>'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.RES_rule",
     "(!!x. x : ?S ==> ?\<Phi> x) ==> RES ?S <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.SPEC_rule_conjunct1",
     "?A <= SPEC (%v. ?P v & ?Q v) ==> ?A <= SPEC ?P",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("Refine_Basic.SPEC_rule_conjunct2",
     "?A <= SPEC (%v. ?P v & ?Q v) ==> ?A <= SPEC ?Q",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.lhs_step_RES",
     "(!!x. x : ?X ==> RETURN x <= ?m) ==> RES ?X <= ?m",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Refine_Basic.le_SPEC_bindI",
     "[| ?\<Phi> ?x; ?m <= ?f ?x |] ==> ?m <= SPEC ?\<Phi> >>= ?f",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 2))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3))),
           template_var 0)))),
    ("Refine_Basic.abs_trans_additional",
     "[| ?A <= ?B; \<Up> ?R ?B <= ?C |] ==> \<Up> ?R ?A <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_var 0))),
    ("Refine_Basic.SPEC_trans",
     "[| ?x <= ?y; ?y <= SPEC ?Postcond |] ==> ?x <= SPEC ?Postcond",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 1,
            template_app (template_hole 0, template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.RES_bind_choose",
     "[| ?x : ?X; ?m <= ?f ?x |] ==> ?m <= RES ?X >>= ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_var 0, template_var 3))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Refine_Basic.ref_two_step",
     "[| ?A <= \<Down> ?R ?B; ?B <= ?C |] ==> ?A <= \<Down> ?R ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> Id ?B; ?B <= \<Down> Id ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> Id ?A <= ?B; \<Up> Id ?B <= ?C |] ==> ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 2),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Refine_Basic.pw_abs_nofail",
     "nofail (\<Up> ?R ?M) =
      (nofail ?M & (ALL x. inres ?M x --> x : Domain ?R))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.intro_spec_refine_iff",
     "(RES ?X >>= ?f <= \<Down> ?R ?M) = (ALL x:?X. ?f x <= \<Down> ?R ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 3)),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 3), t_empty))),
    ("Refine_Basic.inf_RETURN_SPEC",
     "inf (RETURN ?x) (SPEC ?\<Phi>) = SPEC (%y. y = ?x & ?\<Phi> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Refine_Basic.inf_RETURN_SPEC",
     "inf (SPEC ?\<Phi>) (RETURN ?x) = SPEC (%y. y = ?x & ?\<Phi> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Refine_Basic.bind_distrib_Sup2",
     "?F ~= {} ==> ?m >>= Sup ?F = Sup ((>>=) ?m ` ?F)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Refine_Basic.Let_unfold_refine",
     "?f ?x <= \<Down> ?R (?f' ?x') ==>
      Let ?x ?f <= \<Down> ?R (Let ?x' ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 4, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app (template_var 1, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 3), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Refine_Basic.RETURN_as_SPEC_refine_old",
     "?M <= \<Down> ?R (SPEC (%x. x = ?v)) ==>
      ?M <= \<Down> ?R (RETURN ?v)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_hole 3, template_app (template_hole 2, t_empty))))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.RETURN_as_SPEC_refine",
     "?M <= SPEC (%c. (c, ?a) : ?R) ==> ?M <= \<Down> ?R (RETURN ?a)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Basic.refine_vcg",
     "[| ?\<Phi>; ?\<Phi> ==> ?M <= ?M' |]
      ==> ?M <= ASSUME ?\<Phi> >>= (%_. ?M')",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Basic.refine_vcg",
     "[| ?\<Phi>; ?\<Phi> ==> ?M <= ?M' |]
      ==> ASSERT ?\<Phi> >>= (%_. ?M) <= ?M'",
     template_implication
      ([template_predicate (template_var 2),
        template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty),
         template_var 0))),
    ("Refine_Basic.pw_bind_inres",
     "inres (?M >>= ?f) =
      (%x. nofail ?M --> (EX y. inres ?M y & inres (?f y) x))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       t_empty)),
    ("Refine_Basic.pw_eq_iff",
     "(?S = ?S') =
      (nofail ?S = nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Refine_Basic.pw_le_iff",
     "(?S <= ?S') =
      (nofail ?S' --> nofail ?S & (ALL x. inres ?S x --> inres ?S' x))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.bind_le_shift",
     "(?m >>= ?f <= ?m') =
      (?m <= (if nofail ?m' then SPEC (%x. ?f x <= ?m') else FAIL))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty))),
           template_hole 0)))),
    ("Refine_Basic.bind_rule_complete",
     "(?M >>= ?f <= SPEC ?\<Phi>) =
      (?M <= SPEC (%x. ?f x <= SPEC ?\<Phi>))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("Refine_Basic.nres_bind_let_law",
     "Let ?v ?f >>= ?g = (let y = ?v in ?f y >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Refine_Basic.ASSERT_refine_right",
     "(?\<Phi> ==> ?S <= \<Down> ?R ?S') ==>
      ?S <= \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?S'))",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             t_empty))))),
    ("Refine_Basic.ASSUME_refine_left",
     "(?\<Phi> ==> ?S <= \<Down> ?R ?S') ==>
      ASSUME ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.lhs_step_SPEC",
     "(!!x. ?\<Phi> x ==> RETURN x <= ?m) ==> SPEC ?\<Phi> <= ?m",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("Refine_Basic.le_ASSERTI_pres",
     "(?\<Phi> ==> ?S <= ASSERT ?\<Phi> >>= (%_. ?S')) ==>
      ?S <= ASSERT ?\<Phi> >>= (%_. ?S')",
     template_implication
      ([template_implication
         ([template_predicate (template_var 2)],
          template_inequation
           (less_equals, template_var 1,
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)),
              t_empty)))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           t_empty)))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> Id ?B; ?B <= \<Down> ?R ?C |]
      ==> ?A <= \<Down> ?R ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.conc_trans_additional",
     "[| ?A <= \<Down> ?R ?B; ?B <= \<Down> Id ?C |]
      ==> ?A <= \<Down> ?R ?C",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 0))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> Id ?A <= ?B; \<Up> ?R ?B <= ?C |] ==> \<Up> ?R ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_var 0))),
    ("Refine_Basic.abs_trans_additional",
     "[| \<Up> ?R ?A <= ?B; \<Up> Id ?B <= ?C |] ==> \<Up> ?R ?A <= ?C",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_hole 0),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_var 0))),
    ("Refine_Basic.pw_conc_inres",
     "inres (\<Down> ?R ?S') =
      (%s. nofail ?S' --> (EX s'. (s, s') : ?R & inres ?S' s'))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       t_empty)),
    ("Refine_Basic.pw_flat_ge_iff",
     "flat_ge ?S ?S' =
      (nofail ?S --> nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.RETURN_SPEC_refine",
     "EX x'. (?x, x') : ?R & ?\<Phi> x' ==>
      RETURN ?x <= \<Down> ?R (SPEC ?\<Phi>)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Refine_Basic.RES_sng_as_SPEC_refine",
     "?M <= SPEC (%c. (c, ?a) : ?R) ==> ?M <= \<Down> ?R (RES {?a})",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 7, template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("Refine_Basic.RETURN_RES_refine",
     "EX x'. (?x, x') : ?R & x' : ?X ==> RETURN ?x <= \<Down> ?R (RES ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Refine_Basic.pw_leI",
     "nofail ?S' --> nofail ?S & (ALL x. inres ?S x --> inres ?S' x) ==>
      ?S <= ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 4, template_var 0)),
                template_app (template_hole 2, t_empty)))
            )],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Basic.nr_mono",
     "[| mono ?S1.0; mono ?S2.0 |]
      ==> mono (%F s. if ?b s then ?S1.0 F s else ?S2.0 F s)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.nres_cases",
     "[| ?M = FAIL ==> ?thesis; !!X. ?M = RES X ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Basic.SUP_img_rule_complete",
     "(ALL x. x : ?S --> ?f x <= SPEC ?\<Phi>) =
      (Sup (?f ` ?S) <= SPEC ?\<Phi>)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.bind_RES_RETURN_eq",
     "RES ?X >>= (%x. RETURN (?f x)) =
      SPEC (%uu_. EX x. uu_ = ?f x & x : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         t_empty),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.conc_fun_SPEC",
     "\<Down> ?R (SPEC ?\<Phi>) = SPEC (%y. EX x. (y, x) : ?R & ?\<Phi> x)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.If_bind_distrib",
     "(if ?b then ?t else ?e) >>= ?f =
      (if ?b then ?t >>= ?f else ?e >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Refine_Basic.strengthen_SPEC",
     "?m <= SPEC ?\<Phi> ==>
      ?m <= SPEC (%s. inres ?m s & nofail ?m & ?\<Phi> s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Refine_Basic.rhs_step_bind_SPEC",
     "[| ?\<Phi> ?x'; ?m <= \<Down> ?R (?f' ?x') |]
      ==> ?m <= \<Down> ?R (SPEC ?\<Phi> >>= ?f')",
     template_implication
      ([template_predicate (template_app (template_var 4, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_var 0, template_var 3)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 4))),
             template_var 0))))),
    ("Refine_Basic.rhs_step_bind_RES",
     "[| ?x' : ?X'; ?m <= \<Down> ?R (?f' ?x') |]
      ==> ?m <= \<Down> ?R (RES ?X' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_app (template_var 0, template_var 4)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 0))))),
    ("Refine_Basic.pw_eqI",
     "[| nofail ?S = nofail ?S'; !!x. inres ?S x = inres ?S' x |]
      ==> ?S = ?S'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Refine_Basic.conc_trans",
     "[| ?C <= \<Down> ?R ?B; ?B <= \<Down> ?R' ?A |]
      ==> ?C <= \<Down> ?R (\<Down> ?R' ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_var 4,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Refine_Basic.abs_trans",
     "[| \<Up> ?R ?C <= ?B; \<Up> ?R' ?B <= ?A |]
      ==> \<Up> ?R' (\<Up> ?R ?C) <= ?A",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 4), template_var 3),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3)),
         template_var 0))),
    ("Refine_Basic.pw_abs_inres",
     "inres (\<Up> ?R ?M) ?a =
      (nofail (\<Up> ?R ?M) --> (EX c. inres ?M c & (c, ?a) : ?R))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1))),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.build_rel_SPEC",
     "?M <= SPEC (%x. ?\<Phi> (?\<alpha> x) & ?I x) ==>
      ?M <= \<Down> (br ?\<alpha> ?I) (SPEC ?\<Phi>)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 6, template_app (template_hole 5, t_empty)))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)))))),
    ("Refine_Basic.bind_rule",
     "?M <= SPEC (%x. ?f x <= SPEC ?\<Phi>) ==> ?M >>= ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.ASSUME_refine_right",
     "[| ?\<Phi>; ?\<Phi> ==> ?S <= \<Down> ?R ?S' |]
      ==> ?S <= \<Down> ?R (ASSUME ?\<Phi> >>= (%_. ?S'))",
     template_implication
      ([template_predicate (template_var 3),
        template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             t_empty))))),
    ("Refine_Basic.ASSERT_refine_left",
     "[| ?\<Phi>; ?\<Phi> ==> ?S <= \<Down> ?R ?S' |]
      ==> ASSERT ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S'",
     template_implication
      ([template_predicate (template_var 3),
        template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.weaken_SPEC",
     "[| ?m <= SPEC ?\<Phi>; !!x. ?\<Phi> x ==> ?\<Psi> x |]
      ==> ?m <= SPEC ?\<Psi>",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.case_prod_bind_simp",
     "(%x. (case x of (a, b) => ?f a b) <= SPEC ?\<Phi>) =
      (%(a, b). ?f a b <= SPEC ?\<Phi>)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Refine_Basic.ignore_snd_refine_conv",
     "(?m <= \<Down> (?R \<times>\<^sub>r UNIV) ?m') =
      (?m >>= RETURN o fst <= \<Down> ?R (?m' >>= RETURN o fst))",
     template_equation
      (template_app
        (template_app (template_hole 15, template_var 2),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_var 1)),
               template_hole 10)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)))))),
    ("Refine_Basic.autoref_bind",
     "((>>=), (>>=))
      : \<langle>?R1.0\<rangle>nres_rel \<rightarrow>
        (?R1.0 \<rightarrow> \<langle>?R2.0\<rangle>nres_rel) \<rightarrow>
        \<langle>?R2.0\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine_Basic.param_bind",
     "((>>=), (>>=))
      : \<langle>?Ra\<rangle>nres_rel \<rightarrow>
        (?Ra \<rightarrow> \<langle>?Rb\<rangle>nres_rel) \<rightarrow>
        \<langle>?Rb\<rangle>nres_rel",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_hole 14),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))
         )),
    ("Refine_Basic.ret_le_down_conv",
     "nofail ?m ==>
      (RETURN ?c <= \<Down> ?R ?m) = (EX a. (?c, a) : ?R & RETURN a <= ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_var 2)),
         template_app (template_hole 5, t_empty)))),
    ("Refine_Basic.ASSERT_refine_right_pres",
     "(?\<Phi> ==> ?S <= \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?S'))) ==>
      ?S <= \<Down> ?R (ASSERT ?\<Phi> >>= (%_. ?S'))",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 0, template_var 3)),
                t_empty))))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             t_empty))))),
    ("Refine_Basic.ASSUME_refine_left_pres",
     "(?\<Phi> ==> ASSUME ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S') ==>
      ASSUME ?\<Phi> >>= (%_. ?S) <= \<Down> ?R ?S'",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals,
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)),
              t_empty),
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Refine_Basic.Sup_img_rule",
     "(!!x. x : ?S ==> ?f x <= SPEC ?\<Phi>) ==>
      Sup (?f ` ?S) <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.nr_mono_bind",
     "[| mono ?A; !!s. mono (?B s) |] ==> mono (%F s. ?A F s >>= ?B s F)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.nofail_inf_serialize",
     "[| nofail ?a; nofail ?b |]
      ==> inf ?a ?b = ?a >>= (%x. ASSUME (inres ?b x) >>= (%_. RETURN x))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, template_var 1), t_empty)))),
    ("Refine_Basic.bind_le_nofailI",
     "[| nofail ?m; !!x. RETURN x <= ?m ==> ?f x <= ?m' |]
      ==> ?m >>= ?f <= ?m'",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Refine_Basic.sup_refine",
     "[| ?ai <= \<Down> ?R ?a; ?bi <= \<Down> ?R ?b |]
      ==> sup ?ai ?bi <= \<Down> ?R (sup ?a ?b)",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Refine_Basic.intro_bind_refine_id",
     "[| ?m <= SPEC ((=) ?m'); ?f ?m' <= \<Down> ?R ?m'' |]
      ==> ?m >>= ?f <= \<Down> ?R ?m''",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 3)))),
        template_inequation
         (less_equals, template_app (template_var 2, template_var 3),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.lhs_step_If",
     "[| ?b ==> ?t <= ?m; ~ ?b ==> ?e <= ?m |]
      ==> (if ?b then ?t else ?e) <= ?m",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2, template_var 1)),
        template_implication
         ([template_negation (template_predicate (template_var 3))],
          template_inequation
           (less_equals, template_var 0, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Refine_Basic.Let_rule'",
     "(!!x. x = ?v ==> ?f x <= SPEC ?\<Phi>) ==> Let ?v ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.SPEC_refine",
     "?S <= SPEC (%x. EX x'. (x, x') : ?R & ?\<Phi> x') ==>
      ?S <= \<Down> ?R (SPEC ?\<Phi>)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 8, template_app (template_hole 7, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Refine_Basic.RES_refine",
     "(!!s. s : ?S ==> EX s':?S'. (s, s') : ?R) ==>
      RES ?S <= \<Down> ?R (RES ?S')",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Refine_Basic.bind_mono",
     "[| flat_ge ?M ?M'; !!x. flat_ge (?f x) (?f' x) |]
      ==> flat_ge (?M >>= ?f) (?M' >>= ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Refine_Basic.SPEC_rule_conjI",
     "[| ?A <= SPEC ?P; ?A <= SPEC ?Q |] ==> ?A <= SPEC (%v. ?P v & ?Q v)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.use_spec_rule",
     "[| ?m <= SPEC ?\<Psi>; ?m <= SPEC (%s. ?\<Psi> s --> ?\<Phi> s) |]
      ==> ?m <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.refine2spec_aux",
     "(?a <= \<Down> ?R ?b) =
      (nofail ?b --> ?a <= SPEC (%r. EX x. inres ?b x & (r, x) : ?R))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 2),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app (template_hole 10, template_var 2),
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty)))))),
    ("Refine_Basic.pw_bind_le_iff",
     "(?M >>= ?f <= ?S) =
      ((nofail ?S --> nofail ?M) &
       (ALL x. nofail ?M & inres ?M x --> ?f x <= ?S))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_var 2))),
         template_app (template_hole 1, t_empty)))),
    ("Refine_Basic.intro_spec_refine",
     "(!!x. x : ?X ==> ?f x <= \<Down> ?R ?M) ==>
      RES ?X >>= ?f <= \<Down> ?R ?M",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Refine_Basic.pw_flat_le_iff",
     "flat_le ?S ?S' =
      ((EX x. inres ?S x) -->
       nofail ?S = nofail ?S' & (ALL x. inres ?S x = inres ?S' x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, t_empty)))
           ))),
    ("Refine_Basic.Sup_eq_RESE",
     "[| Sup ?A = RES ?B;
         !!C. [| ?A = RES ` C; ?B = \<Union> C |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Basic.specify_left",
     "[| ?m <= SPEC ?\<Phi>; !!x. ?\<Phi> x ==> ?f x <= ?M |]
      ==> ?m >>= ?f <= ?M",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 2))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), t_empty),
         template_var 0))),
    ("Refine_Basic.pw_nres_rel_iff",
     "((?a, ?b) : \<langle>?A\<rangle>nres_rel) =
      (nofail (\<Down> ?A ?b) -->
       nofail ?a & (ALL x. inres ?a x --> inres (\<Down> ?A ?b) x))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 1, t_empty))))),
    ("Refine_Basic.prod_rule",
     "(!!a b. ?p = (a, b) ==> ?S a b <= SPEC ?\<Phi>) ==>
      (case ?p of (x, xa) => ?S x xa) <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.refine2specI",
     "(nofail ?b ==> ?a <= SPEC (%r. EX x. inres ?b x & (r, x) : ?R)) ==>
      ?a <= \<Down> ?R ?b",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 9, template_var 2))],
          template_inequation
           (less_equals, template_var 1,
            template_app
             (template_hole 7, template_app (template_hole 6, t_empty))))],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Refine_Basic.bind_cong",
     "[| ?m = ?m'; !!x. RETURN x <= ?m' ==> ?f x = ?f' x |]
      ==> ?m >>= ?f = ?m' >>= ?f'",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Basic.bind_mono",
     "[| ?M <= ?M'; !!x. RETURN x <= ?M ==> ?f x <= ?f' x |]
      ==> ?M >>= ?f <= ?M' >>= ?f'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Refine_Basic.pw_leI'",
     "[| nofail ?S' ==> nofail ?S;
         !!x. [| nofail ?S'; inres ?S x |] ==> inres ?S' x |]
      ==> ?S <= ?S'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 1))],
          template_predicate
           (template_app (template_hole 3, template_var 0))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Refine_Basic.RETURN_ref_SPECD",
     "[| RETURN ?c <= \<Down> ?R (SPEC ?\<Phi>);
         !!a. [| (?c, a) : ?R; ?\<Phi> a |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Basic.lhs_step_bind",
     "[| nofail ?m' ==> nofail ?m; !!x. nf_inres ?m x ==> ?f x <= ?m' |]
      ==> ?m >>= ?f <= ?m'",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 5, template_var 2))],
          template_predicate
           (template_app (template_hole 4, template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), t_empty),
         template_var 2))),
    ("Refine_Basic.pw_ref_iff",
     "(?S <= \<Down> ?R ?S') =
      (nofail ?S' -->
       nofail ?S &
       (ALL x. inres ?S x --> (EX s'. (x, s') : ?R & inres ?S' s')))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_app (template_hole 5, t_empty))))),
    ("Refine_Basic.bind_RES_RETURN2_eq",
     "RES ?X >>= (%(x, y). RETURN (?f x y)) =
      SPEC (%uu_. EX x y. uu_ = ?f x y & (x, y) : ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 1)),
         template_app (template_hole 9, t_empty)),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("Refine_Basic.refine",
     "(!!a a'. (a, a') : ?A ==> (?f a, ?f' a') : ?B) ==>
      (?f, ?f') : ?A \<rightarrow> ?B",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 0))
           ))),
    ("Refine_Basic.if_rule",
     "[| ?b ==> ?S1.0 <= SPEC ?\<Phi>; ~ ?b ==> ?S2.0 <= SPEC ?\<Phi> |]
      ==> (if ?b then ?S1.0 else ?S2.0) <= SPEC ?\<Phi>",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1)))),
        template_implication
         ([template_negation (template_predicate (template_var 3))],
          template_inequation
           (less_equals, template_var 0,
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 1))))),
    ("Refine_Basic.pw_ref_I",
     "nofail ?S' -->
      nofail ?S &
      (ALL x. inres ?S x --> (EX s'. (x, s') : ?R & inres ?S' s')) ==>
      ?S <= \<Down> ?R ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1)),
                template_app (template_hole 7, t_empty)))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Refine_Basic.pw_bind_leI",
     "[| nofail ?S ==> nofail ?M;
         !!x. [| nofail ?M; inres ?M x |] ==> ?f x <= ?S |]
      ==> ?M >>= ?f <= ?S",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_hole 5, template_var 2))],
          template_predicate
           (template_app (template_hole 4, template_var 1))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Refine_Basic.unused_bind_conv",
     "[| NO_MATCH (ASSERT ?\<Phi>) ?m; NO_MATCH (ASSUME ?\<Phi>) ?m |]
      ==> ?m >>= (%x. ?c) =
          ASSERT (nofail ?m) >>=
          (%_. ASSUME (EX x. inres ?m x) >>= (%x. ?c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 7,
               template_app (template_hole 2, template_var 1))),
           t_empty)))),
    ("Refine_Basic.bind_assert_refine",
     "[| ?m1.0 <= SPEC ?\<Phi>; !!x. ?\<Phi> x ==> ?m2.0 x <= ?m' |]
      ==> ?m1.0 >>= (%x. ASSERT (?\<Phi> x) >>= (%_. ?m2.0 x)) <= ?m'",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 2))),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 3), t_empty),
         template_var 0))),
    ("Refine_Basic.return_refine_prop_return",
     "[| nofail ?m; RETURN ?x <= \<Down> ?R ?m;
         !!x'. [| (?x, x') : ?R; RETURN x' <= ?m |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 3)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Refine_Basic.param_op_nres_ASSERT_bnd",
     "[| ?\<Phi>' ==> ?\<Phi>;
         [| ?\<Phi>'; ?\<Phi> |]
         ==> (?m, ?m') : \<langle>?R\<rangle>nres_rel |]
      ==> (op_nres_ASSERT_bnd ?\<Phi> ?m, op_nres_ASSERT_bnd ?\<Phi>' ?m')
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_implication
         ([template_predicate (template_var 4)],
          template_predicate (template_var 3)),
        template_implication
         ([template_predicate (template_var 4)],
          template_implication
           ([template_predicate (template_var 3)],
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 0))
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0))
           ))),
    ("Refine_Basic.Let_refine'",
     "[| (?m, ?m') : ?R; (?m, ?m') : ?R ==> ?f ?m <= \<Down> ?S (?f' ?m') |]
      ==> Let ?m ?f <= \<Down> ?S (Let ?m' ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4)),
                 template_var 3)
               )],
          template_inequation
           (less_equals, template_app (template_var 2, template_var 5),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 0, template_var 4))))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0))))),
    ("Refine_Basic.inres_if",
     "[| inres (if ?P then ?Q else ?R) ?x; [| ?P; inres ?Q ?x |] ==> ?S;
         [| ~ ?P; inres ?R ?x |] ==> ?S |]
      ==> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_var 4)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation (template_predicate (template_var 4))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Refine_Basic.autoref_ASSERT",
     "(?\<Phi> ==> (?m', ?m) : \<langle>?R\<rangle>nres_rel) ==>
      (?m',
       (Autoref_Tagging.OP (op_nres_ASSERT_bnd ?\<Phi>) :::
        \<langle>?R\<rangle>nres_rel \<rightarrow>
        \<langle>?R\<rangle>nres_rel) $
       ?m)
      : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 0))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 3))),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 0))))),
                   template_var 1))),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))
           ))),
    ("Refine_Basic.intro_bind_refine",
     "[| ?m <= \<Down> ?R' (RETURN ?m');
         !!x. (x, ?m') : ?R' ==> ?f x <= \<Down> ?R ?m'' |]
      ==> ?m >>= ?f <= \<Down> ?R ?m''",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 7, template_var 4),
            template_app (template_hole 6, template_var 3))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 5), t_empty),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Refine_Basic.SPEC_iff",
     "[| ?P <= SPEC (%s. ?Q s --> ?R s);
         ?P <= SPEC (%s. ~ ?Q s --> ~ ?R s) |]
      ==> ?P <= SPEC (%s. ?Q s = ?R s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 4, template_app (template_hole 3, t_empty))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 4, template_app (template_hole 3, t_empty)))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Refine_Basic.option_rule",
     "[| ?v = None ==> ?S1.0 <= SPEC ?\<Phi>;
         !!x. ?v = Some x ==> ?f2.0 x <= SPEC ?\<Phi> |]
      ==> (case ?v of None => ?S1.0 | Some x => ?f2.0 x) <= SPEC ?\<Phi>",
     template_implication
      ([template_implication
         ([template_equation (template_var 3, template_hole 6)],
          template_inequation
           (less_equals, template_var 2,
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 1))))),
    ("Refine_Basic.rhs_step_bind",
     "[| ?m <= \<Down> ?R ?m'; inres ?m ?x;
         !!x'. (?x, x') : ?R ==> ?lhs <= \<Down> ?S (?f' x') |]
      ==> ?lhs <= \<Down> ?S (?m' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0))))),
    ("Refine_Basic.pw_REC_nofail",
     "nofail (REC ?B ?x) =
      (trimono ?B &
       (EX F. (ALL x.
                  nofail (F x) -->
                  nofail (?B F x) &
                  (ALL x'. inres (?B F x) x' --> inres (F x) x')) &
              nofail (F ?x)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_RECT_nofail",
     "nofail (REC\<^sub>T ?B ?x) =
      (trimono ?B &
       (ALL F.
           (ALL y.
               nofail (?B F y) -->
               nofail (F y) &
               (ALL x. inres (F y) x --> inres (?B F y) x)) -->
           nofail (F ?x)))",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.param_ASSERT_bind",
     "[| (?\<Phi>, ?\<Psi>) : bool_rel;
         [| ?\<Phi>; ?\<Psi> |]
         ==> (?f, ?g) : \<langle>?R\<rangle>nres_rel |]
      ==> (ASSERT ?\<Phi> >>= (%_. ?f), ASSERT ?\<Psi> >>= (%_. ?g))
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_hole 7)
            ),
        template_implication
         ([template_predicate (template_var 4)],
          template_implication
           ([template_predicate (template_var 3)],
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_var 0))
                )))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 4)),
                     t_empty)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 1, template_var 3)),
                   t_empty))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0))
           ))),
    ("Refine_Basic.bind2let_refine",
     "[| RETURN ?x <= \<Down> ?R' ?M';
         !!x'. (?x, x') : ?R' ==> ?f ?x <= \<Down> ?R (?f' x') |]
      ==> Let ?x ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 5),
          template_app
           (template_app (template_hole 7, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.pw_REC_inres",
     "inres (REC ?B ?x) ?x' =
      (trimono ?B -->
       (ALL F.
           (ALL x''.
               nofail (F x'') -->
               nofail (?B F x'') &
               (ALL x. inres (?B F x'') x --> inres (F x'') x)) -->
           inres (F ?x) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.pw_RECT_inres",
     "inres (REC\<^sub>T ?B ?x) ?x' =
      (trimono ?B -->
       (EX M. (ALL y.
                  nofail (?B M y) -->
                  nofail (M y) &
                  (ALL x. inres (M y) x --> inres (?B M y) x)) &
              inres (M ?x) ?x'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 4, t_empty)))),
    ("Refine_Basic.bind2letRETURN_refine",
     "[| RETURN ?x <= \<Down> ?R' ?M';
         !!x'. (?x, x') : ?R' ==> RETURN (?f ?x) <= \<Down> ?R (?f' x') |]
      ==> RETURN (Let ?x ?f) <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_var 5),
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.autoref_ASSUME",
     "[| SIDE_PRECOND ?\<Phi>;
         ?\<Phi> ==> (?m', ?m) : \<langle>?R\<rangle>nres_rel |]
      ==> (?m',
           (Autoref_Tagging.OP (op_nres_ASSUME_bnd ?\<Phi>) :::
            \<langle>?R\<rangle>nres_rel \<rightarrow>
            \<langle>?R\<rangle>nres_rel) $
           ?m)
          : \<langle>?R\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 3)))
            ),
        template_implication
         ([template_predicate (template_var 3)],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1)),
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 0))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 3))),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_var 0))),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 0))))),
                   template_var 1))),
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0))
           ))),
    ("Refine_Basic.bind_refine",
     "[| ?M <= \<Down> ?R' ?M';
         !!x x'. (x, x') : ?R' ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 8, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.Let_refine",
     "[| (?m, ?m') : ?R';
         !!x x'. (x, x') : ?R' ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> Let ?m ?f <= \<Down> ?R (Let ?m' ?f')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4), t_empty))))),
    ("Refine_Basic.add_invar_refineI",
     "[| ?f ?x <= \<Down> ?R (?f' ?x');
         nofail (?f ?x) ==> ?f ?x <= SPEC ?I |]
      ==> ?f ?x <= \<Down> {(c, a). (c, a) : ?R & ?I c} (?f' ?x')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 5, template_var 4),
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app (template_var 2, template_var 1))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 7,
                 template_app (template_var 5, template_var 4))
               )],
          template_inequation
           (less_equals, template_app (template_var 5, template_var 4),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))))],
       template_inequation
        (less_equals, template_app (template_var 5, template_var 4),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))),
           template_app (template_var 2, template_var 1))))),
    ("Refine_Basic.param_RECT",
     "[| (?B, ?B')
         : (?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
           ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel;
         trimono ?B |]
      ==> (REC\<^sub>T ?B, REC\<^sub>T ?B')
          : ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_var 0)))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 0))))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_app (template_hole 0, template_var 2))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 1)),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)))
           ))),
    ("Refine_Basic.let2bind_refine",
     "[| ?m <= \<Down> ?R' (RETURN ?m');
         !!x x'. (x, x') : ?R' ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?m >>= ?f <= \<Down> ?R (Let ?m' ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app (template_hole 8, template_var 3))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.if_bind_cond_refine",
     "[| ?ci <= RETURN ?b; ?b ==> ?ti <= \<Down> ?R ?t;
         ~ ?b ==> ?ei <= \<Down> ?R ?e |]
      ==> ?ci >>= (%b. if b then ?ti else ?ei)
          <= \<Down> ?R (if ?b then ?t else ?e)",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app (template_hole 6, template_var 5)),
        template_implication
         ([template_predicate (template_var 5)],
          template_inequation
           (less_equals, template_var 4,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2))),
        template_implication
         ([template_negation (template_predicate (template_var 5))],
          template_inequation
           (less_equals, template_var 1,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 6), t_empty),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0))))),
    ("Refine_Basic.bind_sim_select_rule",
     "[| ?m >>= ?f' <= SPEC ?\<Psi>;
         !!x. [| nofail ?m; inres ?m x; ?f' x <= SPEC ?\<Psi> |]
              ==> ?f x <= SPEC ?\<Phi> |]
      ==> ?m >>= ?f <= SPEC ?\<Phi>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 4), template_var 3),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 2))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Refine_Basic.bind_Let_refine2",
     "[| ?m' <= \<Down> ?R' (RETURN ?x);
         !!x'. [| inres ?m' x'; (x', ?x) : ?R' |]
               ==> ?f' x' <= \<Down> ?R (?f ?x) |]
      ==> ?m' >>= ?f' <= \<Down> ?R (Let ?x ?f)",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app (template_hole 8, template_var 3))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.if_refine",
     "[| ?b = ?b'; [| ?b; ?b' |] ==> ?S1.0 <= \<Down> ?R ?S1';
         [| ~ ?b; ~ ?b' |] ==> ?S2.0 <= \<Down> ?R ?S2' |]
      ==> (if ?b then ?S1.0 else ?S2.0)
          <= \<Down> ?R (if ?b' then ?S1' else ?S2')",
     template_implication
      ([template_equation (template_var 6, template_var 5),
        template_implication
         ([template_predicate (template_var 6)],
          template_implication
           ([template_predicate (template_var 5)],
            template_inequation
             (less_equals, template_var 4,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2)))),
        template_implication
         ([template_negation (template_predicate (template_var 6))],
          template_implication
           ([template_negation (template_predicate (template_var 5))],
            template_inequation
             (less_equals, template_var 1,
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_var 4),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0))))),
    ("Refine_Basic.bind_refine_abs'",
     "[| ?M <= \<Down> ?R' ?M';
         !!x x'.
            [| (x, x') : ?R'; nf_inres ?M' x' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.bind_refine_RES",
     "[| ?M <= \<Down> ?R' (RES ?X');
         !!x x'.
            [| (x, x') : ?R'; x' : ?X' |] ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (RES ?X' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 10, template_var 4),
            template_app (template_hole 9, template_var 3))),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 9, template_var 3)),
             t_empty))))),
    ("Refine_Basic.bind_refine_RES",
     "[| RES ?X <= \<Down> ?R' ?M';
         !!x x'.
            [| (x, x') : ?R'; x : ?X |] ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> RES ?X >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 10, template_var 5)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.if_RETURN_refine",
     "[| ?b = ?b'; [| ?b; ?b' |] ==> RETURN ?S1.0 <= \<Down> ?R ?S1';
         [| ~ ?b; ~ ?b' |] ==> RETURN ?S2.0 <= \<Down> ?R ?S2' |]
      ==> RETURN (if ?b then ?S1.0 else ?S2.0)
          <= \<Down> ?R (if ?b' then ?S1' else ?S2')",
     template_implication
      ([template_equation (template_var 6, template_var 5),
        template_implication
         ([template_predicate (template_var 6)],
          template_implication
           ([template_predicate (template_var 5)],
            template_inequation
             (less_equals, template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2)))),
        template_implication
         ([template_negation (template_predicate (template_var 6))],
          template_implication
           ([template_negation (template_predicate (template_var 5))],
            template_inequation
             (less_equals, template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 0))))),
    ("Refine_Basic.prod2_rule",
     "(!!a b c d.
          [| ?ab = (a, b); ?cd = (c, d) |]
          ==> ?f a b c d <= SPEC ?\<Phi>) ==>
      (case ?ab of (a, b) => %(c, d). ?f a b c d) ?cd <= SPEC ?\<Phi>",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 3),
           template_var 2),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Refine_Basic.bind_refine_RES",
     "[| RES ?X <= \<Down> ?R' (RES ?X');
         !!x x'.
            [| (x, x') : ?R'; x : ?X; x' : ?X' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> RES ?X >>= ?f <= \<Down> ?R (RES ?X' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 5),
          template_app
           (template_app (template_hole 11, template_var 4),
            template_app (template_hole 10, template_var 3))),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 12, template_var 5)),
           t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 10, template_var 3)),
             t_empty))))),
    ("Refine_Basic.REC_le_rule",
     "[| trimono ?body; (?x, ?x') : ?R;
         !!f x x'.
            [| !!x x'. (x, x') : ?R ==> f x <= ?M x'; (x, x') : ?R |]
            ==> ?body f x <= ?M x' |]
      ==> REC ?body ?x <= ?M ?x'",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 3),
         template_app (template_var 0, template_var 2)))),
    ("Refine_Basic.bind_refine'",
     "[| ?M <= \<Down> ?R' ?M';
         !!x x'.
            [| (x, x') : ?R'; inres ?M x; inres ?M' x'; nofail ?M;
               nofail ?M' |]
            ==> ?f x <= \<Down> ?R (?f' x') |]
      ==> ?M >>= ?f <= \<Down> ?R (?M' >>= ?f')",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app
           (template_app (template_hole 12, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 5), t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3), t_empty))))),
    ("Refine_Basic.case_option_refine",
     "[| (?v, ?v') : \<langle>?Ra\<rangle>option_rel;
         [| ?v = None; ?v' = None |] ==> ?n <= \<Down> ?Rb ?n';
         !!x x'.
            [| ?v = Some x; ?v' = Some x'; (x, x') : ?Ra |]
            ==> ?f x <= \<Down> ?Rb (?f' x') |]
      ==> (case ?v of None => ?n | Some x => ?f x)
          <= \<Down> ?Rb (case ?v' of None => ?n' | Some x => ?f' x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 7),
                  template_var 6)),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_var 5))
            ),
        template_implication
         ([template_equation (template_var 7, template_hole 12)],
          template_implication
           ([template_equation (template_var 6, template_hole 10)],
            template_inequation
             (less_equals, template_var 4,
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2)))),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_var 7),
         template_app
          (template_app (template_hole 8, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 6))))),
    ("Refine_Basic.autoref_REC",
     "[| (?B, ?B')
         : (?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
           ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel;
         DEFER trimono ?B |]
      ==> (REC ?B,
           (Autoref_Tagging.OP REC :::
            ((?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
             ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
            ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) $
           ?B')
          : ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_hole 19),
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_hole 16),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 0)))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 17, template_hole 16),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 20, template_hole 19),
                                     template_app
(template_app
  (template_hole 18,
   template_app
    (template_app (template_hole 17, template_hole 16), template_var 1)),
 template_app
  (template_app (template_hole 15, template_hole 14), template_var 0)))),
                                 template_app
                                  (template_app
                                    (template_hole 18,
                                     template_app
(template_app (template_hole 17, template_hole 16), template_var 1)),
                                   template_app
                                    (template_app
(template_hole 15, template_hole 14),
                                     template_var 0))))),
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 17, template_hole 16),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 15, template_hole 14),
                               template_var 0)))))),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 17, template_hole 16),
                   template_var 1)),
               template_app
                (template_app (template_hole 15, template_hole 14),
                 template_var 0)))
           ))),
    ("Refine_Basic.autoref_RECT",
     "[| (?B, ?B')
         : (?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
           ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel;
         DEFER trimono ?B |]
      ==> (REC\<^sub>T ?B,
           (Autoref_Tagging.OP REC\<^sub>T :::
            ((?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
             ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) \<rightarrow>
            ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel) $
           ?B')
          : ?Ra \<rightarrow> \<langle>?Rr\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_hole 19),
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_hole 16),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 0)))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 17, template_hole 16),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 15, template_hole 14),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 1, template_hole 0),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 20, template_hole 19),
                                     template_app
(template_app
  (template_hole 18,
   template_app
    (template_app (template_hole 17, template_hole 16), template_var 1)),
 template_app
  (template_app (template_hole 15, template_hole 14), template_var 0)))),
                                 template_app
                                  (template_app
                                    (template_hole 18,
                                     template_app
(template_app (template_hole 17, template_hole 16), template_var 1)),
                                   template_app
                                    (template_app
(template_hole 15, template_hole 14),
                                     template_var 0))))),
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 17, template_hole 16),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 15, template_hole 14),
                               template_var 0)))))),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 17, template_hole 16),
                   template_var 1)),
               template_app
                (template_app (template_hole 15, template_hole 14),
                 template_var 0)))
           ))),
    ("Refine_Basic.RECT_refine",
     "[| trimono ?body; (?x, ?x') : ?R;
         !!f f' x x'.
            [| !!x x'. (x, x') : ?R ==> f x <= \<Down> ?S (f' x');
               (x, x') : ?R |]
            ==> ?body f x <= \<Down> ?S (?body' f' x') |]
      ==> REC\<^sub>T ?body ?x <= \<Down> ?S (REC\<^sub>T ?body' ?x')",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, t_empty), template_var 4),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, t_empty), template_var 3))))),
    ("Refine_Basic.prod_case_refine",
     "[| (?p', ?p) : ?R1.0 \<times>\<^sub>r ?R2.0;
         !!x1' x2' x1 x2.
            [| ?p' = (x1', x2'); ?p = (x1, x2); (x1', x1) : ?R1.0;
               (x2', x2) : ?R2.0 |]
            ==> ?f' x1' x2' <= \<Down> ?R (?f x1 x2) |]
      ==> (case ?p' of (x1', x2') => ?f' x1' x2')
          <= \<Down> ?R (case ?p of (x1, x2) => ?f x1 x2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_var 4)),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, t_empty), template_var 6),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, t_empty), template_var 5))))),
    ("Refine_Basic.REC_refine",
     "[| trimono ?body; (?x, ?x') : ?R;
         !!f f' x x'.
            [| !!x x'. (x, x') : ?R ==> f x <= \<Down> ?S (f' x');
               (x, x') : ?R; REC ?body' = f' |]
            ==> ?body f x <= \<Down> ?S (?body' f' x') |]
      ==> REC ?body ?x <= \<Down> ?S (REC ?body' ?x')",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, t_empty), template_var 4),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 1, t_empty), template_var 3))))),
    ("Refine_Basic.list_case_refine",
     "[| (?li, ?l) : \<langle>?S\<rangle>list_rel; ?fni <= \<Down> ?R ?fn;
         !!xi x xsi xs.
            [| (xi, x) : ?S; (xsi, xs) : \<langle>?S\<rangle>list_rel;
               ?li = xi # xsi; ?l = x # xs |]
            ==> ?fci xi xsi <= \<Down> ?R (?fc x xs) |]
      ==> (case ?li of [] => ?fni | xi # xsi => ?fci xi xsi)
          <= \<Down> ?R (case ?l of [] => ?fn | x # xs => ?fc x xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 7),
                  template_var 6)),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_var 5))
            ),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 12, template_var 3),
            template_var 2)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4), t_empty),
           template_var 7),
         template_app
          (template_app (template_hole 12, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2), t_empty),
             template_var 6)))))]
