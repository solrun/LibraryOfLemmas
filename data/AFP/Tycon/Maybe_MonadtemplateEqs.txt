   [("Maybe_Monad.fplus_maybe_simps", "fplus$Nothing$?ys = ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Maybe_Monad.fplus_maybe_simps", "fplus$\<bottom>$?ys = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_hole 0)),
    ("Maybe_Monad.fplus_Nothing_right", "fplus$?m$Nothing = ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Maybe_Monad.bind_maybe_simps", "Nothing \<bind> ?f = Nothing",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("Maybe_Monad.bind_maybe_simps", "\<bottom> \<bind> ?f = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("Maybe_Monad.fmap_maybe_simps", "fmap$?f$Nothing = Nothing",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Maybe_Monad.fmap_maybe_simps", "fmap$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Maybe_Monad.join_maybe_simps", "join$(Just$?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Maybe_Monad.bindU_maybe_strict", "bindU$\<bottom>$?k = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_hole 0)),
    ("Maybe_Monad.fmapU_maybe_simps", "fmapU$?f$Nothing = Nothing",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Maybe_Monad.fmapU_maybe_simps", "fmapU$?f$\<bottom> = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Maybe_Monad.plusU_maybe_strict", "plusU$\<bottom>$?ys = \<bottom>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_hole 0)),
    ("Maybe_Monad.plusU_Nothing_right", "plusU$?xs$Nothing = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Maybe_Monad.coerce_Just",
     "COERCE(?'b\<cdot>maybe, ?'a\<cdot>maybe)$(Just$?x) =
      Just$(COERCE(?'b, ?'a)$?x)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Maybe_Monad.coerce_maybe_abs",
     "COERCE(?'b\<cdot>maybe, ?'a\<cdot>maybe)$(maybe_abs$?x) =
      maybe_abs$
      (COERCE(one ++ ?'b\<^sub>\<bottom>, one ++ ?'a\<^sub>\<bottom>)$?x)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Maybe_Monad.fplus_maybe_simps", "fplus$(Just$?x)$?ys = Just$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 1))),
    ("Maybe_Monad.bind_maybe_simps", "Just$?x \<bind> ?f = ?f$?x",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Maybe_Monad.fmap_maybe_simps", "fmap$?f$(Just$?x) = Just$(?f$?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Maybe_Monad.fmapU_maybe_simps", "fmapU$?f$(Just$?x) = Just$(?f$?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Maybe_Monad.maybe_map_unfold",
     "maybe_map$?a = maybe_abs oo ssum_map$ID$(u_map$?a) oo maybe_rep",
     template_equation
      (template_app
        (template_app (template_hole 15, template_hole 14), template_var 0),
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_hole 11),
             template_hole 10)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0)))),
           template_hole 0))))]
