   [("vertex_example_simps.succ_tran_empty",
     "succ_tran (| nodes = ?V, edges = {} |) ?v = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2),
             template_hole 1)),
         template_var 0),
       template_hole 0)),
    ("vertex_example_simps.canAccessThis_simp4",
     "?canAccessThis ~= vertex_1 ==>
      {vertex_1, ?canAccessThis, vertex_1, ?canAccessThis} =
      {vertex_1, ?canAccessThis}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 3),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app (template_hole 1, template_hole 3),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("vertex_example_simps.canAccessThis_simp2",
     "?canAccessThis ~= vertex_1 ==>
      succ_tran
       (| nodes = {vertex_1, ?canAccessThis},
          edges = {(vertex_1, ?canAccessThis)} |)
       ?canAccessThis =
      {}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 9),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_hole 4))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 9),
                       template_var 0)),
                   template_hole 1)),
               template_hole 0)),
           template_var 0),
         template_hole 4))),
    ("vertex_example_simps.canAccessThis_simp1",
     "?canAccessThis ~= vertex_1 ==>
      succ_tran
       (| nodes = {vertex_1, ?canAccessThis},
          edges = {(vertex_1, ?canAccessThis)} |)
       vertex_1 =
      {?canAccessThis}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 9),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_hole 4))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 9),
                       template_var 0)),
                   template_hole 1)),
               template_hole 0)),
           template_hole 9),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)))),
    ("vertex_example_simps.canAccessThis_simp3",
     "?canAccessThis ~= vertex_1 ==>
      {(e1, e2).
       e1 = vertex_1 &
       e2 = ?canAccessThis & (e1 = vertex_1 --> e2 ~= ?canAccessThis)} =
      {}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_hole 0)))]
