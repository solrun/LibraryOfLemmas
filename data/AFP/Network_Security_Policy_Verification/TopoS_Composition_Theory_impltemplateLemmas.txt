   [("TopoS_Composition_Theory_impl.implc_get_offending_flows_map_concat",
     "implc_get_offending_flows ?M ?G =
      concat (map (%m. implc_offending_flows m ?G) ?M)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("TopoS_Composition_Theory_impl.implc_get_offending_flows_fold",
     "implc_get_offending_flows ?M ?G =
      fold (%m accu. accu @ implc_offending_flows m ?G) ?M []",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_hole 0))),
    ("TopoS_Composition_Theory_impl.implc_get_offending_flows_Un",
     "set ` set (implc_get_offending_flows ?M ?G) =
      (UN m:set ?M. set ` set (implc_offending_flows m ?G))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("TopoS_Composition_Theory_impl.new_configured_list_SecurityInvariant_complies'",
     "TopoS_modelLibrary ?m ?sinvar_spec ==>
      SecurityInvariant_complies_formal_def
       (new_configured_list_SecurityInvariant ?m ?C ?description)
       (the (new_configured_SecurityInvariant
              (?sinvar_spec, nm_default ?m, nm_receiver_violation ?m,
               nm_node_props ?m ?C)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 3)),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 1)))))))
           ))),
    ("TopoS_Composition_Theory_impl.get_IFS_get_ACS_select_simps",
     "ALL (m_impl, m_spec):set ?M.
         SecurityInvariant_complies_formal_def m_impl m_spec ==>
      get_impl
       (zip (TopoS_Composition_Theory_impl.get_ACS (get_impl ?M))
         (TopoS_Composition_Theory.get_ACS (get_spec ?M))) =
      TopoS_Composition_Theory_impl.get_ACS (get_impl ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_hole 2,
           template_app (template_hole 4, template_var 0))))),
    ("TopoS_Composition_Theory_impl.get_IFS_get_ACS_select_simps",
     "ALL (m_impl, m_spec):set ?M.
         SecurityInvariant_complies_formal_def m_impl m_spec ==>
      get_impl
       (zip (TopoS_Composition_Theory_impl.get_IFS (get_impl ?M))
         (TopoS_Composition_Theory.get_IFS (get_spec ?M))) =
      TopoS_Composition_Theory_impl.get_IFS (get_impl ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))),
         template_app
          (template_hole 2,
           template_app (template_hole 4, template_var 0))))),
    ("TopoS_Composition_Theory_impl.get_IFS_get_ACS_select_simps",
     "ALL (m_impl, m_spec):set ?M.
         SecurityInvariant_complies_formal_def m_impl m_spec ==>
      get_spec
       (zip (TopoS_Composition_Theory_impl.get_ACS (get_impl ?M))
         (TopoS_Composition_Theory.get_ACS (get_spec ?M))) =
      TopoS_Composition_Theory.get_ACS (get_spec ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("TopoS_Composition_Theory_impl.get_IFS_get_ACS_select_simps",
     "ALL (m_impl, m_spec):set ?M.
         SecurityInvariant_complies_formal_def m_impl m_spec ==>
      get_spec
       (zip (TopoS_Composition_Theory_impl.get_IFS (get_impl ?M))
         (TopoS_Composition_Theory.get_IFS (get_spec ?M))) =
      TopoS_Composition_Theory.get_IFS (get_spec ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("TopoS_Composition_Theory_impl.all_security_requirements_fulfilled_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G |]
      ==> TopoS_Composition_Theory_impl.all_security_requirements_fulfilled
           (get_impl ?M) ?G =
          TopoS_Composition_Theory.all_security_requirements_fulfilled
           (get_spec ?M) (list_graph_to_graph ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("TopoS_Composition_Theory_impl.get_IFS_get_ACS_complies",
     "ALL (m_impl, m_spec):set ?M.
         SecurityInvariant_complies_formal_def m_impl m_spec ==>
      ALL (m_impl, m_spec)
          :set (zip (TopoS_Composition_Theory_impl.get_ACS (get_impl ?M))
                 (TopoS_Composition_Theory.get_ACS (get_spec ?M))).
         SecurityInvariant_complies_formal_def m_impl m_spec",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0))),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))))),
             template_app (template_hole 6, t_empty))
           ))),
    ("TopoS_Composition_Theory_impl.get_IFS_get_ACS_complies",
     "ALL (m_impl, m_spec):set ?M.
         SecurityInvariant_complies_formal_def m_impl m_spec ==>
      ALL (m_impl, m_spec)
          :set (zip (TopoS_Composition_Theory_impl.get_IFS (get_impl ?M))
                 (TopoS_Composition_Theory.get_IFS (get_spec ?M))).
         SecurityInvariant_complies_formal_def m_impl m_spec",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0))),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))))),
             template_app (template_hole 6, t_empty))
           ))),
    ("TopoS_Composition_Theory_impl.generate_valid_topology_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G |]
      ==> list_graph_to_graph
           (TopoS_Composition_Theory_impl.generate_valid_topology
             (get_impl ?M) ?G) =
          TopoS_Composition_Theory.generate_valid_topology (get_spec ?M)
           (list_graph_to_graph ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_app (template_hole 8, t_empty))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("TopoS_Composition_Theory_impl.implc_get_offending_flows_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G |]
      ==> set ` set (implc_get_offending_flows (get_impl ?M) ?G) =
          get_offending_flows (get_spec ?M) (list_graph_to_graph ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 1)),
              template_app (template_hole 11, t_empty))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("TopoS_Composition_Theory_impl.generate_valid_topology_some_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G |]
      ==> list_graph_to_graph
           (TopoS_Composition_Theory_impl.generate_valid_topology_some
             (get_impl ?M) ?G) =
          TopoS_Composition_Theory.generate_valid_topology_some
           (get_spec ?M) (edgesL ?G) (list_graph_to_graph ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 5, template_var 0))))),
    ("TopoS_Composition_Theory_impl.new_configured_list_SecurityInvariant_complies",
     "[| TopoS_modelLibrary ?m ?sinvar_spec; ?nP = nm_node_props ?m ?C;
         ?Spec =
         new_configured_SecurityInvariant
          (?sinvar_spec, nm_default ?m, nm_receiver_violation ?m, ?nP);
         ?Impl = new_configured_list_SecurityInvariant ?m ?C ?description |]
      ==> SecurityInvariant_complies_formal_def ?Impl (the ?Spec)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 11, template_var 6),
            template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 6)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 6)),
                  template_var 4))))),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_app (template_hole 2, template_var 6),
              template_var 3),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("TopoS_Composition_Theory_impl.TopoS_modelLibrary_yields_new_configured_SecurityInvariant",
     "[| TopoS_modelLibrary ?m ?sinvar_spec; ?nP = nm_node_props ?m ?C;
         ?Spec =
         (| c_sinvar = %G. ?sinvar_spec G ?nP,
            c_offending_flows =
              %G. SecurityInvariant_withOffendingFlows.set_offending_flows
                   ?sinvar_spec G ?nP,
            c_isIFS = nm_receiver_violation ?m |) |]
      ==> new_configured_SecurityInvariant
           (?sinvar_spec, nm_default ?m, nm_receiver_violation ?m, ?nP) =
          Some ?Spec",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 12, template_var 4),
            template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 10, t_empty), t_empty),
              template_app (template_hole 8, template_var 4)),
            template_hole 7))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 4)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 8, template_var 4)),
                 template_var 2)))),
         template_app (template_hole 0, template_var 0))))]
