   [("TopoS_Stateful_Policy_impl.inefficient_list_intersect_correct",
     "set (inefficient_list_intersect ?a ?b) = set ?a Int set ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("TopoS_Stateful_Policy_impl.filter_IFS_no_violations_accu_distinct",
     "distinct (?Es @ ?accu) ==>
      distinct
       (TopoS_Stateful_Policy_impl.filter_IFS_no_violations_accu ?G ?M ?accu
         ?Es)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2),
               template_var 3))
           ))),
    ("TopoS_Stateful_Policy_impl.stateful_list_policy_to_list_graph_complies",
     "list_graph_to_graph
       (stateful_list_policy_to_list_graph
         (| hostsL = ?V, flows_fixL = ?E\<^sub>f,
            flows_stateL = ?E\<^sub>\<sigma> |)) =
      stateful_policy_to_network_graph
       (| hosts = set ?V, flows_fix = set ?E\<^sub>f,
          flows_state = set ?E\<^sub>\<sigma> |)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 4))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0)),
           template_hole 4)))),
    ("TopoS_Stateful_Policy_impl.wf_list_graph_stateful_list_policy_to_list_graph",
     "[| wf_list_graph ?G; distinct ?E; set ?E <= set (edgesL ?G) |]
      ==> wf_list_graph
           (stateful_list_policy_to_list_graph
             (| hostsL = nodesL ?G, flows_fixL = edgesL ?G,
                flows_stateL = ?E |))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 1)))],
       template_predicate
        (
           template_app
            (template_hole 8,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 4, template_var 1)),
                   template_var 0),
                 template_hole 0)))
           ))),
    ("TopoS_Stateful_Policy_impl.filter_IFS_no_violations_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G |]
      ==> TopoS_Stateful_Policy_impl.filter_IFS_no_violations ?G
           (get_impl ?M) =
          TopoS_Stateful_Policy_Algorithm.filter_IFS_no_violations
           (list_graph_to_graph ?G) (get_spec ?M) (edgesL ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("TopoS_Stateful_Policy_impl.filter_compliant_stateful_ACS_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G |]
      ==> TopoS_Stateful_Policy_impl.filter_compliant_stateful_ACS ?G
           (get_impl ?M) =
          TopoS_Stateful_Policy_Algorithm.filter_compliant_stateful_ACS
           (list_graph_to_graph ?G) (get_spec ?M) (edgesL ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("TopoS_Stateful_Policy_impl.filter_compliant_stateful_ACS_cont_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G; set ?Es <= set (edgesL ?G); distinct ?Es |]
      ==> TopoS_Stateful_Policy_impl.filter_compliant_stateful_ACS_accu ?G
           (get_impl ?M) [] ?Es =
          TopoS_Stateful_Policy_Algorithm.filter_compliant_stateful_ACS
           (list_graph_to_graph ?G) (get_spec ?M) ?Es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 2)),
              template_app (template_hole 13, t_empty))
            ),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 1))),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 1),
               template_app (template_hole 4, template_var 2)),
             template_hole 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("TopoS_Stateful_Policy_impl.generate_valid_stateful_policy_IFSACS_2_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G; valid_reqs (get_spec ?M);
         TopoS_Composition_Theory.all_security_requirements_fulfilled
          (get_spec ?M) (list_graph_to_graph ?G);
         ?\<T> =
         TopoS_Stateful_Policy_impl.generate_valid_stateful_policy_IFSACS_2
          ?G (get_impl ?M) |]
      ==> stateful_policy_compliance
           (| hosts = set (hostsL ?\<T>),
              flows_fix = set (flows_fixL ?\<T>),
              flows_state = set (flows_stateL ?\<T>) |)
           (list_graph_to_graph ?G) (get_spec ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 2)),
              template_app (template_hole 17, t_empty))
            ),
        template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 13, template_var 2)),
              template_app (template_hole 11, template_var 1))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_app (template_hole 8, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_var 0))),
                       template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 0))),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 1, template_var 0))),
                   template_hole 0)),
               template_app (template_hole 11, template_var 1)),
             template_app (template_hole 13, template_var 2))
           ))),
    ("TopoS_Stateful_Policy_impl.filter_IFS_no_violations_accu_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G; set ?Es <= set (edgesL ?G);
         set ?accu <= set (edgesL ?G); distinct (?Es @ ?accu) |]
      ==> TopoS_Stateful_Policy_impl.filter_IFS_no_violations_accu ?G
           (get_impl ?M) ?accu ?Es =
          TopoS_Stateful_Policy_Algorithm.filter_IFS_no_violations_accu
           (list_graph_to_graph ?G) (get_spec ?M) ?accu ?Es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 3)),
              template_app (template_hole 13, t_empty))
            ),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 1),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 2))),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 2))),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 3, template_var 3)),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 0, template_var 3)),
             template_var 0),
           template_var 1)))),
    ("TopoS_Stateful_Policy_impl.filter_compliant_stateful_ACS_accu_complies",
     "[| ALL (m_impl, m_spec):set ?M.
            SecurityInvariant_complies_formal_def m_impl m_spec;
         wf_list_graph ?G; set ?Es <= set (edgesL ?G);
         set ?accu <= set (edgesL ?G); distinct (?Es @ ?accu) |]
      ==> TopoS_Stateful_Policy_impl.filter_compliant_stateful_ACS_accu ?G
           (get_impl ?M) ?accu ?Es =
          TopoS_Stateful_Policy_Algorithm.filter_compliant_stateful_ACS_accu
           (list_graph_to_graph ?G) (get_spec ?M) ?accu ?Es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 3)),
              template_app (template_hole 13, t_empty))
            ),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 1),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 2))),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 2))),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 3, template_var 3)),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 0, template_var 3)),
             template_var 0),
           template_var 1))))]
