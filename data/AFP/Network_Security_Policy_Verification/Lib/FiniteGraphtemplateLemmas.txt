   [("FiniteGraph.succ_empty", "succ FiniteGraph.empty ?v = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("FiniteGraph.backflows_id", "backflows (backflows ?E) = ?E",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("FiniteGraph.delete_edges_empty", "delete_edges ?G {} = ?G",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("FiniteGraph.delete_edges_set_nodes",
     "nodes (delete_edges ?G ?E) = nodes ?G",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("FiniteGraph.fully_connected_wf",
     "wf_graph ?G ==> wf_graph (fully_connected ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FiniteGraph.backflows_finite", "finite ?E ==> finite (backflows ?E)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("FiniteGraph.delete_edges_list_set",
     "delete_edges_list ?G ?E = delete_edges ?G (set ?E)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("FiniteGraph.delete_edges_wf",
     "wf_graph ?G ==> wf_graph (delete_edges ?G ?E)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FiniteGraph.delete_edges_list_wf",
     "wf_graph ?G ==> wf_graph (delete_edges_list ?G ?E)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FiniteGraph.delete_node_wf",
     "wf_graph ?G ==> wf_graph (delete_node ?v ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FiniteGraph.succ_tran_finite",
     "wf_graph ?G ==> finite (succ_tran ?G ?v)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FiniteGraph.add_node_wf", "wf_graph ?g ==> wf_graph (add_node ?v ?g)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FiniteGraph.backflows_subseteq",
     "(?X <= ?Y) = (backflows ?X <= backflows ?Y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FiniteGraph.delete_edges_edges_empty",
     "delete_edges ?G (edges ?G) = ?G(| edges := {} |)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("FiniteGraph.add_edge_wf",
     "wf_graph ?G ==> wf_graph (add_edge ?v ?v' ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("FiniteGraph.delete_edge_wf",
     "wf_graph ?G ==> wf_graph (delete_edge ?v ?v' ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("FiniteGraph.succ_finite", "finite (edges ?G) ==> finite (succ ?G ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FiniteGraph.backflows_inter",
     "backflows (?A Int ?B) = backflows ?A Int backflows ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("FiniteGraph.backflows_un",
     "backflows (?A Un ?B) = backflows ?A Un backflows ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("FiniteGraph.backflows_minus_backflows",
     "backflows (?X - backflows ?Y) = backflows ?X - ?Y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("FiniteGraph.succ_tran_subseteq_nodes",
     "wf_graph ?G ==> succ_tran ?G ?v <= nodes ?G",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("FiniteGraph.backflows_alt_fstsnd",
     "backflows ?E = (%e. (snd e, fst e)) ` ?E",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("FiniteGraph.delete_edges_simp2",
     "delete_edges ?G ?E = (| nodes = nodes ?G, edges = edges ?G - ?E |)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_hole 0))),
    ("FiniteGraph.num_succtran_zero",
     "succ_tran ?G ?v = {} ==> num_reachable ?G ?v = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("FiniteGraph.undirected_backflows",
     "undirected ?G =
      (| nodes = nodes ?G, edges = edges ?G Un backflows (edges ?G) |)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)))),
         template_hole 0))),
    ("FiniteGraph.delete_edges_list_union",
     "delete_edges_list ?G (?ff @ ?keeps) =
      delete_edges ?G (set ?ff Un set ?keeps)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("FiniteGraph.backflows_wf",
     "wf_graph (| nodes = ?N, edges = ?E |) ==>
      wf_graph (| nodes = ?N, edges = backflows ?E |)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 0, template_var 0)),
               template_hole 1))
           ))),
    ("FiniteGraph.wf_graph_finite_filterV",
     "wf_graph ?G ==> finite {n: nodes ?G. ?P n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("FiniteGraph.delete_edges_edges_mono",
     "?E' <= ?E ==>
      edges (delete_edges ?G ?E) <= edges (delete_edges ?G ?E')",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("FiniteGraph.wf_graph_remove_edges",
     "wf_graph (| nodes = ?V, edges = ?E |) ==>
      wf_graph (| nodes = ?V, edges = ?E - ?X |)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 1))
           ))),
    ("FiniteGraph.wf_graph_remove_edges_union",
     "wf_graph (| nodes = ?V, edges = ?E Un ?E' |) ==>
      wf_graph (| nodes = ?V, edges = ?E |)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0)),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_hole 0))
           ))),
    ("FiniteGraph.num_reachable_zero_iff",
     "wf_graph ?G ==> (num_reachable ?G ?v = 0) = (succ_tran ?G ?v = {})",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0),
           template_hole 3),
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)))),
    ("FiniteGraph.num_reachable_zero",
     "[| wf_graph ?G; num_reachable ?G ?v = 0 |] ==> succ_tran ?G ?v = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("FiniteGraph.graph_eq_intro",
     "[| nodes ?G = nodes ?G'; edges ?G = edges ?G' |] ==> ?G = ?G'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("FiniteGraph.succ_tran_empty",
     "[| wf_graph ?G; ?v ~: fst ` edges ?G |] ==> succ_tran ?G ?v = {}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("FiniteGraph.wf_graph_finite_filterE",
     "wf_graph ?G ==> finite {(e1, e2). (e1, e2) : edges ?G & ?P e1 e2}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5, template_app (template_hole 4, t_empty)))
           ))),
    ("FiniteGraph.wf_graph_add_subset_edges",
     "[| wf_graph (| nodes = ?V, edges = ?E |); ?E' <= ?E |]
      ==> wf_graph (| nodes = ?V, edges = ?E Un ?E' |)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_hole 2))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 2))
           ))),
    ("FiniteGraph.add_edge_delete_edges_list",
     "add_edge (fst ?a) (snd ?a) (delete_edges_list ?G (?a # ?ff)) =
      add_edge (fst ?a) (snd ?a) (delete_edges ?G (set ?ff))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("FiniteGraph.add_delete_edge",
     "[| wf_graph ?G; (?a, ?b) : edges ?G |]
      ==> add_edge ?a ?b (delete_edge ?a ?b ?G) = ?G",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_var 2))),
    ("FiniteGraph.wf_graph_union_edges",
     "[| wf_graph (| nodes = ?V, edges = ?E |);
         wf_graph (| nodes = ?V, edges = ?E' |) |]
      ==> wf_graph (| nodes = ?V, edges = ?E Un ?E' |)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 1))
           ))),
    ("FiniteGraph.graph_ops",
     "add_edge ?v ?v' ?G =
      (| nodes = nodes ?G Un {?v, ?v'}, edges = {(?v, ?v')} Un edges ?G |)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0)),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 6)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_hole 2)),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("FiniteGraph.num_reachable_mono",
     "[| wf_graph (| nodes = ?N, edges = ?E |); ?E' <= ?E |]
      ==> num_reachable (| nodes = ?N, edges = ?E' |) ?v
          <= num_reachable (| nodes = ?N, edges = ?E |) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_hole 3))
            ),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1),
               template_hole 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_hole 3)),
           template_var 0)))),
    ("FiniteGraph.num_reachable_norefl_mono",
     "[| wf_graph (| nodes = ?N, edges = ?E |); ?E' <= ?E |]
      ==> num_reachable_norefl (| nodes = ?N, edges = ?E' |) ?v
          <= num_reachable_norefl (| nodes = ?N, edges = ?E |) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_hole 3))
            ),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1),
               template_hole 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_hole 3)),
           template_var 0)))),
    ("FiniteGraph.succ_tran_mono",
     "[| wf_graph (| nodes = ?N, edges = ?E |); ?E' <= ?E |]
      ==> succ_tran (| nodes = ?N, edges = ?E' |) ?v
          <= succ_tran (| nodes = ?N, edges = ?E |) ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_hole 3))
            ),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1),
               template_hole 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_hole 3)),
           template_var 0)))),
    ("FiniteGraph.add_delete_edges",
     "[| wf_graph ?G; (?a, ?b) : edges ?G; (?a, ?b) ~: ?fs |]
      ==> add_edge ?a ?b (delete_edges ?G (insert (?a, ?b) ?fs)) =
          delete_edges ?G ?fs",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_app (template_hole 5, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 2),
                      template_var 1)),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0))))]
