Loading theory "Draft.List_Theorems" (required by "Draft.CISKMoreTemplates" via "Draft.CISK" via "Draft.ISK" via "Draft.SK" via "Draft.K")
Loading theory "Draft.Option_Binders" (required by "Draft.CISKMoreTemplates" via "Draft.CISK" via "Draft.ISK" via "Draft.SK" via "Draft.K")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Option_Binders"
### 0.059s elapsed time, 0.265s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
### theory "Draft.List_Theorems"
### 0.085s elapsed time, 0.364s cpu time, 0.000s GC time
Loading theory "Draft.K" (required by "Draft.CISKMoreTemplates" via "Draft.CISK" via "Draft.ISK" via "Draft.SK")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.122s elapsed time, 0.498s cpu time, 0.037s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
locale Kernel
  fixes kstep :: "'state_t => 'action_t => 'state_t"
    and output_f :: "'state_t => 'action_t => 'output_t"
    and s0 :: "'state_t"
    and current :: "'state_t => 'dom_t"
    and cswitch :: "nat => 'state_t => 'state_t"
    and interrupt :: "nat => bool"
    and kprecondition :: "'state_t => 'action_t => bool"
    and realistic_execution :: "'action_t list list => bool"
    and
    control ::
      "'state_t
       => 'dom_t
          => 'action_t list list
             => 'action_t option * 'action_t list list * 'state_t"
    and kinvolved :: "'action_t => 'dom_t set"
### theory "HOL-Library.Set_Algebras"
### 0.194s elapsed time, 0.764s cpu time, 0.037s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.324s elapsed time, 1.294s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.K"
### 0.486s elapsed time, 1.919s cpu time, 0.172s GC time
Loading theory "Draft.SK" (required by "Draft.CISKMoreTemplates" via "Draft.CISK" via "Draft.ISK")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale Separation_Kernel
  fixes kstep :: "'state_t => 'action_t => 'state_t"
    and output_f :: "'state_t => 'action_t => 'output_t"
    and s0 :: "'state_t"
    and current :: "'state_t => 'dom_t"
    and cswitch :: "nat => 'state_t => 'state_t"
    and interrupt :: "nat => bool"
    and kprecondition :: "'state_t => 'action_t => bool"
    and realistic_execution :: "'action_t list list => bool"
    and
    control ::
      "'state_t
       => 'dom_t
          => 'action_t list list
             => 'action_t option * 'action_t list list * 'state_t"
    and kinvolved :: "'action_t => 'dom_t set"
    and ifp :: "'dom_t => 'dom_t => bool"
    and vpeq :: "'dom_t => 'state_t => 'state_t => bool"
  assumes
    "Separation_Kernel kstep output_f current cswitch kprecondition control
      kinvolved ifp vpeq"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  remove_gateway_communications ::
    "'dom_t => 'action_t list list => 'action_t list list"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
### theory "Draft.SK"
### 0.670s elapsed time, 2.470s cpu time, 0.696s GC time
Loading theory "Draft.ISK" (required by "Draft.CISKMoreTemplates" via "Draft.CISK")
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.061s elapsed time, 4.028s cpu time, 0.781s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.077s elapsed time, 4.034s cpu time, 0.781s GC time
Found termination order: "size <*mlex*> {}"
locale Interruptible_Separation_Kernel
  fixes kstep :: "'state_t => 'action_t => 'state_t"
    and output_f :: "'state_t => 'action_t => 'output_t"
    and s0 :: "'state_t"
    and current :: "'state_t => 'dom_t"
    and cswitch :: "nat => 'state_t => 'state_t"
    and interrupt :: "nat => bool"
    and kprecondition :: "'state_t => 'action_t => bool"
    and realistic_execution :: "'action_t list list => bool"
    and
    control ::
      "'state_t
       => 'dom_t
          => 'action_t list list
             => 'action_t option * 'action_t list list * 'state_t"
    and kinvolved :: "'action_t => 'dom_t set"
    and ifp :: "'dom_t => 'dom_t => bool"
    and vpeq :: "'dom_t => 'state_t => 'state_t => bool"
    and AS_set :: "'action_t list set"
    and invariant :: "'state_t => bool"
    and AS_precondition :: "'state_t => 'dom_t => 'action_t => bool"
    and aborting :: "'state_t => 'dom_t => 'action_t => bool"
    and waiting :: "'state_t => 'dom_t => 'action_t => bool"
  assumes
    "Interruptible_Separation_Kernel kstep output_f s0 current cswitch
      kprecondition realistic_execution control kinvolved ifp vpeq AS_set
      invariant AS_precondition aborting waiting"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.ISK"
### 0.540s elapsed time, 1.340s cpu time, 0.129s GC time
Loading theory "Draft.CISK" (required by "Draft.CISKMoreTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale Controllable_Interruptible_Separation_Kernel
  fixes kstep :: "'state_t => 'action_t => 'state_t"
    and output_f :: "'state_t => 'action_t => 'output_t"
    and s0 :: "'state_t"
    and current :: "'state_t => 'dom_t"
    and cswitch :: "nat => 'state_t => 'state_t"
    and interrupt :: "nat => bool"
    and kinvolved :: "'action_t => 'dom_t set"
    and ifp :: "'dom_t => 'dom_t => bool"
    and vpeq :: "'dom_t => 'state_t => 'state_t => bool"
    and AS_set :: "'action_t list set"
    and invariant :: "'state_t => bool"
    and AS_precondition :: "'state_t => 'dom_t => 'action_t => bool"
    and aborting :: "'state_t => 'dom_t => 'action_t => bool"
    and waiting :: "'state_t => 'dom_t => 'action_t => bool"
    and set_error_code :: "'state_t => 'action_t => 'state_t"
  assumes
    "Controllable_Interruptible_Separation_Kernel kstep output_f s0 current
      cswitch kinvolved ifp vpeq AS_set invariant AS_precondition aborting
      waiting set_error_code"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.055s elapsed time, 6.500s cpu time, 1.098s GC time
Loading theory "Draft.Templates" (required by "Draft.CISKMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CISKMoreTemplates")
### theory "Draft.CISK"
### 0.611s elapsed time, 1.290s cpu time, 0.161s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.497s elapsed time, 0.760s cpu time, 0.061s GC time
Loading theory "Draft.CISKMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.CISKMoreTemplates"
### 0.308s elapsed time, 0.428s cpu time, 0.045s GC time
val it = (): unit
