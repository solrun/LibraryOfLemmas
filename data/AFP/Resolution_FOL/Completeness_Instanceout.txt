Loading theory "Draft.Tree" (required by "Draft.Completeness_InstanceTemplates" via "Draft.Completeness_Instance" via "Draft.Unification_Theorem" via "Draft.Resolution")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Completeness_InstanceTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Completeness_InstanceTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Completeness_InstanceTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.527s cpu time, 0.055s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Completeness_InstanceTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.214s elapsed time, 0.871s cpu time, 0.055s GC time
Loading theory "Draft.TermsAndLiterals" (required by "Draft.Completeness_InstanceTemplates" via "Draft.Completeness_Instance" via "Draft.Unification_Theorem" via "Draft.Resolution")
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.837s elapsed time, 3.310s cpu time, 0.354s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Completeness_InstanceTemplates" via "Draft.ExtrEqs")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Tree"
### 1.337s elapsed time, 5.103s cpu time, 1.017s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v. hterm_of_fterm (Var v) = undefined
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.027s elapsed time, 3.433s cpu time, 0.930s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
instantiation
  hterm :: countable
### theory "Draft.TermsAndLiterals"
### 1.876s elapsed time, 6.377s cpu time, 1.296s GC time
Loading theory "Draft.Resolution" (required by "Draft.Completeness_InstanceTemplates" via "Draft.Completeness_Instance" via "Draft.Unification_Theorem")
### theory "HOL-Library.Tree"
### 2.066s elapsed time, 6.928s cpu time, 1.296s GC time
Loading theory "Draft.Templates" (required by "Draft.Completeness_InstanceTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.079s elapsed time, 0.212s cpu time, 0.082s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Completeness_InstanceTemplates")
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.554s elapsed time, 1.194s cpu time, 0.148s GC time
Proofs for inductive predicate(s) "mresolution_step"
  Proving monotonicity ...
Proofs for inductive predicate(s) "resolution_step"
  Proving monotonicity ...
"HFun"
  :: "char list => hterm list => hterm"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Resolution"
### 1.047s elapsed time, 1.977s cpu time, 0.321s GC time
Loading theory "Draft.Completeness" (required by "Draft.Completeness_InstanceTemplates" via "Draft.Completeness_Instance")
Loading theory "Draft.Unification_Theorem" (required by "Draft.Completeness_InstanceTemplates" via "Draft.Completeness_Instance")
locale unification
  assumes "unification"
### theory "Draft.Completeness"
### 0.094s elapsed time, 0.186s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Ambiguous input (line 41 of "$AFP/Resolution_FOL/Unification_Theorem.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Resolution.sub"
###       ("_applC" ("_position" iterm_to_fterm) ("_position" t1))
###       ("_position" \<sigma>))
###     ("_applC" ("_position" iterm_to_fterm)
###       ("\<^const>Resolution.composition" ("_position" t1)
###         ("_lambda" ("_position" x)
###           ("_applC" ("_position" fterm_to_iterm)
###             ("_applC" ("_position" \<sigma>) ("_position" x))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Resolution.sub"
###       ("_applC" ("_position" iterm_to_fterm) ("_position" t1))
###       ("_position" \<sigma>))
###     ("_applC" ("_position" iterm_to_fterm)
###       ("\<^const>Term.subst_apply_term" ("_position" t1)
###         ("_lambda" ("_position" x)
###           ("_applC" ("_position" fterm_to_iterm)
###             ("_applC" ("_position" \<sigma>) ("_position" x))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 73 of "$AFP/Resolution_FOL/Unification_Theorem.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Term.subst_apply_term"
###       ("_applC" ("_position" fterm_to_iterm) ("_position" t1))
###       ("_position" \<sigma>))
###     ("_applC" ("_position" fterm_to_iterm)
###       ("\<^const>Resolution.sub" ("_position" t1)
###         ("_applC" ("_position" isub_to_fsub) ("_position" \<sigma>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Resolution.composition"
###       ("_applC" ("_position" fterm_to_iterm) ("_position" t1))
###       ("_position" \<sigma>))
###     ("_applC" ("_position" fterm_to_iterm)
###       ("\<^const>Resolution.sub" ("_position" t1)
###         ("_applC" ("_position" isub_to_fsub) ("_position" \<sigma>))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 102 of "$AFP/Resolution_FOL/Unification_Theorem.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Term.subst_compose" ("_position" \<theta>) ("_position" i))
###     ("_applC" ("_position" fsub_to_isub)
###       ("\<^const>Resolution.composition"
###         ("_applC" ("_position" isub_to_fsub) ("_position" \<theta>))
###         ("_applC" ("_position" isub_to_fsub) ("_position" i))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Term.subst_compose" ("_position" \<theta>) ("_position" i))
###     ("_applC" ("_position" fsub_to_isub)
###       ("\<^const>Term.subst_apply_term"
###         ("_applC" ("_position" isub_to_fsub) ("_position" \<theta>))
###         ("_applC" ("_position" isub_to_fsub) ("_position" i))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Found termination order: "{}"
### Missing patterns in function definition:
### !!v. term_to_literal (fterm.Fun v []) = undefined
### !!v vd vc. term_to_literal (fterm.Fun v (\<epsilon> vd # vc)) = undefined
### !!v vb vd ve. term_to_literal (fterm.Fun v (vb # vd # ve)) = undefined
### (1 more)
Found termination order: "{}"
### theory "Draft.Unification_Theorem"
### 0.784s elapsed time, 1.536s cpu time, 0.884s GC time
Loading theory "Draft.Completeness_Instance" (required by "Draft.Completeness_InstanceTemplates")
[| finite ?C\<^sub>1 & finite ?C\<^sub>2;
   vars\<^sub>l\<^sub>s ?C\<^sub>1 Int vars\<^sub>l\<^sub>s ?C\<^sub>2 = {};
   instance_of\<^sub>l\<^sub>s ?C\<^sub>1' ?C\<^sub>1 &
   instance_of\<^sub>l\<^sub>s ?C\<^sub>2' ?C\<^sub>2;
   applicable ?C\<^sub>1' ?C\<^sub>2' ?L\<^sub>1' ?L\<^sub>2' ?\<sigma> |]
==> EX L\<^sub>1 L\<^sub>2 \<tau>.
       applicable ?C\<^sub>1 ?C\<^sub>2 L\<^sub>1 L\<^sub>2 \<tau> &
       instance_of\<^sub>l\<^sub>s
        (resolution ?C\<^sub>1' ?C\<^sub>2' ?L\<^sub>1' ?L\<^sub>2'
          ?\<sigma>)
        (resolution ?C\<^sub>1 ?C\<^sub>2 L\<^sub>1 L\<^sub>2 \<tau>)
[| finite ?Cs; ALL C:?Cs. finite C;
   ALL F G. ~ eval\<^sub>c\<^sub>s F G ?Cs |]
==> EX Cs'. resolution_deriv ?Cs Cs' & {} : Cs'
[| infinite UNIV; finite ?Cs; ALL C:?Cs. finite C;
   ALL F G. ~ eval\<^sub>c\<^sub>s F G ?Cs |]
==> EX Cs'. resolution_deriv ?Cs Cs' & {} : Cs'
[| finite ?Cs; ALL C:?Cs. finite C;
   ALL F G. ~ eval\<^sub>c\<^sub>s F G ?Cs |]
==> EX Cs'. resolution_deriv ?Cs Cs' & {} : Cs'
### theory "Draft.Completeness_Instance"
### 0.182s elapsed time, 0.190s cpu time, 0.000s GC time
Loading theory "Draft.Completeness_InstanceTemplates"
### theory "Draft.Completeness_InstanceTemplates"
### 0.002s elapsed time, 0.004s cpu time, 0.000s GC time
*** exception THEORY raised (line 246 of "context.ML"):
*** Duplicate theory name
*** {..., HOL.Filter, HOL.Conditionally_Complete_Lattices, HOL.Binomial, Main, Draft.Tree}
*** {..., HOL.Filter, HOL.Conditionally_Complete_Lattices, HOL.Binomial, Main, HOL-Library.Tree}
*** At command "theory" (line 1 of "~/ResearchIdeas/templateAnalysis/Isabelle/GeneratedThys/DebugAFP/Resolution_FOL/Completeness_InstanceTemplates.thy")
Exception- TOPLEVEL_ERROR raised
