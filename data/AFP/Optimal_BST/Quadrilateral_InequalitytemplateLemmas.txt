   [("Quadrilateral_Inequality.Args_min_simps",
     "Args_min_on ?f ?I = {k. is_arg_min_on ?f ?I k}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Quadrilateral_Inequality.ex_is_arg_min_on_if_finite",
     "[| finite ?S; ?S ~= {} |] ==> EX x. is_arg_min_on ?f ?S x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quadrilateral_Inequality.Args_min_simps",
     "is_arg_min_on ?f ?S ?x = (?x : ?S & (ALL y:?S. ?f ?x <= ?f y))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Quadrilateral_Inequality.is_arg_min_on_antimono",
     "[| is_arg_min_on ?f ?S ?x; ?f ?y <= ?f ?x; ?y : ?S |]
      ==> is_arg_min_on ?f ?S ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_var 3, template_var 0),
          template_app (template_var 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)
           )))]
