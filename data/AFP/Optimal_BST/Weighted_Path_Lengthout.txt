Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Weighted_Path_LengthTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Weighted_Path_LengthTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Weighted_Path_LengthTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Templates" (required by "Draft.Weighted_Path_LengthTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.325s cpu time, 0.000s GC time
Loading theory "Draft.Weighted_Path_Length" (required by "Draft.Weighted_Path_LengthTemplates")
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.544s cpu time, 0.044s GC time
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.238s elapsed time, 0.857s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Weighted_Path_LengthTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
locale wpl
  fixes w :: "int => int => nat"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
locale Wpl
  fixes a :: "int => nat"
    and b :: "int => nat"
### theory "Draft.Weighted_Path_Length"
### 0.324s elapsed time, 1.028s cpu time, 0.143s GC time
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.793s elapsed time, 2.163s cpu time, 0.206s GC time
### theory "HOL-Library.BigO"
### 0.695s elapsed time, 1.509s cpu time, 0.248s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Weighted_Path_LengthTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.468s elapsed time, 0.468s cpu time, 0.000s GC time
Loading theory "Draft.Weighted_Path_LengthTemplates"
val templateLemmas =
   [("Weighted_Path_Length.finite_nodes", "finite (nodes ?t)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Weighted_Path_Length.finite_leaves", "finite (leaves ?i ?t)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Weighted_Path_Length.notin_nodes0", "(?k, 0) ~: nodes ?t",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Weighted_Path_Length.fst_nodes", "fst ` nodes ?t = set_tree ?t",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Weighted_Path_Length.inorder_upto_split",
     "inorder \<langle>?l, ?k, ?r\<rangle> = [?i..?j] ==> ?i <= ?k",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 3))),
    ("Weighted_Path_Length.inorder_upto_split",
     "inorder \<langle>?l, ?k, ?r\<rangle> = [?i..?j] ==> ?k <= ?j",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 3, template_var 0))),
    ("Weighted_Path_Length.sum_incr2",
     "sum ?f (incr2 ` ?A) = (SUM xy:?A. ?f (fst xy, snd xy + 1))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app (template_hole 7, t_empty), template_var 0))),
    ("Weighted_Path_Length.inorder_upto_split",
     "inorder \<langle>?l, ?k, ?r\<rangle> = [?i..?j] ==>
      inorder ?l = [?i..?k - 1]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 4, template_var 4),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("Weighted_Path_Length.inorder_upto_split",
     "inorder \<langle>?l, ?k, ?r\<rangle> = [?i..?j] ==>
      inorder ?r = [?k + 1..?j]",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0)),
           template_var 0)))),
    ("Weighted_Path_Length.sum_nodes",
     "inorder ?t = [?i..?j] ==>
      (SUM xy:nodes ?t. ?f (fst xy)) = sum ?f {?i..?j}",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Weighted_Path_Length.fst_leaves",
     "[| inorder ?t = [?i..?j]; ?i <= ?j + 1 |]
      ==> fst ` leaves ?i ?t = {?i..?j + 1}",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 5))))),
    ("Weighted_Path_Length.sum_leaves",
     "[| inorder ?t = [?i..?j]; ?i <= ?j + 1 |]
      ==> (SUM x:leaves ?i ?t. ?f (fst x)) = sum ?f {?i..?j + 1}",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 3),
          template_app
           (template_app (template_hole 9, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 7, template_var 1),
               template_hole 6))))))]:
   (string * thm * template) list
### theory "Draft.Weighted_Path_LengthTemplates"
### 0.302s elapsed time, 0.438s cpu time, 0.074s GC time
val it = (): unit
