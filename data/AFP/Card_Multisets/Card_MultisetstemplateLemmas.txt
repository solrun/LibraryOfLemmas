   [("Card_Multisets.mset_set_set_mset_subseteq",
     "mset_set (set_mset ?M) <=# ?M",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("Card_Multisets.R_eq_finite", "??.Card_Multisets.R ?A ?k = finite ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Card_Multisets.card_set_mset_leq", "card (set_mset ?M) <= size ?M",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Card_Multisets.size_mset_set_eq_card",
     "finite ?A ==> size (mset_set ?A) = card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Card_Multisets.finite_multisets",
     "finite ?A ==> finite {M. set_mset M <= ?A & size M = ?k}",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("Card_Multisets.card_too_small_multisets_covering_set",
     "[| finite ?A; ?k < card ?A |]
      ==> card {M. set_mset M = ?A & size M = ?k} = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_hole 0))),
    ("Card_Multisets.card_multisets",
     "finite ?A ==>
      card {M. set_mset M <= ?A & size M = ?k} =
      card ?A + ?k - 1 choose ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1))],
       template_equation
        (template_app
          (template_hole 10, template_app (template_hole 9, t_empty)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0)),
               template_hole 0)),
           template_var 0)))),
    ("Card_Multisets.card_multisets_covering_set",
     "[| finite ?A; card ?A <= ?k |]
      ==> card {M. set_mset M = ?A & size M = ?k} =
          ?k - 1 choose (?k - card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 10, template_var 1)))))),
    ("Card_Multisets.set_of_multisets_eq",
     "?x ~: ?A ==>
      {M. set_mset M <= insert ?x ?A & size M = Suc ?k} =
      {M. set_mset M <= ?A & size M = Suc ?k} Un
      (%M. M + {#?x#}) ` {M. set_mset M <= insert ?x ?A & size M = ?k}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_var 1)
                )
            )],
       template_equation
        (template_app (template_hole 12, t_empty),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 12, t_empty)),
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 12, t_empty)))))),
    ("Card_Multisets.finite_set_and_nat_induct",
     "[| finite ?A; !!A. finite A ==> ?P A 0; !!k. ?P {} k;
         !!A k x.
            [| finite A; x ~: A; ?P A (Suc k); ?P (insert x A) k |]
            ==> ?P (insert x A) (Suc k) |]
      ==> ?P ?A ?k",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 1, template_var 2), template_var 0)
           )))]
