   [("Mason_Stothers.poly_div_radical_dvd_pderiv",
     "?p div radical ?p dvd pderiv ?p",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 0))
         )),
    ("Mason_Stothers.degree_pderiv_le",
     "degree (pderiv ?p) <= degree ?p - 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Mason_Stothers.pderiv_eq_0", "degree ?p = 0 ==> pderiv ?p = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Mason_Stothers.degree_pderiv_less",
     "pderiv ?p ~= 0 ==> degree (pderiv ?p) < degree ?p",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 0, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Mason_Stothers.prime_power_dvd_pderiv",
     "prime_elem ?p ==> ?p ^ (multiplicity ?p ?f - 1) dvd pderiv ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0)),
                   template_hole 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Mason_Stothers.degree_div",
     "?a dvd ?b ==> degree (?b div ?a) = degree ?b - degree ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("Mason_Stothers.degree_pderiv_mult_less",
     "pderiv ?C ~= 0 ==> degree (pderiv ?C * ?B) < degree ?B + degree ?C",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 5, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("Mason_Stothers.Mason_Stothers_aux",
     "[| ?A ~= 0; ?B ~= 0; ?C ~= 0; ?A + ?B + ?C = 0; Gcd {?A, ?B, ?C} = 1;
         degree (radical (?A * ?B * ?C)) <= degree ?A |]
      ==> pderiv ?A = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_negation
         (template_equation (template_var 0, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1)),
            template_var 0),
          template_hole 10),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 6)))),
          template_hole 5),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app (template_hole 0, template_var 2),
         template_hole 10))),
    ("Mason_Stothers.Mason_Stothers_aux",
     "[| ?A ~= 0; ?B ~= 0; ?C ~= 0; ?A + ?B + ?C = 0; Gcd {?A, ?B, ?C} = 1;
         degree (radical (?A * ?B * ?C)) <= degree ?A |]
      ==> pderiv ?B = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_negation
         (template_equation (template_var 0, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1)),
            template_var 0),
          template_hole 10),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 6)))),
          template_hole 5),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_hole 10))),
    ("Mason_Stothers.Mason_Stothers_aux",
     "[| ?A ~= 0; ?B ~= 0; ?C ~= 0; ?A + ?B + ?C = 0; Gcd {?A, ?B, ?C} = 1;
         degree (radical (?A * ?B * ?C)) <= degree ?A |]
      ==> pderiv ?C = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_negation
         (template_equation (template_var 0, template_hole 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1)),
            template_var 0),
          template_hole 10),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_hole 6)))),
          template_hole 5),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1)),
                template_var 0))),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_hole 10))),
    ("Mason_Stothers.fermat_poly_char_0",
     "[| ?A ^ ?n + ?B ^ ?n + ?C ^ ?n = 0; Gcd {?A, ?B, ?C} = 1; ?A ~= 0;
         ?B ~= 0; ?C ~= 0; EX p:{?A, ?B, ?C}. 0 < degree p |]
      ==> ?n <= 2",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_var 2))),
            template_app
             (template_app (template_hole 14, template_var 0),
              template_var 2)),
          template_hole 13),
        template_equation
         (template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_app
                 (template_app (template_hole 11, template_var 0),
                  template_hole 10)))),
          template_hole 9),
        template_negation
         (template_equation (template_var 3, template_hole 13)),
        template_negation
         (template_equation (template_var 1, template_hole 13)),
        template_negation
         (template_equation (template_var 0, template_hole 13)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_app
                     (template_app (template_hole 11, template_var 0),
                      template_hole 10)))),
              t_empty)
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Mason_Stothers.fermat_poly",
     "[| ?A ^ ?n + ?B ^ ?n + ?C ^ ?n = 0; Gcd {?A, ?B, ?C} = 1; ?A ~= 0;
         ?B ~= 0; ?C ~= 0; EX p:{?A, ?B, ?C}. pderiv (p ^ ?n) ~= 0 |]
      ==> ?n <= 2",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 2))),
            template_app
             (template_app (template_hole 12, template_var 0),
              template_var 2)),
          template_hole 11),
        template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_hole 8)))),
          template_hole 7),
        template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_negation
         (template_equation (template_var 1, template_hole 11)),
        template_negation
         (template_equation (template_var 0, template_hole 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_app
                     (template_app (template_hole 9, template_var 0),
                      template_hole 8)))),
              t_empty)
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Mason_Stothers.Mason_Stothers",
     "[| ?A ~= 0; ?B ~= 0; ?C ~= 0; EX p:{?A, ?B, ?C}. pderiv p ~= 0;
         ?A + ?B + ?C = 0; Gcd {?A, ?B, ?C} = 1 |]
      ==> Max {degree ?A, degree ?B, degree ?C}
          < degree (radical (?A * ?B * ?C))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 14)),
        template_negation
         (template_equation (template_var 1, template_hole 14)),
        template_negation
         (template_equation (template_var 0, template_hole 14)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_app
                     (template_app (template_hole 12, template_var 0),
                      template_hole 11)))),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1)),
            template_var 0),
          template_hole 14),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_app
                 (template_app (template_hole 12, template_var 0),
                  template_hole 11)))),
          template_hole 7)],
       template_inequation
        (less_than,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0)))))),
    ("Mason_Stothers.Mason_Stothers_char_0",
     "[| ?A ~= 0; ?B ~= 0; ?C ~= 0; EX p:{?A, ?B, ?C}. degree p ~= 0;
         ?A + ?B + ?C = 0; Gcd {?A, ?B, ?C} = 1 |]
      ==> Max {degree ?A, degree ?B, degree ?C}
          < degree (radical (?A * ?B * ?C))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 15)),
        template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (template_equation (template_var 0, template_hole 15)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_app
                     (template_app (template_hole 13, template_var 0),
                      template_hole 12)))),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1)),
            template_var 0),
          template_hole 15),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_app
                 (template_app (template_hole 13, template_var 0),
                  template_hole 12)))),
          template_hole 6)],
       template_inequation
        (less_than,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 10, template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 10, template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 10, template_var 0)),
                 template_hole 2)))),
         template_app
          (template_hole 10,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))))))]
