   [("Weak_Late_Cong_Subst.reflexive", "?P \<simeq>\<^sup>s ?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Weak_Late_Cong_Subst.symetric",
     "?P \<simeq>\<^sup>s ?Q ==> ?Q \<simeq>\<^sup>s ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Weak_Late_Cong_Subst.weakCongWeakEq",
     "?P \<simeq>\<^sup>s ?Q ==> ?P \<simeq> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Weak_Late_Cong_Subst.congSubstBisimSubst",
     "?P \<simeq>\<^sup>s ?Q ==> ?P \<approx>\<^sup>s ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Weak_Late_Cong_Subst.strongEqWeakCong",
     "?P \<sim>\<^sup>s ?Q ==> ?P \<simeq>\<^sup>s ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Weak_Late_Cong_Subst.partUnfold",
     "?P \<simeq>\<^sup>s ?Q ==> ?P[<?s>] \<simeq>\<^sup>s ?Q[<?s>]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Weak_Late_Cong_Subst.eqvtI",
     "?P \<simeq>\<^sup>s ?Q ==>
      ?perm \<bullet> ?P \<simeq>\<^sup>s ?perm \<bullet> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Weak_Late_Cong_Subst.unfoldE",
     "?P \<simeq>\<^sup>s ?Q ==> ?P[<?s>] \<leadsto><weakBisim> ?Q[<?s>]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Weak_Late_Cong_Subst.unfoldE",
     "?P \<simeq>\<^sup>s ?Q ==> ?Q[<?s>] \<leadsto><weakBisim> ?P[<?s>]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))
           ))),
    ("Weak_Late_Cong_Subst.transitive",
     "[| ?P \<simeq>\<^sup>s ?Q; ?Q \<simeq>\<^sup>s ?R |]
      ==> ?P \<simeq>\<^sup>s ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Weak_Late_Cong_Subst.unfoldI",
     "ALL s.
         ?P[<s>] \<leadsto><weakBisim> ?Q[<s>] &
         ?Q[<s>] \<leadsto><weakBisim> ?P[<s>] ==>
      ?P \<simeq>\<^sup>s ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
