   [("Strong_Late_Axiomatisation.depthEqvt",
     "depth (?p \<bullet> ?P) = depth ?P",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Strong_Late_Axiomatisation.validEqvt",
     "valid (?p \<bullet> ?P) = valid ?P",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Strong_Late_Axiomatisation.depthSubst",
     "depth (?P[?a::=?b]) = depth ?P",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Strong_Late_Axiomatisation.validInput",
     "valid (?a<?x>.?P) = valid ?P",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Strong_Late_Axiomatisation.validSubst",
     "valid (?P[?a::=?b]) = valid ?P",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Strong_Late_Axiomatisation.depthInput",
     "depth (?a<?x>.?P) = 1 + depth ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Strong_Late_Axiomatisation.eq_eqvt",
     "?pi \<bullet> (?x = ?y) = (?pi \<bullet> ?x = ?pi \<bullet> ?y)",
     template_bimplication
      (template_dunno,
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0))))]
