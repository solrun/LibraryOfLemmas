   [("SeprefUF.per_init_per", "part_equiv (per_init ?D)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SeprefUF.per_init_Domain", "Domain (per_init ?D) = ?D",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("SeprefUF.per_init'_Domain", "Domain (per_init' ?N) = {i. i < ?N}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("SeprefUF.per_init_of_nat_range",
     "per_init {i. i < ?N} = per_init' ?N",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("SeprefUF.per_init_self", "(?a, ?b) : per_init ?D ==> ?a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 2, template_var 1))),
    ("SeprefUF.per_supset_rel_dom",
     "(?p1.0, ?p2.0) : per_supset_rel ==> Domain ?p2.0 <= Domain ?p1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SeprefUF.per_union_impl",
     "(?i, ?j) : ?R ==> (?i, ?j) : per_union ?R ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("SeprefUF.part_equiv_refl'",
     "[| part_equiv ?R; ?x : Domain ?R |] ==> (?x, ?x) : ?R",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 0)),
             template_var 1)
           ))),
    ("SeprefUF.per_union_related",
     "[| part_equiv ?R; ?a : Domain ?R; ?b : Domain ?R |]
      ==> (?a, ?b) : per_union ?R ?a ?b",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("SeprefUF.per_supset_compare",
     "[| (?p1.0, ?p2.0) : per_supset_rel; ?x1.0 : Domain ?p2.0;
         ?x2.0 : Domain ?p2.0 |]
      ==> per_compare ?p1.0 ?x1.0 ?x2.0 = per_compare ?p2.0 ?x1.0 ?x2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SeprefUF.per_supset_union",
     "[| (?p1.0, ?p2.0) : per_supset_rel; ?x1.0 : Domain ?p2.0;
         ?x2.0 : Domain ?p2.0 |]
      ==> (per_union ?p1.0 ?x1.0 ?x2.0, per_union ?p2.0 ?x1.0 ?x2.0)
          : per_supset_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_hole 3)
           )))]
