   [("Graph_Definition.nodes_delete_edge",
     "nodes (delete_edge ?v ?e ?v' ?G) = nodes ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Graph_Definition.minimum_spanning_forest_impl_tree2",
     "[| minimum_spanning_forest ?F ?G; connected_graph ?G |]
      ==> minimum_spanning_tree ?F ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Graph_Definition.subgraph_node",
     "subgraph ?H ?G ==> (?v : nodes ?G) = (?v : nodes ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Graph_Definition.minimum_spanning_forest_impl_tree",
     "[| minimum_spanning_forest ?F ?G; valid_graph ?G;
         connected_graph ?F |]
      ==> minimum_spanning_tree ?F ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Graph_Definition.edges_delete_edge",
     "edges (delete_edge ?v ?e ?v' ?G) = edges ?G - {(?v, ?e, ?v')}",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_hole 0)))),
    ("Graph_Definition.swap_delete_edges",
     "delete_edge ?a ?b ?c (delete_edge ?x ?y ?z ?H) =
      delete_edge ?x ?y ?z (delete_edge ?a ?b ?c ?H)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5),
             template_var 4),
           template_var 0)))),
    ("Graph_Definition.swap_delete_add_edge",
     "(?a, ?b, ?c) ~= (?x, ?y, ?z) ==>
      delete_edge ?a ?b ?c (add_edge ?x ?y ?z ?H) =
      add_edge ?x ?y ?z (delete_edge ?a ?b ?c ?H)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 6),
               template_var 5),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 0))))),
    ("Graph_Definition.delete_add_edge",
     "[| ?a : nodes ?H; ?c : nodes ?H; (?a, ?w, ?c) ~: edges ?H |]
      ==> delete_edge ?a ?w ?c (add_edge ?a ?w ?c ?H) = ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app
                       (template_app (template_hole 4, template_var 0),
                        template_var 1))),
                  template_app (template_hole 3, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1),
             template_var 2)),
         template_var 2)))]
