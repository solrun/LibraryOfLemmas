Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.Cancellation" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.FuncSet" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations" via "HOL-Library.Disjoint_Sets")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Combinatorics.Transposition"
### 0.145s elapsed time, 0.590s cpu time, 0.056s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
### theory "HOL-Library.Function_Algebras"
### 0.158s elapsed time, 0.642s cpu time, 0.056s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Library.FuncSet"
### 0.583s elapsed time, 2.092s cpu time, 0.464s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Infinite_Set"
### 0.467s elapsed time, 1.599s cpu time, 0.467s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.794s elapsed time, 2.927s cpu time, 0.523s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Nat_Bijection"
### 0.675s elapsed time, 2.420s cpu time, 0.559s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Disjoint_Sets"
### 0.362s elapsed time, 1.429s cpu time, 0.093s GC time
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type" via "HOL-Library.Cardinality")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.644s elapsed time, 2.538s cpu time, 0.223s GC time
Loading theory "HOL-Library.Product_Plus" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space" via "HOL-Analysis.Product_Vector")
instantiation
  prod :: (zero, zero) zero
  zero_prod == zero_class.zero :: 'a * 'b
instantiation
  prod :: (plus, plus) plus
  plus_prod == plus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (minus, minus) minus
  minus_prod == minus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  prod :: (uminus, uminus) uminus
  uminus_prod == uminus :: 'a * 'b => 'a * 'b
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "HOL-Library.Product_Plus"
### 0.168s elapsed time, 0.652s cpu time, 0.104s GC time
Loading theory "HOL-Library.Product_Order" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Borel_Space" via "HOL-Analysis.Ordered_Euclidean_Space")
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
instantiation
  prod :: (inf, inf) inf
  inf_prod == inf :: 'a * 'b => 'a * 'b => 'a * 'b
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
instantiation
  prod :: (sup, sup) sup
  sup_prod == sup :: 'a * 'b => 'a * 'b => 'a * 'b
consts
  sdrop :: "nat => 'a stream => 'a stream"
instantiation
  prod :: (top, top) top
  top_prod == top :: 'a * 'b
instantiation
  prod :: (bot, bot) bot
  bot_prod == bot :: 'a * 'b
instantiation
  prod :: (Inf, Inf) Inf
  Inf_prod == Inf :: ('a * 'b) set => 'a * 'b
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
instantiation
  prod :: (Sup, Sup) Sup
  Sup_prod == Sup :: ('a * 'b) set => 'a * 'b
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.Product_Order"
### 0.323s elapsed time, 1.274s cpu time, 0.179s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
consts
  flat :: "'a list stream => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "HOL-Library.Phantom_Type"
### 0.869s elapsed time, 3.417s cpu time, 0.413s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Numeral_Type")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.112s elapsed time, 4.376s cpu time, 0.515s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### Additional type variable(s) in locale specification "CARD_1": 'a
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
### theory "HOL-Library.Set_Algebras"
### 0.293s elapsed time, 1.160s cpu time, 0.102s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product" via "HOL-Library.Countable_Set")
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
### Additional type variable(s) in locale specification "card2": 'a
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
### Additional type variable(s) in locale specification "countable": 'a
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
consts
  mset :: "'a list => 'a multiset"
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
consts
  left :: "'a tree => 'a tree"
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
consts
  right :: "'a tree => 'a tree"
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Cardinality"
### 1.146s elapsed time, 4.342s cpu time, 1.066s GC time
Loading theory "HOL-Library.Numeral_Type" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
instantiation
  num1 :: CARD_1
instantiation
  num1 :: {comm_monoid_mult,numeral,comm_ring}
  uminus_num1 == uminus :: num1 => num1
  zero_num1 == zero_class.zero :: num1
  minus_num1 == minus :: num1 => num1 => num1
  plus_num1 == plus :: num1 => num1 => num1
  one_num1 == one_class.one :: num1
  times_num1 == times :: num1 => num1 => num1
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
instantiation
  num1 :: linorder
  less_eq_num1 == less_eq :: num1 => num1 => bool
  less_num1 == less :: num1 => num1 => bool
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
locale mod_type
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_type n Rep Abs"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
locale mod_ring
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_ring n Rep Abs"
instantiation
  bit0 :: (finite) {minus,one,plus,times,uminus,zero}
  bit1 :: (finite) {minus,one,plus,times,uminus,zero}
  zero_bit0 == zero_class.zero :: 'a bit0
  uminus_bit0 == uminus :: 'a bit0 => 'a bit0
  times_bit0 == times :: 'a bit0 => 'a bit0 => 'a bit0
  plus_bit0 == plus :: 'a bit0 => 'a bit0 => 'a bit0
  one_bit0 == one_class.one :: 'a bit0
  minus_bit0 == minus :: 'a bit0 => 'a bit0 => 'a bit0
  zero_bit1 == zero_class.zero :: 'a bit1
  uminus_bit1 == uminus :: 'a bit1 => 'a bit1
  times_bit1 == times :: 'a bit1 => 'a bit1 => 'a bit1
  plus_bit1 == plus :: 'a bit1 => 'a bit1 => 'a bit1
  one_bit1 == one_class.one :: 'a bit1
  minus_bit1 == minus :: 'a bit1 => 'a bit1 => 'a bit1
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
Found termination order: "size <*mlex*> {}"
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
instantiation
  bit0 :: (finite) linorder
  bit1 :: (finite) linorder
  less_eq_bit0 == less_eq :: 'a bit0 => 'a bit0 => bool
  less_bit0 == less :: 'a bit0 => 'a bit0 => bool
  less_eq_bit1 == less_eq :: 'a bit1 => 'a bit1 => bool
  less_bit1 == less :: 'a bit1 => 'a bit1 => bool
instantiation
  num0 :: equal
  equal_num0 == equal_class.equal :: num0 => num0 => bool
Found termination order: "size <*mlex*> {}"
instantiation
  num1 :: equal
  equal_num1 == equal_class.equal :: num1 => num1 => bool
instantiation
  num1 :: enum
  enum_num1 == enum_class.enum :: num1 list
  enum_all_num1 == enum_class.enum_all :: (num1 => bool) => bool
  enum_ex_num1 == enum_class.enum_ex :: (num1 => bool) => bool
### theory "HOL-Library.Countable"
### 1.936s elapsed time, 7.195s cpu time, 2.374s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space" via "HOL-Analysis.Finite_Cartesian_Product")
instantiation
  num0 :: card_UNIV
  num1 :: card_UNIV
  card_UNIV_num0 == card_UNIV_class.card_UNIV :: (num0, nat) phantom
  finite_UNIV_num0 == finite_UNIV :: (num0, bool) phantom
  card_UNIV_num1 == card_UNIV_class.card_UNIV :: (num1, nat) phantom
  finite_UNIV_num1 == finite_UNIV :: (num1, bool) phantom
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) equal
  bit1 :: (finite) equal
  equal_bit0 == equal_class.equal :: 'a bit0 => 'a bit0 => bool
  equal_bit1 == equal_class.equal :: 'a bit1 => 'a bit1 => bool
instantiation
  bit0 :: (finite) enum
  enum_bit0 == enum_class.enum :: 'a bit0 list
  enum_all_bit0 == enum_class.enum_all :: ('a bit0 => bool) => bool
  enum_ex_bit0 == enum_class.enum_ex :: ('a bit0 => bool) => bool
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
Found termination order: "size <*mlex*> {}"
instantiation
  bit1 :: (finite) enum
  enum_bit1 == enum_class.enum :: 'a bit1 list
  enum_all_bit1 == enum_class.enum_all :: ('a bit1 => bool) => bool
  enum_ex_bit1 == enum_class.enum_ex :: ('a bit1 => bool) => bool
instantiation
  bit0 :: (finite) finite_UNIV
  bit1 :: (finite) finite_UNIV
  finite_UNIV_bit0 == finite_UNIV :: ('a bit0, bool) phantom
  finite_UNIV_bit1 == finite_UNIV :: ('a bit1, bool) phantom
instantiation
  bit0 :: ({card_UNIV,finite}) card_UNIV
  bit1 :: ({card_UNIV,finite}) card_UNIV
  card_UNIV_bit0 == card_UNIV_class.card_UNIV :: ('a bit0, nat) phantom
  card_UNIV_bit1 == card_UNIV_class.card_UNIV :: ('a bit1, nat) phantom
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Numeral_Type"
### 1.331s elapsed time, 4.970s cpu time, 1.568s GC time
Loading theory "HOL-Analysis.Metric_Arith" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Elementary_Normed_Spaces" via "HOL-Analysis.Elementary_Metric_Spaces")
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Set"
### 0.553s elapsed time, 2.185s cpu time, 0.202s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.979s elapsed time, 11.299s cpu time, 2.749s GC time
Loading theory "Draft.Templates" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.272s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Idioms" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2" via "HOL-Analysis.Elementary_Topology")
signature METRIC_ARITH =
  sig
    val argo_timeout: real Config.T
    val metric_arith_tac: Proof.context -> int -> tactic
    val trace: bool Config.T
  end
structure Metric_Arith: METRIC_ARITH
### theory "HOL-Analysis.Metric_Arith"
### 0.697s elapsed time, 2.753s cpu time, 0.217s GC time
Loading theory "HOL-Analysis.Continuum_Not_Denumerable" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Homeomorphism" via "HOL-Analysis.Homotopy")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
### theory "HOL-Library.Set_Idioms"
### 0.228s elapsed time, 0.901s cpu time, 0.055s GC time
Loading theory "HOL-Analysis.Abstract_Topology" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
### theory "HOL-Analysis.Continuum_Not_Denumerable"
### 0.325s elapsed time, 1.261s cpu time, 0.180s GC time
Loading theory "HOL-Analysis.Inner_Product" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 5.059s elapsed time, 19.470s cpu time, 3.707s GC time
Loading theory "HOL-Computational_Algebra.Factorial_Ring" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Arcwise_Connected" via "HOL-Computational_Algebra.Primes" via "HOL-Computational_Algebra.Euclidean_Algorithm")
class real_inner = dist_norm + real_vector + sgn_div_norm +
  uniformity_dist + open_uniformity +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. inner x y = inner y x"
    and "inner_add_left": "!!x y z. inner (x + y) z = inner x z + inner y z"
    and
    "inner_scaleR_left": "!!r x y. inner (r *\<^sub>R x) y = r * inner x y"
    and "inner_ge_zero": "!!x. 0 <= inner x x"
    and "inner_eq_zero_iff": "!!x. (inner x x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (inner x x)"
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
instantiation
  real :: real_inner
  inner_real == inner :: real => real => real
instantiation
  complex :: real_inner
  inner_complex == inner :: complex => complex => real
bundle inner_syntax
bundle no_inner_syntax
### theory "HOL-Analysis.Inner_Product"
### 1.435s elapsed time, 5.774s cpu time, 0.656s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants")
class normalization_semidom = algebraic_semidom +
  semidom_divide_unit_factor +
  fixes normalize :: "'a => 'a"
  assumes
    "unit_factor_mult_normalize": "!!a. unit_factor a * normalize a = a"
    and "normalize_0": "normalize (0::'a) = (0::'a)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 2.582s elapsed time, 10.265s cpu time, 1.126s GC time
Loading theory "HOL-Analysis.L2_Norm" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
### theory "HOL-Analysis.L2_Norm"
### 0.154s elapsed time, 0.596s cpu time, 0.066s GC time
Loading theory "HOL-Analysis.Operator_Norm" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
### theory "HOL-Analysis.Operator_Norm"
### 0.206s elapsed time, 0.787s cpu time, 0.190s GC time
Loading theory "HOL-Analysis.Poly_Roots" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Analysis.Poly_Roots"
### 0.185s elapsed time, 0.724s cpu time, 0.105s GC time
Loading theory "HOL-Analysis.Product_Vector" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra" via "HOL-Analysis.Euclidean_Space")
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 1.113s elapsed time, 4.327s cpu time, 0.698s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.HyperdualMoreTemplates" via "Draft.ExtrEqs")
Proofs for inductive predicate(s) "generate_topology_on"
  Proving monotonicity ...
locale module_prod
  fixes s1 :: "'a => 'b => 'b"
    and s2 :: "'a => 'c => 'c"
  assumes "module_prod s1 s2"
locale vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
  assumes "vector_space_prod (*a) (*b)"
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Abstract_Topology"
### 2.980s elapsed time, 11.795s cpu time, 1.542s GC time
Loading theory "HOL-Analysis.Abstract_Limits" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
instantiation
  prod :: (real_vector, real_vector) real_vector
  scaleR_prod == scaleR :: real => 'a * 'b => 'a * 'b
### Cannot skip proof of schematic goal statement
instantiation
  prod :: (metric_space, metric_space) dist
  dist_prod == dist :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (uniformity, uniformity) uniformity
  uniformity_prod == uniformity :: (('a * 'b) * 'a * 'b) filter
instantiation
  prod :: (uniform_space, uniform_space) uniform_space
instantiation
  prod :: (metric_space, metric_space) uniformity_dist
instantiation
  prod :: (metric_space, metric_space) metric_space
instantiation
  prod :: (real_normed_vector, real_normed_vector) real_normed_vector
  sgn_prod == sgn :: 'a * 'b => 'a * 'b
  norm_prod == norm :: 'a * 'b => real
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
### theory "HOL-Analysis.Abstract_Limits"
### 0.275s elapsed time, 1.074s cpu time, 0.179s GC time
Loading theory "HOL-Library.Complex_Order" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Infinite_Sum")
instantiation
  complex :: order
  less_eq_complex == less_eq :: complex => complex => bool
  less_complex == less :: complex => complex => bool
### theory "HOL-Library.Complex_Order"
### 0.111s elapsed time, 0.438s cpu time, 0.055s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
locale finite_dimensional_vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and B1 :: "'b set"
    and B2 :: "'c set"
  assumes "finite_dimensional_vector_space_prod (*a) (*b) B1 B2"
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
### theory "HOL-Analysis.Product_Vector"
### 1.112s elapsed time, 4.351s cpu time, 0.575s GC time
Loading theory "HOL-Analysis.Elementary_Topology" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Library.Discrete"
### 0.217s elapsed time, 0.843s cpu time, 0.134s GC time
Loading theory "HOL-Analysis.Euclidean_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine" via "HOL-Analysis.Linear_Algebra")
### theory "HOL-Library.BigO"
### 1.101s elapsed time, 4.287s cpu time, 0.623s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.HyperdualMoreTemplates")
class topological_space = open +
  assumes "open_UNIV": "open UNIV"
  assumes "open_Int": "!!S T. [| open S; open T |] ==> open (S Int T)"
  assumes "open_Union": "!!K. Ball K open ==> open (\<Union> K)"
locale countable_basis
  fixes p :: "'a set => bool"
    and B :: "'a set set"
  assumes "countable_basis p B"
class euclidean_space = real_inner +
  fixes Basis :: "'a set"
  assumes "nonempty_Basis": "Basis ~= {}"
  assumes "finite_Basis": "finite Basis"
  assumes
    "inner_Basis":
      "!!u v.
          [| u : Basis; v : Basis |]
          ==> inner u v = (if u = v then 1 else 0)"
  assumes
    "euclidean_all_zero_iff":
      "!!x. (ALL u:Basis. inner x u = 0) = (x = (0::'a))"
class second_countable_topology = topological_space +
  assumes
    "ex_countable_subbasis":
      "EX B. countable B & open = generate_topology B"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 1.003s elapsed time, 3.920s cpu time, 0.516s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected" via "HOL-Analysis.Abstract_Topology_2")
### theory "HOL-Library.Indicator_Function"
### 0.445s elapsed time, 1.722s cpu time, 0.217s GC time
Loading theory "HOL-Library.Liminf_Limsup" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
instantiation
  real :: euclidean_space
  Basis_real == Basis :: real set
instantiation
  complex :: euclidean_space
  Basis_complex == Basis :: complex set
instantiation
  prod :: (real_inner, real_inner) real_inner
  inner_prod == inner :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (euclidean_space, euclidean_space) euclidean_space
  Basis_prod == Basis :: ('a * 'b) set
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Euclidean_Space"
### 1.939s elapsed time, 7.528s cpu time, 1.038s GC time
Loading theory "HOL-Analysis.Finite_Cartesian_Product" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants" via "HOL-Analysis.Cartesian_Space")
class factorial_semiring_gcd = factorial_semiring + Gcd +
  assumes "gcd_eq_gcd_factorial": "!!a b. gcd a b = gcd_factorial a b"
    and "lcm_eq_lcm_factorial": "!!a b. lcm a b = lcm_factorial a b"
    and "Gcd_eq_Gcd_factorial": "!!A. Gcd A = Gcd_factorial A"
    and "Lcm_eq_Lcm_factorial": "!!A. Lcm A = Lcm_factorial A"
### theory "HOL-Library.Liminf_Limsup"
### 0.602s elapsed time, 2.312s cpu time, 0.424s GC time
Loading theory "HOL-Analysis.Linear_Algebra" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex" via "HOL-Analysis.Affine")
### theory "HOL-Analysis.Elementary_Topology"
### 2.709s elapsed time, 10.481s cpu time, 1.521s GC time
Loading theory "HOL-Analysis.Abstract_Topology_2" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Connected")
class real_inner = real_normed_vector +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. x \<bullet> y = y \<bullet> x"
    and
    "inner_add_left":
      "!!x y z. (x + y) \<bullet> z = x \<bullet> z + y \<bullet> z"
    and
    "inner_scaleR_left":
      "!!r x y. r *\<^sub>R x \<bullet> y = r * (x \<bullet> y)"
    and "inner_ge_zero": "!!x. 0 <= x \<bullet> x"
    and "inner_eq_zero_iff": "!!x. (x \<bullet> x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (x \<bullet> x)"
bundle vec_syntax
bundle no_vec_syntax
instantiation
  vec :: (zero, finite) zero
  zero_vec == zero_class.zero :: ('a, 'b) vec
instantiation
  vec :: (plus, finite) plus
  plus_vec == plus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (minus, finite) minus
  minus_vec == minus :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (uminus, finite) uminus
  uminus_vec == uminus :: ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (times, finite) times
  times_vec == times :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (one, finite) one
  one_vec == one_class.one :: ('a, 'b) vec
instantiation
  vec :: (ord, finite) ord
  less_eq_vec == less_eq :: ('a, 'b) vec => ('a, 'b) vec => bool
  less_vec == less :: ('a, 'b) vec => ('a, 'b) vec => bool
instantiation
  vec :: (real_vector, finite) real_vector
  scaleR_vec == scaleR :: real => ('a, 'b) vec => ('a, 'b) vec
instantiation
  vec :: (topological_space, finite) topological_space
  open_vec == open :: ('a, 'b) vec set => bool
instantiation
  vec :: (metric_space, finite) dist
  dist_vec == dist :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (metric_space, finite) uniformity_dist
  uniformity_vec == uniformity :: (('a, 'b) vec * ('a, 'b) vec) filter
instantiation
  vec :: (metric_space, finite) metric_space
instantiation
  vec :: (real_normed_vector, finite) real_normed_vector
  sgn_vec == sgn :: ('a, 'b) vec => ('a, 'b) vec
  norm_vec == norm :: ('a, 'b) vec => real
instantiation
  vec :: (real_inner, finite) real_inner
  inner_vec == inner :: ('a, 'b) vec => ('a, 'b) vec => real
instantiation
  vec :: (euclidean_space, finite) euclidean_space
  Basis_vec == Basis :: ('a, 'b) vec set
### theory "HOL-Analysis.Linear_Algebra"
### 1.963s elapsed time, 7.417s cpu time, 3.446s GC time
Loading theory "HOL-Analysis.Affine" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex")
### theory "HOL-Analysis.Finite_Cartesian_Product"
### 2.689s elapsed time, 10.229s cpu time, 3.901s GC time
Loading theory "HOL-Analysis.Cartesian_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Determinants")
### theory "HOL-Analysis.Affine"
### 0.589s elapsed time, 2.264s cpu time, 0.337s GC time
Loading theory "HOL-Analysis.Convex" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Abstract_Topology_2"
### 2.492s elapsed time, 9.470s cpu time, 3.728s GC time
Loading theory "HOL-Analysis.Connected" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Connected"
### 1.366s elapsed time, 5.093s cpu time, 3.382s GC time
Loading theory "HOL-Analysis.Function_Topology" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
### theory "HOL-Analysis.Convex"
### 1.957s elapsed time, 7.360s cpu time, 3.677s GC time
Loading theory "HOL-Analysis.Elementary_Metric_Spaces" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Elementary_Normed_Spaces")
locale linear_first_finite_dimensional_vector_space
  fixes scaleB :: "'a => 'b => 'b"  (infixr \<open>*b\<close> 75)
    and scaleC :: "'a => 'c => 'c"  (infixr \<open>*c\<close> 75)
    and BasisB :: "'b set"
    and f :: "'b => 'c"
  assumes "linear_first_finite_dimensional_vector_space (*b) (*c) BasisB f"
instantiation
  fun :: (type, topological_space) topological_space
  open_fun == open :: ('a => 'b) set => bool
### theory "HOL-Analysis.Cartesian_Space"
### 2.725s elapsed time, 10.338s cpu time, 4.095s GC time
Loading theory "HOL-Analysis.Determinants" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Function_Topology"
### 0.993s elapsed time, 3.839s cpu time, 0.643s GC time
Loading theory "HOL-Analysis.Product_Topology" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected" via "HOL-Analysis.T1_Spaces")
### theory "HOL-Computational_Algebra.Factorial_Ring"
### 10.799s elapsed time, 41.595s cpu time, 11.131s GC time
Loading theory "HOL-Computational_Algebra.Euclidean_Algorithm" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Arcwise_Connected" via "HOL-Computational_Algebra.Primes")
### theory "HOL-Analysis.Product_Topology"
### 0.331s elapsed time, 1.270s cpu time, 0.202s GC time
Loading theory "HOL-Analysis.T1_Spaces" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected")
class heine_borel = metric_space +
  assumes
    "bounded_imp_convergent_subsequence":
      "!!f. bounded (range f) ==>
            EX l r. strict_mono r & (f o r) \<longlonglongrightarrow> l"
### theory "HOL-Analysis.T1_Spaces"
### 0.357s elapsed time, 1.351s cpu time, 0.253s GC time
Loading theory "HOL-Analysis.Lindelof_Spaces" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Lindelof_Spaces"
### 0.119s elapsed time, 0.461s cpu time, 0.064s GC time
Loading theory "HOL-Library.Nonpos_Ints" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental" via "HOL-Analysis.Complex_Analysis_Basics")
### theory "HOL-Analysis.Determinants"
### 1.223s elapsed time, 4.654s cpu time, 0.892s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Nonpos_Ints"
### 0.202s elapsed time, 0.752s cpu time, 0.142s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Periodic_Fun"
### 0.226s elapsed time, 0.845s cpu time, 0.099s GC time
Loading theory "HOL-Library.Sum_of_Squares" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Norm_Arith")
### theory "HOL-Analysis.Elementary_Metric_Spaces"
### 2.449s elapsed time, 9.262s cpu time, 1.621s GC time
Loading theory "HOL-Analysis.Elementary_Normed_Spaces" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Library.Order_Continuity"
### 11.855s elapsed time, 38.161s cpu time, 35.402s GC time
Loading theory "HOL-Analysis.Function_Metric" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
instantiation
  fun :: (countable, metric_space) metric_space
  dist_fun == dist :: ('a => 'b) => ('a => 'b) => real
  uniformity_fun == uniformity :: (('a => 'b) * ('a => 'b)) filter
### theory "HOL-Analysis.Function_Metric"
### 0.479s elapsed time, 1.889s cpu time, 0.109s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Library.Extended_Real")
### ML warning (line 261 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_abs) has not been referenced.
### ML warning (line 265 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_max) has not been referenced.
### ML warning (line 269 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_min) has not been referenced.
### ML warning (line 379 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Pattern is not exhaustive.
signature FUNC =
  sig
    exception DUP of key
    exception SAME
    exception UNDEF of key
    val apply: 'a table -> key -> 'a
    val applyd: 'a table -> (key -> 'a) -> key -> 'a
    val build: ('a table -> 'a table) -> 'a table
    val choose: 'a table -> key * 'a
    val combine:
       ('a -> 'a -> 'a) -> ('a -> bool) -> 'a table -> 'a table -> 'a table
    val cons_list: key * 'a -> 'a list table -> 'a list table
    val default: key * 'a -> 'a table -> 'a table
    val defined: 'a table -> key -> bool
    val delete: key -> 'a table -> 'a table
    val delete_safe: key -> 'a table -> 'a table
    val dest: 'a table -> (key * 'a) list
    val dest_list: 'a list table -> (key * 'a) list
    val dom: 'a table -> key list
    val empty: 'a table
    val exists: (key * 'a -> bool) -> 'a table -> bool
    val fold: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val fold_rev: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val forall: (key * 'a -> bool) -> 'a table -> bool
    val get_first: (key * 'a -> 'b option) -> 'a table -> 'b option
    val insert: ('a * 'a -> bool) -> key * 'a -> 'a table -> 'a table
    val insert_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val insert_set: key -> set -> set
    val is_empty: 'a table -> bool
    val is_single: 'a table -> bool
    val join: (key -> 'a * 'a -> 'a) -> 'a table * 'a table -> 'a table
    type key
    val keys: 'a table -> key list
    val lookup: 'a table -> key -> 'a option
    val lookup_key: 'a table -> key -> (key * 'a) option
    val lookup_list: 'a list table -> key -> 'a list
    val make: (key * 'a) list -> 'a table
    val make_list: (key * 'a) list -> 'a list table
    val make_set: key list -> set
    val map: (key -> 'a -> 'b) -> 'a table -> 'b table
    val map_default: key * 'a -> ('a -> 'a) -> 'a table -> 'a table
    val map_entry: key -> ('a -> 'a) -> 'a table -> 'a table
    val max: 'a table -> (key * 'a) option
    val member: ('a * 'b -> bool) -> 'b table -> key * 'a -> bool
    val merge: ('a * 'a -> bool) -> 'a table * 'a table -> 'a table
    val merge_list:
       ('a * 'a -> bool) -> 'a list table * 'a list table -> 'a list table
    val min: 'a table -> (key * 'a) option
    val onefunc: key * 'a -> 'a table
    val remove: ('a * 'b -> bool) -> key * 'a -> 'b table -> 'b table
    val remove_list:
       ('a * 'b -> bool) -> key * 'a -> 'b list table -> 'b list table
    val remove_set: key -> set -> set
    type set = unit table
    type 'a table
    val tryapplyd: 'a table -> key -> 'a -> 'a
    val update: key * 'a -> 'a table -> 'a table
    val update_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val update_new: key * 'a -> 'a table -> 'a table
    val updatep: (key * 'a -> bool) -> key * 'a -> 'a table -> 'a table
  end
functor FuncFun (Key: KEY): FUNC
signature REAL_ARITH =
  sig
    type cert_conv = cterm -> thm * pss_tree
    val cterm_of_rat: Rat.rat -> cterm
    val dest_ratconst: cterm -> Rat.rat
    val gen_gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * conv * conv * prover
           -> cert_conv
    val gen_prover_real_arith: Proof.context -> prover -> cert_conv
    val gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * prover
           -> cert_conv
    val is_ratconst: cterm -> bool
    datatype positivstellensatz
    =
         Axiom_eq of int
       | Axiom_le of int
       | Axiom_lt of int
       | Eqmul of FuncUtil.poly * positivstellensatz
       | Product of positivstellensatz * positivstellensatz
       | Rational_eq of Rat.rat
       | Rational_le of Rat.rat
       | Rational_lt of Rat.rat
       | Square of FuncUtil.poly
       | Sum of positivstellensatz * positivstellensatz
    type prover =
       tree_choice list ->
         (thm list * thm list * thm list -> positivstellensatz -> thm) ->
           thm list * thm list * thm list -> thm * pss_tree
    datatype pss_tree
    = Branch of pss_tree * pss_tree | Cert of positivstellensatz | Trivial
    val real_linear_prover:
       (thm list * thm list * thm list -> positivstellensatz -> thm) ->
         thm list * thm list * thm list -> thm * pss_tree
    datatype tree_choice = Left | Right
  end
structure FuncUtil:
  sig
    structure Ctermfunc: FUNC
    structure Intfunc: FUNC
    structure Intpairfunc: FUNC
    structure Monomialfunc: FUNC
    structure Ratfunc: FUNC
    structure Symfunc: FUNC
    structure Termfunc: FUNC
    val dest_monomial: 'a Ctermfunc.table -> (cterm * 'a) list
    type monomial = int Ctermfunc.table
    val monomial_ord: int Ctermfunc.table * int Ctermfunc.table -> order
    val monomial_order: int Ctermfunc.table * int Ctermfunc.table -> order
    type poly = Rat.rat Monomialfunc.table
  end
structure RealArith: REAL_ARITH
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
signature POSITIVSTELLENSATZ_TOOLS =
  sig
    val print_cert: RealArith.pss_tree -> string
    val read_cert: Proof.context -> string -> RealArith.pss_tree
  end
structure Positivstellensatz_Tools: POSITIVSTELLENSATZ_TOOLS
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
class euclidean_semiring_gcd = normalization_euclidean_semiring + Gcd +
  assumes "gcd_eucl": "normalization_euclidean_semiring_class.gcd = gcd"
    and "lcm_eucl": "normalization_euclidean_semiring_class.lcm = lcm"
  assumes "Gcd_eucl": "normalization_euclidean_semiring_class.Gcd = Gcd"
    and "Lcm_eucl": "normalization_euclidean_semiring_class.Lcm = Lcm"
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
### theory "HOL-Analysis.Elementary_Normed_Spaces"
### 12.437s elapsed time, 40.632s cpu time, 35.346s GC time
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
signature SUM_OF_SQUARES =
  sig
    exception Failure of string
    val debug: bool Config.T
    val debug_message: Proof.context -> (unit -> string) -> unit
    datatype proof_method
    = Certificate of RealArith.pss_tree | Prover of string -> string
    val sos_tac:
       (RealArith.pss_tree -> unit) ->
         proof_method -> Proof.context -> int -> tactic
    val trace: bool Config.T
    val trace_message: Proof.context -> (unit -> string) -> unit
  end
structure Sum_of_Squares: SUM_OF_SQUARES
signature SOS_WRAPPER =
  sig val sos_tac: Proof.context -> string option -> int -> tactic end
structure SOS_Wrapper: SOS_WRAPPER
### theory "HOL-Library.Sum_of_Squares"
### 12.923s elapsed time, 42.408s cpu time, 35.666s GC time
Loading theory "HOL-Analysis.Norm_Arith" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 1.030s elapsed time, 3.952s cpu time, 0.335s GC time
Loading theory "HOL-Library.Extended_Real" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
### ML warning (line 103 of "~~/src/HOL/Analysis/normarith.ML"):
### Matches are not exhaustive.
signature NORM_ARITH =
  sig
    val norm_arith: Proof.context -> conv
    val norm_arith_tac: Proof.context -> int -> tactic
  end
structure NormArith: NORM_ARITH
### theory "HOL-Analysis.Norm_Arith"
### 0.321s elapsed time, 1.045s cpu time, 0.084s GC time
Loading theory "HOL-Analysis.Topology_Euclidean_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Convex_Euclidean_Space")
instantiation
  enat :: linorder_topology
  open_enat == open :: enat set => bool
instantiation
  ereal :: uminus
  uminus_ereal == uminus :: ereal => ereal
Found termination order: "{}"
instantiation
  ereal :: infinity
  infinity_ereal == infinity :: ereal
instantiation
  ereal :: abs
  abs_ereal == abs :: ereal => ereal
instantiation
  ereal :: {comm_monoid_add,zero_neq_one}
  one_ereal == one_class.one :: ereal
  zero_ereal == zero_class.zero :: ereal
  plus_ereal == plus :: ereal => ereal => ereal
instantiation
  ereal :: linorder
  less_eq_ereal == less_eq :: ereal => ereal => bool
  less_ereal == less :: ereal => ereal => bool
instantiation
  ereal :: {comm_monoid_mult,sgn}
  sgn_ereal == sgn :: ereal => ereal
  times_ereal == times :: ereal => ereal => ereal
instantiation
  ereal :: minus
  minus_ereal == minus :: ereal => ereal => ereal
instantiation
  ereal :: inverse
  inverse_ereal == inverse :: ereal => ereal
  divide_ereal == divide :: ereal => ereal => ereal
instantiation
  ereal :: lattice
  inf_ereal == inf :: ereal => ereal => ereal
  sup_ereal == sup :: ereal => ereal => ereal
instantiation
  ereal :: complete_lattice
  Inf_ereal == Inf :: ereal set => ereal
  Sup_ereal == Sup :: ereal set => ereal
  bot_ereal == bot :: ereal
  top_ereal == top :: ereal
instantiation
  ereal :: linear_continuum_topology
  open_ereal == open :: ereal set => bool
### theory "HOL-Analysis.Topology_Euclidean_Space"
### 2.145s elapsed time, 6.496s cpu time, 0.659s GC time
Loading theory "HOL-Analysis.Convex_Euclidean_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
Loading theory "HOL-Analysis.Line_Segment" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Library.Extended_Real"
### 2.830s elapsed time, 9.079s cpu time, 0.932s GC time
Loading theory "HOL-Library.Extended_Nonnegative_Real" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests" via "HOL-Analysis.Extended_Real_Limits")
instantiation
  ennreal :: complete_linorder
  Inf_ennreal == Inf :: ennreal set => ennreal
  Sup_ennreal == Sup :: ennreal set => ennreal
  bot_ennreal == bot :: ennreal
  sup_ennreal == sup :: ennreal => ennreal => ennreal
  top_ennreal == top :: ennreal
  inf_ennreal == inf :: ennreal => ennreal => ennreal
  less_eq_ennreal == less_eq :: ennreal => ennreal => bool
  less_ennreal == less :: ennreal => ennreal => bool
### theory "HOL-Analysis.Line_Segment"
### 1.372s elapsed time, 5.329s cpu time, 0.670s GC time
Loading theory "HOL-Analysis.Tagged_Division" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Henstock_Kurzweil_Integration")
instantiation
  ennreal :: infinity
  infinity_ennreal == infinity :: ennreal
instantiation
  ennreal :: {comm_semiring_1,semiring_1_no_zero_divisors}
  zero_ennreal == zero_class.zero :: ennreal
  plus_ennreal == plus :: ennreal => ennreal => ennreal
  one_ennreal == one_class.one :: ennreal
  times_ennreal == times :: ennreal => ennreal => ennreal
### theory "HOL-Analysis.Convex_Euclidean_Space"
### 1.517s elapsed time, 5.889s cpu time, 0.732s GC time
Loading theory "HOL-Analysis.Ordered_Euclidean_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Borel_Space")
instantiation
  ennreal :: minus
  minus_ennreal == minus :: ennreal => ennreal => ennreal
instantiation
  ennreal :: inverse
  inverse_ennreal == inverse :: ennreal => ennreal
  divide_ennreal == divide :: ennreal => ennreal => ennreal
structure Cancel_Ennreal_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Ennreal_Cancel:
  sig val proc: Proof.context -> term -> thm option end
locale operative
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
    and g :: "'b set => 'a"
  assumes "operative (\<^bold>*) \<^bold>1 g"
instantiation
  ennreal :: linear_continuum_topology
  open_ennreal == open :: ennreal set => bool
locale operative_real
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
    and g :: "real set => 'a"
  assumes "operative_real (\<^bold>*) \<^bold>1 g"
### theory "HOL-Analysis.Tagged_Division"
### 1.012s elapsed time, 3.932s cpu time, 0.529s GC time
Loading theory "HOL-Analysis.Starlike" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems" via "HOL-Analysis.Path_Connected")
### theory "HOL-Library.Extended_Nonnegative_Real"
### 3.152s elapsed time, 12.008s cpu time, 5.056s GC time
Loading theory "HOL-Analysis.Infinite_Sum" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
class ordered_euclidean_space = Inf + Sup + euclidean_space + abs + inf +
  sup + ord +
  assumes
    "eucl_le":
      "!!x y. (x <= y) = (ALL i:Basis. x \<bullet> i <= y \<bullet> i)"
  assumes "eucl_less_le_not_le": "!!x y. (x < y) = (x <= y & ~ y <= x)"
  assumes
    "eucl_inf":
      "!!x y.
          inf x y =
          (SUM i:Basis. inf (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_sup":
      "!!x y.
          sup x y =
          (SUM i:Basis. sup (x \<bullet> i) (y \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Inf":
      "!!X. Inf X = (SUM i:Basis. (INF x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_Sup":
      "!!X. Sup X = (SUM i:Basis. (SUP x\<in>X. x \<bullet> i) *\<^sub>R i)"
  assumes
    "eucl_abs":
      "!!x. \<bar>x\<bar> =
            (SUM i:Basis. \<bar>x \<bullet> i\<bar> *\<^sub>R i)"
### theory "HOL-Analysis.Starlike"
### 3.171s elapsed time, 12.205s cpu time, 4.942s GC time
Loading theory "HOL-Analysis.Sigma_Algebra" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Measure_Space" via "HOL-Analysis.Measurable")
locale subset_class
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "subset_class \<Omega> M"
### theory "HOL-Analysis.Infinite_Sum"
### 2.117s elapsed time, 8.269s cpu time, 1.247s GC time
Loading theory "HOL-Analysis.Extended_Real_Limits" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit" via "HOL-Analysis.Summation_Tests")
locale semiring_of_sets
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "semiring_of_sets \<Omega> M"
locale ring_of_sets
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "ring_of_sets \<Omega> M"
locale algebra
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "algebra \<Omega> M"
locale sigma_algebra
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "sigma_algebra \<Omega> M"
Proofs for inductive predicate(s) "sigma_setsp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "smallest_ccdi_setsp"
  Proving monotonicity ...
### theory "HOL-Computational_Algebra.Euclidean_Algorithm"
### 23.177s elapsed time, 79.881s cpu time, 44.068s GC time
Loading theory "HOL-Computational_Algebra.Primes" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Arcwise_Connected")
instantiation
  prod :: (abs, abs) abs
  abs_prod == abs :: 'a * 'b => 'a * 'b
### theory "HOL-Computational_Algebra.Primes"
### 0.341s elapsed time, 1.319s cpu time, 0.250s GC time
Loading theory "HOL-Computational_Algebra.Formal_Power_Series" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.FPS_Convergence")
instantiation
  vec :: (ordered_euclidean_space, finite) ordered_euclidean_space
  abs_vec == abs :: ('a, 'b) vec => ('a, 'b) vec
  inf_vec == inf :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  sup_vec == sup :: ('a, 'b) vec => ('a, 'b) vec => ('a, 'b) vec
  Inf_vec == Inf :: ('a, 'b) vec set => ('a, 'b) vec
  Sup_vec == Sup :: ('a, 'b) vec set => ('a, 'b) vec
locale Dynkin_system
  fixes \<Omega> :: "'a set"
    and M :: "'a set set"
  assumes "Dynkin_system \<Omega> M"
### theory "HOL-Analysis.Ordered_Euclidean_Space"
### 6.791s elapsed time, 25.999s cpu time, 10.979s GC time
Loading theory "HOL-Analysis.Continuous_Extension" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Equivalence_Measurable_On_Borel")
### theory "HOL-Analysis.Continuous_Extension"
### 0.217s elapsed time, 0.848s cpu time, 0.096s GC time
Loading theory "HOL-Analysis.Path_Connected" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Weierstrass_Theorems")
### theory "HOL-Analysis.Extended_Real_Limits"
### 2.723s elapsed time, 10.375s cpu time, 5.407s GC time
Loading theory "HOL-Analysis.Summation_Tests" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function" via "HOL-Analysis.Uniform_Limit")
instantiation
  fps :: (zero) zero
  zero_fps == zero_class.zero :: 'a fps
instantiation
  fps :: ({one,zero}) one
  one_fps == one_class.one :: 'a fps
instantiation
  fps :: (plus) plus
  plus_fps == plus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (minus) minus
  minus_fps == minus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (uminus) uminus
  uminus_fps == uminus :: 'a fps => 'a fps
instantiation
  fps :: ({comm_monoid_add,times}) times
  times_fps == times :: 'a fps => 'a fps => 'a fps
### theory "HOL-Analysis.Sigma_Algebra"
### 3.303s elapsed time, 12.632s cpu time, 5.727s GC time
Loading theory "HOL-Analysis.Measurable" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration" via "HOL-Analysis.Measure_Space")
signature MEASURABLE =
  sig
    val add_del_cong_thm: bool -> thm -> Context.generic -> Context.generic
    val add_local_cong: thm -> Proof.context -> Proof.context
    val add_preprocessor:
       string -> preprocessor -> Context.generic -> Context.generic
    val cong_thm_attr: attribute context_parser
    val del_preprocessor: string -> Context.generic -> Context.generic
    val dest_thm_attr: attribute context_parser
    val get_all: Context.generic -> thm list
    val get_cong: Context.generic -> thm list
    val get_dest: Context.generic -> thm list
    datatype level = Concrete | Generic
    val measurable_tac: Proof.context -> thm list -> tactic
    val measurable_thm_attr: bool * (bool * level) -> attribute
    val prepare_facts: Proof.context -> thm list -> thm list * Proof.context
    type preprocessor = thm -> Proof.context -> thm list * Proof.context
    val simproc: Proof.context -> cterm -> thm option
  end
structure Measurable: MEASURABLE
instantiation
  fps :: (zero) unit_factor
  unit_factor_fps == unit_factor :: 'a fps => 'a fps
### theory "HOL-Analysis.Summation_Tests"
### 1.035s elapsed time, 4.016s cpu time, 0.672s GC time
Loading theory "HOL-Analysis.Uniform_Limit" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative" via "HOL-Analysis.Bounded_Linear_Function")
instantiation
  fps :: ({minus,zero}) dist
  dist_fps == dist :: 'a fps => 'a fps => real
instantiation
  fps :: (group_add) metric_space
  uniformity_fps == uniformity :: ('a fps * 'a fps) filter
  open_fps == open :: 'a fps set => bool
### theory "HOL-Analysis.Measurable"
### 0.638s elapsed time, 2.459s cpu time, 0.444s GC time
Loading theory "HOL-Analysis.Measure_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration")
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  fps :: ({inverse,comm_monoid_add,times,uminus}) inverse
  inverse_fps == inverse :: 'a fps => 'a fps
  divide_fps == divide :: 'a fps => 'a fps => 'a fps
locale sigma_finite_measure
  fixes M :: "'a measure"
  assumes "sigma_finite_measure M"
### theory "HOL-Analysis.Path_Connected"
### 2.187s elapsed time, 8.343s cpu time, 1.587s GC time
Loading theory "HOL-Analysis.Arcwise_Connected" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve")
### theory "HOL-Analysis.Uniform_Limit"
### 1.137s elapsed time, 4.266s cpu time, 0.915s GC time
Loading theory "HOL-Analysis.Bounded_Continuous_Function" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
instantiation
  fps :: ({inverse,uminus,comm_semiring_1}) modulo
  modulo_fps == modulo :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (field) normalization_semidom_multiplicative
  normalize_fps == normalize :: 'a fps => 'a fps
instantiation
  fps :: (field) euclidean_ring_cancel
  euclidean_size_fps == euclidean_size :: 'a fps => nat
instantiation
  fps :: (field) euclidean_ring_gcd
  Gcd_fps == Gcd :: 'a fps set => 'a fps
  Lcm_fps == Lcm :: 'a fps set => 'a fps
  gcd_fps == gcd :: 'a fps => 'a fps => 'a fps
  lcm_fps == lcm :: 'a fps => 'a fps => 'a fps
instantiation
  bcontfun :: (topological_space, metric_space) metric_space
  dist_bcontfun == dist ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b => real
  uniformity_bcontfun == uniformity ::
    ('a \<Rightarrow>\<^sub>C 'b * 'a \<Rightarrow>\<^sub>C 'b) filter
  open_bcontfun == open :: ('a \<Rightarrow>\<^sub>C 'b) set => bool
instantiation
  bcontfun :: (topological_space, real_normed_vector) real_vector
  uminus_bcontfun == uminus ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  zero_bcontfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>C 'b
  minus_bcontfun == minus ::
    'a \<Rightarrow>\<^sub>C 'b
    => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  plus_bcontfun == plus ::
    'a \<Rightarrow>\<^sub>C 'b
    => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  scaleR_bcontfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  bcontfun :: (topological_space, real_normed_vector) real_normed_vector
  sgn_bcontfun == sgn ::
    'a \<Rightarrow>\<^sub>C 'b => 'a \<Rightarrow>\<^sub>C 'b
  norm_bcontfun == norm :: 'a \<Rightarrow>\<^sub>C 'b => real
locale finite_measure
  fixes M :: "'a measure"
  assumes "finite_measure M"
### theory "HOL-Analysis.Bounded_Continuous_Function"
### 2.117s elapsed time, 8.017s cpu time, 5.849s GC time
Loading theory "HOL-Analysis.Bounded_Linear_Function" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Derivative")
instantiation
  measure :: (type) order_bot
  bot_measure == bot :: 'a measure
  less_eq_measure == less_eq :: 'a measure => 'a measure => bool
  less_measure == less :: 'a measure => 'a measure => bool
Proofs for inductive predicate(s) "less_eq_measure"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  measure :: (type) semilattice_sup
  sup_measure == sup :: 'a measure => 'a measure => 'a measure
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  measure :: (type) complete_lattice
  Inf_measure == Inf :: 'a measure set => 'a measure
  Sup_measure == Sup :: 'a measure set => 'a measure
  top_measure == top :: 'a measure
  inf_measure == inf :: 'a measure => 'a measure => 'a measure
### theory "HOL-Analysis.Measure_Space"
### 4.291s elapsed time, 16.314s cpu time, 7.363s GC time
Loading theory "HOL-Analysis.Caratheodory" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.Arcwise_Connected"
### 1.897s elapsed time, 7.354s cpu time, 1.070s GC time
Loading theory "HOL-Analysis.Homotopy" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Homeomorphism")
bundle fps_notation
### theory "HOL-Computational_Algebra.Formal_Power_Series"
### 6.215s elapsed time, 23.746s cpu time, 8.760s GC time
Loading theory "HOL-Analysis.Locally" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Abstract_Euclidean_Space")
### theory "HOL-Analysis.Caratheodory"
### 0.472s elapsed time, 1.807s cpu time, 0.383s GC time
instantiation
  blinfun :: (real_normed_vector, real_normed_vector) real_normed_vector
  uminus_blinfun == uminus ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  zero_blinfun == zero_class.zero :: 'a \<Rightarrow>\<^sub>L 'b
  minus_blinfun == minus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  plus_blinfun == plus ::
    'a \<Rightarrow>\<^sub>L 'b
    => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  sgn_blinfun == sgn ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  norm_blinfun == norm :: 'a \<Rightarrow>\<^sub>L 'b => real
  scaleR_blinfun == scaleR ::
    real => 'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b
  dist_blinfun == dist ::
    'a \<Rightarrow>\<^sub>L 'b => 'a \<Rightarrow>\<^sub>L 'b => real
  uniformity_blinfun == uniformity ::
    ('a \<Rightarrow>\<^sub>L 'b * 'a \<Rightarrow>\<^sub>L 'b) filter
  open_blinfun == open :: ('a \<Rightarrow>\<^sub>L 'b) set => bool
### theory "HOL-Analysis.Locally"
### 0.246s elapsed time, 0.960s cpu time, 0.139s GC time
"- \<infinity>"
  :: "ereal"
"\<infinity>"
  :: "ereal"
"True"
  :: "bool"
"True"
  :: "bool"
inj_on ?h ?A ==> (?g summable_on ?h ` ?A) = (?g o ?h summable_on ?A)
uniformity =
filtermap (%((x1, x2), y1, y2). ((x1, y1), x2, y2))
 (uniformity \<times>\<^sub>F uniformity)
?a : affine hull ?S ==> aff_dim ?S = int (dim ((+) (- ?a) ` ?S))
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
"ereal (13 / 4)"
  :: "ereal"
locale bounded_bilinear
  fixes prod :: "'a => 'b => 'c"  (infixl \<open>**\<close> 70)
  assumes "bounded_bilinear (**)"
### theory "HOL-Analysis.Bounded_Linear_Function"
### 2.733s elapsed time, 10.007s cpu time, 1.672s GC time
Loading theory "HOL-Analysis.Derivative" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
locale Retracts
  fixes s :: "'a set"
    and h :: "'a => 'b"
    and t :: "'b set"
    and k :: "'b => 'a"
  assumes "Retracts s h t k"
### theory "HOL-Analysis.Homotopy"
### 4.054s elapsed time, 13.095s cpu time, 7.354s GC time
Loading theory "HOL-Analysis.Homeomorphism" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
Loading theory "HOL-Analysis.Abstract_Euclidean_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Abstract_Euclidean_Space"
### 0.414s elapsed time, 1.284s cpu time, 0.228s GC time
### theory "HOL-Analysis.Homeomorphism"
### 0.581s elapsed time, 1.637s cpu time, 0.325s GC time
### theory "HOL-Analysis.Derivative"
### 3.618s elapsed time, 10.554s cpu time, 7.064s GC time
Loading theory "HOL-Analysis.Borel_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure" via "HOL-Analysis.Nonnegative_Lebesgue_Integration")
Loading theory "HOL-Analysis.Cartesian_Euclidean_Space" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
Loading theory "HOL-Analysis.Complex_Analysis_Basics" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers" via "HOL-Analysis.Complex_Transcendental")
Loading theory "HOL-Analysis.Lipschitz" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Multivariate_Analysis")
bundle lipschitz_syntax
bundle no_lipschitz_syntax
### theory "HOL-Analysis.Cartesian_Euclidean_Space"
### 0.430s elapsed time, 1.702s cpu time, 0.132s GC time
Loading theory "HOL-Analysis.Cross3" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Lipschitz"
### 0.764s elapsed time, 3.006s cpu time, 0.261s GC time
Loading theory "HOL-Analysis.Brouwer_Fixpoint" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Fashoda_Theorem")
### theory "HOL-Analysis.Complex_Analysis_Basics"
### 1.405s elapsed time, 5.480s cpu time, 0.557s GC time
Loading theory "HOL-Analysis.Complex_Transcendental" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Harmonic_Numbers")
bundle cross3_syntax
locale kuhn_simplex
  fixes p :: "nat"
    and n :: "nat"
    and base :: "nat => nat"
    and upd :: "nat => nat"
    and s :: "(nat => nat) set"
  assumes "kuhn_simplex p n base upd s"
locale kuhn_simplex_pair
  fixes p :: "nat"
    and n :: "nat"
    and b_s :: "nat => nat"
    and u_s :: "nat => nat"
    and s :: "(nat => nat) set"
    and b_t :: "nat => nat"
    and u_t :: "nat => nat"
    and t :: "(nat => nat) set"
  assumes "kuhn_simplex_pair p n b_s u_s s b_t u_t t"
Proofs for inductive predicate(s) "ksimplex"
  Proving monotonicity ...
bundle no_cross3_syntax
### theory "HOL-Analysis.Brouwer_Fixpoint"
### 1.788s elapsed time, 6.786s cpu time, 1.137s GC time
Loading theory "HOL-Analysis.Fashoda_Theorem" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Borel_Space"
### 2.722s elapsed time, 10.429s cpu time, 1.547s GC time
Loading theory "HOL-Analysis.Nonnegative_Lebesgue_Integration" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure" via "HOL-Analysis.Binary_Product_Measure")
instantiation
  complex :: ln
  ln_complex == ln :: complex => complex
### theory "HOL-Analysis.Fashoda_Theorem"
### 0.688s elapsed time, 2.540s cpu time, 0.545s GC time
Loading theory "HOL-Analysis.Regularity" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.Cross3"
### 3.074s elapsed time, 11.583s cpu time, 2.051s GC time
Loading theory "HOL-Analysis.Multivariate_Analysis" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Regularity"
### 30.848s elapsed time, 105.391s cpu time, 102.766s GC time
Loading theory "HOL-Analysis.Retracts" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve" via "HOL-Analysis.Further_Topology")
### theory "HOL-Analysis.Complex_Transcendental"
### 32.991s elapsed time, 113.477s cpu time, 104.145s GC time
Loading theory "HOL-Analysis.Generalised_Binomial_Theorem" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Generalised_Binomial_Theorem"
### 0.165s elapsed time, 0.638s cpu time, 0.252s GC time
Loading theory "HOL-Analysis.FPS_Convergence" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Multivariate_Analysis"
### 31.530s elapsed time, 108.178s cpu time, 103.065s GC time
Loading theory "HOL-Analysis.Harmonic_Numbers" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function")
### theory "HOL-Analysis.Nonnegative_Lebesgue_Integration"
### 32.292s elapsed time, 110.961s cpu time, 103.607s GC time
Loading theory "HOL-Analysis.Binary_Product_Measure" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Finite_Product_Measure")
### theory "HOL-Analysis.Harmonic_Numbers"
### 0.266s elapsed time, 1.057s cpu time, 0.174s GC time
Loading theory "HOL-Analysis.Infinite_Products" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
locale pair_sigma_finite
  fixes M1 :: "'a measure"
    and M2 :: "'b measure"
  assumes "pair_sigma_finite M1 M2"
### theory "HOL-Analysis.Retracts"
### 1.412s elapsed time, 5.586s cpu time, 0.822s GC time
Loading theory "HOL-Analysis.Smooth_Paths" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Binary_Product_Measure"
### 0.628s elapsed time, 2.483s cpu time, 0.369s GC time
Loading theory "HOL-Analysis.Embed_Measure" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Smooth_Paths"
### 0.150s elapsed time, 0.595s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Finite_Product_Measure" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
### theory "HOL-Analysis.FPS_Convergence"
### 1.327s elapsed time, 5.253s cpu time, 0.823s GC time
Loading theory "HOL-Analysis.Polytope" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Embed_Measure"
### 0.266s elapsed time, 1.045s cpu time, 0.253s GC time
Loading theory "HOL-Analysis.Weierstrass_Theorems" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Infinite_Products"
### 0.850s elapsed time, 3.356s cpu time, 0.615s GC time
locale product_sigma_finite
  fixes M :: "'i => 'a measure"
  assumes "product_sigma_finite M"
locale finite_product_sigma_finite
  fixes M :: "'i => 'a measure"
    and I :: "'i set"
  assumes "finite_product_sigma_finite M I"
locale function_ring_on
  fixes R :: "('a => real) set"
    and S :: "'a set"
  assumes "function_ring_on R S"
### theory "HOL-Analysis.Finite_Product_Measure"
### 1.087s elapsed time, 3.683s cpu time, 0.758s GC time
Loading theory "HOL-Analysis.Bochner_Integration" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure" via "HOL-Analysis.Complete_Measure")
Proofs for inductive predicate(s) "real_polynomial_function"
  Proving monotonicity ...
Proofs for inductive predicate(s) "simple_bochner_integrable"
  Proving monotonicity ...
### theory "HOL-Analysis.Weierstrass_Theorems"
### 1.083s elapsed time, 3.472s cpu time, 0.762s GC time
Proofs for inductive predicate(s) "has_bochner_integral"
  Proving monotonicity ...
Proofs for inductive predicate(s) "integrable"
  Proving monotonicity ...
### theory "HOL-Analysis.Polytope"
### 1.614s elapsed time, 4.680s cpu time, 1.109s GC time
### theory "HOL-Analysis.Bochner_Integration"
### 1.380s elapsed time, 2.634s cpu time, 0.726s GC time
Loading theory "HOL-Analysis.Complete_Measure" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Lebesgue_Measure")
Loading theory "HOL-Analysis.Radon_Nikodym" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" via "HOL-Analysis.Set_Integral")
locale complete_measure
  fixes M :: "'a measure"
  assumes "complete_measure M"
locale semifinite_measure
  fixes M :: "'a measure"
  assumes "semifinite_measure M"
locale locally_determined_measure
  fixes M :: "'a measure"
  assumes "locally_determined_measure M"
locale cld_measure
  fixes M :: "'a measure"
  assumes "cld_measure M"
### theory "HOL-Analysis.Radon_Nikodym"
### 0.294s elapsed time, 0.641s cpu time, 0.116s GC time
Loading theory "HOL-Analysis.Set_Integral" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Complete_Measure"
### 0.519s elapsed time, 1.157s cpu time, 0.252s GC time
Loading theory "HOL-Analysis.Lebesgue_Measure" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### theory "HOL-Analysis.Set_Integral"
### 0.549s elapsed time, 1.210s cpu time, 0.252s GC time
Loading theory "HOL-Analysis.Infinite_Set_Sum" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
sigma_finite_measure (count_space ?A)
### theory "HOL-Analysis.Infinite_Set_Sum"
### 0.953s elapsed time, 2.052s cpu time, 0.351s GC time
Proofs for inductive predicate(s) "fsigma"
  Proving monotonicity ...
Proofs for inductive predicate(s) "gdelta"
  Proving monotonicity ...
### theory "HOL-Analysis.Lebesgue_Measure"
### 1.495s elapsed time, 2.977s cpu time, 0.466s GC time
Loading theory "HOL-Analysis.Henstock_Kurzweil_Integration" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function" via "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration")
### Cannot skip proof of schematic goal statement
### theory "HOL-Analysis.Henstock_Kurzweil_Integration"
### 4.385s elapsed time, 10.302s cpu time, 8.058s GC time
Loading theory "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Gamma_Function")
Loading theory "HOL-Analysis.Integral_Test" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
locale antimono_fun_sum_integral_diff
  fixes f :: "real => real"
  assumes "antimono_fun_sum_integral_diff f"
### theory "HOL-Analysis.Integral_Test"
### 0.116s elapsed time, 0.314s cpu time, 0.167s GC time
### theory "HOL-Analysis.Equivalence_Lebesgue_Henstock_Integration"
### 1.899s elapsed time, 2.342s cpu time, 0.577s GC time
Loading theory "HOL-Analysis.Gamma_Function" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume")
Loading theory "HOL-Analysis.Further_Topology" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Jordan_Curve")
Loading theory "HOL-Analysis.Improper_Integral" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
Loading theory "HOL-Analysis.Interval_Integral" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume" via "HOL-Analysis.Lebesgue_Integral_Substitution")
### theory "HOL-Analysis.Improper_Integral"
### 0.475s elapsed time, 1.875s cpu time, 0.339s GC time
Loading theory "HOL-Analysis.Equivalence_Measurable_On_Borel" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Interval_Integral"
### 0.594s elapsed time, 2.322s cpu time, 0.505s GC time
Loading theory "HOL-Analysis.Lebesgue_Integral_Substitution" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Ball_Volume")
### theory "HOL-Analysis.Lebesgue_Integral_Substitution"
### 0.113s elapsed time, 0.449s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Vitali_Covering_Theorem" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis" via "HOL-Analysis.Change_Of_Vars")
### theory "HOL-Analysis.Equivalence_Measurable_On_Borel"
### 0.813s elapsed time, 3.200s cpu time, 0.456s GC time
?z ~: \<int>\<^sub>\<le>\<^sub>0 ==>
(Polygamma ?n has_field_derivative Polygamma (Suc ?n) ?z) (at ?z within ?A)
### theory "HOL-Analysis.Vitali_Covering_Theorem"
### 1.183s elapsed time, 4.164s cpu time, 0.536s GC time
Loading theory "HOL-Analysis.Change_Of_Vars" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
class Gamma = complete_space + real_normed_field +
  fixes rGamma :: "'a => 'a"
  assumes
    "rGamma_eq_zero_iff_aux":
      "!!z. (rGamma z = (0::'a)) = (EX n. z = - of_nat n)"
  assumes
    "differentiable_rGamma_aux1":
      "!!z. (!!n. z ~= - of_nat n) ==>
            let d = (THE d.
                        (%n. SUM k<n.
                             inverse (of_nat (Suc k)) -
                             inverse (z + of_nat k))
                        \<longlonglongrightarrow> d) -
                    euler_mascheroni *\<^sub>R (1::'a)
            in ((%y. (rGamma y - rGamma z +
                      rGamma z * d * (y - z)) /\<^sub>R
                     norm (y - z)) \<longlongrightarrow>
                (0::'a))
                (at z)"
  assumes
    "differentiable_rGamma_aux2":
      "!!n. let z = - of_nat n
            in ((%y. (rGamma y - rGamma z -
                      (- (1::'a)) ^ n * prod of_nat {1..n} *
                      (y - z)) /\<^sub>R
                     norm (y - z)) \<longlongrightarrow>
                (0::'a))
                (at z)"
  assumes
    "rGamma_series_aux":
      "!!z. (!!n. z ~= - of_nat n) ==>
            let fact' = %n. prod of_nat {1..n};
                exp =
                  %x. THE e.
                         (%n. SUM k<n. x ^ k /\<^sub>R fact k)
                         \<longlonglongrightarrow> e;
                pochhammer' = %a n. PROD n = 0..n. a + of_nat n
            in (%n. pochhammer' z n /
                    (fact' n * exp (z * ln (real n) *\<^sub>R (1::'a))))
               \<longlonglongrightarrow> rGamma z"
instantiation
  complex :: Gamma
  rGamma_complex == rGamma :: complex => complex
instantiation
  real :: Gamma
  rGamma_real == rGamma :: real => real
### theory "HOL-Analysis.Change_Of_Vars"
### 1.304s elapsed time, 3.997s cpu time, 0.907s GC time
Loading theory "HOL-Analysis.Simplex_Content" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Further_Topology"
### 3.326s elapsed time, 11.316s cpu time, 2.247s GC time
Loading theory "HOL-Analysis.Jordan_Curve" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Simplex_Content"
### 0.141s elapsed time, 0.422s cpu time, 0.099s GC time
### theory "HOL-Analysis.Gamma_Function"
### 3.690s elapsed time, 12.256s cpu time, 2.399s GC time
Loading theory "HOL-Analysis.Ball_Volume" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual" via "HOL-Analysis.Analysis")
### theory "HOL-Analysis.Jordan_Curve"
### 0.845s elapsed time, 1.855s cpu time, 0.350s GC time
### theory "HOL-Analysis.Ball_Volume"
### 0.538s elapsed time, 1.136s cpu time, 0.198s GC time
Loading theory "HOL-Analysis.Analysis" (required by "Draft.HyperdualMoreTemplates" via "Draft.Hyperdual")
### theory "HOL-Analysis.Analysis"
### 4.402s elapsed time, 4.603s cpu time, 0.297s GC time
Loading theory "Draft.Hyperdual" (required by "Draft.HyperdualMoreTemplates")
instantiation
  hyperdual :: (plus) plus
  plus_hyperdual == plus :: 'a hyperdual => 'a hyperdual => 'a hyperdual
consts
  plus_hyperdual :: "'a hyperdual => 'a hyperdual => 'a hyperdual"
instantiation
  hyperdual :: (zero) zero
  zero_hyperdual == zero_class.zero :: 'a hyperdual
instantiation
  hyperdual :: (uminus) uminus
  uminus_hyperdual == uminus :: 'a hyperdual => 'a hyperdual
consts
  uminus_hyperdual :: "'a hyperdual => 'a hyperdual"
instantiation
  hyperdual :: (minus) minus
  minus_hyperdual == minus :: 'a hyperdual => 'a hyperdual => 'a hyperdual
consts
  minus_hyperdual :: "'a hyperdual => 'a hyperdual => 'a hyperdual"
instantiation
  hyperdual :: ({one,zero}) one
  one_hyperdual == one_class.one :: 'a hyperdual
instantiation
  hyperdual :: ({plus,times}) times
  times_hyperdual == times :: 'a hyperdual => 'a hyperdual => 'a hyperdual
consts
  times_hyperdual :: "'a hyperdual => 'a hyperdual => 'a hyperdual"
consts
  scaleH :: "'a => 'a hyperdual => 'a hyperdual"
instantiation
  hyperdual :: ({inverse,ring_1}) inverse
  inverse_hyperdual == inverse :: 'a hyperdual => 'a hyperdual
  divide_hyperdual == divide :: 'a hyperdual => 'a hyperdual => 'a hyperdual
consts
  inverse_hyperdual :: "'a hyperdual => 'a hyperdual"
consts
  divide_hyperdual :: "'a hyperdual => 'a hyperdual => 'a hyperdual"
instantiation
  hyperdual :: (scaleR) scaleR
  scaleR_hyperdual == scaleR :: real => 'a hyperdual => 'a hyperdual
consts
  scaleR_hyperdual :: "real => 'a hyperdual => 'a hyperdual"
instantiation
  hyperdual :: (real_inner) real_inner
  inner_hyperdual == inner :: 'a hyperdual => 'a hyperdual => real
  sgn_hyperdual == sgn :: 'a hyperdual => 'a hyperdual
  norm_hyperdual == norm :: 'a hyperdual => real
  dist_hyperdual == dist :: 'a hyperdual => 'a hyperdual => real
  uniformity_hyperdual == uniformity :: ('a hyperdual * 'a hyperdual) filter
  open_hyperdual == open :: 'a hyperdual set => bool
instantiation
  hyperdual :: ({euclidean_space,real_algebra_1}) euclidean_space
  Basis_hyperdual == Basis :: 'a hyperdual set
### theory "Draft.Hyperdual"
### 1.448s elapsed time, 1.646s cpu time, 0.296s GC time
Loading theory "Draft.HyperdualMoreTemplates"
val templateLemmas =
   [("Hyperdual.of_comp_simps", "Base (of_comp ?a) = ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Hyperdual.of_comp_simps", "Eps1 (of_comp ?a) = (0::?'a)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Hyperdual.of_comp_simps", "Eps12 (of_comp ?a) = (0::?'a)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Hyperdual.of_comp_simps", "Eps2 (of_comp ?a) = (0::?'a)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Hyperdual.scaleH_zero", "(0::?'a) *\<^sub>H ?b = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Hyperdual.scaleH_one", "(1::?'a) *\<^sub>H ?b = ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Hyperdual.hyp_inverse_divide_1", "inverse ?a = 1 / ?a",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Hyperdual.scaleH_minus", "- (1::?'a) *\<^sub>H ?b = - ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Hyperdual.of_comp_minus", "of_comp (- ?a) = - of_comp ?a",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Hyperdual.hyp_minus_inverse_comm", "inverse (- ?a) = - inverse ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Hyperdual.scaleH_times", "?f *\<^sub>H ?x = of_comp ?f * ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Hyperdual.hyp_divide_inverse", "?a / ?b = ?a * inverse ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Hyperdual.hyperdual_power_simps", "Base (?x ^ ?n) = Base ?x ^ ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Hyperdual.hyp_inverse_zero",
     "(inverse ?a = 0) = (Base ?a = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Hyperdual.scaleH_minus_right",
     "- (?a *\<^sub>H ?b) = ?a *\<^sub>H - ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Hyperdual.scaleH_minus_left",
     "- (?a *\<^sub>H ?b) = - ?a *\<^sub>H ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Hyperdual.hyp_divide_minus_right", "?a / - ?b = - (?a / ?b)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hyperdual.hyp_divide_minus_left", "- ?a / ?b = - (?a / ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hyperdual.hyp_minus_divide_minus", "- ?a / - ?b = ?a / ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Hyperdual.hyp_invertible_inverse",
     "(Base ?a = (0::?'a)) = (Base (inverse ?a) = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 0)),
         template_hole 1))),
    ("Hyperdual.of_comp_diff",
     "of_comp (?a - ?b) = of_comp ?a - of_comp ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Hyperdual.of_comp_times",
     "of_comp (?a * ?b) = of_comp ?a * of_comp ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Hyperdual.of_comp_add", "of_comp (?a + ?b) = of_comp ?a + of_comp ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Hyperdual.hyp_inverse_mult_distrib",
     "inverse (?a * ?b) = inverse ?b * inverse ?a",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Hyperdual.zero_base_zero_inverse",
     "Base ?a = (0::?'a) ==> inverse ?a = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Hyperdual.zero_inverse_zero_base",
     "inverse ?a = 0 ==> Base ?a = (0::?'a)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Hyperdual.hyp_divide_self_if",
     "?a / ?a = (if Base ?a = (0::?'a) then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Hyperdual.hyp_times_divide_assoc", "?a * (?b / ?c) = ?a * ?b / ?c",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Hyperdual.hyp_denominators_merge", "?a / ?b / ?c = ?a / (?c * ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Hyperdual.scaleH_mult",
     "(?a * ?a') *\<^sub>H ?b = ?a *\<^sub>H ?a' *\<^sub>H ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hyperdual.scaleH_scaleR",
     "?a *\<^sub>H ?f *\<^sub>R ?b = ?f *\<^sub>R ?a *\<^sub>H ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Hyperdual.scaleH_scaleR",
     "(?f *\<^sub>R ?a) *\<^sub>H ?b = ?f *\<^sub>R ?a *\<^sub>H ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Hyperdual.hyp_inverse_unique", "?a * ?b = 1 ==> ?b = inverse ?a",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Hyperdual.hyp_divide_base_zero",
     "Base ?b = (0::?'a) ==> Base (?a / ?b) = (0::?'a)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_hole 1))),
    ("Hyperdual.hyp_inverse_involution",
     "Base ?a ~= (0::?'a) ==> inverse (inverse ?a) = ?a",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 0, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Hyperdual.scaleH_diff",
     "?a *\<^sub>H (?b - ?b') = ?a *\<^sub>H ?b - ?a *\<^sub>H ?b'",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Hyperdual.scaleH_diff",
     "(?a - ?a') *\<^sub>H ?b = ?a *\<^sub>H ?b - ?a' *\<^sub>H ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Hyperdual.scaleH_add",
     "?a *\<^sub>H (?b + ?b') = ?a *\<^sub>H ?b + ?a *\<^sub>H ?b'",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Hyperdual.scaleH_add",
     "(?a + ?a') *\<^sub>H ?b = ?a *\<^sub>H ?b + ?a' *\<^sub>H ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Hyperdual.hyp_diff_divide_distrib",
     "(?a - ?b) / ?c = ?a / ?c - ?b / ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hyperdual.hyp_add_divide_distrib",
     "(?a + ?b) / ?c = ?a / ?c + ?b / ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Hyperdual.hyp_right_inverse",
     "Base ?a ~= (0::?'a) ==> ?a * inverse ?a = 1",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Hyperdual.hyp_left_inverse",
     "Base ?a ~= (0::?'a) ==> inverse ?a * ?a = 1",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_hole 0))),
    ("Hyperdual.hyperdual_square_eq_1_iff",
     "(?x * ?x = 1) = (?x = 1 | ?x = - 1)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 0),
         template_hole 2),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 2)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 0, template_hole 2)))
           ))),
    ("Hyperdual.inner_mult_le_mult_inner",
     "(?a * ?b) \<bullet> (?a * ?b) <= ?a \<bullet> ?a * (?b \<bullet> ?b)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 0)))),
    ("Hyperdual.hyp_base_mult_eq_0_iff",
     "(Base (?a * ?b) = (0::?'a)) =
      (Base ?a = (0::?'a) | Base ?b = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 1))
           ))),
    ("Hyperdual.has_derivative_Base",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Base (?g x)) has_derivative (%x. Base (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Hyperdual.has_derivative_Eps1",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Eps1 (?g x)) has_derivative (%x. Eps1 (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Hyperdual.has_derivative_Eps12",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Eps12 (?g x)) has_derivative (%x. Eps12 (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Hyperdual.has_derivative_Eps2",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Eps2 (?g x)) has_derivative (%x. Eps2 (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Hyperdual.tendsto_Base",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Base (?g x)) \<longlongrightarrow> Base ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Hyperdual.tendsto_Eps1",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Eps1 (?g x)) \<longlongrightarrow> Eps1 ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Hyperdual.tendsto_Eps12",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Eps12 (?g x)) \<longlongrightarrow> Eps12 ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Hyperdual.tendsto_Eps2",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Eps2 (?g x)) \<longlongrightarrow> Eps2 ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Hyperdual.hyp_divide_self",
     "Base ?b ~= (0::?'a) ==> (?a / ?b = 1) = (?a = ?b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0),
         template_equation (template_var 0, template_var 1)))),
    ("Hyperdual.hyperdual_power_simps",
     "Eps1 (?x ^ ?n) = Eps1 ?x * of_nat ?n * Base ?x ^ (?n - 1)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 7, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Hyperdual.hyperdual_power_simps",
     "Eps2 (?x ^ ?n) = Eps2 ?x * of_nat ?n * Base ?x ^ (?n - 1)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 7, template_var 1)),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Hyperdual.divisors_base_zero",
     "Base (?a * ?b) = (0::?'a) ==>
      Base ?a = (0::?'a) | Base ?b = (0::?'a)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 1))
           ))),
    ("Hyperdual.hyperdual_comb_sel",
     "Base
       (?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
        ?d *\<^sub>H e12) =
      ?a",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 2))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 0))),
       template_var 3)),
    ("Hyperdual.hyperdual_comb_sel",
     "Eps1
       (?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
        ?d *\<^sub>H e12) =
      ?b",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 2))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 0))),
       template_var 2)),
    ("Hyperdual.hyperdual_comb_sel",
     "Eps12
       (?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
        ?d *\<^sub>H e12) =
      ?d",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 2))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 0))),
       template_var 0)),
    ("Hyperdual.hyperdual_comb_sel",
     "Eps2
       (?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
        ?d *\<^sub>H e12) =
      ?c",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 2))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 0))),
       template_var 1)),
    ("Hyperdual.hyp_denominator_eliminate",
     "Base ?c ~= (0::?'a) ==> (?a = ?b / ?c) = (?a * ?c = ?b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_bimplication
        (template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Hyperdual.hyp_mult_right_cancel",
     "Base ?c ~= (0::?'a) ==> (?a * ?c = ?b * ?c) = (?a = ?b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("Hyperdual.hyp_mult_left_cancel",
     "Base ?c ~= (0::?'a) ==> (?c * ?a = ?c * ?b) = (?a = ?b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Hyperdual.hyp_add_divide_eq_if_simps",
     "?a - ?b / ?z =
      (if Base ?z = (0::?'a) then ?a else (?a * ?z - ?b) / ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 1)),
               template_var 2),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0)),
                   template_var 1)),
               template_var 0))
           ))),
    ("Hyperdual.hyp_add_divide_eq_if_simps",
     "?a + ?b / ?z =
      (if Base ?z = (0::?'a) then ?a else (?a * ?z + ?b) / ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 1)),
               template_var 2),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0)),
                   template_var 1)),
               template_var 0))
           ))),
    ("Hyperdual.hyp_add_divide_eq_if_simps",
     "?a / ?z + ?b =
      (if Base ?z = (0::?'a) then ?b else (?a + ?b * ?z) / ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 1)),
               template_var 0),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_var 1))
           ))),
    ("Hyperdual.hyp_eq_divide_eq",
     "(?a = ?b / ?c) =
      (if Base ?c ~= (0::?'a) then ?a * ?c = ?b else ?a = 0)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0)),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_hole 0))
           ))),
    ("Hyperdual.hyp_divide_eq_eq",
     "(?b / ?c = ?a) =
      (if Base ?c ~= (0::?'a) then ?b = ?a * ?c else ?a = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)),
                     template_hole 2))),
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 8, template_var 0),
               template_hole 0))
           ))),
    ("Hyperdual.hyp_add_divide_eq_if_simps",
     "?a / ?z - ?b =
      (if Base ?z = (0::?'a) then - ?b else (?a - ?b * ?z) / ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_hole 2)),
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_var 1))
           ))),
    ("Hyperdual.hyp_add_divide_eq_iff",
     "Base ?z ~= (0::?'a) ==> ?x + ?y / ?z = (?x * ?z + ?y) / ?z",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_var 0)),
           template_var 2)))),
    ("Hyperdual.hyperdual_eq",
     "?x =
      Base ?x *\<^sub>H ba + Eps1 ?x *\<^sub>H e1 + Eps2 ?x *\<^sub>H e2 +
      Eps12 ?x *\<^sub>H e12",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 0)),
                     template_hole 6)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 5, template_var 0)),
                   template_hole 4))),
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Hyperdual.Hyperdual_eq",
     "Hyperdual ?a ?b ?c ?d =
      ?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
      ?d *\<^sub>H e12",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 2))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 1))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 0)))),
    ("Hyperdual.hyp_add_divide_eq_if_simps",
     "- (?a / ?z) + ?b =
      (if Base ?z = (0::?'a) then ?b else (- ?a + ?b * ?z) / ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 1)),
               template_var 0),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_var 1))
           ))),
    ("Hyperdual.hyp_eq_minus_divide_eq",
     "(?a = - (?b / ?c)) =
      (if Base ?c ~= (0::?'a) then ?a * ?c = - ?b else ?a = 0)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 0)),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_app (template_hole 8, template_var 1))),
             template_app
              (template_app (template_hole 9, template_var 2),
               template_hole 0))
           ))),
    ("Hyperdual.hyp_minus_divide_eq_eq",
     "(- (?b / ?c) = ?a) =
      (if Base ?c ~= (0::?'a) then - ?b = ?a * ?c else ?a = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 1)),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_hole 0))
           ))),
    ("Hyperdual.hyp_add_divide_eq_if_simps",
     "- (?a / ?z) - ?b =
      (if Base ?z = (0::?'a) then - ?b else (- ?a - ?b * ?z) / ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 1)),
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1))),
               template_var 1))
           ))),
    ("Hyperdual.hyp_inverse_injection",
     "[| Base ?a ~= (0::?'a); Base ?b ~= (0::?'a) |]
      ==> (inverse ?a = inverse ?b) = (?a = ?b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Hyperdual.tendsto_scaleH",
     "[| (?f \<longlongrightarrow> ?a) ?F;
         (?g \<longlongrightarrow> ?b) ?F |]
      ==> ((%x. ?f x *\<^sub>H ?g x) \<longlongrightarrow> ?a *\<^sub>H ?b)
           ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))),
             template_var 2)
           ))),
    ("Hyperdual.nat_induct01Suc",
     "[| ?P 0; ?P 1; !!n. [| 0 < n; ?P n |] ==> ?P (Suc n) |] ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 4)),
        template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Hyperdual.hyperdual_eq_iff",
     "(?x = ?y) =
      (Base ?x = Base ?y &
       Eps1 ?x = Eps1 ?y & Eps2 ?x = Eps2 ?y & Eps12 ?x = Eps12 ?y)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 2, template_var 1)),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 1, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Hyperdual.hyp_inverse_diff",
     "[| Base ?a ~= (0::?'a); Base ?b ~= (0::?'a) |]
      ==> inverse ?a - inverse ?b = inverse ?a * (?b - ?a) * inverse ?b",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1))),
           template_app (template_hole 1, template_var 0))))),
    ("Hyperdual.hyp_inverse_add",
     "[| Base ?a ~= (0::?'a); Base ?b ~= (0::?'a) |]
      ==> inverse ?a + inverse ?b = inverse ?a * (?a + ?b) * inverse ?b",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app (template_hole 1, template_var 0))))),
    ("Hyperdual.hyperdual_linear_comb",
     "(!!a b c d.
          ?x =
          a *\<^sub>H ba + b *\<^sub>H e1 + c *\<^sub>H e2 +
          d *\<^sub>H e12 ==>
          ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Hyperdual.hyperdual_eqI",
     "[| Base ?x = Base ?y; Eps1 ?x = Eps1 ?y; Eps2 ?x = Eps2 ?y;
         Eps12 ?x = Eps12 ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Hyperdual.divisors_hyperdual_zero",
     "(?a * ?b = 0) =
      (?a = 0 |
       ?b = 0 |
       Base ?a = (0::?'a) &
       Base ?b = (0::?'a) & Eps1 ?a * Eps2 ?b = - Eps2 ?a * Eps1 ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 10, template_var 1), template_var 0),
         template_hole 9),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_hole 9)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 11, template_var 0),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 0)),
                       template_hole 4)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1)),
                         template_app (template_hole 1, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0,
                           template_app (template_hole 1, template_var 1))),
                       template_app (template_hole 2, template_var 0)))))))
           ))),
    ("Hyperdual.hyp_mult_cancel_left1",
     "(?a = ?a * ?b) =
      (?a = 0 |
       ?b = 1 |
       Base ?a = (0::?'a) &
       Base ?b = (1::?'a) & Eps1 ?a * Eps2 ?b = - Eps2 ?a * Eps1 ?b)",
     template_bimplication
      (template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_hole 10)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 0)),
                       template_hole 4)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1)),
                         template_app (template_hole 1, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0,
                           template_app (template_hole 1, template_var 1))),
                       template_app (template_hole 2, template_var 0)))))))
           ))),
    ("Hyperdual.hyp_mult_cancel_right1",
     "(?a = ?b * ?a) =
      (?a = 0 |
       ?b = 1 |
       Base ?a = (0::?'a) &
       Base ?b = (1::?'a) & Eps1 ?b * Eps2 ?a = - Eps2 ?b * Eps1 ?a)",
     template_bimplication
      (template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 12, template_var 0),
           template_var 1)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_hole 10)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 0)),
                       template_hole 4)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 0)),
                         template_app (template_hole 1, template_var 1))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0,
                           template_app (template_hole 1, template_var 0))),
                       template_app (template_hole 2, template_var 1)))))))
           ))),
    ("Hyperdual.hyp_mult_cancel_left2",
     "(?a * ?b = ?a) =
      (?a = 0 |
       ?b = 1 |
       Base ?a = (0::?'a) &
       Base ?b = (1::?'a) & Eps1 ?a * Eps2 ?b = - Eps2 ?a * Eps1 ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 12, template_var 1), template_var 0),
         template_var 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_hole 10)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 0)),
                       template_hole 4)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1)),
                         template_app (template_hole 1, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0,
                           template_app (template_hole 1, template_var 1))),
                       template_app (template_hole 2, template_var 0)))))))
           ))),
    ("Hyperdual.hyp_mult_cancel_right2",
     "(?b * ?a = ?a) =
      (?a = 0 |
       ?b = 1 |
       Base ?a = (0::?'a) &
       Base ?b = (1::?'a) & Eps1 ?b * Eps2 ?a = - Eps2 ?b * Eps1 ?a)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 12, template_var 1), template_var 0),
         template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 13, template_var 0),
                 template_hole 10)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 13, template_var 1),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 0)),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 1)),
                       template_hole 4)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1)),
                         template_app (template_hole 1, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0,
                           template_app (template_hole 1, template_var 1))),
                       template_app (template_hole 2, template_var 0)))))))
           ))),
    ("Hyperdual.hyperdual_power_simps",
     "Eps12 (?x ^ ?n) =
      Eps12 ?x * of_nat ?n * Base ?x ^ (?n - 1) +
      Eps1 ?x * Eps2 ?x * of_nat ?n * of_nat (?n - 1) * Base ?x ^ (?n - 2)",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 13, template_var 1)),
                 template_app (template_hole 9, template_var 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_hole 5)))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 4, template_var 1)),
                       template_app (template_hole 3, template_var 1))),
                   template_app (template_hole 9, template_var 0))),
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5)))),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 1)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Hyperdual.tendsto_hyperdual_iff",
     "(?f \<longlongrightarrow> ?x) ?F =
      (((%x. Base (?f x)) \<longlongrightarrow> Base ?x) ?F &
       ((%x. Eps1 (?f x)) \<longlongrightarrow> Eps1 ?x) ?F &
       ((%x. Eps2 (?f x)) \<longlongrightarrow> Eps2 ?x) ?F &
       ((%x. Eps12 (?f x)) \<longlongrightarrow> Eps12 ?x) ?F)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2),
           template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 3,
                 template_app (template_hole 4, template_var 1))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 1, template_var 1))),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 1))),
               template_var 0)))))),
    ("Hyperdual.tendsto_Hyperdual",
     "[| (?f \<longlongrightarrow> ?a) ?F; (?g \<longlongrightarrow> ?b) ?F;
         (?h \<longlongrightarrow> ?c) ?F;
         (?i \<longlongrightarrow> ?d) ?F |]
      ==> ((%x. Hyperdual (?f x) (?g x) (?h x) (?i x)) \<longlongrightarrow>
           Hyperdual ?a ?b ?c ?d)
           ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 8),
                template_app (template_hole 3, template_var 7)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app (template_hole 3, template_var 4)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_app (template_hole 3, template_var 0)),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 4),
                     template_var 2),
                   template_var 0))),
             template_var 6)
           ))),
    ("Hyperdual.has_derivative_hyperdual_iff",
     "(?f has_derivative ?Df) ?F =
      (((%x. Base (?f x)) has_derivative (%x. Base (?Df x))) ?F &
       ((%x. Eps1 (?f x)) has_derivative (%x. Eps1 (?Df x))) ?F &
       ((%x. Eps2 (?f x)) has_derivative (%x. Eps2 (?Df x))) ?F &
       ((%x. Eps12 (?f x)) has_derivative (%x. Eps12 (?Df x))) ?F)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, t_empty), t_empty),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, t_empty), t_empty),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, t_empty), t_empty),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 4, t_empty), t_empty),
               template_var 0)))))),
    ("Hyperdual.add_hyperdual_parts",
     "?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
      ?d *\<^sub>H e12 +
      (?a' *\<^sub>H ba + ?b' *\<^sub>H e1 + ?c' *\<^sub>H e2 +
       ?d' *\<^sub>H e12) =
      (?a + ?a') *\<^sub>H ba + (?b + ?b') *\<^sub>H e1 +
      (?c + ?c') *\<^sub>H e2 +
      (?d + ?d') *\<^sub>H e12",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 7),
                         template_hole 4)),
                     template_app
                      (template_app (template_hole 5, template_var 6),
                       template_hole 3))),
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_hole 2))),
             template_app
              (template_app (template_hole 5, template_var 4),
               template_hole 1))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_hole 4)),
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 3))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 2))),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 1))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 3)),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 2)),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1)),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0)),
           template_hole 1)))),
    ("Hyperdual.inverse_hyperdual_parts",
     "inverse
       (?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
        ?d *\<^sub>H e12) =
      ((1::?'a) / ?a) *\<^sub>H ba + (- ?b / ?a\<^sup>2) *\<^sub>H e1 +
      (- ?c / ?a\<^sup>2) *\<^sub>H e2 +
      ((2::?'a) * (?b * ?c / ?a ^ 3) - ?d / ?a\<^sup>2) *\<^sub>H e12",
     template_equation
      (template_app
        (template_hole 17,
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 3),
                       template_hole 14)),
                   template_app
                    (template_app (template_hole 15, template_var 2),
                     template_hole 13))),
               template_app
                (template_app (template_hole 15, template_var 1),
                 template_hole 12))),
           template_app
            (template_app (template_hole 15, template_var 0),
             template_hole 11))),
       template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_var 3)),
                     template_hole 14)),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 8, template_var 2)),
                       template_app
                        (template_app (template_hole 7, template_var 3),
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5, template_hole 4))))),
                   template_hole 13))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 8, template_var 1)),
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))))),
               template_hole 12))),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 5, template_hole 4))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 0, template_hole 4)))))),
               template_app
                (template_app (template_hole 10, template_var 0),
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)))))),
           template_hole 11)))),
    ("Hyperdual.hyperdual_power",
     "?x ^ ?n =
      Hyperdual (Base ?x ^ ?n) (Eps1 ?x * of_nat ?n * Base ?x ^ (?n - 1))
       (Eps2 ?x * of_nat ?n * Base ?x ^ (?n - 1))
       (Eps12 ?x * of_nat ?n * Base ?x ^ (?n - 1) +
        Eps1 ?x * Eps2 ?x * of_nat ?n * of_nat (?n - 1) *
        Base ?x ^ (?n - 2))",
     template_equation
      (template_app
        (template_app (template_hole 14, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_var 1)),
                   template_app (template_hole 8, template_var 0))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_var 1)),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 8, template_var 0))),
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 1)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6)))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 3, template_var 1)),
                   template_app (template_hole 8, template_var 0))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_var 1)),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 9, template_var 1)),
                         template_app (template_hole 5, template_var 1))),
                     template_app (template_hole 8, template_var 0))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_hole 6)))),
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 1)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Hyperdual.times_hyperdual_parts",
     "(?a *\<^sub>H ba + ?b *\<^sub>H e1 + ?c *\<^sub>H e2 +
       ?d *\<^sub>H e12) *
      (?a' *\<^sub>H ba + ?b' *\<^sub>H e1 + ?c' *\<^sub>H e2 +
       ?d' *\<^sub>H e12) =
      (?a * ?a') *\<^sub>H ba + (?a * ?b' + ?b * ?a') *\<^sub>H e1 +
      (?a * ?c' + ?c * ?a') *\<^sub>H e2 +
      (?a * ?d' + ?b * ?c' + ?c * ?b' + ?d * ?a') *\<^sub>H e12",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_var 7),
                         template_hole 5)),
                     template_app
                      (template_app (template_hole 6, template_var 6),
                       template_hole 4))),
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_hole 3))),
             template_app
              (template_app (template_hole 6, template_var 4),
               template_hole 2))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_hole 4))),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 3))),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 3)),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 1, template_var 7),
                           template_var 2)),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 3))),
                   template_hole 4))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3))),
               template_hole 3))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 1, template_var 7),
                           template_var 0)),
                       template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 1))),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 2))),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3))),
           template_hole 2))))]:
   (string * thm * template) list
### theory "Draft.HyperdualMoreTemplates"
### 4.130s elapsed time, 12.021s cpu time, 10.260s GC time
val it = (): unit
