   [("Goodstein_Lambda.evalO_\<omega>", "evalO ?b \<omega> = ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Goodstein_Lambda.O2C_C2O", "O2C (C2O ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Goodstein_Lambda.addO_Z", "addO Z ?n = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Goodstein_Lambda.funC_ne", "funC ?m (Suc ?n) ~= []",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Goodstein_Lambda.hbase_extp_hbase_ext_eq",
     "hbase_extp ?b = (%x. x : hbase_ext ?b)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("Goodstein_Lambda.hbasep_hbase_eq", "hbasep ?b = (%x. x : hbase ?b)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("Goodstein_Lambda.sum_list_replicate",
     "sum_list (replicate ?n ?x) = ?n * ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Goodstein_Lambda.evalO_n", "evalO ?b ((S ^^ ?n) Z) = ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)),
       template_var 0)),
    ("Goodstein_Lambda.N2H_0", "N2H (Suc (Suc ?c)) 0 = C []",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 3, template_var 0))),
         template_hole 2),
       template_app (template_hole 1, template_hole 0))),
    ("Goodstein_Lambda.evalO_exp\<omega>",
     "evalO ?b (exp\<omega> ?n) = ?b ^ evalO ?b ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Goodstein_Lambda.exp\<omega>_addO",
     "exp\<omega> (addO ?n ?m) = mulO (exp\<omega> ?n) (exp\<omega> ?m)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Goodstein_Lambda.C2O_inj", "C2O ?n = C2O ?m ==> ?n = ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Goodstein_Lambda.H2N_inv",
     "H2N (Suc (Suc ?b)) (N2H (Suc (Suc ?b)) ?n) = ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_var 1))),
           template_var 0)),
       template_var 0)),
    ("Goodstein_Lambda.addO_assoc",
     "addO ?n (addO ?m ?p) = addO (addO ?n ?m) ?p",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Goodstein_Lambda.mulO_assoc",
     "mulO ?n (mulO ?m ?p) = mulO (mulO ?n ?m) ?p",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Goodstein_Lambda.hbase_mono", "?n : hbase ?b ==> ?n : hbase (Suc ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Goodstein_Lambda.evalO_addO",
     "evalO ?b (addO ?n ?m) = evalO ?b ?n + evalO ?b ?m",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Goodstein_Lambda.evalO_mulO",
     "evalO ?b (mulO ?n ?m) = evalO ?b ?n * evalO ?b ?m",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Goodstein_Lambda.evalC_funC",
     "evalC ?b (C (funC ?n ?b)) = evalC ?b (C [?n])",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Goodstein_Lambda.C2O_app",
     "C2O (C (?xs @ ?ys)) = addO (C2O (C ?ys)) (C2O (C ?xs))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 1))))),
    ("Goodstein_Lambda.mul0_distrib",
     "mulO ?n (addO ?p ?q) = addO (mulO ?n ?p) (mulO ?n ?q)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Goodstein_Lambda.evalC_surjective",
     "EX n':hbase (Suc (Suc ?b)). evalC (Suc (Suc ?b)) n' = ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_var 1)))),
           t_empty)
         )),
    ("Goodstein_Lambda.N2H_inv",
     "?n : hbase ?b ==> N2H ?b (H2N ?b ?n) = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Goodstein_Lambda.hbase_hd'",
     "C (?n # ?ns) : hbase ?b ==> ?n : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Goodstein_Lambda.hbase_ext_hd'",
     "C (?n # ?ns) : hbase_ext ?b ==> ?n : hbase_ext ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Goodstein_Lambda.evalC_sum_list",
     "evalC ?b (C ?ns) = (SUM n<-?ns. ?b ^ evalC ?b n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("Goodstein_Lambda.C2O_replicate",
     "C2O (C (replicate ?i ?n)) =
      mulO (exp\<omega> (C2O ?n)) ((S ^^ ?i) Z)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 7, template_var 0))),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_hole 0)))),
    ("Goodstein_Lambda.N2H_nz", "0 < ?n ==> N2H (Suc (Suc ?c)) ?n ~= C []",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 2, template_var 0))),
               template_var 1),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Goodstein_Lambda.hbase_tl'",
     "C (?n # ?ns) : hbase ?b ==> C ?ns : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Goodstein_Lambda.hbase_ext_tl'",
     "C (?n # ?ns) : hbase_ext ?b ==> C ?ns : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Goodstein_Lambda.addO_exp\<omega>_inj",
     "addO ?n (exp\<omega> ?m) = addO ?n' (exp\<omega> ?m') ==> ?m = ?m'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app (template_hole 0, template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_var 0)))],
       template_equation (template_var 2, template_var 0))),
    ("Goodstein_Lambda.addO_exp\<omega>_inj",
     "addO ?n (exp\<omega> ?m) = addO ?n' (exp\<omega> ?m') ==> ?n = ?n'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app (template_hole 0, template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_var 0)))],
       template_equation (template_var 3, template_var 1))),
    ("Goodstein_Lambda.evalC_replicate",
     "evalC ?b (C (replicate ?c ?n)) = ?c * evalC ?b (C [?n])",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Goodstein_Lambda.evalC_app",
     "evalC ?b (C (?ns @ ?ms)) = evalC ?b (C ?ns) + evalC ?b (C ?ms)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 0))))),
    ("Goodstein_Lambda.stepC_sound",
     "?n : hbase_ext (Suc (Suc ?c)) ==> stepC ?c ?n : hbase (Suc (Suc ?c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 2, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("Goodstein_Lambda.add\<^sub>O",
     "\<langle>addO ?n ?m\<rangle>\<^sub>O =
      (%z s l.
          \<langle>?m\<rangle>\<^sub>O (\<langle>?n\<rangle>\<^sub>O z s l)
           s l)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       t_empty)),
    ("Goodstein_Lambda.hbase_singletonI",
     "?n : hbase (Suc (Suc ?b)) ==> C [?n] : hbase (Suc (Suc ?b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 3, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 3, template_var 0))))
           ))),
    ("Goodstein_Lambda.hbase_elt",
     "[| C ?ns : hbase ?b; ?n : set ?ns |] ==> ?n : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Goodstein_Lambda.mul\<^sub>O",
     "\<langle>mulO ?n ?m\<rangle>\<^sub>O =
      (%z s l.
          \<langle>?m\<rangle>\<^sub>O z
           (%m. \<langle>?n\<rangle>\<^sub>O m s l) l)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       t_empty)),
    ("Goodstein_Lambda.goodstein_impl",
     "?c ~= 0 ==> goodstein ?c ?n = goodsteinO ?c (C2O (N2H (?c + 1) ?n))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_var 0)))))),
    ("Goodstein_Lambda.hbase_hd",
     "[| C ?ns : hbase ?b; ?ns ~= [] |] ==> hd ?ns : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 4, template_var 0))
           ))),
    ("Goodstein_Lambda.hbase_tl",
     "[| C ?ns : hbase ?b; ?ns ~= [] |] ==> C (tl ?ns) : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 4, template_var 0))
           ))),
    ("Goodstein_Lambda.hbase_ext_tl",
     "[| C ?ns : hbase_ext ?b; ?ns ~= [] |] ==> C (tl ?ns) : hbase ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app (template_hole 5, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 1, template_var 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Goodstein_Lambda.stepC_dec",
     "?n ~= C [] ==>
      Suc (evalC (Suc (Suc ?c)) (stepC ?c ?n)) = evalC (Suc (Suc ?c)) ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 5, template_hole 4))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 2,
               template_app (template_hole 2, template_var 0))),
           template_var 1)))),
    ("Goodstein_Lambda.stepC_app",
     "?n ~= C [] ==>
      stepC ?c (C (unC ?n @ ?ns)) = C (unC (stepC ?c ?n) @ ?ns)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 2,
              template_app (template_hole 4, template_hole 3))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))),
             template_var 0))))),
    ("Goodstein_Lambda.stepC_cons",
     "?ns ~= [] ==>
      stepC ?c (C (?n # ?ns)) = C (unC (stepC ?c (C [?n])) @ ?ns)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_hole 6))))),
             template_var 2))))),
    ("Goodstein_Lambda.goodstein\<^sub>O",
     "goodsteinO ?c ?n =
      \<langle>?n\<rangle>\<^sub>O (%x. x) (%n m. n (m + 1))
       (%f m. f (m + 2) m) ?c",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 0), t_empty),
             t_empty),
           t_empty),
         template_var 1))),
    ("Goodstein_Lambda.C2O_cons",
     "C2O (C (?n # ?ns)) =
      (if ?n = C [] then S (C2O (C ?ns))
       else L (%i. C2O (C (funC ?n i @ ?ns))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 8, template_hole 4))),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 0)))),
             template_app (template_hole 2, t_empty))
           ))),
    ("Goodstein_Lambda.stepC_dec'",
     "?n ~= C [] ==> evalC (?c + 3) (stepC ?c ?n) < evalC (?c + 3) ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 8, template_hole 7))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_var 1)))),
    ("Goodstein_Lambda.N2H_eqI",
     "[| ?n : hbase (Suc (Suc ?b)); H2N (Suc (Suc ?b)) ?n = ?m |]
      ==> N2H (Suc (Suc ?b)) ?m = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 4, template_var 1))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_hole 4,
                template_app (template_hole 4, template_var 1))),
            template_var 2),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4,
               template_app (template_hole 4, template_var 1))),
           template_var 0),
         template_var 2))),
    ("Goodstein_Lambda.evalC_inj_on_hbase",
     "[| ?n : hbase ?b; ?m : hbase ?b; evalC ?b ?n = evalC ?b ?m |]
      ==> ?n = ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation (template_var 2, template_var 0))),
    ("Goodstein_Lambda.exp\<omega>\<^sub>O",
     "\<langle>exp\<omega> ?n\<rangle>\<^sub>O =
      (%z s l.
          \<langle>?n\<rangle>\<^sub>O s
           (%x z. l (%n. \<langle>n\<rangle>\<^sub>N x z))
           (%f z. l (%n. f n z)) z)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       t_empty)),
    ("Goodstein_Lambda.N2H_neI",
     "[| ?n : hbase (Suc (Suc ?b)); H2N (Suc (Suc ?b)) ?n ~= ?m |]
      ==> N2H (Suc (Suc ?b)) ?m ~= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 5, template_var 1))))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 5, template_var 1))),
                template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 5, template_var 1))),
               template_var 0),
             template_var 2)
           ))),
    ("Goodstein_Lambda.hbase_funC",
     "[| ?c ~= 0; C (?n # ?ns) : hbase_ext (Suc ?c) |]
      ==> C (funC ?n (Suc ?c) @ ?ns) : hbase_ext (Suc ?c)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_app (template_hole 2, template_var 2))),
                   template_var 0))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)))
           ))),
    ("Goodstein_Lambda.hbase_evalC_mono",
     "[| ?n : hbase ?b; ?m : hbase ?b; evalC ?b ?n < evalC ?b ?m |]
      ==> evalC (Suc ?b) ?n < evalC (Suc ?b) ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Goodstein_Lambda.freeOrd",
     "[| !!n. ?h (?s n) = ?s' (?h n); !!f. ?h (?l f) = ?l' (%i. ?h (f i)) |]
      ==> ?h (\<langle>?n\<rangle>\<^sub>O ?z ?s ?l) =
          \<langle>?n\<rangle>\<^sub>O (?h ?z) ?s' ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app
          (template_var 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_var 5),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_var 6, template_var 0)),
             template_var 4),
           template_var 2)))),
    ("Goodstein_Lambda.goodstein_aux",
     "goodsteinC (Suc ?c) (N2H (Suc (Suc ?c)) (Suc ?n)) =
      goodsteinC (?c + 2)
       (N2H (?c + 3) (H2N (?c + 3) (N2H (?c + 2) (?n + 1)) - 1))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 1)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 9,
               template_app (template_hole 9, template_var 1))),
           template_app (template_hole 9, template_var 0))),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_hole 6,
                 template_app (template_hole 3, template_hole 4)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 3, template_hole 4)))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)))),
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_hole 0)))),
             template_hole 0))))),
    ("Goodstein_Lambda.hbaseI2",
     "[| ?i < ?b; ?n : hbase ?b; C ?m : hbase ?b;
         !!m'. m' : set ?m ==> evalC ?b ?n < evalC ?b m' |]
      ==> C (replicate ?i ?n @ ?m) : hbase ?b",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)),
                   template_var 0))),
             template_app (template_hole 6, template_var 2))
           ))),
    ("Goodstein_Lambda.C_Ord_induct",
     "[| ?P (C []); !!ns. ?P (C ns) ==> ?P (C (C [] # ns));
         !!n ns ms.
            (!!i. ?P (C (funC (C (n # ns)) i @ ms))) ==>
            ?P (C (C (n # ns) # ms)) |]
      ==> ?P ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 7, template_hole 6))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Goodstein_Lambda.base_red",
     "[| !!n'. n' : set ?ns ==> ?n < n'; ?i < ?b; ?i ~= 0;
         !!m'. m' : set ?ms ==> ?m < m'; ?j < ?b; ?j ~= 0;
         ?i * ?b ^ ?n + sum_list (map ((^) ?b) ?ns) =
         ?j * ?b ^ ?m + sum_list (map ((^) ?b) ?ms) |]
      ==> ?i = ?j & ?n = ?m",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation (less_than, template_var 4, template_var 3),
        template_negation
         (template_equation (template_var 4, template_hole 6)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_inequation (less_than, template_var 0, template_var 3),
        template_negation
         (template_equation (template_var 0, template_hole 6)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 5))),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, t_empty), template_var 6))),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1))),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, t_empty),
                template_var 2))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 7, template_var 5),
               template_var 1))
           )))]
