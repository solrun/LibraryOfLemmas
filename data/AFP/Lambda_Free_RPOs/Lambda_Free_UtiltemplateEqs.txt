   [("Lambda_Free_Util.Least_eq", "(LEAST y. y = ?x) = ?x",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Lambda_Free_Util.in_lists_iff_set",
     "(?xs : lists ?A) = (set ?xs <= ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Lambda_Free_Util.finite_set_fold_singleton",
     "Finite_Set.fold ?f ?z {?x} = ?f ?x ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_var 2, template_var 0), template_var 1))),
    ("Lambda_Free_Util.fold_mset_singleton",
     "fold_mset ?f ?z {#?x#} = ?f ?x ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_var 2, template_var 0), template_var 1))),
    ("Lambda_Free_Util.rev_in_lists",
     "(rev ?xs : lists ?A) = (?xs : lists ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.enat_diff_diff_eq", "?k - ?m - ?n = ?k - (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lambda_Free_Util.butlast_append_Cons",
     "butlast (?xs @ ?y # ?ys) = ?xs @ butlast (?y # ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Lambda_Free_Util.enat_mult_minus_distrib",
     "enat ?x * (?y - ?z) = enat ?x * ?y - enat ?x * ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("Lambda_Free_Util.filter_filter_mset",
     "filter_mset ?P (filter_mset ?Q ?M) = {#x :# ?M. ?P x & ?Q x#}",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Lambda_Free_Util.nonempty_subseteq_mset_iff_singleton",
     "(?M ~= {#} & ?M <=# {#?x#} & ?P) = (?M = {#?x#} & ?P)",
     template_bimplication (template_dunno, template_dunno)),
    ("Lambda_Free_Util.zip_append_0_upt",
     "zip (?xs @ ?ys) [0..<length ?xs + length ?ys] =
      zip ?xs [0..<length ?xs] @
      zip ?ys [length ?xs..<length ?xs + length ?ys]",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 1, template_var 1)))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 1, template_var 0)))))))]
