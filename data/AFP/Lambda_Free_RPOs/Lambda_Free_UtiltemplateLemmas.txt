   [("Lambda_Free_Util.enat_the_enat_le", "enat (the_enat ?x) <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Lambda_Free_Util.Least_eq", "(LEAST y. y = ?x) = ?x",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("Lambda_Free_Util.enat_the_enat_minus_le",
     "enat (the_enat (?x - ?y)) <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_var 1)),
    ("Lambda_Free_Util.in_lists_iff_set",
     "(?xs : lists ?A) = (set ?xs <= ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Lambda_Free_Util.finite_set_fold_singleton",
     "Finite_Set.fold ?f ?z {?x} = ?f ?x ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_var 2, template_var 0), template_var 1))),
    ("Lambda_Free_Util.fold_mset_singleton",
     "fold_mset ?f ?z {#?x#} = ?f ?x ?z",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_var 2, template_var 0), template_var 1))),
    ("Lambda_Free_Util.rev_in_lists",
     "(rev ?xs : lists ?A) = (?xs : lists ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.Least_eq_0_enat", "?P 0 ==> (LEAST x. ?P x) = 0",
     template_implication
      ([template_predicate
         (template_app (template_var 0, template_hole 2))],
       template_equation
        (template_app (template_hole 0, t_empty), template_hole 2))),
    ("Lambda_Free_Util.enat_le_imp_minus_le", "?k <= ?m ==> ?k - ?n <= ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Lambda_Free_Util.irrefl_trans_imp_antisym",
     "[| irrefl ?r; trans ?r |] ==> antisym ?r",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.irreflp_transp_imp_antisymP",
     "[| irreflp ?p; transp ?p |] ==> antisymp ?p",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.enat_diff_diff_eq", "?k - ?m - ?n = ?k - (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lambda_Free_Util.enat_the_enat_iden",
     "?n ~= \<infinity> ==> enat (the_enat ?n) = ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Lambda_Free_Util.count_gt_imp_in_mset",
     "?n < count ?M ?x ==> ?x :# ?M",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Lambda_Free_Util.wfP_app", "wfP ?p ==> wfP (%x y. ?p (?f x) (?f y))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Lambda_Free_Util.add_mset_lt_left_lt",
     "?a < ?b ==> add_mset ?a ?A < add_mset ?b ?A",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lambda_Free_Util.add_mset_lt_right_lt",
     "?A < ?B ==> add_mset ?a ?A < add_mset ?a ?B",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Lambda_Free_Util.add_mset_le_left_le",
     "?a <= ?b ==> add_mset ?a ?A <= add_mset ?b ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lambda_Free_Util.enat_sub_add_same", "?n <= ?m ==> ?m = ?m - ?n + ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("Lambda_Free_Util.add_mset_le_right_le",
     "?A <= ?B ==> add_mset ?a ?A <= add_mset ?a ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Lambda_Free_Util.Max_in_mset", "?M ~= {#} ==> Max_mset ?M :# ?M",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lambda_Free_Util.hd_in_set", "length ?xs ~= 0 ==> hd ?xs : set ?xs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lambda_Free_Util.butlast_append_Cons",
     "butlast (?xs @ ?y # ?ys) = ?xs @ butlast (?y # ?ys)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Lambda_Free_Util.relcomp_subset_left_imp_relcomp_trancl_subset_left",
     "?R O ?S <= ?R ==> ?R O ?S^* <= ?R",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Lambda_Free_Util.finite_irrefl_trans_imp_wf",
     "[| finite ?r; irrefl ?r; trans ?r |] ==> wf ?r",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.enat_mult_minus_distrib",
     "enat ?x * (?y - ?z) = enat ?x * ?y - enat ?x * ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0)))),
    ("Lambda_Free_Util.wf_app", "wf ?r ==> wf {(x, y). (?f x, ?f y) : ?r}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty)))
           ))),
    ("Lambda_Free_Util.add_diff_assoc2_enat",
     "?n <= ?m ==> ?m - ?n + ?p = ?m + ?p - ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Lambda_Free_Util.the_enat_minus_nat",
     "?m ~= \<infinity> ==> the_enat (?m - enat ?n) = the_enat ?m - ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Lambda_Free_Util.size_filter_ne_elem",
     "?x :# ?M ==> size {#y :# ?M. y ~= ?x#} < size ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Lambda_Free_Util.prod_list_nonneg",
     "(!!x. x : set ?xs ==> (0::?'a) <= x) ==> (0::?'a) <= prod_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.add_mset_lt_lt_lt",
     "[| ?a < ?b; ?A < ?B |] ==> add_mset ?a ?A < add_mset ?b ?B",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Lambda_Free_Util.add_mset_lt_lt_le",
     "[| ?a < ?b; ?A <= ?B |] ==> add_mset ?a ?A < add_mset ?b ?B",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Lambda_Free_Util.add_mset_lt_le_lt",
     "[| ?a <= ?b; ?A < ?B |] ==> add_mset ?a ?A < add_mset ?b ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Lambda_Free_Util.add_mset_le_le_le",
     "[| ?a <= ?b; ?A <= ?B |] ==> add_mset ?a ?A <= add_mset ?b ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Lambda_Free_Util.filter_filter_mset",
     "filter_mset ?P (filter_mset ?Q ?M) = {#x :# ?M. ?P x & ?Q x#}",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Lambda_Free_Util.size_lt_imp_ex_count_lt",
     "size ?M < size ?N ==> \<exists>x:#?N. count ?M x < count ?N x",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             t_empty)
           ))),
    ("Lambda_Free_Util.nonempty_subseteq_mset_eq_singleton",
     "[| ?M ~= {#}; ?M <=# {#?x#} |] ==> ?M = {#?x#}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_hole 2))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_hole 2)))),
    ("Lambda_Free_Util.Max_lt_imp_lt_mset",
     "[| ?N ~= {#}; Max_mset ?M < Max_mset ?N |] ==> ?M < ?N",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_inequation
         (less_than,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 1)))],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Lambda_Free_Util.nonempty_subseteq_mset_iff_singleton",
     "(?M ~= {#} & ?M <=# {#?x#} & ?P) = (?M = {#?x#} & ?P)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_hole 2))),
               template_var 0))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_hole 2))),
             template_var 0)
           ))),
    ("Lambda_Free_Util.size_filter_unsat_elem",
     "[| ?x :# ?M; ~ ?P ?x |] ==> size (filter_mset ?P ?M) < size ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("Lambda_Free_Util.finite_irreflp_transp_imp_wfp",
     "[| finite {(x, y). ?p x y}; irreflp ?p; transp ?p |] ==> wfP ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_hole 4, template_app (template_hole 3, t_empty)))
            ),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.sum_list_ge_length_times",
     "ALL i<length ?xs. ?a <= ?xs ! i ==>
      of_nat (length ?xs) * ?a <= sum_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 5, template_var 1))),
           template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Lambda_Free_Util.size_eq_ex_count_lt",
     "[| size ?M = size ?N; ?M ~= ?N |] ==> EX x. count ?M x < count ?N x",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lambda_Free_Util.funpow_less_iter",
     "[| !!k. k < ?f k; ?m < ?n |] ==> (?f ^^ ?m) ?k < (?f ^^ ?n) ?k",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Lambda_Free_Util.funpow_lesseq_iter",
     "[| !!k. k <= ?f k; ?m <= ?n |] ==> (?f ^^ ?m) ?k <= (?f ^^ ?n) ?k",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Lambda_Free_Util.enat_le_minus_1_imp_lt",
     "[| ?m <= ?n - 1; ?n ~= \<infinity>; ?n ~= 0 |] ==> ?m < ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Lambda_Free_Util.wfP_exists_minimal",
     "[| wfP ?p; ?Q ?x |]
      ==> EX x. ?Q x & (ALL y. ?p (?f y) (?f x) --> ~ ?Q y)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_var 2, template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lambda_Free_Util.Least_in_nonempty_set_imp_ex",
     "[| ?A ~= {}; ?P (LEAST y. EX x:?A. y = ?f x) |]
      ==> EX x:?A. ?P (?f x)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_predicate
         (
            template_app
             (template_var 1, template_app (template_hole 2, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Lambda_Free_Util.hd_le_sum_list",
     "[| ?xs ~= []; ALL i<length ?xs. (0::?'a) <= ?xs ! i |]
      ==> hd ?xs <= sum_list ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Lambda_Free_Util.wf_exists_minimal",
     "[| wf ?r; ?Q ?x |]
      ==> EX x. ?Q x & (ALL y. (?f y, ?f x) : ?r --> ~ ?Q y)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_var 2, template_var 1))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Lambda_Free_Util.finite_nonempty_ex_succ_imp_cyclic",
     "[| finite ?A; ?A ~= {}; ALL x:?A. EX y:?A. (y, x) : ?r |]
      ==> ~ acyclic ?r",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Lambda_Free_Util.count_image_mset_lt_imp_lt",
     "count (image_mset ?f ?M) ?b < count (image_mset ?f ?N) ?b ==>
      EX x. ?f x = ?b & count ?M x < count ?N x",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0)),
            template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Lambda_Free_Util.f_chain_in_rtrancl",
     "[| ?m <= ?n; ALL i:{?m..<?n}. (?f i, ?f (Suc i)) : ?R |]
      ==> (?f ?m, ?f ?n) : ?R^*",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 1, template_var 3)),
                 template_app (template_var 1, template_var 2))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lambda_Free_Util.f_rev_chain_in_rtrancl",
     "[| ?m <= ?n; ALL i:{?m..<?n}. (?f (Suc i), ?f i) : ?R |]
      ==> (?f ?n, ?f ?m) : ?R^*",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 1, template_var 2)),
                 template_app (template_var 1, template_var 3))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lambda_Free_Util.zip_append_0_upt",
     "zip (?xs @ ?ys) [0..<length ?xs + length ?ys] =
      zip ?xs [0..<length ?xs] @
      zip ?ys [length ?xs..<length ?xs + length ?ys]",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 1, template_var 1)))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 1, template_var 0))))))),
    ("Lambda_Free_Util.zip_eq_butlast_last",
     "[| 0 < length ?xs; length ?xs = length ?ys |]
      ==> zip ?xs ?ys =
          zip (butlast ?xs) (butlast ?ys) @ [(last ?xs, last ?ys)]",
     template_implication
      ([template_inequation
         (less_than, template_hole 13,
          template_app (template_hole 12, template_var 1)),
        template_equation
         (template_app (template_hole 12, template_var 1),
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 6, template_var 1)),
               template_app (template_hole 5, template_var 0))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_hole 0))))),
    ("Lambda_Free_Util.count_image_mset_le_imp_lt",
     "[| count (image_mset ?f ?M) (?f ?a)
         <= count (image_mset ?f ?N) (?f ?a);
         count ?N ?a < count ?M ?a |]
      ==> EX b. ?f b = ?f ?a & count ?M b < count ?N b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2)),
            template_app (template_var 3, template_var 1)),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 0)),
            template_app (template_var 3, template_var 1))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lambda_Free_Util.count_image_mset_lt_imp_lt_raw",
     "[| finite ?A; ?A = set_mset ?M Un set_mset ?N;
         count (image_mset ?f ?M) ?b < count (image_mset ?f ?N) ?b |]
      ==> EX x. ?f x = ?b & count ?M x < count ?N x",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 7, template_var 2))),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3)),
            template_var 0),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 2)),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Lambda_Free_Util.wf_infinite_down_chain_compatible",
     "[| wf ?R; ALL i. (?f (Suc i), ?f i) : ?R Un ?S; ?R O ?S <= ?R |]
      ==> EX k. ALL i. (?f (Suc (i + k)), ?f (i + k)) : ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 0),
          template_var 2)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lambda_Free_Util.rev_induct2",
     "[| length ?xs = length ?ys; ?P [] [];
         !!x xs y ys.
            [| length xs = length ys; ?P xs ys |]
            ==> ?P (xs @ [x]) (ys @ [y]) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Lambda_Free_Util.count_image_mset_le_imp_lt_raw",
     "[| finite ?A; ?A = set_mset ?M Un set_mset ?N;
         count (image_mset ?f ?M) (?f ?a) + count ?N ?a
         < count (image_mset ?f ?N) (?f ?a) + count ?M ?a |]
      ==> EX b. ?f b = ?f ?a & count ?M b < count ?N b",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app (template_hole 8, template_var 2))),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 3)),
                template_app (template_var 1, template_var 0))),
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 2)),
                template_app (template_var 1, template_var 0))),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)))],
       template_predicate (template_app (template_hole 2, t_empty))))]
