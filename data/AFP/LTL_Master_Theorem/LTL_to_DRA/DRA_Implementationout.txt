Loading theory "Draft.Quotient_Type" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.DRA_ImplementationTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Omega_Words_Fun_Stream" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.DRA_ImplementationTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
locale quotient
  fixes eq :: "'a => 'a => bool"
    and Rep :: "'b => 'a"
    and Abs :: "'a => 'b"
  assumes "Quotient_Type.quotient eq Rep Abs"
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
### theory "Draft.Quotient_Type"
### 0.037s elapsed time, 0.182s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.DRA_ImplementationTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.142s elapsed time, 0.576s cpu time, 0.051s GC time
Loading theory "Draft.Syntactic_Fragments_and_Stability" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction" via "Draft.Transition_Functions" via "Draft.After")
### theory "Draft.Omega_Words_Fun_Stream"
### 0.214s elapsed time, 0.871s cpu time, 0.051s GC time
### theory "HOL-Library.Set_Algebras"
### 0.225s elapsed time, 0.916s cpu time, 0.051s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.DRA_ImplementationTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.732s elapsed time, 2.245s cpu time, 0.380s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.921s elapsed time, 5.306s cpu time, 1.114s GC time
Loading theory "Draft.Templates" (required by "Draft.DRA_ImplementationTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.124s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.DRA_ImplementationTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.723s elapsed time, 1.821s cpu time, 0.743s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Syntactic_Fragments_and_Stability"
### 3.055s elapsed time, 7.464s cpu time, 1.863s GC time
Loading theory "Draft.After" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction" via "Draft.Transition_Functions")
consts
  af_letter :: "'a ltln => 'a set => 'a ltln"
locale af_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "af_congruent (\<sim>)"
locale ltl_equivalence
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "ltl_equivalence (\<sim>)"
### theory "Draft.After"
### 0.376s elapsed time, 0.423s cpu time, 0.058s GC time
Loading theory "Draft.Advice" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction" via "Draft.Transition_Functions")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale GF_advice_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "GF_advice_congruent (\<sim>) normalise"
### theory "Draft.Advice"
### 0.770s elapsed time, 0.951s cpu time, 0.150s GC time
Loading theory "Draft.Master_Theorem" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "Draft.Transition_Functions" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
locale transition_functions
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "transition_functions (\<sim>) normalise"
### theory "Draft.Master_Theorem"
### 0.352s elapsed time, 1.097s cpu time, 0.912s GC time
Loading theory "Draft.Restricted_Master_Theorem" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
locale transition_functions_size
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "transition_functions_size (\<sim>) normalise"
### theory "Draft.Transition_Functions"
### 0.530s elapsed time, 1.476s cpu time, 0.956s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Restricted_Master_Theorem"
### 0.511s elapsed time, 0.781s cpu time, 0.122s GC time
Loading theory "Draft.DRA_Construction" (required by "Draft.DRA_ImplementationTemplates" via "Draft.DRA_Implementation")
locale dra_construction
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
    and Rep :: "'ltlq => 'a ltln"
    and Abs :: "'a ltln => 'ltlq"
  assumes "dra_construction (\<sim>) normalise Rep Abs"
locale dra_construction_size
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
    and Rep :: "'b => 'a ltln"
    and Abs :: "'a ltln => 'b"
  assumes "dra_construction_size (\<sim>) normalise Rep Abs"
### theory "Draft.DRA_Construction"
### 2.033s elapsed time, 2.172s cpu time, 0.194s GC time
Loading theory "Draft.DRA_Implementation" (required by "Draft.DRA_ImplementationTemplates")
Found termination order: "size <*mlex*> {}"
locale dra_implementation
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
    and Rep :: "'ltlq => 'a ltln"
    and Abs :: "'a ltln => 'ltlq"
  assumes "dra_implementation (\<sim>) normalise Rep Abs"
### theory "Draft.DRA_Implementation"
### 3.507s elapsed time, 3.815s cpu time, 0.385s GC time
Loading theory "Draft.DRA_ImplementationTemplates"
val templateLemmas =
   [("DRA_Implementation.atoms_ltlc_list_distinct",
     "distinct (atoms_ltlc_list ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("DRA_Implementation.atoms_ltlc_list_set",
     "set (atoms_ltlc_list ?\<phi>) = atoms_ltlc ?\<phi>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("DRA_Implementation.dra_to_drai_language",
     "set ?\<Sigma> = dra.alphabet ?\<AA> ==>
      DRA.language (drai_dra (dra_to_drai ?\<AA> ?\<Sigma>)) =
      DRA.language ?\<AA>",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app (template_hole 2, template_var 0)))),
    ("DRA_Implementation.dra_to_drai_rel",
     "(?\<Sigma>, dra.alphabet ?A) : \<langle>Id\<rangle>list_set_rel ==>
      (dra_to_drai ?A ?\<Sigma>, ?A) : \<langle>Id,
      Id\<rangle>drai_dra_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_app (template_hole 10, template_var 0))),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 7)),
               template_hole 0))
           ))),
    ("DRA_Implementation.draei_language_rel",
     "[| (?\<Sigma>, dra.alphabet ?A) : \<langle>Id\<rangle>list_set_rel;
         finite (DRA.nodes ?A); is_valid_def_hm_size TYPE(?'state) ?hms |]
      ==> DRA.language
           (drae_dra
             (draei_drae (drai_to_draei ?hms (dra_to_drai ?A ?\<Sigma>)))) =
          DRA.language ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 2),
                  template_app (template_hole 14, template_var 1))),
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_hole 11))
            ),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2))))),
         template_app (template_hole 0, template_var 1))))]:
   (string * thm * template) list
### theory "Draft.DRA_ImplementationTemplates"
### 3.272s elapsed time, 3.753s cpu time, 0.390s GC time
val it = (): unit
