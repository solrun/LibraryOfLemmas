Loading theory "Draft.Quotient_Type" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Code_ExportTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Omega_Words_Fun_Stream" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Code_ExportTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
locale quotient
  fixes eq :: "'a => 'a => bool"
    and Rep :: "'b => 'a"
    and Abs :: "'a => 'b"
  assumes "Quotient_Type.quotient eq Rep Abs"
### theory "Draft.Quotient_Type"
### 0.044s elapsed time, 0.211s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Code_ExportTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.151s elapsed time, 0.619s cpu time, 0.052s GC time
Loading theory "Draft.Syntactic_Fragments_and_Stability" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction" via "Draft.Transition_Functions" via "Draft.After")
### theory "Draft.Omega_Words_Fun_Stream"
### 0.218s elapsed time, 0.889s cpu time, 0.052s GC time
### theory "HOL-Library.Set_Algebras"
### 0.239s elapsed time, 0.951s cpu time, 0.052s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Code_ExportTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.708s elapsed time, 2.136s cpu time, 0.305s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.979s elapsed time, 5.431s cpu time, 1.153s GC time
Loading theory "Draft.Templates" (required by "Draft.Code_ExportTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.130s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Code_ExportTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.800s elapsed time, 2.041s cpu time, 0.847s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Syntactic_Fragments_and_Stability"
### 3.231s elapsed time, 7.852s cpu time, 2.017s GC time
Loading theory "Draft.After" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction" via "Draft.Transition_Functions")
consts
  af_letter :: "'a ltln => 'a set => 'a ltln"
locale af_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "af_congruent (\<sim>)"
locale ltl_equivalence
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "ltl_equivalence (\<sim>)"
### theory "Draft.After"
### 0.404s elapsed time, 0.455s cpu time, 0.065s GC time
Loading theory "Draft.Advice" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction" via "Draft.Transition_Functions")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale GF_advice_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "GF_advice_congruent (\<sim>) normalise"
### theory "Draft.Advice"
### 0.799s elapsed time, 0.991s cpu time, 0.184s GC time
Loading theory "Draft.Master_Theorem" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "Draft.Transition_Functions" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
Loading theory "Draft.Extra_Equivalence_Relations" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation")
locale transition_functions
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "transition_functions (\<sim>) normalise"
### theory "Draft.Master_Theorem"
### 0.347s elapsed time, 1.164s cpu time, 0.888s GC time
Loading theory "Draft.Restricted_Master_Theorem" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation" via "Draft.DRA_Construction")
locale transition_functions_size
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "transition_functions_size (\<sim>) normalise"
Found termination order: "size <*mlex*> {}"
### No map function defined for LTL.ltln. This will cause problems later on.
### theory "Draft.Transition_Functions"
### 0.558s elapsed time, 1.823s cpu time, 0.931s GC time
Found termination order: "size <*mlex*> {}"
instantiation
  ltln\<^sub>Q :: (type) equal
  equal_ltln\<^sub>Q == equal_class.equal ::
    'a ltln\<^sub>Q => 'a ltln\<^sub>Q => bool
### theory "Draft.Extra_Equivalence_Relations"
### 0.693s elapsed time, 2.112s cpu time, 0.990s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Restricted_Master_Theorem"
### 0.504s elapsed time, 1.112s cpu time, 0.102s GC time
Loading theory "Draft.DRA_Construction" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation" via "Draft.DRA_Implementation")
locale dra_construction
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
    and Rep :: "'ltlq => 'a ltln"
    and Abs :: "'a ltln => 'ltlq"
  assumes "dra_construction (\<sim>) normalise Rep Abs"
locale dra_construction_size
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
    and Rep :: "'b => 'a ltln"
    and Abs :: "'a ltln => 'b"
  assumes "dra_construction_size (\<sim>) normalise Rep Abs"
### theory "Draft.DRA_Construction"
### 2.082s elapsed time, 2.303s cpu time, 0.299s GC time
Loading theory "Draft.DRA_Implementation" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export" via "Draft.DRA_Instantiation")
Found termination order: "size <*mlex*> {}"
locale dra_implementation
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
    and Rep :: "'ltlq => 'a ltln"
    and Abs :: "'a ltln => 'ltlq"
  assumes "dra_implementation (\<sim>) normalise Rep Abs"
### theory "Draft.DRA_Implementation"
### 3.567s elapsed time, 3.867s cpu time, 0.377s GC time
Loading theory "Draft.DRA_Instantiation" (required by "Draft.Code_ExportTemplates" via "Draft.Code_Export")
deriving "hashable" instance for type "LTL.ltln"
generating hash-function for type "LTL.ltln"
instantiation
  set :: (hashable) hashable
  hashcode_set == hashcode :: 'a set => uint32
  def_hashmap_size_set == def_hashmap_size :: 'a set itself => nat
instantiation
  fset :: (hashable) hashable
  hashcode_fset == hashcode :: 'a fset => uint32
  def_hashmap_size_fset == def_hashmap_size :: 'a fset itself => nat
instantiation
  ltln\<^sub>P :: (hashable) hashable
  hashcode_ltln\<^sub>P == hashcode :: 'a ltln\<^sub>P => uint32
  def_hashmap_size_ltln\<^sub>P == def_hashmap_size ::
    'a ltln\<^sub>P itself => nat
instantiation
  ltln\<^sub>Q :: (hashable) hashable
  hashcode_ltln\<^sub>Q == hashcode :: 'a ltln\<^sub>Q => uint32
  def_hashmap_size_ltln\<^sub>Q == def_hashmap_size ::
    'a ltln\<^sub>Q itself => nat
to_omega ` DRA.language (ltl_to_dra\<^sub>P ?\<phi>) = language_ltln ?\<phi>
card (DRA.nodes (ltl_to_dra\<^sub>P ?\<phi>))
<= 2 ^ 2 ^ (2 * size ?\<phi> + floorlog 2 (size ?\<phi>) + 4)
to_omega `
DRA.language (drae_dra (draei_drae (ltlc_to_draei\<^sub>P ?\<phi>))) =
language_ltlc ?\<phi> Int {w. range w <= Pow (atoms_ltlc ?\<phi>)}
to_omega ` DRA.language (ltl_to_dra\<^sub>Q ?\<phi>) = language_ltln ?\<phi>
card (DRA.nodes (ltl_to_dra\<^sub>Q ?\<phi>))
<= 2 ^ 2 ^ (2 * size ?\<phi> + floorlog 2 (size ?\<phi>) + 4)
to_omega `
DRA.language (drae_dra (draei_drae (ltlc_to_draei\<^sub>Q ?\<phi>))) =
language_ltlc ?\<phi> Int {w. range w <= Pow (atoms_ltlc ?\<phi>)}
Found termination order: "{}"
### theory "Draft.DRA_Instantiation"
### 4.638s elapsed time, 4.901s cpu time, 0.423s GC time
Loading theory "Draft.Code_Export" (required by "Draft.Code_ExportTemplates")
See theory exports
### theory "Draft.Code_Export"
### 6.955s elapsed time, 7.233s cpu time, 0.326s GC time
Loading theory "Draft.Code_ExportTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Code_ExportTemplates"
### 3.602s elapsed time, 4.195s cpu time, 0.460s GC time
val it = (): unit
