Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Syntactic_Fragments_and_Stability" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.Restricted_Master_Theorem" via "Draft.Master_Theorem" via "Draft.Advice")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.173s elapsed time, 0.689s cpu time, 0.054s GC time
### theory "HOL-Library.Set_Algebras"
### 0.227s elapsed time, 0.851s cpu time, 0.054s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.712s elapsed time, 2.150s cpu time, 0.263s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.940s elapsed time, 5.299s cpu time, 0.890s GC time
Loading theory "Draft.Templates" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.077s elapsed time, 0.189s cpu time, 0.068s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Restricted_Master_TheoremTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.735s elapsed time, 1.834s cpu time, 0.707s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Syntactic_Fragments_and_Stability"
### 3.187s elapsed time, 7.893s cpu time, 1.751s GC time
Loading theory "Draft.After" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.Restricted_Master_Theorem" via "Draft.Master_Theorem" via "Draft.Advice")
consts
  af_letter :: "'a ltln => 'a set => 'a ltln"
locale af_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "af_congruent (\<sim>)"
locale ltl_equivalence
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "ltl_equivalence (\<sim>)"
### theory "Draft.After"
### 0.390s elapsed time, 0.450s cpu time, 0.077s GC time
Loading theory "Draft.Advice" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.Restricted_Master_Theorem" via "Draft.Master_Theorem")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale GF_advice_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
    and normalise :: "'a ltln => 'a ltln"
  assumes "GF_advice_congruent (\<sim>) normalise"
### theory "Draft.Advice"
### 0.752s elapsed time, 0.942s cpu time, 0.177s GC time
Loading theory "Draft.Master_Theorem" (required by "Draft.Restricted_Master_TheoremTemplates" via "Draft.Restricted_Master_Theorem")
### theory "Draft.Master_Theorem"
### 0.073s elapsed time, 0.075s cpu time, 0.000s GC time
Loading theory "Draft.Restricted_Master_Theorem" (required by "Draft.Restricted_Master_TheoremTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Restricted_Master_Theorem"
### 0.678s elapsed time, 1.398s cpu time, 0.956s GC time
Loading theory "Draft.Restricted_Master_TheoremTemplates"
val templateLemmas =
   [("Restricted_Master_Theorem.restricted_advice_sets_not_empty",
     "restricted_advice_sets ?\<phi> ~= []",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Restricted_Master_Theorem.restricted_subformulas_notin",
     "?\<phi> ~: restricted_subformulas ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Restricted_Master_Theorem.restricted_subformulas_subset'",
     "restricted_subformulas ?\<phi>
      <= restricted_subformulas_inner ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Restricted_Master_Theorem.GF_advice_restricted_subformulas",
     "restricted_subformulas (?\<phi>[?X]\<^sub>\<nu>) = {}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Restricted_Master_Theorem.GF_advice_restricted_subformulas_inner",
     "restricted_subformulas_inner (?\<phi>[?X]\<^sub>\<nu>) = {}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Restricted_Master_Theorem.restrict_af_letter",
     "restricted_subformulas (af_letter ?\<phi> ?\<sigma>) =
      restricted_subformulas ?\<phi>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Restricted_Master_Theorem.restricted_subformulas_W_\<mu>",
     "subformulas\<^sub>\<mu> ?\<phi>
      <= restricted_subformulas (?\<phi> W\<^sub>n ?\<psi>)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Restricted_Master_Theorem.restricted_subformulas_R_\<mu>",
     "subformulas\<^sub>\<mu> ?\<psi>
      <= restricted_subformulas (?\<phi> R\<^sub>n ?\<psi>)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Restricted_Master_Theorem.restrict_af",
     "restricted_subformulas (af ?\<phi> ?w) =
      restricted_subformulas ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("Restricted_Master_Theorem.restricted_subformulas_subset",
     "restricted_subformulas ?\<phi>
      <= subformulas\<^sub>\<nu> ?\<phi> Un
         subformulas\<^sub>\<mu> ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Restricted_Master_Theorem.restricted_subformulas_inner_subset",
     "restricted_subformulas_inner ?\<phi>
      <= subformulas\<^sub>\<nu> ?\<phi> Un
         subformulas\<^sub>\<mu> ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Restricted_Master_Theorem.restricted_subformulas_size",
     "?\<psi> : restricted_subformulas ?\<phi> ==>
      size ?\<psi> < size ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Restricted_Master_Theorem.restricted_subformulas_superset",
     "?\<psi> : restricted_subformulas ?\<phi> ==>
      subformulas\<^sub>\<nu> ?\<psi> Un subformulas\<^sub>\<mu> ?\<psi>
      <= restricted_subformulas ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Restricted_Master_Theorem.subseqs_subformulas\<^sub>\<mu>_restricted_list",
     "(?X <= subformulas\<^sub>\<mu> ?\<phi> Int
             restricted_subformulas ?\<phi>) =
      (EX xs.
          ?X = set xs &
          xs : set (subseqs
                     (filter (%x. x : restricted_subformulas ?\<phi>)
                       (subformulas\<^sub>\<mu>_list ?\<phi>))))",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 1),
         template_app
          (template_app
            (template_hole 12,
             template_app (template_hole 11, template_var 0)),
           template_app (template_hole 10, template_var 0))),
       template_app (template_hole 9, t_empty))),
    ("Restricted_Master_Theorem.subseqs_subformulas\<^sub>\<nu>_restricted_list",
     "(?Y <= subformulas\<^sub>\<nu> ?\<phi> Int
             restricted_subformulas ?\<phi>) =
      (EX ys.
          ?Y = set ys &
          ys : set (subseqs
                     (filter (%x. x : restricted_subformulas ?\<phi>)
                       (subformulas\<^sub>\<nu>_list ?\<phi>))))",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 1),
         template_app
          (template_app
            (template_hole 12,
             template_app (template_hole 11, template_var 0)),
           template_app (template_hole 10, template_var 0))),
       template_app (template_hole 9, t_empty))),
    ("Restricted_Master_Theorem.delay_2",
     "[| \<mu>_stable ?\<phi> ?w; ?w \<Turnstile>\<^sub>n ?\<phi> |]
      ==> EX i. suffix i
                 ?w \<Turnstile>\<^sub>n af ?\<phi>
    (prefix i
      ?w)[{\<psi>. ?w \<Turnstile>\<^sub>n G\<^sub>n (F\<^sub>n \<psi>)} Int
          restricted_subformulas ?\<phi>]\<^sub>\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Restricted_Master_Theorem.restricted_advice_sets_subformulas",
     "(?X <= subformulas\<^sub>\<mu> ?\<phi> Int
             restricted_subformulas ?\<phi> &
       ?Y <= subformulas\<^sub>\<nu> ?\<phi> Int
             restricted_subformulas ?\<phi>) =
      (EX xs ys.
          ?X = set xs &
          ?Y = set ys & (xs, ys) : set (restricted_advice_sets ?\<phi>))",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 2),
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_var 1)),
               template_app (template_hole 8, template_var 1)))),
         template_app
          (template_app (template_hole 11, template_var 0),
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 7, template_var 1)),
             template_app (template_hole 8, template_var 1)))),
       template_app (template_hole 6, t_empty))),
    ("Restricted_Master_Theorem.master_theorem_restricted_language",
     "language_ltln ?\<phi> =
      \<Union>
       {L\<^sub>1 ?\<phi> X Int L\<^sub>2 X Y Int L\<^sub>3 X Y |X Y.
        X <= subformulas\<^sub>\<mu> ?\<phi> Int
             restricted_subformulas ?\<phi> &
        Y <= subformulas\<^sub>\<nu> ?\<phi> Int
             restricted_subformulas ?\<phi>}",
     template_equation
      (template_app (template_hole 13, template_var 0),
       template_app
        (template_hole 12, template_app (template_hole 11, t_empty)))),
    ("Restricted_Master_Theorem.master_theorem_restricted",
     "?w \<Turnstile>\<^sub>n ?\<phi> =
      (EX X<=subformulas\<^sub>\<mu> ?\<phi> Int
             restricted_subformulas ?\<phi>.
          EX Y<=subformulas\<^sub>\<nu> ?\<phi> Int
                restricted_subformulas ?\<phi>.
             EX i. suffix i
                    ?w \<Turnstile>\<^sub>n af ?\<phi>
       (prefix i ?w)[X]\<^sub>\<nu> &
                   (ALL \<psi>:X.
                       ?w \<Turnstile>\<^sub>n G\<^sub>n (F\<^sub>n \<psi>[Y]\<^sub>\<mu>)) &
                   (ALL \<psi>:Y.
                       ?w \<Turnstile>\<^sub>n F\<^sub>n (G\<^sub>n \<psi>[X]\<^sub>\<nu>)))",
     template_equation
      (template_app
        (template_app (template_hole 20, template_var 1), template_var 0),
       template_app (template_hole 19, t_empty)))]:
   (string * thm * template) list
### theory "Draft.Restricted_Master_TheoremTemplates"
### 0.503s elapsed time, 0.705s cpu time, 0.111s GC time
val it = (): unit
