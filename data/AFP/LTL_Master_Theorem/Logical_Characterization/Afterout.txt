Loading theory "Draft.Syntactic_Fragments_and_Stability" (required by "Draft.AfterTemplates" via "Draft.After")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.AfterTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.AfterTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.AfterTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.146s elapsed time, 0.579s cpu time, 0.065s GC time
### theory "HOL-Library.Set_Algebras"
### 0.232s elapsed time, 0.838s cpu time, 0.065s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.AfterTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.757s elapsed time, 2.310s cpu time, 0.309s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.948s elapsed time, 5.374s cpu time, 1.037s GC time
Loading theory "Draft.Templates" (required by "Draft.AfterTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.077s elapsed time, 0.196s cpu time, 0.081s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.AfterTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.708s elapsed time, 1.788s cpu time, 0.705s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Syntactic_Fragments_and_Stability"
### 3.143s elapsed time, 7.904s cpu time, 1.867s GC time
Loading theory "Draft.After" (required by "Draft.AfterTemplates")
consts
  af_letter :: "'a ltln => 'a set => 'a ltln"
locale af_congruent
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "af_congruent (\<sim>)"
locale ltl_equivalence
  fixes eq :: "'a ltln => 'a ltln => bool"  (infix \<open>\<sim>\<close> 75)
  assumes "ltl_equivalence (\<sim>)"
### theory "Draft.After"
### 0.402s elapsed time, 0.495s cpu time, 0.120s GC time
Loading theory "Draft.AfterTemplates"
val templateLemmas =
   [("After.af_simps", "af false\<^sub>n ?w = false\<^sub>n",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("After.af_simps", "af true\<^sub>n ?w = true\<^sub>n",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("After.af_letter_subformulas\<^sub>\<mu>",
     "subformulas\<^sub>\<mu> (af_letter ?\<phi> ?\<xi>) =
      subformulas\<^sub>\<mu> ?\<phi>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("After.af_letter_subformulas\<^sub>\<nu>",
     "subformulas\<^sub>\<nu> (af_letter ?\<phi> ?\<xi>) =
      subformulas\<^sub>\<nu> ?\<phi>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("After.af_letter_atoms",
     "atoms_ltln (af_letter ?\<phi> ?\<nu>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("After.af_letter_nested_prop_atoms",
     "nested_prop_atoms (af_letter ?\<phi> ?\<nu>)
      <= nested_prop_atoms ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("After.af_subformulas\<^sub>\<mu>",
     "subformulas\<^sub>\<mu> (af ?\<phi> ?w) =
      subformulas\<^sub>\<mu> ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("After.af_subformulas\<^sub>\<nu>",
     "subformulas\<^sub>\<nu> (af ?\<phi> ?w) =
      subformulas\<^sub>\<nu> ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("After.af_atoms", "atoms_ltln (af ?\<phi> ?w) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("After.af_nested_prop_atoms",
     "nested_prop_atoms (af ?\<phi> ?w) <= nested_prop_atoms ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("After.suffix_build", "suffix (Suc ?n) (?x ## ?xs) = suffix ?n ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2), template_var 0))),
    ("After.af_letter_build",
     "(?x ## ?w) \<Turnstile>\<^sub>n ?\<phi> =
      ?w \<Turnstile>\<^sub>n af_letter ?\<phi> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("After.af_letter_subst",
     "af_letter ?\<phi> ?\<nu> =
      subst ?\<phi> (%\<psi>. Some (af_letter \<psi> ?\<nu>))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("After.af_ltl_continuation",
     "(?w \<frown> ?w') \<Turnstile>\<^sub>n ?\<phi> =
      ?w' \<Turnstile>\<^sub>n af ?\<phi> ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 2)))),
    ("After.af_ite_simps",
     "af (if ?P then false\<^sub>n else true\<^sub>n) ?w =
      (if ?P then false\<^sub>n else true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_hole 0))),
    ("After.af_ite_simps",
     "af (if ?P then true\<^sub>n else false\<^sub>n) ?w =
      (if ?P then true\<^sub>n else false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_hole 0))),
    ("After.af_simps", "af (X\<^sub>n ?\<phi>) (?x # ?xs) = af ?\<phi> ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 2),
         template_var 0))),
    ("After.af_letter_range",
     "range (af_letter ?\<phi>)
      <= {\<psi>. nested_prop_atoms \<psi> <= nested_prop_atoms ?\<phi>}",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("After.af_letter_const_congruent",
     "?\<phi> \<sim>\<^sub>C ?\<psi> ==>
      af_letter ?\<phi> ?\<nu> \<sim>\<^sub>C af_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("After.af_letter_lang_congruent",
     "?\<phi> \<sim>\<^sub>L ?\<psi> ==>
      af_letter ?\<phi> ?\<nu> \<sim>\<^sub>L af_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("After.af_letter_prop_congruent",
     "?\<phi> \<sim>\<^sub>P ?\<psi> ==>
      af_letter ?\<phi> ?\<nu> \<sim>\<^sub>P af_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("After.af_letter_prop_congruent",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af_letter ?\<phi> ?\<nu> \<longrightarrow>\<^sub>P
      af_letter ?\<psi> ?\<nu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("After.af_const_congruent",
     "?\<phi> \<sim>\<^sub>C ?\<psi> ==>
      af ?\<phi> ?w \<sim>\<^sub>C af ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("After.af_lang_congruent",
     "?\<phi> \<sim>\<^sub>L ?\<psi> ==>
      af ?\<phi> ?w \<sim>\<^sub>L af ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("After.af_prop_congruent",
     "?\<phi> \<sim>\<^sub>P ?\<psi> ==>
      af ?\<phi> ?w \<sim>\<^sub>P af ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("After.af_prop_congruent",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      af ?\<phi> ?w \<longrightarrow>\<^sub>P af ?\<psi> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("After.valid_prefix_implies_ltl",
     "af ?\<phi> (prefix ?i ?w) \<sim>\<^sub>L true\<^sub>n ==>
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 2),
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2),
                    template_var 0))),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("After.af_F_prefix_prop",
     "af (F\<^sub>n ?\<phi>) ?w \<longrightarrow>\<^sub>P
      af (F\<^sub>n ?\<phi>) (?w' @ ?w)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))
         )),
    ("After.af_G_prefix_prop",
     "af (G\<^sub>n ?\<phi>) (?w' @ ?w) \<longrightarrow>\<^sub>P
      af (G\<^sub>n ?\<phi>) ?w",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_var 0))
         )),
    ("After.af_letter_one_step_back",
     "{x. ?\<A> \<Turnstile>\<^sub>P
          af_letter x ?\<sigma>} \<Turnstile>\<^sub>P
      ?\<phi> =
      ?\<A> \<Turnstile>\<^sub>P af_letter ?\<phi> ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("After.af_range",
     "range (af ?\<phi>)
      <= {\<psi>. nested_prop_atoms \<psi> <= nested_prop_atoms ?\<phi>}",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 5, t_empty), template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("After.ltl_implies_satisfiable_prefix",
     "?w \<Turnstile>\<^sub>n ?\<phi> ==>
      ~ af ?\<phi> (prefix ?i ?w) \<sim>\<^sub>L false\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 1),
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_var 2),
                         template_hole 1),
                       template_var 0))),
                 template_hole 0)
               )
           ))),
    ("After.af_decompose",
     "af (?\<phi> and\<^sub>n ?\<psi>) ?w =
      af ?\<phi> ?w and\<^sub>n af ?\<psi> ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("After.af_decompose",
     "af (?\<phi> or\<^sub>n ?\<psi>) ?w =
      af ?\<phi> ?w or\<^sub>n af ?\<psi> ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("After.\<F>_af",
     "\<F> (af ?\<phi> (prefix ?i ?w)) (suffix ?i ?w) =
      \<F> ?\<phi> (suffix ?i ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("After.\<F>\<G>_af",
     "\<F>\<G> (af ?\<phi> (prefix ?i ?w)) (suffix ?i ?w) =
      \<F>\<G> ?\<phi> (suffix ?i ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("After.\<G>_af",
     "\<G> (af ?\<phi> (prefix ?i ?w)) (suffix ?i ?w) =
      \<G> ?\<phi> (suffix ?i ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("After.\<G>\<F>_af",
     "\<G>\<F> (af ?\<phi> (prefix ?i ?w)) (suffix ?i ?w) =
      \<G>\<F> ?\<phi> (suffix ?i ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("After.af_G_prefix_const_equiv_false",
     "af (G\<^sub>n ?\<phi>) ?w \<sim>\<^sub>C false\<^sub>n ==>
      af (G\<^sub>n ?\<phi>) (?w' @ ?w) \<sim>\<^sub>C false\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_hole 1)
           ))),
    ("After.af_F_prefix_const_equiv_true",
     "af (F\<^sub>n ?\<phi>) ?w \<sim>\<^sub>C true\<^sub>n ==>
      af (F\<^sub>n ?\<phi>) (?w' @ ?w) \<sim>\<^sub>C true\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_hole 1)
           ))),
    ("After.af_G_prefix_lang_equiv_false",
     "af (G\<^sub>n ?\<phi>) ?w \<sim>\<^sub>L false\<^sub>n ==>
      af (G\<^sub>n ?\<phi>) (?w' @ ?w) \<sim>\<^sub>L false\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_hole 1)
           ))),
    ("After.af_F_prefix_lang_equiv_true",
     "af (F\<^sub>n ?\<phi>) ?w \<sim>\<^sub>L true\<^sub>n ==>
      af (F\<^sub>n ?\<phi>) (?w' @ ?w) \<sim>\<^sub>L true\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_hole 1)
           ))),
    ("After.af_F_prefix_lang",
     "?w \<Turnstile>\<^sub>n af (F\<^sub>n ?\<phi>) ?ys ==>
      ?w \<Turnstile>\<^sub>n af (F\<^sub>n ?\<phi>) (?xs @ ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 2)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("After.af_G_prefix_lang",
     "?w \<Turnstile>\<^sub>n af (G\<^sub>n ?\<phi>) (?xs @ ?ys) ==>
      ?w \<Turnstile>\<^sub>n af (G\<^sub>n ?\<phi>) ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 2)),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2)),
               template_var 0))
           ))),
    ("After.\<mu>LTL_implies_valid_prefix",
     "[| ?\<phi> : \<mu>LTL; ?w \<Turnstile>\<^sub>n ?\<phi> |]
      ==> EX i. af ?\<phi> (prefix i ?w) \<sim>\<^sub>C true\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("After.satisfiable_prefix_implies_\<nu>LTL",
     "[| ?\<phi> : \<nu>LTL;
         \<nexists>i.
            af ?\<phi> (prefix i ?w) \<sim>\<^sub>C false\<^sub>n |]
      ==> ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9)
            ),
        template_negation
         (template_predicate (template_app (template_hole 7, t_empty)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("After.af_subsequence_R'",
     "af (?\<phi> R\<^sub>n ?\<psi>) (?a # ?xs) =
      af ?\<psi>
       (?a #
        ?xs) and\<^sub>n af ?\<phi>
                          (?a #
                           ?xs) or\<^sub>n af (?\<phi> R\<^sub>n ?\<psi>)
      ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("After.af_subsequence_M'",
     "af (?\<phi> M\<^sub>n ?\<psi>) (?a # ?xs) =
      af ?\<psi>
       (?a #
        ?xs) and\<^sub>n af ?\<phi>
                          (?a #
                           ?xs) or\<^sub>n af (?\<phi> M\<^sub>n ?\<psi>)
      ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("After.af_subsequence_U'",
     "af (?\<phi> U\<^sub>n ?\<psi>) (?a # ?xs) =
      af ?\<psi>
       (?a #
        ?xs) or\<^sub>n (af ?\<phi>
                          (?a #
                           ?xs) and\<^sub>n af (?\<phi> U\<^sub>n ?\<psi>)
       ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("After.af_subsequence_W'",
     "af (?\<phi> W\<^sub>n ?\<psi>) (?a # ?xs) =
      af ?\<psi>
       (?a #
        ?xs) or\<^sub>n (af ?\<phi>
                          (?a #
                           ?xs) and\<^sub>n af (?\<phi> W\<^sub>n ?\<psi>)
       ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("After.af_subsequence_append",
     "[| ?i <= ?j; ?j <= ?k |]
      ==> af (af ?\<phi> (?w [?i \<rightarrow> ?j]))
           (?w [?j \<rightarrow> ?k]) =
          af ?\<phi> (?w [?i \<rightarrow> ?k])",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4),
                 template_var 3))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 2))))),
    ("After.af_subsequence_R",
     "af (?\<phi> R\<^sub>n ?\<psi>) (prefix (Suc ?n) ?w) =
      af ?\<psi>
       (prefix (Suc ?n)
         ?w) and\<^sub>n af ?\<phi>
                          (prefix (Suc ?n)
                            ?w) or\<^sub>n af (?\<phi> R\<^sub>n ?\<psi>)
      (?w [1 \<rightarrow> Suc ?n])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4),
               template_app (template_hole 3, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 0),
               template_app (template_hole 3, template_var 0))))))),
    ("After.af_subsequence_M",
     "af (?\<phi> M\<^sub>n ?\<psi>) (prefix (Suc ?n) ?w) =
      af ?\<psi>
       (prefix (Suc ?n)
         ?w) and\<^sub>n af ?\<phi>
                          (prefix (Suc ?n)
                            ?w) or\<^sub>n af (?\<phi> M\<^sub>n ?\<psi>)
      (?w [1 \<rightarrow> Suc ?n])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4),
               template_app (template_hole 3, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 0),
               template_app (template_hole 3, template_var 0))))))),
    ("After.af_subsequence_U",
     "af (?\<phi> U\<^sub>n ?\<psi>) (prefix (Suc ?n) ?w) =
      af ?\<psi>
       (prefix (Suc ?n)
         ?w) or\<^sub>n (af ?\<phi>
                          (prefix (Suc ?n)
                            ?w) and\<^sub>n af (?\<phi> U\<^sub>n ?\<psi>)
       (?w [1 \<rightarrow> Suc ?n]))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4),
               template_app (template_hole 3, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 0),
               template_app (template_hole 3, template_var 0))))))),
    ("After.af_subsequence_W",
     "af (?\<phi> W\<^sub>n ?\<psi>) (prefix (Suc ?n) ?w) =
      af ?\<psi>
       (prefix (Suc ?n)
         ?w) or\<^sub>n (af ?\<phi>
                          (prefix (Suc ?n)
                            ?w) and\<^sub>n af (?\<phi> W\<^sub>n ?\<psi>)
       (?w [1 \<rightarrow> Suc ?n]))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4),
               template_app (template_hole 3, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 0),
               template_app (template_hole 3, template_var 0)))))))]:
   (string * thm * template) list
### theory "Draft.AfterTemplates"
### 0.456s elapsed time, 0.618s cpu time, 0.080s GC time
val it = (): unit
