   [("More_Dirichlet_Misc.divisor_sigma_conv_dirichlet_prod",
     "divisor_sigma ?x ?n = dirichlet_prod (%n. real n powr ?x) (%_. 1) ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_app (template_hole 3, t_empty), t_empty),
         template_var 0))),
    ("More_Dirichlet_Misc.dirichlet_prod'_assoc",
     "dirichlet_prod' ?f (dirichlet_prod' ?g ?h) ?x =
      dirichlet_prod' (dirichlet_prod ?f ?g) ?h ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("More_Dirichlet_Misc.dirichlet_prod'_floor_conv_sum_upto",
     "dirichlet_prod' ?f (%x. real_of_int \<lfloor>x\<rfloor>) ?x =
      sum_upto (%x. sum_upto ?f (?x / real x)) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), t_empty),
         template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("More_Dirichlet_Misc.dirichlet_prod'_one_left",
     "dirichlet_prod' (%n. if n = 1 then 1::?'a else (0::?'a)) ?f ?x =
      (if 1 <= ?x then ?f ?x else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_app (template_var 1, template_var 0)),
         template_hole 2))),
    ("More_Dirichlet_Misc.legendre_identity",
     "sum_upto (%x. ln (real x)) ?x =
      prime_sum_upto (%p. real (legendre_aux ?x p) * ln (real p)) ?x",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("More_Dirichlet_Misc.legendre_identity'",
     "fact (nat \<lfloor>?x\<rfloor>) =
      (PROD p:{p. prime p & real p <= ?x}. p ^ legendre_aux ?x p)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_var 0))),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("More_Dirichlet_Misc.legendre_aux_altdef1",
     "legendre_aux ?x ?p =
      (if prime ?p & 1 <= ?x
       then SUM m:{0<..nat \<lfloor>log (real ?p) ?x\<rfloor>}.
               nat \<lfloor>?x / real (?p ^ m)\<rfloor>
       else 0)",
     template_equation
      (template_app
        (template_app (template_hole 14, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 1))),
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 0)),
                     template_var 1)))))),
         template_hole 1)))]
