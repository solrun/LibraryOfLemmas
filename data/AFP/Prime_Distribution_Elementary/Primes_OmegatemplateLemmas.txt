   [("Primes_Omega.primes_omega_prime", "prime ?p ==> primes_omega ?p = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Primes_Omega.primes_omega_primepow",
     "primepow ?n ==> primes_omega ?n = 1",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Primes_Omega.primes_omega_pos", "1 < ?n ==> 0 < primes_omega ?n",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Primes_Omega.primes_omega_eq_0_iff",
     "(primes_omega ?n = 0) = (?n = 0 | ?n = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 2)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("Primes_Omega.primes_omega_power",
     "0 < ?n ==> primes_omega (?x ^ ?n) = primes_omega ?x",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Primes_Omega.divisor_count_squarefree",
     "[| squarefree ?n; 0 < ?n |]
      ==> divisor_count ?n = 2 ^ primes_omega ?n",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_inequation (less_than, template_hole 7, template_var 0)],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 0))))),
    ("Primes_Omega.primes_omega_mult_coprime",
     "[| coprime ?x ?y; 0 < ?x | 0 < ?y |]
      ==> primes_omega (?x * ?y) = primes_omega ?x + primes_omega ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0)))))]
