   [("Prime_Distribution_Elementary_Library.sum_upto_1",
     "sum_upto ?f 1 = ?f 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_var 0, template_hole 0))),
    ("Prime_Distribution_Elementary_Library.abs_\<pi>",
     "\<bar>primes_pi ?x\<bar> = primes_pi ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Prime_Distribution_Elementary_Library.nth_prime_eval",
     "nth_prime (Suc ?n) = smallest_prime_beyond (Suc (nth_prime ?n))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))))),
    ("Prime_Distribution_Elementary_Library.divisor_count_eq_0_iff",
     "(divisor_count ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Prime_Distribution_Elementary_Library.divisor_count_pos_iff",
     "(0 < divisor_count ?n) = (0 < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Prime_Distribution_Elementary_Library.nth_prime_numeral",
     "nth_prime (numeral ?n) =
      smallest_prime_beyond (Suc (nth_prime (pred_numeral ?n)))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0)))))),
    ("Prime_Distribution_Elementary_Library.frequently_filtermap",
     "frequently ?P (filtermap ?f ?F) =
      (\<exists>\<^sub>F n in ?F. ?P (?f n))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Prime_Distribution_Elementary_Library.sum_upto_moebius_times_floor_linear",
     "sum_upto (%n. moebius_mu n * \<lfloor>?x / real n\<rfloor>) ?x =
      (if 1 <= ?x then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Prime_Distribution_Elementary_Library.ln_fact_conv_sum_mangoldt",
     "sum_upto (%n. mangoldt n * real_of_int \<lfloor>?x / real n\<rfloor>)
       ?x =
      ln (fact (nat \<lfloor>?x\<rfloor>))",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 0)))))),
    ("Prime_Distribution_Elementary_Library.sum_upto_divisor_sum2",
     "sum_upto (%n. SUM d | d dvd n. ?f d) ?x =
      sum_upto (%x. sum_upto ?f (?x / real x)) ?x",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty), template_var 0))),
    ("Prime_Distribution_Elementary_Library.sum_upto_divisor_sum1",
     "sum_upto (%n. SUM d | d dvd n. ?f d) ?x =
      sum_upto (%n. ?f n * real_of_int \<lfloor>?x / real n\<rfloor>) ?x",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty), template_var 0),
       template_app
        (template_app (template_hole 8, t_empty), template_var 0)))]
