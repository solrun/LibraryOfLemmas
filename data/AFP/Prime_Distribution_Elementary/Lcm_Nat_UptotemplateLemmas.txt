   [("Lcm_Nat_Upto.Lcm_atLeast1AtMost_conv_\<psi>",
     "real (Lcm {1..?n}) = exp (primes_psi (real ?n))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 5, template_var 0))))),
    ("Lcm_Nat_Upto.Lcm_upto_real_conv_\<psi>",
     "real (Lcm {1..nat \<lfloor>?x\<rfloor>}) = exp (primes_psi ?x)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Lcm_Nat_Upto.Lcm_atLeast1AtMost_Suc",
     "Lcm {1..Suc ?n} =
      Lcm {1..?n} *
      (if primepow (Suc ?n) then aprimedivisor (Suc ?n) else 1)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 0))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0))),
           template_hole 5)))),
    ("Lcm_Nat_Upto.multiplicity_Lcm",
     "[| finite ?A; ?A ~= {}; prime ?p; (0::?'a) ~: ?A |]
      ==> multiplicity ?p (Lcm ?A) = Max (multiplicity ?p ` ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 0)),
             template_var 1))))),
    ("Lcm_Nat_Upto.multiplicity_Lcm_atLeast1AtMost_Suc",
     "[| prime ?p; 0 < ?n |]
      ==> multiplicity ?p (Lcm {1..Suc ?n}) =
          (if EX k. Suc ?n = ?p ^ k then 1 else 0) +
          multiplicity ?p (Lcm {1..?n})",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_inequation (less_than, template_hole 10, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, t_empty)),
                 template_hole 5),
               template_hole 10)),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)))))))]
