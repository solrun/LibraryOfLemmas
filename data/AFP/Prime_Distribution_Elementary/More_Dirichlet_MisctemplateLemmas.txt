   [("More_Dirichlet_Misc.legendre_aux_posD",
     "0 < legendre_aux ?x ?p ==> prime ?p",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("More_Dirichlet_Misc.legendre_aux_not_prime",
     "~ prime ?p ==> legendre_aux ?x ?p = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("More_Dirichlet_Misc.abs_sum_upto_moebius_mu_over_n_le",
     "\<bar>sum_upto (%n. moebius_mu n / real n) ?x\<bar> <= 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_hole 0)),
    ("More_Dirichlet_Misc.legendre_aux_eq_0",
     "?x < real ?p ==> legendre_aux ?x ?p = 0",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("More_Dirichlet_Misc.legendre_aux_posD",
     "0 < legendre_aux ?x ?p ==> real ?p <= ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("More_Dirichlet_Misc.divisor_sigma_conv_dirichlet_prod",
     "divisor_sigma ?x ?n = dirichlet_prod (%n. real n powr ?x) (%_. 1) ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_app (template_hole 3, t_empty), t_empty),
         template_var 0))),
    ("More_Dirichlet_Misc.dirichlet_prod'_assoc",
     "dirichlet_prod' ?f (dirichlet_prod' ?g ?h) ?x =
      dirichlet_prod' (dirichlet_prod ?f ?g) ?h ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("More_Dirichlet_Misc.dirichlet_prod'_floor_conv_sum_upto",
     "dirichlet_prod' ?f (%x. real_of_int \<lfloor>x\<rfloor>) ?x =
      sum_upto (%x. sum_upto ?f (?x / real x)) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), t_empty),
         template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("More_Dirichlet_Misc.finite_sum_legendre_aux",
     "prime ?p ==> finite {m. 0 < m & real (?p ^ m) <= ?x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("More_Dirichlet_Misc.dirichlet_prod'_one_left",
     "dirichlet_prod' (%n. if n = 1 then 1::?'a else (0::?'a)) ?f ?x =
      (if 1 <= ?x then ?f ?x else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_app (template_var 1, template_var 0)),
         template_hole 2))),
    ("More_Dirichlet_Misc.legendre_identity",
     "sum_upto (%x. ln (real x)) ?x =
      prime_sum_upto (%p. real (legendre_aux ?x p) * ln (real p)) ?x",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("More_Dirichlet_Misc.abs_sum_upto_moebius_mu_over_n_less",
     "2 <= ?x ==> \<bar>sum_upto (%n. moebius_mu n / real n) ?x\<bar> < 1",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 0)),
         template_hole 0))),
    ("More_Dirichlet_Misc.completely_multiplicative_imp_moebius_mu_inverse",
     "completely_multiplicative_function ?f ==>
      dirichlet_prod ?f (%n. moebius_mu n * ?f n) ?n =
      (if ?n = 1 then 1::?'a else (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 1), t_empty),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)),
                 template_hole 1),
               template_hole 0)
             )))),
    ("More_Dirichlet_Misc.legendre_identity'",
     "fact (nat \<lfloor>?x\<rfloor>) =
      (PROD p:{p. prime p & real p <= ?x}. p ^ legendre_aux ?x p)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_var 0))),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("More_Dirichlet_Misc.sum_upto_moebius_mu_over_n_eq",
     "?x < 2 ==>
      sum_upto (%n. moebius_mu n / real n) ?x = (if 1 <= ?x then 1 else 0)",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_hole 9)))],
       template_equation
        (template_app
          (template_app (template_hole 7, t_empty), template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)),
             template_hole 1),
           template_hole 0)))),
    ("More_Dirichlet_Misc.exponents_le_finite",
     "[| 1 < ?p; 0 < ?k |] ==> finite {i. real (?p ^ (?k * i + ?l)) <= ?x}",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 3),
        template_inequation (less_than, template_hole 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))
           ))),
    ("More_Dirichlet_Misc.legendre_aux_altdef1",
     "legendre_aux ?x ?p =
      (if prime ?p & 1 <= ?x
       then SUM m:{0<..nat \<lfloor>log (real ?p) ?x\<rfloor>}.
               nat \<lfloor>?x / real (?p ^ m)\<rfloor>
       else 0)",
     template_equation
      (template_app
        (template_app (template_hole 14, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 1))),
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app (template_hole 4, template_var 0)),
                     template_var 1)))))),
         template_hole 1))),
    ("More_Dirichlet_Misc.legendre_aux_set_eq",
     "[| prime ?p; 1 <= ?x |]
      ==> {m. 0 < m & real (?p ^ m) <= ?x} =
          {0<..nat \<lfloor>log (real ?p) ?x\<rfloor>}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_inequation
         (less_equals, template_hole 11, template_var 0)],
       template_equation
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 3, template_hole 6),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 5, template_var 1)),
                 template_var 0))))))),
    ("More_Dirichlet_Misc.legendre_aux_altdef2",
     "[| 1 <= ?x; prime ?p; ?x < real ?p ^ Suc ?k |]
      ==> legendre_aux ?x ?p =
          (SUM m:{0<..?k}. nat \<lfloor>?x / real (?p ^ m)\<rfloor>)",
     template_implication
      ([template_inequation (less_equals, template_hole 14, template_var 2),
        template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1)),
            template_app (template_hole 9, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("More_Dirichlet_Misc.dirichlet_prod_inversion_completely_multiplicative",
     "completely_multiplicative_function ?a ==>
      (ALL x>=1. ?g x = dirichlet_prod' ?a ?f x) =
      (ALL x>=1. ?f x = dirichlet_prod' (%n. moebius_mu n * ?a n) ?g x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app (template_hole 7, t_empty),
         template_app (template_hole 7, t_empty)))),
    ("More_Dirichlet_Misc.dirichlet_prod'_inversion'",
     "?a 1 * ?y = (1::?'a) ==>
      (ALL x>=1. ?g x = dirichlet_prod' ?a ?f x) =
      (ALL x>=1. ?f x = dirichlet_prod' (dirichlet_inverse ?a ?y) ?g x)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_var 3, template_hole 8)),
            template_var 2),
          template_hole 7)],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("More_Dirichlet_Misc.dirichlet_prod'_inversion",
     "dirichlet_prod ?a ?ainv = (%n. if n = 1 then 1::?'a else (0::?'a)) ==>
      (ALL x>=1. ?g x = dirichlet_prod' ?a ?f x) =
      (ALL x>=1. ?f x = dirichlet_prod' ?ainv ?g x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 3),
            template_var 2),
          t_empty)],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("More_Dirichlet_Misc.dirichlet_prod'_inversion2",
     "[| ALL x>=1. ?f x = dirichlet_prod' ?ainv ?g x; 1 <= ?x;
         dirichlet_prod ?a ?ainv =
         (%n. if n = 1 then 1::?'a else (0::?'a)) |]
      ==> ?g ?x = dirichlet_prod' ?a ?f ?x",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation (less_equals, template_hole 9, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0), template_var 3),
          t_empty)],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 0),
             template_var 4),
           template_var 1)))),
    ("More_Dirichlet_Misc.dirichlet_prod'_inversion1",
     "[| ALL x>=1. ?g x = dirichlet_prod' ?a ?f x; 1 <= ?x;
         dirichlet_prod ?a ?ainv =
         (%n. if n = 1 then 1::?'a else (0::?'a)) |]
      ==> ?f ?x = dirichlet_prod' ?ainv ?g ?x",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation (less_equals, template_hole 9, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 0),
          t_empty)],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 0),
             template_var 4),
           template_var 1)))),
    ("More_Dirichlet_Misc.dirichlet_prod'_cong",
     "[| !!n. [| 0 < n; real n <= ?x |] ==> ?f n = ?f' n;
         !!y. [| 1 <= y; y <= ?x |] ==> ?g y = ?g' y; ?x = ?x' |]
      ==> dirichlet_prod' ?f ?g ?x = dirichlet_prod' ?f' ?g' ?x'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_equation (template_var 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0))))]
