   [("Prime_Distribution_Elementary_Library.sum_upto_1",
     "sum_upto ?f 1 = ?f 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_var 0, template_hole 0))),
    ("Prime_Distribution_Elementary_Library.abs_\<pi>",
     "\<bar>primes_pi ?x\<bar> = primes_pi ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Prime_Distribution_Elementary_Library.pbernpoly_bigo",
     "pbernpoly ?n : O(%_. 1)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1), t_empty))
         )),
    ("Prime_Distribution_Elementary_Library.nth_prime_eval",
     "nth_prime (Suc ?n) = smallest_prime_beyond (Suc (nth_prime ?n))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))))),
    ("Prime_Distribution_Elementary_Library.divisor_count_eq_0_iff",
     "(divisor_count ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Prime_Distribution_Elementary_Library.divisor_count_pos_iff",
     "(0 < divisor_count ?n) = (0 < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Prime_Distribution_Elementary_Library.nth_prime_eval",
     "prime ?n ==> smallest_prime_beyond ?n = ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Prime_Distribution_Elementary_Library.nth_prime_numeral",
     "nth_prime (numeral ?n) =
      smallest_prime_beyond (Suc (nth_prime (pred_numeral ?n)))",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0)))))),
    ("Prime_Distribution_Elementary_Library.divisor_count_pos",
     "0 < ?n ==> 0 < divisor_count ?n",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Prime_Distribution_Elementary_Library.\<pi>_less_self",
     "0 < ?x ==> primes_pi ?x < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Prime_Distribution_Elementary_Library.\<pi>_le_self",
     "0 <= ?x ==> primes_pi ?x <= ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Prime_Distribution_Elementary_Library.finite_primes_le",
     "finite {p. prime p & real p <= ?x}",
     template_predicate
      (
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))
         )),
    ("Prime_Distribution_Elementary_Library.nth_prime_eval",
     "~ prime ?n ==>
      smallest_prime_beyond ?n = smallest_prime_beyond (Suc ?n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Prime_Distribution_Elementary_Library.\<pi>_le_self'",
     "1 <= ?x ==> primes_pi ?x <= ?x - 1",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_hole 2)))),
    ("Prime_Distribution_Elementary_Library.frequently_filtermap",
     "frequently ?P (filtermap ?f ?F) =
      (\<exists>\<^sub>F n in ?F. ?P (?f n))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Prime_Distribution_Elementary_Library.harm_le",
     "1 <= ?n ==> harm ?n <= ln (real ?n) + 1",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("Prime_Distribution_Elementary_Library.frequently_mono_filter",
     "[| frequently ?P ?F; ?F <= ?F' |] ==> frequently ?P ?F'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Prime_Distribution_Elementary_Library.between_nth_primes_imp_nonprime",
     "[| nth_prime ?k < ?n; ?n < nth_prime (Suc ?k) |] ==> ~ prime ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Prime_Distribution_Elementary_Library.nth_prime_partition",
     "2 <= ?x ==> EX k. ?x : {nth_prime k..<nth_prime (Suc k)}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Prime_Distribution_Elementary_Library.sum_upto_moebius_times_floor_linear",
     "sum_upto (%n. moebius_mu n * \<lfloor>?x / real n\<rfloor>) ?x =
      (if 1 <= ?x then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Prime_Distribution_Elementary_Library.ln_fact_conv_sum_mangoldt",
     "sum_upto (%n. mangoldt n * real_of_int \<lfloor>?x / real n\<rfloor>)
       ?x =
      ln (fact (nat \<lfloor>?x\<rfloor>))",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 0)))))),
    ("Prime_Distribution_Elementary_Library.nth_prime_partition'",
     "2 <= ?x ==>
      EX k. ?x : {real (nth_prime k)..<real (nth_prime (Suc k))}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)),
          template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Prime_Distribution_Elementary_Library.sum_upto_divisor_sum2",
     "sum_upto (%n. SUM d | d dvd n. ?f d) ?x =
      sum_upto (%x. sum_upto ?f (?x / real x)) ?x",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty), template_var 0))),
    ("Prime_Distribution_Elementary_Library.nth_prime_partition''",
     "2 <= ?x ==>
      ?x : {real
             (nth_prime
               (nat \<lfloor>primes_pi ?x\<rfloor> -
                1))..<real
                       (nth_prime (nat \<lfloor>primes_pi ?x\<rfloor>))}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_hole 9)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 0)))),
                       template_hole 0)))),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 0)))))))
           ))),
    ("Prime_Distribution_Elementary_Library.sum_upto_divisor_sum1",
     "sum_upto (%n. SUM d | d dvd n. ?f d) ?x =
      sum_upto (%n. ?f n * real_of_int \<lfloor>?x / real n\<rfloor>) ?x",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty), template_var 0),
       template_app
        (template_app (template_hole 8, t_empty), template_var 0))),
    ("Prime_Distribution_Elementary_Library.strict_mono_sequence_partition",
     "[| strict_mono ?f; ?f 0 <= ?x; filterlim ?f at_top sequentially |]
      ==> EX k. ?x : {?f k..<?f (Suc k)}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_app (template_var 1, template_hole 7),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Prime_Distribution_Elementary_Library.asymp_equivD_strong",
     "[| ?f \<sim>[?F] ?g;
         \<forall>\<^sub>F x in ?F. ?f x ~= (0::?'b) | ?g x ~= (0::?'b) |]
      ==> ((%x. ?f x / ?g x) \<longlongrightarrow> (1::?'b)) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 1, template_hole 0)),
             template_var 1)
           ))),
    ("Prime_Distribution_Elementary_Library.sum_upto_cong'",
     "[| !!n. [| 0 < n; real n <= ?x |] ==> ?f n = ?f' n; ?x = ?x' |]
      ==> sum_upto ?f ?x = sum_upto ?f' ?x'",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_equation (template_var 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Prime_Distribution_Elementary_Library.hurwitz_zeta_shift",
     "[| 0 < ?a; ?s ~= 1 |]
      ==> hurwitz_zeta (?a + real ?n) ?s =
          hurwitz_zeta ?a ?s -
          (SUM k<?n. complex_of_real (?a + real k) powr - ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_app (template_hole 6, template_var 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Prime_Distribution_Elementary_Library.natfun_bigoE",
     "[| ?f : O(?g); !!n. ?n0.0 <= n ==> ?g n ~= (0::?'b);
         !!c. [| 0 < c;
                 !!n. ?n0.0 <= n ==> norm (?f n) <= c * norm (?g n) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Prime_Distribution_Elementary_Library.bigoE_bounded_real_fun",
     "[| ?f : O(?g); !!x. ?x0.0 <= x ==> ?cg <= \<bar>?g x\<bar>; 0 < ?cg;
         !!b. ?x0.0 <= b ==> bounded (?f ` {?x0.0..b}) |]
      ==> EX c>0. ALL x>=?x0.0. \<bar>?f x\<bar> <= c * \<bar>?g x\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation (less_than, template_hole 8, template_var 0),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Prime_Distribution_Elementary_Library.sum_upto_asymptotics_lift_nat_real_aux",
     "[| (%n. sum ?f {1..n} - ?g (real n)) : O(%n. ?h (real n));
         (%n. ?g (real n) - ?g (real (Suc n))) : O(%n. ?h (real n));
         (%n. ?h (real n)) : O(%n. ?h (real (Suc n)));
         !!x. 1 <= x ==> 0 < ?h x;
         mono_on ?g {1..} | mono_on (%x. - ?g x) {1..};
         mono_on ?h {1..} | mono_on (%x. - ?h x) {1..} |]
      ==> EX c>0. ALL x>=1. sum_upto ?f x - ?g x <= c * ?h x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, t_empty),
              template_app
               (template_app (template_hole 17, template_hole 16), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 23, t_empty),
              template_app
               (template_app (template_hole 17, template_hole 16), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 23, t_empty),
              template_app
               (template_app (template_hole 17, template_hole 16), t_empty))
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app (template_hole 7, template_hole 12))),
              template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 7, template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_app (template_hole 7, template_hole 12))),
              template_app
               (template_app (template_hole 8, t_empty),
                template_app (template_hole 7, template_hole 12)))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Prime_Distribution_Elementary_Library.sum_upto_asymptotics_lift_nat_real",
     "[| (%n. sum ?f {1..n} - ?g (real n)) : O(%n. ?h (real n));
         (%n. ?g (real n) - ?g (real (Suc n))) : O(%n. ?h (real n));
         (%n. ?h (real n)) : O(%n. ?h (real (Suc n)));
         !!x. 1 <= x ==> 0 < ?h x;
         mono_on ?g {1..} | mono_on (%x. - ?g x) {1..};
         mono_on ?h {1..} | mono_on (%x. - ?h x) {1..} |]
      ==> EX c>0. ALL x>=1. \<bar>sum_upto ?f x - ?g x\<bar> <= c * ?h x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, t_empty),
              template_app
               (template_app (template_hole 18, template_hole 17), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, t_empty),
              template_app
               (template_app (template_hole 18, template_hole 17), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, t_empty),
              template_app
               (template_app (template_hole 18, template_hole 17), t_empty))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app (template_hole 8, template_hole 13))),
              template_app
               (template_app (template_hole 9, t_empty),
                template_app (template_hole 8, template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_app (template_hole 8, template_hole 13))),
              template_app
               (template_app (template_hole 9, t_empty),
                template_app (template_hole 8, template_hole 13)))
            )],
       template_predicate (template_app (template_hole 6, t_empty))))]
