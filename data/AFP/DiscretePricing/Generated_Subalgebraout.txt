Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Generated_SubalgebraTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Generated_Subalgebra" (required by "Draft.Generated_SubalgebraTemplates")
Loading theory "Draft.Templates" (required by "Draft.Generated_SubalgebraTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.262s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.364s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Generated_SubalgebraTemplates" via "Draft.ExtrEqs")
### theory "Draft.Generated_Subalgebra"
### 0.217s elapsed time, 0.571s cpu time, 0.046s GC time
### theory "HOL-Library.BigO"
### 0.631s elapsed time, 0.765s cpu time, 0.071s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Generated_SubalgebraTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.465s elapsed time, 0.465s cpu time, 0.000s GC time
Loading theory "Draft.Generated_SubalgebraTemplates"
val templateLemmas =
   [("Generated_Subalgebra.gen_subalgebra_space",
     "space (gen_subalgebra ?M ?G) = space ?M",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Generated_Subalgebra.fct_gen_subalgebra_space",
     "space (fct_gen_subalgebra ?M ?N ?X) = space ?M",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Generated_Subalgebra.fct_gen_subalgebra_is_subalgebra",
     "?X : ?M \<rightarrow>\<^sub>M ?N ==>
      subalgebra ?M (fct_gen_subalgebra ?M ?N ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Generated_Subalgebra.fct_gen_subalgebra_eq_sets",
     "sets ?M = sets ?P ==>
      fct_gen_subalgebra ?M ?N ?X = fct_gen_subalgebra ?P ?N ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Generated_Subalgebra.gen_subalgebra_sig_sets",
     "?G <= Pow (space ?M) ==>
      sets (gen_subalgebra ?M ?G) = sigma_sets (space ?M) ?G",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 0)))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 0)),
           template_var 1)))),
    ("Generated_Subalgebra.gen_subalgebra_sets",
     "[| ?G <= sets ?M; ?A : ?G |] ==> ?A : sets (gen_subalgebra ?M ?G)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)))
           ))),
    ("Generated_Subalgebra.gen_subalgebra_is_subalgebra",
     "[| ?G <= sets ?M; sigma_algebra (space ?M) ?G |]
      ==> subalgebra ?M (gen_subalgebra ?M ?G)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Generated_Subalgebra.fct_gen_subalgebra_sets_mem",
     "?B : sets ?N ==>
      ?X -` ?B Int space ?M : sets (fct_gen_subalgebra ?M ?N ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 3)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1)))
           ))),
    ("Generated_Subalgebra.fct_gen_subalgebra_fct_measurable",
     "?X : space ?M \<rightarrow> space ?N ==>
      ?X : fct_gen_subalgebra ?M ?N ?X \<rightarrow>\<^sub>M ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2)),
               template_var 0))
           ))),
    ("Generated_Subalgebra.fct_gen_subalgebra_min",
     "[| subalgebra ?M ?P; ?f : ?P \<rightarrow>\<^sub>M ?N |]
      ==> subalgebra ?P (fct_gen_subalgebra ?M ?N ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Generated_Subalgebra.gen_subalgebra_sigma_sets",
     "[| ?G <= sets ?M; sigma_algebra (space ?M) ?G |]
      ==> sets (gen_subalgebra ?M ?G) = ?G",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Generated_Subalgebra.fct_gen_subalgebra_cong",
     "[| space ?M = space ?P; sets ?N = sets ?Q |]
      ==> fct_gen_subalgebra ?M ?N ?X = fct_gen_subalgebra ?P ?Q ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 4),
          template_app (template_hole 4, template_var 3)),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Generated_Subalgebra.fct_gen_subalgebra_sets",
     "sets (fct_gen_subalgebra ?M ?N ?X) =
      sigma_sets (space ?M) {?X -` B Int space ?M |B. B : sets ?N}",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 2)),
         template_app (template_hole 7, t_empty)))),
    ("Generated_Subalgebra.fct_gen_subalgebra_sigma_sets",
     "?X : space ?M \<rightarrow> space ?N ==>
      sets (fct_gen_subalgebra ?M ?N ?X) =
      {?X -` B Int space ?M |B. B : sets ?N}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 1)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0),
             template_var 2)),
         template_app (template_hole 7, t_empty)))),
    ("Generated_Subalgebra.fct_gen_subalgebra_info",
     "[| ?f : space ?M \<rightarrow> space ?N; ?x : space ?M; ?w : space ?M;
         ?f ?x = ?f ?w; ?A : sets (fct_gen_subalgebra ?M ?N ?f) |]
      ==> (?x : ?A) = (?w : ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 4)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 7, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 7, template_var 4))
            ),
        template_equation
         (template_app (template_var 5, template_var 2),
          template_app (template_var 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 5)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_var 0)))),
    ("Generated_Subalgebra.fct_preimage_sigma_sets",
     "?X : space ?M \<rightarrow> space ?N ==>
      sigma_sets (space ?M) {?X -` B Int space ?M |B. B : sets ?N} =
      {?X -` B Int space ?M |B. B : sets ?N}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 1)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 11, template_var 1)),
           template_app (template_hole 7, t_empty)),
         template_app (template_hole 7, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Generated_SubalgebraTemplates"
### 1.254s elapsed time, 1.589s cpu time, 0.220s GC time
val it = (): unit
