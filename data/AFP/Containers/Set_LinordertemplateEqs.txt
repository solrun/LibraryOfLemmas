   [("Set_Linorder.proper_interval_integer_simps",
     "proper_interval None ?yo = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Set_Linorder.proper_interval_integer_simps",
     "proper_interval ?xo None = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Set_Linorder.proper_interval_natural_simps",
     "proper_interval ?xo None = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Set_Linorder.Compl_eq_empty_iff", "(- ?A = {}) = (?A = UNIV)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Set_Linorder.proper_interval_natural_simps",
     "proper_interval None (Some ?y) = (0 < ?y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set_Linorder.char_less_iff_nat_of_char",
     "(?x < ?y) = (of_char ?x < of_char ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Linorder.char_le_iff_nat_of_char",
     "(?x <= ?y) = (of_char ?x <= of_char ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Linorder.nat_of_char_inject",
     "(of_char ?x = of_char ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Linorder.proper_interval_integer_simps",
     "proper_interval (Some ?x) (Some ?y) = (1 < ?y - ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Linorder.proper_interval_natural_simps",
     "proper_interval (Some ?x) (Some ?y) = (1 < ?y - ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Linorder.length_last_Cons_code",
     "length_last (?x # ?xs) = fold (%x (n, uu_). (n + 1, x)) ?xs (1, ?x)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 0),
           template_var 1)))),
    ("Set_Linorder.length_last_fusion_code",
     "length_last_fusion ?g ?s =
      (if list.has_next ?g ?s
       then let (x, s') = list.next ?g ?s
            in fold_fusion ?g (%x (n, uu_). (n + 1, x)) s' (1, x)
       else (0, undefined))",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0)),
             template_app (template_hole 7, t_empty))),
         template_app
          (template_app (template_hole 4, template_hole 1),
           template_hole 0))))]
