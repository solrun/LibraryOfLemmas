   [("Containers_DFS_Ex.succs_code", "succs (Succ ?s) = ?s",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Containers_DFS_Ex.restrict_UNIV", "?R \<upharpoonleft> UNIV = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Containers_DFS_Ex.restrict_restrict",
     "?R \<upharpoonleft> ?A \<upharpoonleft> ?B =
      ?R \<upharpoonleft> ?A Int ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Containers_DFS_Ex.reachable_dfs",
     "reachable ?E ?src ?tgt = is_Reachable (dfs ?E ?src ?tgt {})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0),
           template_hole 0)))),
    ("Containers_DFS_Ex.in_restrict",
     "((?a, ?b) : ?R \<upharpoonleft> ?A) = ((?a, ?b) : ?R & ?b : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Containers_DFS_Ex.loop_simps",
     "(case Reachable of Reachable => Reachable
       | Visited \<V> =>
           if ?x : \<V> then Visited \<V> else dfs ?E ?x ?tgt \<V>) =
      Reachable",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_hole 4),
       template_hole 4)),
    ("Containers_DFS_Ex.comp_fun_commute_dfs_body",
     "comp_fun_commute
       (%x r. case r of Reachable => Reachable
              | Visited \<V> =>
                  if x : \<V> then Visited \<V> else dfs ?E x ?tgt \<V>)",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Containers_DFS_Ex.rtrancl_restrict_start",
     "(?x, ?y) : ?R^* ==> (?x, ?y) : (?R \<upharpoonleft> - {?x})^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_hole 0)))))
           ))),
    ("Containers_DFS_Ex.Image_insert",
     "NO_MATCH {} ?A ==> ?R `` insert ?x ?A = ?R `` {?x} Un ?R `` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 4))),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Containers_DFS_Ex.fold_dfs_Reachable",
     "Finite_Set.fold
       (%x r. case r of Reachable => Reachable
              | Visited \<V> =>
                  if x : \<V> then Visited \<V> else dfs ?E x ?tgt \<V>)
       Reachable ?A =
      Reachable",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, t_empty), template_hole 4),
         template_var 0),
       template_hole 4)),
    ("Containers_DFS_Ex.loop_simps",
     "(case Visited ?\<V> of Reachable => Reachable
       | Visited \<V> =>
           if ?x : \<V> then Visited \<V> else dfs ?E ?x ?tgt \<V>) =
      (if ?x : ?\<V> then Visited ?\<V> else dfs ?E ?x ?tgt ?\<V>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Containers_DFS_Ex.rtrancl_restrict_reachable",
     "[| (?x, ?y) : ?R^*; (?z, ?y) ~: ?R^* |]
      ==> (?x, ?y) : (?R \<upharpoonleft> - ?R^* `` {?z})^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app (template_hole 6, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 0),
                      template_var 2)),
                  template_app (template_hole 6, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 6, template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0))))))
           ))),
    ("Containers_DFS_Ex.dfs_visited",
     "[| finite ?A; ?A <= ?visited |]
      ==> Finite_Set.fold
           (%x r. case r of Reachable => Reachable
                  | Visited \<V> =>
                      if x : \<V> then Visited \<V> else dfs ?E x ?tgt \<V>)
           (Visited ?visited) ?A =
          Visited ?visited",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 1, template_var 2)),
           template_var 3),
         template_app (template_hole 1, template_var 2)))),
    ("Containers_DFS_Ex.dfs_blocked",
     "[| finite ?A; ?E `` ?A <= ?visited; ?tgt ~: ?A |]
      ==> Finite_Set.fold
           (%x r. case r of Reachable => Reachable
                  | Visited \<V> =>
                      if x : \<V> then Visited \<V> else dfs ?E x ?tgt \<V>)
           (Visited ?visited) ?A =
          Visited (?A Un ?visited)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 2),
            template_var 3),
          template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_var 3)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 2, template_var 1)),
           template_var 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Containers_DFS_Ex.dfs_code",
     "dfs ?E ?src ?tgt ?visited =
      (if ?src = ?tgt then Reachable
       else let S = ?E `` {?src}
            in if finite S
               then set_fold_cfc (dfs_body ?E ?tgt)
                     (Visited (insert ?src ?visited)) S
               else Code.abort STR ''infinite successor relation''
                     (%_. dfs ?E ?src ?tgt ?visited))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_var 1)),
               template_hole 13),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_app
                    (template_app (template_hole 10, template_var 2),
                     template_hole 9))),
               t_empty))
           ))),
    ("Containers_DFS_Ex.dfs_rec",
     "dfs ?E ?src ?tgt ?visited =
      (if ?src = ?tgt then Reachable
       else let succs = ?E `` {?src}
            in if finite succs
               then Finite_Set.fold
                     (%x r. case r of Reachable => Reachable
                            | Visited \<V> =>
                                if x : \<V> then Visited \<V>
                                else dfs ?E x ?tgt \<V>)
                     (Visited (insert ?src ?visited)) succs
               else Code.abort STR ''infinite successor relation''
                     (%_. dfs ?E ?src ?tgt ?visited))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, template_var 2),
                   template_var 1)),
               template_hole 14),
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 3),
                   template_app
                    (template_app (template_hole 11, template_var 2),
                     template_hole 10))),
               t_empty))
           )))]
