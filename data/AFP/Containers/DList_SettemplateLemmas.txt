   [("DList_Set.list_of_dlist_inverse",
     "Abs_dlist (list_of_dlist ?dxs) = ?dxs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("DList_Set.fold_empty", "DList_Set.fold ?f DList_Set.empty ?b = ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 0)),
    ("DList_Set.null_iff", "DList_Set.null ?xs = (?xs = DList_Set.empty)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation (template_var 0, template_hole 0))),
    ("DList_Set.set_list_of_dlist_Abs_dlist",
     "set (list_of_dlist (Abs_dlist ?xs)) = set ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("DList_Set.list_of_dlist_eq_Nil_iff",
     "(list_of_dlist ?dxs = []) = (?dxs = DList_Set.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("DList_Set.ID_ceq", "ID CEQ(?'a) = Some ?eq ==> equal ?eq",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_hole 2),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("DList_Set.distinct_list_of_dlist",
     "ID CEQ(?'a) ~= None ==> distinct (list_of_dlist ?dxs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_hole 3),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("DList_Set.set_fold_insert",
     "set (fold List.insert ?xs1.0 ?xs2.0) = set ?xs1.0 Un set ?xs2.0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("DList_Set.finite_member",
     "ID CEQ(?'a) ~= None ==> finite (Collect (DList_Set.member ?dxs))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 5, template_hole 4),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("DList_Set.list_of_dlist_eq_singleton_conv",
     "(list_of_dlist ?dxs = [?x]) =
      (?dxs = DList_Set.insert ?x DList_Set.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("DList_Set.card_eq_length",
     "ID CEQ(?'a) ~= None ==>
      card (Collect (DList_Set.member ?dxs)) = DList_Set.length ?dxs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("DList_Set.Collect_member",
     "ID CEQ(?'a) ~= None ==>
      Collect (DList_Set.member ?dxs) = set (list_of_dlist ?dxs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("DList_Set.list_of_dlist_insert",
     "~ DList_Set.member ?dxs ?x ==>
      list_of_dlist (DList_Set.insert ?x ?dxs) = ?x # list_of_dlist ?dxs",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("DList_Set.member_insert",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.member (DList_Set.insert ?x ?xs) = (DList_Set.member ?xs)
      (?x := True)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 0)),
             template_var 1),
           template_hole 0)))),
    ("DList_Set.member_remove",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.member (DList_Set.remove ?x ?xs) = (DList_Set.member ?xs)
      (?x := False)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 0)),
             template_var 1),
           template_hole 0)))),
    ("DList_Set.member_empty_empty",
     "ID CEQ(?'a) ~= None ==>
      (ALL x. ~ DList_Set.member ?dxs x) = (?dxs = DList_Set.empty)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_implication
        ([template_predicate (template_app (template_hole 3, t_empty))],
         template_equation (template_var 0, template_hole 0)))),
    ("DList_Set.product_code",
     "list_of_dlist (DList_Set.product ?dxs1.0 ?dxs2.0) =
      DList_Set.fold (%a. DList_Set.fold (%c. (#) (a, c)) ?dxs2.0) ?dxs1.0
       []",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_var 1),
         template_hole 0))),
    ("DList_Set.fold_insert",
     "~ DList_Set.member ?dxs ?x ==>
      DList_Set.fold ?f (DList_Set.insert ?x ?dxs) ?b =
      DList_Set.fold ?f ?dxs (?f ?x ?b)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_app
            (template_app (template_var 1, template_var 2),
             template_var 0))))),
    ("DList_Set.member_filter",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.member (DList_Set.filter ?P ?xs) =
      (%x. DList_Set.member ?xs x & ?P x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         t_empty))),
    ("DList_Set.dlist_all_conv_member",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.dlist_all ?P ?dxs =
      (ALL x. DList_Set.member ?dxs x --> ?P x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app (template_hole 2, t_empty)))),
    ("DList_Set.dlist_ex_conv_member",
     "ID CEQ(?'a) ~= None ==>
      dlist_ex ?P ?dxs = (EX x. DList_Set.member ?dxs x & ?P x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app (template_hole 2, t_empty)))),
    ("DList_Set.member_union",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.member (DList_Set.union ?xs1.0 ?xs2.0) ?x =
      (DList_Set.member ?xs1.0 ?x | DList_Set.member ?xs2.0 ?x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("DList_Set.member_Id_on",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.member (DList_Set.Id_on ?dxs) =
      (%(x, y). x = y & DList_Set.member ?dxs x)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 9, template_hole 8),
              template_hole 7)
            )],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("DList_Set.Abs_dlist_inverse",
     "?y : {xs. equal_base.list_distinct ceq' xs | ID CEQ(?'a) = None} ==>
      list_of_dlist (Abs_dlist ?y) = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 10, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("DList_Set.member_fold_insert",
     "ID CEQ(?'a) ~= None ==>
      DList_Set.member (fold DList_Set.insert ?xs ?dxs) ?x =
      (DList_Set.member ?dxs ?x | ?x : set ?xs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 9, template_hole 8),
              template_hole 7)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("DList_Set.Abs_dlist_induct",
     "(!!y. y : {xs.
                 equal_base.list_distinct ceq' xs | ID CEQ(?'a) = None} ==>
            ?P (Abs_dlist y)) ==>
      ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("DList_Set.Abs_dlist_cases",
     "(!!y. [| ?x = Abs_dlist y;
               y : {xs.
                    equal_base.list_distinct ceq' xs |
                    ID CEQ(?'a) = None} |]
            ==> ?P) ==>
      ?P",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("DList_Set.fold_transfer2",
     "[| ID CEQ(?'a) ~= None; is_equality ?A |]
      ==> rel_fun
           (rel_fun ?A (rel_fun (pcr_set_dlist (=)) (pcr_set_dlist (=))))
           (rel_fun (pcr_set_dlist (=))
             (rel_fun (pcr_set_dlist (=)) (pcr_set_dlist (=))))
           fold DList_Set.fold",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 13, template_hole 12),
              template_hole 11)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_hole 5)),
                       template_app (template_hole 6, template_hole 5)))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5)),
                     template_app (template_hole 6, template_hole 5)))),
               template_hole 1),
             template_hole 0)
           ))),
    ("DList_Set.product_member",
     "[| ID CEQ(?'a) ~= None; ID CEQ(?'b) ~= None |]
      ==> DList_Set.member (DList_Set.product ?dxs1.0 ?dxs2.0) =
          (%(a, b).
              DList_Set.member ?dxs1.0 a & DList_Set.member ?dxs2.0 b)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 13, template_hole 12),
              template_hole 11)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 9, template_hole 8),
              template_hole 7)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("DList_Set.set_dlist_induct",
     "[| ID CEQ(?'a) ~= None; ?P DList_Set.empty;
         !!a dxs.
            [| ~ DList_Set.member dxs a; ?P dxs |]
            ==> ?P (DList_Set.insert a dxs) |]
      ==> ?P ?dxs",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_hole 6),
              template_hole 5)
            ),
        template_predicate (template_app (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("DList_Set.Abs_dlist_inject",
     "[| ?x : {xs. equal_base.list_distinct ceq' xs | ID CEQ(?'a) = None};
         ?y : {xs. equal_base.list_distinct ceq' xs | ID CEQ(?'a) = None} |]
      ==> (Abs_dlist ?x = Abs_dlist ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 11, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, t_empty))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_equation (template_var 1, template_var 0))))]
