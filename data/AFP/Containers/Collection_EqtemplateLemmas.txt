   [("Collection_Eq.leq_seq_code", "leq_seq ?eq seq.Empty ?Q = True",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Collection_Eq.member_seq_code", "member_seq ?eq seq.Empty ?x = False",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("Collection_Eq.member_pred_code",
     "member_pred ?eq (Predicate.Seq ?f) = member_seq ?eq (?f ())",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_var 0, template_hole 0)))),
    ("Collection_Eq.member_seq_eq",
     "?eq = (=) ==> member_seq ?eq = Predicate.member",
     template_implication
      ([template_implication
         ([template_predicate (template_var 0)],
          template_predicate (template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Collection_Eq.member_pred_eq",
     "?eq = (=) ==> member_pred ?eq = pred.eval",
     template_implication
      ([template_implication
         ([template_predicate (template_var 0)],
          template_predicate (template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Collection_Eq.leq_pred_eq", "?eq = (=) ==> leq_pred ?eq = (<=)",
     template_implication
      ([template_implication
         ([template_predicate (template_var 0)],
          template_predicate (template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Collection_Eq.predicate_eq_eq",
     "?eq = (=) ==> predicate_eq ?eq = (=)",
     template_implication
      ([template_implication
         ([template_predicate (template_var 0)],
          template_predicate (template_hole 3))],
       template_implication
        ([template_predicate
           (template_app (template_hole 1, template_var 0))],
         template_predicate (template_hole 0)))),
    ("Collection_Eq.set_eq_code", "set_eq ?A ?B = (?A <= ?B & ?B <= ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Collection_Eq.leq_pred_code",
     "leq_pred ?eq (Predicate.Seq ?f) ?Q = leq_seq ?eq (?f ()) ?Q",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_var 1, template_hole 0)),
         template_var 0))),
    ("Collection_Eq.equality_subst",
     "[| ?c1.0 = ?c2.0; equality ?c1.0 |] ==> equality ?c2.0",
     template_implication
      ([template_equation (template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Collection_Eq.member_seq_code",
     "member_seq ?eq (seq.Insert ?y ?P) ?x =
      (?eq ?x ?y | member_pred ?eq ?P ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_var 3, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Collection_Eq.leq_seq_code",
     "leq_seq ?eq (seq.Insert ?x ?P) ?Q =
      (member_pred ?eq ?Q ?x & leq_pred ?eq ?P ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Collection_Eq.leq_seq_code",
     "leq_seq ?eq (seq.Join ?P ?xp) ?Q =
      (leq_pred ?eq ?P ?Q & leq_seq ?eq ?xp ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0)))),
    ("Collection_Eq.member_seq_code",
     "member_seq ?eq (seq.Join ?Q ?xq) ?x =
      (member_pred ?eq ?Q ?x | member_seq ?eq ?xq ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0))))]
