   [("Quad_Form.qfN_pos", "[| 1 <= ?N; is_qfN ?A ?N |] ==> 0 <= ?A",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("Quad_Form.is_qfN_power",
     "[| 0 < ?n; is_qfN ?A ?N |] ==> is_qfN (?A ^ ?n) ?N",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Quad_Form.is_qfN_mult",
     "[| is_qfN ?A ?N; is_qfN ?B ?N |] ==> is_qfN (?A * ?B) ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Quad_Form.best_division_abs",
     "0 < ?n ==> EX k. 2 * \<bar>?a - k * ?n\<bar> <= ?n",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Quad_Form.abs_eq_impl_unitfactor",
     "\<bar>?a\<bar> = \<bar>?b\<bar> ==>
      EX u. ?a = u * ?b & \<bar>u\<bar> = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Quad_Form.prime_factor_int",
     "[| \<bar>?k\<bar> ~= 1; !!p. [| prime p; p dvd ?k |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Quad_Form.Legendre_zmult",
     "[| 2 < ?p; prime ?p |]
      ==> Legendre (?a * ?b) ?p = Legendre ?a ?p * Legendre ?b ?p",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)),
          template_var 2),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2))))),
    ("Quad_Form.prime_power_dvd_cancel_right",
     "[| prime ?p; ~ ?p dvd ?b; ?p ^ ?n dvd ?a * ?b |] ==> ?p ^ ?n dvd ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Quad_Form.Legendre_1mod6",
     "prime (6 * ?m + 1) ==> Legendre (- 3) (6 * ?m + 1) = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_hole 6,
                          template_app
                           (template_hole 5, template_hole 4)))),
                    template_var 0)),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_hole 7,
                 template_app (template_hole 5, template_hole 4)))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)))),
                 template_var 0)),
             template_hole 3)),
         template_hole 3))),
    ("Quad_Form.qfN_zero",
     "[| 1 <= ?N; ?a\<^sup>2 + ?N * ?b\<^sup>2 = 0 |] ==> ?a = 0 & ?b = 0",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3)))),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))))),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 8, template_var 0),
               template_hole 1))
           ))),
    ("Quad_Form.qf3_even_general",
     "[| is_qfN ?A 3; even ?A |] ==> EX B. ?A = 4 * B & is_qfN B 3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 8,
                  template_app (template_hole 4, template_hole 6))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Quad_Form.qfN_div_prime_general",
     "[| prime ?P; ?P dvd ?A; is_qfN ?A ?N; is_qfN ?P ?N |]
      ==> EX Q. ?A = Q * ?P & is_qfN Q ?N",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Quad_Form.qfN_primedivisor_not",
     "prime ?P & 0 < ?Q & is_qfN (?P * ?Q) ?N & ~ is_qfN ?P ?N ==>
      EX R. prime R & R dvd ?Q & ~ is_qfN R ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_var 1)),
                      template_var 0)),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 0)))))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quad_Form.qf3_cube_impl_cube_form",
     "coprime ?a ?b & ?a\<^sup>2 + 3 * ?b\<^sup>2 = ?w ^ 3 & odd ?w ==>
      is_cube_form ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app
                         (template_hole 10,
                          template_app
                           (template_app (template_hole 9, template_var 2),
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 7, template_hole 6)))),
                        template_app
                         (template_app
                           (template_hole 5,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 3, template_hole 6))),
                          template_app
                           (template_app (template_hole 9, template_var 1),
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 7, template_hole 6)))))),
                    template_app
                     (template_app (template_hole 9, template_var 0),
                      template_app
                       (template_hole 8,
                        template_app (template_hole 3, template_hole 6))))),
                template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_hole 4,
                        template_app (template_hole 7, template_hole 6))),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Quad_Form.qf3_prime_exists",
     "prime (6 * ?m + 1) ==>
      EX x y. 6 * ?m + 1 = x\<^sup>2 + 3 * y\<^sup>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 6, template_hole 5)))),
                    template_var 0)),
                template_hole 4))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Quad_Form.cube_form_mult",
     "[| is_cube_form ?a ?b; is_cube_form ?c ?d; \<bar>?e\<bar> = 1 |]
      ==> is_cube_form (?a * ?c + ?e * 3 * ?b * ?d)
           (?a * ?d - ?e * ?b * ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_hole 1)))),
                       template_var 3)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 3)),
                 template_var 2)))
           ))),
    ("Quad_Form.qf3_oddprimedivisor",
     "[| prime ?P; odd ?P; coprime ?a ?b;
         ?P dvd ?a\<^sup>2 + 3 * ?b\<^sup>2 |]
      ==> is_qfN ?P 3",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 7))),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app
                     (template_hole 3,
                      template_app (template_hole 8, template_hole 7)))),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 1, template_hole 7))),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_app
                     (template_hole 3,
                      template_app (template_hole 8, template_hole 7))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_hole 9,
               template_app (template_hole 1, template_hole 7)))
           ))),
    ("Quad_Form.qf3_cube_prime_impl_cube_form",
     "[| coprime ?a ?b; ?P ^ 3 = ?a\<^sup>2 + 3 * ?b\<^sup>2;
         prime ?P & odd ?P |]
      ==> is_cube_form ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 0),
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9))),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 12, template_var 2),
                template_app
                 (template_hole 11,
                  template_app (template_hole 7, template_hole 9)))),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 10, template_hole 9))),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_app
                 (template_hole 11,
                  template_app (template_hole 7, template_hole 9)))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 7, template_hole 9))),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Quad_Form.qf3_even",
     "even (?a\<^sup>2 + 3 * ?b\<^sup>2) ==>
      EX B. ?a\<^sup>2 + 3 * ?b\<^sup>2 = 4 * B & is_qfN B 3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 10, template_hole 9)))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 4, template_hole 9))),
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 10, template_hole 9))))))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Quad_Form.qf3_oddprimedivisor_not",
     "prime ?P & odd ?P & 0 < ?Q & is_qfN (?P * ?Q) 3 & ~ is_qfN ?P 3 ==>
      EX R. prime R & odd R & R dvd ?Q & ~ is_qfN R 3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app (template_hole 7, template_hole 6))),
                      template_var 1))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_var 0)),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 2, template_var 1),
                            template_var 0)),
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 1, template_hole 6)))),
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 3, template_var 1),
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 1, template_hole 6))))))))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Quad_Form.qfN_mult2",
     "(?a\<^sup>2 + ?N * ?b\<^sup>2) * (?c\<^sup>2 + ?N * ?d\<^sup>2) =
      (?a * ?c - ?N * ?b * ?d)\<^sup>2 + ?N * (?a * ?d + ?b * ?c)\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 1))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))))),
    ("Quad_Form.qfN_mult1",
     "(?a\<^sup>2 + ?N * ?b\<^sup>2) * (?c\<^sup>2 + ?N * ?d\<^sup>2) =
      (?a * ?c + ?N * ?b * ?d)\<^sup>2 + ?N * (?a * ?d - ?b * ?c)\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)))),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 1))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))))),
    ("Quad_Form.qf3_cube_primelist_impl_cube_form",
     "[| Multiset.Ball ?ps prime; odd (int (PROD i:#?ps. i)); coprime ?a ?b;
         ?a\<^sup>2 + 3 * ?b\<^sup>2 = int (PROD i:#?ps. i) ^ 3 |]
      ==> is_cube_form ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 2)),
              template_hole 16)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_hole 13,
                      template_app (template_hole 12, template_hole 11))),
                  template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, t_empty),
                        template_var 2))))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_hole 3,
                  template_app (template_hole 12, template_hole 11)))),
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 13,
                  template_app (template_hole 1, template_hole 11))),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_app
                 (template_hole 3,
                  template_app (template_hole 12, template_hole 11))))),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, t_empty),
                    template_var 2)))),
            template_app
             (template_hole 3,
              template_app (template_hole 1, template_hole 11))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Quad_Form.qfN_prime_unique",
     "[| prime (?a\<^sup>2 + ?N * ?b\<^sup>2); 1 < ?N;
         ?a\<^sup>2 + ?N * ?b\<^sup>2 = ?c\<^sup>2 + ?N * ?d\<^sup>2 |]
      ==> \<bar>?a\<bar> = \<bar>?c\<bar> &
          \<bar>?b\<bar> = \<bar>?d\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_hole 6)))),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 9, template_var 2),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_hole 6))))))
            ),
        template_inequation (less_than, template_hole 3, template_var 3),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 4),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)))),
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))))),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)))),
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 0),
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 4)),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 2)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Quad_Form.qfN_square_prime",
     "prime (?p\<^sup>2 + ?N * ?q\<^sup>2) &
      1 < ?N &
      (?p\<^sup>2 + ?N * ?q\<^sup>2)\<^sup>2 =
      ?r\<^sup>2 + ?N * ?s\<^sup>2 &
      coprime ?r ?s ==>
      \<bar>?r\<bar> = \<bar>?p\<^sup>2 - ?N * ?q\<^sup>2\<bar> &
      \<bar>?s\<bar> = \<bar>2 * ?p * ?q\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 11, template_var 4),
                        template_app
                         (template_hole 10,
                          template_app
                           (template_hole 9, template_hole 8)))),
                    template_app
                     (template_app (template_hole 7, template_var 3),
                      template_app
                       (template_app (template_hole 11, template_var 2),
                        template_app
                         (template_hole 10,
                          template_app
                           (template_hole 9, template_hole 8))))))),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_app
                               (template_hole 12,
                                template_app
                                 (template_app
                                   (template_hole 11, template_var 4),
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 9, template_hole 8)))),
                              template_app
                               (template_app
                                 (template_hole 7, template_var 3),
                                template_app
                                 (template_app
                                   (template_hole 11, template_var 2),
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 9,
template_hole 8)))))),
                          template_app
                           (template_hole 10,
                            template_app
                             (template_hole 9, template_hole 8)))),
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app (template_hole 11, template_var 1),
                            template_app
                             (template_hole 10,
                              template_app
                               (template_hole 9, template_hole 8)))),
                        template_app
                         (template_app (template_hole 7, template_var 3),
                          template_app
                           (template_app (template_hole 11, template_var 0),
                            template_app
                             (template_hole 10,
                              template_app
                               (template_hole 9, template_hole 8))))))),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 11, template_var 4),
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_hole 8)))),
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_app
                        (template_app (template_hole 11, template_var 2),
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_hole 8)))))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 9, template_hole 8))),
                       template_var 4)),
                   template_var 2))))
           ))),
    ("Quad_Form.qfN_oddprime_cube",
     "[| prime (?p\<^sup>2 + ?N * ?q\<^sup>2);
         odd (?p\<^sup>2 + ?N * ?q\<^sup>2); ?p ~= 0; 1 <= ?N |]
      ==> EX a b.
             (?p\<^sup>2 + ?N * ?q\<^sup>2) ^ 3 =
             a\<^sup>2 + ?N * b\<^sup>2 &
             coprime a (?N * b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 2),
                    template_app
                     (template_hole 14,
                      template_app (template_hole 13, template_hole 12)))),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_app
                   (template_app (template_hole 15, template_var 0),
                    template_app
                     (template_hole 14,
                      template_app (template_hole 13, template_hole 12))))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app (template_hole 13, template_hole 12))),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 15, template_var 2),
                        template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13, template_hole 12)))),
                    template_app
                     (template_app (template_hole 11, template_var 1),
                      template_app
                       (template_app (template_hole 15, template_var 0),
                        template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13, template_hole 12))))))
                )
            ),
        template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation (less_equals, template_hole 4, template_var 1)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Quad_Form.qfN_div_prime_weak",
     "[| prime (?p\<^sup>2 + ?N * ?q\<^sup>2);
         ?p\<^sup>2 + ?N * ?q\<^sup>2 dvd ?a\<^sup>2 + ?N * ?b\<^sup>2 |]
      ==> EX u v.
             ?a\<^sup>2 + ?N * ?b\<^sup>2 =
             (u\<^sup>2 + ?N * v\<^sup>2) * (?p\<^sup>2 + ?N * ?q\<^sup>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4)))),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4)))),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      template_app
                       (template_hole 6,
                        template_app
                         (template_hole 5, template_hole 4)))))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4)))),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4))))))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quad_Form.qfN_cube_prime",
     "prime (?p\<^sup>2 + ?N * ?q\<^sup>2) &
      1 < ?N &
      (?p\<^sup>2 + ?N * ?q\<^sup>2) ^ 3 = ?a\<^sup>2 + ?N * ?b\<^sup>2 &
      coprime ?a ?b ==>
      \<bar>?a\<bar> = \<bar>?p ^ 3 - 3 * ?N * ?p * ?q\<^sup>2\<bar> &
      \<bar>?b\<bar> = \<bar>3 * ?p\<^sup>2 * ?q - ?N * ?q ^ 3\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_app (template_hole 12, template_var 4),
                        template_app
                         (template_hole 11,
                          template_app
                           (template_hole 10, template_hole 9)))),
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_app
                       (template_app (template_hole 12, template_var 2),
                        template_app
                         (template_hole 11,
                          template_app
                           (template_hole 10, template_hole 9))))))),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app
                           (template_hole 12,
                            template_app
                             (template_app
                               (template_hole 13,
                                template_app
                                 (template_app
                                   (template_hole 12, template_var 4),
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, template_hole 9)))),
                              template_app
                               (template_app
                                 (template_hole 8, template_var 3),
                                template_app
                                 (template_app
                                   (template_hole 12, template_var 2),
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10,
template_hole 9)))))),
                          template_app
                           (template_hole 11,
                            template_app
                             (template_hole 4, template_hole 9)))),
                      template_app
                       (template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 1),
                            template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10, template_hole 9)))),
                        template_app
                         (template_app (template_hole 8, template_var 3),
                          template_app
                           (template_app (template_hole 12, template_var 0),
                            template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10, template_hole 9))))))),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 12, template_var 4),
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 4, template_hole 9)))),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 4, template_hole 9))),
                               template_var 3)),
                           template_var 4)),
                       template_app
                        (template_app (template_hole 12, template_var 2),
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 10, template_hole 9)))))))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 4, template_hole 9))),
                           template_app
                            (template_app
                              (template_hole 12, template_var 4),
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 10, template_hole 9))))),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_app
                      (template_app (template_hole 12, template_var 2),
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 4, template_hole 9))))))))
           ))),
    ("Quad_Form.qfN_div_prime",
     "prime (?p\<^sup>2 + ?N * ?q\<^sup>2) &
      ?p\<^sup>2 + ?N * ?q\<^sup>2 dvd ?a\<^sup>2 + ?N * ?b\<^sup>2 ==>
      EX u v.
         ?a\<^sup>2 + ?N * ?b\<^sup>2 =
         (u\<^sup>2 + ?N * v\<^sup>2) * (?p\<^sup>2 + ?N * ?q\<^sup>2) &
         (EX e. ?a = ?p * u + e * ?N * ?q * v &
                ?b = ?p * v - e * ?q * u & \<bar>e\<bar> = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8, template_hole 7)))),
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_app
                       (template_app (template_hole 10, template_var 2),
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8, template_hole 7))))))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8, template_hole 7)))),
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_app
                       (template_app (template_hole 10, template_var 2),
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8, template_hole 7)))))),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 1),
                      template_app
                       (template_hole 9,
                        template_app (template_hole 8, template_hole 7)))),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app (template_hole 10, template_var 0),
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8, template_hole 7)))))))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Quad_Form.qfN_power_div_prime",
     "prime ?P &
      odd ?P &
      ?P dvd ?A &
      ?P ^ ?n = ?p\<^sup>2 + ?N * ?q\<^sup>2 &
      ?A ^ ?n = ?a\<^sup>2 + ?N * ?b\<^sup>2 &
      coprime ?a ?b & coprime ?p (?N * ?q) & 0 < ?n ==>
      EX u v.
         ?a\<^sup>2 + ?N * ?b\<^sup>2 =
         (u\<^sup>2 + ?N * v\<^sup>2) * (?p\<^sup>2 + ?N * ?q\<^sup>2) &
         coprime u v &
         (EX e. ?a = ?p * u + e * ?N * ?q * v &
                ?b = ?p * v - e * ?q * u & \<bar>e\<bar> = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 7)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13, template_hole 12))),
                      template_var 7))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app (template_hole 15, template_var 7),
                      template_var 6)),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app
                           (template_app (template_hole 10, template_var 7),
                            template_var 5)),
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 10, template_var 4),
                              template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 13, template_hole 12)))),
                          template_app
                           (template_app (template_hole 7, template_var 3),
                            template_app
                             (template_app
                               (template_hole 10, template_var 2),
                              template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 13, template_hole 12))))))),
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_app
                               (template_hole 10, template_var 6),
                              template_var 5)),
                          template_app
                           (template_app
                             (template_hole 9,
                              template_app
                               (template_app
                                 (template_hole 10, template_var 1),
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 13, template_hole 12)))),
                            template_app
                             (template_app
                               (template_hole 7, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 10, template_var 0),
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 13,
                                    template_hole 12))))))),
                      template_app
                       (template_app
                         (template_hole 18,
                          template_app
                           (template_app (template_hole 6, template_var 1),
                            template_var 0)),
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_hole 6, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 7, template_var 3),
                                template_var 2))),
                          template_app
                           (template_app (template_hole 5, template_hole 4),
                            template_var 5))))))))
            )],
       template_predicate (template_app (template_hole 3, t_empty))))]
