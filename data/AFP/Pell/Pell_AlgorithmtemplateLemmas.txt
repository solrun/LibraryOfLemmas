   [("Pell_Algorithm.efficient_pell_power_correct",
     "efficient_pell_power ?D ?z ?n = (pell_mul_nat ?D ?z ^^ ?n) (1, 0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Pell_Algorithm.find_fund_sol_correct",
     "find_fund_sol ?D =
      (if is_square ?D then (0, 0) else pell.fund_sol ?D)",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3))),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Pell_Algorithm.Discrete_sqrt_square_is_square",
     "is_square ?n ==> (Discrete.sqrt ?n)\<^sup>2 = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_var 0))),
    ("Pell_Algorithm.fund_sol_code",
     "~ is_square ?D ==>
      pell.fund_sol ?D =
      projr (while isl (find_fund_sol_step ?D) (Inl (Suc 0, Suc ?D)))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10))),
                  template_var 0)
                )
            )],
       template_equation
        (template_app (template_hole 8, template_var 0),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)),
                 template_app (template_hole 1, template_var 0)))))))),
    ("Pell_Algorithm.efficient_power_correct",
     "(!!x z. ?f x (?f x z) = ?f (?f x x) z) ==>
      efficient_power ?f ?y ?x ?n = (?f ?x ^^ ?n) ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_var 3, template_var 1)),
           template_var 2)))),
    ("Pell_Algorithm.efficient_power_code",
     "efficient_power ?f ?y ?x ?n =
      (if ?n = 0 then ?y
       else if ?n = 1 then ?f ?x ?y
            else if even ?n then efficient_power ?f ?y (?f ?x ?x) (?n div 2)
                 else efficient_power ?f (?f ?x ?y) (?f ?x ?x) (?n div 2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_hole 5)),
                 template_app
                  (template_app (template_var 3, template_var 1),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 9, template_var 3),
                         template_var 2),
                       template_app
                        (template_app (template_var 3, template_var 1),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2, template_hole 1))))),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 9, template_var 3),
                       template_app
                        (template_app (template_var 3, template_var 1),
                         template_var 2)),
                     template_app
                      (template_app (template_var 3, template_var 1),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1)))))))
           )))]
