   [("Efficient_Discrete_Sqrt.Discrete_sqrt_eq_newton_sqrt",
     "Discrete.sqrt ?n = newton_sqrt ?n",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Efficient_Discrete_Sqrt.sqrt_eq_floor_sqrt",
     "Discrete.sqrt ?n = nat \<lfloor>sqrt (real ?n)\<rfloor>",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Efficient_Discrete_Sqrt.square_test_correct",
     "square_test ?n = is_square ?n",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Efficient_Discrete_Sqrt.newton_sqrt_aux_correct",
     "Discrete.sqrt ?n <= ?x ==> newton_sqrt_aux ?x ?n = Discrete.sqrt ?n",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app (template_hole 2, template_var 1)))),
    ("Efficient_Discrete_Sqrt.heron_step",
     "0 < ?t ==> Discrete.sqrt ?n <= (?t + ?n div ?t) div 2",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Efficient_Discrete_Sqrt.sub_q11_array",
     "?i : {..<11} ==> q11_array !! ?i = (?i : q11)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4))))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 9, template_var 0),
           template_hole 0)))),
    ("Efficient_Discrete_Sqrt.newton_sqrt_aux_simps",
     "?x <= (?x + ?n div ?x) div 2 ==> newton_sqrt_aux ?x ?n = ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1))),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Efficient_Discrete_Sqrt.in_q11_code",
     "(?x mod 11 : q11) = q11_array !! (?x mod 11)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)))))))),
    ("Efficient_Discrete_Sqrt.sub_q63_array",
     "?i : {..<63} ==> q63_array !! ?i = (?i : q63)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5, template_hole 4))))))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_hole 0)))),
    ("Efficient_Discrete_Sqrt.sub_q64_array",
     "?i : {..<64} ==> q64_array !! ?i = (?i : q64)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 5, template_hole 4)))))))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_hole 0)))),
    ("Efficient_Discrete_Sqrt.sub_q65_array",
     "?i : {..<65} ==> q65_array !! ?i = (?i : q65)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 5, template_hole 4)))))))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app
          (template_app (template_hole 9, template_var 0),
           template_hole 0)))),
    ("Efficient_Discrete_Sqrt.heron_step_real",
     "[| 0 < ?t; 0 <= ?n |] ==> sqrt ?n <= (?t + ?n / ?t) / 2",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_equals, template_hole 7, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Efficient_Discrete_Sqrt.in_q63_code",
     "(?x mod 63 : q63) = q63_array !! (?x mod 63)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4, template_hole 3)))))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4, template_hole 3)))))))))),
    ("Efficient_Discrete_Sqrt.square_mod_existence",
     "EX q. q\<^sup>2 = ?n ==> EX q. ?n mod ?k = q\<^sup>2 mod ?k",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Efficient_Discrete_Sqrt.in_q64_code",
     "(?x mod 64 : q64) = q64_array !! (?x mod 64)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4, template_hole 3))))))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4, template_hole 3))))))))))),
    ("Efficient_Discrete_Sqrt.in_q65_code",
     "(?x mod 65 : q65) = q65_array !! (?x mod 65)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4, template_hole 3))))))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4, template_hole 3))))))))))),
    ("Efficient_Discrete_Sqrt.newton_sqrt_aux_simps",
     "(?x + ?n div ?x) div 2 < ?x ==>
      newton_sqrt_aux ?x ?n = newton_sqrt_aux ((?x + ?n div ?x) div 2) ?n",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1))),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_var 1))),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))),
           template_var 0)))),
    ("Efficient_Discrete_Sqrt.heron_step_div_eq_floored",
     "0 < ?t ==>
      (?t + ?n div ?t) div 2 =
      nat \<lfloor>(real ?t + real ?n / real ?t) / 2\<rfloor>",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_app
                (template_app (template_hole 10, template_var 0),
                 template_var 1))),
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6))),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 1, template_var 0)),
                     template_app (template_hole 1, template_var 1)))),
               template_app
                (template_hole 0,
                 template_app (template_hole 7, template_hole 6)))))))),
    ("Efficient_Discrete_Sqrt.square_mod_lower",
     "[| 0 < ?m; ?q\<^sup>2 mod ?m = ?a |]
      ==> EX q'<?m. q'\<^sup>2 mod ?m = ?a",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_hole 2)))),
            template_var 2),
          template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Efficient_Discrete_Sqrt.square_test_code",
     "square_test ?n =
      (q64_array !! (?n mod 64) &
       (let r = ?n mod 45045
        in q63_array !! (r mod 63) &
           q65_array !! (r mod 65) &
           q11_array !! (r mod 11) & ?n = (Discrete.sqrt ?n)\<^sup>2))",
     template_equation
      (template_app (template_hole 15, template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_app
              (template_app (template_hole 11, template_var 0),
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9, template_hole 8)))))))))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 11, template_var 0),
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 9,
     template_app
      (template_hole 6,
       template_app (template_hole 9, template_hole 8)))))))))))))))))),
           t_empty)))),
    ("Efficient_Discrete_Sqrt.get_nat_sqrt_code",
     "get_nat_sqrt ?n =
      (if q64_array !! (?n mod 64) &
          (let r = ?n mod 45045
           in q63_array !! (r mod 63) &
              q65_array !! (r mod 65) & q11_array !! (r mod 11))
       then let x = Discrete.sqrt ?n
            in if x\<^sup>2 = ?n then Some x else None
       else None)",
     template_equation
      (template_app (template_hole 19, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_hole 15),
                   template_app
                    (template_app (template_hole 14, template_var 0),
                     template_app
                      (template_hole 13,
                       template_app
                        (template_hole 12,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12,
                                   template_hole 11)))))))))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 14, template_var 0),
                     template_app
                      (template_hole 13,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 9,
     template_app
      (template_hole 9,
       template_app
        (template_hole 9,
         template_app
          (template_hole 12,
           template_app
            (template_hole 9,
             template_app
              (template_hole 12, template_hole 11)))))))))))))))))),
                 t_empty))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             t_empty)),
         template_hole 0)))]
