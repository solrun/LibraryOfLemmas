   [("Legendre_Symbol.Legendre_0_eq_0", "Legendre 0 ?p = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Legendre_Symbol.Legendre_p_eq_1", "Legendre ?a 1 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Legendre_Symbol.Legendre_neg", "Legendre ?a (- ?p) = Legendre ?a ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Legendre_Symbol.QuadRes_neg", "QuadRes (- ?p) ?a = QuadRes ?p ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Legendre_Symbol.Legendre_p_eq_2", "Legendre ?a 2 = ?a mod 2",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))))),
    ("Legendre_Symbol.Suc_mod_eq",
     "[Suc ?a = Suc ?b] (mod 2) = [?a = ?b] (mod 2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Legendre_Symbol.two_cong_0_iff",
     "[2 = 0] (mod ?p) = (?p = 1 | ?p = 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_hole 3),
              template_var 0)
            )],
       template_dunno)),
    ("Legendre_Symbol.two_cong_0_iff_nat",
     "[2 = 0] (mod int ?p) = (?p = 1 | ?p = 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))),
                template_hole 5),
              template_app (template_hole 4, template_var 0))
            )],
       template_dunno))]
