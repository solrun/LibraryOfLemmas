   [("Carmichael_Numbers.Carmichael_number_imp_squarefree",
     "Carmichael_number ?n ==> squarefree ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Carmichael_Numbers.Carmichael_number_not_prime",
     "Carmichael_number ?n ==> ~ prime ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Carmichael_Numbers.Carmichael_not_primepow",
     "Carmichael_number ?n ==> ~ primepow ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Carmichael_Numbers.Carmichael_number_gt_3",
     "Carmichael_number ?n ==> 3 < ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0))),
    ("Carmichael_Numbers.Carmichael_number_odd",
     "Carmichael_number ?n ==> odd ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 0)
               )
           ))),
    ("Carmichael_Numbers.Carmichael_number_card_prime_factors",
     "Carmichael_number ?n ==> 3 <= card (prime_factors ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Carmichael_Numbers.Carmichael_number_imp_dvd",
     "[| Carmichael_number ?n; prime ?p; ?p dvd ?n |]
      ==> ?p - 1 dvd ?n - 1",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Carmichael_Numbers.Carmichael_number_imp_squarefree_alt_weak",
     "Carmichael_number ?n ==> EX p l. ?n = p * l & prime p & ~ p dvd l",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Carmichael_Numbers.Carmichael_number_iff",
     "Carmichael_number ?n =
      (?n ~= 1 &
       ~ prime ?n &
       squarefree ?n &
       (\<forall>p:#prime_factorization ?n. p - 1 dvd ?n - 1))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_hole 7))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 6, template_var 0))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0))),
                   t_empty))))
           ))),
    ("Carmichael_Numbers.Carmichael_number_imp_squarefree_alt",
     "Carmichael_number ?n ==>
      EX p l. ?n = p * l & prime p & ~ p dvd l & 2 < l",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Carmichael_Numbers.Carmichael_number_imp_squarefree_aux",
     "[| Carmichael_number ?n; ?n = ?p ^ ?r * ?l; prime ?p; ~ ?p dvd ?l;
         1 < ?r |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1)),
            template_var 0)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)
                )
            ),
        template_inequation (less_than, template_hole 1, template_var 1)],
       template_predicate (template_hole 0))),
    ("Carmichael_Numbers.Carmichael_number_iff'",
     "Carmichael_number ?n =
      (1 < ?n &
       size (prime_factorization ?n) ~= 1 &
       (\<forall>p:#prime_factorization ?n.
           count (prime_factorization ?n) p = 1 & p - 1 dvd ?n - 1))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 0))),
                     template_hole 9))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 5, template_var 0))),
                 t_empty)))
           ))),
    ("Carmichael_Numbers.Carmichael_numberI",
     "[| ~ prime ?n; squarefree ?n; 1 < ?n;
         !!p. p :# prime_factorization ?n ==> p - 1 dvd ?n - 1 |]
      ==> Carmichael_number ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 10, template_var 0))
            ),
        template_predicate (template_app (template_hole 9, template_var 0)),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0))))]
