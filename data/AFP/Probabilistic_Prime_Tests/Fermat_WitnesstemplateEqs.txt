   [("Fermat_Witness.snd_divide_out",
     "snd (divide_out ?p ?x) = multiplicity ?p ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Fermat_Witness.divide_out_code",
     "divide_out ?p ?x = divide_out_aux ?p (?x, 0)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Fermat_Witness.multiplicity_code",
     "multiplicity ?p ?x = snd (divide_out_aux ?p (?x, 0))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Fermat_Witness.fst_divide_out",
     "fst (divide_out ?p ?x) = ?x div ?p ^ multiplicity ?p ?x",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Fermat_Witness.divide_out_aux_correct",
     "divide_out_aux ?p ?z =
      (fst ?z div ?p ^ multiplicity ?p (fst ?z),
       snd ?z + multiplicity ?p (fst ?z))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 4, template_var 0))))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 4, template_var 0)))))),
    ("Fermat_Witness.strong_fermat_liar_code",
     "strong_fermat_liar ?a ?n =
      (let (m, k) = divide_out 2 (?n - 1)
       in [?a ^ m = 1] (mod ?n) |
          (EX i:{0..<k}. [?a ^ (2 ^ i * m) = ?n - 1] (mod ?n)))",
     template_equation
      (template_app
        (template_app (template_hole 15, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app (template_hole 11, template_hole 10))),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_hole 8))),
         template_app (template_hole 7, t_empty))))]
