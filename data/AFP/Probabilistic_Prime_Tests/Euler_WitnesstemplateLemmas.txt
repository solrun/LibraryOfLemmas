   [("Euler_Witness.euler_witness_mod",
     "euler_witness (?a mod int ?p) ?p = euler_witness ?a ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Euler_Witness.euler_liar_1_p", "?p ~= 0 ==> euler_liar 1 ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)
               )
           ))),
    ("Euler_Witness.euler_liar_mod",
     "euler_liar (?a mod int ?p) ?p = euler_liar ?a ?p",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Euler_Witness.euler_liar_cong",
     "[?a = ?b] (mod int ?p) ==> euler_liar ?a ?p = euler_liar ?b ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Euler_Witness.euler_liar_mult",
     "[| euler_liar ?y ?n; euler_liar ?x ?n |] ==> euler_liar (?x * ?y) ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_var 1)
               )
           ))),
    ("Euler_Witness.prime_imp_euler_liar",
     "[| prime ?p; 2 < ?p; 0 < ?x; ?x < int ?p |] ==> euler_liar ?x ?p",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("Euler_Witness.euler_liar_mult'",
     "[| 1 < ?n; coprime ?y (int ?n); euler_liar ?y ?n;
         euler_witness ?x ?n |]
      ==> euler_witness (?x * ?y) ?n",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 2)
           ))),
    ("Euler_Witness.euler_witnessI",
     "[| [?x ^ ((?n - 1) div 2) = ?a] (mod int ?n);
         [Jacobi ?x (int ?n) \<noteq> ?a] (mod int ?n) |]
      ==> euler_witness ?x ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 8, template_var 1),
                          template_hole 7)),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4))))),
                template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_app (template_hole 3, template_var 1))),
                    template_var 0),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Euler_Witness.euler_witness_exists_weak",
     "[| odd ?n; ~ prime ?n; 2 < ?n |]
      ==> EX a. euler_witness a ?n & coprime a (int ?n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 7))),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 0))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)),
          template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Euler_Witness.euler_witness_exists_nat",
     "[| odd ?n; ~ prime ?n; 2 < ?n |]
      ==> EX a. euler_witness (int a) ?n & coprime a ?n & 0 < a & a < ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_hole 8))),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_hole 8)),
          template_var 0)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Euler_Witness.euler_witness_exists",
     "[| odd ?n; ~ prime ?n; 2 < ?n |]
      ==> EX a. euler_witness a ?n &
                coprime a (int ?n) & 0 < a & a < int ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 10, template_hole 9))),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 0))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_hole 9)),
          template_var 0)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Euler_Witness.euler_witnessI2",
     "[| [?a \<noteq> ?b] (mod int ?k); ?k dvd ?n;
         euler_liar ?x ?n ==> [Jacobi ?x (int ?n) = ?a] (mod int ?k);
         euler_liar ?x ?n ==> [?x ^ ((?n - 1) div 2) = ?b] (mod int ?k) |]
      ==> euler_witness ?x ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_var 1)
                   )
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 7, template_var 0),
                      template_app (template_hole 10, template_var 1))),
                  template_var 4),
                template_app (template_hole 10, template_var 2))
              )),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_var 1)
                   )
               )],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 6, template_var 0),
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app
                           (template_app (template_hole 4, template_var 1),
                            template_hole 3)),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1, template_hole 0))))),
                  template_var 3),
                template_app (template_hole 10, template_var 2))
              ))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 0), template_var 1)
           )))]
