   [("Residues_Nat.square_minus_one_cong_one'",
     "1 < ?n ==> [(?n - 1) * (?n - 1) = 1] (mod ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_hole 3))),
               template_hole 3),
             template_var 0)
           ))),
    ("Residues_Nat.coprime_imp_mod_not_zero",
     "[| 1 < ?n; coprime ?x ?n |] ==> 0 < ?x mod ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Residues_Nat.minus_one_cong_solve",
     "[| 1 < ?n; [?x = ?n - 1] (mod ?n); [?x * ?y = 1] (mod ?n);
         coprime ?x ?n; coprime ?y ?n |]
      ==> [?y = ?n - 1] (mod ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 4)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0)),
                template_hole 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 4)),
             template_var 2)
           ))),
    ("Residues_Nat.minus_one_cong_solve_weak",
     "[| 1 < ?n; ?x : totatives ?n; ?y : totatives ?n;
         [?x = ?n - 1] (mod ?n); [?x * ?y = 1] (mod ?n) |]
      ==> ?y = ?n - 1",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 6)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0)),
                template_hole 6),
              template_var 2)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_hole 6))))]
