   [("Extended_Int.eint_ord_simps", "?q <= \<infinity>",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("Extended_Int.eint_ord_code", "(\<infinity> < ?q) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Extended_Int.eint_ord_code", "(?q <= \<infinity>) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Extended_Int.idiff_infinity", "\<infinity> - ?n = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Extended_Int.idiff_0_right", "?n - 0 = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Extended_Int.plus_eint_simps", "\<infinity> + ?q = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Extended_Int.plus_eint_simps", "?q + \<infinity> = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Extended_Int.mult_one_left", "1 * ?n = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Extended_Int.mult_one_right", "?n * 1 = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Extended_Int.max_eint_simps", "max \<infinity> ?q = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Extended_Int.max_eint_simps", "max ?q \<infinity> = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Extended_Int.min_eint_simps", "min \<infinity> ?q = ?q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Extended_Int.min_eint_simps", "min ?q \<infinity> = ?q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Extended_Int.ile_eSuc", "?n <= ?n + 1",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Extended_Int.infinity_ne_numeral", "\<infinity> ~= eint (numeral ?k)",
     template_negation
      (
         template_equation
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Extended_Int.numeral_ne_infinity", "eint (numeral ?k) ~= \<infinity>",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Extended_Int.eint_ord_code", "(eint ?m < \<infinity>) = True",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Extended_Int.eint_ord_code", "(\<infinity> <= eint ?n) = False",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Extended_Int.idiff_eint_0_right", "?n - eint 0 = ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Extended_Int.idiff_infinity_right",
     "eint ?a - \<infinity> = \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Extended_Int.times_eint_simps", "\<infinity> * eint ?n = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Extended_Int.times_eint_simps", "eint ?m * \<infinity> = \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Extended_Int.eint_nat_is_pos", "0 < eint (int (Suc ?n))",
     template_inequation
      (less_than, template_hole 3,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Extended_Int.eint_ord_simps",
     "(\<infinity> <= ?q) = (?q = \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Extended_Int.eint_numeral", "eint (numeral ?k) = eint (numeral ?k)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Extended_Int.eSuc_minus_1", "?n + 1 - 1 = ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)),
         template_hole 0),
       template_var 0)),
    ("Extended_Int.infinity_ilessE", "\<infinity> < eint ?m ==> ?R",
     template_implication
      ([template_inequation
         (less_than, template_hole 1,
          template_app (template_hole 0, template_var 1))],
       template_predicate (template_var 0))),
    ("Extended_Int.infinity_ileE", "\<infinity> <= eint ?m ==> ?R",
     template_implication
      ([template_inequation
         (less_equals, template_hole 1,
          template_app (template_hole 0, template_var 1))],
       template_predicate (template_var 0))),
    ("Extended_Int.eint_ord_simps",
     "(?q < \<infinity>) = (?q ~= \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 2)))),
    ("Extended_Int.eint_1_iff", "(1 = eint ?x) = (?x = 1)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Extended_Int.eint_0_iff", "(0 = eint ?x) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Extended_Int.eint_1_iff", "(eint ?x = 1) = (?x = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Extended_Int.eint_0_iff", "(eint ?x = 0) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Extended_Int.idiff_0", "0 - eint ?n = eint (- ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Extended_Int.eint_uminus_eq", "?a + - ?a = ?a - ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Extended_Int.eint_ord_code", "(eint ?m < eint ?n) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Extended_Int.eint_ord_code", "(eint ?m <= eint ?n) = (?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Extended_Int.eSuc_eint", "eint ?n + 1 = eint (?n + 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Extended_Int.idiff_eint_0", "eint 0 - eint ?n = eint (- ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Extended_Int.eint_pow_int_is_pos", "0 < ?n ==> 0 < eint ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Extended_Int.idiff_eint_eint", "eint ?a - eint ?b = eint (?a - ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Extended_Int.plus_eint_simps", "eint ?m + eint ?n = eint (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Extended_Int.times_eint_simps", "eint ?m * eint ?n = eint (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Extended_Int.max_eint_simps",
     "max (eint ?m) (eint ?n) = eint (max ?m ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Extended_Int.min_eint_simps",
     "min (eint ?m) (eint ?n) = eint (min ?m ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Extended_Int.eint_2_minus_1_mult", "eint 2 * ?b - ?b = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)))),
             template_var 0)),
         template_var 0),
       template_var 0)),
    ("Extended_Int.imult_infinity",
     "0 < ?n ==> \<infinity> * ?n = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Extended_Int.imult_infinity_right",
     "0 < ?n ==> ?n * \<infinity> = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Extended_Int.eint_minus_le", "?b < ?c ==> 0 < ?c - ?b",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Extended_Int.ileI1", "?m < ?n ==> ?m + 1 <= ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Extended_Int.not_infinity_eq",
     "(?x ~= \<infinity>) = (EX i. ?x = eint i)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Extended_Int.iless_Suc_eq", "(eint ?m < ?n + 1) = (eint ?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("Extended_Int.numeral_less_eint_iff",
     "(eint (numeral ?m) < eint ?n) = (numeral ?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Extended_Int.numeral_le_eint_iff",
     "(eint (numeral ?m) <= eint ?n) = (numeral ?m <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Extended_Int.Suc_ile_eq", "(eint (?m + 1) <= ?n) = (eint ?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("Extended_Int.not_eint_eq",
     "(ALL y. ?x ~= eint y) = (?x = \<infinity>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Extended_Int.eSuc_inject", "(?m + 1 = ?n + 1) = (?m = ?n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_equation (template_var 1, template_var 0))),
    ("Extended_Int.eSuc_mono", "(?n + 1 < ?m + 1) = (?n < ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Extended_Int.eSuc_ile_mono", "(?n + 1 <= ?m + 1) = (?n <= ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Extended_Int.eint_minus_comm", "?d + ?b - ?c = ?d - ?c + ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Extended_Int.iadd_Suc_right", "?m + (?n + 1) = ?m + ?n + 1",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Extended_Int.iadd_Suc", "?m + 1 + ?n = ?m + ?n + 1",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Extended_Int.mult_eSuc_right'", "?m * (?n + 1) = ?m + ?m * ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Extended_Int.mult_eSuc_right", "?m * (?n + 1) = ?m * ?n + ?m",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Extended_Int.mult_eSuc'", "(?m + 1) * ?n = ?n + ?m * ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Extended_Int.mult_eSuc", "(?m + 1) * ?n = ?m * ?n + ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Extended_Int.eSuc_minus_eSuc", "?n + 1 - (?m + 1) = ?n - ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Extended_Int.idiff_self", "?n ~= \<infinity> ==> ?n - ?n = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Extended_Int.sums_SUP", "?f sums (SUP n. sum ?f {..<n})",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_hole 0)))
         )),
    ("Extended_Int.eint_ord_Suc", "?x < ?y ==> ?x + 1 < ?y + 1",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Extended_Int.eint_iless", "?n < eint ?m ==> EX k. ?n = eint k",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Extended_Int.eint_ile", "?n <= eint ?m ==> EX k. ?n = eint k",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Extended_Int.sum_finite_imp_summands_finite",
     "?a + ?b ~= \<infinity> ==> ?a ~= \<infinity>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Extended_Int.sum_finite_imp_summands_finite",
     "?a + ?b ~= \<infinity> ==> ?b ~= \<infinity>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Extended_Int.suminf_eq_SUP", "suminf ?f = (SUP n. sum ?f {..<n})",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)))),
    ("Extended_Int.eint_ex_split",
     "(EX c. ?P c) = (?P \<infinity> | (EX x. ?P (eint x)))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 0, template_hole 2)),
         template_app (template_hole 1, t_empty)))),
    ("Extended_Int.plus_eq_infty_iff_eint",
     "(?m + ?n = \<infinity>) = (?m = \<infinity> | ?n = \<infinity>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Extended_Int.eint_ord_number",
     "(eint (numeral ?m) < eint (numeral ?n)) = (numeral ?m < numeral ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Extended_Int.eint_ord_number",
     "(eint (numeral ?m) <= eint (numeral ?n)) =
      (numeral ?m <= numeral ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Extended_Int.eSuc_max", "max ?x ?y + 1 = max (?x + 1) (?y + 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 0)))),
    ("Extended_Int.eint_nat_times",
     "0 < ?c ==> 0 < eint (int (Suc ?n)) * ?c",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_inequation
        (less_than, template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))),
           template_var 1)))),
    ("Extended_Int.nat_mult_not_infty",
     "?c ~= \<infinity> ==> eint ?n * ?c ~= \<infinity>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1),
             template_hole 2)
           ))),
    ("Extended_Int.eint_add_cancel_fact",
     "?c ~= \<infinity> ==> ?c + (?b - ?c) = ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Extended_Int.add_diff_cancel_eint",
     "?x ~= \<infinity> ==> ?x + ?y - ?x = ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1),
         template_var 0))),
    ("Extended_Int.eint_nat_times'",
     "0 <= eint (int ?c) ==> 0 <= Suc ?n * ?c",
     template_implication
      ([template_inequation
         (less_equals, template_hole 6,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 1)))],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Extended_Int.sum_infinity_imp_summand_infinity",
     "?a + ?b = \<infinity> ==> ?a = \<infinity> | ?b = \<infinity>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Extended_Int.eint_add_left_cancel",
     "(?a + ?b = ?a + ?c) = (?a = \<infinity> | ?b = ?c)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 0)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Extended_Int.eint_add_left_cancel_le",
     "(?a + ?b <= ?a + ?c) = (?a = \<infinity> | ?b <= ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))
           ))),
    ("Extended_Int.eint_pos_times_is_pos",
     "[| 0 < ?c; 0 < ?b |] ==> 0 < ?b * ?c",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Extended_Int.eint_add_left_cancel_less",
     "(?a + ?b < ?a + ?c) = (?a ~= \<infinity> & ?b < ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0))),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))
           ))),
    ("Extended_Int.eint_int_minus_distr",
     "eint ?n * ?c - eint ?m * ?c = eint (?n - ?m) * ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_var 1))),
    ("Extended_Int.add_diff_assoc_eint",
     "?z <= ?y ==> ?x + (?y - ?z) = ?x + ?y - ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Extended_Int.eint_pos_int_times_ge",
     "[| 0 <= ?c; 0 < ?n |] ==> ?c <= eint ?n * ?c",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Extended_Int.less_infinityE",
     "[| ?n < \<infinity>; !!k. ?n = eint k ==> ?P |] ==> ?P",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 3),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Extended_Int.eint_ord_plus_one",
     "[| eint ?n <= ?x; ?x < ?y |] ==> eint (?n + 1) <= ?y",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_var 0))),
    ("Extended_Int.chain_incr",
     "ALL i. EX j. ?Y i < ?Y j ==> EX j. eint ?k < ?Y j",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Extended_Int.eint_minus_ineq",
     "[| ?c ~= \<infinity>; ?d <= ?b |] ==> ?d - ?c <= ?b - ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Extended_Int.enat_eSuc_iff",
     "(eint ?y = ?x + 1) = (EX n. ?y = n + 1 & eint n = ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app (template_hole 4, t_empty))),
    ("Extended_Int.eSuc_eint_iff",
     "(?x + 1 = eint ?y) = (EX n. ?y = n + 1 & ?x = eint n)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_hole 6)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Extended_Int.eint_minus_distr",
     "?b ~= ?d ==> ?c * (?b - ?d) = ?c * ?b - ?c * ?d",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Extended_Int.eint_minus_distl",
     "?b ~= ?d ==> ?b * ?c - ?d * ?c = (?b - ?d) * ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Extended_Int.finite_eint_bounded",
     "(!!y. y : ?A ==> eint ?m <= y & y <= eint ?n) ==> finite ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Extended_Int.eSuc_Max",
     "[| finite ?A; ?A ~= {} |] ==> Max ?A + 1 = Max ((+) 1 ` ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_hole 1)),
             template_var 0))))),
    ("Extended_Int.eint_min_ineq",
     "[| min ?c ?d <= ?b; ?e < ?c; ?e < ?d |] ==> ?e < ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 1),
        template_inequation (less_than, template_var 0, template_var 3),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Extended_Int.ge_plus_pos_imp_gt",
     "[| ?c ~= \<infinity>; 0 < ?b; ?c + ?b <= ?d |] ==> ?c < ?d",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Extended_Int.eint_mult_mono",
     "[| 0 < ?c & ?c ~= \<infinity>; ?n < ?k |] ==> ?n * ?c < ?k * ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1)))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Extended_Int.eint_mult_mono'",
     "[| 0 <= ?c & ?c ~= \<infinity>; ?n < ?k |] ==> ?n * ?c <= ?k * ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2)))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Extended_Int.eint_pos_int_times_gt",
     "[| 0 < ?c; ?c ~= \<infinity>; 1 < ?n |] ==> ?c < eint ?n * ?c",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Extended_Int.less_eintE",
     "[| ?n < eint ?m; !!k. [| ?n = eint k; k < ?m |] ==> ?P |] ==> ?P",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Extended_Int.iadd_le_eint_iff",
     "(?x + ?y <= eint ?n) =
      (EX y' x'. ?x = eint x' & ?y = eint y' & x' + y' <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Extended_Int.eint_plus_times",
     "[| 0 <= ?d; ?c + eint ?k * ?d <= ?b; ?l <= ?k |]
      ==> ?c + eint ?l * ?d <= ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 4),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 4)),
          template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 4)),
         template_var 1))),
    ("Extended_Int.eint_minus_ineq'",
     "[| ?c ~= \<infinity>; ?d <= ?b; 0 < ?e; ?e ~= \<infinity> |]
      ==> ?e * (?d - ?c) <= ?e * (?b - ?c)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Extended_Int.eint_minus_ineq''",
     "[| ?c ~= \<infinity>; ?d <= ?b; 0 < ?e; ?e ~= \<infinity> |]
      ==> ?e * ?d - ?e * ?c <= ?e * (?b - ?c)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3))))),
    ("Extended_Int.eint2_cases",
     "[| !!int inta. [| ?y = eint int; ?ya = eint inta |] ==> ?P;
         !!int. [| ?y = eint int; ?ya = \<infinity> |] ==> ?P;
         !!int. [| ?y = \<infinity>; ?ya = eint int |] ==> ?P;
         [| ?y = \<infinity>; ?ya = \<infinity> |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_equation (template_var 2, template_hole 0)],
          template_implication
           ([template_equation (template_var 1, template_hole 0)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Extended_Int.eint3_cases",
     "[| !!int inta intb.
            [| ?y = eint int; ?ya = eint inta; ?yb = eint intb |] ==> ?P;
         !!int inta.
            [| ?y = eint int; ?ya = eint inta; ?yb = \<infinity> |] ==> ?P;
         !!int inta.
            [| ?y = eint int; ?ya = \<infinity>; ?yb = eint inta |] ==> ?P;
         !!int.
            [| ?y = eint int; ?ya = \<infinity>; ?yb = \<infinity> |]
            ==> ?P;
         !!int inta.
            [| ?y = \<infinity>; ?ya = eint int; ?yb = eint inta |] ==> ?P;
         !!int.
            [| ?y = \<infinity>; ?ya = eint int; ?yb = \<infinity> |]
            ==> ?P;
         !!int.
            [| ?y = \<infinity>; ?ya = \<infinity>; ?yb = eint int |]
            ==> ?P;
         [| ?y = \<infinity>; ?ya = \<infinity>; ?yb = \<infinity> |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_hole 0)],
          template_implication
           ([template_equation (template_var 2, template_hole 0)],
            template_implication
             ([template_equation (template_var 1, template_hole 0)],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0)))]
