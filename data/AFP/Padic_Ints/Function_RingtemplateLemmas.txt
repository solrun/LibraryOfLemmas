   [("Function_Ring.is_constant_seq_imp_closed",
     "is_constant_seq ?R ?s ==> ?s : carrier ?R\<^bsup>\<omega>\<^esup>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Function_Ring.closed_seqs_memE",
     "?s : carrier ?R\<^bsup>\<omega>\<^esup> ==> ?s ?k : carrier ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Function_Ring.closed_seqs_memI",
     "(!!k. ?s k : carrier ?R) ==> ?s : carrier ?R\<^bsup>\<omega>\<^esup>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Function_Ring.is_constant_seqE",
     "[| is_constant_seq ?R ?s; ?s ?k = ?a |] ==> ?s ?n = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 3, template_var 2), template_var 1)],
       template_equation
        (template_app (template_var 3, template_var 0), template_var 1))),
    ("Function_Ring.to_struct_map_closed",
     "?f : carrier ?T \<rightarrow> carrier ?S ==>
      to_struct_map ?T ?f : struct_maps ?T ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Function_Ring.struct_maps_memE",
     "[| ?f : struct_maps ?T ?S; ?x : carrier ?T |] ==> ?f ?x : carrier ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Function_Ring.is_constant_seqI",
     "[| ?s : carrier ?R\<^bsup>\<omega>\<^esup>; !!k. ?s k = ?a |]
      ==> is_constant_seq ?R ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("Function_Ring.pullback_closed",
     "[| ?f : struct_maps ?T ?S; ?g : struct_maps ?S ?U |]
      ==> pullback ?T ?f ?g : struct_maps ?T ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Function_Ring.pushforward_closed",
     "[| ?g : struct_maps ?T ?S; ?f : struct_maps ?S ?U |]
      ==> pushforward ?T ?f ?g : struct_maps ?T ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Function_Ring.struct_map_comp",
     "[| ?g : struct_maps ?T ?S; ?f : struct_maps ?S ?U |]
      ==> compose (carrier ?T) ?f ?g : struct_maps ?T ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Function_Ring.r_comp_is_compose",
     "[| ?g : struct_maps ?T ?S; ?f : struct_maps ?S ?U; ?a : carrier ?T |]
      ==> compose (carrier ?T) ?f ?g ?a = (?f o ?g) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 3, template_var 4)),
               template_var 2),
             template_var 5),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 5),
           template_var 0))))]
