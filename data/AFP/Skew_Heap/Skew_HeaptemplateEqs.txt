   [("Skew_Heap.size_merge",
     "size (merge ?t1.0 ?t2.0) = size ?t1.0 + size ?t2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Skew_Heap.size_merge2",
     "size (merge2 ?t1.0 ?t2.0) = size ?t1.0 + size ?t2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Skew_Heap.set_merge",
     "set_tree (merge ?t1.0 ?t2.0) = set_tree ?t1.0 Un set_tree ?t2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Skew_Heap.mset_merge",
     "mset_tree (merge ?t1.0 ?t2.0) = mset_tree ?t1.0 + mset_tree ?t2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Skew_Heap.merge_code",
     "merge ?t1.0 ?t2.0 =
      (case ?t1.0 of \<langle>\<rangle> => ?t2.0
       | \<langle>l1, a1, r1\<rangle> =>
           case ?t2.0 of \<langle>\<rangle> => ?t1.0
           | \<langle>l2, a2, r2\<rangle> =>
               if a1 <= a2 then \<langle>merge ?t2.0 r1, a1, l1\<rangle>
               else \<langle>merge ?t1.0 r2, a2, l2\<rangle>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 0), t_empty),
         template_var 1)))]
