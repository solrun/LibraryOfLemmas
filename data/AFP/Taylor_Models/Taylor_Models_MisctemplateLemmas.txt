   [("Taylor_Models_Misc.finite_vars_floatarith",
     "finite (vars_floatarith ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Taylor_Models_Misc.of_nat_real_float_equiv",
     "real ?n = real_of_float (of_nat ?n)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Taylor_Models_Misc.fact_real_float_equiv",
     "real_of_float (fact ?n) = fact ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Taylor_Models_Misc.fun_pow", "?f ^ ?n = (%x. ?f x ^ ?n)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       t_empty)),
    ("Taylor_Models_Misc.those_eq_None_iff",
     "(those ?ys = None) = (None : set ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Taylor_Models_Misc.those_eq_Some_iff",
     "(those ?ys = Some ?xs) = (?ys = map Some ?xs)",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Taylor_Models_Misc.Some_those_length",
     "those ?ys = Some ?xs ==> length ?xs = length ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Taylor_Models_Misc.max_Var_floatarith_eq_Max_vars_floatarith",
     "max_Var_floatarith ?fa =
      (if vars_floatarith ?fa = {} then 0
       else Suc (Max (vars_floatarith ?fa)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0)),
                   template_hole 3)),
               template_hole 2),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 0))))
           ))),
    ("Taylor_Models_Misc.Some_those_nth",
     "[| those ?ys = Some ?xs; ?i < length ?xs |]
      ==> Some (?xs ! ?i) = ?ys ! ?i",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Taylor_Models_Misc.fa_translate_correct",
     "[| max_Var_floatarith ?f <= length ?I; length ?v = length ?I |]
      ==> interpret_floatarith (fa_translate ?v ?f) ?I =
          interpret_floatarith ?f (map2 (+) ?I (map real_of_float ?v))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 2),
          template_app (template_hole 11, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))))))]
