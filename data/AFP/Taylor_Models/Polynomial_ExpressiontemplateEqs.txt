   [("Polynomial_Expression.degree_head",
     "Polynomial_Expression.degree (head ?p) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Polynomial_Expression.RIpoly_eqs", "Ipoly ?bs (?c)\<^sub>p = ?c",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Polynomial_Expression.degree_eq_degreen0",
     "Polynomial_Expression.degree ?p = degreen ?p 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Polynomial_Expression.head_eq_headn0", "head ?p = headn ?p 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Polynomial_Expression.coefficients_head",
     "last (coefficients ?p) = head ?p",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Polynomial_Expression.swap_same_id", "swap ?n ?n ?t = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 1),
         template_var 0),
       template_var 0)),
    ("Polynomial_Expression.polynate_idempotent",
     "polynate (polynate ?p) = polynate ?p",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Polynomial_Expression.polynate",
     "Ipoly ?bs (polynate ?p) = Ipoly ?bs ?p",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Polynomial_Expression.RIpoly_eqs", "Ipoly ?bs (Bound ?n) = ?bs ! ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Polynomial_Expression.degree_coefficients",
     "Polynomial_Expression.degree ?p = length (coefficients ?p) - 1",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Polynomial_Expression.shift1_degree",
     "Polynomial_Expression.degree (shift1 ?p) =
      1 + Polynomial_Expression.degree ?p",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Polynomial_Expression.poly_nate_polypoly'",
     "poly_nate ?bs ?p = polypoly' ?bs (polynate ?p)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Polynomial_Expression.RIpoly_eqs",
     "Ipoly ?bs (Neg ?a) = - Ipoly ?bs ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Polynomial_Expression.polyneg",
     "Ipoly ?bs (~\<^sub>p ?p) = - Ipoly ?bs ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Polynomial_Expression.swap_commute", "swap ?n ?m ?p = swap ?m ?n ?p",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Polynomial_Expression.swap_swap_id",
     "swap ?n ?m (swap ?m ?n ?t) = ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)),
       template_var 0)),
    ("Polynomial_Expression.funpow_shift1_degree",
     "Polynomial_Expression.degree ((shift1 ^^ ?k) ?p) =
      ?k + Polynomial_Expression.degree ?p",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("Polynomial_Expression.decrpoly_zero",
     "(decrpoly ?p = 0\<^sub>p) = (?p = 0\<^sub>p)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("Polynomial_Expression.polypow",
     "Ipoly ?bs (?p ^\<^sub>p ?n) = Ipoly ?bs ?p ^ ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Polynomial_Expression.RIpoly_eqs",
     "Ipoly ?bs (Pw ?t ?n) = Ipoly ?bs ?t ^ ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Polynomial_Expression.shift1",
     "Ipoly ?bs (shift1 ?p) = Ipoly ?bs (Mul (Bound 0) ?p)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 0)))),
    ("Polynomial_Expression.poly_nate_poly",
     "poly (poly_nate ?bs ?p) = (%x. Ipoly (x # ?bs) ?p)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("Polynomial_Expression.wf_bs_insensitive'",
     "wf_bs (?x # ?bs) ?p = wf_bs (?y # ?bs) ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("Polynomial_Expression.poly_cmul",
     "Ipoly ?bs (poly_cmul ?c ?p) = Ipoly ?bs (Mul (?c)\<^sub>p ?p)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Polynomial_Expression.swap_nz",
     "(swap ?n ?m ?p = 0\<^sub>p) = (?p = 0\<^sub>p)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("Polynomial_Expression.polymul",
     "Ipoly ?bs (?p *\<^sub>p ?q) = Ipoly ?bs ?p * Ipoly ?bs ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Polynomial_Expression.RIpoly_eqs",
     "Ipoly ?bs (Add ?a ?b) = Ipoly ?bs ?a + Ipoly ?bs ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Polynomial_Expression.RIpoly_eqs",
     "Ipoly ?bs (Mul ?a ?b) = Ipoly ?bs ?a * Ipoly ?bs ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Polynomial_Expression.RIpoly_eqs",
     "Ipoly ?bs (Sub ?a ?b) = Ipoly ?bs ?a - Ipoly ?bs ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Polynomial_Expression.polyadd",
     "Ipoly ?bs (?p +\<^sub>p ?q) = Ipoly ?bs ?p + Ipoly ?bs ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Polynomial_Expression.polysub",
     "Ipoly ?bs (?p -\<^sub>p ?q) = Ipoly ?bs ?p - Ipoly ?bs ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Polynomial_Expression.funpow_shift1",
     "Ipoly ?bs ((shift1 ^^ ?n) ?p) = Ipoly ?bs (Mul (Pw (Bound 0) ?n) ?p)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)),
               template_var 1)),
           template_var 0)))),
    ("Polynomial_Expression.funpow_shift1_1",
     "Ipoly ?bs ((shift1 ^^ ?n) ?p) =
      Ipoly ?bs ((shift1 ^^ ?n) (1::?'a)\<^sub>p *\<^sub>p ?p)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3),
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Polynomial_Expression.polysubst0_I",
     "Ipoly (?b # ?bs) (polysubst0 ?a ?t) =
      Ipoly (Ipoly (?b # ?bs) ?a # ?bs) ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Polynomial_Expression.RIpoly_eqs",
     "Ipoly ?bs (CN ?c ?n ?p) = Ipoly ?bs ?c + ?bs ! ?n * Ipoly ?bs ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0)))))]
