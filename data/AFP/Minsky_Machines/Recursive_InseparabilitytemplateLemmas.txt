   [("Recursive_Inseparability.computable_rec_inseparable_conv",
     "computable ?A = (~ rec_inseparable ?A (- ?A))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Recursive_Inseparability.rec_inseparable_symmetric",
     "rec_inseparable ?A ?B ==> rec_inseparable ?B ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Recursive_Inseparability.rec_inseparable_collapse",
     "?A Int ?B ~= {} ==> rec_inseparable ?A ?B",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Recursive_Inseparability.c_pair_inj'",
     "(c_pair ?x1.0 ?y1.0 = c_pair ?x2.0 ?y2.0) =
      (?x1.0 = ?x2.0 & ?y1.0 = ?y2.0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("Recursive_Inseparability.Rice_rec_inseparable",
     "rec_inseparable {k. nat_to_ce_set k = nat_to_ce_set ?n}
       {k. nat_to_ce_set k = nat_to_ce_set ?m}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app (template_hole 2, t_empty))
         )),
    ("Recursive_Inseparability.rec_inseparable_non_computable",
     "[| ?A Int ?B = {}; rec_inseparable ?A ?B |] ==> ~ computable ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 1))
           ))),
    ("Recursive_Inseparability.rec_inseparable_many_reducible",
     "[| total_recursive ?f; rec_inseparable (?f -` ?A) (?f -` ?B) |]
      ==> rec_inseparable ?A ?B",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Recursive_Inseparability.rec_inseparable_mono",
     "[| rec_inseparable ?A ?B; ?A <= ?A'; ?B <= ?B' |]
      ==> rec_inseparable ?A' ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 3, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Recursive_Inseparability.rec_inseparableD",
     "[| rec_inseparable ?A ?B; ?A <= ?X; ?B <= - ?X; computable ?X |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_hole 0))),
    ("Recursive_Inseparability.rec_inseparableI",
     "(!!X. [| ?A <= X; ?B <= - X; computable X |] ==> False) ==>
      rec_inseparable ?A ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
