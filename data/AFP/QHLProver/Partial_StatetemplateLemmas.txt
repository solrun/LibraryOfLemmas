   [("Partial_State.nths_minus_upt_eq_drop",
     "nths ?l (- {..<?n}) = drop ?n ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Partial_State.digit_encode_take",
     "take ?n (digit_encode ?ds ?a) = digit_encode (take ?n ?ds) ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Partial_State.digit_encode_drop",
     "drop ?n (digit_encode ?ds ?a) =
      digit_encode (drop ?n ?ds) (?a div prod_list (take ?n ?ds))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Partial_State.nths_reencode_eq",
     "?B <= ?A ==> nths (nths ?xs ?A) (ind_in_set ?A ` ?B) = nths ?xs ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("Partial_State.nths_intersection_eq",
     "{0..<length ?xs} <= ?A ==> nths ?xs ?B = nths ?xs (?A Int ?B)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_app (template_hole 3, template_var 2)),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Partial_State.ind_in_set_bound",
     "?M <= ?N ==> ind_in_set ?A ?N ~: ind_in_set ?A ` ({0..<?M} Int ?A)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_var 0)),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_var 2)),
                     template_var 0)))
               )
           ))),
    ("Partial_State.nths_minus_eq",
     "{0..<length ?xs} <= ?A ==> nths ?xs (- ?B) = nths ?xs (?A - ?B)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_app (template_hole 4, template_var 2)),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Partial_State.nths_reencode_eq_comp",
     "?B <= ?A ==>
      nths (nths ?xs ?A) (- ind_in_set ?A ` ?B) = nths ?xs (?A - ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 2))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Partial_State.nths_prod_list_split",
     "?B <= ?A ==>
      prod_list (nths ?xs ?A) =
      prod_list (nths ?xs ?B) * prod_list (nths ?xs (?A - ?B))",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2))),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))))))),
    ("Partial_State.lt_set_card_lt",
     "[| finite ?A; ?x : ?A |] ==> card {y: ?A. y < ?x} < card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_app (template_hole 2, template_var 1)))),
    ("Partial_State.ind_in_set_iff",
     "[| ?x : ?A; ?B <= ?A |]
      ==> (ind_in_set ?A ?x : ind_in_set ?A ` ?B) = (?x : ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Partial_State.bij_minus_subset",
     "[| bij_betw ?f ?A ?B; ?C <= ?A |]
      ==> ?f ` ?A - ?f ` ?C = ?f ` (?A - ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Partial_State.nths_split_complement_eq",
     "[| ?A Int ?B = {}; {0..<length ?xs} <= ?A Un ?B |]
      ==> nths ?xs ?A = nths ?xs (- ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_hole 8),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_app (template_hole 4, template_var 0)),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Partial_State.bij_ind_in_set_bound",
     "(!!x. ?f x = card {y: ?v0.0. y < x}) ==>
      bij_betw ?f ({0..<?M} Int ?v0.0) {0..<card ({0..<?M} Int ?v0.0)}",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 0)),
                   template_var 1))))
           ))),
    ("Partial_State.ind_in_set_minus_subset_bound",
     "?B <= ?A ==>
      ind_in_set ?A ` ({0..<?M} Int ?A) - ind_in_set ?A ` ?B =
      ind_in_set ?A ` ({0..<?M} Int ?A) Int ind_in_set ?A ` (?A - ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 2))))))]
