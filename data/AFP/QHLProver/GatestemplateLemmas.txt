   [("Gates.unitary_mat_incr", "unitary (mat_incr ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Gates.mat_incr_dim", "mat_incr ?n : carrier_mat ?n ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Gates.mat_incr_mult_adjoint_mat_incr",
     "mat_incr ?n * adjoint (mat_incr ?n) = 1\<^sub>m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Gates.sum_le_2", "sum ?f {0..<2} = ?f 0 + ?f 1",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 0, template_hole 5)),
         template_app (template_var 0, template_hole 0)))),
    ("Gates.adjoint_mat_incr",
     "adjoint (mat_incr ?n) =
      mat ?n ?n
       (%(i, j).
           if j = 0 then if i = ?n - 1 then 1 else 0
           else if j = i + 1 then 1 else 0)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 9, template_var 0), template_var 0),
         template_app (template_hole 8, t_empty))))]
