Loading theory "Draft.Weighted_FO_Ordered_Resolution_Prover" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates" via "Draft.Executable_FO_Ordered_Resolution_Prover" via "Draft.Deterministic_FO_Ordered_Resolution_Prover")
Loading theory "Draft.IsaFoR_Term" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates" via "Draft.Executable_FO_Ordered_Resolution_Prover" via "Draft.Executable_Subsumption")
Loading theory "Draft.Templates" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.249s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates")
Found termination order: "{}"
locale weighted_FO_resolution_prover
  fixes S :: "'a literal multiset => 'a literal multiset"
    and subst_atm :: "'a => 's => 'a"
    and id_subst :: "'s"
    and comp_subst :: "'s => 's => 's"
    and renamings_apart :: "'a literal multiset list => 's list"
    and atm_of_atms :: "'a list => 'a"
    and mgu :: "'a set set => 's option"
    and less_atm :: "'a => 'a => bool"
    and weight :: "'a literal multiset * nat => nat"
  assumes
    "weighted_FO_resolution_prover S (\<cdot>a) id_subst (\<odot>)
      renamings_apart atm_of_atms mgu less_atm weight"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.583s elapsed time, 1.746s cpu time, 0.120s GC time
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "weighted_RP"
  Proving monotonicity ...
consts
  renamings_apart ::
    "('f, nat) Term.term literal multiset list
     => (nat => ('f, nat) Term.term) list"
Found termination order: "length <*mlex*> {}"
deriving "compare" instance for type "Term.term"
generating comparator for type "Term.term"
locale weighted_FO_resolution_prover_with_size_timestamp_factors
  fixes S :: "'a literal multiset => 'a literal multiset"
    and subst_atm :: "'a => 's => 'a"
    and id_subst :: "'s"
    and comp_subst :: "'s => 's => 's"
    and renamings_apart :: "'a literal multiset list => 's list"
    and atm_of_atms :: "'a list => 'a"
    and mgu :: "'a set set => 's option"
    and less_atm :: "'a => 'a => bool"
    and size_atm :: "'a => nat"
    and size_factor :: "nat"
    and timestamp_factor :: "nat"
  assumes
    "weighted_FO_resolution_prover_with_size_timestamp_factors S (\<cdot>a)
      id_subst (\<odot>) renamings_apart atm_of_atms mgu less_atm
      timestamp_factor"
deriving "compare" instance for type "Clausal_Logic.literal"
generating comparator for type "Clausal_Logic.literal"
Found termination order: "{}"
### theory "Draft.Weighted_FO_Ordered_Resolution_Prover"
### 2.033s elapsed time, 5.008s cpu time, 0.813s GC time
Loading theory "Draft.Deterministic_FO_Ordered_Resolution_Prover" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates" via "Draft.Executable_FO_Ordered_Resolution_Prover")
deriving "linorder" instance for type "Product_Type.prod"
deriving "linorder" instance for type "List.list"
class weighted = type +
  fixes weights :: "'a weights"
  assumes
    "weights_adm":
      "admissible_kbo (w weights) (w0 weights) (pr_strict weights)
        (pr_strict weights)^== (least weights) (scf weights)"
    and
    "pr_strict_total":
      "!!fi gj. fi = gj | pr_strict weights fi gj | pr_strict weights gj fi"
    and "pr_strict_asymp": "asymp (pr_strict weights)"
    and "scf_ok": "!!i n f. i < n ==> scf weights (f, n) i <= 1"
instantiation
  unit :: weighted
  weights_unit == weights :: unit weights
instantiation
  Term.term :: (weighted, type) linorder
  less_eq_term == less_eq ::
    ('a, 'b) Term.term => ('a, 'b) Term.term => bool
  less_term == less :: ('a, 'b) Term.term => ('a, 'b) Term.term => bool
instantiation
  Term.term :: (weighted, type) wellorder
### theory "Draft.IsaFoR_Term"
### 2.978s elapsed time, 6.989s cpu time, 1.046s GC time
Loading theory "Draft.Executable_Subsumption" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates" via "Draft.Executable_FO_Ordered_Resolution_Prover")
locale deterministic_FO_resolution_prover
  fixes S :: "'a literal multiset => 'a literal multiset"
    and subst_atm :: "'a => 's => 'a"
    and id_subst :: "'s"
    and comp_subst :: "'s => 's => 's"
    and renamings_apart :: "'a literal multiset list => 's list"
    and atm_of_atms :: "'a list => 'a"
    and mgu :: "'a set set => 's option"
    and less_atm :: "'a => 'a => bool"
    and size_atm :: "'a => nat"
    and timestamp_factor :: "nat"
    and size_factor :: "nat"
  assumes
    "deterministic_FO_resolution_prover S (\<cdot>a) id_subst (\<odot>)
      renamings_apart atm_of_atms mgu less_atm size_factor"
Found termination order: "{}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
consts
  reduce ::
    "'a literal list list
     => 'a literal list => 'a literal list => 'a literal list"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.Executable_Subsumption"
### 1.253s elapsed time, 2.852s cpu time, 0.816s GC time
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "{}"
consts
  derivation_from ::
    "('a literal list * nat) list *
     ('a literal list * nat) list * ('a literal list * nat) list * nat
     => (('a literal list * nat) list *
         ('a literal list * nat) list *
         ('a literal list * nat) list * nat) llist"
### theory "Draft.Deterministic_FO_Ordered_Resolution_Prover"
### 3.325s elapsed time, 6.041s cpu time, 1.223s GC time
Loading theory "Draft.Executable_FO_Ordered_Resolution_Prover" (required by "Draft.Executable_FO_Ordered_Resolution_ProverTemplates")
See theory exports
See theory exports
instantiation
  nat :: weighted
  weights_nat == weights :: nat weights
See theory exports
### theory "Draft.Executable_FO_Ordered_Resolution_Prover"
### 6.914s elapsed time, 10.522s cpu time, 0.762s GC time
Loading theory "Draft.Executable_FO_Ordered_Resolution_ProverTemplates"
"False"
  :: "bool"
"True"
  :: "bool"
"False"
  :: "bool"
val templateLemmas =
   [("Executable_FO_Ordered_Resolution_Prover.remove1_mset_subset_eq",
     "(remove1_mset ?a ?A <=# ?B) = (?A <=# add_mset ?a ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Executable_FO_Ordered_Resolution_Prover.prover_complete_refutation",
     "prover ?N = satisfiable (RP.grounded_N0 ?N)",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Executable_FO_Ordered_Resolution_Prover.Bex_cong",
     "(!!b. b : ?B ==> ?P b = ?Q b) ==> Bex ?B ?P = Bex ?B ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Executable_FO_Ordered_Resolution_Prover.is_reducible_lit_code",
     "is_reducible_lit ?Ds ?C ?L =
      (EX D:set ?Ds.
          EX L':set D.
             if is_pos L' = is_neg ?L
             then case match_term_list [(atm_of L', atm_of ?L)] Map.empty of
                  None => False
                  | Some \<sigma> =>
                      subsumes_list (remove1 L' D) ?C \<sigma>
             else False)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 17, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 2)),
         t_empty)))]:
   (string * thm * template) list
### theory "Draft.Executable_FO_Ordered_Resolution_ProverTemplates"
### 1.522s elapsed time, 5.793s cpu time, 0.447s GC time
"False"
  :: "bool"
"False"
  :: "bool"
"False"
  :: "bool"
"False"
  :: "bool"
"False"
  :: "bool"
"False"
  :: "bool"
val it = (): unit
