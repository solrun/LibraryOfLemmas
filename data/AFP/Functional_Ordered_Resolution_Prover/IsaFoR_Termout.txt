Loading theory "Draft.IsaFoR_Term" (required by "Draft.IsaFoR_TermTemplates")
Loading theory "Draft.Templates" (required by "Draft.IsaFoR_TermTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.165s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.IsaFoR_TermTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.515s elapsed time, 1.045s cpu time, 0.036s GC time
consts
  renamings_apart ::
    "('f, nat) Term.term literal multiset list
     => (nat => ('f, nat) Term.term) list"
Found termination order: "length <*mlex*> {}"
deriving "compare" instance for type "Term.term"
generating comparator for type "Term.term"
deriving "compare" instance for type "Clausal_Logic.literal"
generating comparator for type "Clausal_Logic.literal"
deriving "linorder" instance for type "Product_Type.prod"
deriving "linorder" instance for type "List.list"
class weighted = type +
  fixes weights :: "'a weights"
  assumes
    "weights_adm":
      "admissible_kbo (w weights) (w0 weights) (pr_strict weights)
        (pr_strict weights)^== (least weights) (scf weights)"
    and
    "pr_strict_total":
      "!!fi gj. fi = gj | pr_strict weights fi gj | pr_strict weights gj fi"
    and "pr_strict_asymp": "asymp (pr_strict weights)"
    and "scf_ok": "!!i n f. i < n ==> scf weights (f, n) i <= 1"
instantiation
  unit :: weighted
  weights_unit == weights :: unit weights
instantiation
  Term.term :: (weighted, type) linorder
  less_eq_term == less_eq ::
    ('a, 'b) Term.term => ('a, 'b) Term.term => bool
  less_term == less :: ('a, 'b) Term.term => ('a, 'b) Term.term => bool
instantiation
  Term.term :: (weighted, type) wellorder
### theory "Draft.IsaFoR_Term"
### 2.347s elapsed time, 3.117s cpu time, 0.257s GC time
Loading theory "Draft.IsaFoR_TermTemplates"
val templateLemmas =
   [("IsaFoR_Term.finite_vars_clause", "finite (vars_clause ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("IsaFoR_Term.finite_vars_clause_list", "finite (vars_clause_list ?Cs)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("IsaFoR_Term.generalizes_refl", "generalizes ?C ?C",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 0)
         )),
    ("IsaFoR_Term.subsumes_refl", "subsumes ?C ?C",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 0)
         )),
    ("IsaFoR_Term.subsumes_empty_left", "subsumes {#} ?C",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 0)
         )),
    ("IsaFoR_Term.strictly_generalizes_irrefl",
     "~ strictly_generalizes ?C ?C",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               template_var 0)
             )
         )),
    ("IsaFoR_Term.strictly_subsumes_irrefl", "~ strictly_subsumes ?C ?C",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               template_var 0)
             )
         )),
    ("IsaFoR_Term.id_subst_comp_subst",
     "comp_subst_abbrev Var ?\<sigma> = ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("IsaFoR_Term.comp_subst_id_subst",
     "comp_subst_abbrev ?\<sigma> Var = ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atm_id_subst", "subst_atm_abbrev ?A Var = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.len_renamings_apart",
     "length (renamings_apart ?Cs) = length ?Cs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("IsaFoR_Term.renamings_apart_length",
     "length (renamings_apart ?Cs) = length ?Cs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("IsaFoR_Term.subst_atmss_id_subst", "subst_atmss ?AAA Var = ?AAA",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atmss_empty", "subst_atmss {} ?\<sigma> = {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_atms_id_subst", "subst_atms ?AA Var = ?AA",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atms_empty", "subst_atms {} ?\<sigma> = {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_clss_id_subst", "subst_clss ?CC Var = ?CC",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_clss_empty", "subst_clss {} ?\<sigma> = {}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.is_ground_atm_ground", "is_ground_atm ?t = ground ?t",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("IsaFoR_Term.Nil_comp_substs", "comp_substs [] ?s = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.comp_substs_Nil", "comp_substs ?s [] = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_atm_list_id_subst", "subst_atm_list ?As Var = ?As",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atm_list_empty", "subst_atm_list [] ?\<sigma> = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_atm_mset_list_id_subst",
     "subst_atm_mset_list ?AAs Var = ?AAs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atm_mset_list_empty",
     "subst_atm_mset_list [] ?\<sigma> = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_atm_mset_lists_empty",
     "subst_atm_mset_lists [] ?\<sigma>s = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_cls_lists_Nil", "subst_cls_lists ?Cs [] = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("IsaFoR_Term.subst_cls_list_id_subst", "subst_cls_list ?Cs Var = ?Cs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_cls_list_empty", "subst_cls_list [] ?\<sigma> = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_cls_lists_empty",
     "subst_cls_lists [] ?\<sigma>s = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_atm_mset_id_subst", "subst_atm_mset ?AA Var = ?AA",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atm_mset_empty",
     "subst_atm_mset {#} ?\<sigma> = {#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_cls_mset_id_subst", "subst_cls_mset ?CC Var = ?CC",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_scls_mset_empty",
     "subst_cls_mset {#} ?\<sigma> = {#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_cls_id_subst", "subst_cls ?C Var = ?C",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.subst_cls_empty", "subst_cls {#} ?\<sigma> = {#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0),
       template_hole 0)),
    ("IsaFoR_Term.subst_lit_id_subst", "subst_lit ?L Var = ?L",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("IsaFoR_Term.vars_partitioned_renamings_apart",
     "vars_partitioned (subst_cls_lists ?Cs (renamings_apart ?Cs))",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("IsaFoR_Term.union_grounding_of_cls_ground",
     "is_ground_clss (\<Union> (grounding_of_cls ` ?N))",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 3)),
               template_var 0)))
         )),
    ("IsaFoR_Term.renamings_apart_var_disjoint",
     "var_disjoint (subst_cls_lists ?Cs (renamings_apart ?Cs))",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 2),
               template_var 0),
             template_app (template_hole 0, template_var 0)))
         )),
    ("IsaFoR_Term.comparator_literal",
     "comparator ?comp\<^sub>'\<^sub>a ==>
      comparator (comparator_literal ?comp\<^sub>'\<^sub>a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("IsaFoR_Term.vars_partitioned_var_disjoint",
     "vars_partitioned ?Cs ==> var_disjoint ?Cs",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("IsaFoR_Term.subst_atm_list_length",
     "length (subst_atm_list ?As ?\<sigma>) = length ?As",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("IsaFoR_Term.length_subst_atm_mset_list",
     "length (subst_atm_mset_list ?AAs ?\<eta>) = length ?AAs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("IsaFoR_Term.subst_cls_list_length",
     "length (subst_cls_list ?Cs ?\<sigma>) = length ?Cs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("IsaFoR_Term.size_subst", "size (subst_cls ?D ?\<sigma>) = size ?D",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("IsaFoR_Term.subst_lit_is_pos",
     "is_pos (subst_lit ?L ?\<sigma>) = is_pos ?L",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("IsaFoR_Term.comparator_literal_simps",
     "comparator_literal ?comp\<^sub>'\<^sub>a (Neg ?x) (Pos ?y) = Gt",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("IsaFoR_Term.comparator_literal_simps",
     "comparator_literal ?comp\<^sub>'\<^sub>a (Pos ?x) (Neg ?ya) = Lt",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("IsaFoR_Term.renamings_apart_inj",
     "ALL \<sigma>:set (renamings_apart ?Cs). inj \<sigma>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty)
         )),
    ("IsaFoR_Term.less_kbo_less", "less_kbo ?s ?t ==> ?s < ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("IsaFoR_Term.strictly_subsumes_empty_left",
     "strictly_subsumes {#} ?C = (?C ~= {#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 2)))),
    ("IsaFoR_Term.variants_sym", "variants ?D ?D' = variants ?D' ?D",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 1))),
    ("IsaFoR_Term.comp_substs_id_subst",
     "comp_substs ?\<sigma>s (replicate (length ?\<sigma>s) Var) =
      ?\<sigma>s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)),
       template_var 0)),
    ("IsaFoR_Term.id_subst_comp_substs",
     "comp_substs (replicate (length ?\<sigma>s) Var) ?\<sigma>s =
      ?\<sigma>s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("IsaFoR_Term.subst_atm_mset_lists_id_subst",
     "subst_atm_mset_lists ?AAs (replicate (length ?AAs) Var) = ?AAs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)),
       template_var 0)),
    ("IsaFoR_Term.subst_cls_lists_id_subst",
     "subst_cls_lists ?Cs (replicate (length ?Cs) Var) = ?Cs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)),
       template_var 0)),
    ("IsaFoR_Term.is_ground_cls_is_ground_atms_atms_of",
     "is_ground_cls ?C ==> is_ground_atms (atms_of ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("IsaFoR_Term.is_ground_cls_list_is_ground_cls_sum_list",
     "is_ground_cls_list ?Cs ==> is_ground_cls (sum_list ?Cs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("IsaFoR_Term.subset_strictly_subsumes",
     "?C <# ?D ==> strictly_subsumes ?C ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0)
           ))),
    ("IsaFoR_Term.subst_lit_is_neg",
     "is_neg (subst_lit ?L ?\<sigma>) = is_neg ?L",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))),
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 1)))),
    ("IsaFoR_Term.subst_atmss_empty_iff",
     "(subst_atmss ?AAA ?\<eta> = {}) = (?AAA = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_atms_empty_iff",
     "(subst_atms ?AA ?\<eta> = {}) = (?AA = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_clss_empty_iff",
     "(subst_clss ?CC ?\<eta> = {}) = (?CC = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_atm_list_empty_iff",
     "(subst_atm_list ?As ?\<eta> = []) = (?As = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_atm_mset_list_empty_iff",
     "(subst_atm_mset_list ?AAs ?\<eta> = []) = (?AAs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_cls_list_empty_iff",
     "(subst_cls_list ?Cs ?\<eta> = []) = (?Cs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_atm_mset_empty_iff",
     "(subst_atm_mset ?AA ?\<eta> = {#}) = (?AA = {#})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_cls_mset_empty_iff",
     "(subst_cls_mset ?CC ?\<eta> = {#}) = (?CC = {#})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.subst_cls_empty_iff",
     "(subst_cls ?C ?\<eta> = {#}) = (?C = {#})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_hole 0),
       template_equation (template_var 1, template_hole 0))),
    ("IsaFoR_Term.atm_of_subst_lit",
     "atm_of (subst_lit ?L ?\<sigma>) =
      subst_atm_abbrev (atm_of ?L) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.comparator_literal_simps",
     "comparator_literal ?comp\<^sub>'\<^sub>a (Neg ?x) (Neg ?ya) =
      ?comp\<^sub>'\<^sub>a ?x ?ya",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("IsaFoR_Term.comparator_literal_simps",
     "comparator_literal ?comp\<^sub>'\<^sub>a (Pos ?x) (Pos ?y) =
      ?comp\<^sub>'\<^sub>a ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("IsaFoR_Term.comparator_term_simps",
     "comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v (Var ?x)
       (Fun ?ya ?yb) =
      Lt",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("IsaFoR_Term.comparator_term_simps",
     "comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v
       (Fun ?x ?xa) (Var ?y) =
      Gt",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("IsaFoR_Term.renamings_apart_is_Var",
     "ALL \<sigma>:set (renamings_apart ?Cs). ALL x. is_Var (\<sigma> x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty)
         )),
    ("IsaFoR_Term.is_ground_subst_atm",
     "is_ground_atm ?A ==> subst_atm_abbrev ?A ?\<sigma> = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 1))),
    ("IsaFoR_Term.ground_subst_ground_atm",
     "is_ground_subst ?\<sigma> ==>
      is_ground_atm (subst_atm_abbrev ?A ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.is_ground_comp_subst",
     "is_ground_subst ?\<sigma> ==>
      is_ground_subst (comp_subst_abbrev ?\<tau> ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.vars_clause_mono",
     "?S <=# ?C ==> vars_clause ?S <= vars_clause ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("IsaFoR_Term.grounding_ground",
     "?C : grounding_of_clss ?M ==> is_ground_cls ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1)
           ))),
    ("IsaFoR_Term.comp_subst_assoc",
     "comp_subst_abbrev ?\<sigma> (comp_subst_abbrev ?\<tau> ?\<gamma>) =
      comp_subst_abbrev (comp_subst_abbrev ?\<sigma> ?\<tau>) ?\<gamma>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.comp_substs_length",
     "length (comp_substs ?\<tau>s ?\<sigma>s) =
      min (length ?\<tau>s) (length ?\<sigma>s)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("IsaFoR_Term.subst_atm_mset_lists_length",
     "length (subst_atm_mset_lists ?AAs ?\<sigma>s) =
      min (length ?AAs) (length ?\<sigma>s)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("IsaFoR_Term.subst_cls_lists_length",
     "length (subst_cls_lists ?Cs ?\<sigma>s) =
      min (length ?Cs) (length ?\<sigma>s)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("IsaFoR_Term.atms_of_subst_atms",
     "subst_atms (atms_of ?C) ?\<sigma> = atms_of (subst_cls ?C ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.set_mset_subst_cls_mset_subst_clss",
     "set_mset (subst_cls_mset ?CC ?\<mu>) =
      subst_clss (set_mset ?CC) ?\<mu>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_ground_cls_as_atms",
     "is_ground_cls ?C = Ball (atms_of ?C) is_ground_atm",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("IsaFoR_Term.subst_atm_list_tl",
     "tl (subst_atm_list ?As ?\<sigma>) =
      subst_atm_list (tl ?As) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_mset_list_tl",
     "tl (subst_atm_mset_list ?AAs ?\<sigma>) =
      subst_atm_mset_list (tl ?AAs) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_cls_list_tl",
     "tl (subst_cls_list ?Cs ?\<sigma>) =
      subst_cls_list (tl ?Cs) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_comp_subst",
     "subst_atm_abbrev ?A (comp_subst_abbrev ?\<sigma> ?\<tau>) =
      subst_atm_abbrev (subst_atm_abbrev ?A ?\<sigma>) ?\<tau>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.comparator_term_simps",
     "comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v (Var ?x)
       (Var ?y) =
      ?comp\<^sub>'\<^sub>v ?x ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("IsaFoR_Term.mset_subst_atm_list_subst_atm_mset",
     "mset (subst_atm_list ?As ?\<sigma>) =
      subst_atm_mset (mset ?As) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.mset_subst_cls_list_subst_cls_mset",
     "mset (subst_cls_list ?Cs ?\<sigma>) =
      subst_cls_mset (mset ?Cs) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.sum_list_subst_cls_list_subst_cls",
     "sum_list (subst_cls_list ?Cs ?\<eta>) =
      subst_cls (sum_list ?Cs) ?\<eta>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_hole 1),
           template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_minus",
     "subst_lit (- ?L) ?\<mu> = - subst_lit ?L ?\<mu>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.vars_in_instance_in_range_term",
     "vars_term (subst_atm_abbrev ?A ?\<sigma>)
      <= \<Union> (vars_term ` range ?\<sigma>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 5),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("IsaFoR_Term.is_ground_subst_atm_list",
     "is_ground_atm_list ?As ==> subst_atm_list ?As ?\<sigma> = ?As",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("IsaFoR_Term.is_ground_subst_atm_mset",
     "is_ground_atm_mset ?AA ==> subst_atm_mset ?AA ?\<sigma> = ?AA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("IsaFoR_Term.is_ground_subst_atms",
     "is_ground_atms ?AA ==> subst_atms ?AA ?\<sigma> = ?AA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("IsaFoR_Term.is_ground_subst_cls",
     "is_ground_cls ?C ==> subst_cls ?C ?\<sigma> = ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("IsaFoR_Term.is_ground_subst_clss",
     "is_ground_clss ?CC ==> subst_clss ?CC ?\<sigma> = ?CC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("IsaFoR_Term.is_ground_subst_lit",
     "is_ground_lit ?L ==> subst_lit ?L ?\<sigma> = ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 1),
           template_var 0),
         template_var 1))),
    ("IsaFoR_Term.ground_subst_ground_cls",
     "is_ground_subst ?\<sigma> ==> is_ground_cls (subst_cls ?C ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.ground_subst_ground_cls_list",
     "is_ground_subst ?\<sigma> ==>
      is_ground_cls_list (subst_cls_list ?Cs ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.ground_subst_ground_clss",
     "is_ground_subst ?\<sigma> ==>
      is_ground_clss (subst_clss ?CC ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.ground_subst_ground_lit",
     "is_ground_subst ?\<sigma> ==> is_ground_lit (subst_lit ?L ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.strictly_generalizes_antisym",
     "strictly_generalizes ?C ?D ==> ~ strictly_generalizes ?D ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("IsaFoR_Term.strictly_subsumes_antisym",
     "strictly_subsumes ?C ?D ==> ~ strictly_subsumes ?D ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("IsaFoR_Term.is_mgu_is_unifiers",
     "IsaFoR_Term.is_mgu ?\<sigma> ?AAA ==> is_unifiers ?\<sigma> ?AAA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 1),
             template_var 0)
           ))),
    ("IsaFoR_Term.renamings_apart_renaming",
     "?\<rho> : set (renamings_apart ?Cs) ==>
      IsaFoR_Term.is_renaming ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1)
           ))),
    ("IsaFoR_Term.subst_atms_single",
     "subst_atms {?A} ?\<sigma> = {subst_atm_abbrev ?A ?\<sigma>}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("IsaFoR_Term.is_ground_subst_cls_iff",
     "is_ground_cls ?C = (ALL \<sigma>. ?C = subst_cls ?C \<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("IsaFoR_Term.is_ground_subst_lit_iff",
     "is_ground_lit ?L = (ALL \<sigma>. ?L = subst_lit ?L \<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("IsaFoR_Term.subst_atm_list_single",
     "subst_atm_list [?A] ?\<sigma> = [subst_atm_abbrev ?A ?\<sigma>]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("IsaFoR_Term.subst_atm_mset_single",
     "subst_atm_mset {#?A#} ?\<sigma> = {#subst_atm_abbrev ?A ?\<sigma>#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("IsaFoR_Term.vars_in_instance_in_range_cls",
     "vars_clause (subst_cls ?C ?\<sigma>)
      <= \<Union> (vars_term ` range ?\<sigma>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("IsaFoR_Term.grounding_of_cls_ground",
     "is_ground_cls ?C ==> grounding_of_cls ?C = {?C}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 4), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("IsaFoR_Term.less_kbo_subst",
     "less_kbo ?s ?t ==>
      less_kbo (subst_atm_abbrev ?s ?\<sigma>)
       (subst_atm_abbrev ?t ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.grounding_of_clss_mono",
     "?CC <= ?DD ==> grounding_of_clss ?CC <= grounding_of_clss ?DD",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("IsaFoR_Term.strict_subset_subst_strictly_subsumes",
     "subst_cls ?C ?\<eta> <# ?D ==> strictly_subsumes ?C ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 1),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.comparator_term",
     "[| comparator ?comp\<^sub>'\<^sub>f;
         comparator ?comp\<^sub>'\<^sub>v |]
      ==> comparator
           (comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.subst_atmss_single",
     "subst_atmss {?AA} ?\<sigma> = {subst_atms ?AA ?\<sigma>}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("IsaFoR_Term.subst_clss_single",
     "subst_clss {?C} ?\<sigma> = {subst_cls ?C ?\<sigma>}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("IsaFoR_Term.subst_ext_iff",
     "(?\<sigma> = ?\<tau>) =
      (ALL A. subst_atm_abbrev A ?\<sigma> = subst_atm_abbrev A ?\<tau>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("IsaFoR_Term.is_ground_atm_mset_union",
     "is_ground_atm_mset (?AA + ?BB) =
      (is_ground_atm_mset ?AA & is_ground_atm_mset ?BB)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("IsaFoR_Term.is_ground_atms_union",
     "is_ground_atms (?AA Un ?BB) =
      (is_ground_atms ?AA & is_ground_atms ?BB)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("IsaFoR_Term.is_ground_cls_union",
     "is_ground_cls (?C + ?D) = (is_ground_cls ?C & is_ground_cls ?D)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("IsaFoR_Term.is_ground_cls_list_Cons",
     "is_ground_cls_list (?C # ?Cs) =
      (is_ground_cls ?C & is_ground_cls_list ?Cs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("IsaFoR_Term.is_ground_clss_union",
     "is_ground_clss (?CC Un ?DD) =
      (is_ground_clss ?CC & is_ground_clss ?DD)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("IsaFoR_Term.subst_atm_mset_list",
     "subst_atm_mset_list [?AA] ?\<sigma> = [subst_atm_mset ?AA ?\<sigma>]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("IsaFoR_Term.subst_cls_list_single",
     "subst_cls_list [?C] ?\<sigma> = [subst_cls ?C ?\<sigma>]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("IsaFoR_Term.subst_cls_mset_single",
     "subst_cls_mset {#?C#} ?\<sigma> = {#subst_cls ?C ?\<sigma>#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("IsaFoR_Term.subst_cls_single",
     "subst_cls {#?L#} ?\<sigma> = {#subst_lit ?L ?\<sigma>#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1),
             template_var 0)),
         template_hole 1))),
    ("IsaFoR_Term.vars_in_instance_in_range_lit",
     "vars_lit (subst_lit ?L ?\<sigma>)
      <= \<Union> (vars_term ` range ?\<sigma>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 7),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("IsaFoR_Term.strictly_generalizes_neq",
     "strictly_generalizes ?D' ?D ==> ?D' ~= subst_cls ?D ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_var 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 3),
                 template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.strictly_subsumes_neq",
     "strictly_subsumes ?D' ?D ==> ?D' ~= subst_cls ?D ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_var 2,
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 3),
                 template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.in_image_Neg_is_neg",
     "subst_lit ?L ?\<sigma> : Neg ` ?AA ==> is_neg ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 2))
           ))),
    ("IsaFoR_Term.is_ground_cls_mono",
     "[| ?C <=# ?D; is_ground_cls ?D |] ==> is_ground_cls ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("IsaFoR_Term.is_ground_clss_mono",
     "[| ?CC <= ?DD; is_ground_clss ?DD |] ==> is_ground_clss ?CC",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("IsaFoR_Term.subst_atmss_comp_subst",
     "subst_atmss ?AAA (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_atmss (subst_atmss ?AAA ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_atms_comp_subst",
     "subst_atms ?AA (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_atms (subst_atms ?AA ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_clsscomp_subst",
     "subst_clss ?CC (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_clss (subst_clss ?CC ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.variants_iff_subsumes",
     "variants ?C ?D = (subsumes ?C ?D & subsumes ?D ?C)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0),
           template_var 1)))),
    ("IsaFoR_Term.comp_substs_empty_iff",
     "(comp_substs ?\<sigma>s ?\<eta>s = []) =
      (?\<sigma>s = [] | ?\<eta>s = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 1))
           ))),
    ("IsaFoR_Term.subst_atm_mset_lists_empty_iff",
     "(subst_atm_mset_lists ?AAs ?\<eta>s = []) =
      (?AAs = [] | ?\<eta>s = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 3)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("IsaFoR_Term.subst_cls_lists_empty_iff",
     "(subst_cls_lists ?Cs ?\<eta>s = []) = (?Cs = [] | ?\<eta>s = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_var 0),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 3)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("IsaFoR_Term.eql_neg_lit_eql_atm",
     "(subst_lit (Neg ?A') ?\<eta> = Neg ?A) =
      (subst_atm_abbrev ?A' ?\<eta> = ?A)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("IsaFoR_Term.eql_pos_lit_eql_atm",
     "(subst_lit (Pos ?A') ?\<eta> = Pos ?A) =
      (subst_atm_abbrev ?A' ?\<eta> = ?A)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_list_comp_subst",
     "subst_atm_list ?As (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_atm_list (subst_atm_list ?As ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_mset_list_comp_subst",
     "subst_atm_mset_list ?AAs (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_atm_mset_list (subst_atm_mset_list ?AAs ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_cls_list_comp_subst",
     "subst_cls_list ?Cs (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_cls_list (subst_cls_list ?Cs ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_mset_comp_subst",
     "subst_atm_mset ?AA (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_atm_mset (subst_atm_mset ?AA ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_cls_mset_comp_subst",
     "subst_cls_mset ?CC (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_cls_mset (subst_cls_mset ?CC ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_cls_comp_subst",
     "subst_cls ?C (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_cls (subst_cls ?C ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_lit_comp_subst",
     "subst_lit ?L (comp_subst_abbrev ?\<tau> ?\<sigma>) =
      subst_lit (subst_lit ?L ?\<tau>) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.Suc_Max_notin_set",
     "finite ?X ==> Suc (?v + Max (insert 0 ?X)) ~: ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 1))))),
                 template_var 1)
               )
           ))),
    ("IsaFoR_Term.subst_subset_mono",
     "?D <# ?C ==> subst_cls ?D ?\<sigma> <# subst_cls ?C ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.subst_cls_mono_mset",
     "?C <=# ?D ==> subst_cls ?C ?\<sigma> <=# subst_cls ?D ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.inv_renaming_cancel_r",
     "IsaFoR_Term.is_renaming ?r ==>
      comp_subst_abbrev ?r (inv_renaming ?r) = Var",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_hole 2),
             template_var 0)),
         template_hole 3))),
    ("IsaFoR_Term.variants_imp_exists_substitution",
     "variants ?D ?D' ==> EX \<sigma>. subst_cls ?D \<sigma> = ?D'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("IsaFoR_Term.in_list_of_mset_in_S",
     "?i < length (list_of_mset ?S) ==> list_of_mset ?S ! ?i :# ?S",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0)),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("IsaFoR_Term.subst_ext",
     "(!!A. subst_atm_abbrev A ?\<sigma> = subst_atm_abbrev A ?\<tau>) ==>
      ?\<sigma> = ?\<tau>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("IsaFoR_Term.is_ground_cls_imp_is_ground_atm",
     "[| ?A : atms_of ?C; is_ground_cls ?C |] ==> is_ground_atm ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1)
           ))),
    ("IsaFoR_Term.is_ground_cls_imp_is_ground_lit",
     "[| ?L :# ?C; is_ground_cls ?C |] ==> is_ground_lit ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 1)
           ))),
    ("IsaFoR_Term.subst_atm_list_Cons",
     "subst_atm_list (?A # ?As) ?\<sigma> =
      subst_atm_abbrev ?A ?\<sigma> # subst_atm_list ?As ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_atm_mset_lists_comp_substs",
     "subst_atm_mset_lists ?AAs (comp_substs ?\<tau>s ?\<sigma>s) =
      subst_atm_mset_lists (subst_atm_mset_lists ?AAs ?\<tau>s) ?\<sigma>s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_cls_lists_comp_substs",
     "subst_cls_lists ?Cs (comp_substs ?\<tau>s ?\<sigma>s) =
      subst_cls_lists (subst_cls_lists ?Cs ?\<tau>s) ?\<sigma>s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_cls_lists_single",
     "subst_cls_lists [?C] [?\<sigma>] = [subst_cls ?C ?\<sigma>]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 1),
             template_var 0)),
         template_hole 3))),
    ("IsaFoR_Term.subst_cls_mset_image_mset",
     "subst_cls_mset (image_mset ?f ?X) ?\<sigma> =
      {#subst_cls (?f x) ?\<sigma>. x :# ?X#}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("IsaFoR_Term.in_atms_of_subst",
     "?B : atms_of ?C ==>
      subst_atm_abbrev ?B ?\<sigma> : atms_of (subst_cls ?C ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_hole 1),
                   template_var 1),
                 template_var 0)))
           ))),
    ("IsaFoR_Term.subst_cls_eq_grounding_of_cls_subset_eq",
     "subst_cls ?D ?\<sigma> = ?C ==>
      grounding_of_cls ?C <= grounding_of_cls ?D",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_hole 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 2)))),
    ("IsaFoR_Term.ground_subst_ground_cls_lists",
     "Ball (set ?\<sigma>s) is_ground_subst ==>
      is_ground_cls_list (subst_cls_lists ?Cs ?\<sigma>s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0),
               template_var 1))
           ))),
    ("IsaFoR_Term.in_subset_eq_grounding_of_clss_is_ground_cls",
     "[| ?C : ?CC; ?CC <= grounding_of_clss ?DD |] ==> is_ground_cls ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 2)
           ))),
    ("IsaFoR_Term.is_unifiers_is_unifier",
     "[| is_unifiers ?\<sigma> ?AAA; ?AA : ?AAA |]
      ==> is_unifier ?\<sigma> ?AA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.sum_list_subseteq_mset_is_ground_cls_list",
     "[| sum_list ?Cs <=# sum_list ?Ds; is_ground_cls_list ?Ds |]
      ==> is_ground_cls_list ?Cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("IsaFoR_Term.subst_atmss_union",
     "subst_atmss (?AAA Un ?BBB) ?\<sigma> =
      subst_atmss ?AAA ?\<sigma> Un subst_atmss ?BBB ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_atms_union",
     "subst_atms (?AA Un ?BB) ?\<sigma> =
      subst_atms ?AA ?\<sigma> Un subst_atms ?BB ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_clss_union",
     "subst_clss (?CC Un ?DD) ?\<sigma> =
      subst_clss ?CC ?\<sigma> Un subst_clss ?DD ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_atm_list_append",
     "subst_atm_list (?As @ ?Bs) ?\<sigma> =
      subst_atm_list ?As ?\<sigma> @ subst_atm_list ?Bs ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_atm_mset_list_append",
     "subst_atm_mset_list (?AAs @ ?BBs) ?\<sigma> =
      subst_atm_mset_list ?AAs ?\<sigma> @
      subst_atm_mset_list ?BBs ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_atm_mset_list_Cons",
     "subst_atm_mset_list (?A # ?As) ?\<sigma> =
      subst_atm_mset ?A ?\<sigma> # subst_atm_mset_list ?As ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_list_append",
     "subst_cls_list (?Cs @ ?Ds) ?\<sigma> =
      subst_cls_list ?Cs ?\<sigma> @ subst_cls_list ?Ds ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_list_Cons",
     "subst_cls_list (?C # ?Cs) ?\<sigma> =
      subst_cls ?C ?\<sigma> # subst_cls_list ?Cs ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_atm_mset_union",
     "subst_atm_mset (?AA + ?BB) ?\<sigma> =
      subst_atm_mset ?AA ?\<sigma> + subst_atm_mset ?BB ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_mset_add_mset",
     "subst_cls_mset (add_mset ?C ?CC) ?\<sigma> =
      add_mset (subst_cls ?C ?\<sigma>) (subst_cls_mset ?CC ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_mset_union",
     "subst_cls_mset (?CC + ?DD) ?\<sigma> =
      subst_cls_mset ?CC ?\<sigma> + subst_cls_mset ?DD ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_add_mset",
     "subst_cls (add_mset ?L ?C) ?\<sigma> =
      add_mset (subst_lit ?L ?\<sigma>) (subst_cls ?C ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 2),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_union",
     "subst_cls (?C + ?D) ?\<sigma> =
      subst_cls ?C ?\<sigma> + subst_cls ?D ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_atm",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_atm_abbrev (subst_atm_abbrev ?A ?\<rho>)
       (inv_renaming ?\<rho>) =
      ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_hole 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 4),
               template_hole 3),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_lit_in_negs_is_neg",
     "subst_lit ?L ?\<sigma> :# negs ?AA ==> is_neg ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, t_empty), template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 2))
           ))),
    ("IsaFoR_Term.generalizes_trans",
     "[| generalizes ?C ?D; generalizes ?D ?E |] ==> generalizes ?C ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.is_renaming_idempotent_id_subst",
     "[| IsaFoR_Term.is_renaming ?r; comp_subst_abbrev ?r ?r = ?r |]
      ==> ?r = Var",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 0),
          template_var 0)],
       template_equation (template_var 0, template_hole 2))),
    ("IsaFoR_Term.strictly_generalizes_trans",
     "[| strictly_generalizes ?C ?D; strictly_generalizes ?D ?E |]
      ==> strictly_generalizes ?C ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.strictly_subsumes_trans",
     "[| strictly_subsumes ?C ?D; strictly_subsumes ?D ?E |]
      ==> strictly_subsumes ?C ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.strictly_subsumes_variants",
     "[| strictly_subsumes ?E ?D; variants ?D ?D' |]
      ==> strictly_subsumes ?E ?D'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.subsumes_trans",
     "[| subsumes ?C ?D; subsumes ?D ?E |] ==> subsumes ?C ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0)
           ))),
    ("IsaFoR_Term.ground_less_less_kbo",
     "[| ground ?s; ground ?t; ?s < ?t |] ==> less_kbo ?s ?t",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("IsaFoR_Term.subst_cls_negs",
     "subst_cls (negs ?AA) ?\<sigma> = negs (subst_atm_mset ?AA ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_poss",
     "subst_cls (poss ?AA) ?\<sigma> = poss (subst_atm_mset ?AA ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1),
           template_var 0)))),
    ("IsaFoR_Term.strictly_subsumes_has_minimum",
     "?CC ~= {} ==> EX C:?CC. ALL D:?CC. ~ strictly_subsumes D C",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("IsaFoR_Term.Neg_Melem_subst_atm_subst_cls",
     "Neg ?A :# ?C ==>
      Neg (subst_atm_abbrev ?A ?\<sigma>) :# subst_cls ?C ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_hole 1),
                   template_var 1),
                 template_var 0)))
           ))),
    ("IsaFoR_Term.Pos_Melem_subst_atm_subst_cls",
     "Pos ?A :# ?C ==>
      Pos (subst_atm_abbrev ?A ?\<sigma>) :# subst_cls ?C ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_hole 1),
                   template_var 1),
                 template_var 0)))
           ))),
    ("IsaFoR_Term.comparator_literal_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_literal ?x\<^sub>0 ==>
          peq_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      peq_comp (comparator_literal ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("IsaFoR_Term.comparator_literal_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_literal ?x\<^sub>0 ==>
          psym_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      psym_comp (comparator_literal ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("IsaFoR_Term.comparator_literal_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_literal ?x\<^sub>0 ==>
          ptrans_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      ptrans_comp (comparator_literal ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("IsaFoR_Term.is_ground_atm_is_ground_on_var",
     "[| is_ground_atm (?A \<cdot> ?\<sigma>); ?v : vars_term ?A |]
      ==> is_ground_atm (?\<sigma> ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_var 1, template_var 0))
           ))),
    ("IsaFoR_Term.grounding_of_grounding_of_cls",
     "[| ?E : grounding_of_cls ?D; ?D : grounding_of_cls ?C |] ==> ?E = ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_equation (template_var 2, template_var 1))),
    ("IsaFoR_Term.atm_of_atms_subst",
     "(subst_atm_abbrev (Fun undefined ?As) ?\<sigma> = Fun undefined ?Bs) =
      (map (%A. subst_atm_abbrev A ?\<sigma>) ?As = ?Bs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_equation
        (template_app
          (template_app (template_hole 0, t_empty), template_var 2),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_mset_lists_Cons",
     "subst_atm_mset_lists (?C # ?Cs) (?\<sigma> # ?\<sigma>s) =
      subst_atm_mset ?C ?\<sigma> # subst_atm_mset_lists ?Cs ?\<sigma>s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_lists_Cons",
     "subst_cls_lists (?C # ?Cs) (?\<sigma> # ?\<sigma>s) =
      subst_cls ?C ?\<sigma> # subst_cls_lists ?Cs ?\<sigma>s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2),
           template_var 0)))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_atmss",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_atmss (subst_atmss ?AAA ?\<rho>) (inv_renaming ?\<rho>) = ?AAA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_atms",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_atms (subst_atms ?AA ?\<rho>) (inv_renaming ?\<rho>) = ?AA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_clss",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_clss (subst_clss ?CC ?\<rho>) (inv_renaming ?\<rho>) = ?CC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_atm_list",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_atm_list (subst_atm_list ?As ?\<rho>) (inv_renaming ?\<rho>) =
      ?As",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_atm_mset_list",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_atm_mset_list (subst_atm_mset_list ?AAs ?\<rho>)
       (inv_renaming ?\<rho>) =
      ?AAs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_cls_list",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_cls_list (subst_cls_list ?Cs ?\<rho>) (inv_renaming ?\<rho>) =
      ?Cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_atm_mset",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_atm_mset (subst_atm_mset ?AA ?\<rho>) (inv_renaming ?\<rho>) =
      ?AA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_cls_mset",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_cls_mset (subst_cls_mset ?CC ?\<rho>) (inv_renaming ?\<rho>) =
      ?CC",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_cls",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_cls (subst_cls ?C ?\<rho>) (inv_renaming ?\<rho>) = ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.is_renaming_inv_renaming_cancel_lit",
     "IsaFoR_Term.is_renaming ?\<rho> ==>
      subst_lit (subst_lit ?L ?\<rho>) (inv_renaming ?\<rho>) = ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_hole 5),
               template_hole 4),
             template_var 1)),
         template_var 0))),
    ("IsaFoR_Term.subst_atm_list_nth",
     "?i < length ?As ==>
      subst_atm_list ?As ?\<tau> ! ?i =
      subst_atm_abbrev (?As ! ?i) ?\<tau>",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_mono",
     "set_mset ?C <= set_mset ?D ==>
      set_mset (subst_cls ?C ?\<sigma>)
      <= set_mset (subst_cls ?D ?\<sigma>)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))))),
    ("IsaFoR_Term.in_pair_in_set",
     "(?A, ?B) : set (pairs ?As) ==> ?A : set ?As & ?B : set ?As",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("IsaFoR_Term.is_renaming_left_id_subst_right_id_subst",
     "[| IsaFoR_Term.is_renaming ?r; comp_subst_abbrev ?s ?r = Var |]
      ==> comp_subst_abbrev ?r ?s = Var",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 2))),
    ("IsaFoR_Term.is_renaming_closure",
     "[| IsaFoR_Term.is_renaming ?r1.0; IsaFoR_Term.is_renaming ?r2.0 |]
      ==> IsaFoR_Term.is_renaming (comp_subst_abbrev ?r1.0 ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_hole 0),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("IsaFoR_Term.neg_strictly_subsumes_variants",
     "[| ~ strictly_subsumes ?E ?D; variants ?D ?D' |]
      ==> ~ strictly_subsumes ?E ?D'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 2, template_hole 1),
                    template_var 2),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 2),
                 template_var 0)
               )
           ))),
    ("IsaFoR_Term.is_ground_subst_cls_lists",
     "[| length ?P = length ?Cs; is_ground_cls_list ?Cs |]
      ==> subst_cls_lists ?Cs ?P = ?Cs",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0),
           template_var 1),
         template_var 0))),
    ("IsaFoR_Term.is_ground_cls_is_ground_on_var",
     "[| is_ground_cls (subst_cls ?C ?\<sigma>); ?v : vars_clause ?C |]
      ==> is_ground_atm (?\<sigma> ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 4),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_app (template_var 1, template_var 0))
           ))),
    ("IsaFoR_Term.is_ground_cls_list_is_ground_on_var",
     "[| is_ground_cls_list (subst_cls_list ?Cs ?\<sigma>);
         ?v : vars_clause_list ?Cs |]
      ==> is_ground_atm (?\<sigma> ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 4),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 4),
             template_app (template_var 1, template_var 0))
           ))),
    ("IsaFoR_Term.inv_renaming_cancel_r_list",
     "is_renaming_list ?rs ==>
      comp_substs ?rs (map inv_renaming ?rs) = replicate (length ?rs) Var",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_hole 7),
                template_hole 6),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 6),
             template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 7),
                 template_hole 6)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_hole 7)))),
    ("IsaFoR_Term.subst_atm_mset_list_nth",
     "?i < length ?AAs ==>
      subst_atm_mset_list ?AAs ?\<eta> ! ?i =
      subst_atm_mset (?AAs ! ?i) ?\<eta>",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 1),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_list_nth",
     "?i < length ?Cs ==>
      subst_cls_list ?Cs ?\<tau> ! ?i = subst_cls (?Cs ! ?i) ?\<tau>",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 1),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("IsaFoR_Term.subst_cls_lists_tl",
     "length ?Cs = length ?\<sigma>s ==>
      tl (subst_cls_lists ?Cs ?\<sigma>s) =
      subst_cls_lists (tl ?Cs) (tl ?\<sigma>s)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("IsaFoR_Term.subst_lit_in_negs_subst_is_neg",
     "subst_lit ?L ?\<sigma> :# subst_cls (negs ?AA) ?\<tau> ==> is_neg ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 6),
                    template_app
                     (template_app (template_hole 3, t_empty),
                      template_var 1)),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 3))
           ))),
    ("IsaFoR_Term.less_kbo_gtotal",
     "[| ground ?s; ground ?t |]
      ==> ?s = ?t | less_kbo ?s ?t | less_kbo ?t ?s",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("IsaFoR_Term.is_ground_lit_is_ground_on_var",
     "[| is_ground_lit (subst_lit ?L ?\<sigma>); ?v : vars_lit ?L |]
      ==> is_ground_atm (?\<sigma> ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app
                 (template_app (template_hole 4, template_hole 5),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_hole 5),
             template_app (template_var 1, template_var 0))
           ))),
    ("IsaFoR_Term.Melem_subst_atm_mset",
     "(?A :# subst_atm_mset ?AA ?\<sigma>) =
      (EX B. B :# ?AA & ?A = subst_atm_abbrev B ?\<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1),
             template_var 0))),
       template_app (template_hole 2, t_empty))),
    ("IsaFoR_Term.card_le_one_alt",
     "finite ?X ==> (card ?X <= 1) = (?X = {} | (EX x. ?X = {x}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_hole 5)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_app (template_hole 1, t_empty))
             )))),
    ("IsaFoR_Term.same_on_vars_clause",
     "ALL v:vars_clause ?S. ?\<sigma> v = ?\<tau> v ==>
      subst_cls ?S ?\<sigma> = subst_cls ?S ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 0)))),
    ("IsaFoR_Term.is_ground_subst_atm_list_member",
     "[| is_ground_atm_list ?As; ?i < length ?As |]
      ==> subst_atm_abbrev (?As ! ?i) ?\<sigma> = ?As ! ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("IsaFoR_Term.is_mgu_is_most_general",
     "[| IsaFoR_Term.is_mgu ?\<sigma> ?AAA; is_unifiers ?\<tau> ?AAA |]
      ==> EX \<gamma>. ?\<tau> = comp_subst_abbrev ?\<sigma> \<gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 4),
                template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("IsaFoR_Term.Melem_subst_cls_mset",
     "(?AA :# subst_cls_mset ?CC ?\<sigma>) =
      (EX BB. BB :# ?CC & ?AA = subst_cls BB ?\<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1),
             template_var 0))),
       template_app (template_hole 3, t_empty))),
    ("IsaFoR_Term.Melem_subst_cls",
     "(?L :# subst_cls ?C ?\<sigma>) =
      (EX M. M :# ?C & ?L = subst_lit M ?\<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 1),
             template_var 0))),
       template_app (template_hole 3, t_empty))),
    ("IsaFoR_Term.is_renamingD",
     "IsaFoR_Term.is_renaming ?\<sigma> ==>
      ALL A1 A2.
         (subst_atm_abbrev A1 ?\<sigma> = subst_atm_abbrev A2 ?\<sigma>) =
         (A1 = A2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("IsaFoR_Term.same_on_vars_lit",
     "ALL v:vars_lit ?L. ?\<sigma> v = ?\<tau> v ==>
      subst_lit ?L ?\<sigma> = subst_lit ?L ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 0)))),
    ("IsaFoR_Term.subst_clss_image",
     "subst_clss (?f ` ?X) ?\<sigma> =
      {subst_cls (?f x) ?\<sigma> |x. x : ?X}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("IsaFoR_Term.comparator_term_simps",
     "comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v
       (Fun ?x ?xa) (Fun ?ya ?yb) =
      (case ?comp\<^sub>'\<^sub>f ?x ?ya of
       Eq =>
         comparator_list
          (comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v) ?xa
          ?yb
       | Lt => Lt | Gt => Gt)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 5),
             template_var 4),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 5, template_var 5),
                       template_var 4)),
                   template_var 2),
                 template_var 0)),
             template_hole 1),
           template_hole 0),
         template_app
          (template_app (template_var 5, template_var 3),
           template_var 1)))),
    ("IsaFoR_Term.is_unifier_alt",
     "finite ?AA ==>
      is_unifier ?\<sigma> ?AA =
      (ALL A:?AA.
          ALL B:?AA.
             subst_atm_abbrev A ?\<sigma> = subst_atm_abbrev B ?\<sigma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("IsaFoR_Term.unifiers_Pairs",
     "[| finite ?AAA; ALL AA:?AAA. finite AA |]
      ==> unifiers (set (Pairs ?AAA)) =
          {\<sigma>. is_unifiers \<sigma> ?AAA}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         template_app (template_hole 2, t_empty)))),
    ("IsaFoR_Term.is_unifiers_mgu",
     "[| finite ?AAA; ALL AA:?AAA. finite AA;
         mgu_sets ?AAA = Some ?\<sigma> |]
      ==> is_unifiers ?\<sigma> ?AAA",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_var 1)
           ))),
    ("IsaFoR_Term.vars_clause_hd_partitioned_from_tl",
     "?Cs ~= [] ==>
      vars_clause (hd (subst_cls_lists ?Cs (renamings_apart ?Cs))) Int
      vars_clause_list (tl (subst_cls_lists ?Cs (renamings_apart ?Cs))) =
      {}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 0),
                   template_app (template_hole 3, template_var 0))))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0),
                 template_app (template_hole 3, template_var 0))))),
         template_hole 0))),
    ("IsaFoR_Term.make_ground_subst",
     "is_ground_cls (subst_cls ?C ?\<sigma>) ==>
      EX \<tau>.
         is_ground_subst \<tau> &
         subst_cls ?C \<tau> = subst_cls ?C ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app
                 (template_app (template_hole 4, template_hole 5),
                  template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("IsaFoR_Term.mgu_sound",
     "[| finite ?AAA; ALL AA:?AAA. finite AA;
         mgu_sets ?AAA = Some ?\<sigma> |]
      ==> IsaFoR_Term.is_mgu ?\<sigma> ?AAA",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1), t_empty)
            ),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0),
             template_var 1)
           ))),
    ("IsaFoR_Term.var_disjoint_clauses",
     "var_disjoint ?Cs ==>
      ALL \<sigma>s.
         length \<sigma>s = length ?Cs -->
         (EX \<tau>.
             subst_cls_lists ?Cs \<sigma>s = subst_cls_list ?Cs \<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("IsaFoR_Term.mgu_complete",
     "[| finite ?AAA; ALL AA:?AAA. finite AA; is_unifiers ?\<sigma> ?AAA |]
      ==> EX \<tau>. mgu_sets ?AAA = Some \<tau>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("IsaFoR_Term.is_renaming_list_inv_renaming_cancel_atm_mset_lists",
     "[| length ?AAs = length ?\<rho>s; is_renaming_list ?\<rho>s |]
      ==> subst_atm_mset_lists (subst_atm_mset_lists ?AAs ?\<rho>s)
           (map inv_renaming ?\<rho>s) =
          ?AAs",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_hole 5),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 6),
                 template_hole 5)),
             template_var 0)),
         template_var 1))),
    ("IsaFoR_Term.is_renaming_list_inv_renaming_cancel_cls_list",
     "[| length ?Cs = length ?\<rho>s; is_renaming_list ?\<rho>s |]
      ==> subst_cls_lists (subst_cls_lists ?Cs ?\<rho>s)
           (map inv_renaming ?\<rho>s) =
          ?Cs",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_hole 5),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 6),
                 template_hole 5)),
             template_var 0)),
         template_var 1))),
    ("IsaFoR_Term.comp_substs_nth",
     "[| length ?\<tau>s = length ?\<sigma>s; ?i < length ?\<tau>s |]
      ==> comp_substs ?\<tau>s ?\<sigma>s ! ?i =
          comp_subst_abbrev (?\<tau>s ! ?i) (?\<sigma>s ! ?i)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("IsaFoR_Term.is_unifier_subst_atm_eqI",
     "[| finite ?AA; is_unifier ?\<sigma> ?AA; ?A : ?AA; ?B : ?AA |]
      ==> subst_atm_abbrev ?A ?\<sigma> = subst_atm_abbrev ?B ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 2)))),
    ("IsaFoR_Term.subst_atm_mset_lists_nth",
     "[| length ?AAs = length ?\<sigma>s; ?i < length ?AAs |]
      ==> subst_atm_mset_lists ?AAs ?\<sigma>s ! ?i =
          subst_atm_mset (?AAs ! ?i) (?\<sigma>s ! ?i)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IsaFoR_Term.subst_cls_lists_nth",
     "[| length ?Cs = length ?\<sigma>s; ?i < length ?Cs |]
      ==> subst_cls_lists ?Cs ?\<sigma>s ! ?i =
          subst_cls (?Cs ! ?i) (?\<sigma>s ! ?i)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 2),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("IsaFoR_Term.unifies_all_pairs_iff",
     "(ALL p:set (pairs ?xs).
          fst p \<cdot> ?\<sigma> = snd p \<cdot> ?\<sigma>) =
      (ALL a:set ?xs.
          ALL b:set ?xs. a \<cdot> ?\<sigma> = b \<cdot> ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         t_empty))),
    ("IsaFoR_Term.is_unifiers_comp",
     "is_unifiers ?\<sigma>
       (subst_atmss (set_mset ` set (Map2.map2 add_mset ?As ?Bs)) ?\<eta>) =
      is_unifiers (comp_subst_abbrev ?\<eta> ?\<sigma>)
       (set_mset ` set (Map2.map2 add_mset ?As ?Bs))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_hole 9),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 8, template_hole 9),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))))),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))))))),
    ("IsaFoR_Term.comparator_term_pointwise",
     "[| !!x\<^sub>0\<^sub>_\<^sub>0.
            x\<^sub>0\<^sub>_\<^sub>0 : funs_term ?x\<^sub>0 ==>
            peq_comp ?comp\<^sub>'\<^sub>f x\<^sub>0\<^sub>_\<^sub>0;
         !!x\<^sub>0\<^sub>_\<^sub>1.
            x\<^sub>0\<^sub>_\<^sub>1 : vars_term ?x\<^sub>0 ==>
            peq_comp ?comp\<^sub>'\<^sub>v x\<^sub>0\<^sub>_\<^sub>1 |]
      ==> peq_comp
           (comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v)
           ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("IsaFoR_Term.comparator_term_pointwise",
     "[| !!x\<^sub>0\<^sub>_\<^sub>0.
            x\<^sub>0\<^sub>_\<^sub>0 : funs_term ?x\<^sub>0 ==>
            psym_comp ?comp\<^sub>'\<^sub>f x\<^sub>0\<^sub>_\<^sub>0;
         !!x\<^sub>0\<^sub>_\<^sub>1.
            x\<^sub>0\<^sub>_\<^sub>1 : vars_term ?x\<^sub>0 ==>
            psym_comp ?comp\<^sub>'\<^sub>v x\<^sub>0\<^sub>_\<^sub>1 |]
      ==> psym_comp
           (comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v)
           ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("IsaFoR_Term.comparator_term_pointwise",
     "[| !!x\<^sub>0\<^sub>_\<^sub>0.
            x\<^sub>0\<^sub>_\<^sub>0 : funs_term ?x\<^sub>0 ==>
            ptrans_comp ?comp\<^sub>'\<^sub>f x\<^sub>0\<^sub>_\<^sub>0;
         !!x\<^sub>0\<^sub>_\<^sub>1.
            x\<^sub>0\<^sub>_\<^sub>1 : vars_term ?x\<^sub>0 ==>
            ptrans_comp ?comp\<^sub>'\<^sub>v x\<^sub>0\<^sub>_\<^sub>1 |]
      ==> ptrans_comp
           (comparator_term ?comp\<^sub>'\<^sub>f ?comp\<^sub>'\<^sub>v)
           ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("IsaFoR_Term.subst_cls_lists_append",
     "[| length ?Cs = length ?\<sigma>s; length ?Cs' = length ?\<sigma>s' |]
      ==> subst_cls_lists (?Cs @ ?Cs') (?\<sigma>s @ ?\<sigma>s') =
          subst_cls_lists ?Cs ?\<sigma>s @
          subst_cls_lists ?Cs' ?\<sigma>s'",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1),
             template_var 0))))),
    ("IsaFoR_Term.is_mgu_most_general",
     "[| finite ?AAA; ALL AA:?AAA. finite AA;
         mgu_sets ?AAA = Some ?\<sigma> |]
      ==> ALL \<tau>.
             is_unifiers \<tau> ?AAA -->
             (EX \<gamma>. \<tau> = comp_subst_abbrev ?\<sigma> \<gamma>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1), t_empty)
            ),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("IsaFoR_Term.is_unifiers_subst_atm_eqI",
     "[| finite ?AA; is_unifiers ?\<sigma> ?AAA; ?AA : ?AAA; ?A : ?AA;
         ?B : ?AA |]
      ==> subst_atm_abbrev ?A ?\<sigma> = subst_atm_abbrev ?B ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 3)))),
    ("IsaFoR_Term.in_pairs_sorted_list_of_set_in_set",
     "[| finite ?AAA; ALL AA:?AAA. finite AA;
         ?AB_pairs
         : (pairs o linorder.sorted_list_of_set (le_of_comp compare)) `
           ?AAA;
         (?A, ?B) : set ?AB_pairs |]
      ==> EX AA. AA : ?AAA & ?A : AA & ?B : AA",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 7)))),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("IsaFoR_Term.mgu_unifier",
     "[| length ?As = ?n; length ?AAs = ?n;
         Some ?\<sigma> =
         mgu_sets (set_mset ` set (Map2.map2 add_mset ?As ?AAs));
         ?i < ?n; ?A :# ?AAs ! ?i |]
      ==> subst_atm_abbrev ?A ?\<sigma> =
          subst_atm_abbrev (?As ! ?i) ?\<sigma>",
     template_implication
      ([template_equation
         (template_app (template_hole 17, template_var 5), template_var 4),
        template_equation
         (template_app (template_hole 16, template_var 3), template_var 4),
        template_equation
         (template_app (template_hole 14, template_var 2),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7)),
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 3)))))),
        template_inequation (less_than, template_var 1, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 1)),
           template_var 2)))),
    ("IsaFoR_Term.kbo_code",
     "kbo ?s ?t =
      (let wt = weight ?t; ws = weight ?s
       in if vars_term_ms (KBO.SCF ?t) <=# vars_term_ms (KBO.SCF ?s) &
             wt <= ws
          then if wt < ws then (True, True)
               else case ?s of
                    Var y =>
                      (False,
                       case ?t of Var x => True
                       | Fun g ts => ts = [] & least weights g)
                    | Fun f ss =>
                        case ?t of Var x => (True, True)
                        | Fun g ts =>
                            if pr_strict weights (f, length ss)
                                (g, length ts)
                            then (True, True)
                            else if (f, length ss) = (g, length ts)
                                 then lex_ext_unbounded kbo ss ts
                                 else (False, False)
          else (False, False))",
     template_equation
      (template_app
        (template_app (template_hole 24, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 23,
           template_app (template_hole 22, template_var 0)),
         t_empty)))]:
   (string * thm * template) list
### theory "Draft.IsaFoR_TermTemplates"
### 0.976s elapsed time, 1.530s cpu time, 0.528s GC time
val it = (): unit
