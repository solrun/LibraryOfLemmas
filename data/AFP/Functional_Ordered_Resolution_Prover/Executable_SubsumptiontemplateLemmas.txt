   [("Executable_Subsumption.extends_subst_refl",
     "extends_subst ?\<sigma> ?\<sigma>",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Executable_Subsumption.reflp_leq_lit", "reflp_on leq_lit ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Executable_Subsumption.total_leq_lit",
     "Restricted_Predicates.total_on leq_lit ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Executable_Subsumption.extends_subst_empty",
     "extends_subst Map.empty ?\<tau>",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Executable_Subsumption.leq_head_subst",
     "leq_head ?t (subst_atm_abbrev ?t ?\<sigma>)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Executable_Subsumption.set_quicksort",
     "set (quicksort ?R ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Executable_Subsumption.mset_quicksort",
     "mset (quicksort ?R ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Executable_Subsumption.atm_of_map_literal",
     "atm_of (map_literal ?f ?l) = ?f (atm_of ?l)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Executable_Subsumption.extends_subst_dom",
     "extends_subst ?\<sigma> ?\<tau> ==> dom ?\<sigma> <= dom ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Executable_Subsumption.vars_clause_add_mset",
     "vars_clause (add_mset ?L ?C) = vars_lit ?L Un vars_clause ?C",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Executable_Subsumption.subsumes_list_alt",
     "subsumes_list ?Ls ?Ks ?\<sigma> =
      subsumes_list_modulo ?Ls ?Ks ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Executable_Subsumption.subsumes_subsumes_list",
     "subsumes (mset ?Ls) (mset ?Ks) = subsumes_list ?Ls ?Ks Map.empty",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         t_empty))),
    ("Executable_Subsumption.subsumes_list_filterD",
     "subsumes_list ?Ls (filter ?P ?Ks) ?\<sigma> ==>
      subsumes_list ?Ls ?Ks ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Executable_Subsumption.extends_subst_trans",
     "[| extends_subst ?\<sigma> ?\<tau>; extends_subst ?\<tau> ?\<rho> |]
      ==> extends_subst ?\<sigma> ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Executable_Subsumption.sorted_wrt_subsumes_list_subsumes_list_filter",
     "sorted_wrt leq_lit ?Ls ==>
      subsumes_list ?Ls ?Ks ?\<sigma> =
      subsumes_list_filter ?Ls ?Ks ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Executable_Subsumption.extends_subst_extends",
     "[| extends_subst ?\<sigma> ?\<tau>; ?x : dom ?\<sigma> |]
      ==> ?\<tau> ?x = ?\<sigma> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("Executable_Subsumption.extends_subst_fun_upd_matching",
     "?\<sigma> ?x = Some ?t ==>
      extends_subst (?\<sigma>(?x |-> ?t)) ?\<tau> =
      extends_subst ?\<sigma> ?\<tau>",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_app (template_hole 3, template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0)))),
    ("Executable_Subsumption.strictly_subsumes_subsumes_list",
     "strictly_subsumes (mset ?Ls) (mset ?Ks) =
      (subsumes_list ?Ls ?Ks Map.empty &
       ~ subsumes_list ?Ks ?Ls Map.empty)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app (template_hole 4, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             t_empty)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1),
             t_empty))))),
    ("Executable_Subsumption.sorted_wrt_quicksort",
     "[| transp ?R; Restricted_Predicates.total_on ?R (set ?xs);
         reflp_on ?R (set ?xs) |]
      ==> sorted_wrt ?R (quicksort ?R ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Executable_Subsumption.extends_subst_fun_upd_new",
     "?\<sigma> ?x = None ==>
      extends_subst (?\<sigma>(?x |-> ?t)) ?\<tau> =
      (extends_subst ?\<sigma> ?\<tau> & ?\<tau> ?x = Some ?t)",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2), template_hole 5)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2),
                    template_app (template_hole 1, template_var 1))),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_var 0, template_var 2)),
                 template_app (template_hole 1, template_var 1)))
             )))),
    ("Executable_Subsumption.extends_subst_cong_term",
     "[| extends_subst ?\<sigma> ?\<tau>; vars_term ?t <= dom ?\<sigma> |]
      ==> subst_atm_abbrev ?t (subst_of_map Var ?\<sigma>) =
          subst_atm_abbrev ?t (subst_of_map Var ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1))))),
    ("Executable_Subsumption.leq_lit_match",
     "[| match_term_list [(atm_of ?L, atm_of ?K)] ?\<sigma> = Some ?\<tau>;
         is_pos ?L = is_pos ?K |]
      ==> leq_lit ?L ?K",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 3)),
                    template_app (template_hole 5, template_var 2))),
                template_hole 4)),
            template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 3), template_var 2)
           ))),
    ("Executable_Subsumption.extends_subst_cong_lit",
     "[| extends_subst ?\<sigma> ?\<tau>; vars_lit ?L <= dom ?\<sigma> |]
      ==> ?L \<cdot>lit subst_of_map Var ?\<sigma> =
          ?L \<cdot>lit subst_of_map Var ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 0)),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Executable_Subsumption.match_term_list_sound",
     "match_term_list ?tus ?\<sigma> = Some ?\<tau> ==>
      extends_subst ?\<sigma> ?\<tau> &
      dom ?\<tau> = (UN (t, u):set ?tus. vars_term t) Un dom ?\<sigma> &
      (ALL (t, u):set ?tus.
          subst_atm_abbrev t (subst_of_map Var ?\<tau>) = u)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 17, template_var 2),
            template_var 1),
          template_app (template_hole 16, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 0)),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app (template_hole 8, t_empty)),
                           template_app
                            (template_hole 6, template_var 2)))),
                     template_app (template_hole 12, template_var 1)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 6, template_var 2)),
                 template_app (template_hole 4, t_empty))))
           ))),
    ("Executable_Subsumption.match_term_list_complete",
     "[| match_term_list ?tus ?\<sigma> = None;
         extends_subst ?\<sigma> ?\<tau>;
         dom ?\<tau> = (UN (t, u):set ?tus. vars_term t) Un dom ?\<sigma> |]
      ==> EX (t, u):set ?tus.
             subst_atm_abbrev t (subst_of_map Var ?\<tau>) ~= u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 17, template_var 2),
            template_var 1),
          template_hole 16),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 13, template_var 0),
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, t_empty)),
                  template_app (template_hole 7, template_var 2)))),
            template_app (template_hole 13, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 7, template_var 2)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Executable_Subsumption.unique_extends_subst",
     "[| extends_subst ?\<sigma> ?\<tau>; extends_subst ?\<sigma> ?\<rho>;
         dom ?\<tau> = vars_term ?t Un dom ?\<sigma>;
         dom ?\<rho> = vars_term ?t Un dom ?\<sigma>;
         subst_atm_abbrev ?t (subst_of_map Var ?\<rho>) =
         subst_atm_abbrev ?t (subst_of_map Var ?\<tau>) |]
      ==> ?\<rho> = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0)),
            template_app (template_hole 7, template_var 3))),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0)),
            template_app (template_hole 7, template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 2)))],
       template_equation (template_var 1, template_var 2))),
    ("Executable_Subsumption.subsumes_list_modulo_Cons",
     "subsumes_list_modulo (?L # ?Ls) ?Ks ?\<sigma> =
      (EX K:set ?Ks.
          EX \<tau>.
             extends_subst ?\<sigma> \<tau> &
             dom \<tau> = vars_lit ?L Un dom ?\<sigma> &
             ?L \<cdot>lit subst_of_map Var \<tau> = K &
             subsumes_list_modulo ?Ls (remove1 K ?Ks) \<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_var 3),
                 template_var 2))),
           template_app (template_hole 17, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 1)),
         t_empty))),
    ("Executable_Subsumption.subsumes_list_filterI",
     "[| !!L K \<sigma> \<tau>.
            [| L : set ?Ls;
               match_term_list [(atm_of L, atm_of K)] \<sigma> =
               Some \<tau>;
               is_pos L = is_pos K |]
            ==> ?P K;
         subsumes_list ?Ls ?Ks ?\<sigma> |]
      ==> subsumes_list ?Ls (filter ?P ?Ks) ?\<sigma>",
     template_implication
      ([template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Executable_Subsumption.decompose_Some_var_terms",
     "decompose (Fun ?f ?ss) (Fun ?g ?ts) = Some ?eqs ==>
      ?f = ?g &
      length ?ss = length ?ts &
      ?eqs = zip ?ss ?ts &
      (UN (t, u):set ((Fun ?f ?ss, Fun ?g ?ts) # ?P). vars_term t) =
      (UN (t, u):set (?eqs @ ?P). vars_term t)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app (template_hole 18, template_var 5),
                template_var 4)),
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 2)),
          template_app (template_hole 16, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_var 5),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 4)),
                   template_app (template_hole 11, template_var 2))),
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_var 2))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, t_empty)),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 18, template_var 5),
                                     template_var 4)),
                                 template_app
                                  (template_app
                                    (template_hole 17, template_var 3),
                                   template_var 2))),
                             template_var 0))))),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, t_empty)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0))))))))
           ))),
    ("Executable_Subsumption.subsumes_list_Cons_filter_iff",
     "[| sorted_wrt ?leq (?L # ?Ls); transp ?leq;
         !!L K \<sigma> \<tau>.
            [| match_term_list [(atm_of L, atm_of K)] \<sigma> =
               Some \<tau>;
               is_pos L = is_pos K |]
            ==> ?leq L K |]
      ==> subsumes_list (?L # ?Ls) (filter (?leq ?L) ?Ks) ?\<sigma> =
          subsumes_list (?L # ?Ls) ?Ks ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app (template_hole 14, template_var 3),
                template_var 2))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 4)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 14, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 4, template_var 3)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 14, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0))))]
