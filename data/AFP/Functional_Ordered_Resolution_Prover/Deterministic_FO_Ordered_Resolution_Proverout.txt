Loading theory "Draft.Weighted_FO_Ordered_Resolution_Prover" (required by "Draft.Deterministic_FO_Ordered_Resolution_ProverTemplates" via "Draft.Deterministic_FO_Ordered_Resolution_Prover")
Loading theory "Draft.Templates" (required by "Draft.Deterministic_FO_Ordered_Resolution_ProverTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.179s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Deterministic_FO_Ordered_Resolution_ProverTemplates")
Found termination order: "{}"
locale weighted_FO_resolution_prover
  fixes S :: "'a literal multiset => 'a literal multiset"
    and subst_atm :: "'a => 's => 'a"
    and id_subst :: "'s"
    and comp_subst :: "'s => 's => 's"
    and renamings_apart :: "'a literal multiset list => 's list"
    and atm_of_atms :: "'a list => 'a"
    and mgu :: "'a set set => 's option"
    and less_atm :: "'a => 'a => bool"
    and weight :: "'a literal multiset * nat => nat"
  assumes
    "weighted_FO_resolution_prover S (\<cdot>a) id_subst (\<odot>)
      renamings_apart atm_of_atms mgu less_atm weight"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.537s elapsed time, 1.102s cpu time, 0.092s GC time
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "weighted_RP"
  Proving monotonicity ...
locale weighted_FO_resolution_prover_with_size_timestamp_factors
  fixes S :: "'a literal multiset => 'a literal multiset"
    and subst_atm :: "'a => 's => 'a"
    and id_subst :: "'s"
    and comp_subst :: "'s => 's => 's"
    and renamings_apart :: "'a literal multiset list => 's list"
    and atm_of_atms :: "'a list => 'a"
    and mgu :: "'a set set => 's option"
    and less_atm :: "'a => 'a => bool"
    and size_atm :: "'a => nat"
    and size_factor :: "nat"
    and timestamp_factor :: "nat"
  assumes
    "weighted_FO_resolution_prover_with_size_timestamp_factors S (\<cdot>a)
      id_subst (\<odot>) renamings_apart atm_of_atms mgu less_atm
      timestamp_factor"
Found termination order: "{}"
### theory "Draft.Weighted_FO_Ordered_Resolution_Prover"
### 1.555s elapsed time, 2.270s cpu time, 0.184s GC time
Loading theory "Draft.Deterministic_FO_Ordered_Resolution_Prover" (required by "Draft.Deterministic_FO_Ordered_Resolution_ProverTemplates")
locale deterministic_FO_resolution_prover
  fixes S :: "'a literal multiset => 'a literal multiset"
    and subst_atm :: "'a => 's => 'a"
    and id_subst :: "'s"
    and comp_subst :: "'s => 's => 's"
    and renamings_apart :: "'a literal multiset list => 's list"
    and atm_of_atms :: "'a list => 'a"
    and mgu :: "'a set set => 's option"
    and less_atm :: "'a => 'a => bool"
    and size_atm :: "'a => nat"
    and timestamp_factor :: "nat"
    and size_factor :: "nat"
  assumes
    "deterministic_FO_resolution_prover S (\<cdot>a) id_subst (\<odot>)
      renamings_apart atm_of_atms mgu less_atm size_factor"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
consts
  reduce ::
    "'a literal list list
     => 'a literal list => 'a literal list => 'a literal list"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "{}"
consts
  derivation_from ::
    "('a literal list * nat) list *
     ('a literal list * nat) list * ('a literal list * nat) list * nat
     => (('a literal list * nat) list *
         ('a literal list * nat) list *
         ('a literal list * nat) list * nat) llist"
### theory "Draft.Deterministic_FO_Ordered_Resolution_Prover"
### 2.958s elapsed time, 3.456s cpu time, 0.719s GC time
Loading theory "Draft.Deterministic_FO_Ordered_Resolution_ProverTemplates"
val templateLemmas =
   [("Deterministic_FO_Ordered_Resolution_Prover.mset_remdups_gen_ident",
     "mset (remdups_gen (%x. x) ?xs) = mset_set (set ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Deterministic_FO_Ordered_Resolution_Prover.apfst_fst_snd",
     "apfst ?f ?x = (?f (fst ?x), snd ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_var 1,
             template_app (template_hole 1, template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Deterministic_FO_Ordered_Resolution_Prover.funpow_fixpoint",
     "?f ?x = ?x ==> (?f ^^ ?n) ?x = ?x",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_var 1))),
    ("Deterministic_FO_Ordered_Resolution_Prover.length_remove1_less",
     "?x : set ?xs ==> length (remove1 ?x ?xs) < length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Deterministic_FO_Ordered_Resolution_Prover.apfst_comp_rpair_const",
     "apfst ?f o (%x. (x, ?y)) = (%x. (x, ?y)) o ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         t_empty),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Deterministic_FO_Ordered_Resolution_Prover.mset_map_remdups_gen",
     "mset (map ?f (remdups_gen ?f ?xs)) =
      mset (remdups_gen (%x. x) (map ?f ?xs))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Deterministic_FO_Ordered_Resolution_Prover.map_filter_neq_eq_filter_map",
     "map ?f (filter (%y. ?f ?x ~= ?f y) ?xs) =
      filter ((~=) (?f ?x)) (map ?f ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Deterministic_FO_Ordered_Resolution_Prover.rtranclp_imp_eq_image",
     "[| ALL x y. ?R x y --> ?f x = ?f y; ?R^** ?x ?y |] ==> ?f ?x = ?f ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Deterministic_FO_Ordered_Resolution_Prover.tranclp_imp_eq_image",
     "[| ALL x y. ?R x y --> ?f x = ?f y; ?R^++ ?x ?y |] ==> ?f ?x = ?f ?y",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Deterministic_FO_Ordered_Resolution_ProverTemplates"
### 0.678s elapsed time, 1.196s cpu time, 0.615s GC time
val it = (): unit
