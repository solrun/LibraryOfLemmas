   [("PQ_Implementation.alist_split_pre", "val ?t = (fst o alist) ?t",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0))),
    ("PQ_Implementation.alist_split_pre", "priority ?t = (snd o alist) ?t",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0),
         template_var 0))),
    ("PQ_Implementation.None", "pqueue (None # ?xs) = pqueue ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("PQ_Implementation.alist_normalize_idem",
     "elements (Binomial_Queue.normalize ?xs) = elements ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("PQ_Implementation.vals_pqueue",
     "set (vals ?xs) = set (PQ.values (pqueue ?xs))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PQ_Implementation.dfs_map_Some_idem",
     "dfs ?f (map Some ?xs) = bts_dfs ?f ?xs",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("PQ_Implementation.bt_augment_v_subset",
     "set (PQ.values ?q) <= set (PQ.values (bt_augment ?t ?q))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("PQ_Implementation.bt_augment_v_subset",
     "set (PQ.values ?q) <= set (PQ.values (bts_augment ?ts ?q))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("PQ_Implementation.bt_augment_alist_subset",
     "set (pq.alist_of ?q) <= set (pq.alist_of (bt_augment ?t ?q))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("PQ_Implementation.bt_augment_alist_subset",
     "set (pq.alist_of ?q) <= set (pq.alist_of (bts_augment ?ts ?q))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("PQ_Implementation.Some",
     "pqueue (Some ?t # ?xs) = bt_augment ?t (pqueue ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("PQ_Implementation.set_bts_dfs_rev",
     "set (bts_dfs ?f (rev ?ts)) = set (bts_dfs ?f ?ts)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("PQ_Implementation.set_dfs_rev",
     "set (dfs ?f (rev ?xs)) = set (dfs ?f ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("PQ_Implementation.alist_split_set",
     "set (vals ?xs) = fst ` set (elements ?xs)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("PQ_Implementation.alist_split_set",
     "set (prios ?xs) = snd ` set (elements ?xs)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("PQ_Implementation.bt_dfs_simp",
     "bt_dfs ?f ?t = ?f ?t # bts_dfs ?f (children ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 1, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("PQ_Implementation.bt_dfs_comp",
     "bt_dfs (?f o ?g) ?t = map ?f (bt_dfs ?g ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PQ_Implementation.bt_dfs_comp",
     "bts_dfs (?f o ?g) ?ts = map ?f (bts_dfs ?g ?ts)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PQ_Implementation.dfs_comp",
     "dfs (?f o ?g) ?xs = map ?f (dfs ?g ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("PQ_Implementation.empty_empty",
     "normalized ?xs ==> (?xs = []) = PQ.is_empty (pqueue ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_hole 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PQ_Implementation.bt_dfs_distinct_children",
     "distinct (bt_dfs ?f ?x) ==> distinct (bts_dfs ?f (children ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("PQ_Implementation.bts_dfs_rev_distinct",
     "distinct (bts_dfs ?f ?ts) ==> distinct (bts_dfs ?f (rev ?ts))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("PQ_Implementation.dfs_match_subset",
     "set (dfs ?f (map (match ?a) ?xs)) <= set (dfs ?f ?xs)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("PQ_Implementation.bt_dfs_comp_distinct",
     "distinct (bt_dfs (?f o ?g) ?t) ==> distinct (bt_dfs ?g ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PQ_Implementation.bt_dfs_comp_distinct",
     "distinct (bts_dfs (?f o ?g) ?ts) ==> distinct (bts_dfs ?g ?ts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PQ_Implementation.dfs_comp_distinct",
     "distinct (dfs (?f o ?g) ?xs) ==> distinct (dfs ?g ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PQ_Implementation.vals_add_Cons",
     "set (vals (add ?x ?xs)) = set (vals (?x # ?xs))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("PQ_Implementation.bts_dfs_append",
     "bts_dfs ?f (?ts @ ?rs) = bts_dfs ?f ?ts @ bts_dfs ?f ?rs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("PQ_Implementation.dfs_append",
     "dfs ?f (?xs @ ?ys) = dfs ?f ?xs @ dfs ?f ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("PQ_Implementation.dfs_match_distinct",
     "distinct (dfs ?f ?xs) ==> distinct (dfs ?f (map (match ?a) ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))
           ))),
    ("PQ_Implementation.bt_augment_simp",
     "bt_augment ?t ?q =
      PQ.push (val ?t) (priority ?t) (fold bt_augment (children ?t) ?q)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 5),
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("PQ_Implementation.bt_augment_Node",
     "bt_augment (bintree.Node ?a ?v ?ts) ?q =
      PQ.push ?v ?a (fold bt_augment ?ts ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_hole 3),
             template_var 1),
           template_var 0)))),
    ("PQ_Implementation.bt_val_augment",
     "set (bt_dfs val ?t) Un set (PQ.values ?q) =
      set (PQ.values (bt_augment ?t ?q))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("PQ_Implementation.bt_val_augment",
     "set (bts_dfs val ?ts) Un set (PQ.values ?q) =
      set (PQ.values (bts_augment ?ts ?q))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("PQ_Implementation.bt_augment_v_in",
     "?v : set (PQ.values ?q) ==> ?v : set (PQ.values (bt_augment ?t ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("PQ_Implementation.bt_augment_v_in",
     "?v : set (PQ.values ?q) ==>
      ?v : set (PQ.values (bts_augment ?ts ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("PQ_Implementation.bt_augment_v_commute",
     "set (PQ.values (bt_augment ?t (bt_augment ?r ?q))) =
      set (PQ.values (bt_augment ?r (bt_augment ?t ?q)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("PQ_Implementation.bt_augment_v_commute",
     "set (PQ.values (bt_augment ?t (bts_augment ?rs ?q))) =
      set (PQ.values (bts_augment ?rs (bt_augment ?t ?q)))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)))))),
    ("PQ_Implementation.bt_augment_v_merge",
     "set (PQ.values (bt_augment (merge ?t ?r) ?q)) =
      set (PQ.values (bt_augment ?t (bt_augment ?r ?q)))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.bt_augment_v_commute",
     "set (PQ.values (bts_augment ?ts (bts_augment ?rs ?q))) =
      set (PQ.values (bts_augment ?rs (bts_augment ?ts ?q)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("PQ_Implementation.insert_v_push",
     "set (vals (Binomial_Queue.insert ?a ?v ?xs)) =
      set (PQ.values (PQ.push ?v ?a (pqueue ?xs)))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_hole 6,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_app (template_hole 0, template_var 0)))))),
    ("PQ_Implementation.prios_pqueue",
     "distinct (vals ?xs) ==>
      set (prios ?xs) = set (priorities (pqueue ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("PQ_Implementation.alist_pqueue",
     "distinct (vals ?xs) ==>
      set (elements ?xs) = set (pq.alist_of (pqueue ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("PQ_Implementation.bt_dfs_Min_priority",
     "is_heap_list (priority ?t) (children ?t) ==>
      priority ?t = Min (set (bt_dfs priority ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 0)))))),
    ("PQ_Implementation.vals_merge",
     "set (bt_dfs val (merge ?t ?r)) =
      set (bt_dfs val ?t) Un set (bt_dfs val ?r)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("PQ_Implementation.vals_meld",
     "set (vals (meld ?xs ?ys)) = set (vals ?xs) Un set (vals ?ys)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 1))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("PQ_Implementation.vals_insert",
     "set (vals (Binomial_Queue.insert ?a ?v ?xs)) =
      set (vals ?xs) Un {?v}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("PQ_Implementation.bt_augment_v_push_commute",
     "set (PQ.values (bt_augment ?t (PQ.push ?v ?a ?q))) =
      set (PQ.values (PQ.push ?v ?a (bt_augment ?t ?q)))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)))))),
    ("PQ_Implementation.bt_augment_v_push_commute",
     "set (PQ.values (bts_augment ?ts (PQ.push ?v ?a ?q))) =
      set (PQ.values (PQ.push ?v ?a (bts_augment ?ts ?q)))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)))))),
    ("PQ_Implementation.in_set_in_alist",
     "Some ?t : set ?xs ==> (val ?t, priority ?t) : set (elements ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app (template_hole 3, template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("PQ_Implementation.dfs_distinct_member",
     "[| distinct (dfs ?f ?xs); Some ?x : set ?xs |]
      ==> distinct (bt_dfs ?f ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("PQ_Implementation.set_dfs_Cons",
     "set (dfs ?f (?x # ?xs)) = set (dfs ?f ?xs) Un set (dfs ?f [?x])",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0)))))),
    ("PQ_Implementation.bt_augment_v_push",
     "set (PQ.values (bt_augment ?t (PQ.push ?v ?a ?q))) =
      set (PQ.values (bt_augment ?t ?q)) Un {?v}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0)))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("PQ_Implementation.bt_augment_v_push",
     "set (PQ.values (bts_augment ?ts (PQ.push ?v ?a ?q))) =
      set (PQ.values (bts_augment ?ts ?q)) Un {?v}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0)))),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("PQ_Implementation.bt_augment_alist_in",
     "(?v, ?a) : set (pq.alist_of ?q) ==>
      (?v, ?a) : set (pq.alist_of (bt_augment ?t ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("PQ_Implementation.bt_augment_alist_in",
     "(?v, ?a) : set (pq.alist_of ?q) ==>
      (?v, ?a) : set (pq.alist_of (bts_augment ?ts ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("PQ_Implementation.bt_augment_v_union",
     "set (PQ.values (bt_augment ?t (bt_augment ?r ?q))) =
      set (PQ.values (bt_augment ?t ?q)) Un
      set (PQ.values (bt_augment ?r ?q))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.bts_augment_v_union",
     "set (PQ.values (bt_augment ?t (bts_augment ?rs ?q))) =
      set (PQ.values (bt_augment ?t ?q)) Un
      set (PQ.values (bts_augment ?rs ?q))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.bt_augment_v_union",
     "set (PQ.values (bts_augment ?ts (bt_augment ?r ?q))) =
      set (PQ.values (bts_augment ?ts ?q)) Un
      set (PQ.values (bt_augment ?r ?q))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.bts_augment_v_union",
     "set (PQ.values (bts_augment ?ts (bts_augment ?rs ?q))) =
      set (PQ.values (bts_augment ?ts ?q)) Un
      set (PQ.values (bts_augment ?rs ?q))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.alist_add_Cons",
     "distinct (vals (?x # ?xs)) ==>
      set (elements (add ?x ?xs)) = set (elements (?x # ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.alist_pqueue_priority",
     "[| distinct (vals ?xs); (?v, ?a) : set (elements ?xs) |]
      ==> PQ.priority (pqueue ?xs) ?v = Some ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PQ_Implementation.is_binqueue_min_Min_prios",
     "[| is_binqueue ?l ?xs; normalized ?xs; ?xs ~= [] |]
      ==> Binomial_Queue.min ?xs = Some (Min (set (prios ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("PQ_Implementation.dfs_match_not_in",
     "ALL t. Some t : set ?xs --> priority t ~= ?a ==>
      set (dfs ?f (map (match ?a) ?xs)) = set (dfs ?f ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("PQ_Implementation.insert_p_push",
     "[| distinct (vals ?xs); ?v ~: set (vals ?xs) |]
      ==> set (prios (Binomial_Queue.insert ?a ?v ?xs)) =
          set (priorities (PQ.push ?v ?a (pqueue ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_var 2)))
                )
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1),
               template_var 2))),
         template_app
          (template_hole 6,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_app (template_hole 0, template_var 2))))))),
    ("PQ_Implementation.insert_push",
     "[| distinct (vals ?xs); ?v ~: set (vals ?xs) |]
      ==> set (elements (Binomial_Queue.insert ?a ?v ?xs)) =
          set (pq.alist_of (PQ.push ?v ?a (pqueue ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 12, template_hole 11),
                      template_var 2)))
                )
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1),
               template_var 2))),
         template_app
          (template_hole 6,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_app (template_hole 0, template_var 2))))))),
    ("PQ_Implementation.vals_merge_distinct",
     "[| distinct (bt_dfs val ?t); distinct (bt_dfs val ?r);
         set (bt_dfs val ?t) Int set (bt_dfs val ?r) = {} |]
      ==> distinct (bt_dfs val (merge ?t ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1))),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("PQ_Implementation.vals_meld_distinct",
     "[| distinct (vals ?xs); distinct (vals ?ys);
         set (vals ?xs) Int set (vals ?ys) = {} |]
      ==> distinct (vals (meld ?xs ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1))),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("PQ_Implementation.bt_alist_augment",
     "[| distinct (bt_dfs val ?t);
         set (bt_dfs val ?t) Int set (PQ.values ?q) = {} |]
      ==> set (bt_dfs alist ?t) Un set (pq.alist_of ?q) =
          set (pq.alist_of (bt_augment ?t ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_var 1))),
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))),
          template_hole 7)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1))),
           template_app
            (template_hole 4,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.bt_alist_augment",
     "[| distinct (bts_dfs val ?ts);
         set (bts_dfs val ?ts) Int set (PQ.values ?q) = {} |]
      ==> set (bts_dfs alist ?ts) Un set (pq.alist_of ?q) =
          set (pq.alist_of (bts_augment ?ts ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_var 1))),
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))),
          template_hole 7)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1))),
           template_app
            (template_hole 4,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("PQ_Implementation.alist_insert",
     "[| distinct (vals ?xs); ?v ~: set (vals ?xs) |]
      ==> set (elements (Binomial_Queue.insert ?a ?v ?xs)) =
          set (elements ?xs) Un {(?v, ?a)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 13, template_hole 12),
                      template_var 2)))
                )
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("PQ_Implementation.vals_add_distinct",
     "[| distinct (vals ?xs); distinct (vals [?x]);
         set (vals ?xs) Int set (vals [?x]) = {} |]
      ==> distinct (vals (add ?x ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 1))),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("PQ_Implementation.find_min_v_min",
     "[| is_binqueue ?l ?xs; ?xs ~= []; normalized ?xs; distinct (vals ?xs);
         distinct (prios ?xs) |]
      ==> val (the (find_min ?xs)) = PQ.min (pqueue ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 12)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PQ_Implementation.min_p_min",
     "[| is_binqueue ?l ?xs; ?xs ~= []; normalized ?xs; distinct (vals ?xs);
         distinct (prios ?xs) |]
      ==> Binomial_Queue.min ?xs =
          PQ.priority (pqueue ?xs) (PQ.min (pqueue ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 12)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))))),
    ("PQ_Implementation.alist_delete_min",
     "[| distinct (vals ?xs); distinct (prios ?xs);
         find_min ?xs = Some (bintree.Node ?a ?v ?ts) |]
      ==> set (elements (delete_min ?xs)) =
          set (elements ?xs) - {(?v, ?a)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 11, template_var 3),
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 3))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 3))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_hole 0))))),
    ("PQ_Implementation.alist_remove_min",
     "[| is_binqueue ?l ?xs; distinct (vals ?xs); distinct (prios ?xs);
         normalized ?xs; ?xs ~= [] |]
      ==> set (elements (delete_min ?xs)) =
          set (pq.alist_of (remove_min (pqueue ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_hole 15),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 6,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("PQ_Implementation.find_min_p_min",
     "[| is_binqueue ?l ?xs; ?xs ~= []; normalized ?xs; distinct (vals ?xs);
         distinct (prios ?xs) |]
      ==> priority (the (find_min ?xs)) =
          the (PQ.priority (pqueue ?xs) (PQ.min (pqueue ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 14)),
        template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0))))))),
    ("PQ_Implementation.bt_augment_alist_union",
     "[| distinct (bts_dfs val (?r # ?ts));
         set (bts_dfs val (?r # ?ts)) Int set (PQ.values ?q) = {} |]
      ==> set (pq.alist_of (bts_augment ?ts (bt_augment ?r ?q))) =
          set (pq.alist_of (bts_augment ?ts ?q)) Un
          set (pq.alist_of (bt_augment ?r ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1)))),
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))))))),
    ("PQ_Implementation.alist_merge",
     "[| distinct (bt_dfs val ?t); distinct (bt_dfs val ?r);
         set (bt_dfs val ?t) Int set (bt_dfs val ?r) = {} |]
      ==> set (bt_dfs alist (merge ?t ?r)) =
          set (bt_dfs alist ?t) Un set (bt_dfs alist ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 1))),
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 0))),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))))),
    ("PQ_Implementation.alist_meld",
     "[| distinct (vals ?xs); distinct (vals ?ys);
         set (vals ?xs) Int set (vals ?ys) = {} |]
      ==> set (elements (meld ?xs ?ys)) =
          set (elements ?xs) Un set (elements ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 1))),
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 0))),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0)))))),
    ("PQ_Implementation.dfs_match",
     "[| distinct (prios ?xs); distinct (dfs ?f ?xs); Some ?t : set ?xs;
         priority ?t = ?a |]
      ==> set (dfs ?f (map (match ?a) ?xs)) =
          set (dfs ?f ?xs) - set (bt_dfs ?f ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app (template_hole 7, template_var 3))
            ),
        template_equation
         (template_app (template_hole 12, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 10, template_var 2),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_var 3))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 3))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("PQ_Implementation.bt_augment_alist_union",
     "[| distinct (bts_dfs val [?r, ?t]);
         set (bts_dfs val [?r, ?t]) Int set (PQ.values ?q) = {} |]
      ==> set (pq.alist_of (bt_augment ?t (bt_augment ?r ?q))) =
          set (pq.alist_of (bt_augment ?t ?q)) Un
          set (pq.alist_of (bt_augment ?r ?q))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_app
                     (template_app (template_hole 11, template_var 1),
                      template_hole 10))))),
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0))),
          template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))))))]
