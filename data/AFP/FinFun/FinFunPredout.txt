Loading theory "HOL-Library.Function_Algebras" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.FinFunPredMoreTemplates" via "Draft.FinFunPred" via "Draft.FinFun" via "HOL-Library.Cardinality")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.143s elapsed time, 0.592s cpu time, 0.038s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.267s elapsed time, 1.079s cpu time, 0.038s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.301s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Phantom_Type"
### 0.510s elapsed time, 2.036s cpu time, 0.200s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.FinFunPredMoreTemplates" via "Draft.FinFunPred" via "Draft.FinFun")
### Additional type variable(s) in locale specification "CARD_1": 'a
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
consts
  left :: "'a tree => 'a tree"
  Proving monotonicity ...
consts
  right :: "'a tree => 'a tree"
### Additional type variable(s) in locale specification "card2": 'a
Found termination order: "size <*mlex*> {}"
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
consts
  flat :: "'a list stream => 'a stream"
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
Found termination order: "size <*mlex*> {}"
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
### theory "HOL-Library.BigO"
### 0.998s elapsed time, 3.798s cpu time, 0.751s GC time
Found termination order: "size <*mlex*> {}"
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
Found termination order: "size <*mlex*> {}"
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
### theory "HOL-Library.Stream"
### 1.058s elapsed time, 3.964s cpu time, 0.793s GC time
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
### theory "HOL-Library.Cardinality"
### 0.905s elapsed time, 3.310s cpu time, 0.718s GC time
Loading theory "Draft.FinFun" (required by "Draft.FinFunPredMoreTemplates" via "Draft.FinFunPred")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
bundle finfun
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale finfun_rec_wf_aux
  fixes cnst :: "'b => 'c"
    and upd :: "'a => 'b => 'c => 'c"
  assumes "finfun_rec_wf_aux cnst upd"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale finfun_rec_wf
  fixes cnst :: "'b => 'c"
    and upd :: "'a => 'b => 'c => 'c"
  assumes "finfun_rec_wf cnst upd"
Found termination order: "size <*mlex*> {}"
instantiation
  finfun :: ({card_UNIV,equal}, equal) equal
  equal_finfun == equal_class.equal ::
    'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b => bool
### theory "HOL-Library.Tree"
### 2.051s elapsed time, 6.404s cpu time, 1.077s GC time
Loading theory "Draft.Templates" (required by "Draft.FinFunPredMoreTemplates" via "Draft.ExtrEqs")
instantiation
  finfun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_finfun == finite_UNIV :: ('a \<Rightarrow>f 'b, bool) phantom
instantiation
  finfun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_finfun == card_UNIV_class.card_UNIV ::
    ('a \<Rightarrow>f 'b, nat) phantom
bundle finfun_syntax
bundle no_finfun_syntax
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.077s elapsed time, 0.182s cpu time, 0.072s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.FinFunPredMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.754s elapsed time, 1.829s cpu time, 0.792s GC time
### theory "Draft.FinFun"
### 1.819s elapsed time, 3.882s cpu time, 1.099s GC time
Loading theory "Draft.FinFunPred" (required by "Draft.FinFunPredMoreTemplates")
instantiation
  finfun :: (type, ord) ord
  less_eq_finfun == less_eq ::
    'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b => bool
  less_finfun == less ::
    'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b => bool
instantiation
  finfun :: (type, order_bot) order_bot
  bot_finfun == bot :: 'a \<Rightarrow>f 'b
instantiation
  finfun :: (type, order_top) order_top
  top_finfun == top :: 'a \<Rightarrow>f 'b
instantiation
  finfun :: (type, inf) inf
  inf_finfun == inf ::
    'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b
instantiation
  finfun :: (type, sup) sup
  sup_finfun == sup ::
    'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b
instantiation
  finfun :: (type, minus) minus
  minus_finfun == minus ::
    'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b
instantiation
  finfun :: (type, uminus) uminus
  uminus_finfun == uminus :: 'a \<Rightarrow>f 'b => 'a \<Rightarrow>f 'b
### theory "Draft.FinFunPred"
### 0.181s elapsed time, 0.222s cpu time, 0.043s GC time
Loading theory "Draft.FinFunPredMoreTemplates"
val templateLemmas =
   [("FinFunPred.bot_neq_finfun_single", "{}\<^sub>f ~= finfun_single ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("FinFunPred.finfun_single_neq_bot", "finfun_single ?x ~= {}\<^sub>f",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("FinFunPred.uminus_finfun_apply", "($) (- ?g) = - ($) ?g",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("FinFunPred.iso_finfun_uminus", "- ($) ?A = ($) (- ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("FinFunPred.finfun_single_apply", "finfun_single ?x $ ?y = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("FinFunPred.iso_finfun_eq", "(($) ?A = ($) ?B) = (?A = ?B)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("FinFunPred.iso_finfun_less", "(($) ?A < ($) ?B) = (?A < ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("FinFunPred.iso_finfun_le", "(($) ?A <= ($) ?B) = (?A <= ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("FinFunPred.minus_finfun_apply", "($) (?f - ?g) = ($) ?f - ($) ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("FinFunPred.inf_finfun_apply",
     "($) (inf ?f ?g) = inf (($) ?f) (($) ?g)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("FinFunPred.iso_finfun_inf", "inf (($) ?A) (($) ?B) = ($) (inf ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FinFunPred.sup_finfun_apply",
     "($) (sup ?f ?g) = sup (($) ?f) (($) ?g)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("FinFunPred.iso_finfun_sup", "sup (($) ?A) (($) ?B) = ($) (sup ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FinFunPred.iso_finfun_minus", "($) ?A - ($) ?B = ($) (?A - ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FinFunPred.iso_finfun_upd", "(($) ?A)(?x := ?b) = ($) ?A(?x $:= ?b)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("FinFunPred.iso_finfun_Ball_Ball",
     "(ALL x. ?A $ x --> ?P x) = finfun_Ball ?A ?P",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("FinFunPred.iso_finfun_Bex_Bex",
     "(EX x. ?A $ x & ?P x) = finfun_Bex ?A ?P",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("FinFunPred.iso_finfun_conj", "(?A $ ?x & ?B $ ?x) = inf ?A ?B $ ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("FinFunPred.iso_finfun_disj", "(?A $ ?x | ?B $ ?x) = sup ?A ?B $ ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("FinFunPred.finfun_leD", "[| ?A <= ?B; ?A $ ?x |] ==> ?B $ ?x",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("FinFunPred.le_finfun_code",
     "(?f <= ?g) = finfun_All ((%(x, y). x <= y) o$ ($?f, ?g$))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("FinFunPred.finfun_leI", "(!!x. ?A $ x ==> ?B $ x) ==> ?A <= ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("FinFunPred.finfun_Ball_except_update",
     "finfun_Ball_except ?xs ?A(?a $:= ?b) ?P =
      ((?a : set ?xs | (?b --> ?P ?a)) &
       finfun_Ball_except (?a # ?xs) ?A ?P)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_var 4))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_var 0, template_var 2)))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_var 3),
           template_var 0)))),
    ("FinFunPred.finfun_Ball_except_update_code",
     "finfun_Ball_except ?xs (finfun_update_code ?f ?a ?b) ?P =
      ((?a : set ?xs | (?b --> ?P ?a)) &
       finfun_Ball_except (?a # ?xs) ?f ?P)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_var 4))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_var 0, template_var 2)))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_var 3),
           template_var 0)))),
    ("FinFunPred.finfun_Bex_except_update",
     "finfun_Bex_except ?xs ?A(?a $:= ?b) ?P =
      (?a ~: set ?xs & ?b & ?P ?a | finfun_Bex_except (?a # ?xs) ?A ?P)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app (template_hole 1, template_var 4)))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_var 0, template_var 2)))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_var 3),
           template_var 0)))),
    ("FinFunPred.finfun_Bex_except_update_code",
     "finfun_Bex_except ?xs (finfun_update_code ?f ?a ?b) ?P =
      (?a ~: set ?xs & ?b & ?P ?a | finfun_Bex_except (?a # ?xs) ?f ?P)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app (template_hole 1, template_var 4)))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_var 0, template_var 2)))),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_var 3),
           template_var 0)))),
    ("FinFunPred.finfun_Bex_except_const_finfun_UNIV_code",
     "finfun_Bex_except ?xs (K$ ?b) ?P =
      (?b &
       ~ is_list_UNIV ?xs &
       Code.abort STR ''finfun_Bex_except''
        (%u. finfun_Bex_except ?xs (K$ ?b) ?P))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2),
           template_app (template_hole 8, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 2))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_hole 1),
                           template_hole 1),
                         template_hole 2),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 1),
                         template_hole 2),
                       template_hole 1),
                     template_hole 1),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 1),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_hole 1),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 2), template_hole 1),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 1),
 template_hole 1),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 1),
   template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 1),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 2),
     template_hole 1),
   template_hole 2),
 template_hole 2),
                                     template_hole 1),
                                   template_hole 1),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 2),
       template_hole 2),
     template_hole 1),
   template_hole 1),
 template_hole 1),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 1),
           template_hole 1),
         template_hole 1),
       template_hole 1),
     template_hole 1),
   template_hole 2),
 template_hole 1),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 1),
             template_hole 2),
           template_hole 1),
         template_hole 2),
       template_hole 2),
     template_hole 1),
   template_hole 1),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_hole 1),
     template_hole 1),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 1),
                 template_hole 1),
               template_hole 2),
             template_hole 2),
           template_hole 2),
         template_hole 1),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 1),
                   template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 2),
                   template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 2),
                     template_hole 1),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 0)))))))))))))))))),
             t_empty))))),
    ("FinFunPred.finfun_Bex_except_const",
     "finfun_Bex_except ?xs (K$ ?b) ?P =
      (?b &
       set ?xs ~= UNIV &
       Code.abort STR ''finfun_Bex_except''
        (%u. finfun_Bex_except ?xs (K$ ?b) ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_app (template_hole 10, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 1),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 2)),
                     template_hole 5))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 2),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 1),
                           template_hole 1),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 2), template_hole 1),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 2),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 1),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 1),
   template_hole 1),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 1),
     template_hole 1),
   template_hole 1),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 1),
       template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 2),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 1),
           template_hole 2),
         template_hole 1),
       template_hole 2),
     template_hole 2),
   template_hole 1),
 template_hole 1),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 2),
           template_hole 2),
         template_hole 1),
       template_hole 1),
     template_hole 1),
   template_hole 1),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 1),
       template_hole 2),
     template_hole 1),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 1),
                 template_hole 2),
               template_hole 1),
             template_hole 2),
           template_hole 2),
         template_hole 1),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 1),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 1),
                     template_hole 1),
                   template_hole 2),
                 template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_hole 2),
                     template_hole 1),
                   template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 2),
                       template_hole 2),
                     template_hole 2),
                   template_hole 1),
                 template_hole 1),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_hole 1),
               template_hole 0)))))))))))))))))),
                 t_empty)))
           ))),
    ("FinFunPred.finfun_Ball_except_const_finfun_UNIV_code",
     "finfun_Ball_except ?xs (K$ ?b) ?P =
      (~ ?b |
       is_list_UNIV ?xs |
       Code.abort STR ''finfun_ball_except''
        (%u. finfun_Ball_except ?xs (K$ ?b) ?P))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2),
           template_app (template_hole 8, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 5, template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_hole 1),
                           template_hole 1),
                         template_hole 2),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 1),
                         template_hole 2),
                       template_hole 1),
                     template_hole 1),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 1),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_hole 1),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 2), template_hole 1),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 1),
 template_hole 1),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 2),
                               template_hole 1),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 1),
   template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 2),
                                     template_hole 1),
                                   template_hole 1),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 2),
       template_hole 1),
     template_hole 1),
   template_hole 2),
 template_hole 1),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 2),
         template_hole 1),
       template_hole 1),
     template_hole 2),
   template_hole 1),
 template_hole 1),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 1),
       template_hole 1),
     template_hole 2),
   template_hole 1),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 1),
               template_hole 2),
             template_hole 1),
           template_hole 2),
         template_hole 2),
       template_hole 1),
     template_hole 1),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_hole 1),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 1),
                   template_hole 1),
                 template_hole 2),
               template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 1),
                     template_hole 2),
                   template_hole 1),
                 template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_hole 2),
                     template_hole 2),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 2),
                       template_hole 1),
                     template_hole 2),
                   template_hole 1),
                 template_hole 1),
               template_hole 1),
             template_hole 0))))))))))))))))))),
             t_empty))))),
    ("FinFunPred.finfun_Ball_except_const",
     "finfun_Ball_except ?xs (K$ ?b) ?P =
      (~ ?b |
       set ?xs = UNIV |
       Code.abort STR ''finfun_ball_except''
        (%u. finfun_Ball_except ?xs (K$ ?b) ?P))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_app (template_hole 10, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 1)),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 2)),
                   template_hole 5)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 3, template_hole 2),
                                 template_hole 1),
                               template_hole 1),
                             template_hole 2),
                           template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 3, template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 2),
                           template_hole 1),
                         template_hole 1),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 3, template_hole 2),
                                     template_hole 1),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 2),
                             template_hole 1),
                           template_hole 1),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 3, template_hole 2), template_hole 1),
                                     template_hole 1),
                                   template_hole 2),
                                 template_hole 2),
                               template_hole 1),
                             template_hole 1),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 3, template_hole 1), template_hole 2),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_hole 1),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 3, template_hole 2), template_hole 1),
   template_hole 1),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_hole 1),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 3, template_hole 1), template_hole 1),
     template_hole 1),
   template_hole 1),
 template_hole 1),
                                     template_hole 2),
                                   template_hole 1),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 3, template_hole 2), template_hole 1),
       template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 1),
                                     template_hole 1),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 1),
           template_hole 2),
         template_hole 2),
       template_hole 2),
     template_hole 2),
   template_hole 1),
 template_hole 1),
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_hole 2),
     template_hole 1),
   template_hole 1),
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 2),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 1),
     template_hole 1),
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 1),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_hole 2),
       template_hole 1),
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_hole 1),
                   template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 2),
           template_hole 1),
         template_hole 1),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_hole 2),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_hole 1),
           template_hole 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_hole 1),
                     template_hole 2),
                   template_hole 2),
                 template_hole 2),
               template_hole 1),
             template_hole 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 1),
                         template_hole 2),
                       template_hole 1),
                     template_hole 2),
                   template_hole 2),
                 template_hole 1),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_hole 2),
                         template_hole 2),
                       template_hole 2),
                     template_hole 1),
                   template_hole 1),
                 template_hole 1),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_hole 2),
                             template_hole 2),
                           template_hole 1),
                         template_hole 2),
                       template_hole 1),
                     template_hole 1),
                   template_hole 1),
                 template_hole 0))))))))))))))))))),
                 t_empty)))
           )))]:
   (string * thm * template) list
### theory "Draft.FinFunPredMoreTemplates"
### 0.348s elapsed time, 0.469s cpu time, 0.000s GC time
val it = (): unit
