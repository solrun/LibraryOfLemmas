   [("P2S2R.p2r_subid", "p2r ?P <= Id",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("P2S2R.s2p_compl_hom", "s2p (- ?A) = - s2p ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("P2S2R.p2s_neg_hom", "p2s (- ?P) = - p2s ?P",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("P2S2R.p2r_neg_hom", "p2r (- ?P) = rel_n (p2r ?P)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("P2S2R.s2r_compl_hom", "s2r (- ?A) = rel_n (s2r ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("P2S2R.p2r_id_neg", "Id Int - p2r ?p = p2r (- ?p)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("P2S2R.s2p_inter_hom", "s2p (?A Int ?B) = s2p ?A \<sqinter> s2p ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.s2p_union_hom", "s2p (?A Un ?B) = s2p ?A \<squnion> s2p ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.r2s_union_hom", "r2s (?R Un ?S) = r2s ?R Un r2s ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.p2s_conj_hom", "p2s (?P \<sqinter> ?Q) = p2s ?P Int p2s ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.p2s_disj_hom", "p2s (?P \<squnion> ?Q) = p2s ?P Un p2s ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.s2r_inter_hom", "s2r (?A Int ?B) = s2r ?A Int s2r ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.s2r_inter_hom_var", "s2r (?A Int ?B) = s2r ?A ; s2r ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.s2r_union_hom", "s2r (?A Un ?B) = s2r ?A Un s2r ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("P2S2R.p2r_conj_hom", "p2r ?P Int p2r ?Q = p2r (?P \<sqinter> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("P2S2R.p2r_disj_hom", "p2r ?P Un p2r ?Q = p2r (?P \<squnion> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("P2S2R.p2r_conj_hom_var", "p2r ?P ; p2r ?Q = p2r (?P \<sqinter> ?Q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("P2S2R.rpr", "?R <= Id ==> p2r (r2p ?R) = ?R",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 3)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("P2S2R.rsr", "?R <= Id ==> s2r (r2s ?R) = ?R",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 3)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("P2S2R.r2p_ad_hom", "?R <= Id ==> r2p (rel_n ?R) = - r2p ?R",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.r2s_ad_hom", "?R <= Id ==> r2s (rel_n ?R) = - r2s ?R",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.subid_meet", "[| ?R <= Id; ?S <= Id |] ==> ?R Int ?S = ?R ; ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 3),
        template_inequation (less_equals, template_var 0, template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("P2S2R.r2p_inter_hom",
     "[| ?R <= Id; ?S <= Id |]
      ==> r2p (?R Int ?S) = r2p ?R \<sqinter> r2p ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 4),
        template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.rel_to_pred_union_hom",
     "[| ?R <= Id; ?S <= Id |]
      ==> r2p (?R Un ?S) = r2p ?R \<squnion> r2p ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 4),
        template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.r2p_inter_hom_var",
     "[| ?R <= Id; ?S <= Id |]
      ==> r2p (?R ; ?S) = r2p ?R \<sqinter> r2p ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 4),
        template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.r2s_inter_hom",
     "[| ?R <= Id; ?S <= Id |] ==> r2s (?R Int ?S) = r2s ?R Int r2s ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 4),
        template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.r2s_inter_hom_var",
     "[| ?R <= Id; ?S <= Id |] ==> r2s (?R ; ?S) = r2s ?R Int r2s ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 4),
        template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("P2S2R.r2p_inj",
     "[| ?R <= Id; ?S <= Id; r2p ?R = r2p ?S |] ==> ?R = ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 3),
        template_inequation (less_equals, template_var 0, template_hole 3),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("P2S2R.r2s_inj",
     "[| ?R <= Id; ?S <= Id; r2s ?R = r2s ?S |] ==> ?R = ?S",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 3),
        template_inequation (less_equals, template_var 0, template_hole 3),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0)))]
