Loading theory "Draft.VC_KAT_scratch" (required by "Draft.VC_KAT_scratchTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.543s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
class plus_ord = plus + ord +
  assumes "less_eq_def": "!!x y. (x <= y) = (x + y = y)"
    and "less_def": "!!x y. (x < y) = (x <= y & x ~= y)"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.832s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.359s elapsed time, 1.399s cpu time, 0.122s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs")
class VC_KAT_scratch.dioid = one + zero + semiring + plus_ord +
  assumes "add_idem": "!!x. x + x = x"
    and "mult_onel": "!!x. (1::'a) \<cdot> x = x"
    and "mult_oner": "!!x. x \<cdot> (1::'a) = x"
    and "add_zerol": "!!x. (0::'a) + x = x"
    and "annil": "!!x. (0::'a) \<cdot> x = (0::'a)"
    and "annir": "!!x. x \<cdot> (0::'a) = (0::'a)"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.851s elapsed time, 3.269s cpu time, 0.353s GC time
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
class kleene_algebra = VC_KAT_scratch.dioid +
  fixes star :: "'a => 'a"
  assumes
    "star_unfoldl":
      "!!x. (1::'a) + x \<cdot> x\<^sup>\<star> <= x\<^sup>\<star>"
    and
    "star_unfoldr":
      "!!x. (1::'a) + x\<^sup>\<star> \<cdot> x <= x\<^sup>\<star>"
    and
    "star_inductl":
      "!!z x y. z + x \<cdot> y <= y ==> x\<^sup>\<star> \<cdot> z <= y"
    and
    "star_inductr":
      "!!z y x. z + y \<cdot> x <= y ==> z \<cdot> x\<^sup>\<star> <= y"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.202s elapsed time, 4.227s cpu time, 0.905s GC time
class kat = kleene_algebra +
  fixes at :: "'a => 'a"
  assumes "test_one": "at (at (1::'a)) = (1::'a)"
    and
    "test_mult":
      "!!x y.
          at (at (at (at x) \<cdot> at (at y))) =
          at (at y) \<cdot> at (at x)"
    and "test_mult_comp": "!!x. at x \<cdot> at (at x) = (0::'a)"
    and
    "test_de_morgan":
      "!!x y. at x + at y = at (at (at x) \<cdot> at (at y))"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Relation.relcomp" on left hand side of equation, in theorem:
### monoid_mult.prod_list Id (;) ?xs == foldr (;) ?xs Id
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class rkat = kat +
  fixes R :: "'a => 'a => 'a"
  assumes "R1": "!!p q. H p (R p q) q"
    and "R2": "!!p x q. H p x q ==> x <= R p q"
### theory "HOL-Library.Tree"
### 2.100s elapsed time, 6.499s cpu time, 1.165s GC time
Loading theory "Draft.Templates" (required by "Draft.VC_KAT_scratchTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.VC_KAT_scratchTemplates")
### theory "Draft.VC_KAT_scratch"
### 2.294s elapsed time, 7.165s cpu time, 1.207s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.505s elapsed time, 0.600s cpu time, 0.072s GC time
Loading theory "Draft.VC_KAT_scratchTemplates"
val templateLemmas =
   [("VC_KAT_scratch.power_is_relpow", "rel_d.power ?X ?i = ?X ^^ ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("VC_KAT_scratch.rel_star_contr",
     "?X^* ; ?Y = (UN i. rel_d.power ?X i ; ?Y)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)))),
    ("VC_KAT_scratch.rel_star_contl",
     "?X ; ?Y^* = (UN i. ?X ; rel_d.power ?Y i)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)))),
    ("VC_KAT_scratch.p2r_neg_hom",
     "rel_at \<lceil>?P\<rceil> = \<lceil>%s. ~ ?P s\<rceil>",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, t_empty)),
       template_app (template_hole 5, t_empty))),
    ("VC_KAT_scratch.t_p2r",
     "rel_kat.t_op \<lceil>?P\<rceil> = \<lceil>?P\<rceil>",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, t_empty)),
       template_app (template_hole 4, t_empty))),
    ("VC_KAT_scratch.impl_prop",
     "(\<lceil>?P\<rceil> <= \<lceil>?Q\<rceil>) = (ALL s. ?P s --> ?Q s)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app (template_hole 6, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("VC_KAT_scratch.H_assign",
     "rel_kat.H \<lceil>%s. ?P (s(?v := ?e s))\<rceil> (?v ::= ?e)
       \<lceil>?P\<rceil>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_hole 8),
                 template_hole 7),
               template_app (template_hole 6, t_empty)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app (template_hole 6, t_empty))
         )),
    ("VC_KAT_scratch.p2r_conj_hom",
     "\<lceil>?P\<rceil> Int \<lceil>?Q\<rceil> =
      \<lceil>%s. ?P s & ?Q s\<rceil>",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)),
       template_app (template_hole 4, t_empty))),
    ("VC_KAT_scratch.p2r_disj_hom",
     "\<lceil>?P\<rceil> Un \<lceil>?Q\<rceil> =
      \<lceil>%s. ?P s | ?Q s\<rceil>",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)),
       template_app (template_hole 5, t_empty))),
    ("VC_KAT_scratch.p2r_conj_hom_var",
     "\<lceil>?P\<rceil> ; \<lceil>?Q\<rceil> =
      \<lceil>%s. ?P s & ?Q s\<rceil>",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)),
       template_app (template_hole 4, t_empty))),
    ("VC_KAT_scratch.R_assign",
     "ALL s. ?P s --> ?Q (s(?v := ?e s)) ==>
      ?v ::= ?e <= rel_R \<lceil>?P\<rceil> \<lceil>?Q\<rceil>",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty))))),
    ("VC_KAT_scratch.H_assign_var",
     "ALL s. ?P s --> ?Q (s(?v := ?e s)) ==>
      rel_kat.H \<lceil>?P\<rceil> (?v ::= ?e) \<lceil>?Q\<rceil>",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_hole 7),
                   template_hole 6),
                 template_app (template_hole 5, t_empty)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app (template_hole 5, t_empty))
           ))),
    ("VC_KAT_scratch.R_assignl",
     "ALL s. ?P s --> ?P' (s(?v := ?e s)) ==>
      (?v ::= ?e) ; rel_R \<lceil>?P'\<rceil> \<lceil>?Q\<rceil>
      <= rel_R \<lceil>?P\<rceil> \<lceil>?Q\<rceil>",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 4, t_empty))),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty))))),
    ("VC_KAT_scratch.R_assignr",
     "ALL s. ?Q' s --> ?Q (s(?v := ?e s)) ==>
      rel_R \<lceil>?P\<rceil> \<lceil>?Q'\<rceil> ; (?v ::= ?e)
      <= rel_R \<lceil>?P\<rceil> \<lceil>?Q\<rceil>",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               template_app (template_hole 5, t_empty))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app (template_hole 5, t_empty))))),
    ("VC_KAT_scratch.var_swap_ref_var",
     "(''z'' ::= (%s. s ''x'')) ; (''x'' ::= (%s. s ''y'')) ;
      (''y'' ::= (%s. s ''z''))
      <= rel_R \<lceil>%s. s ''x'' = ?a & s ''y'' = ?b\<rceil>
          \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 10, template_hole 9),
                                     template_hole 8),
                                   template_hole 9),
                                 template_hole 8),
                               template_hole 8),
                             template_hole 8),
                           template_hole 8),
                         template_hole 9)),
                     template_hole 7)),
                 t_empty)),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 10, template_hole 9),
                                   template_hole 9),
                                 template_hole 9),
                               template_hole 8),
                             template_hole 8),
                           template_hole 8),
                         template_hole 8),
                       template_hole 9)),
                   template_hole 7)),
               t_empty))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 10, template_hole 8),
                               template_hole 9),
                             template_hole 9),
                           template_hole 8),
                         template_hole 8),
                       template_hole 8),
                     template_hole 8),
                   template_hole 9)),
               template_hole 7)),
           t_empty)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)))),
    ("VC_KAT_scratch.var_swap_ref2",
     "(''x'' ::= (%s. s ''y'')) ;
      rel_R \<lceil>%s. s ''z'' = ?a & s ''x'' = ?b\<rceil>
       \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>
      <= rel_R \<lceil>%s. s ''z'' = ?a & s ''y'' = ?b\<rceil>
          \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 10, template_hole 9),
                                 template_hole 9),
                               template_hole 9),
                             template_hole 8),
                           template_hole 8),
                         template_hole 8),
                       template_hole 8),
                     template_hole 9)),
                 template_hole 7)),
             t_empty)),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app (template_hole 5, t_empty))),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)))),
    ("VC_KAT_scratch.var_swap_ref1",
     "(''z'' ::= (%s. s ''x'')) ;
      rel_R \<lceil>%s. s ''z'' = ?a & s ''y'' = ?b\<rceil>
       \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>
      <= rel_R \<lceil>%s. s ''x'' = ?a & s ''y'' = ?b\<rceil>
          \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 10, template_hole 9),
                                 template_hole 8),
                               template_hole 9),
                             template_hole 8),
                           template_hole 8),
                         template_hole 8),
                       template_hole 8),
                     template_hole 9)),
                 template_hole 7)),
             t_empty)),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app (template_hole 5, t_empty))),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)))),
    ("VC_KAT_scratch.var_swap_ref3",
     "(''y'' ::= (%s. s ''z'')) ;
      rel_R \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>
       \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>
      <= rel_R \<lceil>%s. s ''z'' = ?a & s ''x'' = ?b\<rceil>
          \<lceil>%s. s ''x'' = ?b & s ''y'' = ?a\<rceil>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 10, template_hole 9),
                                 template_hole 8),
                               template_hole 8),
                             template_hole 9),
                           template_hole 9),
                         template_hole 9),
                       template_hole 9),
                     template_hole 8)),
                 template_hole 7)),
             t_empty)),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app (template_hole 5, t_empty))),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app (template_hole 5, t_empty)))),
    ("VC_KAT_scratch.euclid",
     "rel_kat.H \<lceil>%s. s ''x'' = ?x & s ''y'' = ?y\<rceil>
       (rel_kat.while_inv \<lceil>%s. s ''y'' ~= 0\<rceil>
         \<lceil>%s. gcd (s ''x'') (s ''y'') = gcd ?x ?y\<rceil>
         ((''z'' ::= (%s. s ''y'')) ;
          (''y'' ::= (%s. s ''x'' mod s ''y'')) ;
          (''x'' ::= (%s. s ''z''))))
       \<lceil>%s. s ''x'' = gcd ?x ?y\<rceil>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_hole 19),
                 template_hole 18),
               template_app (template_hole 17, t_empty)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_hole 20),
                       template_hole 5),
                     template_hole 18),
                   template_app (template_hole 17, t_empty)),
                 template_app (template_hole 17, t_empty)),
               template_app
                (template_app
                  (template_hole 20,
                   template_app
                    (template_app
                      (template_hole 20,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_hole 11,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 10, template_hole 9), template_hole 8),
     template_hole 9),
   template_hole 8),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 9)),
                             template_hole 7)),
                         t_empty)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 10, template_hole 8), template_hole 9),
   template_hole 9),
 template_hole 8),
                                     template_hole 8),
                                   template_hole 8),
                                 template_hole 8),
                               template_hole 9)),
                           template_hole 7)),
                       t_empty))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 10, template_hole 9), template_hole 9),
                                     template_hole 9),
                                   template_hole 8),
                                 template_hole 8),
                               template_hole 8),
                             template_hole 8),
                           template_hole 9)),
                       template_hole 7)),
                   t_empty)))),
           template_app (template_hole 17, t_empty))
         ))]:
   (string * thm * template) list
### theory "Draft.VC_KAT_scratchTemplates"
### 0.516s elapsed time, 1.070s cpu time, 0.608s GC time
val it = (): unit
