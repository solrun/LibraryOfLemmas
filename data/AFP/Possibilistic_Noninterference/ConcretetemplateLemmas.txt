   [("Concrete.compatTstSyntactic",
     "tstSec ?tst = Lo ==> Example_PL.compatTst ?tst",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Concrete.presAtmSyntactic",
     "sec ?v = Hi ==> Example_PL.presAtm (Assign ?v ?expr)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Concrete.sup_eq_Lo", "(sup ?a ?b = Lo) = (?a = Lo & ?b = Lo)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Concrete.compatAtmSyntactic",
     "exprSec ?expr = Lo | sec ?v = Hi ==>
      Example_PL.compatAtm (Assign ?v ?expr)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)),
                  template_hole 6)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 5, template_var 0)),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Concrete.exprSec_Lo_eval_eq",
     "[| exprSec ?expr = Lo; Example_PL.indisAbbrev ?s ?t |]
      ==> eval ?expr ?s = eval ?expr ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2), template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0))))]
