   [("Gauss_Jordan.rref_Gauss_Jordan",
     "reduced_row_echelon_form (Gauss_Jordan ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Gauss_Jordan.rank_col_rank", "rank ?A = col_rank ?A",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.row_rank_eq_col_rank", "row_rank ?A = col_rank ?A",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.rank_le_ncols", "rank ?A <= ncols ?A",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.rank_le_nrows", "rank ?A <= nrows ?A",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.rank_Gauss_Jordan", "rank ?A = rank (Gauss_Jordan ?A)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.rank_transpose",
     "rank (Finite_Cartesian_Product.transpose ?A) = rank ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.rank_eq_dim_col_space",
     "rank ?A = vec.dim (col_space ?A)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.rank_eq_dim_col_space'",
     "vec.dim (col_space ?A) = rank ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.row_rank_eq_col_rank_rref",
     "reduced_row_echelon_form ?A ==> row_rank ?A = col_rank ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.A_0_imp_Gauss_Jordan_0",
     "?A = 0 ==> Gauss_Jordan ?A = 0",
     template_implication
      ([template_equation (template_var 0, template_hole 1)],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Gauss_Jordan.dim_null_space",
     "vec.dim (null_space ?A) =
      finite_dimensional_vector_space.dimension cart_basis - rank ?A",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.dim_left_null_space",
     "vec.dim (left_null_space ?A) =
      finite_dimensional_vector_space.dimension cart_basis - rank ?A",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.rank_greater_zero", "?A ~= 0 ==> 0 < rank ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.invertible_Gauss_Jordan",
     "EX P. invertible P & Gauss_Jordan ?A = P ** ?A",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Gauss_Jordan.rank_eq_dim_image",
     "rank ?A = vec.dim (range ((*v) ?A))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Gauss_Jordan.Gauss_Jordan_not_0", "?A ~= 0 ==> Gauss_Jordan ?A ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 0),
             template_hole 1)
           ))),
    ("Gauss_Jordan.invertible_Gauss_Jordan_up_to_k",
     "EX P. invertible P & Gauss_Jordan_upt_k ?A ?k = P ** ?A",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Gauss_Jordan.rref_Gauss_Jordan_upt_k",
     "?k < ncols ?A ==>
      reduced_row_echelon_form_upt_k (Gauss_Jordan_upt_k ?A ?k) (Suc ?k)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Gauss_Jordan.rank_less_row_i_imp_i_is_zero",
     "rank ?A <= mod_type_class.to_nat ?i ==> Gauss_Jordan ?A $ ?i = 0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0))),
    ("Gauss_Jordan.Gauss_Jordan",
     "EX P. invertible P &
            Gauss_Jordan ?A = P ** ?A &
            reduced_row_echelon_form (Gauss_Jordan ?A)",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Gauss_Jordan.invertible_Gauss_Jordan_column_k",
     "EX P. invertible P &
            snd (Gauss_Jordan_column_k (?i, ?A) ?k) = P ** ?A",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Gauss_Jordan.row_greater_greatest_is_zero",
     "(GREATEST m. ~ is_zero_row_upt_k m ?k ?A) < ?i ==>
      is_zero_row_upt_k ?i ?k ?A",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 2, t_empty),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Gauss_Jordan.greatest_ge_nonzero_row",
     "~ is_zero_row_upt_k ?i ?k ?A ==>
      ?i <= (GREATEST m. ~ is_zero_row_upt_k m ?k ?A)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1),
                  template_var 0)
                )
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app (template_hole 0, t_empty)))),
    ("Gauss_Jordan.rref_suc_if_all_rows_not_zero",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ALL n. ~ is_zero_row_upt_k n ?k ?A |]
      ==> reduced_row_echelon_form_upt_k ?A (Suc ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Gauss_Jordan.rank_eq_suc_to_nat_greatest",
     "?A ~= 0 ==>
      rank ?A =
      mod_type_class.to_nat
       (GREATEST a. ~ is_zero_row a (Gauss_Jordan ?A)) +
      1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))),
           template_hole 0)))),
    ("Gauss_Jordan.from_nat_to_nat_greatest",
     "mod_type_class.from_nat
       (Suc (mod_type_class.to_nat
              (GREATEST n. ~ is_zero_row_upt_k n ?k ?A))) =
      (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.invertible_row_add_iterate",
     "?n < nrows ?A ==>
      EX P. invertible P & row_add_iterate ?A ?n ?i ?j = P ** ?A",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Gauss_Jordan.rank_Gauss_Jordan_code",
     "rank ?A =
      (if ?A = 0 then 0
       else let A' = Gauss_Jordan ?A
            in mod_type_class.to_nat (GREATEST a. row a A' ~= 0) + 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 0),
                   template_hole 11)),
               template_hole 10),
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 0)),
               t_empty))
           ))),
    ("Gauss_Jordan.independent_not_zero_rows_rref",
     "reduced_row_echelon_form ?A ==>
      vec.independent {row i ?A |i. row i ?A ~= 0}",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, t_empty))
               )
           ))),
    ("Gauss_Jordan.rank_Gauss_Jordan_eq",
     "rank ?A =
      (let A' = Gauss_Jordan ?A in card {row i A' |i. row i A' ~= 0})",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         t_empty))),
    ("Gauss_Jordan.rref_rank",
     "reduced_row_echelon_form ?A ==>
      rank ?A = card {row i ?A |i. row i ?A ~= 0}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app (template_hole 8, template_var 0),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("Gauss_Jordan.greatest_plus_one_eq_0",
     "Suc (mod_type_class.to_nat
            (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
      nrows ?A ==>
      (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) =
      (0::?'rows)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 7, t_empty)),
           template_hole 1),
         template_hole 0))),
    ("Gauss_Jordan.Gauss_Jordan_in_ij_1",
     "EX n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n ==>
      Gauss_Jordan_in_ij ?A ?i ?j $ ?i $ ?j = (1::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Gauss_Jordan.row_add_iterate_preserves_greater_than_n",
     "[| ?n < nrows ?A; ?n < mod_type_class.to_nat ?a |]
      ==> row_add_iterate ?A ?n ?i ?j $ ?a $ ?b = ?A $ ?a $ ?b",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 5, template_var 4)),
        template_inequation
         (less_than, template_var 5,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 5),
                     template_var 2),
                   template_var 1)),
               template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3)),
           template_var 0)))),
    ("Gauss_Jordan.row_add_iterate_preserves_pivot_row",
     "[| ?n < nrows ?A; mod_type_class.to_nat ?i <= ?n |]
      ==> row_add_iterate ?A ?n ?i ?j $ ?i $ ?b = ?A $ ?i $ ?b",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 4),
                     template_var 2),
                   template_var 1)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("Gauss_Jordan.foldl_Gauss_condition_1",
     "[| ALL m. is_zero_row_upt_k m ?k ?A;
         ALL m>=0::?'rows. ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> is_zero_row_upt_k ?m (Suc ?k) ?A",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_var 0),
               template_app (template_hole 0, template_var 2)),
             template_var 1)
           ))),
    ("Gauss_Jordan.greatest_less_zero_row",
     "[| reduced_row_echelon_form_upt_k ?A ?k; is_zero_row_upt_k ?i ?k ?A;
         ~ (ALL a. is_zero_row_upt_k a ?k ?A) |]
      ==> (GREATEST m. ~ is_zero_row_upt_k m ?k ?A) < ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1),
              template_var 2)
            ),
        template_negation
         (template_predicate (template_app (template_hole 2, t_empty)))],
       template_inequation
        (less_than, template_app (template_hole 0, t_empty),
         template_var 0))),
    ("Gauss_Jordan.condition_1_part_1",
     "[| ALL m>=mod_type_class.from_nat 0.
            ?A $ m $ mod_type_class.from_nat ?k = (0::?'a);
         ALL m. is_zero_row_upt_k m ?k ?A |]
      ==> is_zero_row_upt_k ?j (Suc ?k) ?A",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)),
             template_var 2)
           ))),
    ("Gauss_Jordan.greatest_ge_nonzero_row'",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ?i <= (GREATEST m. ~ is_zero_row_upt_k m ?k ?A);
         ~ (ALL a. is_zero_row_upt_k a ?k ?A) |]
      ==> ~ is_zero_row_upt_k ?i ?k ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, t_empty)),
        template_negation
         (template_predicate (template_app (template_hole 0, t_empty)))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1),
                 template_var 2)
               )
           ))),
    ("Gauss_Jordan.reduced_row_echelon_form_upt_k_Gauss_Jordan_column_k",
     "reduced_row_echelon_form_upt_k ?A ?k ==>
      reduced_row_echelon_form_upt_k
       (snd (Gauss_Jordan_column_k
              (if ALL m. is_zero_row_upt_k m ?k ?A then 0
               else mod_type_class.to_nat
                     (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                    1,
               ?A)
              ?k))
       (Suc ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 9,
                               template_app (template_hole 8, t_empty)),
                             template_hole 6),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_hole 4,
                                 template_app (template_hole 3, t_empty))),
                             template_hole 1))),
                       template_var 1)),
                   template_var 0))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Gauss_Jordan.Gauss_Jordan_in_ij_0",
     "[| EX n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n; ?a ~= ?i |]
      ==> Gauss_Jordan_in_ij ?A ?i ?j $ ?a $ ?j = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 2)),
               template_var 0)),
           template_var 2),
         template_hole 3))),
    ("Gauss_Jordan.rref_row_rank",
     "reduced_row_echelon_form ?A ==>
      row_rank ?A =
      card {column (LEAST n. ?A $ i $ n ~= (0::?'a)) ?A |i. row i ?A ~= 0}",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 0))],
       template_equation
        (template_app (template_hole 15, template_var 0),
         template_app
          (template_hole 14, template_app (template_hole 13, t_empty))))),
    ("Gauss_Jordan.rref_col_rank",
     "reduced_row_echelon_form ?A ==>
      col_rank ?A =
      card {column (LEAST n. ?A $ i $ n ~= (0::?'a)) ?A |i. row i ?A ~= 0}",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 0))],
       template_equation
        (template_app (template_hole 15, template_var 0),
         template_app
          (template_hole 14, template_app (template_hole 13, t_empty))))),
    ("Gauss_Jordan.Gauss_Jordan_in_ij_0'",
     "EX n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n ==>
      ALL a. a ~= ?i --> Gauss_Jordan_in_ij ?A ?i ?j $ a $ ?j = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Gauss_Jordan.foldl_Gauss_condition_6",
     "[| ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
         nrows ?A |]
      ==> nrows ?A =
          Suc (mod_type_class.to_nat
                (GREATEST n. ~ is_zero_row_upt_k n (Suc ?k) ?A))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1),
                  template_var 0)
                )
            ),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_hole 2, template_app (template_hole 1, t_empty))),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty)))))),
    ("Gauss_Jordan.condition_1_part_2",
     "[| ?j ~= (0::?'rows); ALL m. is_zero_row_upt_k m ?k ?A;
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> is_zero_row_upt_k ?j (Suc ?k)
           (Gauss_Jordan_in_ij ?A (mod_type_class.from_nat 0)
             (mod_type_class.from_nat ?k))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app (template_hole 5, template_var 2)),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_hole 0)),
               template_app (template_hole 5, template_var 2)))
           ))),
    ("Gauss_Jordan.rref_suc_if_zero_below_greatest",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ (ALL a. is_zero_row_upt_k a ?k ?A);
         ALL a>GREATEST m. ~ is_zero_row_upt_k m ?k ?A.
            is_zero_row_upt_k a (Suc ?k) ?A |]
      ==> reduced_row_echelon_form_upt_k ?A (Suc ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_predicate (template_app (template_hole 5, t_empty))),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Gauss_Jordan.foldl_Gauss_condition_2",
     "[| ?k < ncols ?A; ALL m. is_zero_row_upt_k m ?k ?A;
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> EX m. ~ is_zero_row_upt_k m (Suc ?k)
                   (Gauss_Jordan_in_ij ?A (0::?'rows)
                     (mod_type_class.from_nat ?k))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 12, template_var 1)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app (template_hole 5, template_var 2)),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Gauss_Jordan.inj_index_independent_rows",
     "[| reduced_row_echelon_form ?A;
         row ?x ?A : {row i ?A |i. row i ?A ~= 0}; ?A $ ?x = ?A $ ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 2)),
              template_app (template_hole 7, t_empty))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Gauss_Jordan.Gauss_Jordan_in_ij_preserves_previous_elements'",
     "[| ALL n. is_zero_row_upt_k n ?k ?A; mod_type_class.to_nat ?j < ?k;
         ?A $ ?n $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> Gauss_Jordan_in_ij ?A (0::?'rows) (mod_type_class.from_nat ?k) $
          ?i $
          ?j =
          ?A $ ?i $ ?j",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 2),
          template_var 4),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 1)),
                template_app (template_hole 3, template_var 4)),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0),
                   template_app (template_hole 3, template_var 4))),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 0)),
           template_var 2)))),
    ("Gauss_Jordan.condition_2_part_4",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
         nrows ?A |]
      ==> ?A $ ?i $ (LEAST k. ?A $ ?i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 1),
                    template_var 2),
                  template_var 3)
                )
            ),
        template_equation
         (template_app
           (template_hole 9,
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))),
          template_app (template_hole 6, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0)),
           template_app (template_hole 2, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.row_add_iterate_eq_row_add",
     "[| ?a ~= ?i; ?n < nrows ?A; mod_type_class.to_nat ?a <= ?n |]
      ==> row_add_iterate ?A ?n ?i ?j $ ?a $ ?b =
          row_add ?A ?a ?i (- ?A $ ?a $ ?j) $ ?a $ ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_var 4)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 5),
          template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 3),
                     template_var 4),
                   template_var 1)),
               template_var 5)),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 5),
                     template_var 4),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 5)),
                       template_var 1)))),
               template_var 5)),
           template_var 0)))),
    ("Gauss_Jordan.column_leading_coefficient_component_1",
     "[| reduced_row_echelon_form ?A;
         ?v : {column (LEAST n. ?A $ i $ n ~= (0::?'a)) ?A |i.
               row i ?A ~= 0};
         ?v $ ?x ~= (0::?'a) |]
      ==> ?v $ ?x = (1::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app (template_hole 15, t_empty))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Gauss_Jordan.foldl_Gauss_condition_5",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ~ is_zero_row_upt_k ?a ?k ?A;
         ALL m>=(GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows).
            ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) =
          (GREATEST n. ~ is_zero_row_upt_k n (Suc ?k) ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 0),
                    template_var 1),
                  template_var 2)
                )
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app (template_hole 8, t_empty),
         template_app (template_hole 8, t_empty)))),
    ("Gauss_Jordan.all_zero_imp_Gauss_Jordan_column_not_zero_in_row_0",
     "[| ALL n. is_zero_row_upt_k n ?k ?A;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> ?i = (0::?'rows)",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 1),
                    template_app (template_hole 16, template_var 3)),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 19, t_empty)),
                                template_hole 11),
                              template_app
                               (template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9,
                                    template_app
                                     (template_hole 8, t_empty))),
                                template_hole 7))),
                          template_var 2)),
                      template_var 3)))
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 0)),
                template_app (template_hole 3, template_var 3)),
              template_hole 2)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Gauss_Jordan.column_leading_coefficient_component_0",
     "[| reduced_row_echelon_form ?A;
         ?v : {column (LEAST n. ?A $ i $ n ~= (0::?'a)) ?A |i.
               row i ?A ~= 0};
         ?v $ ?x ~= (0::?'a); ?x ~= ?y |]
      ==> ?v $ ?y = (0::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app (template_hole 15, t_empty))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_hole 5)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_hole 5))),
    ("Gauss_Jordan.column_leading_coefficient_component_eq",
     "[| reduced_row_echelon_form ?A;
         ?v : {column (LEAST n. ?A $ i $ n ~= (0::?'a)) ?A |i.
               row i ?A ~= 0};
         ?v $ ?x ~= (0::?'a); ?v $ ?y ~= (0::?'a) |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app (template_hole 15, t_empty))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_hole 5)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0),
              template_hole 5)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Gauss_Jordan.foldl_Gauss_condition_3",
     "[| ?k < ncols ?A; ALL m. is_zero_row_upt_k m ?k ?A;
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a);
         ~ is_zero_row_upt_k ?ma (Suc ?k)
            (Gauss_Jordan_in_ij ?A (0::?'rows)
              (mod_type_class.from_nat ?k)) |]
      ==> mod_type_class.to_nat
           (GREATEST n.
               ~ is_zero_row_upt_k n (Suc ?k)
                  (Gauss_Jordan_in_ij ?A (0::?'rows)
                    (mod_type_class.from_nat ?k))) =
          0",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 15, template_var 2)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 2),
                    template_var 1)),
                template_app (template_hole 8, template_var 3)),
              template_hole 7)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 0),
                    template_app (template_hole 6, template_var 3)),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 2),
                      template_hole 4),
                    template_app (template_hole 8, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.row_add_iterate_eq_Gauss_Jordan_in_ij",
     "row_add_iterate
       (mult_row
         (interchange_rows ?A ?i
           (LEAST n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n))
         ?i ((1::?'a) /
             interchange_rows ?A ?i
              (LEAST n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n) $
             ?i $
             ?j))
       (nrows ?A - 1) ?i ?j =
      Gauss_Jordan_in_ij ?A ?i ?j",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app (template_hole 14, template_var 2),
                         template_var 1),
                       template_app (template_hole 13, t_empty))),
                   template_var 1),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 14, template_var 2),
                               template_var 1),
                             template_app (template_hole 13, t_empty))),
                         template_var 1)),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_hole 1)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Gauss_Jordan.foldl_Gauss_condition_8",
     "[| ?k < ncols ?A; ~ is_zero_row_upt_k ?m ?k ?A;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a);
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) <= ?ma |]
      ==> EX m. ~ is_zero_row_upt_k m (Suc ?k)
                   (Gauss_Jordan_in_ij ?A
                     ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                      (1::?'rows))
                     (mod_type_class.from_nat ?k))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 14, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 2),
                    template_var 0)),
                template_app (template_hole 8, template_var 3)),
              template_hole 7)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 5, template_app (template_hole 4, t_empty)),
            template_hole 3),
          template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Gauss_Jordan.is_zero_after_Gauss",
     "[| is_zero_row_upt_k ?a ?k ?A; ~ is_zero_row_upt_k ?m ?k ?A;
         reduced_row_echelon_form_upt_k ?A ?k;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'m) <= ?ma;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> is_zero_row_upt_k ?a ?k
           (Gauss_Jordan_in_ij ?A
             ((GREATEST m. ~ is_zero_row_upt_k m ?k ?A) + (1::?'m))
             (mod_type_class.from_nat ?k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 3)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8, template_app (template_hole 7, t_empty)),
            template_hole 6),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 0)),
                template_app (template_hole 2, template_var 3)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, t_empty)),
                   template_hole 6)),
               template_app (template_hole 2, template_var 3)))
           ))),
    ("Gauss_Jordan.snd_Gauss_Jordan_upt_k",
     "?k < ncols ?A ==>
      foldl Gauss_Jordan_column_k (0, ?A) [0..<Suc ?k] =
      (if ALL m.
             is_zero_row_upt_k m (Suc ?k)
              (snd (foldl Gauss_Jordan_column_k (0, ?A) [0..<Suc ?k]))
       then 0
       else mod_type_class.to_nat
             (GREATEST n.
                 ~ is_zero_row_upt_k n (Suc ?k)
                    (snd (foldl Gauss_Jordan_column_k (0, ?A)
                           [0..<Suc ?k]))) +
            1,
       snd (foldl Gauss_Jordan_column_k (0, ?A) [0..<Suc ?k]))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 16, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 14, template_hole 13),
             template_app
              (template_app (template_hole 12, template_hole 11),
               template_var 0)),
           template_app
            (template_app (template_hole 10, template_hole 11),
             template_app (template_hole 9, template_var 1))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, t_empty)),
                 template_hole 11),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, t_empty))),
                 template_hole 0))),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 14, template_hole 13),
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 11),
                 template_app (template_hole 9, template_var 1)))))))),
    ("Gauss_Jordan.condition_1_part_4",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         is_zero_row_upt_k ?i (Suc ?k)
          (snd (Gauss_Jordan_column_k
                 (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                  else mod_type_class.to_nat
                        (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                       1,
                  ?A)
                 ?k));
         ?i < ?j; ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
         nrows ?A |]
      ==> is_zero_row_upt_k ?j (Suc ?k) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 2),
                template_app (template_hole 14, template_var 3)),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 10,
                              template_app (template_hole 9, t_empty)),
                            template_hole 8),
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_hole 6,
                                template_app (template_hole 5, t_empty))),
                            template_hole 3))),
                      template_var 4)),
                  template_var 3)))
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 0),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_equation
         (template_app
           (template_hole 14,
            template_app
             (template_hole 6, template_app (template_hole 5, t_empty))),
          template_app (template_hole 0, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 15, template_var 1),
               template_app (template_hole 14, template_var 3)),
             template_var 4)
           ))),
    ("Gauss_Jordan.condition_1",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         is_zero_row_upt_k ?i (Suc ?k)
          (snd (Gauss_Jordan_column_k
                 (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                  else mod_type_class.to_nat
                        (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                       1,
                  ?A)
                 ?k));
         ?i < ?j |]
      ==> is_zero_row_upt_k ?j (Suc ?k)
           (snd (Gauss_Jordan_column_k
                  (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                   else mod_type_class.to_nat
                         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                        1,
                   ?A)
                  ?k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 1),
                template_app (template_hole 12, template_var 2)),
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 8,
                              template_app (template_hole 7, t_empty)),
                            template_hole 6),
                          template_app
                           (template_app
                             (template_hole 5,
                              template_app
                               (template_hole 4,
                                template_app (template_hole 3, t_empty))),
                            template_hole 1))),
                      template_var 3)),
                  template_var 2)))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, template_var 0),
               template_app (template_hole 12, template_var 2)),
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app (template_hole 7, t_empty)),
                           template_hole 6),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4,
                               template_app (template_hole 3, t_empty))),
                           template_hole 1))),
                     template_var 3)),
                 template_var 2)))
           ))),
    ("Gauss_Jordan.condition_2_part_1",
     "[| ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ALL m. is_zero_row_upt_k m ?k ?A;
         ALL m. ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> ?A $ ?i $ (LEAST k. ?A $ ?i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 2),
                    template_app (template_hole 17, template_var 1)),
                  template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 13,
                                  template_app (template_hole 12, t_empty)),
                                template_hole 11),
                              template_app
                               (template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9,
                                    template_app
                                     (template_hole 8, t_empty))),
                                template_hole 7))),
                          template_var 0)),
                      template_var 1)))
                )
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_4_part_1",
     "[| ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ALL m. is_zero_row_upt_k m ?k ?A;
         ALL m. ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> ?A $ ?j $ (LEAST n. ?A $ ?i $ n ~= (0::?'a)) = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 3),
                    template_app (template_hole 16, template_var 2)),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 11, t_empty)),
                                template_hole 10),
                              template_app
                               (template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8,
                                    template_app
                                     (template_hole 7, t_empty))),
                                template_hole 6))),
                          template_var 1)),
                      template_var 2)))
                )
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app (template_hole 0, t_empty)),
         template_hole 1))),
    ("Gauss_Jordan.condition_2_part_2",
     "[| ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ALL m. is_zero_row_upt_k m ?k ?A;
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> Gauss_Jordan_in_ij ?A (0::?'rows) (mod_type_class.from_nat ?k) $
          ?i $
          (LEAST ka.
              Gauss_Jordan_in_ij ?A (0::?'rows)
               (mod_type_class.from_nat ?k) $
              ?i $
              ka ~=
              (0::?'a)) =
          (1::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 3),
                    template_app (template_hole 19, template_var 2)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 1)),
                      template_var 2)))
                )
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app (template_hole 5, template_var 2)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 1),
                     template_hole 2),
                   template_app (template_hole 5, template_var 2))),
               template_var 3)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_3_part_1",
     "[| ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ALL m. is_zero_row_upt_k m ?k ?A;
         ALL m. ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ (?i + (1::?'rows)) $ n ~= (0::?'a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 2),
                    template_app (template_hole 19, template_var 1)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 0)),
                      template_var 1)))
                )
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation
        (less_than, template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("Gauss_Jordan.condition_1_part_3",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ?i < ?j;
         ~ is_zero_row_upt_k ?m ?k ?A;
         ALL m>=(GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows).
            ?A $ m $ mod_type_class.from_nat ?k = (0::?'a);
         is_zero_row_upt_k ?i (Suc ?k)
          (snd (Gauss_Jordan_column_k
                 (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                  else mod_type_class.to_nat
                        (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                       1,
                  ?A)
                 ?k)) |]
      ==> is_zero_row_upt_k ?j (Suc ?k) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 4),
              template_var 3)
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 0),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 2),
                template_app (template_hole 8, template_var 3)),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 4,
                              template_app (template_hole 19, t_empty)),
                            template_hole 3),
                          template_app
                           (template_app
                             (template_hole 2,
                              template_app
                               (template_hole 1,
                                template_app (template_hole 15, t_empty))),
                            template_hole 0))),
                      template_var 4)),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 20, template_var 1),
               template_app (template_hole 8, template_var 3)),
             template_var 4)
           ))),
    ("Gauss_Jordan.condition_4_part_4",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ?i ~= ?j; ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
         nrows ?A |]
      ==> ?A $ ?j $ (LEAST n. ?A $ ?i $ n ~= (0::?'a)) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 4),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 2),
                    template_app (template_hole 18, template_var 3)),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_hole 15,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 14,
                                  template_app (template_hole 13, t_empty)),
                                template_hole 12),
                              template_app
                               (template_app
                                 (template_hole 11,
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 9, t_empty))),
                                template_hole 8))),
                          template_var 4)),
                      template_var 3)))
                )
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 0),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_equation
         (template_app
           (template_hole 18,
            template_app
             (template_hole 10, template_app (template_hole 9, t_empty))),
          template_app (template_hole 5, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_4_part_2",
     "[| ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ?i ~= ?j; ALL m. is_zero_row_upt_k m ?k ?A;
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> Gauss_Jordan_in_ij ?A (0::?'rows) (mod_type_class.from_nat ?k) $
          ?j $
          (LEAST n.
              Gauss_Jordan_in_ij ?A (0::?'rows)
               (mod_type_class.from_nat ?k) $
              ?i $
              n ~=
              (0::?'a)) =
          (0::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 4),
                    template_app (template_hole 19, template_var 3)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 2)),
                      template_var 3)))
                )
            ),
        template_negation
         (template_equation (template_var 4, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 0)),
                template_app (template_hole 4, template_var 3)),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1),
                   template_app (template_hole 4, template_var 3))),
               template_var 1)),
           template_app (template_hole 0, t_empty)),
         template_hole 3))),
    ("Gauss_Jordan.Gauss_Jordan_in_ij_preserves_previous_elements",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ~ is_zero_row_upt_k ?a ?k ?A;
         EX m. ?A $ m $ mod_type_class.from_nat ?k ~= (0::?'a) &
               (GREATEST m. ~ is_zero_row_upt_k m ?k ?A) + (1::?'rows) <= m;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) ~=
         (0::?'rows);
         mod_type_class.to_nat ?j < ?k |]
      ==> Gauss_Jordan_in_ij ?A
           ((GREATEST m. ~ is_zero_row_upt_k m ?k ?A) + (1::?'rows))
           (mod_type_class.from_nat ?k) $
          ?i $
          ?j =
          ?A $ ?i $ ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 16, template_var 2),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7, template_app (template_hole 6, t_empty)),
                template_hole 5),
              template_hole 3)
            ),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, t_empty)),
                       template_hole 5)),
                   template_app (template_hole 10, template_var 3))),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 4),
               template_var 0)),
           template_var 1)))),
    ("Gauss_Jordan.condition_2_part_3",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k ?m ?k ?A;
         ALL m>=(GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows).
            ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> ?A $ ?i $ (LEAST k. ?A $ ?i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 22, template_var 1),
                    template_app (template_hole 21, template_var 2)),
                  template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 17,
                                  template_app (template_hole 16, t_empty)),
                                template_hole 15),
                              template_app
                               (template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12, t_empty))),
                                template_hole 11))),
                          template_var 3)),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 22, template_var 0),
                    template_var 2),
                  template_var 3)
                )
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_4_part_3",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ?i ~= ?j; ~ is_zero_row_upt_k ?m ?k ?A;
         ALL m>=(GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows).
            ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> ?A $ ?j $ (LEAST n. ?A $ ?i $ n ~= (0::?'a)) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 4),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 22, template_var 2),
                    template_app (template_hole 21, template_var 3)),
                  template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 17,
                                  template_app (template_hole 16, t_empty)),
                                template_hole 15),
                              template_app
                               (template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12, t_empty))),
                                template_hole 11))),
                          template_var 4)),
                      template_var 3)))
                )
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 22, template_var 0),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 1)),
           template_app (template_hole 0, t_empty)),
         template_hole 1))),
    ("Gauss_Jordan.foldl_Gauss_condition_9",
     "[| ?k < ncols ?A; reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) ~=
         nrows ?A;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) <= ?ma;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> Suc (mod_type_class.to_nat
                (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
          mod_type_class.to_nat
           (GREATEST n.
               ~ is_zero_row_upt_k n (Suc ?k)
                  (Gauss_Jordan_in_ij ?A
                    ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                     (1::?'rows))
                    (mod_type_class.from_nat ?k)))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 1),
                    template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, t_empty))),
              template_app (template_hole 9, template_var 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 7, template_app (template_hole 10, t_empty)),
            template_hole 6),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 0)),
                template_app (template_hole 2, template_var 3)),
              template_hole 1)
            )],
       template_equation
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11, template_app (template_hole 10, t_empty))),
         template_app
          (template_hole 11, template_app (template_hole 10, t_empty))))),
    ("Gauss_Jordan.condition_2",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k)) |]
      ==> snd (Gauss_Jordan_column_k
                (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                 else mod_type_class.to_nat
                       (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                      1,
                 ?A)
                ?k) $
          ?i $
          (LEAST k.
              snd (Gauss_Jordan_column_k
                    (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                     else mod_type_class.to_nat
                           (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                          1,
                     ?A)
                    ?k) $
              ?i $
              k ~=
              (0::?'a)) =
          (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 0),
                    template_app (template_hole 16, template_var 1)),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 11, t_empty)),
                                template_hole 10),
                              template_app
                               (template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8,
                                    template_app
                                     (template_hole 7, t_empty))),
                                template_hole 6))),
                          template_var 2)),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app
                          (template_hole 13,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 12,
                                 template_app (template_hole 11, t_empty)),
                               template_hole 10),
                             template_app
                              (template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 7, t_empty))),
                               template_hole 6))),
                         template_var 2)),
                     template_var 1))),
               template_var 0)),
           template_app (template_hole 2, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_4",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ?i ~= ?j |]
      ==> snd (Gauss_Jordan_column_k
                (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                 else mod_type_class.to_nat
                       (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                      1,
                 ?A)
                ?k) $
          ?j $
          (LEAST n.
              snd (Gauss_Jordan_column_k
                    (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                     else mod_type_class.to_nat
                           (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                          1,
                     ?A)
                    ?k) $
              ?i $
              n ~=
              (0::?'a)) =
          (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 1),
                    template_app (template_hole 16, template_var 2)),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 11, t_empty)),
                                template_hole 10),
                              template_app
                               (template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8,
                                    template_app
                                     (template_hole 7, t_empty))),
                                template_hole 6))),
                          template_var 3)),
                      template_var 2)))
                )
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app
                          (template_hole 13,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 12,
                                 template_app (template_hole 11, t_empty)),
                               template_hole 10),
                             template_app
                              (template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 7, t_empty))),
                               template_hole 6))),
                         template_var 3)),
                     template_var 2))),
               template_var 0)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_1_part_5",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         is_zero_row_upt_k ?i (Suc ?k)
          (snd (Gauss_Jordan_column_k
                 (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                  else mod_type_class.to_nat
                        (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                       1,
                  ?A)
                 ?k));
         ?i < ?j; ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) ~=
         nrows ?A;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) <= ?ma;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> is_zero_row_upt_k ?j (Suc ?k)
           (Gauss_Jordan_in_ij ?A
             ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
             (mod_type_class.from_nat ?k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 24, template_var 3),
                template_app (template_hole 23, template_var 4)),
              template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_app
                       (template_hole 20,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 19,
                              template_app (template_hole 18, t_empty)),
                            template_hole 17),
                          template_app
                           (template_app
                             (template_hole 16,
                              template_app
                               (template_hole 15,
                                template_app (template_hole 14, t_empty))),
                            template_hole 12))),
                      template_var 5)),
                  template_var 4)))
            ),
        template_inequation (less_than, template_var 3, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 24, template_var 1),
                    template_var 4),
                  template_var 5)
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 23,
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, t_empty))),
              template_app (template_hole 9, template_var 5))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 7, template_app (template_hole 14, t_empty)),
            template_hole 6),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 0)),
                template_app (template_hole 2, template_var 4)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 24, template_var 2),
               template_app (template_hole 23, template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 14, t_empty)),
                   template_hole 6)),
               template_app (template_hole 2, template_var 4)))
           ))),
    ("Gauss_Jordan.Gauss_Jordan_in_ij_unfold",
     "[| EX n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n;
         !!n interchange_A A'.
            [| (LEAST n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n) = n;
               ?A $ n $ ?j ~= (0::?'a); ?i <= n;
               interchange_A = interchange_rows ?A ?i n;
               A' =
               mult_row interchange_A ?i
                ((1::?'a) / interchange_A $ ?i $ ?j);
               Gauss_Jordan_in_ij ?A ?i ?j =
               (\<chi>s.
                   if s = ?i then A' $ s
                   else row_add A' s ?i (- interchange_A $ s $ ?j) $ s) |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_var 0))),
    ("Gauss_Jordan.condition_3_part_4",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ?i < ?i + (1::?'rows);
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k (?i + (1::?'rows)) (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) =
         nrows ?A |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ (?i + (1::?'rows)) $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 22, template_var 1),
            template_hole 21)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 1),
                    template_app (template_hole 18, template_var 2)),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_hole 15,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 14,
                                  template_app (template_hole 13, t_empty)),
                                template_hole 12),
                              template_app
                               (template_app
                                 (template_hole 11,
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 9, t_empty))),
                                template_hole 8))),
                          template_var 3)),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app (template_hole 22, template_var 1),
                        template_hole 21)),
                    template_app (template_hole 18, template_var 2)),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_hole 15,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 14,
                                  template_app (template_hole 13, t_empty)),
                                template_hole 12),
                              template_app
                               (template_app
                                 (template_hole 11,
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 9, t_empty))),
                                template_hole 8))),
                          template_var 3)),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 0),
                    template_var 2),
                  template_var 3)
                )
            ),
        template_equation
         (template_app
           (template_hole 18,
            template_app
             (template_hole 10, template_app (template_hole 9, t_empty))),
          template_app (template_hole 6, template_var 3))],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Gauss_Jordan.condition_3_part_2",
     "[| ?i < ?i + (1::?'rows);
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k (?i + (1::?'rows)) (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ALL m. is_zero_row_upt_k m ?k ?A;
         ?A $ ?m $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> (LEAST n.
              Gauss_Jordan_in_ij ?A (0::?'rows)
               (mod_type_class.from_nat ?k) $
              ?i $
              n ~=
              (0::?'a))
          < (LEAST n.
                Gauss_Jordan_in_ij ?A (0::?'rows)
                 (mod_type_class.from_nat ?k) $
                (?i + (1::?'rows)) $
                n ~=
                (0::?'a))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 23, template_var 3),
            template_hole 22)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 3),
                    template_app (template_hole 19, template_var 2)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 1)),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app (template_hole 23, template_var 3),
                        template_hole 22)),
                    template_app (template_hole 19, template_var 2)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 1)),
                      template_var 2)))
                )
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app (template_hole 5, template_var 2)),
              template_hole 4)
            )],
       template_inequation
        (less_than, template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("Gauss_Jordan.condition_2_part_5",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) ~=
         nrows ?A;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) <= ?ma;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> Gauss_Jordan_in_ij ?A
           ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
           (mod_type_class.from_nat ?k) $
          ?i $
          (LEAST ka.
              Gauss_Jordan_in_ij ?A
               ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
               (mod_type_class.from_nat ?k) $
              ?i $
              ka ~=
              (0::?'a)) =
          (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 4),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 24, template_var 2),
                    template_app (template_hole 23, template_var 3)),
                  template_app
                   (template_hole 22,
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app
                           (template_hole 20,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 19,
                                  template_app (template_hole 18, t_empty)),
                                template_hole 17),
                              template_app
                               (template_app
                                 (template_hole 16,
                                  template_app
                                   (template_hole 15,
                                    template_app
                                     (template_hole 14, t_empty))),
                                template_hole 13))),
                          template_var 4)),
                      template_var 3)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 24, template_var 1),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 23,
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, t_empty))),
              template_app (template_hole 11, template_var 4))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 9, template_app (template_hole 14, t_empty)),
            template_hole 8),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 0)),
                template_app (template_hole 4, template_var 3)),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 14, t_empty)),
                       template_hole 8)),
                   template_app (template_hole 4, template_var 3))),
               template_var 2)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.condition_4_part_5",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ?i ~= ?j; ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) ~=
         nrows ?A;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) <= ?ma;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> Gauss_Jordan_in_ij ?A
           ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
           (mod_type_class.from_nat ?k) $
          ?j $
          (LEAST n.
              Gauss_Jordan_in_ij ?A
               ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
               (mod_type_class.from_nat ?k) $
              ?i $
              n ~=
              (0::?'a)) =
          (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 5),
              template_var 4)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 24, template_var 3),
                    template_app (template_hole 23, template_var 4)),
                  template_app
                   (template_hole 22,
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app
                           (template_hole 20,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 19,
                                  template_app (template_hole 18, t_empty)),
                                template_hole 17),
                              template_app
                               (template_app
                                 (template_hole 16,
                                  template_app
                                   (template_hole 15,
                                    template_app
                                     (template_hole 14, t_empty))),
                                template_hole 13))),
                          template_var 5)),
                      template_var 4)))
                )
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 24, template_var 1),
                    template_var 4),
                  template_var 5)
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 23,
                template_app
                 (template_hole 15,
                  template_app (template_hole 14, t_empty))),
              template_app (template_hole 10, template_var 5))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8, template_app (template_hole 14, t_empty)),
            template_hole 7),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 0)),
                template_app (template_hole 3, template_var 4)),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 14, t_empty)),
                       template_hole 7)),
                   template_app (template_hole 3, template_var 4))),
               template_var 2)),
           template_app (template_hole 0, t_empty)),
         template_hole 2))),
    ("Gauss_Jordan.condition_3_part_3",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ?i < ?i + (1::?'rows);
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k (?i + (1::?'rows)) (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k ?m ?k ?A;
         ALL m>=(GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows).
            ?A $ m $ mod_type_class.from_nat ?k = (0::?'a) |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ (?i + (1::?'rows)) $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 23, template_var 1),
            template_hole 22)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 1),
                    template_app (template_hole 19, template_var 2)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 3)),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_app (template_hole 23, template_var 1),
                        template_hole 22)),
                    template_app (template_hole 19, template_var 2)),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app (template_hole 14, t_empty)),
                                template_hole 13),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10, t_empty))),
                                template_hole 9))),
                          template_var 3)),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 0),
                    template_var 2),
                  template_var 3)
                )
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_inequation
        (less_than, template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Gauss_Jordan.condition_3",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ?i < ?i + (1::?'rows);
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k (?i + (1::?'rows)) (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k)) |]
      ==> (LEAST n.
              snd (Gauss_Jordan_column_k
                    (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                     else mod_type_class.to_nat
                           (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                          1,
                     ?A)
                    ?k) $
              ?i $
              n ~=
              (0::?'a))
          < (LEAST n.
                snd (Gauss_Jordan_column_k
                      (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                       else mod_type_class.to_nat
                             (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                            1,
                       ?A)
                      ?k) $
                (?i + (1::?'rows)) $
                n ~=
                (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 20, template_var 0),
            template_hole 19)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 0),
                    template_app (template_hole 16, template_var 1)),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 11, t_empty)),
                                template_hole 10),
                              template_app
                               (template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8,
                                    template_app
                                     (template_hole 7, t_empty))),
                                template_hole 6))),
                          template_var 2)),
                      template_var 1)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 20, template_var 0),
                        template_hole 19)),
                    template_app (template_hole 16, template_var 1)),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 11, t_empty)),
                                template_hole 10),
                              template_app
                               (template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8,
                                    template_app
                                     (template_hole 7, t_empty))),
                                template_hole 6))),
                          template_var 2)),
                      template_var 1)))
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Gauss_Jordan.condition_3_part_5",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ?i < ?i + (1::?'rows);
         ~ is_zero_row_upt_k ?i (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k (?i + (1::?'rows)) (Suc ?k)
            (snd (Gauss_Jordan_column_k
                   (if ALL m. is_zero_row_upt_k m ?k ?A then 0
                    else mod_type_class.to_nat
                          (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) +
                         1,
                    ?A)
                   ?k));
         ~ is_zero_row_upt_k ?m ?k ?A;
         Suc (mod_type_class.to_nat
               (GREATEST n. ~ is_zero_row_upt_k n ?k ?A)) ~=
         nrows ?A;
         (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows) <= ?ma;
         ?A $ ?ma $ mod_type_class.from_nat ?k ~= (0::?'a) |]
      ==> (LEAST n.
              Gauss_Jordan_in_ij ?A
               ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
               (mod_type_class.from_nat ?k) $
              ?i $
              n ~=
              (0::?'a))
          < (LEAST n.
                Gauss_Jordan_in_ij ?A
                 ((GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows))
                 (mod_type_class.from_nat ?k) $
                (?i + (1::?'rows)) $
                n ~=
                (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 25, template_var 2),
            template_hole 24)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 22, template_var 2),
                    template_app (template_hole 21, template_var 3)),
                  template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 17,
                                  template_app (template_hole 16, t_empty)),
                                template_hole 15),
                              template_app
                               (template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12, t_empty))),
                                template_hole 11))),
                          template_var 4)),
                      template_var 3)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 22,
                      template_app
                       (template_app (template_hole 25, template_var 2),
                        template_hole 24)),
                    template_app (template_hole 21, template_var 3)),
                  template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 17,
                                  template_app (template_hole 16, t_empty)),
                                template_hole 15),
                              template_app
                               (template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12, t_empty))),
                                template_hole 11))),
                          template_var 4)),
                      template_var 3)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 22, template_var 1),
                    template_var 3),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 21,
                template_app
                 (template_hole 13,
                  template_app (template_hole 12, t_empty))),
              template_app (template_hole 9, template_var 4))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 25, template_app (template_hole 12, t_empty)),
            template_hole 24),
          template_var 0),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 0)),
                template_app (template_hole 4, template_var 3)),
              template_hole 3)
            )],
       template_inequation
        (less_than, template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty))))]
