   [("Gauss_Jordan.rank_col_rank", "rank ?A = col_rank ?A",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.row_rank_eq_col_rank", "row_rank ?A = col_rank ?A",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.rank_Gauss_Jordan", "rank ?A = rank (Gauss_Jordan ?A)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.rank_transpose",
     "rank (Finite_Cartesian_Product.transpose ?A) = rank ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.rank_eq_dim_col_space",
     "rank ?A = vec.dim (col_space ?A)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.rank_eq_dim_col_space'",
     "vec.dim (col_space ?A) = rank ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Gauss_Jordan.dim_null_space",
     "vec.dim (null_space ?A) =
      finite_dimensional_vector_space.dimension cart_basis - rank ?A",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.dim_left_null_space",
     "vec.dim (left_null_space ?A) =
      finite_dimensional_vector_space.dimension cart_basis - rank ?A",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan.rank_eq_dim_image",
     "rank ?A = vec.dim (range ((*v) ?A))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)))),
    ("Gauss_Jordan.from_nat_to_nat_greatest",
     "mod_type_class.from_nat
       (Suc (mod_type_class.to_nat
              (GREATEST n. ~ is_zero_row_upt_k n ?k ?A))) =
      (GREATEST n. ~ is_zero_row_upt_k n ?k ?A) + (1::?'rows)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty)))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, t_empty)),
         template_hole 0))),
    ("Gauss_Jordan.rank_Gauss_Jordan_code",
     "rank ?A =
      (if ?A = 0 then 0
       else let A' = Gauss_Jordan ?A
            in mod_type_class.to_nat (GREATEST a. row a A' ~= 0) + 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_dunno)),
    ("Gauss_Jordan.rank_Gauss_Jordan_eq",
     "rank ?A =
      (let A' = Gauss_Jordan ?A in card {row i A' |i. row i A' ~= 0})",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         t_empty))),
    ("Gauss_Jordan.row_add_iterate_eq_Gauss_Jordan_in_ij",
     "row_add_iterate
       (mult_row
         (interchange_rows ?A ?i
           (LEAST n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n))
         ?i ((1::?'a) /
             interchange_rows ?A ?i
              (LEAST n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n) $
             ?i $
             ?j))
       (nrows ?A - 1) ?i ?j =
      Gauss_Jordan_in_ij ?A ?i ?j",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app (template_hole 14, template_var 2),
                         template_var 1),
                       template_app (template_hole 13, t_empty))),
                   template_var 1),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 14, template_var 2),
                               template_var 1),
                             template_app (template_hole 13, t_empty))),
                         template_var 1)),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_hole 1)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0)))]
