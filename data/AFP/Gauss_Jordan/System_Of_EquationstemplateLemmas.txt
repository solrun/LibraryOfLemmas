   [("System_Of_Equations.consistent_homogeneous", "consistent ?A 0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("System_Of_Equations.homogeneous_solution_set_subspace",
     "vec.subspace (solution_set ?A 0)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("System_Of_Equations.zero_is_solution_homogeneous_system",
     "0 : solution_set ?A 0",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("System_Of_Equations.null_space_eq_solution_set",
     "null_space ?A = solution_set ?A 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("System_Of_Equations.inconsistent_eq_solve_eq_none",
     "inconsistent ?A ?b = (solve ?A ?b = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("System_Of_Equations.dim_solution_set_homogeneous_eq_dim_null_space",
     "vec.dim (solution_set ?A 0) = vec.dim (null_space ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 0, template_var 0)))),
    ("System_Of_Equations.card_1_exists", "(card ?s = 1) = (EX! x. x : ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("System_Of_Equations.inconsistent_imp_solve_eq_none",
     "inconsistent ?A ?b ==> solve ?A ?b = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("System_Of_Equations.infinite_solution_set_imp_consistent",
     "infinite (solution_set ?A ?b) ==> consistent ?A ?b",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("System_Of_Equations.inconsistent",
     "inconsistent ?A ?b = (\<nexists>x. is_solution x ?A ?b)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2, template_app (template_hole 1, t_empty)))),
    ("System_Of_Equations.consistent_eq_solution_solve",
     "consistent ?A ?b = is_solution (fst (the (solve ?A ?b))) ?A ?b",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_var 1),
         template_var 0))),
    ("System_Of_Equations.infinite_solution_set_homogeneous_eq",
     "infinite (solution_set ?A 0) = (0 < vec.dim (solution_set ?A 0))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))))),
    ("System_Of_Equations.consistent_imp_is_solution_solve",
     "consistent ?A ?b ==> is_solution (fst (the (solve ?A ?b))) ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)))),
               template_var 1),
             template_var 0)
           ))),
    ("System_Of_Equations.infinite_solutions_homogeneous_imp_dim_solution_set_not_zero",
     "infinite (solution_set ?A 0) ==> 0 < vec.dim (solution_set ?A 0)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 0),
                    template_hole 4))
                )
            )],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))))),
    ("System_Of_Equations.infinite_solutions_no_homogeneous_imp_dim_solution_set_not_zero_imp",
     "infinite (solution_set ?A ?b) ==> 0 < vec.dim (solution_set ?A 0)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))
                )
            )],
       template_inequation
        (less_than, template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 0))))),
    ("System_Of_Equations.dim_solution_set_not_zero_imp_infinite_solutions_homogeneous",
     "0 < vec.dim (solution_set ?A 0) ==> infinite (solution_set ?A 0)",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app
           (template_app (template_hole 5, template_hole 4),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2))
               )
           ))),
    ("System_Of_Equations.is_solution_solve_system",
     "is_solution ?x ?A ?b =
      is_solution ?x (fst (solve_system ?A ?b)) (snd (solve_system ?A ?b))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("System_Of_Equations.infinite_solution_set_homogeneous_eq'",
     "(INFM x. is_solution x ?A 0) = (0 < vec.dim (solution_set ?A 0))",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty), template_hole 5),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 6))))),
    ("System_Of_Equations.dim_solution_set_0",
     "(vec.dim (solution_set ?A 0) = 0) = (solution_set ?A 0 = {0})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 5)),
         template_hole 4),
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("System_Of_Equations.consistent_imp_is_solution",
     "consistent ?A ?b ==>
      is_solution
       (solve_consistent_rref (Gauss_Jordan ?A) (P_Gauss_Jordan ?A *v ?b))
       ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_var 0))),
               template_var 1),
             template_var 0)
           ))),
    ("System_Of_Equations.uniqueness_solution_imp_independent",
     "EX! x. is_solution x ?A ?b ==> vec.dim (solution_set ?A 0) = 0",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_hole 0))),
    ("System_Of_Equations.is_solution_imp_solve_system",
     "is_solution ?x ?A ?b ==>
      is_solution ?x (fst (solve_system ?A ?b)) (snd (solve_system ?A ?b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("System_Of_Equations.solve_system_imp_is_solution",
     "is_solution ?x (fst (solve_system ?A ?b))
       (snd (solve_system ?A ?b)) ==>
      is_solution ?x ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))),
              template_app
               (template_hole 0,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("System_Of_Equations.infinite_solution_set_no_homogeneous_eq",
     "infinite (solution_set ?A ?b) =
      (consistent ?A ?b & 0 < vec.dim (solution_set ?A 0))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 7, template_var 1),
               template_hole 0)))))),
    ("System_Of_Equations.consistent_imp_is_solution'",
     "consistent ?A ?b ==>
      is_solution
       (solve_consistent_rref (fst (solve_system ?A ?b))
         (snd (solve_system ?A ?b)))
       ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0))),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)))),
               template_var 1),
             template_var 0)
           ))),
    ("System_Of_Equations.solution_set_rel",
     "is_solution ?p ?A ?b ==>
      solution_set ?A ?b = {?p} + solution_set ?A 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 1)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 0))))),
    ("System_Of_Equations.uniqueness_solution_eq_independent_and_consistent",
     "(EX! x. is_solution x ?A ?b) =
      (consistent ?A ?b & vec.dim (solution_set ?A 0) = 0)",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1))),
               template_hole 0))
           ))),
    ("System_Of_Equations.infinite_solution_set_no_homogeneous_eq'",
     "(INFM x. is_solution x ?A ?b) =
      (consistent ?A ?b & 0 < vec.dim (solution_set ?A 0))",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty), template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("System_Of_Equations.dim_solution_set_not_zero_imp_infinite_solutions_no_homogeneous",
     "[| 0 < vec.dim (solution_set ?A 0); consistent ?A ?b |]
      ==> infinite (solution_set ?A ?b)",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0))
               )
           ))),
    ("System_Of_Equations.independent_and_consistent_imp_uniqueness_solution",
     "[| vec.dim (solution_set ?A 0) = 0; consistent ?A ?b |]
      ==> EX! x. is_solution x ?A ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_hole 6),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("System_Of_Equations.independent_and_consistent_imp_card_1",
     "[| vec.dim (solution_set ?A 0) = 0; consistent ?A ?b |]
      ==> card (solution_set ?A ?b) = 1",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_hole 6),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)),
          template_hole 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("System_Of_Equations.solution_set_rel_solve",
     "consistent ?A ?b ==>
      solution_set ?A ?b =
      {fst (the (solve ?A ?b))} + vec.span (snd (the (solve ?A ?b)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 0)))),
               template_hole 3)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))))))),
    ("System_Of_Equations.is_solution_eq_in_span_solve",
     "consistent ?A ?b ==>
      is_solution ?x ?A ?b =
      (?x : {fst (the (solve ?A ?b))} +
            vec.span (snd (the (solve ?A ?b))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 9, template_var 0),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_var 1)))),
                 template_hole 3)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1))))))))),
    ("System_Of_Equations.consistent_eq_rank_ge",
     "consistent ?A ?b =
      ((if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
        then mod_type_class.to_nat
              (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
             1
        else 0)
       <= rank ?A)",
     template_equation
      (template_app
        (template_app (template_hole 15, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, t_empty)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, t_empty))),
                 template_hole 2)),
             template_hole 1)),
         template_app (template_hole 0, template_var 1)))),
    ("System_Of_Equations.inconsistent_eq_rank_less",
     "inconsistent ?A ?b =
      (rank ?A
       < (if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
          then mod_type_class.to_nat
                (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
               1
          else 0))",
     template_equation
      (template_app
        (template_app (template_hole 15, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app (template_hole 13, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 12, template_app (template_hole 11, t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, t_empty))),
               template_hole 1)),
           template_hole 0)))),
    ("System_Of_Equations.consistent_imp_rank_ge",
     "consistent ?A ?b ==>
      (if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
       then mod_type_class.to_nat
             (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
            1
       else 0)
      <= rank ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_hole 13, template_app (template_hole 12, t_empty)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty))),
               template_hole 2)),
           template_hole 1),
         template_app (template_hole 0, template_var 1)))),
    ("System_Of_Equations.inconsistent_imp_rank_less",
     "inconsistent ?A ?b ==>
      rank ?A
      < (if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
         then mod_type_class.to_nat
               (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
              1
         else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 13, template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 12, template_app (template_hole 11, t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, t_empty))),
               template_hole 1)),
           template_hole 0)))),
    ("System_Of_Equations.rank_less_imp_inconsistent",
     "rank ?A
      < (if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
         then mod_type_class.to_nat
               (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
              1
         else 0) ==>
      inconsistent ?A ?b",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 14, template_var 1),
          template_app
           (template_app
             (template_app
               (template_hole 13, template_app (template_hole 12, t_empty)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, t_empty))),
                template_hole 2)),
            template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("System_Of_Equations.rank_ge_imp_consistent",
     "(if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
       then mod_type_class.to_nat
             (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
            1
       else 0)
      <= rank ?A ==>
      consistent ?A ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app
               (template_hole 14, template_app (template_hole 13, t_empty)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, t_empty))),
                template_hole 3)),
            template_hole 2),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("System_Of_Equations.solve_consistent_rref_code",
     "($) (solve_consistent_rref ?A ?b) =
      (%j. if EX i. ?A $ i $ j = (1::?'b) &
                    j = (LEAST n. ?A $ i $ n ~= (0::?'b))
           then ?b $ (THE i. ?A $ i $ j = (1::?'b)) else (0::?'b))",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_app (template_hole 12, template_var 1),
           template_var 0)),
       t_empty)),
    ("System_Of_Equations.rank_ge_imp_is_solution",
     "(if EX a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)
       then mod_type_class.to_nat
             (GREATEST a. (P_Gauss_Jordan ?A *v ?b) $ a ~= (0::?'a)) +
            1
       else 0)
      <= rank ?A ==>
      is_solution
       (solve_consistent_rref (Gauss_Jordan ?A) (P_Gauss_Jordan ?A *v ?b))
       ?A ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app
               (template_hole 16, template_app (template_hole 15, t_empty)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, t_empty))),
                template_hole 5)),
            template_hole 4),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 10, template_var 1)),
                     template_var 0))),
               template_var 1),
             template_var 0)
           ))),
    ("System_Of_Equations.consistent_eq_rank_ge_code",
     "consistent ?A ?b =
      (let GJ_P = Gauss_Jordan_PA ?A; P_mult_b = fst GJ_P *v ?b
       in Let (if ?A = 0 then 0
               else mod_type_class.to_nat
                     (GREATEST a. row a (snd GJ_P) ~= 0) +
                    1)
           ((<=)
             (if EX a. P_mult_b $ a ~= (0::?'a)
              then mod_type_class.to_nat
                    (GREATEST a. P_mult_b $ a ~= (0::?'a)) +
                   1
              else 0)))",
     template_equation
      (template_app
        (template_app (template_hole 24, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 23,
           template_app (template_hole 22, template_var 1)),
         t_empty))),
    ("System_Of_Equations.inconsistent_eq_rank_less_code",
     "inconsistent ?A ?b =
      (let GJ_P = Gauss_Jordan_PA ?A; P_mult_b = fst GJ_P *v ?b;
           rank_A =
             if ?A = 0 then 0
             else mod_type_class.to_nat
                   (GREATEST a. row a (snd GJ_P) ~= 0) +
                  1
       in rank_A
          < (if EX a. P_mult_b $ a ~= (0::?'a)
             then mod_type_class.to_nat
                   (GREATEST a. P_mult_b $ a ~= (0::?'a)) +
                  1
             else 0))",
     template_equation
      (template_app
        (template_app (template_hole 24, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 23,
           template_app (template_hole 22, template_var 1)),
         t_empty))),
    ("System_Of_Equations.solve_code",
     "solve ?A ?b =
      (let GJ_P = Gauss_Jordan_PA ?A; P_times_b = fst GJ_P *v ?b;
           rank_A =
             if ?A = 0 then 0
             else mod_type_class.to_nat
                   (GREATEST a. row a (snd GJ_P) ~= 0) +
                  1;
           consistent_Ab =
             (if EX a. P_times_b $ a ~= (0::?'a)
              then mod_type_class.to_nat
                    (GREATEST a. P_times_b $ a ~= (0::?'a)) +
                   1
              else 0)
             <= rank_A;
           GJ_transpose =
             Gauss_Jordan_PA (Finite_Cartesian_Product.transpose ?A);
           basis =
             {row i (fst GJ_transpose) |i.
              rank_A <= mod_type_class.to_nat i}
       in if consistent_Ab
          then Some (solve_consistent_rref (snd GJ_P) P_times_b, basis)
          else None)",
     template_equation
      (template_app
        (template_app (template_hole 40, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 39,
           template_app (template_hole 38, template_var 1)),
         t_empty)))]
