   [("Rref.rref_upt_0", "reduced_row_echelon_form_upt_k ?A 0",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Rref.is_zero_row_utp_0", "is_zero_row_upt_k ?m 0 ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)
         )),
    ("Rref.is_zero_row_utp_0'", "ALL m. is_zero_row_upt_k m 0 ?A",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Rref.rref_implies_rref_upt",
     "reduced_row_echelon_form ?A ==> reduced_row_echelon_form_upt_k ?A ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Rref.is_zero_row_eq_row_zero", "is_zero_row ?a ?A = (row ?a ?A = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Rref.is_zero_row_imp_is_zero_row_upt",
     "is_zero_row ?i ?A ==> is_zero_row_upt_k ?i ?k ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Rref.is_zero_row_upt_k_le",
     "is_zero_row_upt_k ?i (Suc ?k) ?A ==> is_zero_row_upt_k ?i ?k ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Rref.reduced_row_echelon_if_all_zero",
     "ALL n. is_zero_row_upt_k n ?k ?A ==>
      reduced_row_echelon_form_upt_k ?A ?k",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Rref.is_zero_row_upt_ncols",
     "is_zero_row_upt_k ?i (ncols ?A) ?A = (ALL j. ?A $ ?i $ j = (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app (template_hole 5, template_var 0)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Rref.rref_suc_imp_rref",
     "[| reduced_row_echelon_form_upt_k ?A (Suc ?k); Suc ?k < ncols ?A |]
      ==> reduced_row_echelon_form_upt_k ?A ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            ),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 0),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 0)
           ))),
    ("Rref.rref_condition1_explicit",
     "[| reduced_row_echelon_form ?A; is_zero_row ?i ?A |]
      ==> ALL j>?i. is_zero_row j ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Rref.rref_first_position_zero_imp_column_0",
     "[| reduced_row_echelon_form ?A;
         ?A $ (0::?'rows) $ (0::?'cols) = (0::?'a) |]
      ==> column (0::?'cols) ?A = 0",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 0),
                template_hole 5)),
            template_hole 4),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 4), template_var 0),
         template_hole 0))),
    ("Rref.rref_first_element",
     "[| reduced_row_echelon_form ?A; column (0::?'cols) ?A ~= 0 |]
      ==> ?A $ (0::?'rows) $ (0::?'cols) = (1::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 6),
         template_hole 0))),
    ("Rref.rref_upt_condition1_explicit",
     "[| reduced_row_echelon_form_upt_k ?A ?k; is_zero_row_upt_k ?i ?k ?A;
         ?i < ?j |]
      ==> is_zero_row_upt_k ?j ?k ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2),
              template_var 3)
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 3)
           ))),
    ("Rref.rref_condition1",
     "reduced_row_echelon_form ?A ==>
      ALL i. is_zero_row i ?A --> ~ (EX j>i. ~ is_zero_row j ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Rref.is_zero_row_upt_k_suc",
     "[| is_zero_row_upt_k ?i ?k ?A;
         ?A $ ?i $ mod_type_class.from_nat ?k = (0::?'b) |]
      ==> is_zero_row_upt_k ?i (Suc ?k) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2)),
            template_app (template_hole 2, template_var 1)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Rref.rref_upt_condition1",
     "reduced_row_echelon_form_upt_k ?A ?k ==>
      ALL i.
         is_zero_row_upt_k i ?k ?A -->
         ~ (EX j>i. ~ is_zero_row_upt_k j ?k ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Rref.not_is_zero_row_upt_suc",
     "[| ~ is_zero_row_upt_k ?i (Suc ?k) ?A;
         ALL i. ?A $ i $ mod_type_class.from_nat ?k = (0::?'b) |]
      ==> ~ is_zero_row_upt_k ?i ?k ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app (template_hole 6, template_var 1)),
                  template_var 0)
                )
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("Rref.rref_condition2_explicit",
     "[| reduced_row_echelon_form ?A; ~ is_zero_row ?i ?A |]
      ==> ?A $ ?i $ (LEAST k. ?A $ ?i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app (template_hole 2, t_empty)),
         template_hole 0))),
    ("Rref.rref_condition2",
     "reduced_row_echelon_form ?A ==>
      ALL i.
         ~ is_zero_row i ?A -->
         ?A $ i $ (LEAST k. ?A $ i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Rref.rref_upt_condition2_explicit",
     "[| reduced_row_echelon_form_upt_k ?A ?k;
         ~ is_zero_row_upt_k ?i ?k ?A |]
      ==> ?A $ ?i $ (LEAST k. ?A $ ?i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 1),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app (template_hole 2, t_empty)),
         template_hole 0))),
    ("Rref.rref_upt_condition2",
     "reduced_row_echelon_form_upt_k ?A ?k ==>
      ALL i.
         ~ is_zero_row_upt_k i ?k ?A -->
         ?A $ i $ (LEAST k. ?A $ i $ k ~= (0::?'a)) = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Rref.rref_condition4_explicit",
     "[| reduced_row_echelon_form ?A; ~ is_zero_row ?i ?A; ?i ~= ?j |]
      ==> ?A $ ?j $ (LEAST n. ?A $ ?i $ n ~= (0::?'a)) = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 2)
                )
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Rref.rref_condition4",
     "reduced_row_echelon_form ?A ==>
      ALL i.
         ~ is_zero_row i ?A -->
         (ALL j.
             i ~= j -->
             ?A $ j $ (LEAST n. ?A $ i $ n ~= (0::?'a)) = (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Rref.rref_upt_condition4_explicit",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ~ is_zero_row_upt_k ?i ?k ?A;
         ?i ~= ?j |]
      ==> ?A $ ?j $ (LEAST n. ?A $ ?i $ n ~= (0::?'a)) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 2),
                  template_var 3)
                )
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app (template_hole 1, t_empty)),
         template_hole 0))),
    ("Rref.rref_upt_condition4",
     "reduced_row_echelon_form_upt_k ?A ?k ==>
      ALL i.
         ~ is_zero_row_upt_k i ?k ?A -->
         (ALL j.
             i ~= j -->
             ?A $ j $ (LEAST n. ?A $ i $ n ~= (0::?'a)) = (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Rref.rref_condition3_equiv",
     "[| reduced_row_echelon_form ?A; ?i < ?j; ~ is_zero_row ?i ?A;
         ~ is_zero_row ?j ?A |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ ?j $ n ~= (0::?'a))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 2)
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Rref.rref_condition3",
     "reduced_row_echelon_form ?A ==>
      ALL i.
         i < i + (1::?'c) &
         ~ is_zero_row i ?A & ~ is_zero_row (i + (1::?'c)) ?A -->
         (LEAST n. ?A $ i $ n ~= (0::?'a))
         < (LEAST n. ?A $ (i + (1::?'c)) $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Rref.rref_condition3_explicit",
     "[| reduced_row_echelon_form ?A; ?i < ?i + (1::?'c);
         ~ is_zero_row ?i ?A; ~ is_zero_row (?i + (1::?'c)) ?A |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ (?i + (1::?'c)) $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 8)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 9, template_var 0),
                      template_hole 8)),
                  template_var 1)
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Rref.rref_upt_condition3",
     "reduced_row_echelon_form_upt_k ?A ?k ==>
      ALL i.
         i < i + (1::?'c) &
         ~ is_zero_row_upt_k i ?k ?A &
         ~ is_zero_row_upt_k (i + (1::?'c)) ?k ?A -->
         (LEAST n. ?A $ i $ n ~= (0::?'a))
         < (LEAST n. ?A $ (i + (1::?'c)) $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Rref.rref_upt_condition3_explicit",
     "[| reduced_row_echelon_form_upt_k ?A ?k; ?i < ?i + (1::?'c);
         ~ is_zero_row_upt_k ?i ?k ?A;
         ~ is_zero_row_upt_k (?i + (1::?'c)) ?k ?A |]
      ==> (LEAST n. ?A $ ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ (?i + (1::?'c)) $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 9, template_var 0),
            template_hole 8)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 0),
                    template_var 1),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 9, template_var 0),
                        template_hole 8)),
                    template_var 1),
                  template_var 2)
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Rref.rref_condition3_equiv1",
     "[| reduced_row_echelon_form ?A; ?i < ?j; ?j < nrows ?A;
         ~ is_zero_row (mod_type_class.from_nat ?i) ?A;
         ~ is_zero_row (mod_type_class.from_nat ?j) ?A |]
      ==> (LEAST n. ?A $ mod_type_class.from_nat ?i $ n ~= (0::?'a))
          < (LEAST n. ?A $ mod_type_class.from_nat ?j $ n ~= (0::?'a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 9, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 1)),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_var 2)
                )
            )],
       template_inequation
        (less_than, template_app (template_hole 4, t_empty),
         template_app (template_hole 4, t_empty)))),
    ("Rref.reduced_row_echelon_form_upt_k_intro",
     "[| ALL i.
            is_zero_row_upt_k i ?k ?A -->
            ~ (EX j>i. ~ is_zero_row_upt_k j ?k ?A);
         ALL i.
            ~ is_zero_row_upt_k i ?k ?A -->
            ?A $ i $ (LEAST k. ?A $ i $ k ~= (0::?'b)) = (1::?'b);
         ALL i.
            i < i + (1::?'a) &
            ~ is_zero_row_upt_k i ?k ?A &
            ~ is_zero_row_upt_k (i + (1::?'a)) ?k ?A -->
            (LEAST n. ?A $ i $ n ~= (0::?'b))
            < (LEAST n. ?A $ (i + (1::?'a)) $ n ~= (0::?'b));
         ALL i.
            ~ is_zero_row_upt_k i ?k ?A -->
            (ALL j.
                i ~= j -->
                ?A $ j $ (LEAST n. ?A $ i $ n ~= (0::?'b)) = (0::?'b)) |]
      ==> reduced_row_echelon_form_upt_k ?A ?k",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           )))]
