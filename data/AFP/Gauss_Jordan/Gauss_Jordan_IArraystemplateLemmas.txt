   [("Gauss_Jordan_IArrays.matrix_to_iarray_rank",
     "rank ?A = rank_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan_IArrays.matrix_to_iarray_Gauss_Jordan",
     "matrix_to_iarray (Gauss_Jordan ?A) =
      Gauss_Jordan_iarrays (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Gauss_Jordan_IArrays.dim_col_space_iarray",
     "vec.dim (col_space ?A) = rank_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan_IArrays.dim_row_space_iarray",
     "vec.dim (row_space ?A) = rank_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan_IArrays.rank_iarrays_code",
     "rank_iarray ?A =
      length
       (filter (%x. ~ is_zero_iarray x)
         (IArray.list_of (Gauss_Jordan_iarrays ?A)))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Gauss_Jordan_IArrays.dim_left_null_space_space_iarray",
     "vec.dim (left_null_space ?A) =
      nrows_iarray (matrix_to_iarray ?A) -
      rank_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Gauss_Jordan_IArrays.dim_null_space_iarray",
     "vec.dim (null_space ?A) =
      ncols_iarray (matrix_to_iarray ?A) -
      rank_iarray (matrix_to_iarray ?A)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Gauss_Jordan_IArrays.matrix_to_iarray_Gauss_Jordan_upt_k",
     "?k < ncols ?A ==>
      matrix_to_iarray (Gauss_Jordan_upt_k ?A ?k) =
      Gauss_Jordan_upt_k_iarrays (matrix_to_iarray ?A) ?k",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 1)))),
    ("Gauss_Jordan_IArrays.rank_eq_card_iarrays_code",
     "rank ?A =
      (let A' = Gauss_Jordan_iarrays (matrix_to_iarray ?A)
       in card {i. ~ is_zero_iarray (A' !! mod_type_class.to_nat i)})",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0))),
         t_empty))),
    ("Gauss_Jordan_IArrays.vector_all_zero_from_index_eq",
     "(ALL m>=?i. ?A $ m = (0::?'a)) =
      vector_all_zero_from_index
       (mod_type_class.to_nat ?i, vec_to_iarray ?A)",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Gauss_Jordan_IArrays.fst_foldl_Gauss_Jordan_column_k_less",
     "?k < ncols ?A ==>
      fst (foldl Gauss_Jordan_column_k (0, ?A) [0..<Suc ?k]) <= nrows ?A",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 3),
               template_app (template_hole 1, template_var 1)))),
         template_app (template_hole 0, template_var 0)))),
    ("Gauss_Jordan_IArrays.matrix_vector_all_zero_from_index",
     "(ALL m>=?i. ?A $ m $ ?k = (0::?'a)) =
      vector_all_zero_from_index
       (mod_type_class.to_nat ?i, vec_to_iarray (column ?k ?A))",
     template_equation
      (template_app (template_hole 11, t_empty),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Gauss_Jordan_IArrays.rank_eq_card_iarrays",
     "rank ?A =
      card
       {vec_to_iarray (row i (Gauss_Jordan ?A)) |i.
        ~ is_zero_iarray (vec_to_iarray (row i (Gauss_Jordan ?A)))}",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("Gauss_Jordan_IArrays.matrix_to_iarray_Gauss_Jordan_in_ij",
     "~ vector_all_zero_from_index
         (mod_type_class.to_nat ?i, vec_to_iarray (column ?j ?A)) ==>
      matrix_to_iarray (Gauss_Jordan_in_ij ?A ?i ?j) =
      Gauss_Jordan_in_ij_iarrays (matrix_to_iarray ?A)
       (mod_type_class.to_nat ?i) (mod_type_class.to_nat ?j)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_var 2)),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))
                )
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 7, template_var 2)),
           template_app (template_hole 0, template_var 1))))),
    ("Gauss_Jordan_IArrays.rank_eq_card_iarrays'",
     "rank ?A =
      (let A' = Gauss_Jordan_iarrays (matrix_to_iarray ?A)
       in card
           {row_iarray (mod_type_class.to_nat i) A' |i.
            ~ is_zero_iarray (A' !! mod_type_class.to_nat i)})",
     template_equation
      (template_app (template_hole 13, template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app (template_hole 10, template_var 0))),
         t_empty))),
    ("Gauss_Jordan_IArrays.matrix_to_iarray_Gauss_Jordan_column_k_1",
     "[| ?k < ncols ?A; ?i <= nrows ?A |]
      ==> fst (Gauss_Jordan_column_k (?i, ?A) ?k) =
          fst (Gauss_Jordan_column_k_iarrays (?i, matrix_to_iarray ?A) ?k)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_var 2)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))),
             template_var 2))))),
    ("Gauss_Jordan_IArrays.matrix_to_iarray_Gauss_Jordan_column_k_2",
     "[| ?k < ncols ?A; ?i <= nrows ?A |]
      ==> matrix_to_iarray (snd (Gauss_Jordan_column_k (?i, ?A) ?k)) =
          snd (Gauss_Jordan_column_k_iarrays (?i, matrix_to_iarray ?A) ?k)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_var 2))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 6, template_var 1))),
             template_var 2))))),
    ("Gauss_Jordan_IArrays.fst_foldl_Gauss_Jordan_column_k_eq",
     "?k < ncols ?A ==>
      fst (foldl Gauss_Jordan_column_k_iarrays (0, matrix_to_iarray ?A)
            [0..<Suc ?k]) =
      fst (foldl Gauss_Jordan_column_k (0, ?A) [0..<Suc ?k])",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app (template_hole 6, template_var 0))),
             template_app
              (template_app (template_hole 5, template_hole 7),
               template_app (template_hole 4, template_var 1)))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_hole 7),
                 template_var 0)),
             template_app
              (template_app (template_hole 5, template_hole 7),
               template_app (template_hole 4, template_var 1))))))),
    ("Gauss_Jordan_IArrays.vec_to_iarray_least_non_zero_position_of_vector_from_index",
     "~ vector_all_zero_from_index
         (mod_type_class.to_nat ?i, vec_to_iarray ?A) ==>
      least_non_zero_position_of_vector_from_index (vec_to_iarray ?A)
       (mod_type_class.to_nat ?i) =
      mod_type_class.to_nat (LEAST n. ?A $ n ~= (0::?'a) & ?i <= n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_var 1)),
                    template_app (template_hole 8, template_var 0)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 8, template_var 0)),
           template_app (template_hole 9, template_var 1)),
         template_app
          (template_hole 9, template_app (template_hole 5, t_empty))))),
    ("Gauss_Jordan_IArrays.vec_to_iarray_least_non_zero_position_of_vector_from_index''",
     "~ vector_all_zero_from_index
         (mod_type_class.to_nat ?j, vec_to_iarray (row ?i ?A)) ==>
      least_non_zero_position_of_vector_from_index
       (vec_to_iarray (row ?i ?A)) (mod_type_class.to_nat ?j) =
      mod_type_class.to_nat (LEAST n. ?A $ ?i $ n ~= (0::?'a) & ?j <= n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_var 2)),
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 1),
                        template_var 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app (template_hole 11, template_var 2)),
         template_app
          (template_hole 11, template_app (template_hole 6, t_empty))))),
    ("Gauss_Jordan_IArrays.vec_to_iarray_least_non_zero_position_of_vector_from_index'",
     "~ vector_all_zero_from_index
         (mod_type_class.to_nat ?i, vec_to_iarray (column ?j ?A)) ==>
      least_non_zero_position_of_vector_from_index
       (vec_to_iarray (column ?j ?A)) (mod_type_class.to_nat ?i) =
      mod_type_class.to_nat (LEAST n. ?A $ n $ ?j ~= (0::?'a) & ?i <= n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_var 2)),
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 1),
                        template_var 0))))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app (template_hole 11, template_var 2)),
         template_app
          (template_hole 11, template_app (template_hole 6, t_empty)))))]
