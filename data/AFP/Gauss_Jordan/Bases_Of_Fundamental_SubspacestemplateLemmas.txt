   [("Bases_Of_Fundamental_Subspaces.independent_basis_left_null_space",
     "vec.independent (basis_left_null_space ?A)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Bases_Of_Fundamental_Subspaces.basis_row_space_subset_row_space",
     "basis_row_space ?A <= row_space ?A",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Bases_Of_Fundamental_Subspaces.basis_left_null_space_in_left_null_space",
     "basis_left_null_space ?A <= left_null_space ?A",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Bases_Of_Fundamental_Subspaces.basis_null_space_eq_basis_left_null_space_transpose",
     "basis_null_space ?A =
      basis_left_null_space (Finite_Cartesian_Product.transpose ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Bases_Of_Fundamental_Subspaces.basis_null_space_transpose_eq_basis_left_null_space",
     "basis_null_space (Finite_Cartesian_Product.transpose ?A) =
      basis_left_null_space ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Bases_Of_Fundamental_Subspaces.basis_col_space_eq_basis_row_space_transpose",
     "basis_col_space ?A =
      basis_row_space (Finite_Cartesian_Product.transpose ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Bases_Of_Fundamental_Subspaces.row_space_subset_span_basis_row_space",
     "row_space ?A <= vec.span (basis_row_space ?A)",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Bases_Of_Fundamental_Subspaces.left_null_space_subset_span_basis",
     "left_null_space ?A <= vec.span (basis_left_null_space ?A)",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Bases_Of_Fundamental_Subspaces.card_basis_left_null_space_eq_dim",
     "card (basis_left_null_space ?A) = vec.dim (left_null_space ?A)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Bases_Of_Fundamental_Subspaces.basis_null_space",
     "vec.independent (basis_null_space ?A) &
      null_space ?A = vec.span (basis_null_space ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_app (template_hole 3, template_var 0))))
         )),
    ("Bases_Of_Fundamental_Subspaces.basis_row_space",
     "vec.independent (basis_row_space ?A) &
      vec.span (basis_row_space ?A) = row_space ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 4),
                 template_app (template_hole 3, template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Bases_Of_Fundamental_Subspaces.basis_col_space",
     "vec.independent (basis_col_space ?A) &
      vec.span (basis_col_space ?A) = col_space ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 4),
                 template_app (template_hole 3, template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Bases_Of_Fundamental_Subspaces.basis_left_null_space",
     "vec.independent (basis_left_null_space ?A) &
      left_null_space ?A = vec.span (basis_left_null_space ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 0)))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_app (template_hole 3, template_var 0))))
         )),
    ("Bases_Of_Fundamental_Subspaces.basis_row_space_code",
     "basis_row_space ?A =
      (let A' = Gauss_Jordan ?A in {row i A' |i. row i A' ~= 0})",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         t_empty))),
    ("Bases_Of_Fundamental_Subspaces.basis_col_space_code",
     "basis_col_space ?A =
      (let A' = Gauss_Jordan (Finite_Cartesian_Product.transpose ?A)
       in {row i A' |i. row i A' ~= 0})",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0))),
         t_empty))),
    ("Bases_Of_Fundamental_Subspaces.basis_left_null_space_code",
     "basis_left_null_space ?A =
      (let GJ = Gauss_Jordan_PA ?A;
           rank_A =
             if ?A = 0 then 0
             else mod_type_class.to_nat (GREATEST a. row a (snd GJ) ~= 0) +
                  1
       in {row i (fst GJ) |i. rank_A <= mod_type_class.to_nat i})",
     template_equation
      (template_app (template_hole 23, template_var 0),
       template_app
        (template_app
          (template_hole 22,
           template_app (template_hole 21, template_var 0)),
         t_empty))),
    ("Bases_Of_Fundamental_Subspaces.basis_null_space_code",
     "basis_null_space ?A =
      (let GJ = Gauss_Jordan_PA (Finite_Cartesian_Product.transpose ?A);
           rank_A =
             if ?A = 0 then 0
             else mod_type_class.to_nat (GREATEST a. row a (snd GJ) ~= 0) +
                  1
       in {row i (fst GJ) |i. rank_A <= mod_type_class.to_nat i})",
     template_equation
      (template_app (template_hole 24, template_var 0),
       template_app
        (template_app
          (template_hole 23,
           template_app
            (template_hole 22,
             template_app (template_hole 21, template_var 0))),
         t_empty)))]
