   [("Inverse.invertible_eq_full_rank",
     "invertible ?A = (rank ?A = nrows ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Inverse.inverse_matrix",
     "inverse_matrix ?A =
      (if invertible ?A then Some (P_Gauss_Jordan ?A) else None)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Inverse.inverse_matrix_code",
     "inverse_matrix ?A =
      (let GJ = Gauss_Jordan_PA ?A;
           rank_A =
             if ?A = 0 then 0
             else mod_type_class.to_nat (GREATEST a. row a (snd GJ) ~= 0) +
                  1
       in if nrows ?A = rank_A then Some (fst GJ) else None)",
     template_equation
      (template_app (template_hole 22, template_var 0),
       template_app
        (template_app
          (template_hole 21,
           template_app (template_hole 20, template_var 0)),
         t_empty)))]
