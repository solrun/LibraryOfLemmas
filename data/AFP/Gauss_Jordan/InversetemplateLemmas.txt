   [("Inverse.invertible_eq_full_rank",
     "invertible ?A = (rank ?A = nrows ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Inverse.id_upt_k_Gauss_Jordan",
     "invertible ?A ==> id_upt_k (Gauss_Jordan ?A) ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Inverse.invertible_implies_full_rank",
     "invertible ?A ==> rank ?A = nrows ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Inverse.invertible_implies_rref_id",
     "invertible ?A ==> Gauss_Jordan ?A = mat (1::?'a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Inverse.full_rank_implies_invertible",
     "rank ?A = nrows ?A ==> invertible ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Inverse.rref_id_implies_invertible",
     "Gauss_Jordan ?A = mat (1::?'a) ==> invertible ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_hole 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Inverse.inverse_matrix",
     "inverse_matrix ?A =
      (if invertible ?A then Some (P_Gauss_Jordan ?A) else None)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Inverse.matrix_inv_Gauss_Jordan_PA",
     "invertible ?A ==> matrix_inv ?A = fst (Gauss_Jordan_PA ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Inverse.the_inverse_matrix",
     "invertible ?A ==> the (inverse_matrix ?A) = P_Gauss_Jordan ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Inverse.id_upt_nrows_mat_1",
     "id_upt_k ?A (nrows ?A) ==> ?A = mat (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("Inverse.matrix_inv_Gauss",
     "[| invertible ?A; Gauss_Jordan ?A = ?P ** ?A |]
      ==> matrix_inv ?A = ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Inverse.inverse_matrix_code",
     "inverse_matrix ?A =
      (let GJ = Gauss_Jordan_PA ?A;
           rank_A =
             if ?A = 0 then 0
             else mod_type_class.to_nat (GREATEST a. row a (snd GJ) ~= 0) +
                  1
       in if nrows ?A = rank_A then Some (fst GJ) else None)",
     template_equation
      (template_app (template_hole 22, template_var 0),
       template_app
        (template_app
          (template_hole 21,
           template_app (template_hole 20, template_var 0)),
         t_empty)))]
