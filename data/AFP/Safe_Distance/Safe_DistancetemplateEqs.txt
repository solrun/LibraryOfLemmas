   [("Safe_Distance.less_Suc_iff_disj",
     "(?i < Suc ?x) = (?i = ?x | ?i < ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_dunno)),
    ("Safe_Distance.card_iff_exists",
     "(0 < card ?X) = (finite ?X & (EX x. x : ?X))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Safe_Distance.rel_dist_to_stop'",
     "interpret_floatarith (rel_dist_to_stop_expr 0 1) [?v, ?a] =
      rel_dist_to_stop ?v ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Safe_Distance.check_precond_safe_distance",
     "check_precond ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
       ?a\<^sub>o =
      safe_distance ?a\<^sub>e ?v\<^sub>e ?s\<^sub>e ?a\<^sub>o ?v\<^sub>o
       ?s\<^sub>o",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 4),
               template_var 5),
             template_var 0),
           template_var 1),
         template_var 2))),
    ("Safe_Distance.checker_eq_checker2",
     "checker ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
       ?a\<^sub>o =
      checker2 ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
       ?a\<^sub>o",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Safe_Distance.checker2_eq_checker3",
     "checker2 ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
       ?a\<^sub>o =
      checker3 ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
       ?a\<^sub>o",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Safe_Distance.power2_less_sqrt_iff",
     "(?x\<^sup>2 < ?y) = (0 <= ?y & \<bar>?x\<bar> < sqrt ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Safe_Distance.second_safe_dist'",
     "interpret_floatarith (second_safe_dist_expr 0 1 2 3)
       [?v, ?a, ?v', ?a'] =
      second_safe_dist ?v ?a ?v' ?a'",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_hole 8),
                 template_hole 7),
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app
              (template_hole 6,
               template_app (template_hole 3, template_hole 4)))),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1))))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Safe_Distance.soundness_correctness",
     "checker ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
       ?a\<^sub>o =
      (check_precond ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
        ?a\<^sub>o &
       ~ safe_distance.collision ?a\<^sub>e ?v\<^sub>e ?s\<^sub>e ?a\<^sub>o
          ?v\<^sub>o ?s\<^sub>o {0..})",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 4),
                     template_var 5),
                   template_var 0),
                 template_var 1),
               template_var 2),
             template_app (template_hole 1, template_hole 0)))))),
    ("Safe_Distance.symbolic_soundness_correctness",
     "symbolic_checker ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o
       ?v\<^sub>o ?a\<^sub>o =
      (check_precond ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o ?v\<^sub>o
        ?a\<^sub>o &
       ~ safe_distance.collision ?a\<^sub>e ?v\<^sub>e ?s\<^sub>e ?a\<^sub>o
          ?v\<^sub>o ?s\<^sub>o {0..})",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 4),
                     template_var 5),
                   template_var 0),
                 template_var 1),
               template_var 2),
             template_app (template_hole 1, template_hole 0)))))),
    ("Safe_Distance.ncheck_quadroot",
     "(~ quadroot_in ?m ?M ?a ?b ?c) =
      ((?a = 0 --> ~ quadroot_in ?m ?M ?a ?b ?c) &
       (?a = 0 | ~ quadroot_in ?m ?M ?a ?b ?c))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Safe_Distance.quadroot_in_sturm",
     "quadroot_in ?m ?M ?a ?b ?c =
      (?a = 0 & ?b = 0 & ?c = 0 & ?m <= ?M |
       ?m <= ?M & poly [:?c, ?b, ?a:] ?m = 0 |
       0 < count_roots_between [:?c, ?b, ?a:] ?m ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Safe_Distance.suff_cond_safe_dist2_code",
     "suff_cond_safe_dist2 ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o
       ?v\<^sub>o ?a\<^sub>o =
      (let D2 = discriminant ?s\<^sub>e ?v\<^sub>e ?a\<^sub>e ?s\<^sub>o
                 ?v\<^sub>o ?a\<^sub>o
       in ?a\<^sub>e < ?a\<^sub>o -->
          ?v\<^sub>o < ?v\<^sub>e -->
          0 <= D2 -->
          0 <= ?v\<^sub>e - ?a\<^sub>e / ?a\<^sub>o * ?v\<^sub>o &
          D2 <= (?v\<^sub>e -
                 ?a\<^sub>e / ?a\<^sub>o * ?v\<^sub>o)\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 14, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 12, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         t_empty)))]
