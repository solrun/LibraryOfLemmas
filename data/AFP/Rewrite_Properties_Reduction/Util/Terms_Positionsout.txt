Loading theory "Draft.Terms_Positions" (required by "Draft.Terms_PositionsTemplates")
Loading theory "Draft.Templates" (required by "Draft.Terms_PositionsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.063s elapsed time, 0.155s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Terms_PositionsTemplates")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
### Missing patterns in function definition:
### !!v va vb vc c. (More v va vb vc)[[] \<leftarrow> c]\<^sub>C = undefined
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.548s elapsed time, 1.162s cpu time, 0.130s GC time
Found termination order: "(%p. size_list size (fst (snd p))) <*mlex*> {}"
### theory "Draft.Terms_Positions"
### 0.788s elapsed time, 1.493s cpu time, 0.130s GC time
Loading theory "Draft.Terms_PositionsTemplates"
val templateLemmas =
   [("Terms_Positions.finite_poss", "finite (poss ?s)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Terms_Positions.finite_varposs", "finite (varposs ?s)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Terms_Positions.pos_diff_itself", "?p -\<^sub>p ?p = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Terms_Positions.less_eq_poss_append_itself",
     "?p \<le>\<^sub>p (?p @ ?q)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Terms_Positions.gound_linear", "ground ?t ==> linear_term ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Terms_Positions.varposs_Var", "varposs (Var ?x) = {[]}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Terms_Positions.varposs_empty_gound", "(varposs ?s = {}) = ground ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Terms_Positions.pos_diff_append_itself",
     "(?p @ ?q) -\<^sub>p ?p = ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("Terms_Positions.subst_poss_mono",
     "poss ?s <= poss (?s \<cdot> ?\<sigma>)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Terms_Positions.fuans_term_term_to_sig",
     "funas_term (term_to_sig ?\<F> ?v ?t) <= ?\<F>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("Terms_Positions.replace_term_at_subt_at_id",
     "?s[?p \<leftarrow> ?s |_ ?p] = ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Terms_Positions.ctxt_apply_subt_at_hole_pos",
     "?C\<langle>?s\<rangle> |_ hole_pos ?C = ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_var 0)),
    ("Terms_Positions.vars_term_empty_ground",
     "vars_term ?s = {} ==> ground ?s",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Terms_Positions.ground_subst_apply",
     "ground ?t ==> ?t \<cdot> ?\<sigma> = ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Terms_Positions.varposs_imp_poss", "?p : varposs ?s ==> ?p : poss ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Terms_Positions.funas_term_replace_at_upper",
     "funas_term ?s[?p \<leftarrow> ?t] <= funas_term ?s Un funas_term ?t",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("Terms_Positions.replace_term_at_same_pos",
     "?s[?p \<leftarrow> ?u][?p \<leftarrow> ?t] = ?s[?p \<leftarrow> ?t]",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 0))),
    ("Terms_Positions.ctxt_apply_term_subt_at_hole_pos",
     "?C\<langle>?s\<rangle> |_ (hole_pos ?C @ ?q) = ?s |_ ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0))),
    ("Terms_Positions.pos_les_eq_append_diff",
     "?p \<le>\<^sub>p ?q ==> ?p @ ?q -\<^sub>p ?p = ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Terms_Positions.funas_ctxt_ctxt_inv_const_ctxt_ind",
     "funas_ctxt ?C <= ?\<F> ==> inv_const_ctxt ?\<F> ?v ?C = ?C",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("Terms_Positions.term_to_sig_id",
     "funas_term ?t <= ?\<F> ==> term_to_sig ?\<F> ?v ?t = ?t",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("Terms_Positions.par_pos_prefix",
     "(?i # ?p) \<bottom> (?i # ?q) ==> ?p \<bottom> ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Terms_Positions.pos_replace_at_pres",
     "?p : poss ?s ==> ?p : poss ?s[?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)))
           ))),
    ("Terms_Positions.subt_at_imp_supteq",
     "?p : poss ?s ==> ?s \<unrhd> ?s |_ ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_hole 0)
           ))),
    ("Terms_Positions.poss_ctxt_apply",
     "(hole_pos ?C @ ?p : poss ?C\<langle>?s\<rangle>) = (?p : poss ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Terms_Positions.funas_term_replace_at_lower",
     "?p : poss ?s ==> funas_term ?t <= funas_term ?s[?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0))))),
    ("Terms_Positions.poss_of_term_replace_term_at",
     "?p : poss ?s ==> ?p : poss_of_term ?u ?s[?p \<leftarrow> ?u]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)))
           ))),
    ("Terms_Positions.funas_ctxt_subst_apply_ctxt",
     "funas_ctxt (?C \<cdot>\<^sub>c ?\<sigma>) =
      funas_ctxt ?C Un \<Union> (funas_term ` ?\<sigma> ` vars_ctxt ?C)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1))))))),
    ("Terms_Positions.vars_term_varposs_iff",
     "(?x : vars_term ?s) = (EX p:varposs ?s. ?s |_ p = Var ?x)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         t_empty))),
    ("Terms_Positions.constT_nfunas_term_poss_of_term_empty",
     "((?c, 0) ~: funas_term ?t) = (poss_of_term (constT ?c) ?t = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_hole 6)),
                template_app (template_hole 5, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_var 0),
         template_hole 0))),
    ("Terms_Positions.replace_subterm_at_itself",
     "?s[?p \<leftarrow> (?s |_ ?p)[?q \<leftarrow> ?t]] =
      ?s[?p @ ?q \<leftarrow> ?t]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Terms_Positions.ctxt_apply_term_replace_term_hole_pos",
     "?C\<langle>?s\<rangle>[hole_pos ?C @ ?q \<leftarrow> ?u] =
      ?C\<langle>?s[?q \<leftarrow> ?u]\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Terms_Positions.ctxt_of_pos_term_apply_replace_at_ident",
     "?p : poss ?s ==>
      (ctxt_at_pos ?s ?p)\<langle>?t\<rangle> = ?s[?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Terms_Positions.term_to_sig_ctxt_apply'",
     "~ ctxt_well_def_hole_path ?\<F> ?C ==>
      term_to_sig ?\<F> ?v ?C\<langle>?s\<rangle> =
      inv_const_ctxt' ?\<F> ?v ?C",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 2)))),
    ("Terms_Positions.subst_subt_at_dist",
     "?p : poss ?s ==>
      ?s \<cdot> ?\<sigma> |_ ?p = ?s |_ ?p \<cdot> ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Terms_Positions.ground_ctxt_substI",
     "(!!x. x : vars_ctxt ?C ==> ground (?\<sigma> x)) ==>
      ground_ctxt (?C \<cdot>\<^sub>c ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Terms_Positions.poss_of_term_Cons",
     "?i # ?p : poss_of_term ?u (Fun ?f ?ts) ==>
      ?p : poss_of_term ?u (?ts ! ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4)))
           ))),
    ("Terms_Positions.par_pos_replace_pres",
     "[| ?p : poss ?s; ?p \<bottom> ?q |]
      ==> ?p : poss ?s[?q \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Terms_Positions.funas_term_subterm_atI",
     "[| ?p : poss ?s; funas_term ?s <= ?\<F> |]
      ==> funas_term (?s |_ ?p) <= ?\<F>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Terms_Positions.subt_at_imp_supteq'",
     "[| ?p : poss ?s; ?s |_ ?p = ?t |] ==> ?s \<unrhd> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Terms_Positions.poss_of_term_possI",
     "[| ?p : poss ?s; ?s |_ ?p = ?u |] ==> ?p : poss_of_term ?u ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Terms_Positions.subt_at_vars_term",
     "[| ?p : poss ?s; ?s |_ ?p = Var ?x |] ==> ?x : vars_term ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Terms_Positions.par_hole_pos_replace_term_context_at",
     "?p \<bottom> hole_pos ?C ==>
      ?C\<langle>?s\<rangle>[?p \<leftarrow> ?u] =
      ?C[?p \<leftarrow> ?u]\<^sub>C\<langle>?s\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1)))),
    ("Terms_Positions.subt_at_append_dist",
     "?p @ ?q : poss ?s ==> ?s |_ (?p @ ?q) = ?s |_ ?p |_ ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("Terms_Positions.poss_pos_diffI",
     "[| ?p \<le>\<^sub>p ?q; ?q : poss ?s |]
      ==> ?q -\<^sub>p ?p : poss (?s |_ ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Terms_Positions.poss_of_term_poss_emptyD",
     "[| poss_of_term ?u ?s = {}; ?p : poss ?s |] ==> ?s |_ ?p ~= ?u",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Terms_Positions.poss_of_term_const_ctxt_apply",
     "?p : poss_of_term (constT ?c) ?C\<langle>?s\<rangle> ==>
      ?p \<bottom> hole_pos ?C | hole_pos ?C \<le>\<^sub>p ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 5)),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1)),
               template_var 3))
           ))),
    ("Terms_Positions.term_to_sig_ctxt_apply",
     "ctxt_well_def_hole_path ?\<F> ?C ==>
      term_to_sig ?\<F> ?v ?C\<langle>?s\<rangle> =
      (inv_const_ctxt ?\<F> ?v
        ?C)\<langle>term_to_sig ?\<F> ?v ?s\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0))))),
    ("Terms_Positions.term_to_sig_subst_sig",
     "funas_term ?t <= ?\<F> ==>
      term_to_sig ?\<F> ?v (?t \<cdot> ?\<sigma>) =
      ?t \<cdot> (%x. term_to_sig ?\<F> ?v (?\<sigma> x))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3), t_empty)))),
    ("Terms_Positions.par_pos_replace_term_at",
     "[| ?p : poss ?s; ?p \<bottom> ?q |]
      ==> ?s[?q \<leftarrow> ?t] |_ ?p = ?s |_ ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 3)))),
    ("Terms_Positions.hole_pos_replace_term_at",
     "hole_pos ?C \<le>\<^sub>p ?p ==>
      ?C\<langle>?s\<rangle>[?p \<leftarrow> ?u] =
      ?C\<langle>?s[?p -\<^sub>p hole_pos ?C \<leftarrow> ?u]\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 2),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app (template_hole 4, template_var 3))),
             template_var 0))))),
    ("Terms_Positions.varposs_ground_replace_at",
     "[| ?p : varposs ?s; ground ?u |]
      ==> varposs ?s[?p \<leftarrow> ?u] = varposs ?s - {?p}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Terms_Positions.greater_eq_subt_at_replace",
     "[| ?p : poss ?s; ?q \<le>\<^sub>p ?p |]
      ==> ?s[?q \<leftarrow> ?t] |_ ?p = ?t |_ (?p -\<^sub>p ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Terms_Positions.possc_subt_at_ctxt_apply",
     "[| ?p : possc ?C; ?p \<bottom> hole_pos ?C |]
      ==> ?C\<langle>?s\<rangle> |_ ?p = ?C\<langle>?t\<rangle> |_ ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 3)))),
    ("Terms_Positions.poss_of_termE",
     "[| ?p : poss_of_term ?u ?s;
         [| ?p : poss ?s; ?s |_ ?p = ?u |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app (template_hole 2, template_var 1))
               )],
          template_implication
           ([template_equation
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Terms_Positions.less_eq_subt_at_replace",
     "[| ?p : poss ?s; ?p \<le>\<^sub>p ?q |]
      ==> ?s[?q \<leftarrow> ?t] |_ ?p =
          (?s |_ ?p)[?q -\<^sub>p ?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_var 0)))),
    ("Terms_Positions.varposs_Fun",
     "varposs (Fun ?f ?ts) =
      {i # p |i p. i < length ?ts & p : varposs (?ts ! i)}",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app (template_hole 9, t_empty))),
    ("Terms_Positions.funas_term_subt_at",
     "(?f, ?n) : funas_term ?t ==>
      EX p ts. p : poss ?t & ?t |_ p = Fun ?f ts & length ts = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)),
              template_app (template_hole 10, template_var 0))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Terms_Positions.linear_term_varposs_subst_replace_term",
     "[| linear_term ?s; ?p : varposs ?s; ?p \<le>\<^sub>p ?q |]
      ==> (?s \<cdot> ?\<sigma>)[?q \<leftarrow> ?u] =
          ?s \<cdot>
          (%x. if Var x = ?s |_ ?p
               then (?\<sigma> x)[?q -\<^sub>p ?p \<leftarrow> ?u]
               else ?\<sigma> x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 1)),
             template_var 2),
           template_var 0),
         template_app
          (template_app (template_hole 5, template_var 4), t_empty)))),
    ("Terms_Positions.trans_ctxt_sig_imp_all_ctxt_closed",
     "[| trans ?r; !!t. funas_term t <= ?F ==> (t, t) : ?r;
         !!C s t.
            [| funas_ctxt C <= ?F; funas_term s <= ?F; funas_term t <= ?F;
               (s, t) : ?r |]
            ==> (C\<langle>s\<rangle>, C\<langle>t\<rangle>) : ?r |]
      ==> all_ctxt_closed ?F ?r",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Terms_Positions.all_ctxt_closedD",
     "[| all_ctxt_closed ?F ?r; (?f, length ?ss) : ?F;
         length ?ts = length ?ss;
         !!i. i < length ?ts ==> (?ts ! i, ?ss ! i) : ?r;
         !!i. i < length ?ts ==> funas_term (?ts ! i) <= ?F;
         !!i. i < length ?ts ==> funas_term (?ss ! i) <= ?F |]
      ==> (Fun ?f ?ts, Fun ?f ?ss) : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_app (template_hole 9, template_var 1))),
              template_var 4)
            ),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_var 3)
           )))]:
   (string * thm * template) list
### theory "Draft.Terms_PositionsTemplates"
### 0.426s elapsed time, 0.594s cpu time, 0.081s GC time
val it = (): unit
