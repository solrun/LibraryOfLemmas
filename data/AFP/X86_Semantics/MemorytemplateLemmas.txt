   [("Memory.length_read_bytes", "length (read_bytes ?m ?a ?si) = ?si",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Memory.region_addresses_eq_empty_iff",
     "(region_addresses ?a ?si = {}) = (?si = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Memory.address_of_enclosed_region_ge",
     "enclosed ?a' ?si' ?a ?si ==> ?a <= ?a'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 3))),
    ("Memory.separate_symm",
     "separate ?a ?si ?a' ?si' = separate ?a' ?si' ?a ?si",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_var 2))),
    ("Memory.region_addresses_iff",
     "(?a' : region_addresses ?a ?si) = (unat (?a' - ?a) < ?si)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0))),
    ("Memory.enclosed_spec",
     "[| enclosed ?a' ?si' ?a ?si; ?x : region_addresses ?a' ?si' |]
      ==> ?x : region_addresses ?a ?si",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Memory.nth_read_bytes",
     "?n < ?si ==>
      read_bytes ?m ?a ?si ! ?n = ?m (?a + word_of_nat (?si - 1 - ?n))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0),
               template_var 2)),
           template_var 3),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_hole 0)),
                 template_var 3))))))),
    ("Memory.read_bytes_override_on_separate",
     "separate ?a ?si ?a' ?si' ==>
      read_bytes (override_on ?m ?m' (region_addresses ?a ?si)) ?a' ?si' =
      read_bytes ?m ?a' ?si'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4))),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 3),
           template_var 2)))),
    ("Memory.notin_region_addresses",
     "?x ~: region_addresses ?a ?si ==>
      unat ?x < unat ?a | unat ?a + ?si <= unat ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 2, template_var 1)),
                   template_var 0)),
               template_app (template_hole 2, template_var 2)))
           ))),
    ("Memory.enclosed_plus",
     "[| ?si' < ?si; unat ?a + ?si < 2 ^ LENGTH(?'a) |]
      ==> enclosed ?a ?si' ?a ?si",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0)),
            template_var 1),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3))),
            template_app (template_hole 2, template_hole 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Memory.read_bytes_override_on",
     "[| ?si' <= ?si; ?si' <= ?si |]
      ==> read_bytes (override_on ?m ?m' (region_addresses ?a ?si)) ?a
           ?si' =
          read_bytes ?m' ?a ?si'",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3))),
             template_var 0),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_var 4)))),
    ("Memory.unat_minus",
     "unat (- ?y) =
      (if unat ?y = 0 then unat 0 - unat ?y
       else unat 0 + 2 ^ LENGTH(?'b) - unat ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, template_var 0)),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 12, template_hole 7)),
                 template_app (template_hole 12, template_var 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 12, template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2))),
                     template_app (template_hole 1, template_hole 0)))),
               template_app (template_hole 12, template_var 0)))
           ))),
    ("Memory.separate_iff",
     "separate ?a ?si ?a' ?si' =
      (0 < ?si &
       0 < ?si' & ?si <= unat (?a' - ?a) & ?si' <= unat (?a - ?a'))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 3)))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)))))))),
    ("Memory.notin_region_addresses_sub",
     "?x ~: region_addresses ?a ?si ==>
      unat (?x - ?a') < unat (?a - ?a') |
      unat (?a - ?a') + ?si <= unat (?x - ?a')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 0))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_var 0))),
                   template_var 1)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0))))
           ))),
    ("Memory.address_in_enclosed_region_as_linarith",
     "[| enclosed ?a' ?si' ?a ?si; ?x : region_addresses ?a' ?si' |]
      ==> ?a <= ?x &
          ?a' <= ?x &
          ?x < ?a' + word_of_nat ?si' & ?x < ?a + word_of_nat ?si",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_app (template_hole 0, template_var 3)))),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app (template_hole 0, template_var 1))))))
           ))),
    ("Memory.read_bytes_override_on_enclosed_plus",
     "[| unat ?offset + ?si' <= ?si; ?si <= 2 ^ LENGTH(?'a) |]
      ==> read_bytes (override_on ?m ?m' (region_addresses ?a ?si))
           (?offset + ?a) ?si' =
          read_bytes ?m' (?offset + ?a) ?si'",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 5)),
            template_var 4),
          template_var 3),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))),
            template_app (template_hole 6, template_hole 5)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3))),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0)),
           template_var 4)))),
    ("Memory.separate_plus_none",
     "[| ?si' <= unat ?offset; 0 < ?si; 0 < ?si';
         unat ?offset + ?si <= 2 ^ LENGTH(?'a) |]
      ==> separate (?offset + ?a) ?si ?a ?si'",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 11, template_var 2)),
        template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 9, template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 11, template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_app (template_hole 3, template_hole 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Memory.separate_minus_none",
     "[| ?si ~= 0; ?si' ~= 0; ?si <= unat ?offset;
         ?si' <= 2 ^ LENGTH(?'a) - unat ?offset |]
      ==> separate (?a - ?offset) ?si ?a ?si'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_negation
         (template_equation (template_var 2, template_hole 11)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_app (template_hole 3, template_hole 2))),
            template_app (template_hole 9, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 3),
               template_var 0),
             template_var 2)
           ))),
    ("Memory.separate_as_linarith",
     "[| ~ region_overflow ?a ?si; ~ region_overflow ?a' ?si' |]
      ==> separate ?a ?si ?a' ?si' =
          (0 < ?si &
           0 < ?si' &
           (?a + word_of_nat ?si <= ?a' | ?a' + word_of_nat ?si' <= ?a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 2)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_app (template_hole 0, template_var 2))),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app (template_hole 0, template_var 0))),
                 template_var 3))))))),
    ("Memory.read_bytes_override_on_enclosed",
     "[| ?offset' <= ?offset; ?si' <= ?si;
         unat ?offset + ?si' <= ?si + unat ?offset' |]
      ==> read_bytes
           (override_on ?m ?m' (region_addresses (?a - ?offset) ?si))
           (?a - ?offset') ?si' =
          read_bytes ?m' (?a - ?offset') ?si'",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 5)),
            template_var 4),
          template_app
           (template_app (template_hole 6, template_var 3),
            template_app (template_hole 5, template_var 6)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 5)),
                   template_var 3))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 6)),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 6)),
           template_var 4)))),
    ("Memory.address_in_enclosed_region",
     "[| enclosed ?a' ?si' ?a ?si; ?x : region_addresses ?a' ?si' |]
      ==> unat (?a' - ?a) <= unat (?x - ?a) &
          unat (?x - ?a) < unat (?a' - ?a) + ?si' & unat (?x - ?a) < ?si",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 2))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_var 2))),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 4),
                           template_var 2))),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 2))),
                 template_var 1)))
           ))),
    ("Memory.enclosed_minus_minus",
     "[| ?offset' <= ?offset; unat ?offset - ?si <= unat ?offset' - ?si';
         ?si' <= unat ?offset'; ?si <= unat ?offset; ?offset <= ?a |]
      ==> enclosed (?a - ?offset') ?si' (?a - ?offset) ?si",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 4)),
            template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 4)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 2, template_var 3)),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_var 2)
           ))),
    ("Memory.separate_minus_minus'",
     "[| ?si ~= 0; ?si' ~= 0; ?si <= unat ?offset; ?si' <= unat ?offset';
         unat ?offset' <= unat ?offset - ?si |]
      ==> separate (?a - ?offset) ?si (?a - ?offset') ?si'",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_negation
         (template_equation (template_var 3, template_hole 5)),
        template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 3, template_var 2)),
            template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 3)
           ))),
    ("Memory.word_rcat_read_bytes",
     "[| LENGTH(?'b) <= 2 ^ LENGTH(?'a); ?si <= 2 ^ LENGTH(?'a) |]
      ==> word_rcat
           (read_bytes (%a'. take_byte (unat (a' - ?a)) ?w) ?a ?si) =
          \<langle>0,?si * 8\<rangle>?w",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 16, template_hole 15),
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_hole 11))),
            template_app (template_hole 10, template_hole 9))),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_hole 11))),
            template_app (template_hole 10, template_hole 9)))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 12, template_hole 11)))))),
           template_var 0)))),
    ("Memory.separate_minus_minus",
     "[| ?si ~= 0; ?si' ~= 0; ?si <= unat ?offset; ?si' <= unat ?offset';
         unat ?offset' <= unat ?offset - ?si |
         unat ?offset <= unat ?offset' - ?si' |]
      ==> separate (?a - ?offset) ?si (?a - ?offset') ?si'",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 6)),
        template_negation
         (template_equation (template_var 3, template_hole 6)),
        template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 4, template_var 2)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 4, template_var 2)),
                    template_var 4))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 4, template_var 1)),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 3)
           ))),
    ("Memory.separate_as_linarith_numeral11",
     "[| ~ region_overflow (numeral ?a) (Suc 0);
         ~ region_overflow (numeral ?a') (Suc 0) |]
      ==> separate (numeral ?a) (Suc 0) (numeral ?a') (Suc 0) =
          (0 < Suc 0 &
           0 < Suc 0 &
           (numeral ?a + word_of_nat (Suc 0) <= numeral ?a' |
            numeral ?a' + word_of_nat (Suc 0) <= numeral ?a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 1)),
                  template_app (template_hole 9, template_hole 8))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 0)),
                  template_app (template_hole 9, template_hole 8))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 10, template_var 1)),
               template_app (template_hole 9, template_hole 8)),
             template_app (template_hole 10, template_var 0)),
           template_app (template_hole 9, template_hole 8)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 8),
               template_app (template_hole 9, template_hole 8))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 8),
                 template_app (template_hole 9, template_hole 8))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 10, template_var 1)),
                       template_app
                        (template_hole 0,
                         template_app (template_hole 9, template_hole 8)))),
                   template_app (template_hole 10, template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 10, template_var 0)),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 9, template_hole 8)))),
                 template_app (template_hole 10, template_var 1)))))))),
    ("Memory.separate_as_linarith_numeral1_",
     "[| ~ region_overflow (numeral ?a) (Suc 0);
         ~ region_overflow (numeral ?a') (numeral ?si') |]
      ==> separate (numeral ?a) (Suc 0) (numeral ?a') (numeral ?si') =
          (0 < Suc 0 &
           0 < numeral ?si' &
           (numeral ?a + word_of_nat (Suc 0) <= numeral ?a' |
            numeral ?a' + word_of_nat (numeral ?si') <= numeral ?a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 2)),
                  template_app (template_hole 10, template_hole 9))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 1)),
                  template_app (template_hole 8, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 11, template_var 2)),
               template_app (template_hole 10, template_hole 9)),
             template_app (template_hole 11, template_var 1)),
           template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 9),
               template_app (template_hole 10, template_hole 9))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 9),
                 template_app (template_hole 8, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 11, template_var 2)),
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 10, template_hole 9)))),
                   template_app (template_hole 11, template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 11, template_var 1)),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 8, template_var 0)))),
                 template_app (template_hole 11, template_var 2)))))))),
    ("Memory.separate_as_linarith_numeral_1",
     "[| ~ region_overflow (numeral ?a) (numeral ?si);
         ~ region_overflow (numeral ?a') (Suc 0) |]
      ==> separate (numeral ?a) (numeral ?si) (numeral ?a') (Suc 0) =
          (0 < numeral ?si &
           0 < Suc 0 &
           (numeral ?a + word_of_nat (numeral ?si) <= numeral ?a' |
            numeral ?a' + word_of_nat (Suc 0) <= numeral ?a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 2)),
                  template_app (template_hole 10, template_var 1))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 0)),
                  template_app (template_hole 9, template_hole 8))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 11, template_var 2)),
               template_app (template_hole 10, template_var 1)),
             template_app (template_hole 11, template_var 0)),
           template_app (template_hole 9, template_hole 8)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 8),
               template_app (template_hole 10, template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 8),
                 template_app (template_hole 9, template_hole 8))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 11, template_var 2)),
                       template_app
                        (template_hole 0,
                         template_app (template_hole 10, template_var 1)))),
                   template_app (template_hole 11, template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 11, template_var 0)),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 9, template_hole 8)))),
                 template_app (template_hole 11, template_var 2)))))))),
    ("Memory.separate_as_linarith_numeral",
     "[| ~ region_overflow (numeral ?a) (numeral ?si);
         ~ region_overflow (numeral ?a') (numeral ?si') |]
      ==> separate (numeral ?a) (numeral ?si) (numeral ?a') (numeral ?si') =
          (0 < numeral ?si &
           0 < numeral ?si' &
           (numeral ?a + word_of_nat (numeral ?si) <= numeral ?a' |
            numeral ?a' + word_of_nat (numeral ?si') <= numeral ?a))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 3)),
                  template_app (template_hole 9, template_var 2))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 1)),
                  template_app (template_hole 9, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 10, template_var 3)),
               template_app (template_hole 9, template_var 2)),
             template_app (template_hole 10, template_var 1)),
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 9, template_var 2))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 9, template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 10, template_var 3)),
                       template_app
                        (template_hole 0,
                         template_app (template_hole 9, template_var 2)))),
                   template_app (template_hole 10, template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 10, template_var 1)),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 9, template_var 0)))),
                 template_app (template_hole 10, template_var 3)))))))),
    ("Memory.word_rcat_read_bytes_enclosed",
     "[| LENGTH(?'b) <= 2 ^ LENGTH(?'a);
         unat ?offset + ?si <= 2 ^ LENGTH(?'a) |]
      ==> word_rcat
           (read_bytes (%a'. take_byte (unat (a' - ?a)) ?w) (?a + ?offset)
             ?si) =
          \<langle>unat ?offset * 8,(unat ?offset + ?si) * 8\<rangle>?w",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 17, template_hole 16),
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12))),
            template_app (template_hole 11, template_hole 10))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12))),
            template_app (template_hole 11, template_hole 10)))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 3)),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_var 3)),
                 template_app
                  (template_hole 14,
                   template_app
                    (template_hole 13,
                     template_app
                      (template_hole 13,
                       template_app
                        (template_hole 13, template_hole 12)))))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_var 3)),
                   template_var 2)),
               template_app
                (template_hole 14,
                 template_app
                  (template_hole 13,
                   template_app
                    (template_hole 13,
                     template_app (template_hole 13, template_hole 12)))))),
           template_var 0))))]
