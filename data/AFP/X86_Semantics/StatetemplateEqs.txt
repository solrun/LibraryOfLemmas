   [("State.clean_state_updates",
     "?\<sigma> with clean ?updates = ?\<sigma> with ?updates",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("State.rip_rip_write",
     "rip (?\<sigma> with (setRip ?a # ?updates)) = ?a",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))),
       template_var 1)),
    ("State.flag_read_flag_write",
     "flag_read (?\<sigma> with (setFlags ?v # ?updates)) = fromBool o ?v",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 1))),
    ("State.add_state_update_to_list",
     "state_update ?upd (?\<sigma> with ?updates) =
      ?\<sigma> with (?upd # ?updates)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("State.insert_state_update",
     "?\<sigma> with insert_state_update ?upd ?updates =
      ?\<sigma> with (?upd # ?updates)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("State.with_with",
     "?\<sigma> with ?updates with ?updates' =
      ?\<sigma> with (?updates' @ ?updates)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("State.rip_flag_write",
     "rip (?\<sigma> with (setFlags ?v # ?updates)) =
      rip (?\<sigma> with ?updates)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("State.rip_reg_write",
     "rip (?\<sigma> with ((?r :=\<^sub>r ?v) # ?updates)) =
      rip (?\<sigma> with ?updates)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("State.flag_read_rip_write",
     "flag_read (?\<sigma> with (setRip ?a # ?updates)) ?f =
      flag_read (?\<sigma> with ?updates) ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_var 0))),
    ("State.regs_flag_write",
     "regs (?\<sigma> with (setFlags ?v # ?updates)) ?r =
      regs (?\<sigma> with ?updates) ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_var 0))),
    ("State.regs_rip_write",
     "regs (?\<sigma> with (setRip ?a # ?updates)) ?f =
      regs (?\<sigma> with ?updates) ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_var 0))),
    ("State.rip_mem_write",
     "rip (?\<sigma> with
           ((\<lbrakk>?a,?si\<rbrakk> :=\<^sub>m ?v) # ?updates)) =
      rip (?\<sigma> with ?updates)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 4),
           template_var 0)))),
    ("State.flag_read_reg_write",
     "flag_read (?\<sigma> with ((?r :=\<^sub>r ?w) # ?updates)) ?f =
      flag_read (?\<sigma> with ?updates) ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 1)),
         template_var 0))),
    ("State.mem_read_flag_write",
     "mem_read (?\<sigma> with (setFlags ?v # ?updates)) ?a ?si =
      mem_read (?\<sigma> with ?updates) ?a ?si",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("State.mem_read_rip_write",
     "mem_read (?\<sigma> with (setRip ?a' # ?updates)) ?a ?si =
      mem_read (?\<sigma> with ?updates) ?a ?si",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("State.flag_read_mem_write",
     "flag_read
       (?\<sigma> with
        ((\<lbrakk>?a,?si\<rbrakk> :=\<^sub>m ?v) # ?updates))
       ?f =
      flag_read (?\<sigma> with ?updates) ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 5),
             template_var 1)),
         template_var 0))),
    ("State.regs_mem_write",
     "regs
       (?\<sigma> with
        ((\<lbrakk>?a,?si\<rbrakk> :=\<^sub>m ?v) # ?updates))
       ?r =
      regs (?\<sigma> with ?updates) ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 5),
             template_var 1)),
         template_var 0))),
    ("State.mem_read_reg_write",
     "mem_read (?\<sigma> with ((?r :=\<^sub>r ?w) # ?updates)) ?a ?si =
      mem_read (?\<sigma> with ?updates) ?a ?si",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 5),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3)),
                 template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("State.regs_reg_write",
     "regs (?\<sigma> with ((?r :=\<^sub>r ?w) # ?updates)) ?r' =
      (if ?r = ?r' then ?w else regs (?\<sigma> with ?updates) ?r')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2)),
                    template_var 1))),
              template_var 0)
            )],
       template_dunno))]
