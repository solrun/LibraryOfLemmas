   [("Roots_of_Algebraic_Poly.map_mpoly_Var",
     "?f (1::?'b) = (1::?'a) ==> map_mpoly ?f (Var ?i) = Var ?i",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 5), template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Roots_of_Algebraic_Poly.remove_key_single'",
     "remove_key ?v (monomial ?n ?w) =
      (if ?v = ?w then 0 else monomial ?n ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_hole 0),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Roots_of_Algebraic_Poly.map_mpoly_Const",
     "?f (0::?'b) = (0::?'a) ==> map_mpoly ?f (Const ?i) = Const (?f ?i)",
     template_implication
      ([template_equation
         (template_app (template_var 1, template_hole 5), template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_var 1, template_var 0))))),
    ("Roots_of_Algebraic_Poly.finite_resultant_mpoly_polys_empty",
     "finite {\<alpha>. mpoly_polys_zero_solution ?p ?qs {} \<alpha>} ==>
      ?p ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6, template_app (template_hole 5, t_empty))
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("Roots_of_Algebraic_Poly.initial_root_problem_complex_of_real_poly",
     "initial_root_problem (map_poly complex_of_real ?p) =
      map_prod id (map (map_prod id (map_prod complex_of_real id)))
       (initial_root_problem ?p)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_hole 8),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 8),
                 template_hole 1)))),
         template_app (template_hole 0, template_var 0)))),
    ("Roots_of_Algebraic_Poly.eliminate_aux_vars_of_int_poly",
     "eliminate_aux_vars (map_mpoly of_int ?mp) (of_int_poly o ?qs) ?is =
      of_int_poly (eliminate_aux_vars ?mp ?qs ?is)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 3)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Roots_of_Algebraic_Poly.map_mpoly_monom",
     "?f (0::?'b) = (0::?'a) ==>
      map_mpoly ?f (MPoly_Type.monom ?m ?a) = MPoly_Type.monom ?m (?f ?a)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 5), template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_var 2, template_var 0))))),
    ("Roots_of_Algebraic_Poly.resultant_zero_iff_coprime",
     "?f ~= 0 | ?g ~= 0 ==>
      (resultant ?f ?g = (0::?'a)) =
      (~ comm_monoid_mult_class.coprime ?f ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_hole 5))),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Roots_of_Algebraic_Poly.resultant_iff_coprime_main",
     "0 < degree ?f | 0 < degree ?g ==>
      (resultant ?f ?g = (0::?'a)) =
      (~ comm_monoid_mult_class.coprime ?f ?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 1))),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app (template_hole 6, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Roots_of_Algebraic_Poly.complex_algebraic_numbers_are_algebraically_closed",
     "[| ~ constant (poly ?p); Ball (set (coeffs ?p)) algebraic |]
      ==> EX z. algebraic z & poly ?p z = 0",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Roots_of_Algebraic_Poly.representative_poly_real",
     "[| ?p ~= 0; Ball (set (coeffs ?p)) algebraic; poly ?p ?x = 0 |]
      ==> representative_poly ?p represents ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1))),
              template_hole 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Roots_of_Algebraic_Poly.representative_poly_complex",
     "[| ?p ~= 0; Ball (set (coeffs ?p)) algebraic; poly ?p ?x = 0 |]
      ==> representative_poly ?p represents ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 1))),
              template_hole 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Roots_of_Algebraic_Poly.resultant_zero_iff_common_root_complex",
     "?g ~= 0 ==>
      (resultant ?f ?g = 0) = (EX x. poly ?f x = 0 & poly ?g x = 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_hole 3),
         template_app (template_hole 2, t_empty)))),
    ("Roots_of_Algebraic_Poly.map_sort_key",
     "(!!x y. (?g1.0 x <= ?g1.0 y) = (?g2.0 (?f x) <= ?g2.0 (?f y))) ==>
      map ?f (sort_key ?g1.0 ?xs) = sort_key ?g2.0 (map ?f ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Roots_of_Algebraic_Poly.resultant_zero_iff_common_root_irreducible",
     "[| irreducible ?g; poly ?g ?a = (0::?'a) |]
      ==> (resultant ?f ?g = (0::?'a)) =
          (EX x. poly ?f x = (0::?'a) & poly ?g x = (0::?'a))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_hole 4),
         template_app (template_hole 1, t_empty)))),
    ("Roots_of_Algebraic_Poly.map_insort_key",
     "(!!x y. (?g1.0 x <= ?g1.0 y) = (?g2.0 (?f x) <= ?g2.0 (?f y))) ==>
      map ?f (insort_key ?g1.0 ?a ?xs) =
      insort_key ?g2.0 (?f ?a) (map ?f ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Roots_of_Algebraic_Poly.resultant_mpoly_polys_zero_solution",
     "[| 0 ~: ?qs ` ?N; ?i : ?N;
         mpoly_polys_zero_solution ?p ?qs ?N ?\<alpha> |]
      ==> mpoly_polys_zero_solution
           (resultant_mpoly_poly (Suc ?i) ?p (?qs ?i)) ?qs (?N - {?i})
           (?\<alpha>(Suc ?i := 0))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 4),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 2)),
                       template_var 1),
                     template_app (template_var 4, template_var 2))),
                 template_var 4),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 5, template_var 2)),
               template_hole 0))
           ))),
    ("Roots_of_Algebraic_Poly.resultant_mpoly_polys_solution",
     "[| 0 ~: ?qs ` ?N; ?i : ?N |]
      ==> mpoly_polys_solution (resultant_mpoly_poly (Suc ?i) ?p (?qs ?i))
           ?qs (?N - {?i}) ?\<alpha> =
          (EX v. mpoly_polys_solution ?p ?qs ?N (?\<alpha>(Suc ?i := v)))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_hole 11),
                  template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 2)),
                     template_var 1),
                   template_app (template_var 4, template_var 2))),
               template_var 4),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2))),
           template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("Roots_of_Algebraic_Poly.finite_resultant_mpoly_polys_non_empty",
     "[| 0 ~: ?qs ` ?N; ?i : ?N;
         finite {\<alpha>. mpoly_polys_zero_solution ?p ?qs ?N \<alpha>} |]
      ==> finite
           {\<alpha>.
            mpoly_polys_zero_solution
             (resultant_mpoly_poly (Suc ?i) ?p (?qs ?i)) ?qs (?N - {?i})
             \<alpha>}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_hole 7, template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("Roots_of_Algebraic_Poly.resultant_mpoly_polys_zero_solution",
     "[| 0 ~: ?qs ` ?N; ?i : ?N;
         mpoly_polys_zero_solution
          (resultant_mpoly_poly (Suc ?i) ?p (?qs ?i)) ?qs (?N - {?i})
          ?\<alpha> |]
      ==> EX v. mpoly_polys_zero_solution ?p ?qs ?N
                 (?\<alpha>(Suc ?i := v))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 6,
                          template_app (template_hole 5, template_var 2)),
                        template_var 1),
                      template_app (template_var 4, template_var 2))),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Roots_of_Algebraic_Poly.get_representative_complex",
     "[| ?p ~= 0; Ball (set (coeffs ?p)) algebraic;
         initial_root_problem ?p = (?mp, ?triples); ?is = map fst ?triples;
         !!j. j < length ?is ==> ?qs j = snd (snd (?triples ! j));
         poly ?p ?x = 0 |]
      ==> eliminate_aux_vars ?mp ?qs ?is represents ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 22)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_hole 20,
                  template_app (template_hole 19, template_var 5))),
              template_hole 18)
            ),
        template_equation
         (template_app (template_hole 16, template_var 5),
          template_app
           (template_app (template_hole 15, template_var 4),
            template_var 3)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 13, template_hole 12),
            template_var 3)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Roots_of_Algebraic_Poly.eliminate_aux_vars",
     "[| distinct ?is; vars ?p <= insert 0 (Suc ` set ?is);
         finite
          {\<alpha>. mpoly_polys_zero_solution ?p ?qs (set ?is) \<alpha>};
         0 ~: ?qs ` set ?is;
         mpoly_polys_solution ?p ?qs (set ?is) ?\<alpha> |]
      ==> poly (eliminate_aux_vars ?p ?qs ?is) (?\<alpha> 0) = 0 &
          eliminate_aux_vars ?p ?qs ?is ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 19, template_var 2),
          template_app
           (template_app (template_hole 18, template_hole 17),
            template_app
             (template_app (template_hole 16, template_hole 15),
              template_app (template_hole 14, template_var 3)))),
        template_predicate
         (
            template_app
             (template_hole 13, template_app (template_hole 12, t_empty))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_app (template_hole 14, template_var 3)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_app (template_hole 14, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_app (template_hole 2, template_var 2),
                           template_var 1),
                         template_var 3)),
                     template_app (template_var 0, template_hole 17))),
                 template_hole 1)),
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1),
                     template_var 3)),
                 template_hole 8)))
           )))]
