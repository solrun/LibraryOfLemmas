   [("Factor_Complex_Poly.distinct_factor_complex_main",
     "distinct (map fst (snd (factor_complex_main ?p)))",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Factor_Complex_Poly.distinct_factor_complex_poly",
     "distinct (map fst (snd (factor_complex_poly ?p)))",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("Factor_Complex_Poly.roots_of_complex_poly_via_factor_complex_main",
     "map fst (snd (factor_complex_main ?p)) = roots_of_complex_poly ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Factor_Complex_Poly.factor_complex_poly",
     "factor_complex_poly ?p = (?c, ?qis) ==>
      ?p = smult ?c (PROD (q, i)<-?qis. q ^ i)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_var 0))],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_var 0)))))),
    ("Factor_Complex_Poly.factor_complex_main",
     "factor_complex_main ?p = (?c, ?xis) ==>
      ?p = smult ?c (PROD (x, i)<-?xis. [:- x, 1:] ^ Suc i)",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_app (template_hole 11, template_var 1),
            template_var 0))],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 0)))))),
    ("Factor_Complex_Poly.factor_complex_poly",
     "[| factor_complex_poly ?p = (?c, ?qis); (?q, ?i) : set ?qis |]
      ==> irreducible ?q & ?i ~= 0 & monic ?q & degree ?q = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_var 0)),
              template_app (template_hole 10, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 1)),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app (template_hole 2, template_var 1))),
                     template_hole 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 2, template_var 1)),
                   template_hole 0))))
           )))]
