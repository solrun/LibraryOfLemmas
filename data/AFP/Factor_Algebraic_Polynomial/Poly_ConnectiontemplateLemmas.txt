   [("Poly_Connection.comm_ring_hom_insertion",
     "comm_ring_hom (insertion ?\<alpha>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Poly_Connection.mpoly_to_mpoly_poly_1",
     "mpoly_to_mpoly_poly ?x 1 = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Poly_Connection.mpoly_to_mpoly_poly_0",
     "mpoly_to_mpoly_poly ?x 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Poly_Connection.MPoly_Type_monom_zero",
     "MPoly_Type.monom ?m (0::?'a) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Poly_Connection.remove_key_0", "remove_key ?x 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Poly_Connection.vars_signof", "vars (of_int (sign ?x)) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("Poly_Connection.irreducible_Const_iff",
     "irreducible (Const ?c) = irreducible ?c",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Poly_Connection.degree_map_poly_Const",
     "Polynomial.degree (map_poly Const ?f) = Polynomial.degree ?f",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Poly_Connection.mpoly_to_mpoly_poly_of_int",
     "mpoly_to_mpoly_poly ?x (of_int ?n) = of_int ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Poly_Connection.mpoly_to_mpoly_poly_of_nat",
     "mpoly_to_mpoly_poly ?x (of_nat ?n) = of_nat ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Poly_Connection.mpoly_to_mpoly_poly_numeral",
     "mpoly_to_mpoly_poly ?x (numeral ?n) = numeral ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Poly_Connection.degree_mpoly_to_mpoly_poly",
     "Polynomial.degree (mpoly_to_mpoly_poly ?x ?p) =
      MPoly_Type.degree ?p ?x",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Poly_Connection.Const_eq_0_iff", "(Const ?c = 0) = (?c = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Poly_Connection.is_unit_Const_iff",
     "(Const ?c dvd 1) = (?c dvd (1::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Poly_Connection.poly_mpoly_to_mpoly_poly",
     "poly (mpoly_to_mpoly_poly ?x ?p) (Var ?x) = ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_var 0)),
    ("Poly_Connection.prod_mset_Const",
     "\<Prod>\<^sub># (image_mset Const ?A) = Const (\<Prod>\<^sub># ?A)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Poly_Connection.Const_eq_Const_iff",
     "(Const ?c = Const ?c') = (?c = ?c')",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Poly_Connection.MPoly_Type_monom_0_iff",
     "(MPoly_Type.monom ?m ?x = 0) = (?x = (0::?'a))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Poly_Connection.Const_dvd_Const_iff",
     "(Const ?a dvd Const ?b) = (?a dvd ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Poly_Connection.mpoly_to_mpoly_poly_uminus",
     "mpoly_to_mpoly_poly ?x (- ?p) = - mpoly_to_mpoly_poly ?x ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_Const",
     "mpoly_to_mpoly_poly ?x (Const ?c) = [:Const ?c:]",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Poly_Connection.is_unit_ConstI", "?c dvd (1::?'a) ==> Const ?c dvd 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Poly_Connection.degree_pos_iff",
     "(0 < MPoly_Type.degree ?p ?x) = (?x : vars ?p)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_Var_this",
     "mpoly_to_mpoly_poly ?x (Var ?x) = [:0, 1:]",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 3, template_hole 1),
           template_hole 0)))),
    ("Poly_Connection.degree_partial_insertion_le_mpoly",
     "Polynomial.degree (partial_insertion ?\<alpha> ?x ?p)
      <= Polynomial.degree (mpoly_to_mpoly_poly ?x ?p)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Poly_Connection.degree_eq_0_iff",
     "(MPoly_Type.degree ?p ?x = 0) = (?x ~: vars ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Poly_Connection.mpoly_to_mpoly_poly_eq_iff",
     "(mpoly_to_mpoly_poly ?x ?p = mpoly_to_mpoly_poly ?x ?q) = (?p = ?q)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Poly_Connection.mpoly_to_mpoly_poly_dvd_iff",
     "(mpoly_to_mpoly_poly ?x ?p dvd mpoly_to_mpoly_poly ?x ?q) =
      (?p dvd ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Poly_Connection.vars_monom_keys'",
     "vars (MPoly_Type.monom ?m ?c) =
      (if ?c = (0::?'a) then {} else keys ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Poly_Connection.mpoly_to_mpoly_poly_diff",
     "mpoly_to_mpoly_poly ?x (?p - ?q) =
      mpoly_to_mpoly_poly ?x ?p - mpoly_to_mpoly_poly ?x ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_add",
     "mpoly_to_mpoly_poly ?x (?p + ?q) =
      mpoly_to_mpoly_poly ?x ?p + mpoly_to_mpoly_poly ?x ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_mult",
     "mpoly_to_mpoly_poly ?x (?p * ?q) =
      mpoly_to_mpoly_poly ?x ?p * mpoly_to_mpoly_poly ?x ?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Poly_Connection.vars_coeff_mpoly_to_mpoly_poly",
     "vars (poly.coeff (mpoly_to_mpoly_poly ?x ?p) ?i) <= vars ?p - {?x}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("Poly_Connection.insertion_coeff_mpoly_to_mpoly_poly",
     "insertion ?\<alpha> (poly.coeff (mpoly_to_mpoly_poly ?x ?p) ?k) =
      poly.coeff (partial_insertion ?\<alpha> ?x ?p) ?k",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Poly_Connection.coeff_gt_degree_eq_0",
     "MPoly_Type.degree ?p ?i < lookup ?m ?i ==>
      MPoly_Type.coeff ?p ?m = (0::?'a)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_hole 0))),
    ("Poly_Connection.mpoly_coeff_to_mpoly_poly_coeff",
     "MPoly_Type.coeff ?p ?m =
      MPoly_Type.coeff
       (poly.coeff (mpoly_to_mpoly_poly ?x ?p) (lookup ?m ?x))
       (remove_key ?x ?m)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_monom",
     "mpoly_to_mpoly_poly ?x (MPoly_Type.monom ?m ?a) =
      Polynomial.monom (MPoly_Type.monom (remove_key ?x ?m) ?a)
       (lookup ?m ?x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Poly_Connection.remove_key_single'",
     "?x ~= ?y ==> remove_key ?x (monomial ?n ?y) = monomial ?n ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_Var_this",
     "?x ~= ?y ==> mpoly_to_mpoly_poly ?x (Var ?y) = [:Var ?y:]",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_hole 0)))),
    ("Poly_Connection.degree_geI",
     "MPoly_Type.coeff ?p ?m ~= (0::?'a) ==>
      lookup ?m ?i <= MPoly_Type.degree ?p ?i",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Poly_Connection.vars_altdef",
     "vars ?p = \<Union> (keys ` {m. MPoly_Type.coeff ?p m ~= (0::?'a)})",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app (template_hole 4, t_empty))))),
    ("Poly_Connection.partial_insertion_add",
     "partial_insertion ?\<alpha> ?x (?p + ?q) =
      partial_insertion ?\<alpha> ?x ?p +
      partial_insertion ?\<alpha> ?x ?q",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Poly_Connection.monom_remove_key",
     "MPoly_Type.monom ?m ?a =
      MPoly_Type.monom (remove_key ?x ?m) ?a *
      MPoly_Type.monom (monomial (lookup ?m ?x) ?x) (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_hole 0)))),
    ("Poly_Connection.partial_insertion_monom",
     "partial_insertion ?\<alpha> ?x (MPoly_Type.monom ?m ?a) =
      Polynomial.monom
       (insertion ?\<alpha> (MPoly_Type.monom (remove_key ?x ?m) ?a))
       (lookup ?m ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Poly_Connection.mpoly_to_mpoly_poly_Var",
     "mpoly_to_mpoly_poly ?x (Var ?y) =
      (if ?x = ?y then [:0, 1:] else [:Var ?y:])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 3, template_hole 1),
                   template_hole 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 6, template_var 0)),
               template_hole 0))
           ))),
    ("Poly_Connection.vars_emptyE",
     "[| vars ?p = {}; !!c. ?p = Const c ==> ?P |] ==> ?P",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Poly_Connection.coeff_monom_mult'",
     "MPoly_Type.coeff (MPoly_Type.monom ?m ?a * ?q) ?m' =
      (?a * MPoly_Type.coeff ?q (?m' - ?m) when lookup ?m <= lookup ?m')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3)))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_app (template_hole 0, template_var 0))))),
    ("Poly_Connection.coeff_coeff_mpoly_to_mpoly_poly",
     "MPoly_Type.coeff (poly.coeff (mpoly_to_mpoly_poly ?x ?p) ?n) ?m =
      (MPoly_Type.coeff ?p (?m + monomial ?n ?x) when lookup ?m ?x = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3)),
               template_hole 0))
           ))),
    ("Poly_Connection.mpoly_to_mpoly_poly_mult_monom",
     "mpoly_to_mpoly_poly ?x (MPoly_Type.monom ?m ?a * ?q) =
      Polynomial.monom (MPoly_Type.monom (remove_key ?x ?m) ?a)
       (lookup ?m ?x) *
      mpoly_to_mpoly_poly ?x ?q",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3))),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_var 0)))),
    ("Poly_Connection.coeff_mpoly_to_mpoly_poly",
     "poly.coeff (mpoly_to_mpoly_poly ?x ?p) ?n =
      (SUM m. MPoly_Type.monom (remove_key ?x m)
               (MPoly_Type.coeff ?p m) when
              lookup m ?x = ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 6, t_empty))),
    ("Poly_Connection.poly_coeff_Sum_any",
     "finite {x. ?f x ~= 0} ==>
      poly.coeff (Sum_any ?f) ?n = (SUM x. poly.coeff (?f x) ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8, template_app (template_hole 7, t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app (template_hole 0, t_empty)))),
    ("Poly_Connection.degree_leI",
     "(!!m. ?n < lookup m ?i ==> MPoly_Type.coeff ?p m = (0::?'a)) ==>
      MPoly_Type.degree ?p ?i <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Poly_Connection.mpoly_is_unitE",
     "[| ?p dvd 1; !!c. [| ?p = Const c; c dvd (1::?'a) |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Poly_Connection.mpoly_degree_mult_eq",
     "[| ?p ~= 0; ?q ~= 0 |]
      ==> MPoly_Type.degree (?p * ?q) ?x =
          MPoly_Type.degree ?p ?x + MPoly_Type.degree ?q ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Poly_Connection.insertion_partial_insertion",
     "(!!y. y ~= ?x ==> ?\<beta> y = ?\<alpha> y) ==>
      poly (partial_insertion ?\<beta> ?x ?p) (?\<alpha> ?x) =
      insertion ?\<alpha> ?p",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 0)),
           template_app (template_var 1, template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Poly_Connection.insertion_mpoly_to_mpoly_poly",
     "(!!y. y ~= ?x ==> ?\<beta> y = ?\<alpha> y) ==>
      poly (map_poly (insertion ?\<beta>) (mpoly_to_mpoly_poly ?x ?p))
       (?\<alpha> ?x) =
      insertion ?\<alpha> ?p",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0))),
           template_app (template_var 1, template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Poly_Connection.monom_of_degree_exists",
     "[| ?p ~= 0;
         !!m. [| MPoly_Type.coeff ?p m ~= (0::?'a);
                 lookup m ?i = MPoly_Type.degree ?p ?i |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Poly_Connection.Const_eq_product_iff",
     "?c ~= (0::?'a) ==>
      (Const ?c = ?a * ?b) =
      (EX a' b'. ?a = Const a' & ?b = Const b' & ?c = a' * b')",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 2, t_empty))))]
