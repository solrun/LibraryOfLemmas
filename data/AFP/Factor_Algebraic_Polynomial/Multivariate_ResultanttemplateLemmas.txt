   [("Multivariate_Resultant.resultant_mpoly_poly_code",
     "resultant_mpoly_poly ?x ?p ?q =
      resultant_impl_basic (mpoly_to_mpoly_poly ?x ?p) (map_poly Const ?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Multivariate_Resultant.vars_resultant_mpoly_poly",
     "vars (resultant_mpoly_poly ?x ?p ?q) <= vars ?p - {?x}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("Multivariate_Resultant.vars_resultant",
     "vars (resultant ?p ?q)
      <= \<Union> (vars ` (range (coeff ?p) Un range (coeff ?q)))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 7),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)))))),
    ("Multivariate_Resultant.insertion_resultant_mpoly_poly_zero",
     "?q ~= 0 ==>
      (insertion ?\<alpha> (resultant_mpoly_poly ?x ?p ?q) = (0::?'a)) =
      (resultant (partial_insertion ?\<alpha> ?x ?p) ?q = (0::?'a))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 7))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0),
               template_var 3)),
           template_hole 2),
         template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3),
           template_hole 2)))),
    ("Multivariate_Resultant.det_sylvester_matrix_higher_degree",
     "det (sylvester_mat_sub (degree ?f + ?n) (degree ?g) ?f ?g) =
      det (sylvester_mat_sub (degree ?f) (degree ?g) ?f ?g) *
      (lead_coeff ?g * (- (1::?'a)) ^ degree ?g) ^ ?n",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 2)),
                   template_var 1)),
               template_app (template_hole 5, template_var 0)),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 5, template_var 2)),
                   template_app (template_hole 5, template_var 0)),
                 template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 1, template_hole 0)),
                 template_app (template_hole 5, template_var 0)))),
           template_var 1)))),
    ("Multivariate_Resultant.insertion_resultant_mpoly_poly",
     "insertion ?\<alpha> (resultant_mpoly_poly ?x ?p ?q) =
      resultant (partial_insertion ?\<alpha> ?x ?p) ?q *
      (lead_coeff ?q * (- (1::?'a)) ^ degree ?q) ^
      (degree (mpoly_to_mpoly_poly ?x ?p) -
       degree (partial_insertion ?\<alpha> ?x ?p))",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 11, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 4, template_hole 3)),
                 template_app (template_hole 5, template_var 0)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 2),
                 template_var 1)))))))]
