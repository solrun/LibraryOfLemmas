   [("Squarefree_Nat.squarefree_part_finite", "finite (squarefree_part ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Squarefree_Nat.square_part_le", "square_part ?n <= ?n",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_var 0)),
    ("Squarefree_Nat.square_part_dvd'", "square_part ?n dvd ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)
         )),
    ("Squarefree_Nat.zero_not_in_squarefree_part",
     "0 ~: squarefree_part ?n",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Squarefree_Nat.squarefree_part_subset",
     "squarefree_part ?n <= prime_factors ?n",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Squarefree_Nat.squarefree_part_pos",
     "0 < \<Prod>(squarefree_part ?n)",
     template_inequation
      (less_than, template_hole 2,
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Squarefree_Nat.squarefree_part_dvd",
     "\<Prod>(squarefree_part ?n) dvd ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("Squarefree_Nat.squarefree_part_ge_Suc_0",
     "Suc 0 <= \<Prod>(squarefree_part ?n)",
     template_inequation
      (less_equals, template_app (template_hole 3, template_hole 2),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Squarefree_Nat.square_part_le_sqrt",
     "square_part ?n <= nat \<lfloor>sqrt (real ?n)\<rfloor>",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Squarefree_Nat.square_part_dvd", "(square_part ?n)\<^sup>2 dvd ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))),
           template_var 0)
         )),
    ("Squarefree_Nat.square_part_pos", "0 < ?n ==> 0 < square_part ?n",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Squarefree_Nat.squarefree_part_le",
     "?p : squarefree_part ?n ==> ?p <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Squarefree_Nat.squarefree_part_dvd'",
     "?p : squarefree_part ?n ==> ?p dvd ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Squarefree_Nat.square_part_ge_Suc_0",
     "0 < ?n ==> Suc 0 <= square_part ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_hole 3),
         template_app (template_hole 0, template_var 0)))),
    ("Squarefree_Nat.squarefree_decompose",
     "\<Prod>(squarefree_part ?n) * (square_part ?n)\<^sup>2 = ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))),
       template_var 0)),
    ("Squarefree_Nat.square_dvd_squarefree_part_iff",
     "(?x\<^sup>2 dvd \<Prod>(squarefree_part ?n)) = (?x = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4)))),
              template_app
               (template_app (template_hole 3, t_empty),
                template_app (template_hole 2, template_var 0)))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Squarefree_Nat.squarefree_decomposition_unique1",
     "[| squarefree_part ?m = squarefree_part ?n;
         square_part ?m = square_part ?n |]
      ==> ?m = ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Squarefree_Nat.multiplicity_squarefree_part",
     "prime ?p ==>
      multiplicity ?p (\<Prod>(squarefree_part ?n)) =
      (if ?p : squarefree_part ?n then 1 else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 4, template_var 0))),
             template_hole 1),
           template_hole 0)))),
    ("Squarefree_Nat.primes_lower_bound",
     "0 < ?n ==> ln (real ?n) / ln 4 <= real (card {p. prime p & p <= ?n})",
     template_implication
      ([template_inequation (less_than, template_hole 12, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 0))),
           template_app
            (template_hole 9,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 6, template_hole 5))))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))))),
    ("Squarefree_Nat.squarefree_decomposition_unique2",
     "[| 0 < ?n; ?n = \<Prod>?A2.0 * ?s2.0\<^sup>2;
         !!x. x : ?A2.0 ==> prime x; finite ?A2.0; 0 <= ?s2.0 |]
      ==> ?s2.0 = square_part ?n",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 2),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, t_empty), template_var 1)),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6))))),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_inequation
         (less_equals, template_hole 13, template_var 0)],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 2)))),
    ("Squarefree_Nat.squarefree_decomposition_unique2",
     "[| 0 < ?n; ?n = \<Prod>?A2.0 * ?s2.0\<^sup>2;
         !!x. x : ?A2.0 ==> prime x; finite ?A2.0; 0 <= ?s2.0 |]
      ==> ?A2.0 = squarefree_part ?n",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 2),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, t_empty), template_var 1)),
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))))),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_hole 14, template_var 0)],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 2)))),
    ("Squarefree_Nat.squarefree_decomposition_unique2'",
     "[| \<Prod>?A1.0 * ?s1.0\<^sup>2 = \<Prod>?A2.0 * ?s2.0\<^sup>2;
         finite ?A1.0; finite ?A2.0; !!x. x : ?A1.0 ==> prime x;
         !!x. x : ?A2.0 ==> prime x; 0 < ?s1.0; 0 < ?s2.0 |]
      ==> ?s1.0 = ?s2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, t_empty), template_var 3)),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6)))),
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, t_empty), template_var 1)),
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6))))),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_inequation (less_than, template_hole 0, template_var 2),
        template_inequation (less_than, template_hole 0, template_var 0)],
       template_equation (template_var 2, template_var 0))),
    ("Squarefree_Nat.squarefree_decomposition_unique2'",
     "[| \<Prod>?A1.0 * ?s1.0\<^sup>2 = \<Prod>?A2.0 * ?s2.0\<^sup>2;
         finite ?A1.0; finite ?A2.0; !!x. x : ?A1.0 ==> prime x;
         !!x. x : ?A2.0 ==> prime x; 0 < ?s1.0; 0 < ?s2.0 |]
      ==> ?A1.0 = ?A2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, t_empty), template_var 3)),
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7)))),
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, t_empty), template_var 1)),
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7))))),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_than, template_hole 1, template_var 2),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_equation (template_var 3, template_var 1)))]
