   [("Prime_Harmonic.convergent_imp_Bseq", "convergent ?f ==> Bseq ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Prime_Harmonic.Bseq_add", "Bseq ?f ==> Bseq (%x. ?f x + ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 1)
           ))),
    ("Prime_Harmonic_Misc.ln_ln_nonneg", "3 <= ?x ==> 0 <= ln (ln ?x)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_hole 2)),
          template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 0, template_var 0))))),
    ("Prime_Harmonic_Misc.sum_list_nonneg",
     "ALL x:set ?xs. (0::?'a) <= x ==> (0::?'a) <= sum_list ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Prime_Harmonic_Misc.dvd_prodI",
     "[| finite ?A; ?x : ?A |] ==> ?f ?x dvd prod ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 0, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Prime_Harmonic_Misc.multiplicity_power_nat",
     "[| prime ?p; 0 < ?n |]
      ==> multiplicity ?p (?n ^ ?k) = ?k * multiplicity ?p ?n",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1))))),
    ("Prime_Harmonic.Bseq_eventually_mono",
     "[| \<forall>\<^sub>F n in sequentially. norm (?f n) <= norm (?g n);
         Bseq ?g |]
      ==> Bseq ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 2)
           ))),
    ("Prime_Harmonic_Misc.dvd_prodD",
     "[| finite ?A; prod ?f ?A dvd ?x; ?a : ?A |] ==> ?f ?a dvd ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 2, template_var 0)),
             template_var 1)
           ))),
    ("Prime_Harmonic.prime_harmonic_aux1",
     "finite ?A ==>
      (PROD x:?A. (1::?'a) + (1::?'a) / x) =
      (SUM x:Pow ?A. (1::?'a) / \<Prod>x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty), template_var 0),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Prime_Harmonic.prime_harmonic_aux2",
     "finite ?A ==> (SUM k:?A. 1 / (real k)\<^sup>2) <= 5 / 3",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 9, t_empty), template_var 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 3, template_hole 2)))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_hole 2)))))),
    ("Prime_Harmonic_Misc.sum_telescope'",
     "?m <= ?n ==>
      (SUM k = Suc ?m..?n. ?f k - ?f (Suc k)) = ?f (Suc ?m) - ?f (Suc ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_var 0,
               template_app (template_hole 1, template_var 2))),
           template_app
            (template_var 0,
             template_app (template_hole 1, template_var 1)))))),
    ("Prime_Harmonic_Misc.multiplicity_prod_prime_powers_nat'",
     "[| finite ?S; ALL p:?S. prime p; prime ?p |]
      ==> multiplicity ?p (\<Prod>?S) = (if ?p : ?S then 1 else 0)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1), t_empty)
            ),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 4, t_empty), template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_hole 1),
           template_hole 0)))),
    ("Prime_Harmonic.prime_harmonic_lower",
     "2 <= ?n ==>
      ln (harm ?n) - ln (5 / 3) <= (SUM p<-primes_upto ?n. 1 / real p)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 14,
            template_app (template_hole 13, template_hole 12)),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 0))),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 13, template_hole 12)))),
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 12))))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Prime_Harmonic.prime_harmonic_lower'",
     "2 <= ?n ==>
      ln (ln (real ?n + 1)) - ln (5 / 3)
      <= (SUM p<-primes_upto ?n. 1 / real p)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 14,
            template_app (template_hole 13, template_hole 12)),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0)),
                   template_hole 6)))),
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 13, template_hole 12)))),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 12))))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0)))))),
    ("Prime_Harmonic_Misc.prod_prime_eq",
     "[| finite ?A; finite ?B; !!x. x : ?A ==> prime x;
         !!x. x : ?B ==> prime x; \<Prod>?A = \<Prod>?B |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 1, t_empty), template_var 1),
          template_app
           (template_app (template_hole 1, t_empty), template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Prime_Harmonic_Misc.prod_prime_subset",
     "[| finite ?A; finite ?B; !!x. x : ?A ==> prime x;
         !!x. x : ?B ==> prime x; \<Prod>?A dvd \<Prod>?B |]
      ==> ?A <= ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, t_empty), template_var 1)),
              template_app
               (template_app (template_hole 1, t_empty), template_var 0))
            )],
       template_inequation (less_equals, template_var 1, template_var 0)))]
