Loading theory "HOL-Library.FuncSet" (required by "Draft.Algebra3MoreTemplates" via "Draft.Algebra3" via "Draft.Algebra2" via "Draft.Algebra1")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.087s elapsed time, 0.378s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.345s elapsed time, 1.270s cpu time, 0.347s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.430s elapsed time, 1.597s cpu time, 0.386s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.463s elapsed time, 1.737s cpu time, 0.386s GC time
Loading theory "Draft.Algebra1" (required by "Draft.Algebra3MoreTemplates" via "Draft.Algebra3" via "Draft.Algebra2")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.880s elapsed time, 3.337s cpu time, 0.929s GC time
consts
  nasc_seq :: "nat set => nat => nat => nat"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.968s elapsed time, 3.540s cpu time, 0.926s GC time
Found termination order: "size <*mlex*> {}"
consts
  ndec_seq :: "nat set => nat => nat => nat"
Found termination order: "size <*mlex*> {}"
consts
  dec_seq :: "int set => int => nat => int"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  ant :: {minus,one,plus,times,uminus,zero,ord}
  less_eq_ant == less_eq :: ant => ant => bool
  less_ant == less :: ant => ant => bool
  zero_ant == zero_class.zero :: ant
  uminus_ant == uminus :: ant => ant
  times_ant == times :: ant => ant => ant
  plus_ant == plus :: ant => ant => ant
  one_ant == one_class.one :: ant
  minus_ant == minus :: ant => ant => ant
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  Amin :: "nat => (nat => ant) => ant"
Found termination order: "size <*mlex*> {}"
consts
  Amax :: "nat => (nat => ant) => ant"
consts
  aasc_seq :: "ant set => ant => nat => ant"
consts
  ASum :: "(nat => ant) => nat => ant"
### theory "HOL-Library.Tree"
### 1.902s elapsed time, 6.025s cpu time, 1.441s GC time
Loading theory "Draft.Templates" (required by "Draft.Algebra3MoreTemplates" via "Draft.ExtrEqs")
consts
  Zmax :: "nat => (nat => int) => int"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Algebra3MoreTemplates")
locale Order
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Order D"
locale Torder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Torder D"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.539s elapsed time, 1.148s cpu time, 0.171s GC time
locale Worder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Worder D"
### theory "Draft.Algebra1"
### 2.627s elapsed time, 6.188s cpu time, 1.225s GC time
Loading theory "Draft.Algebra2" (required by "Draft.Algebra3MoreTemplates" via "Draft.Algebra3")
locale Group
  fixes G :: "('a, 'b) Group_scheme"  (structure)
  assumes "Group G"
### theory "Draft.Algebra2"
### 2.042s elapsed time, 2.896s cpu time, 1.190s GC time
Loading theory "Draft.Algebra3" (required by "Draft.Algebra3MoreTemplates")
[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |] ==> inj_on (transpos ?i ?j) {i. i <= ?n}
### theory "Draft.Algebra3"
### 2.232s elapsed time, 3.260s cpu time, 1.425s GC time
Loading theory "Draft.Algebra3MoreTemplates"
val templateLemmas =
   [("Algebra3.isomTr0", "Group ?F ==> ?F \<cong> ?F",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 0)
           ))),
    ("Algebra3.automgroup", "Group ?G ==> Group (automg ?G)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebra3.Gchain_pre", "Gchain (Suc ?n) ?g ==> Gchain ?n ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Algebra3.IdTr2",
     "Group ?F ==> gbij\<^bsub>?F,?F\<^esub> I\<^bsub>?F\<^esub>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Algebra3.rfn_tool2", "?a < ?s ==> ?a <= ?s - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Algebra3.LeastTr0", "?i < (LEAST l. ?P l) ==> ~ ?P ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, t_empty))],
       template_negation
        (
           template_predicate
            (template_app (template_var 0, template_var 1))
           ))),
    ("Algebra3.rfn_tool17", "?a = ?b ==> ?a - ?c = ?b - ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra3.rfn_tool3", "0 <= ?m ==> ?m + ?n - ?n = ?m",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0),
         template_var 1))),
    ("Algebra3.isom_gch_units_transpTr6",
     "[| Gchain ?n ?g; ?i <= ?n |] ==> Group (?g ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 0, template_app (template_var 1, template_var 0))
           ))),
    ("Algebra3.isom_tgch_unitsTr0_2",
     "Ugp ?E ==> finite {i. i <= ?n & ?g i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))
           ))),
    ("Algebra3.pos_mult_pos", "[| 0 < ?r; 0 < ?s |] ==> 0 < ?r * ?s",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra3.IdTr1",
     "[| Group ?F; ?x : carrier ?F |] ==> I\<^bsub>?F\<^esub> ?x = ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_var 0))),
    ("Algebra3.Qw_cmpser",
     "[| Group ?G; w_cmpser ?G (Suc ?n) ?f |]
      ==> Gchain ?n (Qw_cmpser ?G ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Algebra3.rfn_tool11", "[| 0 < ?b; ?a <= ?b - Suc 0 |] ==> ?a < ?b",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_hole 3)))],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Algebra3.isomTr1",
     "[| Group ?F; Group ?G; ?F \<cong> ?G |] ==> ?G \<cong> ?F",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Algebra3.rfn_tool13_1",
     "[| 0 < ?r; ?a = ?b |] ==> ?a div ?r = ?b div ?r",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Algebra3.rfn_tool13",
     "[| 0 < ?r; ?a = ?b |] ==> ?a mod ?r = ?b mod ?r",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Algebra3.Id_l_unit",
     "[| Group ?G; gbij\<^bsub>?G,?G\<^esub> ?f |]
      ==> I\<^bsub>?G\<^esub> \<circ>\<^bsub>?G\<^esub> ?f = ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))),
           template_var 0),
         template_var 0))),
    ("Algebra3.rfn_tool1_1",
     "[| 0 < ?r; ?j < ?r |] ==> (?i * ?r + ?j) div ?r = ?i",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2)),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("Algebra3.rtos_rs_Tr1",
     "[| 0 < ?r; 0 < ?s |] ==> rtos ?r ?s (?r * ?s) = ?r * ?s",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra3.Group_Img",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> Group (Img\<^bsub>?F,?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.rtos_rs_Tr3",
     "[| 0 < ?r; 0 < ?s |] ==> inj_on (rtos ?r ?s) {i. i <= ?r * ?s}",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Algebra3.rfn_tool12_2",
     "[| 0 < ?s; ?i mod ?s = ?s - Suc 0 |] ==> Suc ?i mod ?s = 0",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_hole 4)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_hole 4))),
    ("Algebra3.gker_normal",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?F \<triangleright> gker\<^bsub>?F,?G\<^esub> ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.gkernTr7",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?F \<guillemotright> gker\<^bsub>?F,?G\<^esub> ?f ",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.sg_gimg",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?G \<guillemotright> ?f ` carrier ?F ",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Algebra3.ghom_unit_unit",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f \<one>\<^bsub>?F\<^esub> = \<one>\<^bsub>?G\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_var 0, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("Algebra3.iotahomTr0",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?h : ?H |]
      ==> (\<iota>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub>) ?h =
          ?h",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_var 0))),
    ("Algebra3.Group_coim",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> Group (?F / gker\<^bsub>?F,?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Algebra3.gkernTr1_1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> gker\<^bsub>?F,?G\<^esub> ?f <= carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Algebra3.gkernTr6",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> \<one>\<^bsub>?F\<^esub> : gker\<^bsub>?F,?G\<^esub> ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.img_unit_closed",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> \<one>\<^bsub>?G\<^esub> : ?f ` carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Algebra3.gkern1",
     "[| Group ?F; Ugp ?E; ?f : gHom ?F ?E |]
      ==> gker\<^bsub>?F,?E\<^esub> ?f = carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("Algebra3.div_Tr1",
     "[| 0 < ?r; 0 < ?s; ?l <= ?s * ?r |] ==> ?l div ?s <= ?r",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Algebra3.length_wcmpser0_6",
     "[| Group ?G; w_cmpser ?G (Suc (Suc ?n)) ?f |]
      ==> 0 < card (?f ` {i. i <= Suc ?n})",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_hole 6,
                  template_app (template_hole 6, template_var 1))),
              template_var 0)
            )],
       template_inequation
        (less_than, template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, t_empty)))))),
    ("Algebra3.r_s_div_s",
     "[| 0 < ?r; 0 < ?s |] ==> (?r * ?s - Suc 0) div ?s = ?r - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app (template_hole 0, template_hole 5))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_hole 5))))),
    ("Algebra3.r_s_mod_s",
     "[| 0 < ?r; 0 < ?s |] ==> (?r * ?s - Suc 0) mod ?s = ?s - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app (template_hole 0, template_hole 5))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 0, template_hole 5))))),
    ("Algebra3.rfn_tool12",
     "[| 0 < ?s; ?i mod ?s = ?s - 1 |] ==> Suc (?i div ?s) = Suc ?i div ?s",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_var 1)))),
    ("Algebra3.rfn_tool12_1",
     "[| 0 < ?s; ?l mod ?s < ?s - 1 |] ==> Suc (?l mod ?s) = Suc ?l mod ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2))],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Algebra3.inv_gbijec_gbijec",
     "[| Group ?F; Group ?G; gbij\<^bsub>?F,?G\<^esub> ?f |]
      ==> gbij\<^bsub>?G,?F\<^esub> (?f\<inverse>\<^bsub>carrier
                    ?G,carrier ?F\<^esub>)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("Algebra3.r_unit_gHom",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f \<circ>\<^bsub>?F\<^esub> I\<^bsub>?F\<^esub> = ?f",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))),
         template_var 0))),
    ("Algebra3.l_unit_gHom",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> I\<^bsub>?G\<^esub> \<circ>\<^bsub>?F\<^esub> ?f = ?f",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))),
           template_var 0),
         template_var 0))),
    ("Algebra3.hom_to_Img",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f : gHom ?F (Img\<^bsub>?F,?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Algebra3.gHom_func",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f : carrier ?F \<rightarrow> carrier ?G",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               t_empty))
           ))),
    ("Algebra3.gbij_automorph",
     "[| Group ?G; gbij\<^bsub>?G,?G\<^esub> ?f;
         gbij\<^bsub>?G,?G\<^esub> ?g |]
      ==> gbij\<^bsub>?G,?G\<^esub> (?g \<circ>\<^bsub>?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("Algebra3.div_Tr3",
     "[| 0 < ?r; 0 < ?s; ?l < ?s * ?r |] ==> Suc (?l div ?s) <= ?r",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 2))),
    ("Algebra3.rtos_inj",
     "[| 0 < ?r; 0 < ?s |]
      ==> inj_on (rtos ?r ?s) {i. i <= ?r * ?s - Suc 0}",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Algebra3.inv_gHom",
     "[| Group ?F; Group ?G; gbij\<^bsub>?F,?G\<^esub> ?f |]
      ==> ?f\<inverse>\<^bsub>carrier ?G,carrier ?F\<^esub> : gHom ?G ?F",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Algebra3.rfn_tool20",
     "[| 0 < ?m; ?a = ?b * ?m + ?c; ?c < ?m |] ==> ?a mod ?m = ?c",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 3),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3)),
            template_var 0)),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_var 0))),
    ("Algebra3.rfn_tool1",
     "[| 0 < ?r; ?k = ?i * ?r + ?j; ?j < ?r |] ==> ?k div ?r = ?i",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 3),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 3)),
            template_var 0)),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_var 1))),
    ("Algebra3.QgrpUnit_2",
     "[| Group ?G; Ugp ?E; ?G \<triangleright> ?H; carrier ?G = ?H |]
      ==> (?G / ?H) \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Algebra3.QgrpUnit_1",
     "[| Group ?G; Ugp ?E; ?G \<triangleright> ?H; (?G / ?H) \<cong> ?E |]
      ==> carrier ?G = ?H",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Algebra3.Img_carrier",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> carrier (Img\<^bsub>?F,?G\<^esub> ?f) = ?f ` carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Algebra3.div_Tr2",
     "[| 0 < ?r; 0 < ?s; ?l < ?s * ?r |] ==> ?l div ?s <= ?r - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_hole 5))))),
    ("Algebra3.rtos_hom0",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0 |] ==> ?i div ?s < ?r",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_app (template_hole 1, template_hole 5)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("Algebra3.imgTr11",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?F \<guillemotright> ?H  |]
      ==> ?G \<guillemotright> ?f ` ?H ",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra3.isomTr2",
     "[| Group ?F; Group ?G; Group ?H; ?F \<cong> ?G; ?G \<cong> ?H |]
      ==> ?F \<cong> ?H",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Algebra3.isom_gch_unitsTr4",
     "[| Group ?F; Group ?G; Ugp ?E; ?F \<cong> ?G; ?F \<cong> ?E |]
      ==> ?G \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Algebra3.rtos_rs_Tr2",
     "[| 0 < ?r; 0 < ?s |] ==> ALL l<=?r * ?s. rtos ?r ?s l <= ?r * ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra3.rtos_r_s",
     "[| 0 < ?r; 0 < ?s |]
      ==> rtos ?r ?s (?r * ?s - Suc 0) = ?r * ?s - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_hole 5))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_hole 5))))),
    ("Algebra3.inducedhomgsurjec",
     "[| Group ?F; Group ?G; gsurj\<^bsub>?F,?G\<^esub> ?f |]
      ==> gsurj\<^bsub>(?F /
                        gker\<^bsub>?F,?G\<^esub> ?f),?G\<^esub> (?f\<dieresis>\<^bsub>?F,?G\<^esub>)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.gisom1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> (?F / gker\<^bsub>?F,?G\<^esub> ?f) \<cong>
          (Img\<^bsub>?F,?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.abc_SucTr0",
     "[| 0 < ?a; ?c <= ?b; ?a - Suc 0 = ?b - ?c |] ==> ?a = Suc ?b - ?c",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2),
            template_app (template_hole 0, template_hole 4)),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Algebra3.mod_div_injTr",
     "[| 0 < ?r; ?x mod ?r = ?y mod ?r; ?x div ?r = ?y div ?r |]
      ==> ?x = ?y",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra3.imgTr10",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?F \<guillemotright> ?H  |]
      ==> \<one>\<^bsub>?G\<^esub> : ?f ` ?H",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra3.gHom_mem",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?x : carrier ?F |]
      ==> ?f ?x : carrier ?G",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Algebra3.l_inv_gHom",
     "[| Group ?F; Group ?G; gbij\<^bsub>?F,?G\<^esub> ?f |]
      ==> (?f\<inverse>\<^bsub>carrier
                                ?G,carrier
                                    ?F\<^esub>) \<circ>\<^bsub>?F\<^esub> ?f =
          I\<^bsub>?F\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 2)),
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 2))))),
    ("Algebra3.induced_ghom_ginjec",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ginj\<^bsub>(?F /
                       gker\<^bsub>?F,?G\<^esub> ?f),?G\<^esub> (?f\<dieresis>\<^bsub>?F,?G\<^esub>)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.gker_hom_to_img",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> gker\<^bsub>?F,Img\<^bsub>?F,?G\<^esub> ?f\<^esub> ?f =
          gker\<^bsub>?F,?G\<^esub> ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Algebra3.div_Tr3_2",
     "[| 0 < ?r; 0 < ?s; ?l mod ?s < ?s - 1 |]
      ==> ?l div ?s = Suc ?l div ?s",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Algebra3.homomth2Tr0",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?G \<triangleright> ?N |]
      ==> ?F \<triangleright> iim ?F ?G ?f ?N",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.ghomTr4",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?G \<guillemotright> ?K  |]
      ==> ?F \<guillemotright> iim ?F ?G ?f ?K ",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra3.gkernTr1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ?x : gker\<^bsub>?F,?G\<^esub> ?f |]
      ==> ?x : carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 3))
           ))),
    ("Algebra3.length_wcmpser0_7",
     "[| Group ?G; w_cmpser ?G (Suc (Suc ?n)) ?f |]
      ==> card {i. i <= ?n & Qw_cmpser ?G ?f i \<cong> ?E} <= Suc ?n",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_hole 6,
                  template_app (template_hole 6, template_var 2))),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 6, template_var 2)))),
    ("Algebra3.inducedHom",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f\<dieresis>\<^bsub>?F,?G\<^esub>
          : gHom (?F / gker\<^bsub>?F,?G\<^esub> ?f) ?G",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_var 1))
           ))),
    ("Algebra3.iotaTr0",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<triangleright> ?N |]
      ==> ginj\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H),(\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N)\<^esub> \<iota>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)))
           ))),
    ("Algebra3.div_Tr4",
     "[| 0 < ?r; 0 < ?s; ?j < ?s * ?r |]
      ==> ?j div ?s * ?s + ?s <= ?r * ?s",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 1)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 1)))),
    ("Algebra3.div_Tr3_1",
     "[| 0 < ?r; 0 < ?s; ?l mod ?s = ?s - 1 |]
      ==> Suc ?l div ?s = Suc (?l div ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Algebra3.isom_gch_unitsTr1_7_0",
     "[| Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n |]
      ==> Gchain (Suc ?n) (cmp ?h (transpos ?k (Suc ?n)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 5, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 5, template_var 2))))
           ))),
    ("Algebra3.iim_nonempty",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?G \<guillemotright> ?K  |]
      ==> iim ?F ?G ?f ?K ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Algebra3.iotahom",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<triangleright> ?N |]
      ==> \<iota>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub>
          : gHom (\<natural>\<^bsub>?G\<^esub>?H)
             (\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 0))))
           ))),
    ("Algebra3.isom_gch_units_transpTr3",
     "[| Ugp ?E; Gchain ?n ?g; ?i <= ?n |]
      ==> finite ({i. i <= ?n & ?g i \<cong> ?E} - {?i})",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Algebra3.rfn_tool30",
     "[| 0 < ?r; 0 < ?s; ?l div ?s * ?s + ?s < ?s * ?r |]
      ==> Suc (?l div ?s) < ?r",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 0),
                    template_var 1)),
                template_var 1)),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 2))],
       template_inequation
        (less_than,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_var 2))),
    ("Algebra3.inducedHOMTr0_1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f\<dieresis>\<^bsub>?F,?G\<^esub>
          : set_rcs ?F (gker\<^bsub>?F,?G\<^esub> ?f) \<rightarrow>
            carrier ?G",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               t_empty))
           ))),
    ("Algebra3.isom4",
     "[| Group ?G; ?G \<triangleright> ?N; ?G \<guillemotright> ?H  |]
      ==> (\<natural>\<^bsub>?G\<^esub>?H / (?H Int ?N)) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?N \<diamondop>\<^bsub>?G\<^esub> ?H /
           ?N)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_var 1))
           ))),
    ("Algebra3.isom4b",
     "[| Group ?G; ?G \<triangleright> ?N; ?G \<guillemotright> ?H  |]
      ==> (\<natural>\<^bsub>?G\<^esub>?N \<diamondop>\<^bsub>?G\<^esub> ?H /
           ?N) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?H / (?H Int ?N))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Algebra3.rtos_hom3",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0 |]
      ==> rtos ?r ?s ?i div ?r = ?i mod ?s",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra3.rtos_hom3_1",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0 |]
      ==> rtos ?r ?s ?i mod ?r = ?i div ?s",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra3.gkern2",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ginj\<^bsub>?F,?G\<^esub> ?f |]
      ==> gker\<^bsub>?F,?G\<^esub> ?f = {\<one>\<^bsub>?F\<^esub>}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_hole 0)))),
    ("Algebra3.ghom_inv_inv",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?x : carrier ?F |]
      ==> ?f (\<rho>\<^bsub>?F\<^esub> ?x) =
          \<rho>\<^bsub>?G\<^esub> ?f ?x",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_var 1, template_var 0))))),
    ("Algebra3.Nfunc_iNJTr",
     "[| inj_on ?g {i. i <= ?n}; ?i <= ?n; ?j <= ?n; ?i < ?j |]
      ==> ?g ?i ~= ?g ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, t_empty))
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_equation
            (template_app (template_var 3, template_var 1),
             template_app (template_var 3, template_var 0))
           ))),
    ("Algebra3.homomtr",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f\<dieresis>\<^bsub>?F,?G\<^esub>
          : gHom (?F / gker\<^bsub>?F,?G\<^esub> ?f)
             (Img\<^bsub>?F,?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Algebra3.isom_gch_units_transpTr4",
     "[| Ugp ?E; Gchain ?n ?g; ?i <= ?n |]
      ==> finite ({i. i <= ?n & ?g i \<cong> ?E} - {?i, ?j})",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3)],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Algebra3.rtos_hom2",
     "[| 0 < ?r; 0 < ?s; ?l <= ?r * ?s - Suc 0 |]
      ==> rtos ?r ?s ?l <= ?r * ?s - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_app (template_hole 1, template_hole 5)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app (template_hole 1, template_hole 5))))),
    ("Algebra3.rtos_hom1",
     "[| 0 < ?r; 0 < ?s; ?l <= ?r * ?s - Suc 0 |]
      ==> rtos ?r ?s ?l <= ?s * ?r - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_app (template_hole 1, template_hole 5)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app (template_hole 1, template_hole 5))))),
    ("Algebra3.gkernTr3",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ?x : gker\<^bsub>?F,?G\<^esub> ?f |]
      ==> \<rho>\<^bsub>?F\<^esub> ?x : gker\<^bsub>?F,?G\<^esub> ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Algebra3.imgTr7",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?u : ?f ` carrier ?F |]
      ==> \<rho>\<^bsub>?G\<^esub> ?u : ?f ` carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 1, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 3)))
           ))),
    ("Algebra3.Pj_im_subg",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<triangleright> ?K;
         ?K <= ?H |]
      ==> Pj ?G ?K ` ?H = carrier (\<natural>\<^bsub>?G\<^esub>?H / ?K)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Algebra3.isom_gch_transp",
     "[| Gchain ?n ?f; ?i <= ?n; ?j <= ?n; ?i < ?j |]
      ==> isom_Gchains ?n (transpos ?i ?j) ?f (cmp ?f (transpos ?i ?j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Algebra3.gbij_comp_bij",
     "[| Group ?F; Group ?G; Group ?H; gbij\<^bsub>?F,?G\<^esub> ?f;
         gbij\<^bsub>?G,?H\<^esub> ?g |]
      ==> gbij\<^bsub>?F,?H\<^esub> (?g \<circ>\<^bsub>?F\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 1))
           ))),
    ("Algebra3.gHom_comp_ginjec",
     "[| Group ?F; Group ?G; Group ?H; ginj\<^bsub>?F,?G\<^esub> ?f;
         ginj\<^bsub>?G,?H\<^esub> ?g |]
      ==> ginj\<^bsub>?F,?H\<^esub> (?g \<circ>\<^bsub>?F\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 1))
           ))),
    ("Algebra3.gHom_comp_gsurjec",
     "[| Group ?F; Group ?G; Group ?H; gsurj\<^bsub>?F,?G\<^esub> ?f;
         gsurj\<^bsub>?G,?H\<^esub> ?g |]
      ==> gsurj\<^bsub>?F,?H\<^esub> (?g \<circ>\<^bsub>?F\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 1))
           ))),
    ("Algebra3.inducedHOMTr0_2",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f\<dieresis>\<^bsub>?F,?G\<^esub>
          : set_rcs ?F (gker\<^bsub>?F,?G\<^esub> ?f) \<rightarrow>
            ?f ` carrier ?F",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1),
                     template_var 0))),
               t_empty))
           ))),
    ("Algebra3.length_wcmpser0_0",
     "[| Group ?G; Ugp ?E; w_cmpser ?G (Suc 0) ?f |]
      ==> ?f ` {i. i <= Suc 0} = {?f 0, ?f (Suc 0)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_app (template_hole 7, template_hole 6)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 0, template_hole 6)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 0,
                 template_app (template_hole 7, template_hole 6))),
             template_hole 0))))),
    ("Algebra3.homomthm1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> gbij\<^bsub>(?F /
                       gker\<^bsub>?F,?G\<^esub> ?f),Img\<^bsub>?F,?G\<^esub> ?f\<^esub> (?f\<dieresis>\<^bsub>?F,Img\<^bsub>?F,?G\<^esub> ?f\<^esub>)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_var 0))
           ))),
    ("Algebra3.divTr5",
     "[| 0 < ?r; 0 < ?s; ?l < ?r * ?s |]
      ==> ?l div ?s * ?s <= ?l & ?l <= Suc (?l div ?s) * ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1)),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 1))),
                 template_var 1)))
           ))),
    ("Algebra3.J_H_S",
     "[| Group ?G; Ugp ?E; compseries ?G ?r ?f; compseries ?G ?s ?g; 0 < ?r;
         0 < ?s |]
      ==> ?r = ?s",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 5)),
        template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 1, template_var 3),
        template_inequation (less_than, template_hole 1, template_var 1)],
       template_equation (template_var 3, template_var 1))),
    ("Algebra3.homom2img",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G |]
      ==> ?f\<dieresis>\<^bsub>?F,Img\<^bsub>?F,?G\<^esub> ?f\<^esub>
          : gHom (?F / gker\<^bsub>?F,?G\<^esub> ?f)
             (Img\<^bsub>?F,?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Algebra3.gHomcomp",
     "[| Group ?F; Group ?G; Group ?H; ?f : gHom ?F ?G; ?g : gHom ?G ?H |]
      ==> ?g \<circ>\<^bsub>?F\<^esub> ?f : gHom ?F ?H",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))
           ))),
    ("Algebra3.imgTr9",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?F \<guillemotright> ?H ;
         ?u : ?f ` ?H |]
      ==> \<rho>\<^bsub>?G\<^esub> ?u : ?f ` ?H",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))
           ))),
    ("Algebra3.inducedHOMTr0",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?a : carrier ?F |]
      ==> (?f\<dieresis>\<^bsub>?F,?G\<^esub>)
           (gker\<^bsub>?F,?G\<^esub> ?f \<bullet>\<^bsub>?F\<^esub> ?a) =
          ?f ?a",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Algebra3.homom3",
     "[| Group ?F; Group ?G; ?G \<triangleright> ?N;
         gsurj\<^bsub>?F,?G\<^esub> ?f; ?N1.0 = iim ?F ?G ?f ?N |]
      ==> (?F / ?N1.0) \<cong> (?G / ?N)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Algebra3.kern_comp_gHom",
     "[| Group ?F; Group ?G; gsurj\<^bsub>?F,?G\<^esub> ?f;
         ?G \<triangleright> ?N |]
      ==> gker\<^bsub>?F,(?G /
                          ?N)\<^esub> (Pj ?G
  ?N \<circ>\<^bsub>?F\<^esub> ?f) =
          iim ?F ?G ?f ?N",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Algebra3.induced_ghom_someTr1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?a : carrier ?F |]
      ==> ?f (SOME xa.
                 xa : gker\<^bsub>?F,?G\<^esub> ?f \<bullet>\<^bsub>?F\<^esub>
                      ?a) =
          ?f ?a",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_var 1, template_app (template_hole 2, t_empty)),
         template_app (template_var 1, template_var 0)))),
    ("Algebra3.induced_ghom_someTr",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ?X : set_rcs ?F (gker\<^bsub>?F,?G\<^esub> ?f) |]
      ==> ?f (SOME xa. xa : ?X) : ?f ` carrier ?F",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_var 1, template_app (template_hole 3, t_empty))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Algebra3.Suc_i_mod_s_0_1",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; ?i mod ?s = ?s - Suc 0 |]
      ==> Suc ?i mod ?s = 0",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_app (template_hole 2, template_hole 6))),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 2, template_hole 6)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_hole 6))),
    ("Algebra3.length_wcmpser0_2",
     "[| Group ?G; Ugp ?E; w_cmpser ?G (Suc ?n) ?f; ?i <= ?n;
         ~ Qw_cmpser ?G ?f ?i \<cong> ?E |]
      ==> ?f ?i ~= ?f (Suc ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 1),
                      template_var 0)),
                  template_var 3)
                )
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 1, template_var 0),
             template_app
              (template_var 1,
               template_app (template_hole 5, template_var 0)))
           ))),
    ("Algebra3.length_of_twcmpser",
     "[| Group ?G; Ugp ?E; tw_cmpser ?G (Suc ?n) ?f |]
      ==> length_twcmpser ?G (Suc ?n) ?f =
          Suc ?n - card {i. i <= ?n & Qw_cmpser ?G ?f i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_app (template_hole 9, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 9, template_var 1)),
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty)))))),
    ("Algebra3.rfn_compseries_iMTr2",
     "[| 0 < ?r; 0 < ?s; ?xa < ?s * ?r |]
      ==> ?xa div ?s * ?s <= ?r * ?s & Suc (?xa div ?s) * ?s <= ?r * ?s",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2),
        template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1)),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 1))),
                   template_var 1)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)))
           ))),
    ("Algebra3.gkernTr11",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?a : carrier ?F |]
      ==> iim ?F ?G ?f {?f ?a} =
          gker\<^bsub>?F,?G\<^esub> ?f \<bullet>\<^bsub>?F\<^esub> ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_var 1, template_var 0)),
             template_hole 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Algebra3.automgroupTr1",
     "[| Group ?G; gbij\<^bsub>?G,?G\<^esub> ?f;
         gbij\<^bsub>?G,?G\<^esub> ?g; gbij\<^bsub>?G,?G\<^esub> ?h |]
      ==> ?h \<circ>\<^bsub>?G\<^esub> ?g \<circ>\<^bsub>?G\<^esub> ?f =
          ?h \<circ>\<^bsub>?G\<^esub> (?g \<circ>\<^bsub>?G\<^esub> ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 2))))),
    ("Algebra3.QgrpUnit_3",
     "[| Group ?G; Ugp ?E; ?G \<guillemotright> ?H ;
         ?G \<guillemotright> ?H1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         (\<natural>\<^bsub>?G\<^esub>?H / ?H1.0) \<cong> ?E |]
      ==> ?H = ?H1.0",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 1)),
                  template_var 0)),
              template_var 2)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Algebra3.Suci_div_s_2",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; ?i mod ?s < ?s - Suc 0 |]
      ==> Suc ?i div ?s = ?i div ?s",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2),
        template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1)),
            template_app (template_hole 3, template_hole 7))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 3, template_hole 7)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra3.length_wcmpser0_1",
     "[| Group ?G; Ugp ?E; w_cmpser ?G (Suc ?n) ?f; ?i : {i. i <= ?n};
         Qw_cmpser ?G ?f ?i \<cong> ?E |]
      ==> ?f ?i = ?f (Suc ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app (template_var 1, template_var 0),
         template_app
          (template_var 1,
           template_app (template_hole 6, template_var 0))))),
    ("Algebra3.homom2img1",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ?X : set_rcs ?F (gker\<^bsub>?F,?G\<^esub> ?f) |]
      ==> (?f\<dieresis>\<^bsub>?F,Img\<^bsub>?F,?G\<^esub> ?f\<^esub>) ?X =
          (?f\<dieresis>\<^bsub>?F,?G\<^esub>) ?X",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Algebra3.rtos_hom7",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; ?i div ?s = ?r - Suc 0 |]
      ==> Suc (rtos ?r ?s ?i) mod ?r = 0",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_hole 8))),
    ("Algebra3.Suci_mod_s_2",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; ?i mod ?s < ?s - Suc 0 |]
      ==> Suc ?i mod ?s = Suc (?i mod ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_app (template_hole 2, template_hole 6))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 2, template_hole 6)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Algebra3.gHom",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?x : carrier ?F;
         ?y : carrier ?F |]
      ==> ?f (?x \<cdot>\<^bsub>?F\<^esub> ?y) =
          ?f ?x \<cdot>\<^bsub>?G\<^esub> ?f ?y",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 4))
            )],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("Algebra3.isom_gch_unitsTr1_7_3",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ?h ?k \<cong> ?E |]
      ==> cmp ?h (transpos ?k (Suc ?n)) (Suc ?n) \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 6, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_var 1, template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app (template_hole 6, template_var 2))),
                 template_app (template_hole 6, template_var 2))),
             template_var 3)
           ))),
    ("Algebra3.isom_gch_unitsTr1_7_2",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ?h (Suc ?n) \<cong> ?E |]
      ==> cmp ?h (transpos ?k (Suc ?n)) ?k \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 6, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_var 1,
                  template_app (template_hole 6, template_var 2))),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app (template_hole 6, template_var 2))),
                 template_var 0)),
             template_var 3)
           ))),
    ("Algebra3.QgrpUnit_4",
     "[| Group ?G; Ugp ?E; ?G \<guillemotright> ?H ;
         ?G \<guillemotright> ?H1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         ~ (\<natural>\<^bsub>?G\<^esub>?H / ?H1.0) \<cong> ?E |]
      ==> ?H ~= ?H1.0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_var 1)),
                      template_var 0)),
                  template_var 2)
                )
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra3.isom_tgch_unitsTr0_3",
     "[| Ugp ?E; Gchain (Suc ?n) ?g; ~ ?g (Suc ?n) \<cong> ?E |]
      ==> {i. i <= Suc ?n & ?g i \<cong> ?E} =
          {i. i <= ?n & ?g i \<cong> ?E}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_var 0,
                      template_app (template_hole 6, template_var 1))),
                  template_var 2)
                )
            )],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("Algebra3.gkernTr2",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ?x : gker\<^bsub>?F,?G\<^esub> ?f;
         ?y : gker\<^bsub>?F,?G\<^esub> ?f |]
      ==> ?x \<cdot>\<^bsub>?F\<^esub> ?y : gker\<^bsub>?F,?G\<^esub> ?f",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2))
           ))),
    ("Algebra3.img_mult_closed",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?u : ?f ` carrier ?F;
         ?v : ?f ` carrier ?F |]
      ==> ?u \<cdot>\<^bsub>?G\<^esub> ?v : ?f ` carrier ?F",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_var 4)))
           ))),
    ("Algebra3.inducedhomTr",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G;
         ?S : set_rcs ?F (gker\<^bsub>?F,?G\<^esub> ?f); ?s1.0 : ?S;
         ?s2.0 : ?S |]
      ==> ?f ?s1.0 = ?f ?s2.0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app (template_var 3, template_var 1),
         template_app (template_var 3, template_var 0)))),
    ("Algebra3.length_wcmpser0_3",
     "[| Group ?G; Ugp ?E; w_cmpser ?G (Suc (Suc ?n)) ?f;
         ?f (Suc ?n) ~= ?f (Suc (Suc ?n)) |]
      ==> ?f (Suc (Suc ?n)) ~: ?f ` {i. i <= Suc ?n}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_hole 6,
                  template_app (template_hole 6, template_var 1))),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_var 0,
                template_app (template_hole 6, template_var 1)),
              template_app
               (template_var 0,
                template_app
                 (template_hole 6,
                  template_app (template_hole 6, template_var 1))))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_var 0,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 6, template_var 1)))),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, t_empty)))
               )
           ))),
    ("Algebra3.rtos_rs_i_rs",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0;
         rtos ?r ?s ?i = ?r * ?s - Suc 0 |]
      ==> ?i = ?r * ?s - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_app (template_hole 2, template_hole 6))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1),
            template_var 0),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_app (template_hole 2, template_hole 6)))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app (template_hole 2, template_hole 6))))),
    ("Algebra3.isom_gch_unitsTr1_7_5",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ~ ?h ?k \<cong> ?E |]
      ==> ~ cmp ?h (transpos ?k (Suc ?n)) (Suc ?n) \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 6, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_var 1, template_var 0)),
                  template_var 3)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_app (template_hole 6, template_var 2))),
                     template_app (template_hole 6, template_var 2))),
                 template_var 3)
               )
           ))),
    ("Algebra3.isom_gch_unitsTr1_7_4",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ~ ?h (Suc ?n) \<cong> ?E |]
      ==> ~ cmp ?h (transpos ?k (Suc ?n)) ?k \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 6, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_var 1,
                      template_app (template_hole 6, template_var 2))),
                  template_var 3)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_app (template_hole 6, template_var 2))),
                     template_var 0)),
                 template_var 3)
               )
           ))),
    ("Algebra3.homom3Tr2",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<triangleright> ?N |]
      ==> gsurj\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H),(\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N /
                   ?N)\<^esub> (Pj (\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N)
                                 ?N \<circ>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub> \<iota>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub>)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0))),
                   template_var 0)),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1))))
           ))),
    ("Algebra3.isom_tgch_unitsTr0_1",
     "[| Ugp ?E; Gchain (Suc ?n) ?g; ?g (Suc ?n) \<cong> ?E |]
      ==> {i. i <= Suc ?n & ?g i \<cong> ?E} =
          insert (Suc ?n) {i. i <= ?n & ?g i \<cong> ?E}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_var 0,
                  template_app (template_hole 6, template_var 1))),
              template_var 2)
            )],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 6, template_var 1)),
           template_app (template_hole 3, t_empty))))),
    ("Algebra3.rtos_hom5",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; ?i div ?s = ?r - Suc 0 |]
      ==> Suc (rtos ?r ?s ?i) div ?r = Suc (?i mod ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Algebra3.Suc_rtos_i_mod_r_3",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; ?i div ?s < ?r - Suc 0 |]
      ==> Suc (rtos ?r ?s ?i) mod ?r = Suc (?i div ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))))),
    ("Algebra3.imgTr8",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?F \<guillemotright> ?H ;
         ?u : ?f ` ?H; ?v : ?f ` ?H |]
      ==> ?u \<cdot>\<^bsub>?G\<^esub> ?v : ?f ` ?H",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))
           ))),
    ("Algebra3.length_wcmpser0_4",
     "[| Group ?G; Ugp ?E; w_cmpser ?G (Suc 0) ?f |]
      ==> card (?f ` {i. i <= Suc 0}) - 1 =
          Suc 0 - card {i. i = 0 & Qw_cmpser ?G ?f i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_app (template_hole 12, template_hole 11)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app (template_hole 6, t_empty)))),
           template_hole 4),
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 12, template_hole 11)),
           template_app
            (template_hole 3, template_app (template_hole 6, t_empty)))))),
    ("Algebra3.isom_gch_unitsTr1_1",
     "[| Ugp ?E;
         Gchain (Suc ?n) ?g &
         Gchain (Suc ?n) ?h & Gch_bridge (Suc ?n) ?g ?h ?f;
         ?f (Suc ?n) = Suc ?n |]
      ==> Gchain ?n ?g & Gchain ?n ?h & Gch_bridge ?n ?g ?h ?f",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 3)),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app (template_hole 2, template_var 3)),
                    template_var 1)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 1,
                        template_app (template_hole 2, template_var 3)),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_equation
         (template_app
           (template_var 0, template_app (template_hole 2, template_var 3)),
          template_app (template_hole 2, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("Algebra3.rtos_rs_1",
     "[| 0 < ?r; 0 < ?s; rtos ?r ?s ?i < ?r * ?s;
         ~ Suc (rtos ?r ?s ?i) < ?r * ?s |]
      ==> rtos ?r ?s ?i = ?r * ?s - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1),
            template_var 0),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (
            template_inequation
             (less_than,
              template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app (template_hole 2, template_hole 6))))),
    ("Algebra3.isom_gch_units_transpTr5_1",
     "[| Ugp ?E; Gchain ?n ?g; Gchain ?n ?h; ?i <= ?n; ?j <= ?n; ?i < ?j;
         isom_Gchains ?n (transpos ?i ?j) ?g ?h |]
      ==> ?g ?i \<cong> ?h ?j",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0)),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("Algebra3.isom_gch_units_transpTr5_2",
     "[| Ugp ?E; Gchain ?n ?g; Gchain ?n ?h; ?i <= ?n; ?j <= ?n; ?i < ?j;
         isom_Gchains ?n (transpos ?i ?j) ?g ?h |]
      ==> ?g ?j \<cong> ?h ?i",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0)),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 0)),
             template_app (template_var 2, template_var 1))
           ))),
    ("Algebra3.isom_gch_units_transpTr7",
     "[| Ugp ?E; ?i <= ?n; ?j <= ?n; ?g ?j \<cong> ?h ?i; Group (?h ?i);
         Group (?g ?j); ~ ?g ?j \<cong> ?E |]
      ==> ~ ?h ?i \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_var 1, template_var 2)),
              template_app (template_var 0, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_var 0, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_var 1, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_var 1, template_var 2)),
                  template_var 5)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 0, template_var 4)),
                 template_var 5)
               )
           ))),
    ("Algebra3.length_wcmpser0",
     "[| Group ?G; Ugp ?E |]
      ==> ALL f.
             w_cmpser ?G (Suc ?n) f -->
             card (f ` {i. i <= Suc ?n}) - 1 =
             Suc ?n - card {i. i <= ?n & Qw_cmpser ?G f i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (template_app (template_hole 15, template_var 1))],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("Algebra3.isom_gch_units",
     "[| Ugp ?E; Gchain ?n ?g; Gchain ?n ?h; Gch_bridge ?n ?g ?h ?f |]
      ==> card {i. i <= ?n & ?g i \<cong> ?E} =
          card {i. i <= ?n & ?h i \<cong> ?E}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Algebra3.ghomTr3",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?x : carrier ?F;
         ?y : carrier ?F;
         ?f (?x \<cdot>\<^bsub>?F\<^esub> \<rho>\<^bsub>?F\<^esub> ?y) =
         \<one>\<^bsub>?G\<^esub> |]
      ==> ?f ?x = ?f ?y",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 4))
            ),
        template_equation
         (template_app
           (template_var 2,
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 1),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 0))),
          template_app (template_hole 0, template_var 3))],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("Algebra3.isom_gch_units_1",
     "[| Ugp ?E; Gchain ?n ?g; Gchain ?n ?h; EX f. Gch_bridge ?n ?g ?h f |]
      ==> card {i. i <= ?n & ?g i \<cong> ?E} =
          card {i. i <= ?n & ?h i \<cong> ?E}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Algebra3.isom_gch_unitsTr1",
     "Ugp ?E ==>
      ALL g h f.
         Gchain ?n g & Gchain ?n h & Gch_bridge ?n g h f -->
         card {i. i <= ?n & g i \<cong> ?E} =
         card {i. i <= ?n & h i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Algebra3.gkernTr9",
     "[| Group ?F; Group ?G; ?f : gHom ?F ?G; ?a : carrier ?F;
         ?b : carrier ?F |]
      ==> (gker\<^bsub>?F,?G\<^esub> ?f \<bullet>\<^bsub>?F\<^esub> ?a =
           gker\<^bsub>?F,?G\<^esub> ?f \<bullet>\<^bsub>?F\<^esub> ?b) =
          (?f ?a = ?f ?b)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 4))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2)),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2)),
             template_var 0)),
         template_equation
          (template_app (template_var 2, template_var 1),
           template_app (template_var 2, template_var 0))))),
    ("Algebra3.isom_gch_unitsTr1_2",
     "[| Ugp ?E; ?f (Suc ?n) ~= Suc ?n; inj_on ?f {i. i <= Suc ?n};
         ALL l<=Suc ?n. ?f l <= Suc ?n |]
      ==> cmp (transpos (?f (Suc ?n)) (Suc ?n)) ?f (Suc ?n) = Suc ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_equation
             (template_app
               (template_var 1,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, t_empty))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_var 1,
                     template_app (template_hole 7, template_var 0))),
                 template_app (template_hole 7, template_var 0))),
             template_var 1),
           template_app (template_hole 7, template_var 0)),
         template_app (template_hole 7, template_var 0)))),
    ("Algebra3.TR_isom_gch_units_1",
     "[| Ugp ?E; Gchain ?n ?f; ?i <= ?n; ?j <= ?n; ?i < ?j |]
      ==> card {k. k <= ?n & ?f k \<cong> ?E} =
          card {k. k <= ?n & ?f (transpos ?i ?j k) \<cong> ?E}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Algebra3.rtos_mod_r_1",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0; rtos ?r ?s ?i < ?r * ?s;
         ?i mod ?s = ?s - Suc 0 |]
      ==> rtos ?r ?s ?i mod ?r = ?i div ?s",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1),
            template_var 0),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra3.isom_gch_unitsTr1_4",
     "[| Ugp ?E; ?f (Suc ?n) ~= Suc ?n; inj_on ?f {i. i <= Suc ?n};
         ALL l<=Suc ?n. ?f l <= Suc ?n |]
      ==> inj_on (cmp (transpos (?f (Suc ?n)) (Suc ?n)) ?f) {i. i <= ?n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_equation
             (template_app
               (template_var 1,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, t_empty))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_var 1,
                         template_app (template_hole 7, template_var 0))),
                     template_app (template_hole 7, template_var 0))),
                 template_var 1)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Algebra3.JHS_Tr1",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f;
         compseries ?G ?s ?g |]
      ==> isom_Gchains (?r * ?s - 1) (rtos ?r ?s)
           (Qw_cmpser ?G (cmp_rfn ?G ?r ?f ?s ?g))
           (Qw_cmpser ?G (cmp_rfn ?G ?s ?g ?r ?f))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_inequation (less_than, template_hole 8, template_var 3),
        template_inequation (less_than, template_hole 8, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_var 2)),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 3),
                       template_var 1),
                     template_var 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 2),
                     template_var 0),
                   template_var 3),
                 template_var 1)))
           ))),
    ("Algebra3.TR_isom_gch_units",
     "[| Ugp ?E; Gchain ?n ?f; ?i <= ?n; ?j <= ?n; ?i < ?j |]
      ==> card {k. k <= ?n & ?f k \<cong> ?E} =
          card {k. k <= ?n & cmp ?f (transpos ?i ?j) k \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("Algebra3.isom_gch_unitsTr1_3",
     "[| Ugp ?E; ?f (Suc ?n) ~= Suc ?n; ALL l<=Suc ?n. ?f l <= Suc ?n;
         inj_on ?f {i. i <= Suc ?n} |]
      ==> inj_on (cmp (transpos (?f (Suc ?n)) (Suc ?n)) ?f)
           {i. i <= Suc ?n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_equation
             (template_app
               (template_var 1,
                template_app (template_hole 7, template_var 0)),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_var 1,
                         template_app (template_hole 7, template_var 0))),
                     template_app (template_hole 7, template_var 0))),
                 template_var 1)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Algebra3.isom_gch_unitsTr1_7",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n |]
      ==> card
           {i. i <= Suc ?n & cmp ?h (transpos ?k (Suc ?n)) i \<cong> ?E} =
          card {i. i <= Suc ?n & ?h i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 9, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))))),
    ("Algebra3.ZassenhausTr6_1",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> Group
           (\<natural>\<^bsub>?G\<^esub>?H Int ?K /
            (?H1.0 Int ?K \<diamondop>\<^bsub>?G\<^esub> ?H Int ?K1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))))
           ))),
    ("Algebra3.ZassenhausTr6_2",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> Group
           (\<natural>\<^bsub>?G\<^esub>?H1.0 \<diamondop>\<^bsub>?G\<^esub> ?H Int
 ?K /
            (?H1.0 \<diamondop>\<^bsub>?G\<^esub> ?H Int ?K1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))))
           ))),
    ("Algebra3.ZassenhausTr6_3",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> Group
           (\<natural>\<^bsub>?G\<^esub>?K1.0 \<diamondop>\<^bsub>?G\<^esub> ?K Int
 ?H /
            (?K1.0 \<diamondop>\<^bsub>?G\<^esub> ?K Int ?H1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3)))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))))
           ))),
    ("Algebra3.isom_gch_units_transpTr2",
     "[| Ugp ?E; Gchain ?n ?g; ?i <= ?n; ?j <= ?n; ?i < ?j;
         ?g ?i \<cong> ?E |]
      ==> {i. i <= ?n & ?g i \<cong> ?E} =
          insert ?i ({i. i <= ?n & ?g i \<cong> ?E} - {?i})",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_var 2, template_var 1)),
              template_var 4)
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 4, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0)))))),
    ("Algebra3.isom_gch_units_transpTr8_1",
     "[| Ugp ?E; Gchain ?n ?g; ?i <= ?n; ?j <= ?n; ?g ?i \<cong> ?E;
         ~ ?g ?j \<cong> ?E |]
      ==> {i. i <= ?n & ?g i \<cong> ?E} =
          {i. i <= ?n & ?g i \<cong> ?E} - {?j}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_var 2, template_var 1)),
              template_var 4)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_var 2, template_var 0)),
                  template_var 4)
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Algebra3.i_div_s_less",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0;
         Suc (rtos ?r ?s ?i) < ?r * ?s; ?i mod ?s = ?s - Suc 0;
         Suc ?i < ?s * ?r |]
      ==> ?i div ?s < ?r - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 2))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app (template_hole 4, template_hole 8))))),
    ("Algebra3.homom4",
     "[| Group ?G; ?G \<triangleright> ?N; ?G \<guillemotright> ?H  |]
      ==> gbij\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H /
                       (?H Int
                        ?N)),(\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N /
                              ?N)\<^esub> (Pj
      (\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N)
      ?N \<circ>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub> \<iota>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H)\<^esub>\<dieresis>\<^bsub>(\<natural>\<^bsub>?G\<^esub>?H),(\<natural>\<^bsub>?G\<^esub>?H \<diamondop>\<^bsub>?G\<^esub> ?N /
                     ?N)\<^esub>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_var 2),
                         template_var 0),
                       template_var 1))),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_app
                        (template_app
                          (template_app (template_hole 4, template_var 2),
                           template_var 0),
                         template_var 1))),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 6, template_var 2),
                         template_app
                          (template_app
                            (template_app (template_hole 4, template_var 2),
                             template_var 0),
                           template_var 1))),
                     template_var 1)),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0)))))
           ))),
    ("Algebra3.isom_gch_cmp",
     "[| Gchain ?n ?g; Gchain ?n ?h;
         ?f1.0 : {i. i <= ?n} \<rightarrow> {i. i <= ?n};
         ?f2.0 : {i. i <= ?n} \<rightarrow> {i. i <= ?n};
         isom_Gchains ?n (cmp ?f2.0 ?f1.0) ?g ?h |]
      ==> isom_Gchains ?n ?f1.0 ?g (cmp ?h ?f2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 0),
                    template_var 1)),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 1),
               template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Algebra3.JHS_1",
     "[| Group ?G; Ugp ?E; compseries ?G ?r ?f; compseries ?G ?s ?g; 0 < ?r;
         0 < ?s |]
      ==> ?r =
          ?r * ?s -
          card
           {i. i <= ?r * ?s - Suc 0 &
               Qw_cmpser ?G (cmp_rfn ?G ?r ?f ?s ?g) i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 5)),
        template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 11, template_var 3),
        template_inequation (less_than, template_hole 11, template_var 1)],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_var 1)),
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty)))))),
    ("Algebra3.isom_gch_units_transpTr8_2",
     "[| Ugp ?E; Gchain ?n ?g; ?i <= ?n; ?j <= ?n; ~ ?g ?i \<cong> ?E;
         ~ ?g ?j \<cong> ?E |]
      ==> {i. i <= ?n & ?g i \<cong> ?E} =
          {i. i <= ?n & ?g i \<cong> ?E} - {?i, ?j}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_var 2, template_var 1)),
                  template_var 4)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_var 2, template_var 0)),
                  template_var 4)
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Algebra3.isom_gch_units_transp",
     "[| Ugp ?E; Gchain ?n ?g; Gchain ?n ?h; ?i <= ?n; ?j <= ?n; ?i < ?j;
         isom_Gchains ?n (transpos ?i ?j) ?g ?h |]
      ==> card {i. i <= ?n & ?g i \<cong> ?E} =
          card {i. i <= ?n & ?h i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0)),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Algebra3.Suc_rtos_div_r_3",
     "[| 0 < ?r; 0 < ?s; ?i mod ?s < ?s - Suc 0; ?i <= ?r * ?s - Suc 0;
         Suc (rtos ?r ?s ?i) < ?r * ?s; ?i div ?s < ?r - Suc 0 |]
      ==> Suc (rtos ?r ?s ?i) div ?r = ?i mod ?s",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 7, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 5, template_hole 8))),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_app (template_hole 5, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 5, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_var 1)))),
    ("Algebra3.Suc_rtos_div_r_1",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0;
         Suc (rtos ?r ?s ?i) < ?r * ?s; ?i mod ?s = ?s - Suc 0;
         ?i div ?s < ?r - Suc 0 |]
      ==> Suc (rtos ?r ?s ?i) div ?r = ?i mod ?s",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Algebra3.Suc_rtos_mod_r_1",
     "[| 0 < ?r; 0 < ?s; ?i <= ?r * ?s - Suc 0;
         Suc (rtos ?r ?s ?i) < ?r * ?s; ?i mod ?s = ?s - Suc 0;
         ?i div ?s < ?r - Suc 0 |]
      ==> Suc (rtos ?r ?s ?i) mod ?r = Suc (?i div ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1)),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 4, template_hole 8))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app (template_hole 4, template_hole 8)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Algebra3.isom_gch_units_transpTr1",
     "[| Ugp ?E; Gchain ?n ?g; ?i <= ?n; ?j <= ?n; ?g ?j \<cong> ?E;
         ?i ~= ?j |]
      ==> insert ?j ({i. i <= ?n & ?g i \<cong> ?E} - {?i, ?j}) =
          {i. i <= ?n & ?g i \<cong> ?E} - {?i}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_var 2, template_var 0)),
              template_var 4)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 0)))),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 0))))),
    ("Algebra3.isom_gch_unitsTr1_5",
     "[| Ugp ?E;
         Gchain (Suc ?n) ?g &
         Gchain (Suc ?n) ?h & Gch_bridge (Suc ?n) ?g ?h ?f;
         ?f (Suc ?n) ~= Suc ?n |]
      ==> Gchain ?n ?g &
          Gchain ?n (cmp ?h (transpos (?f (Suc ?n)) (Suc ?n))) &
          Gch_bridge ?n ?g (cmp ?h (transpos (?f (Suc ?n)) (Suc ?n)))
           (cmp (transpos (?f (Suc ?n)) (Suc ?n)) ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 3)),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 3)),
                    template_var 1)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 6, template_var 3)),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_var 0,
                template_app (template_hole 6, template_var 3)),
              template_app (template_hole 6, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 0,
                           template_app (template_hole 6, template_var 3))),
                       template_app (template_hole 6, template_var 3))))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 0,
                           template_app (template_hole 6, template_var 3))),
                       template_app (template_hole 6, template_var 3)))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 0,
                           template_app (template_hole 6, template_var 3))),
                       template_app (template_hole 6, template_var 3))),
                   template_var 0))))
           ))),
    ("Algebra3.isom_gch_unitsTr1_7_1",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n |]
      ==> {i. i <= Suc ?n & cmp ?h (transpos ?k (Suc ?n)) i \<cong> ?E} -
          {?k, Suc ?n} =
          {i. i <= Suc ?n & ?h i \<cong> ?E} - {?k, Suc ?n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 12, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 12, template_var 2)),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 12, template_var 2)),
               template_hole 0)))))),
    ("Algebra3.ZassenhausTr5_2",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> \<natural>\<^bsub>?G\<^esub>?H Int ?K /
          (?H1.0 Int ?K \<diamondop>\<^bsub>?G\<^esub> ?H Int ?K1.0) =
          \<natural>\<^bsub>?G\<^esub>?K Int ?H /
          (?K1.0 Int ?H \<diamondop>\<^bsub>?G\<^esub> ?K Int ?H1.0)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)))))),
    ("Algebra3.isom_gch_unitsTr1_6",
     "[| Ugp ?E; ?f (Suc ?n) ~= Suc ?n;
         Gchain (Suc ?n) ?g &
         Gchain (Suc ?n) ?h & Gch_bridge (Suc ?n) ?g ?h ?f |]
      ==> Gchain (Suc ?n) ?g &
          Gchain (Suc ?n) (cmp ?h (transpos (?f (Suc ?n)) (Suc ?n))) &
          Gch_bridge (Suc ?n) ?g (cmp ?h (transpos (?f (Suc ?n)) (Suc ?n)))
           (cmp (transpos (?f (Suc ?n)) (Suc ?n)) ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_negation
         (
            template_equation
             (template_app
               (template_var 3,
                template_app (template_hole 6, template_var 2)),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 6, template_var 2)),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 6, template_var 2)),
                    template_var 0)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 3,
                        template_app (template_hole 6, template_var 2)),
                      template_var 1),
                    template_var 0),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 6, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 3,
                           template_app (template_hole 6, template_var 2))),
                       template_app (template_hole 6, template_var 2))))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 6, template_var 2)),
                     template_var 1),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 3,
                           template_app (template_hole 6, template_var 2))),
                       template_app (template_hole 6, template_var 2)))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 3,
                           template_app (template_hole 6, template_var 2))),
                       template_app (template_hole 6, template_var 2))),
                   template_var 3))))
           ))),
    ("Algebra3.isom_gch_unitsTr1_7_9",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ~ ?h (Suc ?n) \<cong> ?E; ~ ?h ?k \<cong> ?E |]
      ==> {i. i <= Suc ?n & ?h i \<cong> ?E} =
          {i. i <= Suc ?n & ?h i \<cong> ?E} - {?k, Suc ?n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 10, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_var 1,
                      template_app (template_hole 10, template_var 2))),
                  template_var 3)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_var 1, template_var 0)),
                  template_var 3)
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 10, template_var 2)),
               template_hole 0)))))),
    ("Algebra3.ZassenhausTr5",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> (\<natural>\<^bsub>?G\<^esub>?H Int ?K /
           (?H1.0 Int
            ?K \<diamondop>\<^bsub>?G\<^esub> ?H Int ?K1.0)) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?H1.0 \<diamondop>\<^bsub>?G\<^esub> ?H Int
?K /
           (?H1.0 \<diamondop>\<^bsub>?G\<^esub> ?H Int ?K1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 2),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 1)))),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))))
           ))),
    ("Algebra3.ZassenhausTr5_1",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> (\<natural>\<^bsub>?G\<^esub>?K Int ?H /
           (?K1.0 Int
            ?H \<diamondop>\<^bsub>?G\<^esub> ?K Int ?H1.0)) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?K1.0 \<diamondop>\<^bsub>?G\<^esub> ?K Int
?H /
           (?K1.0 \<diamondop>\<^bsub>?G\<^esub> ?K Int ?H1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 2)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 0),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 3)))),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2))))
           ))),
    ("Algebra3.JHS_Tr1_1",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f;
         compseries ?G ?s ?g |]
      ==> ?f (Suc ((?r * ?s - Suc 0) div
                   ?s)) \<diamondop>\<^bsub>?G\<^esub> ?f
                  ((?r * ?s - Suc 0) div ?s) Int
                 ?g ((?r * ?s - Suc 0) mod ?s) =
          ?f (?r - Suc 0) Int ?g (?s - Suc 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4)),
        template_inequation (less_than, template_hole 9, template_var 3),
        template_inequation (less_than, template_hole 9, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 4),
             template_app
              (template_var 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 3),
                           template_var 2)),
                       template_app (template_hole 5, template_hole 9))),
                   template_var 2)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_var 1,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 3),
                           template_var 2)),
                       template_app (template_hole 5, template_hole 9))),
                   template_var 2))),
             template_app
              (template_var 0,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 2)),
                     template_app (template_hole 5, template_hole 9))),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_var 1,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app (template_hole 5, template_hole 9)))),
           template_app
            (template_var 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 5, template_hole 9))))))),
    ("Algebra3.isom_gch_unitsTr1_7_8",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ~ ?h (Suc ?n) \<cong> ?E; ?h ?k \<cong> ?E |]
      ==> {i. i <= Suc ?n & ?h i \<cong> ?E} =
          insert ?k ({i. i <= Suc ?n & ?h i \<cong> ?E} - {?k, Suc ?n})",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 10, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_var 1,
                      template_app (template_hole 10, template_var 2))),
                  template_var 3)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_var 1, template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 4, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 10, template_var 2)),
                 template_hole 0))))))),
    ("Algebra3.Zassenhaus",
     "[| Group ?G; ?G \<guillemotright> ?H ; ?G \<guillemotright> ?H1.0 ;
         ?G \<guillemotright> ?K ; ?G \<guillemotright> ?K1.0 ;
         \<natural>\<^bsub>?G\<^esub>?H \<triangleright> ?H1.0;
         \<natural>\<^bsub>?G\<^esub>?K \<triangleright> ?K1.0 |]
      ==> (\<natural>\<^bsub>?G\<^esub>?H1.0 \<diamondop>\<^bsub>?G\<^esub> ?H Int
?K /
           (?H1.0 \<diamondop>\<^bsub>?G\<^esub> ?H Int ?K1.0)) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?K1.0 \<diamondop>\<^bsub>?G\<^esub> ?K Int
?H /
           (?K1.0 \<diamondop>\<^bsub>?G\<^esub> ?K Int ?H1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 3)))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))))
           ))),
    ("Algebra3.isom_gch_unitsTr1_7_7",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ?h (Suc ?n) \<cong> ?E; ~ ?h ?k \<cong> ?E |]
      ==> {i. i <= Suc ?n & ?h i \<cong> ?E} =
          insert (Suc ?n)
           ({i. i <= Suc ?n & ?h i \<cong> ?E} - {?k, Suc ?n})",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 10, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_var 1,
                  template_app (template_hole 10, template_var 2))),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_var 1, template_var 0)),
                  template_var 3)
                )
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 10, template_var 2)),
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 4, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 10, template_var 2)),
                 template_hole 0))))))),
    ("Algebra3.isom_gch_unitsTr1_7_6",
     "[| Ugp ?E; Gchain (Suc ?n) ?h; ?k ~= Suc ?n; ?k <= Suc ?n;
         ?h (Suc ?n) \<cong> ?E; ?h ?k \<cong> ?E |]
      ==> {i. i <= Suc ?n & ?h i \<cong> ?E} =
          insert ?k
           (insert (Suc ?n)
             ({i. i <= Suc ?n & ?h i \<cong> ?E} - {?k, Suc ?n}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 10, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_var 1,
                  template_app (template_hole 10, template_var 2))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_var 1, template_var 0)),
              template_var 3)
            )],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 10, template_var 2)),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 4, t_empty)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 10, template_var 2)),
                   template_hole 0)))))))),
    ("Algebra3.isom_gch_units_transpTr0",
     "[| Ugp ?E; Gchain ?n ?g; Gchain ?n ?h; ?i <= ?n; ?j <= ?n; ?i < ?j;
         isom_Gchains ?n (transpos ?i ?j) ?g ?h |]
      ==> {i. i <= ?n & ?g i \<cong> ?E} - {?i, ?j} =
          {i. i <= ?n & ?h i \<cong> ?E} - {?i, ?j}",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 4),
        template_inequation (less_equals, template_var 0, template_var 4),
        template_inequation (less_than, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_var 0)),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Algebra3.isom_tgch_unitsTr0",
     "[| Ugp ?E;
         card {i. i <= ?n & ?g i \<cong> ?E} =
         card {i. i <= ?n & ?h i \<cong> ?E};
         Gchain (Suc ?n) ?g &
         Gchain (Suc ?n) ?h & Gch_bridge (Suc ?n) ?g ?h ?f;
         ?f (Suc ?n) = Suc ?n |]
      ==> card {i. i <= Suc ?n & ?g i \<cong> ?E} =
          card {i. i <= Suc ?n & ?h i \<cong> ?E}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_equation
         (template_app
           (template_hole 7, template_app (template_hole 6, t_empty)),
          template_app
           (template_hole 7, template_app (template_hole 6, t_empty))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 3)),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 1, template_var 3)),
                    template_var 1)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 0,
                        template_app (template_hole 1, template_var 3)),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_equation
         (template_app
           (template_var 0, template_app (template_hole 1, template_var 3)),
          template_app (template_hole 1, template_var 3))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("Algebra3.JHS_Tr1_2",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f; compseries ?G ?s ?g;
         ?k < ?r - Suc 0 |]
      ==> (\<natural>\<^bsub>?G\<^esub>?f
  (Suc ?k) \<diamondop>\<^bsub>?G\<^esub> ?f ?k Int ?g (?s - Suc 0) /
           (?f (Suc (Suc ?k)) \<diamondop>\<^bsub>?G\<^esub> ?f (Suc ?k) Int
                       ?g 0)) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?g
  ?s \<diamondop>\<^bsub>?G\<^esub> ?g (?s - Suc 0) Int ?f ?k /
           (?g ?s \<diamondop>\<^bsub>?G\<^esub> ?g (?s - Suc 0) Int
           ?f (Suc ?k)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_inequation (less_than, template_hole 8, template_var 4),
        template_inequation (less_than, template_hole 8, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 6, template_var 4),
            template_app (template_hole 5, template_hole 8)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_var 2,
                           template_app (template_hole 5, template_var 0))),
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_var 2, template_var 0)),
                         template_app
                          (template_var 1,
                           template_app
                            (template_app (template_hole 6, template_var 3),
                             template_app
                              (template_hole 5, template_hole 8))))))),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_var 2,
                       template_app
                        (template_hole 5,
                         template_app (template_hole 5, template_var 0)))),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_var 2,
                         template_app (template_hole 5, template_var 0))),
                     template_app (template_var 1, template_hole 8))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app (template_var 1, template_var 3)),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_var 1,
                           template_app
                            (template_app (template_hole 6, template_var 3),
                             template_app
                              (template_hole 5, template_hole 8)))),
                       template_app (template_var 2, template_var 0))))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app (template_var 1, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_var 1,
                       template_app
                        (template_app (template_hole 6, template_var 3),
                         template_app (template_hole 5, template_hole 8)))),
                   template_app
                    (template_var 2,
                     template_app (template_hole 5, template_var 0))))))
           ))),
    ("Algebra3.length_wcmpser0_5",
     "[| Group ?G; Ugp ?E; w_cmpser ?G (Suc (Suc ?n)) ?f;
         w_cmpser ?G (Suc ?n) ?f;
         card (?f ` {i. i <= Suc ?n}) - 1 =
         Suc ?n - card {i. i <= ?n & Qw_cmpser ?G ?f i \<cong> ?E};
         Qw_cmpser ?G ?f (Suc ?n) \<cong> ?E |]
      ==> card (?f ` {i. i <= Suc (Suc ?n)}) - 1 =
          Suc (Suc ?n) -
          card {i. i <= Suc ?n & Qw_cmpser ?G ?f i \<cong> ?E}",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_hole 11,
                  template_app (template_hole 11, template_var 1))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_app (template_hole 11, template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app (template_hole 6, t_empty)))),
            template_hole 4),
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 11, template_var 1)),
            template_app
             (template_hole 3, template_app (template_hole 6, t_empty)))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 0),
                  template_app (template_hole 11, template_var 1))),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app (template_hole 6, t_empty)))),
           template_hole 4),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 11,
               template_app (template_hole 11, template_var 1))),
           template_app
            (template_hole 3, template_app (template_hole 6, t_empty)))))),
    ("Algebra3.JHS_Tr1_3",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f; compseries ?G ?s ?g;
         ?i <= ?s * ?r - Suc 0; Suc (rtos ?r ?s ?i) < ?s * ?r;
         Suc ?i < ?s * ?r; ?i mod ?s < ?s - Suc 0;
         Suc ?i div ?s <= ?r - Suc 0; ?i div ?s = ?r - Suc 0 |]
      ==> Group
           (\<natural>\<^bsub>?G\<^esub>?f
   ?r \<diamondop>\<^bsub>?G\<^esub> ?f (?r - Suc 0) Int ?g (?i mod ?s) /
            (?f ?r \<diamondop>\<^bsub>?G\<^esub> ?f (?r - Suc 0) Int
            ?g (Suc (?i mod ?s))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 5)),
        template_inequation (less_than, template_hole 14, template_var 4),
        template_inequation (less_than, template_hole 14, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 4)),
            template_app (template_hole 9, template_hole 14))),
        template_inequation
         (less_than,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 0)),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 4)),
        template_inequation
         (less_than, template_app (template_hole 9, template_var 0),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 4)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 7, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 11, template_var 3),
            template_app (template_hole 9, template_hole 14))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 9, template_var 0)),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 4),
            template_app (template_hole 9, template_hole 14))),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 11, template_var 4),
            template_app (template_hole 9, template_hole 14)))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app (template_var 2, template_var 4)),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_var 2,
                           template_app
                            (template_app
                              (template_hole 11, template_var 4),
                             template_app
                              (template_hole 9, template_hole 14)))),
                       template_app
                        (template_var 1,
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 3)))))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app (template_var 2, template_var 4)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_var 2,
                       template_app
                        (template_app (template_hole 11, template_var 4),
                         template_app
                          (template_hole 9, template_hole 14)))),
                   template_app
                    (template_var 1,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_var 3)))))))
           ))),
    ("Algebra3.JHS_Tr1_6",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f; compseries ?G ?s ?g;
         ?i <= ?r * ?s - Suc 0; Suc (rtos ?r ?s ?i) < ?r * ?s |]
      ==> (\<natural>\<^bsub>?G\<^esub>cmp_rfn ?G ?r ?f ?s ?g ?i /
           cmp_rfn ?G ?r ?f ?s ?g (Suc ?i)) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?g
  (Suc (rtos ?r ?s ?i div
        ?r)) \<diamondop>\<^bsub>?G\<^esub> ?g (rtos ?r ?s ?i div ?r) Int
      ?f (rtos ?r ?s ?i mod ?r) /
           (?g (Suc (Suc (rtos ?r ?s ?i) div
                     ?r)) \<diamondop>\<^bsub>?G\<^esub> ?g
                    (Suc (rtos ?r ?s ?i) div ?r) Int
                   ?f (Suc (rtos ?r ?s ?i) mod ?r)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 5)),
        template_inequation (less_than, template_hole 14, template_var 4),
        template_inequation (less_than, template_hole 14, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3)),
            template_app (template_hole 9, template_hole 14))),
        template_inequation
         (less_than,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 0)),
          template_app
           (template_app (template_hole 10, template_var 4),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 5),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 4, template_var 5),
                               template_var 4),
                             template_var 2),
                           template_var 3),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_var 5),
                           template_var 4),
                         template_var 2),
                       template_var 3),
                     template_var 1),
                   template_app (template_hole 9, template_var 0)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_app
                        (template_var 1,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_app
                                    (template_hole 8, template_var 4),
                                   template_var 3),
                                 template_var 0)),
                             template_var 4)))),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_var 1,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_app
                                    (template_hole 8, template_var 4),
                                   template_var 3),
                                 template_var 0)),
                             template_var 4))),
                       template_app
                        (template_var 2,
                         template_app
                          (template_app
                            (template_hole 0,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 8, template_var 4),
                                 template_var 3),
                               template_var 0)),
                           template_var 4)))))),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_app
                    (template_var 1,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 8, template_var 4),
                                 template_var 3),
                               template_var 0))),
                         template_var 4)))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_var 1,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 8, template_var 4),
                                 template_var 3),
                               template_var 0))),
                         template_var 4))),
                   template_app
                    (template_var 2,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 8, template_var 4),
                               template_var 3),
                             template_var 0))),
                       template_var 4))))))
           ))),
    ("Algebra3.JHS_Tr1_4",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f; compseries ?G ?s ?g;
         ?i <= ?s * ?r - Suc 0; Suc (rtos ?r ?s ?i) < ?s * ?r;
         Suc ?i < ?s * ?r; ?i mod ?s < ?s - Suc 0;
         Suc ?i div ?s <= ?r - Suc 0; ?i div ?s = ?r - Suc 0 |]
      ==> Group
           (\<natural>\<^bsub>?G\<^esub>?g
   (Suc (?i mod
         ?s)) \<diamondop>\<^bsub>?G\<^esub> ?g (?i mod ?s) Int
       ?f (?r - Suc 0) /
            (?g (Suc (Suc (?i mod
                           ?s))) \<diamondop>\<^bsub>?G\<^esub> ?g
                           (Suc (?i mod ?s)) Int
                          ?f 0))",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 5)),
        template_inequation (less_than, template_hole 14, template_var 4),
        template_inequation (less_than, template_hole 14, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 4)),
            template_app (template_hole 9, template_hole 14))),
        template_inequation
         (less_than,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 0)),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 4)),
        template_inequation
         (less_than, template_app (template_hole 9, template_var 0),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 4)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 7, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 11, template_var 3),
            template_app (template_hole 9, template_hole 14))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 9, template_var 0)),
            template_var 3),
          template_app
           (template_app (template_hole 11, template_var 4),
            template_app (template_hole 9, template_hole 14))),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 11, template_var 4),
            template_app (template_hole 9, template_hole 14)))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_var 1,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app (template_hole 7, template_var 0),
                             template_var 3)))),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_var 1,
                           template_app
                            (template_app (template_hole 7, template_var 0),
                             template_var 3))),
                       template_app
                        (template_var 2,
                         template_app
                          (template_app (template_hole 11, template_var 4),
                           template_app
                            (template_hole 9, template_hole 14))))))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_var 1,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 3))))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_var 1,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 3)))),
                   template_app (template_var 2, template_hole 14)))))
           ))),
    ("Algebra3.JHS_Tr1_5",
     "[| Group ?G; 0 < ?r; 0 < ?s; compseries ?G ?r ?f; compseries ?G ?s ?g;
         ?i <= ?s * ?r - Suc 0; Suc (rtos ?r ?s ?i) < ?s * ?r;
         Suc ?i < ?s * ?r; ?i mod ?s < ?s - Suc 0; ?i div ?s < ?r - Suc 0 |]
      ==> (\<natural>\<^bsub>?G\<^esub>?f
  (Suc (?i div
        ?s)) \<diamondop>\<^bsub>?G\<^esub> ?f (?i div ?s) Int
      ?g (?i mod ?s) /
           (?f (Suc (?i div
                     ?s)) \<diamondop>\<^bsub>?G\<^esub> ?f (?i div ?s) Int
                   ?g (Suc (?i mod ?s)))) \<cong>
          (\<natural>\<^bsub>?G\<^esub>?g
  (Suc (?i mod
        ?s)) \<diamondop>\<^bsub>?G\<^esub> ?g (?i mod ?s) Int
      ?f (?i div ?s) /
           (?g (Suc (Suc (rtos ?r ?s ?i) div
                     ?r)) \<diamondop>\<^bsub>?G\<^esub> ?g
                    (Suc (rtos ?r ?s ?i) div ?r) Int
                   ?f (Suc (rtos ?r ?s ?i) mod ?r)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 5)),
        template_inequation (less_than, template_hole 13, template_var 4),
        template_inequation (less_than, template_hole 13, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 5),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 5),
                template_var 3),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 4)),
            template_app (template_hole 8, template_hole 13))),
        template_inequation
         (less_than,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_var 0)),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 4)),
        template_inequation
         (less_than, template_app (template_hole 8, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 4)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 6, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_app (template_hole 8, template_hole 13))),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 10, template_var 4),
            template_app (template_hole 8, template_hole 13)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_app
                          (template_var 2,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 5, template_var 0),
                               template_var 3)))),
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app
                            (template_var 2,
                             template_app
                              (template_app
                                (template_hole 5, template_var 0),
                               template_var 3))),
                         template_app
                          (template_var 1,
                           template_app
                            (template_app (template_hole 6, template_var 0),
                             template_var 3)))))),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_var 2,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 5, template_var 0),
                           template_var 3)))),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_var 2,
                         template_app
                          (template_app (template_hole 5, template_var 0),
                           template_var 3))),
                     template_app
                      (template_var 1,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 6, template_var 0),
                           template_var 3))))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_var 1,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app (template_hole 6, template_var 0),
                             template_var 3)))),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_var 1,
                           template_app
                            (template_app (template_hole 6, template_var 0),
                             template_var 3))),
                       template_app
                        (template_var 2,
                         template_app
                          (template_app (template_hole 5, template_var 0),
                           template_var 3)))))),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_app
                    (template_var 1,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 7, template_var 4),
                                 template_var 3),
                               template_var 0))),
                         template_var 4)))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_var 1,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 7, template_var 4),
                                 template_var 3),
                               template_var 0))),
                         template_var 4))),
                   template_app
                    (template_var 2,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 7, template_var 4),
                               template_var 3),
                             template_var 0))),
                       template_var 4))))))
           )))]:
   (string * thm * template) list
### theory "Draft.Algebra3MoreTemplates"
### 0.502s elapsed time, 0.666s cpu time, 0.087s GC time
val it = (): unit
