Loading theory "HOL-Library.FuncSet" (required by "Draft.Algebra2MoreTemplates" via "Draft.Algebra2" via "Draft.Algebra1")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.140s elapsed time, 0.583s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.214s elapsed time, 0.878s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.319s elapsed time, 1.277s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.384s elapsed time, 1.541s cpu time, 0.117s GC time
Loading theory "Draft.Algebra1" (required by "Draft.Algebra2MoreTemplates" via "Draft.Algebra2")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.885s elapsed time, 3.352s cpu time, 0.835s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  nasc_seq :: "nat set => nat => nat => nat"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.931s elapsed time, 3.405s cpu time, 0.814s GC time
Found termination order: "size <*mlex*> {}"
consts
  ndec_seq :: "nat set => nat => nat => nat"
Found termination order: "size <*mlex*> {}"
consts
  dec_seq :: "int set => int => nat => int"
Found termination order: "size <*mlex*> {}"
instantiation
  ant :: {minus,one,plus,times,uminus,zero,ord}
  less_eq_ant == less_eq :: ant => ant => bool
  less_ant == less :: ant => ant => bool
  zero_ant == zero_class.zero :: ant
  uminus_ant == uminus :: ant => ant
  times_ant == times :: ant => ant => ant
  plus_ant == plus :: ant => ant => ant
  one_ant == one_class.one :: ant
  minus_ant == minus :: ant => ant => ant
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  Amin :: "nat => (nat => ant) => ant"
consts
  Amax :: "nat => (nat => ant) => ant"
Found termination order: "size <*mlex*> {}"
consts
  aasc_seq :: "ant set => ant => nat => ant"
consts
  ASum :: "(nat => ant) => nat => ant"
consts
  Zmax :: "nat => (nat => int) => int"
### theory "HOL-Library.Tree"
### 1.737s elapsed time, 5.449s cpu time, 1.052s GC time
Loading theory "Draft.Templates" (required by "Draft.Algebra2MoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.095s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Algebra2MoreTemplates")
locale Order
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Order D"
locale Torder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Torder D"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.505s elapsed time, 1.046s cpu time, 0.091s GC time
locale Worder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Worder D"
### theory "Draft.Algebra1"
### 2.552s elapsed time, 5.938s cpu time, 1.095s GC time
Loading theory "Draft.Algebra2" (required by "Draft.Algebra2MoreTemplates")
locale Group
  fixes G :: "('a, 'b) Group_scheme"  (structure)
  assumes "Group G"
### theory "Draft.Algebra2"
### 1.987s elapsed time, 2.752s cpu time, 1.080s GC time
Loading theory "Draft.Algebra2MoreTemplates"
val templateLemmas =
   [("Algebra2.Group_Ugp", "Ugp ?G ==> Group ?G",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Algebra2.Worder_refl", "Worder ?S ==> ord_equiv ?S ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 0)
           ))),
    ("Algebra2.ordinal_number_mem_ODnums",
     "Worder ?D ==> ordinal_number ?D : ODnums",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Algebra2.ordinal_inc_self", "Worder ?S ==> ?S : ordinal_number ?S",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebra2.ordinal_number_mem_carrier_ODnods",
     "Worder ?D ==> ordinal_number ?D : carrier ODnods",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Algebra2.ODnum_sub_well_ordered",
     "?S <= ODnums ==> Worder (Iod ODnods ?S)",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 3)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Algebra2.mem_ODnums_nonempty", "?X : ODnums ==> EX x. x : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Algebra2.ODnods_sub_carrier",
     "?S <= ODnums ==> carrier (Iod ODnods ?S) = ?S",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_var 0))),
    ("Algebra2.Ugps_isomorphic", "[| Ugp ?G; Ugp ?E |] ==> ?G \<cong> ?E",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Algebra2.mem_ordinal_number_Worder",
     "[| Worder ?D; ?X : ordinal_number ?D |] ==> Worder ?X",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 2, template_var 0)))),
    ("Algebra2.mem_ordinal_number_Worder1",
     "[| ?x : ODnums; ?X : ?x |] ==> Worder ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Algebra2.ordinal_numberTr1_1",
     "?X : ODnums ==> EX D. Worder D & D : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Algebra2.ordinal_numberTr2",
     "[| Worder ?D; ?x = ordinal_number ?D |] ==> ?D : ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Algebra2.mem_ordinal_number_equiv",
     "[| Worder ?D; ?X : ordinal_number ?D |] ==> ord_equiv ?X ?D",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Algebra2.ordinal_numberTr1",
     "?X : carrier ODnods ==> EX D. Worder D & D : ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_hole 4))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Algebra2.ordinal_numberTr5",
     "[| ?x : ODnums; ?D : ?x |] ==> ?x = ordinal_number ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Algebra2.const_ghom",
     "[| Group ?F; Group ?G |] ==> 1\<^bsub>?F,?G\<^esub> : gHom ?F ?G",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra2.ODnods_segment_inc_ODord",
     "[| Worder ?D; ?y : segment ODnods (ordinal_number ?D) |]
      ==> ?y \<sqsubset> ordinal_number ?D",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Algebra2.Worder_sym",
     "[| Worder ?S; Worder ?T; ord_equiv ?S ?T |] ==> ord_equiv ?T ?S",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Algebra2.ordinal_number_eq",
     "[| Worder ?D; Worder ?E |]
      ==> ord_equiv ?D ?E = (ordinal_number ?D = ordinal_number ?E)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra2.ODnum_equiv_segment",
     "[| Worder ?D; ?x = ordinal_number ?D |]
      ==> ord_equiv (Iod ODnods (segment ODnods ?x)) ?D",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_hole 1),
                   template_var 0))),
             template_var 1)
           ))),
    ("Algebra2.Ugp_const_gbij",
     "[| Ugp ?G; Ugp ?E |]
      ==> gbij\<^bsub>?G,?E\<^esub> (\<lambda>x\<in>carrier ?G.
  \<one>\<^bsub>?E\<^esub>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Algebra2.Worder_ord_equivTr",
     "[| Worder ?S; Worder ?T |]
      ==> ord_equiv ?S ?T = (EX f. ord_isom ?S ?T f)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("Algebra2.ODNmap_mem1",
     "[| Worder ?D; ?y : segment ODnods (ordinal_number ?D) |]
      ==> ODNmap ?D ?y : carrier ?D",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app (template_hole 3, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Algebra2.Ugp_const_gHom",
     "[| Ugp ?G; Ugp ?E |]
      ==> (\<lambda>x\<in>carrier ?G. \<one>\<^bsub>?E\<^esub>)
          : gHom ?G ?E",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, t_empty),
                 template_app (template_hole 1, template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra2.ordinal_numberTr1_2",
     "[| ?x : ODnums; ?S : ?x; ?T : ?x |] ==> ord_equiv ?S ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Algebra2.carr_Ssegment_adjunct_ord",
     "[| Order ?D; ?a ~: carrier ?D |]
      ==> carrier ?D = Ssegment (adjunct_ord ?D ?a) ?a",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)))),
    ("Algebra2.ODord",
     "[| Worder ?D; ?d : carrier ?D |]
      ==> ordinal_number (Iod ?D (segment ?D ?d)) \<sqsubset>
          ordinal_number ?D",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Algebra2.satisfy_cond_mem_set",
     "[| ?x : ?A; ?P ?x |] ==> ?x : {y: ?A. ?P y}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, t_empty))
           ))),
    ("Algebra2.ordinal_numberTr4",
     "[| Worder ?D; ?X : carrier ODnods; ?D : ?X |]
      ==> ?X = ordinal_number ?D",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Algebra2.not_ODord",
     "[| ?a : ODnums; ?b : ODnums; ?a \<sqsubset> ?b |]
      ==> ~ ?b \<sqsubseteq> ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("Algebra2.ODnods_less",
     "[| ?x : carrier ODnods; ?y : carrier ODnods |]
      ==> ?x \<prec>\<^bsub>ODnods\<^esub> ?y = ?x \<sqsubset> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra2.ODord_less_not_eq",
     "[| ?x : carrier ODnods; ?y : carrier ODnods; ?x \<sqsubset> ?y |]
      ==> ?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra2.Ssegment_adjunct_ord",
     "[| Order ?D; ?a ~: carrier ?D |]
      ==> ?D = SIod (adjunct_ord ?D ?a) (Ssegment (adjunct_ord ?D ?a) ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app (template_hole 4, template_var 1))
                )
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 0))))),
    ("Algebra2.ordinal_number_ord",
     "[| ?X : carrier ODnods; ?Y : carrier ODnods |]
      ==> ?X \<sqsubset> ?Y | ?X = ?Y | ?Y \<sqsubset> ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)))
           ))),
    ("Algebra2.ordinal_numberTr3",
     "[| Worder ?D; Worder ?F; ord_equiv ?D ?F; ?x = ordinal_number ?D |]
      ==> ?x = ordinal_number ?F",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0, template_app (template_hole 0, template_var 2))],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Algebra2.ODord_le_ref",
     "[| ?X : ODnums; ?Y : ODnums; ?X \<sqsubseteq> ?Y;
         ?Y \<sqsubseteq> ?X |]
      ==> ?X = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Algebra2.ODordTr1",
     "[| Worder ?D; Worder ?E |]
      ==> ordinal_number ?D \<sqsubset> ordinal_number ?E =
          (EX b:carrier ?E. ord_equiv ?D (Iod ?E (segment ?E b)))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           t_empty)))),
    ("Algebra2.ODNmap_self",
     "[| Worder ?D; ?c : carrier ?D;
         ?a = ordinal_number (Iod ?D (segment ?D ?c)) |]
      ==> ODNmap ?D ?a = ?c",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Algebra2.Worder_ord_isom_mem",
     "[| Worder ?S; Worder ?T; ord_isom ?S ?T ?f; ?a : carrier ?S |]
      ==> ?f ?a : carrier ?T",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Algebra2.Worder_trans",
     "[| Worder ?S; Worder ?T; Worder ?U; ord_equiv ?S ?T;
         ord_equiv ?T ?U |]
      ==> ord_equiv ?S ?U",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Algebra2.restict_ODNmap_func",
     "[| Worder ?D; ?x = ordinal_number ?D |]
      ==> restrict (ODNmap ?D) (segment ODnods (ordinal_number ?D))
          : segment ODnods (ordinal_number ?D) \<rightarrow> carrier ?D",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 7, template_var 1)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 7, template_var 1))),
               t_empty))
           ))),
    ("Algebra2.ODNmap_ord_isom",
     "[| Worder ?D; ?x = ordinal_number ?D |]
      ==> ord_isom (Iod ODnods (segment ODnods ?x)) ?D
           (restrict (ODNmap ?D)
             (carrier (Iod ODnods (segment ODnods ?x))))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 7, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 4),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 4),
                     template_var 0)))))
           ))),
    ("Algebra2.ODord_le_trans",
     "[| ?X : ODnums; ?Y : ODnums; ?Z : ODnums; ?X \<sqsubseteq> ?Y;
         ?Y \<sqsubseteq> ?Z |]
      ==> ?X \<sqsubseteq> ?Z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Algebra2.ODNmapTr1",
     "[| Worder ?D; ?x = ordinal_number ?D; ?y : ODnums;
         ?y \<sqsubset> ?x |]
      ==> ?y = ordinal_number (Iod ?D (segment ?D (ODNmap ?D ?y)))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))))))),
    ("Algebra2.ODnum_segmentTr1",
     "[| Worder ?D; ?x = ordinal_number ?D; ?y : ODnums;
         ?y \<sqsubset> ?x |]
      ==> EX c. c : carrier ?D &
                ?y = ordinal_number (Iod ?D (segment ?D c))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Algebra2.ODnum_subTr",
     "[| Worder ?D; ?x = ordinal_number ?D; ?y : ODnums; ?y \<sqsubset> ?x;
         ?Y : ?y |]
      ==> EX c:carrier ?D. ord_equiv ?Y (Iod ?D (segment ?D c))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_equation
         (template_var 2, template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_hole 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 3)),
             t_empty)
           ))),
    ("Algebra2.ODnum_segmentTr",
     "[| Worder ?D; ?x = ordinal_number ?D; ?y : ODnums;
         ?y \<sqsubset> ?x |]
      ==> EX c. c : carrier ?D &
                (ALL Y:?y. ord_equiv Y (Iod ?D (segment ?D c)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Algebra2.ODNmap_mem",
     "[| Worder ?D; ?x = ordinal_number ?D; ?y : ODnums;
         ?y \<sqsubset> ?x |]
      ==> ODNmap ?D ?y : carrier ?D &
          (ALL Y:?y. ord_equiv Y (Iod ?D (segment ?D (ODNmap ?D ?y))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 0)),
                 template_app (template_hole 4, template_var 2))),
             template_app
              (template_app (template_hole 3, template_var 0), t_empty))
           ))),
    ("Algebra2.Torder_Sadjunction",
     "[| Order ?D; ?X <= carrier ?D; ?a : carrier ?D;
         ALL x:?X. x \<preceq>\<^bsub>?D\<^esub> ?a; Torder (SIod ?D ?X) |]
      ==> Torder (SIod ?D (?X Un {?a}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Algebra2.well_ord_Sadjunction",
     "[| Order ?D; ?X <= carrier ?D; ?a : carrier ?D;
         ALL x:?X. x \<preceq>\<^bsub>?D\<^esub> ?a; Worder (SIod ?D ?X) |]
      ==> Worder (SIod ?D (?X Un {?a}))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Algebra2.ord_less_ODord",
     "[| Worder ?D; ?c : carrier ?D; ?d : carrier ?D;
         ?a = ordinal_number (Iod ?D (segment ?D ?c));
         ?b = ordinal_number (Iod ?D (segment ?D ?d)) |]
      ==> ?c \<prec>\<^bsub>?D\<^esub> ?d = ?a \<sqsubset> ?b",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 4))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3)))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 2))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra2.ODord_ODNmap_less",
     "[| Worder ?D; ?c : carrier ?D;
         ?a = ordinal_number (Iod ?D (segment ?D ?c)); ?d : carrier ?D;
         ?b = ordinal_number (Iod ?D (segment ?D ?d)); ?a \<sqsubset> ?b |]
      ==> ODNmap ?D ?a \<prec>\<^bsub>?D\<^esub> ODNmap ?D ?b",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 4))
            ),
        template_equation
         (template_var 2,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 4))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 1)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.Algebra2MoreTemplates"
### 0.660s elapsed time, 1.545s cpu time, 1.002s GC time
val it = (): unit
