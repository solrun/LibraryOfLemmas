   [("Algebra1.tna_ant", "tna (ant ?z) = ?z",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebra1.na_an", "na (an ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebra1.asprod_1", "1 *\<^sub>a ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Algebra1.asprod_0_x", "0 *\<^sub>a ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Algebra1.asprod_n_0", "?n *\<^sub>a 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Algebra1.aadd_0_l", "0 + ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Algebra1.aadd_0_r", "?x + 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Algebra1.amult_one_l", "1 * ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Algebra1.amult_one_r", "?x * 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Algebra1.a_minus_minus", "- (- ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebra1.card1", "card {?a} = 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Algebra1.asprod_n_1", "?n *\<^sub>a 1 = ant ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Algebra1.a_ipz", "\<infinity> + ant ?z = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Algebra1.aadd_minus_r", "?x + - ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Algebra1.a_zpi", "ant ?z + \<infinity> = \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Algebra1.aadd_minus_inv", "- ?x + ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Algebra1.amult_0_l", "0 * ant ?z = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Algebra1.amult_0_r", "ant ?z * 0 = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Algebra1.slide_sliden", "sliden ?i (slide ?i ?k) = ?k",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Algebra1.amin_commute", "amin ?x ?y = amin ?y ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aadd_commute", "?x + ?y = ?y + ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.amult_commute", "?x * ?y = ?y * ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aminus", "- ant ?m = ant (- ?m)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zdiff", "?z - ?w = ?z + - ?w",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zminus_minus", "?i - - ?j = ?i + ?j",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.zminus_zadd_cancel", "- ?z + (?z + ?w) = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Algebra1.zposs_aposss", "(0 < ?n) = (0 < ant ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zpos_apos", "(0 <= ?n) = (0 <= ant ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zle", "(?z <= ?w) = (~ ?w < ?z)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.not_zless", "(~ ?n < ?m) = (?m <= ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aneg_less", "(~ ?x < ?y) = (?y <= ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.not_zle", "(~ ?n <= ?m) = (?m < ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.nat_not_le_less", "(~ ?n <= ?m) = (?m < ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aneg_le", "(~ ?x <= ?y) = (?y < ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.ant_eq_0_conv", "(ant ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Algebra1.a0_less_int_conv", "(0 < ant ?n) = (0 < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Algebra1.an_Suc", "an (Suc ?n) = an ?n + 1",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Algebra1.a_zpm", "ant ?m + - \<infinity> = - \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Algebra1.a_mpz", "- \<infinity> + ant ?m = - \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 2, template_hole 1))),
    ("Algebra1.zmult_zminus_right", "?w * - ?z = - (?w * ?z)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Algebra1.aless", "(?n < ?m) = (ant ?n < ant ?m)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.ale", "(?n <= ?m) = (ant ?n <= ant ?m)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.aeq_zeq", "(ant ?m = ant ?n) = (?m = ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.aless_natless", "(an ?n < an ?m) = (?n < ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.aless_zless", "(ant ?m < ant ?n) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.ale_natle", "(an ?n <= an ?m) = (?n <= ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.ale_zle", "(ant ?i <= ant ?j) = (?i <= ?j)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.asprod_mult", "?m *\<^sub>a ant ?n = ant (?m * ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.Order_component",
     "?E = (| carrier = carrier ?E, rel = rel ?E |)",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Algebra1.an_npn", "an (?n + ?m) = an ?n + an ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Algebra1.aminus_add_distrib", "- (?z + ?w) = - ?z + - ?w",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Algebra1.a_zdz", "ant ?m - ant ?n = ant (?m - ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.a_zpz", "ant ?m + ant ?n = ant (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.a_z_z", "ant ?m * ant ?n = ant (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.Nset_2", "{?i, ?j} = {?j, ?i}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Algebra1.zneq_aneq", "(?n ~= ?m) = (ant ?n ~= ant ?m)",
     template_bimplication
      (template_negation
        (template_equation (template_var 1, template_var 0)),
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebra1.aneq_natneq", "(an ?n ~= an ?m) = (?n ~= ?m)",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 1, template_var 0))
           ),
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra1.aless_le_not_le", "(?w < ?z) = (?w <= ?z & ~ ?z <= ?w)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Algebra1.minus_SucSuc", "?a - Suc (Suc 0) = ?a - Suc 0 - Suc 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_hole 0))),
         template_app (template_hole 1, template_hole 0)))),
    ("Algebra1.Nset_1_1", "(?k <= Suc 0) = (?k = 0 | ?k = Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_hole 2))
            )],
       template_dunno)),
    ("Algebra1.agsprod_assoc_a",
     "?m *\<^sub>a (?n *\<^sub>a ant ?x) = (?m * ?n) *\<^sub>a ant ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Algebra1.aminus_mult_minus",
     "- ant ?z * ant ?w = - (ant ?z * ant ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.slide_iM", "slide ?i ` {l. 0 <= l} = {k. ?i <= k}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 2, t_empty)),
       template_app (template_hole 2, t_empty))),
    ("Algebra1.im_of_constmap", "constmap {0::?'b} {?a} ` {0::?'b} = {?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Algebra1.Nset_Suc", "{j. j <= Suc ?n} = insert (Suc ?n) {j. j <= ?n}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Algebra1.Nset_un", "{j. j <= Suc ?n} = {j. j <= ?n} Un {Suc ?n}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("Algebra1.Nset_pre1", "{i. i <= Suc ?n} - {Suc ?n} = {i. i <= ?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_hole 0)),
       template_app (template_hole 4, t_empty))),
    ("Algebra1.im_jointfunTr1",
     "jointfun ?n ?f ?m ?g ` {i. i <= ?n} = ?f ` {i. i <= ?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, t_empty)),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app (template_hole 1, t_empty)))),
    ("Algebra1.image_Nset_Suc",
     "?f ` {j. j <= Suc ?n} = insert (?f (Suc ?n)) (?f ` {j. j <= ?n})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_var 1,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("Algebra1.im_Nset_Suc",
     "insert (?f (Suc ?n)) (?f ` {i. i <= ?n}) = ?f ` {i. i <= Suc ?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_var 1,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, t_empty))),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)))),
    ("Algebra1.im_jointfunTr2",
     "jointfun ?n ?f ?m ?g ` nset (Suc ?n) (Suc (?n + ?m)) =
      ?g ` {j. j <= ?m}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)))),
       template_app
        (template_app (template_hole 6, template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("Algebra1.Nset_nset",
     "{i. i <= Suc (?n + ?m)} =
      {i. i <= ?n} Un nset (Suc ?n) (Suc (?n + ?m))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))))),
    ("Algebra1.im_jointfun1",
     "jointfun ?n ?f ?m ?g ` {j. j <= Suc (?n + ?m)} =
      ?f ` {j. j <= ?n} Un ?g ` {j. j <= ?m}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 4, t_empty))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 4, t_empty)))))]
