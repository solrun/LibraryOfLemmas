   [("Algebra1.nat_pos", "0 <= ?l",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Algebra1.self_le", "?n <= ?n",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("Algebra1.subset_self", "?A <= ?A",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("Algebra1.ale_refl", "?w <= ?w",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("Algebra1.inf_ge_any", "?x <= \<infinity>",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("Algebra1.Order_fs", "Order (Order_fs ?A ?B)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Algebra1.finite1", "finite {?a}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Algebra1.n_less_Suc", "?n < Suc ?n",
     template_inequation
      (less_than, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Algebra1.z_less_i", "ant ?x < \<infinity>",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Algebra1.an_nat_pos", "0 <= an ?n",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Algebra1.z_le_i", "ant ?x <= \<infinity>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Algebra1.minf_le_any", "- \<infinity> <= ?x",
     template_inequation
      (less_equals, template_app (template_hole 1, template_hole 0),
       template_var 0)),
    ("Algebra1.z_mem_Z", "ant ?z : Z\<^sub>\<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Algebra1.z_in_aug_minf", "ant ?z : Z\<^sub>-\<^sub>\<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Algebra1.idmap_bij", "bij_to (idmap ?A) ?A ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0),
           template_var 0)
         )),
    ("Algebra1.an_neq_inf", "an ?n ~= \<infinity>",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Algebra1.z_neq_inf", "ant ?z ~= \<infinity>",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Algebra1.not_na_ge_inf", "~ \<infinity> <= an ?n",
     template_negation
      (
         template_inequation
          (less_equals, template_hole 1,
           template_app (template_hole 0, template_var 0))
         )),
    ("Algebra1.tna_ant", "tna (ant ?z) = ?z",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebra1.na_an", "na (an ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebra1.asprod_1", "1 *\<^sub>a ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Algebra1.asprod_0_x", "0 *\<^sub>a ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Algebra1.asprod_n_0", "?n *\<^sub>a 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Algebra1.aadd_0_l", "0 + ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Algebra1.aadd_0_r", "?x + 0 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Algebra1.amult_one_l", "1 * ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Algebra1.amult_one_r", "?x * 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Algebra1.a_minus_minus", "- (- ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Algebra1.m_less_z", "- \<infinity> < ant ?x",
     template_inequation
      (less_than, template_app (template_hole 2, template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Algebra1.zmax_ge_l", "?x <= zmax ?x ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.zmax_ge_r", "?y <= zmax ?x ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.insert_inc1", "?A <= insert ?a ?A",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.sub_Un1", "?B <= ?B Un ?C",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.sub_Un2", "?C <= ?B Un ?C",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.amax_ge_l", "?x <= amax ?x ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.amax_ge_r", "?y <= amax ?x ?y",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.m_le_z", "- \<infinity> <= ant ?x",
     template_inequation
      (less_equals, template_app (template_hole 2, template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Algebra1.amin_le_l", "amin ?x ?y <= ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("Algebra1.amin_le_r", "amin ?x ?y <= ?y",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("Algebra1.insert_inc2", "?a : insert ?a ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Algebra1.minus_an_in_aug_minf",
     "- an ?n : Z\<^sub>-\<^sub>\<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("Algebra1.ant_z_in_Ainteg", "(?z, 0) : Ainteg",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0)
         )),
    ("Algebra1.skip_il_neq_i", "skip ?i ?l ~= ?i",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 1)
         )),
    ("Algebra1.an_neq_minf", "an ?n ~= - \<infinity>",
     template_negation
      (
         template_equation
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Algebra1.z_neq_minf", "ant ?z ~= - \<infinity>",
     template_negation
      (
         template_equation
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Algebra1.not_na_less_minf", "~ an ?n < - \<infinity>",
     template_negation
      (
         template_inequation
          (less_than, template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Algebra1.not_na_le_minf", "~ an ?n <= - \<infinity>",
     template_negation
      (
         template_inequation
          (less_equals, template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Algebra1.a_notin_Ssegment", "?a ~: Ssegment ?D ?a",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))
             )
         )),
    ("Algebra1.card1", "card {?a} = 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Algebra1.asprod_n_1", "?n *\<^sub>a 1 = ant ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Algebra1.a_ipz", "\<infinity> + ant ?z = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Algebra1.aadd_minus_r", "?x + - ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Algebra1.a_zpi", "ant ?z + \<infinity> = \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Algebra1.aadd_minus_inv", "- ?x + ?x = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Algebra1.amult_0_l", "0 * ant ?z = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Algebra1.amult_0_r", "ant ?z * 0 = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Algebra1.Ssegment_sub", "Ssegment ?D ?a <= carrier ?D",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Algebra1.asp_z_Z", "?z *\<^sub>a ant ?x : Z\<^sub>\<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("Algebra1.True_then", "True --> ?P ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_hole 0),
              template_var 0)
            )],
       template_predicate (template_var 0))),
    ("Algebra1.linorder_linear1", "?m < ?n | ?n <= ?m",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Algebra1.ale_linear", "?z <= ?w | ?w <= ?z",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Algebra1.slide_sliden", "sliden ?i (slide ?i ?k) = ?k",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Algebra1.amin_commute", "amin ?x ?y = amin ?y ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aadd_commute", "?x + ?y = ?y + ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.amult_commute", "?x * ?y = ?y * ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aminus", "- ant ?m = ant (- ?m)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Algebra1.nat_le", "?a - (?a + 1) <= 0",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Algebra1.idmap_funcs", "idmap ?A : ?A \<rightarrow> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0), t_empty))
         )),
    ("Algebra1.Nset_inc_0", "0 : {i. i <= ?n}",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, t_empty))
         )),
    ("Algebra1.n_in_Nsetn", "?n : {i. i <= ?n}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, t_empty))
         )),
    ("Algebra1.Nset_nonempty", "{i. i <= ?n} ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 2, t_empty), template_hole 0)
         )),
    ("Algebra1.zdiff", "?z - ?w = ?z + - ?w",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zminus_minus", "?i - - ?j = ?i + ?j",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.zminus_zadd_cancel", "- ?z + (?z + ?w) = ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Algebra1.zposs_aposss", "(0 < ?n) = (0 < ant ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zpos_apos", "(0 <= ?n) = (0 <= ant ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.zle", "(?z <= ?w) = (~ ?w < ?z)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.not_zless", "(~ ?n < ?m) = (?m <= ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aneg_less", "(~ ?x < ?y) = (?y <= ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.not_zle", "(~ ?n <= ?m) = (?m < ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.nat_not_le_less", "(~ ?n <= ?m) = (?m < ?n)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.aneg_le", "(~ ?x <= ?y) = (?y < ?x)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra1.ant_eq_0_conv", "(ant ?n = 0) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Algebra1.a0_less_int_conv", "(0 < ant ?n) = (0 < ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Algebra1.an_Suc", "an (Suc ?n) = an ?n + 1",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_hole 0))),
    ("Algebra1.a_zpm", "ant ?m + - \<infinity> = - \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Algebra1.a_mpz", "- \<infinity> + ant ?m = - \<infinity>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 2, template_hole 1))),
    ("Algebra1.nat_eq_le", "?m = ?n ==> ?m <= ?n",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.eqsets_sub", "?A = ?B ==> ?A <= ?B",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.aeq_ale", "?a = ?b ==> ?a <= ?b",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.zgt_0_zge_1", "0 < ?z ==> 1 <= ?z",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("Algebra1.zless_imp_zle", "?z < ?z' ==> ?z <= ?z'",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.nat_pos2", "?k < ?r ==> 0 < ?r",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("Algebra1.aposs_le_1", "0 < ?x ==> 1 <= ?x",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation (less_equals, template_hole 0, template_var 0))),
    ("Algebra1.aless_imp_le", "?x < ?y ==> ?x <= ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.x_gt_inf", "\<infinity> <= ?x ==> ?x = \<infinity>",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 0)],
       template_equation (template_var 0, template_hole 1))),
    ("Algebra1.pos_in_aug_inf", "0 <= ?x ==> ?x : Z\<^sub>\<infinity>",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Algebra1.zmult_zminus_right", "?w * - ?z = - (?w * ?z)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Algebra1.aless", "(?n < ?m) = (ant ?n < ant ?m)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.ale", "(?n <= ?m) = (ant ?n <= ant ?m)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.aeq_zeq", "(ant ?m = ant ?n) = (?m = ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.aless_natless", "(an ?n < an ?m) = (?n < ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.aless_zless", "(ant ?m < ant ?n) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.ale_natle", "(an ?n <= an ?m) = (?n <= ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.ale_zle", "(ant ?i <= ant ?j) = (?i <= ?j)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebra1.asprod_mult", "?m *\<^sub>a ant ?n = ant (?m * ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.Order_component",
     "?E = (| carrier = carrier ?E, rel = rel ?E |)",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Algebra1.zless_neq", "?i < ?j ==> ?i ~= ?j",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra1.zminus_minus_pos", "?n < 0 ==> 0 < - ?n",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.less_neq", "?n < ?m ==> ?n ~= ?m",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra1.aless_neq", "?x < ?y ==> ?x ~= ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra1.ale_neg", "0 <= ?x ==> - ?x <= 0",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_hole 1))),
    ("Algebra1.nonempty", "?x : ?A ==> ?A ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Algebra1.mem_family_sub_Un", "?A : ?C ==> ?A <= \<Union> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.nat_nonzero_pos", "?a ~= 0 ==> 0 < ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_inequation (less_than, template_hole 1, template_var 0))),
    ("Algebra1.nat_not_less", "~ ?m < ?n ==> ?n <= ?m",
     template_implication
      ([template_negation
         (template_inequation (less_than, template_var 1, template_var 0))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Algebra1.Suc_less_le", "?x < Suc ?n ==> ?x <= ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.Suc_pos", "Suc ?k <= ?r ==> 0 < ?r",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("Algebra1.eq_prop", "[| ?P; ?P = ?Q |] ==> ?Q",
     template_implication
      ([template_predicate (template_var 1),
        template_equation (template_var 1, template_var 0)],
       template_predicate (template_var 0))),
    ("Algebra1.a_b_exchange", "[| ?a; ?a = ?b |] ==> ?b",
     template_implication
      ([template_predicate (template_var 1),
        template_equation (template_var 1, template_var 0)],
       template_predicate (template_var 0))),
    ("Algebra1.an_npn", "an (?n + ?m) = an ?n + an ?m",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Algebra1.aminus_add_distrib", "- (?z + ?w) = - ?z + - ?w",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Algebra1.a_zdz", "ant ?m - ant ?n = ant (?m - ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.a_zpz", "ant ?m + ant ?n = ant (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.a_z_z", "ant ?m * ant ?n = ant (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.image_Nsetn_card_pos", "0 < card (?f ` {i. i <= ?n})",
     template_inequation
      (less_than, template_hole 4,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, t_empty))))),
    ("Algebra1.bsubsetTr", "{x: ?A. ?P x} <= ?A",
     template_inequation
      (less_equals, template_app (template_hole 2, t_empty),
       template_var 1)),
    ("Algebra1.segmap_func",
     "segmap ?D : carrier ?D \<rightarrow> carrier (SS ?D)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty))
         )),
    ("Algebra1.SIod_self", "Order ?D ==> ?D = SIod ?D (carrier ?D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.Ssegment_Worder",
     "Worder ?D ==> Worder (SIod ?D (Ssegment ?D ?a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Algebra1.in_set_with_P", "?P ?x ==> ?x : {y. ?P y}",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, t_empty))
           ))),
    ("Algebra1.eq_elems_eq_val", "?x = ?y ==> ?f ?x = ?f ?y",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app (template_var 0, template_var 2),
         template_app (template_var 0, template_var 1)))),
    ("Algebra1.eq_fun_eq_val", "?f = ?g ==> ?f ?x = ?g ?x",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Algebra1.int_eq", "?m = ?n ==> int ?m = int ?n",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.diff_zero_eq", "?n = 0 ==> ?m = ?m - ?n",
     template_implication
      ([template_equation (template_var 1, template_hole 1)],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.nat_eq_an_eq", "?n = ?m ==> an ?n = an ?m",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.card_eq", "?A = ?B ==> card ?A = card ?B",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.asprod_pos_inf",
     "0 < ?m ==> ?m *\<^sub>a \<infinity> = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Algebra1.less_diff_pos", "?i < ?n ==> 0 < ?n - ?i",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.skip_id", "?l < ?i ==> skip ?i ?l = ?l",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Algebra1.aless_le_suc", "?a < ?b ==> ?a + 1 <= ?b",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Algebra1.aless_diff_poss", "?x < ?y ==> 0 < ?y - ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.aless_minus", "?x < ?y ==> - ?y < - ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Algebra1.nat_0_le", "0 <= ?z ==> int (nat ?z) = ?z",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Algebra1.apos_neq_minf", "0 <= ?a ==> ?a ~= - \<infinity>",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 0)],
       template_negation
        (
           template_equation
            (template_var 0,
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Algebra1.aadd_pos_le", "0 <= ?a ==> ?b <= ?a + ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.aadd_minus_le", "?a <= 0 ==> ?a + ?b <= ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Algebra1.ale_diff_pos", "?x <= ?y ==> 0 <= ?y - ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.ale_minus", "?x <= ?y ==> - ?y <= - ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Algebra1.singleton_sub", "?a : ?A ==> {?a} <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Algebra1.an_na_le", "?j <= an ?n ==> na ?j <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Algebra1.an_inj", "an ?n = an ?m ==> ?n = ?m",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.aless_linear", "?x < ?y | ?x = ?y | ?y < ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)))
         )),
    ("Algebra1.amin_ge", "?x <= amin ?x ?y | ?y <= amin ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Algebra1.amax_le", "amax ?x ?y <= ?x | amax ?x ?y <= ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0))
         )),
    ("Algebra1.Nset_2", "{?i, ?j} = {?j, ?i}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Algebra1.zneq_aneq", "(?n ~= ?m) = (ant ?n ~= ant ?m)",
     template_bimplication
      (template_negation
        (template_equation (template_var 1, template_var 0)),
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebra1.aneq_natneq", "(an ?n ~= an ?m) = (?n ~= ?m)",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 1, template_var 0))
           ),
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra1.rev_map",
     "rev_o : LBset (ant (- ?z)) \<rightarrow> UBset (ant ?z)",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             t_empty))
         )),
    ("Algebra1.a_i_pos", "0 < ?m ==> \<infinity> * ant ?m = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0)),
         template_hole 1))),
    ("Algebra1.a_pos_i", "0 < ?m ==> ant ?m * \<infinity> = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0),
         template_hole 0))),
    ("Algebra1.asprod_neg_inf",
     "?m < 0 ==> ?m *\<^sub>a \<infinity> = - \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_hole 1)))),
    ("Algebra1.asprod_neg_minf",
     "?m < 0 ==> ?m *\<^sub>a (- \<infinity>) = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0)),
         template_hole 0))),
    ("Algebra1.pos_prec_less", "0 < ?i ==> ?i - Suc 0 < ?i",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_hole 2)),
         template_var 0))),
    ("Algebra1.jointgd_tool1", "0 < ?i ==> 0 <= ?i - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_hole 3))))),
    ("Algebra1.less_pre_n", "0 < ?n ==> ?n - Suc 0 < ?n",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_hole 2)),
         template_var 0))),
    ("Algebra1.sliden_inj", "?i < ?j ==> inj_on (sliden ?i) (nset ?i ?j)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.less_le_diff", "?x < ?n ==> ?x <= ?n - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Algebra1.asprod_pos_pos", "0 <= ?x ==> 0 <= int ?n *\<^sub>a ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Algebra1.mem_in_image2", "?a : ?A ==> ?f ?a : ?f ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 0, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Algebra1.inEx", "?x : ?A ==> EX y:?A. y = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Algebra1.elem_some", "?x : ?A ==> EX y:?A. ?x = y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Algebra1.nonempty_ex", "?A ~= {} ==> EX x. x : ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Algebra1.ex_nonempty", "EX x. x : ?A ==> ?A ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Algebra1.a_inv", "?a + ?b = 0 ==> ?a = - ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Algebra1.diff_Suc_pos", "0 < ?a - Suc 0 ==> 0 < ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app
           (template_app (template_hole 1, template_var 0),
            template_app (template_hole 0, template_hole 2)))],
       template_inequation (less_than, template_hole 2, template_var 0))),
    ("Algebra1.le_pre_le", "?x <= ?n - Suc 0 ==> ?x <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_app (template_hole 1, template_hole 0)))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.inEx_rev", "EX y:?A. y = ?x ==> ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Algebra1.psubset_contr", "[| ?A < ?B; ?B < ?A |] ==> False",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate (template_hole 0))),
    ("Algebra1.subset_contr", "[| ?A < ?B; ?B <= ?A |] ==> False",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate (template_hole 0))),
    ("Algebra1.int_neq_iff", "(?w ~= ?z) = (?w < ?z) | ?z < ?w",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("Algebra1.aless_le_not_le", "(?w < ?z) = (?w <= ?z & ~ ?z <= ?w)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Algebra1.Nsetn_sub", "{j. j <= ?n} <= {j. j <= Suc ?n}",
     template_inequation
      (less_equals, template_app (template_hole 2, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Algebra1.add_bothl", "?a = ?b ==> ?c + ?a = ?c + ?b",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.add_both", "?a = ?b ==> ?a + ?c = ?b + ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.asprod_pos_minf",
     "0 < ?m ==> ?m *\<^sub>a (- \<infinity>) = - \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Algebra1.a_i_neg", "?m < 0 ==> \<infinity> * ant ?m = - \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 5)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_hole 2)))),
    ("Algebra1.a_neg_i", "?m < 0 ==> ant ?m * \<infinity> = - \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_app (template_hole 0, template_hole 1)))),
    ("Algebra1.a_neg_m", "?m < 0 ==> ant ?m * - \<infinity> = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0)),
         template_hole 0))),
    ("Algebra1.neg_a_m", "?m < 0 ==> - \<infinity> * ant ?m = \<infinity>",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0)),
         template_hole 1))),
    ("Algebra1.jointgd_tool2", "0 < ?i ==> ?i = Suc (?i - Suc 0)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 1, template_hole 3)))))),
    ("Algebra1.less_mem_of_Nset", "?x < ?n ==> ?x : {i. i <= ?n}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, t_empty))
           ))),
    ("Algebra1.zle_imp_zless_or_eq", "?n <= ?m ==> ?n < ?m | ?n = ?m",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.le_imp_add_int", "?i <= ?j ==> EX k. ?j = ?i + k",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Algebra1.mem_of_Nset", "?x <= ?n ==> ?x : {i. i <= ?n}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, t_empty))
           ))),
    ("Algebra1.inter_mono", "?A <= ?B ==> ?A Int ?C <= ?B Int ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.adiff_le_adiff", "?a <= ?a' ==> ?a - ?b <= ?a' - ?b",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.aadd_le_mono", "?x <= ?y ==> ?x + ?z <= ?y + ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.rev_map_nonempty", "?A ~= {} ==> rev_o ` ?A ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0),
             template_hole 2)
           ))),
    ("Algebra1.le_Suc_diff_le", "?x <= Suc ?n ==> ?x - Suc 0 <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 2, template_hole 0)),
         template_var 0))),
    ("Algebra1.int_equation", "?x = ?y + ?z ==> ?x - ?y = ?z",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Algebra1.family_subset_Un_sub",
     "ALL A:?C. A <= ?B ==> \<Union> ?C <= ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Algebra1.sub_Union", "EX X:?C. ?A <= X ==> ?A <= \<Union> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("Algebra1.Nset_le", "?x : {i. i <= ?n} ==> ?x <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, t_empty))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.minus_SucSuc", "?a - Suc (Suc 0) = ?a - Suc 0 - Suc 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_hole 0))),
         template_app (template_hole 1, template_hole 0)))),
    ("Algebra1.Nset_1_1", "(?k <= Suc 0) = (?k = 0 | ?k = Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 3, template_hole 2)))
           ))),
    ("Algebra1.agsprod_assoc_a",
     "?m *\<^sub>a (?n *\<^sub>a ant ?x) = (?m * ?n) *\<^sub>a ant ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Algebra1.aminus_mult_minus",
     "- ant ?z * ant ?w = - (ant ?z * ant ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.big_int_less",
     "?a - int (nat (\<bar>?a\<bar> + \<bar>?N\<bar> + 1)) < ?N",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0))),
               template_hole 0)))),
       template_var 0)),
    ("Algebra1.a_pos_m",
     "0 < ?m ==> ant ?m * - \<infinity> = - \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Algebra1.a_m_pos",
     "0 < ?m ==> - \<infinity> * ant ?m = - \<infinity>",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 2, template_hole 1)))),
    ("Algebra1.asprod_amult", "0 < ?z ==> ?z *\<^sub>a ?x = ant ?z * ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Algebra1.skip_im_Tr0_1", "0 < ?y ==> skip 0 (?y - Suc 0) = ?y",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_hole 4))),
         template_var 0))),
    ("Algebra1.transpos_id_2",
     "?i <= ?n ==> transpos ?i ?n (Suc ?n) = Suc ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.ex_nonempty_set", "EX a. ?P a ==> {x. ?P x} ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Algebra1.non_zero_int", "?n ~= 0 ==> 0 < ?n | ?n < 0",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 2))
           ))),
    ("Algebra1.nonempty_some", "?A ~= {} ==> (SOME x. x : ?A) : ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0)
           ))),
    ("Algebra1.not_subseteq", "~ ?A <= ?B ==> EX a:?A. a ~: ?B",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_equals, template_var 1, template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Algebra1.not_eq_outside", "?a ~: ?A ==> ALL b:?A. b ~= ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Algebra1.diff_disj", "?x ~: ?A ==> ?A - {?x} = ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Algebra1.Ssegment_free",
     "?a ~: carrier ?D ==> Ssegment ?D ?a = carrier ?D",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Algebra1.image_sub0", "?f : ?A \<rightarrow> ?B ==> ?f ` ?A <= ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1), t_empty))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Algebra1.in_diff1", "?x : ?A - {?a} ==> ?x ~= ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_hole 2)))
            )],
       template_negation
        (template_equation (template_var 2, template_var 0)))),
    ("Algebra1.restrict_inj",
     "[| inj_on ?f ?A; ?A1.0 <= ?A |] ==> inj_on ?f ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Algebra1.box_equation", "[| ?a = ?b; ?a = ?c |] ==> ?b = ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_equation (template_var 2, template_var 0)],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.ineq_conv1", "[| ?a = ?b; ?a < ?c |] ==> ?b < ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Algebra1.less_convert2", "[| ?a = ?b; ?b < ?c |] ==> ?a < ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Algebra1.less_convert", "[| ?a = ?b; ?c < ?b |] ==> ?c < ?a",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("Algebra1.le_convert", "[| ?a = ?b; ?a <= ?c |] ==> ?b <= ?c",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.ge_convert", "[| ?a = ?b; ?c <= ?a |] ==> ?c <= ?b",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Algebra1.less_convert1", "[| ?a = ?c; ?a < ?b |] ==> ?c < ?b",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Algebra1.zless_zle_trans", "[| ?i < ?j; ?j <= ?k |] ==> ?i < ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Algebra1.aless_trans", "[| ?x < ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Algebra1.aless_le_trans", "[| ?x < ?y; ?y <= ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Algebra1.zle_zless_trans", "[| ?i <= ?j; ?j < ?k |] ==> ?i < ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Algebra1.ale_trans", "[| ?i <= ?j; ?j <= ?k |] ==> ?i <= ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Algebra1.ale_less_trans", "[| ?x <= ?y; ?y < ?z |] ==> ?x < ?z",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Algebra1.ale_antisym", "[| ?x <= ?y; ?y <= ?x |] ==> ?x = ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.eq_elem_in", "[| ?a : ?A; ?a = ?b |] ==> ?b : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_equation (template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Algebra1.eq_set_inc", "[| ?a : ?A; ?A = ?B |] ==> ?a : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Algebra1.slide_iM", "slide ?i ` {l. 0 <= l} = {k. ?i <= k}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 2, t_empty)),
       template_app (template_hole 2, t_empty))),
    ("Algebra1.SIod_carr_Ssegment",
     "Order ?D ==> carrier (SIod ?D (Ssegment ?D ?a)) = Ssegment ?D ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.int_nat_minus", "0 < ?n ==> nat (?n - 1) = nat ?n - 1",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           template_hole 0)))),
    ("Algebra1.card_nset", "?i < ?j ==> card (nset ?i ?j) = Suc (?j - ?i)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Algebra1.jointgd_tool4", "?n < ?i ==> ?i - ?n = Suc (?i - Suc ?n)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Algebra1.aadd_less_mono_z", "?x < ?y ==> ?x + ant ?z < ?y + ant ?z",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.Suc_Suc_less", "Suc 0 < ?a ==> Suc (?a - Suc (Suc 0)) < ?a",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 2, template_hole 1),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_hole 2,
               template_app (template_hole 2, template_hole 1)))),
         template_var 0))),
    ("Algebra1.no_meet1", "?A Int ?B = {} ==> ALL a:?A. a ~: ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("Algebra1.no_meet2", "?A Int ?B = {} ==> ALL a:?B. a ~: ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Algebra1.insert_diff", "?A <= insert ?b ?B ==> ?A - {?b} <= ?B",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Algebra1.mem_in_image3", "?b : ?f ` ?A ==> EX a:?A. ?b = ?f a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Algebra1.surj_to_image",
     "?f : ?A \<rightarrow> ?B ==> surj_to ?f ?A (?f ` ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Algebra1.SIod_Order",
     "[| Order ?D; ?T <= carrier ?D |] ==> Order (SIod ?D ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.SIod_Torder",
     "[| Torder ?D; ?X <= carrier ?D |] ==> Torder (SIod ?D ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.SIod_Worder",
     "[| Worder ?D; ?T <= carrier ?D |] ==> Worder (SIod ?D ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.nonempty_card_pos",
     "[| finite ?A; ?A ~= {} |] ==> 0 < card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.eq_le_not", "[| ?a <= ?b; ~ ?a < ?b |] ==> ?a = ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_inequation (less_than, template_var 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.noteq_le_less", "[| ?m <= ?n; ?m ~= ?n |] ==> ?m < ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Algebra1.ale_neq_less", "[| ?x <= ?y; ?x ~= ?y |] ==> ?x < ?y",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Algebra1.mem_ant",
     "?a = - \<infinity> | (EX z. ?a = ant z) | ?a = \<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 1, t_empty)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 2)))
         )),
    ("Algebra1.im_of_constmap", "constmap {0::?'b} {?a} ` {0::?'b} = {?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Algebra1.Nset_Suc", "{j. j <= Suc ?n} = insert (Suc ?n) {j. j <= ?n}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Algebra1.slide_inj",
     "?i < ?j ==> inj_on (slide ?i) {k. k <= ?j - ?i}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Algebra1.an_ndn", "?n <= ?m ==> an (?m - ?n) = an ?m - an ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("Algebra1.nonempty_int", "?A Int ?B ~= {} ==> EX x. x : ?A Int ?B",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Algebra1.skip_im_Tr0", "?x : {i. i <= ?n} ==> skip 0 ?x = Suc ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Algebra1.skip_im_Tr3", "?x : {i. i <= ?n} ==> skip (Suc ?n) ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("Algebra1.nonempty_card_pos1",
     "[| finite ?A; ?A ~= {} |] ==> Suc 0 <= card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.card_nonzero", "[| finite ?A; card ?A ~= 0 |] ==> ?A ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Algebra1.ex_conjI", "[| ?P ?c; ?Q ?c |] ==> EX c. ?P c & ?Q c",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Algebra1.restrictfun_inj",
     "[| inj_on ?f ?A; ?A1.0 <= ?A |] ==> inj_on (restrict ?f ?A1.0) ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 0)
           ))),
    ("Algebra1.funcTr1", "[| ?f = ?g; ?a : ?A |] ==> ?f ?a = ?g ?a",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 3, template_var 1),
         template_app (template_var 2, template_var 1)))),
    ("Algebra1.amult_pos",
     "[| 0 < ?b; 0 <= ?x |] ==> ?x <= ?b *\<^sub>a ?x",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.zmult_pos_pos", "[| 0 < ?i; 0 < ?j |] ==> 0 < ?i * ?j",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.zmult_pos_neg", "[| 0 < ?i; ?j < 0 |] ==> ?i * ?j < 0",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 1))),
    ("Algebra1.mult_pos_iff", "[| 0 < ?i; 0 <= ?i * ?j |] ==> 0 <= ?j",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_hole 2, template_var 0))),
    ("Algebra1.int_pos_mult_monol",
     "[| 0 < ?m; 0 <= ?n * ?m |] ==> 0 <= ?n",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_inequation (less_equals, template_hole 2, template_var 0))),
    ("Algebra1.int_pos_mult_monor",
     "[| 0 < ?n; 0 <= ?n * ?m |] ==> 0 <= ?m",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_hole 2, template_var 0))),
    ("Algebra1.zdiv_pos_pos_l", "[| 0 < ?w; 0 <= ?z * ?w |] ==> 0 <= ?z",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_inequation (less_equals, template_hole 2, template_var 0))),
    ("Algebra1.zmult_neg_pos", "[| ?i < 0; 0 < ?j |] ==> ?i * ?j < 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_hole 1))),
    ("Algebra1.zmult_neg_neg", "[| ?i < 0; ?j < 0 |] ==> 0 < ?i * ?j",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 1),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.aadd_poss_pos", "[| 0 < ?x; 0 <= ?y |] ==> 0 < ?x + ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.amin_gt", "[| ?z < ?x; ?z < ?y |] ==> ?z < amin ?x ?y",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.zdiv_positive", "[| 0 <= ?a; 0 < ?b |] ==> 0 <= ?a div ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.pos_zmult_pos", "[| 0 <= ?a; 0 < ?b |] ==> ?a <= ?a * ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.insert_sub",
     "[| ?A <= ?B; ?a : ?B |] ==> insert ?a ?A <= ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("Algebra1.aadd_pos_poss", "[| 0 <= ?x; 0 < ?y |] ==> 0 < ?x + ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.aadd_two_pos", "[| 0 <= ?x; 0 <= ?y |] ==> 0 <= ?x + ?y",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.age_diff_le", "[| ?a <= ?c; 0 <= ?b |] ==> ?a - ?b <= ?c",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Algebra1.amax_le_n", "[| ?x <= ?n; ?y <= ?n |] ==> amax ?x ?y <= ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Algebra1.amin_ge1", "[| ?z <= ?x; ?z <= ?y |] ==> ?z <= amin ?x ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.amin_mem_i",
     "[| ?x : Z\<^sub>\<infinity>; ?y : Z\<^sub>\<infinity> |]
      ==> amin ?x ?y : Z\<^sub>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Algebra1.Zinf_pOp_closed",
     "[| ?x : Z\<^sub>\<infinity>; ?y : Z\<^sub>\<infinity> |]
      ==> ?x + ?y : Z\<^sub>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Algebra1.amax_mem_m",
     "[| ?x : Z\<^sub>-\<^sub>\<infinity>;
         ?y : Z\<^sub>-\<^sub>\<infinity> |]
      ==> amax ?x ?y : Z\<^sub>-\<^sub>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Algebra1.Zminf_pOp_closed",
     "[| ?x : Z\<^sub>-\<^sub>\<infinity>;
         ?y : Z\<^sub>-\<^sub>\<infinity> |]
      ==> ?x + ?y : Z\<^sub>-\<^sub>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Algebra1.apos_natpos",
     "[| ?a ~= \<infinity>; 0 <= ?a |] ==> 0 <= na ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.aposs_tna_poss",
     "[| ?n ~= \<infinity>; 0 < ?n |] ==> 0 < tna ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.aposs_na_poss",
     "[| ?n ~= \<infinity>; 0 < ?n |] ==> 0 < na ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.apos_tna_pos",
     "[| ?n ~= \<infinity>; 0 <= ?n |] ==> 0 <= tna ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.apos_na_pos",
     "[| ?n ~= \<infinity>; 0 <= ?n |] ==> 0 <= na ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.eq_set_not_inc", "[| ?a ~: ?A; ?A = ?B |] ==> ?a ~: ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            ),
        template_equation (template_var 1, template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)
               )
           ))),
    ("Algebra1.forall_spec", "[| ALL b. ?P b --> ?Q b; ?P ?a |] ==> ?Q ?a",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Algebra1.Amin_memTr",
     "?f : {i. i <= ?n} \<rightarrow> Z\<^sub>\<infinity> -->
      Amin ?n ?f : Z\<^sub>\<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 2))
         )),
    ("Algebra1.Amax_memTr",
     "?f : {i. i <= ?n} \<rightarrow> Z\<^sub>-\<^sub>\<infinity> -->
      Amax ?n ?f : Z\<^sub>-\<^sub>\<infinity>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 2))
         )),
    ("Algebra1.skip_fun",
     "skip ?i : {i. i <= ?n} \<rightarrow> {i. i <= Suc ?n}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             t_empty))
         )),
    ("Algebra1.asprod_pos_mono",
     "0 < ?w ==> (?w *\<^sub>a ?x <= ?w *\<^sub>a ?y) = (?x <= ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Algebra1.less_diff_Suc", "?i < ?n ==> ?n - Suc ?i = ?n - ?i - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_hole 0))))),
    ("Algebra1.diff_Suc", "?n <= ?m ==> ?m - ?n + Suc 0 = Suc ?m - ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_hole 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1)))),
    ("Algebra1.Nset2_prep2", "?x : ?A ==> ?A - {?x} Un {?x} = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Algebra1.mem_aug_minf",
     "?a : Z\<^sub>-\<^sub>\<infinity> ==>
      ?a = - \<infinity> | (EX z. ?a = ant z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Algebra1.less_le_diff1", "?n ~= 0 ==> (?m < ?n) = (?m <= ?n - Suc 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_hole 5)))))),
    ("Algebra1.not_sub", "~ ?A <= ?B ==> EX a. a : ?A & a ~: ?B",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_equals, template_var 1, template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Algebra1.le_Suc_mem_Nsetn",
     "?x <= Suc ?n ==> ?x - Suc 0 : {i. i <= ?n}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 4, template_hole 1))),
             template_app (template_hole 0, t_empty))
           ))),
    ("Algebra1.ant_minus_inj", "ant ?z ~= ant ?w ==> - ant ?z ~= - ant ?w",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Algebra1.func_to_img",
     "?f : ?A \<rightarrow> ?B ==> ?f : ?A \<rightarrow> ?f ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1), t_empty))
           ))),
    ("Algebra1.SIod_carrier",
     "[| Order ?D; ?T <= carrier ?D |] ==> carrier (SIod ?D ?T) = ?T",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Algebra1.amult_pos1", "[| 0 < ?b; 0 <= ?x |] ==> ?x <= ant ?b * ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Algebra1.a_a_z_0", "[| 0 < ?z; ?a * ant ?z = 0 |] ==> ?a = 0",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0),
            template_app (template_hole 1, template_var 1)),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Algebra1.asprod_0", "[| ?z ~= 0; ?z *\<^sub>a ?x = 0 |] ==> ?x = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 0, template_hole 0))),
    ("Algebra1.an_na",
     "[| ?a ~= \<infinity>; 0 <= ?a |] ==> an (na ?a) = ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_inequation (less_equals, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Algebra1.skip_im_Tr1_2",
     "[| ?i <= Suc ?n; ?x < ?i |] ==> skip ?i ?x = ?x",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 0))),
    ("Algebra1.in_un2", "[| ?x : ?A Un ?B; ?x ~: ?A |] ==> ?x : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Algebra1.in_un1", "[| ?x : ?A Un ?B; ?x ~: ?B |] ==> ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 1)
           ))),
    ("Algebra1.Nset_un", "{j. j <= Suc ?n} = {j. j <= ?n} Un {Suc ?n}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("Algebra1.Nset_pre1", "{i. i <= Suc ?n} - {Suc ?n} = {i. i <= ?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 2, template_var 0)),
           template_hole 0)),
       template_app (template_hole 4, t_empty))),
    ("Algebra1.set_of_hom",
     "ALL x:?A. ?f x : ?B ==> restrict ?f ?A : ?A \<rightarrow> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 2), t_empty))
           ))),
    ("Algebra1.Nsetn_sub_mem",
     "?l : {j. j <= ?n} ==> ?l : {j. j <= Suc ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, t_empty))
           ))),
    ("Algebra1.Amin_mem_mem",
     "ALL j<=?n. ?f j : Z\<^sub>\<infinity> ==>
      Amin ?n ?f : Z\<^sub>\<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Algebra1.Amax_mem_mem",
     "ALL j<=?n. ?f j : Z\<^sub>-\<^sub>\<infinity> ==>
      Amax ?n ?f : Z\<^sub>-\<^sub>\<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Algebra1.ant_tna",
     "?x ~= \<infinity> & ?x ~= - \<infinity> ==> ant (tna ?x) = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_hole 3))),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 2, template_hole 3))))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Algebra1.Amin_mem",
     "?f : {i. i <= ?n} \<rightarrow> Z\<^sub>\<infinity> ==>
      Amin ?n ?f : Z\<^sub>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 2)
           ))),
    ("Algebra1.Amax_mem",
     "?f : {i. i <= ?n} \<rightarrow> Z\<^sub>-\<^sub>\<infinity> ==>
      Amax ?n ?f : Z\<^sub>-\<^sub>\<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 2)
           ))),
    ("Algebra1.Nset2_prep1",
     "[| finite ?A; card ?A = Suc (Suc ?n) |] ==> EX x. x : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 2, template_var 0)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Algebra1.zmult_eq", "[| 0 < ?w; ?z = ?z' |] ==> ?w * ?z = ?w * ?z'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.zmult_eq_r", "[| 0 < ?w; ?z = ?z' |] ==> ?z * ?w = ?z' * ?w",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Algebra1.zdiv_eq_r", "[| 0 < ?w; ?w * ?z = ?w * ?z' |] ==> ?z = ?z'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.zdiv_eq_l", "[| 0 < ?w; ?z * ?w = ?z' * ?w |] ==> ?z = ?z'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.zmult_pos_mono",
     "[| 0 < ?w; ?w * ?z <= ?w * ?z' |] ==> ?z <= ?z'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.zdiv_pos_mono_l",
     "[| 0 < ?w; ?z * ?w <= ?z' * ?w |] ==> ?z <= ?z'",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.int_mult_mono",
     "[| ?i < ?j; 0 < ?k |] ==> ?k * ?i < ?k * ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.zmult_zless_mono_neg",
     "[| ?i < ?j; ?k < 0 |] ==> ?j * ?k < ?i * ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.zmult_zle_mono_r",
     "[| ?i <= ?j; 0 < ?k |] ==> ?i * ?k <= ?j * ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.zmult_zle_mono",
     "[| ?i <= ?j; 0 < ?k |] ==> ?k * ?i <= ?k * ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.int_mult_le1",
     "[| ?i <= ?j; 0 <= ?k |] ==> ?i * ?k <= ?j * ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra1.int_mult_le",
     "[| ?i <= ?j; 0 <= ?k |] ==> ?k * ?i <= ?k * ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.zmult_zle_mono1_neg",
     "[| ?i <= ?j; ?k <= 0 |] ==> ?j * ?k <= ?i * ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.zadd_zle_mono",
     "[| ?w' <= ?w; ?z' <= ?z |] ==> ?w' + ?z' <= ?w + ?z",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.int_subsets",
     "[| ?A1.0 <= ?A; ?B1.0 <= ?B |] ==> ?A1.0 Int ?B1.0 <= ?A Int ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.noninf_mem_Z",
     "[| ?x : Z\<^sub>\<infinity>; ?x ~= \<infinity> |]
      ==> EX z. ?x = ant z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Algebra1.diff_nonempty", "[| ?A ~= ?B; ?B <= ?A |] ==> ?A - ?B ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Algebra1.skip_im_Tr4",
     "[| ?x <= Suc ?n; 0 < ?x |] ==> ?x - Suc 0 <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0)),
        template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_hole 1)),
         template_var 0))),
    ("Algebra1.Order_comp_eq",
     "[| carrier ?E = carrier ?F; rel ?E = rel ?F |] ==> ?E = ?F",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.AMin_mem",
     "[| ?A <= LBset (ant ?z); ?A ~= {} |] ==> AMin ?A : ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Algebra1.AMax_mem",
     "[| ?A <= UBset (ant ?z); ?A ~= {} |] ==> AMax ?A : ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Algebra1.funcset_mem",
     "[| ?f : ?A \<rightarrow> ?B; ?x : ?A |] ==> ?f ?x : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 0)),
             template_var 1)
           ))),
    ("Algebra1.nsetnm_sub_mem",
     "ALL j. j : nset ?n (?n + ?m) --> j : nset ?n (Suc (?n + ?m))",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Algebra1.Nsetn_sub_mem1",
     "ALL j. j : {j. j <= ?n} --> j : {j. j <= Suc ?n}",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Algebra1.amult_pos_mono_r",
     "0 < ?w ==> (?x * ant ?w <= ?y * ant ?w) = (?x <= ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Algebra1.amult_pos_mono_l",
     "0 < ?w ==> (ant ?w * ?x <= ant ?w * ?y) = (?x <= ?y)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Algebra1.amin_mult_pos",
     "0 < ?z ==>
      amin (?z *\<^sub>a ?x) (?z *\<^sub>a ?y) = ?z *\<^sub>a amin ?x ?y",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Algebra1.slide_surj",
     "?i < ?j ==> surj_to (slide ?i) {l. l <= ?j - ?i} (nset ?i ?j)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 3, t_empty)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.sliden_surj",
     "?i < ?j ==> surj_to (sliden ?i) (nset ?i ?j) {k. k <= ?j - ?i}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Algebra1.nat_not_less1",
     "?n ~= 0 ==> (~ ?m < ?n) = (~ ?m <= ?n - Suc 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_hole 5))))))),
    ("Algebra1.ex_Nleast",
     "?A ~= {} ==> EX! m. m : ?A & (ALL x:?A. m <= x)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra1.Nleast",
     "?A ~= {} ==> Nleast ?A : ?A & (ALL x:?A. Nleast ?A <= x)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0), t_empty))
           ))),
    ("Algebra1.im_set_un2",
     "?A = ?A1.0 Un ?A2.0 ==> ?f ` ?A = ?f ` ?A1.0 Un ?f ` ?A2.0",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 3),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Algebra1.Suc_Suc_Tr",
     "Suc (Suc 0) <= ?n ==> Suc (?n - Suc (Suc 0)) = ?n - Suc 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 3, template_hole 2)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_hole 3,
               template_app (template_hole 3, template_hole 2)))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_hole 2))))),
    ("Algebra1.bex_nonempty_set", "EX x:?A. ?P x ==> {x: ?A. ?P x} ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 3, t_empty), template_hole 0)
           ))),
    ("Algebra1.Ssegment_inc_psub",
     "[| Order ?D; ?x : Ssegment ?D ?a |]
      ==> Ssegment ?D ?x < Ssegment ?D ?a",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Algebra1.nonequiv_Ssegment",
     "[| Worder ?D; ?a : carrier ?D |]
      ==> ~ ord_equiv ?D (SIod ?D (Ssegment ?D ?a))",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))
               )
           ))),
    ("Algebra1.Suc_neq", "[| 0 < ?i; ?i - Suc 0 < ?l |] ==> ?i ~= Suc ?l",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_hole 4)),
          template_var 0)],
       template_negation
        (
           template_equation
            (template_var 1, template_app (template_hole 2, template_var 0))
           ))),
    ("Algebra1.asprod_ge",
     "[| 0 < ?b; ?N ~= 0 |] ==> an ?N <= int ?N *\<^sub>a ?b",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Algebra1.surj_to_el2",
     "[| surj_to ?f ?A ?B; ?b : ?B |] ==> EX a:?A. ?f a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Algebra1.in_diff", "[| ?x ~= ?a; ?x : ?A |] ==> ?x : ?A - {?a}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)))
           ))),
    ("Algebra1.asprod_div_eq",
     "[| ?n ~= 0; ?n *\<^sub>a ?x = ?n *\<^sub>a ?y |] ==> ?x = ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.sets_not_eq",
     "[| ?A ~= ?B; ?B <= ?A |] ==> EX a:?A. a ~: ?B",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Algebra1.sub_single", "[| ?A ~= {}; ?A <= {?a} |] ==> ?A = {?a}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 0, template_var 0),
            template_hole 2))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_hole 2)))),
    ("Algebra1.ge2_zmult_pos", "[| 2 <= ?m; 0 < ?z |] ==> 1 < int ?m * ?z",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)),
          template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Algebra1.image_sub",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A |] ==> ?f ` ?A1.0 <= ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_var 1))),
    ("Algebra1.funcset_mem1",
     "[| ALL l:?A. ?f l : ?B; ?x : ?A |] ==> ?f ?x : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 0)),
             template_var 1)
           ))),
    ("Algebra1.im_jointfunTr1",
     "jointfun ?n ?f ?m ?g ` {i. i <= ?n} = ?f ` {i. i <= ?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, t_empty)),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app (template_hole 1, t_empty)))),
    ("Algebra1.Nset_pre_sub",
     "0 < ?k ==> {j. j <= ?k - Suc 0} <= {j. j <= ?k}",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Algebra1.asprod_distrib1",
     "?m ~= 0 ==>
      ?m *\<^sub>a (?x + ?y) = ?m *\<^sub>a ?x + ?m *\<^sub>a ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Algebra1.skip_mem",
     "?l : {i. i <= ?n} ==> skip ?i ?l : {i. i <= Suc ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Algebra1.times_1_both",
     "[| 0 < ?z; ?z * ?z' = 1 |] ==> ?z = 1 & ?z' = 1",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Algebra1.jointgd_tool3",
     "[| 0 < ?i; ?i <= ?m |] ==> ?i - Suc 0 <= ?m - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_hole 3)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_hole 3))))),
    ("Algebra1.gt_a0_ge_aN",
     "[| 0 < ?x; ?N ~= 0 |] ==> ant (int ?N) <= int ?N *\<^sub>a ?x",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_var 1)))),
    ("Algebra1.funcs_nonempty",
     "[| ?A ~= {}; ?B ~= {} |] ==> ?A \<rightarrow> ?B ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1), t_empty),
             template_hole 0)
           ))),
    ("Algebra1.eq_fun",
     "[| ?f : ?A \<rightarrow> ?B; ?f = ?g |] ==> ?g : ?A \<rightarrow> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2), t_empty))
            ),
        template_equation (template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 2), t_empty))
           ))),
    ("Algebra1.extend_fun",
     "[| ?f : ?A \<rightarrow> ?B; ?B <= ?B1.0 |]
      ==> ?f : ?A \<rightarrow> ?B1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2), t_empty))
           ))),
    ("Algebra1.invim",
     "[| ?f : ?A \<rightarrow> ?B; ?B1.0 <= ?B |]
      ==> invim ?f ?A ?B1.0 <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_var 2))),
    ("Algebra1.mem_in_image",
     "[| ?f : ?A \<rightarrow> ?B; ?a : ?A |] ==> ?f ?a : ?f ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Algebra1.image_Nset_Suc",
     "?f ` {j. j <= Suc ?n} = insert (?f (Suc ?n)) (?f ` {j. j <= ?n})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_var 1,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("Algebra1.im_Nset_Suc",
     "insert (?f (Suc ?n)) (?f ` {i. i <= ?n}) = ?f ` {i. i <= Suc ?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_var 1,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, t_empty))),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, t_empty)))),
    ("Algebra1.sliden_hom",
     "?i < ?j ==> sliden ?i : nset ?i ?j \<rightarrow> {k. k <= ?j - ?i}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               t_empty))
           ))),
    ("Algebra1.slide_hom",
     "?i <= ?j ==> slide ?i : {l. l <= ?j - ?i} \<rightarrow> nset ?i ?j",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               t_empty))
           ))),
    ("Algebra1.SIod_sub_sub",
     "[| ?S <= ?T; ?T <= carrier ?D |]
      ==> SIod (SIod ?D ?T) ?S = SIod ?D ?S",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Algebra1.aeq_mult",
     "[| ?z ~= 0; ?a = ?b |] ==> ?a * ant ?z = ?b * ant ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Algebra1.adiv_eq",
     "[| ?z ~= 0; ?a * ant ?z = ?b * ant ?z |] ==> ?a = ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_app (template_hole 0, template_var 2)))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.amult_eq_eq_l",
     "[| ?z ~= 0; ant ?z * ?a = ant ?z * ?b |] ==> ?a = ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 2)),
            template_var 1),
          template_app
           (template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 2)),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.not_sub_single",
     "[| ?A ~= {}; ?A ~= {?a} |] ==> ~ ?A <= {?a}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 1, template_var 0),
                template_hole 2))
            )],
       template_negation
        (
           template_inequation
            (less_equals, template_var 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 2))
           ))),
    ("Algebra1.mem_in_image1",
     "[| ALL l:?A. ?f l : ?B; ?a : ?A |] ==> ?f ?a : ?f ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_var 2, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3))
           ))),
    ("Algebra1.pos_mult_r_gt",
     "[| 0 < ?w; ?i <= ?j; 0 <= ?i |] ==> ?i <= ?j * ?w",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Algebra1.pos_mult_l_gt",
     "[| 0 < ?w; ?i <= ?j; 0 <= ?i |] ==> ?i <= ?w * ?j",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.proper_subset",
     "[| ?A <= ?B; ?x ~: ?A; ?x : ?B |] ==> ?A ~= ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_negation
        (template_equation (template_var 2, template_var 1)))),
    ("Algebra1.age_plus",
     "[| 0 <= ?a; 0 <= ?b; ?a + ?b <= ?c |] ==> ?a <= ?c",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 2),
        template_inequation (less_equals, template_hole 1, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Algebra1.im_jointfunTr2",
     "jointfun ?n ?f ?m ?g ` nset (Suc ?n) (Suc (?n + ?m)) =
      ?g ` {j. j <= ?m}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)))),
       template_app
        (template_app (template_hole 6, template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("Algebra1.amin_amult_pos",
     "0 < ?z ==> amin (ant ?z * ?x) (ant ?z * ?y) = ant ?z * amin ?x ?y",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Algebra1.Nset2finite_inj_tr0",
     "?j : {i. i <= ?n} ==> card ({i. i <= ?n} - {?j}) = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 6, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("Algebra1.restrict_fun_eq",
     "ALL x:?A. ?f x = ?g x ==> restrict ?f ?A = restrict ?g ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, t_empty), template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("Algebra1.asprod_minus",
     "?x ~= - \<infinity> & ?x ~= \<infinity> ==>
      - ?z *\<^sub>a ?x = ?z *\<^sub>a (- ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_app (template_hole 2, template_hole 1)))),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("Algebra1.SIod_isom_Iod",
     "[| Order ?D; ?T <= carrier ?D |]
      ==> ord_isom (SIod ?D ?T) (Iod ?D ?T) (\<lambda>x\<in>?T. x)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, t_empty), template_var 0))
           ))),
    ("Algebra1.r_idmap_comp",
     "[| ?f : extensional ?A; ?f : ?A \<rightarrow> ?B |]
      ==> compose ?A ?f (idmap ?A) = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 2))),
    ("Algebra1.l_idmap_comp",
     "[| ?f : extensional ?A; ?f : ?A \<rightarrow> ?B |]
      ==> compose ?A (idmap ?B) ?f = ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_var 2),
         template_var 2))),
    ("Algebra1.sub_inserted1",
     "[| ?Y <= insert ?a ?X; ~ ?Y <= ?X |] ==> ?a ~: ?X & ?a : ?Y",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_negation
         (
            template_inequation
             (less_equals, template_var 2, template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Algebra1.restrict_fun",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A |]
      ==> restrict ?f ?A1.0 : ?A1.0 \<rightarrow> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 0), t_empty))
           ))),
    ("Algebra1.bij_invfun",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B |]
      ==> bij_to (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?B ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2)),
               template_var 0),
             template_var 1)
           ))),
    ("Algebra1.skip_im_Tr2_1",
     "[| ?i : {i. i <= Suc ?n}; ?i <= ?x |] ==> skip ?i ?x = Suc ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, t_empty))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("Algebra1.Ssegment_inc_if",
     "[| Order ?D; ?b : carrier ?D; ?a : Ssegment ?D ?b |]
      ==> ?a \<prec>\<^bsub>?D\<^esub> ?b",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Algebra1.card1_tr0",
     "[| finite ?A; card ?A = Suc 0; ?a : ?A |] ==> {?a} = ?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_var 1))),
    ("Algebra1.Nset_nset",
     "{i. i <= Suc (?n + ?m)} =
      {i. i <= ?n} Un nset (Suc ?n) (Suc (?n + ?m))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))))),
    ("Algebra1.Zmax_memTr",
     "?f : {i. i <= ?n} \<rightarrow> UNIV -->
      Zmax ?n ?f : ?f ` {i. i <= ?n}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 5, t_empty))))
         )),
    ("Algebra1.aadd_minus_less",
     "[| ?b ~= - \<infinity> & ?b ~= \<infinity>; ?a < 0 |]
      ==> ?a + ?b < ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_app (template_hole 4, template_hole 3)))),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_hole 3)))
            ),
        template_inequation (less_than, template_var 0, template_hole 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Algebra1.transpos_ij_1",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |] ==> transpos ?i ?j ?i = ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 2),
         template_var 0))),
    ("Algebra1.transpos_ij_2",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |] ==> transpos ?i ?j ?j = ?i",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 0),
         template_var 2))),
    ("Algebra1.Amin_ge1Tr",
     "(ALL j<=Suc ?n. ?f j : Z\<^sub>\<infinity> & ?z <= ?f j) -->
      ?z <= Amin (Suc ?n) ?f",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 5, template_var 2)),
               template_var 1)))
         )),
    ("Algebra1.Nset_pre_un",
     "0 < ?k ==> {j. j <= ?k} = {j. j <= ?k - Suc 0} Un {?k}",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 0)],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 6, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Algebra1.amult_distrib1",
     "ant ?z ~= 0 ==> (?a + ?b) * ant ?z = ?a * ant ?z + ?b * ant ?z",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app (template_hole 3, template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 3, template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 3, template_var 2)))))),
    ("Algebra1.nonempty_set_sub",
     "{x: ?A. ?P x} ~= {} ==> {x: ?A. ?P x} <= ?A",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, t_empty), template_hole 1)
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, t_empty),
         template_var 1))),
    ("Algebra1.func_pre",
     "?f : {j. j <= Suc ?n} \<rightarrow> ?A ==>
      ?f : {j. j <= ?n} \<rightarrow> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_hole 3, template_app (template_hole 2, t_empty)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               t_empty))
           ))),
    ("Algebra1.asprod_distrib2",
     "[| 0 < ?i; 0 < ?j |]
      ==> (?i + ?j) *\<^sub>a ?x = ?i *\<^sub>a ?x + ?j *\<^sub>a ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Algebra1.slide_mem",
     "[| ?i <= ?j; ?l : {k. k <= ?j - ?i} |] ==> slide ?i ?l : nset ?i ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Algebra1.agsprod_assoc",
     "[| ?m ~= 0; ?n ~= 0 |]
      ==> ?m *\<^sub>a (?n *\<^sub>a ?x) = (?m * ?n) *\<^sub>a ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3)),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Algebra1.bivar_fun",
     "[| ?f : ?A \<rightarrow> ?B \<rightarrow> ?C; ?a : ?A |]
      ==> ?f ?a : ?B \<rightarrow> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 4, template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 2), t_empty))
           ))),
    ("Algebra1.aadd_poss_less",
     "[| ?b ~= \<infinity>; ?b ~= - \<infinity>; 0 < ?a |]
      ==> ?b < ?a + ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 3, template_hole 4))
            ),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra1.sub_which1",
     "[| ?A <= ?B | ?B <= ?A; ?x : ?A; ?x ~: ?B |] ==> ?B <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)
                )
            )],
       template_inequation (less_equals, template_var 1, template_var 2))),
    ("Algebra1.sub_which2",
     "[| ?A <= ?B | ?B <= ?A; ?x ~: ?A; ?x : ?B |] ==> ?A <= ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Algebra1.Zmax_geTr",
     "?f : {j. j <= ?n} \<rightarrow> UNIV -->
      (ALL j:{j. j <= ?n}. ?f j <= Zmax ?n ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 5, t_empty)),
             t_empty))
         )),
    ("Algebra1.Amin_leTr",
     "?f : {i. i <= ?n} \<rightarrow> Z\<^sub>\<infinity> -->
      (ALL j:{i. i <= ?n}. Amin ?n ?f <= ?f j)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 5, t_empty)),
             t_empty))
         )),
    ("Algebra1.Amax_geTr",
     "?f : {j. j <= ?n} \<rightarrow> Z\<^sub>-\<^sub>\<infinity> -->
      (ALL j:{j. j <= ?n}. ?f j <= Amax ?n ?f)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 t_empty))),
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 5, t_empty)),
             t_empty))
         )),
    ("Algebra1.sub_inserted2",
     "[| ?Y <= insert ?a ?X; ~ ?Y <= ?X |] ==> ?Y = ?Y - {?a} Un {?a}",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0)),
        template_negation
         (
            template_inequation
             (less_equals, template_var 2, template_var 0)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 0))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 0))))),
    ("Algebra1.surj_to_el",
     "[| ?f : ?A \<rightarrow> ?B; surj_to ?f ?A ?B |]
      ==> ALL b:?B. EX a:?A. ?f a = b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Algebra1.cmp_fun",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C |]
      ==> cmp ?g ?f : ?A \<rightarrow> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 3), t_empty))
           ))),
    ("Algebra1.surj_to_test",
     "[| ?f : ?A \<rightarrow> ?B; ALL b:?B. EX a:?A. ?f a = b |]
      ==> surj_to ?f ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Algebra1.Nset_not_pre",
     "[| ?x ~: {i. i <= ?n}; ?x : {i. i <= Suc ?n} |] ==> ?x = Suc ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, t_empty))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, t_empty))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Algebra1.restrict_restrict",
     "[| restrict ?f ?A : ?A \<rightarrow> ?B; ?A1.0 <= ?A |]
      ==> restrict (restrict ?f ?A) ?A1.0 = restrict ?f ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Algebra1.restrictfun_im",
     "[| restrict ?f ?A : ?A \<rightarrow> ?B; ?A1.0 <= ?A |]
      ==> restrict ?f ?A ` ?A1.0 = ?f ` ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Algebra1.Nset_pre",
     "[| ?x : {i. i <= Suc ?n}; ?x ~= Suc ?n |] ==> ?x : {i. i <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, t_empty))
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 4, t_empty))
           ))),
    ("Algebra1.Ssegment_sub_sub",
     "[| Order ?D; ?S <= carrier ?D; ?d : ?S |]
      ==> Ssegment (SIod ?D ?S) ?d <= Ssegment ?D ?d",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Algebra1.injective_iff",
     "[| inj_on ?f ?A; ?x : ?A; ?y : ?A |] ==> (?x = ?y) = (?f ?x = ?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_bimplication
        (template_equation (template_var 1, template_var 0),
         template_equation
          (template_app (template_var 3, template_var 1),
           template_app (template_var 3, template_var 0))))),
    ("Algebra1.elem_in_image2",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A; ?x : ?A1.0 |]
      ==> ?f ?x : ?f ` ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3), t_empty))
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 4, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1))
           ))),
    ("Algebra1.Ssegment_inc1",
     "[| Order ?D; ?b : carrier ?D |]
      ==> (?a \<prec>\<^bsub>?D\<^esub> ?b & ?a : carrier ?D) =
          (?a : Ssegment ?D ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 4, template_var 2))),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Algebra1.card2_inc_two",
     "[| 0 < ?n; ?x : {j. j <= ?n} |] ==> EX y:{j. j <= ?n}. ?x ~= y",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 4, t_empty)),
             t_empty)
           ))),
    ("Algebra1.albs_ex_AMin",
     "[| ?A <= LBset (ant ?z); ?A ~= {} |]
      ==> EX! m. m : ?A & (ALL x:?A. m <= x)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra1.AMin",
     "[| ?A <= LBset (ant ?z); ?A ~= {} |]
      ==> AMin ?A : ?A & (ALL x:?A. AMin ?A <= x)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1), t_empty))
           ))),
    ("Algebra1.aubs_ex_AMax",
     "[| ?A <= UBset (ant ?z); ?A ~= {} |]
      ==> EX! m. m : ?A & (ALL x:?A. x <= m)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra1.AMax",
     "[| ?A <= UBset (ant ?z); ?A ~= {} |]
      ==> AMax ?A : ?A & (ALL x:?A. x <= AMax ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0))),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1), t_empty))
           ))),
    ("Algebra1.composition",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C |]
      ==> compose ?A ?g ?f : ?A \<rightarrow> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 3), t_empty))
           ))),
    ("Algebra1.transpos_inj",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |]
      ==> inj_on (transpos ?i ?j) {i. i <= ?n}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app (template_hole 0, t_empty))
           ))),
    ("Algebra1.funcset_eq",
     "[| ?f : extensional ?A; ?g : extensional ?A; ALL x:?A. ?f x = ?g x |]
      ==> ?f = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Algebra1.invfun_inj",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B |]
      ==> inj_on (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 0)
           ))),
    ("Algebra1.image_nonempty",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A; ?A1.0 ~= {} |]
      ==> ?f ` ?A1.0 ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_hole 0)
           ))),
    ("Algebra1.im_set_mono",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A2.0; ?A2.0 <= ?A |]
      ==> ?f ` ?A1.0 <= ?f ` ?A2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 0)))),
    ("Algebra1.skip_im_Tr1_1",
     "[| ?i : {i. i <= Suc ?n}; 0 < ?i; ?x < ?i |] ==> skip ?i ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, t_empty))
            ),
        template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 0))),
    ("Algebra1.inj_onTr1",
     "[| inj_on ?f ?A; ?x : ?A; ?y : ?A; ?f ?x = ?f ?y |] ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 3, template_var 1),
          template_app (template_var 3, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.Zmax_plus1",
     "?f : {j. j <= ?n} \<rightarrow> UNIV ==>
      Zmax ?n ?f + 1 ~: ?f ` {j. j <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app
                 (template_hole 9, template_app (template_hole 8, t_empty)),
                t_empty))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 0),
                         template_var 1)),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app (template_hole 8, t_empty)))
               )
           ))),
    ("Algebra1.times_amin",
     "[| 0 < ?a; amin (?x * ant ?a) (?y * ant ?a) <= ?z * ant ?a |]
      ==> amin ?x ?y <= ?z",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 0, template_var 3))),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 3))),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_app (template_hole 0, template_var 3)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0))),
    ("Algebra1.Nset_nset_1",
     "[| 0 < ?n; ?i < ?n |]
      ==> {j. j <= ?n} = {j. j <= ?i} Un nset (Suc ?i) ?n",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("Algebra1.nasc_seq_mem",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> nasc_seq ?A ?a ?n : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Algebra1.ndec_seq_mem",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> ndec_seq ?A ?a ?n : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Algebra1.aasc_seq_mem",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> aasc_seq ?A ?a ?n : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Algebra1.forball_contra1",
     "[| ALL y:?A. ?P ?x y --> ?Q y; ALL y:?A. ~ ?Q y |]
      ==> ALL y:?A. ~ ?P ?x y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), t_empty)
           ))),
    ("Algebra1.minimum_elem_Ssub",
     "[| Order ?D; ?T <= carrier ?D; ?X <= ?T |]
      ==> minimum_elem ?D ?X ?a = minimum_elem (SIod ?D ?T) ?X ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 3)),
        template_inequation (less_equals, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Algebra1.Ssegment_inc",
     "[| Order ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> ?a \<prec>\<^bsub>?D\<^esub> ?b = (?a : Ssegment ?D ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Algebra1.skip_im_Tr2",
     "[| 0 < ?i; ?i : {i. i <= Suc ?n}; ?i <= ?x |]
      ==> skip ?i ?x = Suc ?x",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, t_empty))
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("Algebra1.aadd_assoc_i",
     "[| ?x : Z\<^sub>\<infinity>; ?y : Z\<^sub>\<infinity>;
         ?z : Z\<^sub>\<infinity> |]
      ==> ?x + ?y + ?z = ?x + (?y + ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra1.aadd_assoc_m",
     "[| ?x : Z\<^sub>-\<^sub>\<infinity>; ?y : Z\<^sub>-\<^sub>\<infinity>;
         ?z : Z\<^sub>-\<^sub>\<infinity> |]
      ==> ?x + ?y + ?z = ?x + (?y + ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra1.invfun_surj",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B |]
      ==> surj_to (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?B ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2)),
               template_var 0),
             template_var 1)
           ))),
    ("Algebra1.invfun_mem1",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B; ?b : ?B |]
      ==> (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?b : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 0)),
             template_var 2)
           ))),
    ("Algebra1.surj_to_el1",
     "[| ?f : ?A \<rightarrow> ?B; surj_to ?f ?A ?B; ?b : ?B |]
      ==> EX a:?A. ?f a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Algebra1.bivar_fun_mem",
     "[| ?f : ?A \<rightarrow> ?B \<rightarrow> ?C; ?a : ?A; ?b : ?B |]
      ==> ?f ?a ?b : ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_var 5, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("Algebra1.card2",
     "[| finite ?A; ?a : ?A; ?b : ?A; ?a ~= ?b |]
      ==> Suc (Suc 0) <= card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 2)))),
    ("Algebra1.Ssegment_order_le",
     "ALL b:carrier ?D.
         ALL x:Ssegment ?D b.
            ALL y:Ssegment ?D b.
               x \<preceq>\<^bsub>?D\<^esub> y =
               x \<preceq>\<^bsub>SIod ?D (Ssegment ?D b)\<^esub> y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           t_empty)
         )),
    ("Algebra1.ubs_ex_n_max",
     "[| ?A ~= {}; ?A <= {i. i <= ?n} |]
      ==> EX! m. m : ?A & (ALL x:?A. x <= m)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Algebra1.cmp_fun_image",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C |]
      ==> cmp ?g ?f ` ?A = ?g ` ?f ` ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 4)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3))))),
    ("Algebra1.n_max",
     "[| ?A <= {i. i <= ?n}; ?A ~= {} |]
      ==> n_max ?A : ?A & (ALL x:?A. x <= n_max ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Algebra1.Amin_mem_le",
     "[| ALL j<=?n. ?f j : Z\<^sub>\<infinity>; ?j : {j. j <= ?n} |]
      ==> Amin ?n ?f <= ?f ?j",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, t_empty))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_var 1, template_var 0)))),
    ("Algebra1.Amax_mem_le",
     "[| ALL j<=?n. ?f j : Z\<^sub>-\<^sub>\<infinity>; ?j : {j. j <= ?n} |]
      ==> ?f ?j <= Amax ?n ?f",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Algebra1.Amin_le",
     "[| ?f : {j. j <= ?n} \<rightarrow> Z\<^sub>\<infinity>;
         ?j : {k. k <= ?n} |]
      ==> Amin ?n ?f <= ?f ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 5, t_empty))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app (template_var 2, template_var 0)))),
    ("Algebra1.Amax_ge",
     "[| ?f : {j. j <= ?n} \<rightarrow> Z\<^sub>-\<^sub>\<infinity>;
         ?j : {j. j <= ?n} |]
      ==> ?f ?j <= Amax ?n ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 5, t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Algebra1.Ssegment_inj",
     "[| Torder ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> (?a = ?b) = (Ssegment ?D ?a = Ssegment ?D ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_bimplication
        (template_equation (template_var 1, template_var 0),
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Algebra1.Ssegment_not_inc_iff",
     "[| Torder ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> ?a \<preceq>\<^bsub>?D\<^esub> ?b = (?b ~: Ssegment ?D ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Algebra1.n_max_eq_sets",
     "[| ?A = ?B; ?A ~= {}; EX n. ?A <= {j. j <= n} |]
      ==> n_max ?A = n_max ?B",
     template_implication
      ([template_equation (template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Algebra1.SIod_le",
     "[| ?T <= carrier ?D; ?a : ?T; ?b : ?T |]
      ==> ?a \<preceq>\<^bsub>SIod ?D ?T\<^esub> ?b =
          ?a \<preceq>\<^bsub>?D\<^esub> ?b",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Algebra1.SIod_less",
     "[| ?T <= carrier ?D; ?a : ?T; ?b : ?T |]
      ==> ?a \<prec>\<^bsub>SIod ?D ?T\<^esub> ?b =
          ?a \<prec>\<^bsub>?D\<^esub> ?b",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Algebra1.invfun_l1",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B; ?a : ?A |]
      ==> (?f\<inverse>\<^bsub>?B,?A\<^esub>) (?f ?a) = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_app (template_var 3, template_var 0)),
         template_var 0))),
    ("Algebra1.invfun_r1",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B; ?b : ?B |]
      ==> ?f ((?f\<inverse>\<^bsub>?B,?A\<^esub>) ?b) = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 3),
             template_var 0)),
         template_var 0))),
    ("Algebra1.injective",
     "[| inj_on ?f ?A; ?x : ?A; ?y : ?A; ?x ~= ?y |] ==> ?f ?x ~= ?f ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_var 3, template_var 1),
             template_app (template_var 3, template_var 0))
           ))),
    ("Algebra1.inj_onTr2",
     "[| inj_on ?f ?A; ?x : ?A; ?y : ?A; ?f ?x ~= ?f ?y |] ==> ?x ~= ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_var 3, template_var 1),
              template_app (template_var 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Algebra1.transpos_mem",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j; ?l <= ?n |]
      ==> transpos ?i ?j ?l <= ?n",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("Algebra1.amin_trans1",
     "[| ?x : Z\<^sub>\<infinity>; ?y : Z\<^sub>\<infinity>;
         ?z : Z\<^sub>\<infinity>; ?z <= ?x |]
      ==> amin ?z ?y <= amin ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Algebra1.card1_Tr2",
     "[| finite ?A; card ?A = Suc 0 |]
      ==> EX f. f : {0} \<rightarrow> ?A & surj_to f {0} ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 0),
          template_app (template_hole 8, template_hole 7))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Algebra1.ubs_ex_n_maxTr",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> ?a + ?n <= nasc_seq ?A ?a ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Algebra1.ex_NleastTr",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> ndec_seq ?A ?a ?n <= ?a - ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.enumeration",
     "[| ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?m};
         inj_on ?f {i. i <= ?n} |]
      ==> ?n <= ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_hole 3, template_app (template_hole 2, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_app (template_hole 2, t_empty))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Algebra1.Ssegment_Ssegment",
     "[| Order ?D; ?b : carrier ?D; ?a : Ssegment ?D ?b |]
      ==> Ssegment (SIod ?D (Ssegment ?D ?b)) ?a = Ssegment ?D ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Algebra1.Ssegment_le_mono",
     "[| Torder ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> ?a \<preceq>\<^bsub>?D\<^esub> ?b =
          (Ssegment ?D ?a <= Ssegment ?D ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Algebra1.Ssegment_mono",
     "[| Torder ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> ?a \<prec>\<^bsub>?D\<^esub> ?b =
          (Ssegment ?D ?a < Ssegment ?D ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Algebra1.Nset2finite_inj",
     "[| finite ?A; card ?A = Suc ?n; surj_to ?f {i. i <= ?n} ?A |]
      ==> inj_on ?f {i. i <= ?n}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 2, t_empty)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 2, t_empty))
           ))),
    ("Algebra1.lbs_ex_Zleast",
     "[| ?A ~= {}; ?A <= Zset; LB ?A ?n |]
      ==> EX! m. m : ?A & (ALL x:?A. m <= x)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation (less_equals, template_var 1, template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra1.Zleast",
     "[| ?A ~= {}; ?A <= Zset; LB ?A ?n |]
      ==> Zleast ?A : ?A & (ALL x:?A. Zleast ?A <= x)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation (less_equals, template_var 1, template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1), t_empty))
           ))),
    ("Algebra1.inv_func",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B |]
      ==> ?f\<inverse>\<^bsub>?B,?A\<^esub> : ?B \<rightarrow> ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0), t_empty))
           ))),
    ("Algebra1.skip_im_Tr1",
     "[| ?i : {i. i <= Suc ?n}; 0 < ?i; ?x <= ?i - Suc 0 |]
      ==> skip ?i ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, t_empty))
            ),
        template_inequation (less_than, template_hole 3, template_var 2),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app (template_hole 5, template_hole 3)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 0))),
    ("Algebra1.Ssegment_not_inc",
     "[| Order ?D; ?a : carrier ?D; ?b : carrier ?D;
         ?a \<prec>\<^bsub>?D\<^esub> ?b |]
      ==> ?b ~: Ssegment ?D ?a",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))
               )
           ))),
    ("Algebra1.skip_fun_im",
     "?i : {j. j <= Suc ?n} ==>
      skip ?i ` {j. j <= ?n} = {j. j <= Suc ?n} - {?i}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 8, t_empty)),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 8, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Algebra1.int_nat_add",
     "[| 0 < ?n; 0 < ?m |]
      ==> nat (?n - 1) + nat (?m - 1) + Suc 0 = nat (?n + ?m - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_hole 3))),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)))),
           template_app (template_hole 2, template_hole 1)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 3))))),
    ("Algebra1.aubs_ex_n_maxTr",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> ?a + an ?n <= aasc_seq ?A ?a ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Algebra1.im_set_un1",
     "[| ALL l:?A. ?f l : ?B; ?A = ?A1.0 Un ?A2.0 |]
      ==> ?f ` (?A1.0 Un ?A2.0) = ?f ` ?A1.0 Un ?f ` ?A2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4), t_empty)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Algebra1.ex_least_set",
     "[| ?A = {H. finite H & ?P H}; ?H : ?A |]
      ==> EX K:?A. (LEAST j. j : card ` ?A) = card K",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2), t_empty)
           ))),
    ("Algebra1.Ssegment_inj_neq",
     "[| Torder ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> (?a ~= ?b) = (Ssegment ?D ?a ~= Ssegment ?D ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_bimplication
        (template_negation
          (template_equation (template_var 1, template_var 0)),
         template_negation
          (
             template_equation
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))
             )))),
    ("Algebra1.l_inv_invfun",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B |]
      ==> compose ?A (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?f = idmap ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0),
               template_var 2)),
           template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Algebra1.invfun_set",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B; ?C <= ?B |]
      ==> ?f ` (?f\<inverse>\<^bsub>?B,?A\<^esub>) ` ?C = ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)),
             template_var 0)),
         template_var 0))),
    ("Algebra1.equiv_induced_by_injS",
     "[| Order ?D; Order ?E; ord_inj ?D ?E ?f; ?D1.0 <= carrier ?D |]
      ==> ord_equiv (SIod ?D ?D1.0) (SIod ?E (?f ` ?D1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Algebra1.ord_equiv_inducedS",
     "[| Order ?D; Order ?E; ord_isom ?D ?E ?f; ?D1.0 <= carrier ?D |]
      ==> ord_equiv (SIod ?D ?D1.0) (SIod ?E (?f ` ?D1.0))",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Algebra1.im_jointfun1",
     "jointfun ?n ?f ?m ?g ` {j. j <= Suc (?n + ?m)} =
      ?f ` {j. j <= ?n} Un ?g ` {j. j <= ?m}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 4, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 4, t_empty))),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_app (template_hole 4, t_empty))))),
    ("Algebra1.nasc_seqn",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> nasc_seq ?A ?a ?n < nasc_seq ?A ?a (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.ndec_seqn",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> ndec_seq ?A ?a (Suc ?n) < ndec_seq ?A ?a ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Algebra1.aasc_seqn",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> aasc_seq ?A ?a ?n < aasc_seq ?A ?a (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.to_subsetS",
     "[| Worder ?D; ?T <= carrier ?D; ord_isom ?D (SIod ?D ?T) ?f |]
      ==> ALL a. a : carrier ?D --> a \<preceq>\<^bsub>?D\<^esub> ?f a",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Algebra1.transpos_surjec",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |]
      ==> surj_to (transpos ?i ?j) {i. i <= ?n} {i. i <= ?n}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_app (template_hole 0, t_empty)),
             template_app (template_hole 0, t_empty))
           ))),
    ("Algebra1.comp_transpos_1",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j; ?k <= ?n |]
      ==> transpos ?i ?j (transpos ?i ?j ?k) = ?k",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("Algebra1.card1_tr1",
     "constmap {0} {?x} : {0} \<rightarrow> {?x} &
      surj_to (constmap {0} {?x}) {0} {?x}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 4)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_hole 4)),
                 t_empty))),
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 4)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))
         )),
    ("Algebra1.Ssegment_order_less",
     "Order ?D ==>
      ALL b:carrier ?D.
         ALL x:Ssegment ?D b.
            ALL y:Ssegment ?D b.
               x \<prec>\<^bsub>?D\<^esub> y =
               x \<prec>\<^bsub>SIod ?D (Ssegment ?D b)\<^esub> y",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             t_empty)
           ))),
    ("Algebra1.Nset_Suc_Suc",
     "Suc (Suc 0) <= ?n ==>
      {j. j <= ?n - Suc (Suc 0)} = {j. j <= ?n} - {?n - Suc 0, ?n}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 7, template_hole 6)),
          template_var 0)],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 4, t_empty)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 7, template_hole 6))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Algebra1.nasc_seqn1",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> Suc (nasc_seq ?A ?a ?n) <= nasc_seq ?A ?a (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app (template_hole 1, template_var 0))))),
    ("Algebra1.dec_seq_mem",
     "[| ?a : ?A; ?A <= Zset; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> dec_seq ?A ?a ?n : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_hole 6),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Algebra1.im_set_un",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A; ?A2.0 <= ?A |]
      ==> ?f ` (?A1.0 Un ?A2.0) = ?f ` ?A1.0 Un ?f ` ?A2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3), t_empty))
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 0))))),
    ("Algebra1.set_image",
     "[| ?f : ?A \<rightarrow> ?B; ?A1.0 <= ?A; ?A2.0 <= ?A |]
      ==> ?f ` (?A1.0 Int ?A2.0) <= ?f ` ?A1.0 Int ?f ` ?A2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3), t_empty))
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 0))))),
    ("Algebra1.restr_restr_eq",
     "[| restrict ?f ?A : ?A \<rightarrow> ?B;
         restrict ?f ?A = restrict ?g ?A; ?A1.0 <= ?A |]
      ==> restrict ?f ?A1.0 = restrict ?g ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 3), t_empty))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 3)),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Algebra1.cmp_transpos1",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j; ?k <= ?n |]
      ==> cmp (transpos ?i ?j) (transpos ?i ?j) ?k = ?k",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_var 0))),
    ("Algebra1.aeq_nat_eq",
     "[| ?n ~= \<infinity>; 0 <= ?n; ?m ~= \<infinity>; 0 <= ?m |]
      ==> (?n = ?m) = (na ?n = na ?m)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_inequation (less_equals, template_hole 3, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_bimplication
        (template_equation (template_var 1, template_var 0),
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.invfun_mem",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B;
         ?b : ?B |]
      ==> (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?b : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 0)),
             template_var 2)
           ))),
    ("Algebra1.cmp_inj_1",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; ?g : ?B \<rightarrow> ?C;
         inj_on ?g ?B |]
      ==> inj_on (cmp ?g ?f) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4)),
             template_var 3)
           ))),
    ("Algebra1.funcTr",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?A \<rightarrow> ?B; ?f = ?g;
         ?a : ?A |]
      ==> ?f ?a = ?g ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_equation (template_var 4, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app (template_var 4, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Algebra1.eq_funcs",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?A \<rightarrow> ?B; ?f = ?g;
         ?x : ?A |]
      ==> ?f ?x = ?g ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3), t_empty))
            ),
        template_equation (template_var 4, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 3)
            )],
       template_equation
        (template_app (template_var 4, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Algebra1.cmp_inj",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C; inj_on ?f ?A;
         inj_on ?g ?B |]
      ==> inj_on (cmp ?g ?f) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4)),
             template_var 3)
           ))),
    ("Algebra1.Nset2_finiteTr",
     "ALL A.
         finite A & card A = Suc ?n -->
         (EX f. f : {i. i <= ?n} \<rightarrow> A &
                surj_to f {i. i <= ?n} A)",
     template_predicate (template_app (template_hole 12, t_empty))),
    ("Algebra1.bex_nonempty_subset",
     "EX a. a : ?A & ?P a ==> {x: ?A. ?P x} <= ?A & {x: ?A. ?P x} ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 1)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, t_empty)),
                 template_hole 0)))
           ))),
    ("Algebra1.Nset2_finite",
     "[| finite ?A; card ?A = Suc ?n |]
      ==> EX f. f : {i. i <= ?n} \<rightarrow> ?A &
                surj_to f {i. i <= ?n} ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Algebra1.ndec_seqn1",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> ndec_seq ?A ?a (Suc ?n) <= ndec_seq ?A ?a ?n - 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 7, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("Algebra1.aasc_seqn1",
     "[| ?a : ?A; \<nexists>m. m : ?A & (ALL x:?A. x <= m) |]
      ==> aasc_seq ?A ?a ?n + 1 <= aasc_seq ?A ?a (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_predicate (template_app (template_hole 7, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.forball_contra",
     "[| ALL y:?A. ?P ?x y --> ~ ?Q y; ALL y:?A. ?Q y | ?R y |]
      ==> ALL y:?A. ~ ?P ?x y | ?R y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4), t_empty)
           ))),
    ("Algebra1.Amin_ge1",
     "[| ALL j<=Suc ?n. ?f j : Z\<^sub>\<infinity>;
         ALL j<=Suc ?n. ?z <= ?f j |]
      ==> ?z <= Amin (Suc ?n) ?f",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 2)),
           template_var 1)))),
    ("Algebra1.le_Ssegment_Ssegment",
     "[| Torder ?D; ?a : carrier ?D; ?b : carrier ?D |]
      ==> ?a \<preceq>\<^bsub>?D\<^esub> ?b =
          (Ssegment (SIod ?D (Ssegment ?D ?b)) ?a = Ssegment ?D ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("Algebra1.transpos_hom",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |]
      ==> transpos ?i ?j : {i. i <= ?n} \<rightarrow> {i. i <= ?n}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               t_empty))
           ))),
    ("Algebra1.cmp_fun_sub_image",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C; ?A1.0 <= ?A |]
      ==> cmp ?g ?f ` ?A1.0 = ?g ` ?f ` ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 5)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 5),
             template_var 0))))),
    ("Algebra1.skip_inj",
     "[| ?i : {k. k <= ?n}; ?j : {k. k <= ?n}; ?i ~= ?j |]
      ==> skip ?k ?i ~= skip ?k ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, t_empty))
            ),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Algebra1.ord_inj_Srestrict_isom",
     "[| Order ?D; Order ?E; ord_inj ?D ?E ?f; ?T <= carrier ?D |]
      ==> ord_isom (SIod ?D ?T) (SIod ?E (?f ` ?T)) (restrict ?f ?T)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 5, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra1.Ssegment_unique",
     "[| Worder ?D; ?a : carrier ?D; ?b : carrier ?D;
         ord_equiv (SIod ?D (Ssegment ?D ?a)) (SIod ?D (Ssegment ?D ?b)) |]
      ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.aplus_le_aminus",
     "[| ?a : Z\<^sub>-\<^sub>\<infinity>; ?b : Z\<^sub>-\<^sub>\<infinity>;
         ?c : Z\<^sub>-\<^sub>\<infinity>;
         - ?b : Z\<^sub>-\<^sub>\<infinity> |]
      ==> (?a + ?b <= ?c) = (?a <= ?c - ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 4, template_var 1)),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Algebra1.invfun_l",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B;
         ?a : ?A |]
      ==> (?f\<inverse>\<^bsub>?B,?A\<^esub>) (?f ?a) = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 3),
           template_app (template_var 3, template_var 0)),
         template_var 0))),
    ("Algebra1.invfun_r",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; surj_to ?f ?A ?B;
         ?b : ?B |]
      ==> ?f ((?f\<inverse>\<^bsub>?B,?A\<^esub>) ?b) = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 3),
             template_var 0)),
         template_var 0))),
    ("Algebra1.comp_inj",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; ?g : ?B \<rightarrow> ?C;
         inj_on ?g ?B |]
      ==> inj_on (compose ?A ?g ?f) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 4)),
             template_var 3)
           ))),
    ("Algebra1.Nset_img",
     "?f : {j. j <= Suc ?n} \<rightarrow> ?B ==>
      insert (?f (Suc ?n)) (?f ` {j. j <= ?n}) = ?f ` {j. j <= Suc ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_var 2,
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 5, t_empty))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 5, t_empty))))),
    ("Algebra1.SIod_Ssegment_Ssegment",
     "[| Order ?D; ?a : carrier (SIod ?D (Ssegment ?D ?b)) |]
      ==> SIod (SIod ?D (Ssegment ?D ?b))
           (Ssegment (SIod ?D (Ssegment ?D ?b)) ?a) =
          SIod ?D (Ssegment ?D ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("Algebra1.skip_fun_im1",
     "[| ?i : {j. j <= Suc ?n}; ?x : {j. j <= ?n} |]
      ==> skip ?i ?x : {j. j <= Suc ?n} - {?i}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 6, t_empty)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)))
           ))),
    ("Algebra1.setim_cmpfn",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C; ?A1.0 <= ?A |]
      ==> compose ?A ?g ?f ` ?A1.0 = ?g ` ?f ` ?A1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_var 5)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 5),
             template_var 0))))),
    ("Algebra1.cmp_inj_2",
     "[| ALL l:?A. ?f l : ?B; inj_on ?f ?A; ALL k:?B. ?g k : ?C;
         inj_on ?g ?B |]
      ==> inj_on (cmp ?g ?f) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 4)
           ))),
    ("Algebra1.ant_sol",
     "[| ?a : Z\<^sub>\<infinity>; ?b : Z\<^sub>\<infinity>;
         ?c : Z\<^sub>\<infinity>; ?b ~= \<infinity>; ?a = ?b + ?c |]
      ==> ?a - ?b = ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Algebra1.inj_onTr0",
     "[| ?f : ?A \<rightarrow> ?B; ?x : ?A; ?y : ?A; inj_on ?f ?A;
         ?f ?x = ?f ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 4, template_var 1),
          template_app (template_var 4, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra1.bivar_func_eq",
     "ALL a:?A. ALL b:?B. ?f a b = ?g a b ==>
      (\<lambda>x\<in>?A. restrict (?f x) ?B) =
      (\<lambda>x\<in>?A. restrict (?g x) ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, t_empty), template_var 3),
         template_app
          (template_app (template_hole 1, t_empty), template_var 3)))),
    ("Algebra1.ninv_inj",
     "[| ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?n};
         inj_on ?f {i. i <= ?n} |]
      ==> inj_on (ninv ?n ?f) {i. i <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Algebra1.lbs_ex_ZleastTr",
     "[| ?a : ?A; ?A <= Zset; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> dec_seq ?A ?a ?n <= ?a - int ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_hole 8),
        template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra1.injfun_elim_image",
     "[| ?f : ?A \<rightarrow> ?B; inj_on ?f ?A; ?x : ?A |]
      ==> ?f ` (?A - {?x}) = ?f ` ?A - {?f ?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 0)),
             template_hole 0))))),
    ("Algebra1.ord_equiv_Ssegment_Ssegment",
     "[| Order ?D; Order ?E; ord_equiv ?D ?E; ?a : carrier ?D |]
      ==> EX t:carrier ?E.
             ord_equiv (SIod ?D (Ssegment ?D ?a))
              (SIod ?E (Ssegment ?E t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             t_empty)
           ))),
    ("Algebra1.ord_isom_restrictedS",
     "[| Order ?D; Order ?E; ord_isom ?D ?E ?f; ?D1.0 <= carrier ?D |]
      ==> ord_isom (SIod ?D ?D1.0) (SIod ?E (?f ` ?D1.0))
           (restrict ?f ?D1.0)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 4, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, t_empty), template_var 0))
           ))),
    ("Algebra1.Ssegment_unique1",
     "[| Worder ?D; ?a : carrier ?D; ?b : carrier ?D;
         ?a \<prec>\<^bsub>?D\<^esub> ?b |]
      ==> ~ ord_equiv (SIod ?D (Ssegment ?D ?b))
             (SIod ?D (Ssegment ?D ?a))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)))
               )
           ))),
    ("Algebra1.cmp_surj",
     "[| ?f : ?A \<rightarrow> ?B; surj_to ?f ?A ?B;
         ?g : ?B \<rightarrow> ?C; surj_to ?g ?B ?C |]
      ==> surj_to (cmp ?g ?f) ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4)),
               template_var 3),
             template_var 0)
           ))),
    ("Algebra1.ord_isom_Ssegment_mem",
     "[| Order ?D; Order ?E; ord_isom ?D ?E ?f; ?a : carrier ?D;
         ?x : Ssegment ?D ?a |]
      ==> ?f ?x : Ssegment ?E (?f ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 2, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app (template_var 2, template_var 1)))
           ))),
    ("Algebra1.dec_seqn",
     "[| ?a : ?A; ?A <= Zset; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> dec_seq ?A ?a (Suc ?n) < dec_seq ?A ?a ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_hole 8),
        template_negation
         (template_predicate (template_app (template_hole 6, t_empty)))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Algebra1.compos_bij",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B;
         ?g : ?B \<rightarrow> ?C; bij_to ?g ?B ?C |]
      ==> bij_to (compose ?A ?g ?f) ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 4)),
               template_var 3),
             template_var 0)
           ))),
    ("Algebra1.compose_surj",
     "[| ?f : ?A \<rightarrow> ?B; surj_to ?f ?A ?B;
         ?g : ?B \<rightarrow> ?C; surj_to ?g ?B ?C |]
      ==> surj_to (compose ?A ?g ?f) ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 4)),
               template_var 3),
             template_var 0)
           ))),
    ("Algebra1.cmp_transpos",
     "[| ?i <= ?n; ?i ~= ?n; ?a <= Suc ?n |]
      ==> cmp (transpos ?i ?n) (cmp (transpos ?n (Suc ?n)) (transpos ?i ?n))
           ?a =
          transpos ?i (Suc ?n) ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app (template_hole 2, template_var 1))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Algebra1.comp_transpos",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |]
      ==> ALL k<=?n.
             compose {i. i <= ?n} (transpos ?i ?j) (transpos ?i ?j) k = k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra1.dec_seqn1",
     "[| ?a : ?A; ?A <= Zset; \<nexists>m. m : ?A & (ALL x:?A. m <= x) |]
      ==> dec_seq ?A ?a (Suc ?n) <= dec_seq ?A ?a ?n - 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_hole 9),
        template_negation
         (template_predicate (template_app (template_hole 7, t_empty)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("Algebra1.ninv_r_inv",
     "[| ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?n};
         inj_on ?f {i. i <= ?n}; ?b <= ?n |]
      ==> ?f (ninv ?n ?f ?b) = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 4, t_empty))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_var 0))),
    ("Algebra1.transpos_id",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j; ?x : {k. k <= ?n} - {?i, ?j} |]
      ==> transpos ?i ?j ?x = ?x",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_hole 1))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_var 0))),
    ("Algebra1.inj_surj",
     "[| ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?n};
         inj_on ?f {i. i <= ?n} |]
      ==> ?f ` {i. i <= ?n} = {i. i <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 5, template_app (template_hole 4, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 4, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("Algebra1.comp_assoc",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C;
         ?h : ?C \<rightarrow> ?D |]
      ==> compose ?A ?h (compose ?A ?g ?f) =
          compose ?A (compose ?B ?h ?g) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 6),
              template_app
               (template_app (template_hole 9, template_var 5), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_var 3),
             template_var 6)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 3)),
           template_var 6)))),
    ("Algebra1.Nset_injTr1",
     "[| ALL l<=Suc ?n. ?f l <= Suc ?n; inj_on ?f {i. i <= Suc ?n};
         ?f (Suc ?n) = Suc ?n |]
      ==> inj_on ?f {i. i <= ?n}",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, t_empty))
            ),
        template_equation
         (template_app
           (template_var 0, template_app (template_hole 3, template_var 1)),
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, t_empty))
           ))),
    ("Algebra1.transpos_id_1",
     "[| ?i <= ?n; ?j <= ?n; ?i ~= ?j; ?x <= ?n; ?x ~= ?i; ?x ~= ?j |]
      ==> transpos ?i ?j ?x = ?x",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_negation
         (template_equation (template_var 0, template_var 3)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_var 0))),
    ("Algebra1.SIod_self_le",
     "[| Order ?D; Order ?E; carrier ?E <= carrier ?D;
         ALL a:carrier ?E.
            ALL b:carrier ?E.
               a \<preceq>\<^bsub>?E\<^esub> b =
               a \<preceq>\<^bsub>?D\<^esub> b |]
      ==> ?E = SIod ?D (carrier ?E)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 5, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 5, template_var 0))))),
    ("Algebra1.ninv_hom",
     "[| ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?n};
         inj_on ?f {i. i <= ?n} |]
      ==> ninv ?n ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_hole 4, template_app (template_hole 3, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 3, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               t_empty))
           ))),
    ("Algebra1.Nset_img0",
     "[| ?f : {j. j <= Suc ?n} \<rightarrow> ?B;
         ?f (Suc ?n) : ?f ` {j. j <= ?n} |]
      ==> ?f ` {j. j <= Suc ?n} = ?f ` {j. j <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_var 2,
                  template_app (template_hole 3, template_var 1))),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app (template_hole 5, t_empty)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 5, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 5, t_empty))))),
    ("Algebra1.jointfun_mem",
     "[| ALL j<=?n. ?f j : ?A; ALL j<=?m. ?g j : ?B; ?l <= Suc (?n + ?m) |]
      ==> jointfun ?n ?f ?m ?g ?l : ?A Un ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 6),
              template_var 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1))
           ))),
    ("Algebra1.Nset_injTr2",
     "[| ALL l<=Suc ?n. ?f l <= Suc ?n; inj_on ?f {i. i <= Suc ?n};
         ?f (Suc ?n) = Suc ?n |]
      ==> ALL l<=?n. ?f l <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, t_empty))
            ),
        template_equation
         (template_app
           (template_var 0, template_app (template_hole 3, template_var 1)),
          template_app (template_hole 3, template_var 1))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Algebra1.rel_SIod",
     "[| Order ?D; Order ?E; carrier ?E <= carrier ?D;
         ALL a:carrier ?E.
            ALL b:carrier ?E.
               a \<preceq>\<^bsub>?E\<^esub> b =
               a \<preceq>\<^bsub>?D\<^esub> b |]
      ==> rel ?E = rel (SIod ?D (carrier ?E))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 9, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 9, template_var 0)))))),
    ("Algebra1.ord_isom_Ssegment_Ssegment",
     "[| Order ?D; Order ?E; ord_isom ?D ?E ?f; ?a : carrier ?D |]
      ==> ord_isom (SIod ?D (Ssegment ?D ?a))
           (SIod ?E (Ssegment ?E (?f ?a)))
           (restrict ?f (carrier (SIod ?D (Ssegment ?D ?a))))",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 0))),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_var 1, template_var 0)))),
             template_app
              (template_app (template_hole 0, t_empty),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 0)))))
           ))),
    ("Algebra1.Nset2finite_inj_tr1",
     "[| ?i <= ?n; ?j <= ?n; ?f ?i = ?f ?j; ?i ~= ?j |]
      ==> ?f ` ({i. i <= ?n} - {?j}) = ?f ` {i. i <= ?n}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_equation
         (template_app (template_var 0, template_var 3),
          template_app (template_var 0, template_var 1)),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 2, t_empty))))),
    ("Algebra1.cmp_assoc",
     "[| ?f : ?A \<rightarrow> ?B; ?g : ?B \<rightarrow> ?C;
         ?h : ?C \<rightarrow> ?D; ?x : ?A |]
      ==> cmp ?h (cmp ?g ?f) ?x = cmp (cmp ?h ?g) ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 7),
              template_app
               (template_app (template_hole 10, template_var 6), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 5), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 6)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 7)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_var 7),
           template_var 0)))),
    ("Algebra1.jointfun_hom",
     "[| ?f : {i. i <= ?n} \<rightarrow> ?A;
         ?g : {j. j <= ?m} \<rightarrow> ?B |]
      ==> jointfun ?n ?f ?m ?g
          : {j. j <= Suc (?n + ?m)} \<rightarrow> ?A Un ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 4),
                     template_var 5),
                   template_var 1),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               t_empty))
           ))),
    ("Algebra1.subset_Ssegment",
     "[| Worder ?D; ?T <= carrier ?D;
         ALL b:?T.
            ALL x.
               x \<prec>\<^bsub>?D\<^esub> b & x : carrier ?D --> x : ?T;
         minimum_elem ?D (carrier ?D - ?T) ?a |]
      ==> ?T = Ssegment ?D ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app (template_hole 10, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra1.SsegmentTr",
     "[| Worder ?D; ?T <= carrier ?D;
         ALL b:?T.
            ALL x.
               x \<prec>\<^bsub>?D\<^esub> b & x : carrier ?D --> x : ?T |]
      ==> ?T = carrier ?D | (EX a. a : carrier ?D & ?T = Ssegment ?D a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 10, template_var 1))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Algebra1.Nset_pre_mem",
     "[| ?f : {i. i <= Suc ?n} \<rightarrow> {i. i <= Suc ?n};
         inj_on ?f {i. i <= Suc ?n}; ?f (Suc ?n) = Suc ?n; ?k <= ?n |]
      ==> ?f ?k : {i. i <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 5, t_empty))
            ),
        template_equation
         (template_app
           (template_var 2, template_app (template_hole 3, template_var 1)),
          template_app (template_hole 3, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Algebra1.jointfun_inj",
     "[| ?f : {j. j <= ?n} \<rightarrow> ?B; inj_on ?f {j. j <= ?n};
         ?b ~: ?f ` {j. j <= ?n} |]
      ==> inj_on (jointfun ?n ?f 0 (\<lambda>k\<in>{0}. ?b))
           {j. j <= Suc ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 11, t_empty))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app (template_hole 11, t_empty)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 3),
                   template_hole 4),
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_app
                    (template_app (template_hole 2, template_hole 4),
                     template_hole 1)))),
             template_app (template_hole 11, t_empty))
           ))),
    ("Algebra1.card_image_Nsetn_Suc",
     "[| ?f : {j. j <= Suc ?n} \<rightarrow> ?B;
         ?f (Suc ?n) ~: ?f ` {j. j <= ?n} |]
      ==> card (?f ` {j. j <= Suc ?n}) - Suc 0 =
          Suc (card (?f ` {j. j <= ?n}) - Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, t_empty)),
                t_empty))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_var 2,
                      template_app (template_hole 7, template_var 1))),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_app (template_hole 9, t_empty)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app (template_hole 9, t_empty)))),
           template_app (template_hole 7, template_hole 0)),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app (template_hole 9, t_empty)))),
             template_app (template_hole 7, template_hole 0)))))),
    ("Algebra1.compos_invfun_r",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B;
         ?g : ?A \<rightarrow> ?C; ?h : ?B \<rightarrow> ?C;
         ?g : extensional ?A;
         compose ?B ?g (?f\<inverse>\<^bsub>?B,?A\<^esub>) = ?h |]
      ==> ?g = compose ?A ?h ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_app
               (template_app (template_hole 11, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 5, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 5)),
          template_var 0)],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0),
           template_var 5)))),
    ("Algebra1.compos_invfun_l",
     "[| ?f : ?A \<rightarrow> ?B; bij_to ?f ?A ?B;
         ?g : ?C \<rightarrow> ?B; ?h : ?C \<rightarrow> ?A;
         compose ?C (?f\<inverse>\<^bsub>?B,?A\<^esub>) ?g = ?h;
         ?g : extensional ?C |]
      ==> ?g = compose ?C ?f ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_app
               (template_app (template_hole 11, template_var 4), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 1), t_empty))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 5)),
            template_var 2),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 5),
           template_var 0)))),
    ("Algebra1.im_jointfun",
     "[| ?f : {j. j <= ?n} \<rightarrow> ?A;
         ?g : {j. j <= ?m} \<rightarrow> ?B |]
      ==> jointfun ?n ?f ?m ?g ` {j. j <= Suc (?n + ?m)} =
          ?f ` {j. j <= ?n} Un ?g ` {j. j <= ?m}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app
                 (template_hole 8, template_app (template_hole 7, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app
                 (template_hole 8, template_app (template_hole 7, t_empty)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 5),
                 template_var 1),
               template_var 2)),
           template_app (template_hole 7, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 5),
               template_app (template_hole 7, t_empty))),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 7, t_empty)))))),
    ("Algebra1.Nset_injTr0",
     "[| ?f : {i. i <= Suc ?n} \<rightarrow> {i. i <= Suc ?n};
         inj_on ?f {i. i <= Suc ?n}; ?f (Suc ?n) = Suc ?n |]
      ==> ?f : {i. i <= ?n} \<rightarrow> {i. i <= ?n} &
          inj_on ?f {i. i <= ?n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app
                 (template_hole 6, template_app (template_hole 5, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 5, t_empty))
            ),
        template_equation
         (template_app
           (template_var 1, template_app (template_hole 3, template_var 0)),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, t_empty)),
                   t_empty))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 5, t_empty)))
           ))),
    ("Algebra1.TR_inj_inj",
     "[| ALL l<=Suc ?n. ?f l <= Suc ?n; inj_on ?f {i. i <= Suc ?n};
         ?i <= Suc ?n; ?j <= Suc ?n; ?i < ?j |]
      ==> inj_on (compose {i. i <= Suc ?n} (transpos ?i ?j) ?f)
           {i. i <= Suc ?n}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, t_empty))
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 3)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 5, template_var 3)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 3, t_empty)),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 2)),
             template_app (template_hole 3, t_empty))
           ))),
    ("Algebra1.jointfun_surj",
     "[| ?f : {j. j <= ?n} \<rightarrow> ?A; surj_to ?f {j. j <= ?n} ?A;
         ?g : {j. j <= ?m} \<rightarrow> ?B; surj_to ?g {j. j <= ?m} ?B |]
      ==> surj_to (jointfun ?n ?f ?m ?g) {j. j <= Suc (?n + ?m)}
           (?A Un ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app
                 (template_hole 7, template_app (template_hole 6, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app (template_hole 6, t_empty)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app
                 (template_hole 7, template_app (template_hole 6, t_empty)),
                t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 6, t_empty)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 5),
                     template_var 1),
                   template_var 2)),
               template_app (template_hole 6, t_empty)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Algebra1.augmented_Sset_minimum",
     "[| Order ?D; ?X <= carrier ?D; ?a : carrier ?D; ?Y - {?a} <= ?X;
         ?y - {?a} ~= {}; minimum_elem (SIod ?D ?X) (?Y - {?a}) ?x;
         ALL x:?X. x \<preceq>\<^bsub>?D\<^esub> ?a |]
      ==> minimum_elem (SIod ?D (insert ?a ?X)) ?Y ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_inequation
         (less_equals, template_var 4,
          template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 10, template_var 5))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app
             (template_app (template_hole 7, template_var 3),
              template_hole 6)),
          template_var 4),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_hole 6)),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_hole 6))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 4))),
               template_var 2),
             template_var 0)
           ))),
    ("Algebra1.enumerate_1",
     "[| ALL j<=?n. ?f j : ?A; ALL j<=?m. ?g j : ?A; inj_on ?f {i. i <= ?n};
         inj_on ?g {j. j <= ?m}; ?f ` {j. j <= ?n} = ?A;
         ?g ` {j. j <= ?m} = ?A |]
      ==> ?n = ?m",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, t_empty))
            ),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app (template_hole 3, t_empty)),
          template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 0),
            template_app (template_hole 3, t_empty)),
          template_var 2)],
       template_equation (template_var 4, template_var 1))),
    ("Algebra1.Un_less_Un",
     "[| ?f : {j. j <= Suc ?n} \<rightarrow> ?X;
         ?A <= \<Union> (?f ` {j. j <= Suc ?n}); ?i : {j. j <= Suc ?n};
         ?j : {l. l <= Suc ?n}; ?i ~= ?j & ?f ?i <= ?f ?j |]
      ==> ?A <= \<Union>
                 (compose {j. j <= ?n} ?f (skip ?i) ` {j. j <= ?n})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, t_empty)),
                t_empty))
            ),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app (template_hole 11, t_empty)))),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 11, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 11, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_var 5, template_var 1)),
                template_app (template_var 5, template_var 0)))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 11, t_empty)),
                   template_var 5),
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 11, t_empty))))))]
