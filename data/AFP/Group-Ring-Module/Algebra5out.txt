Loading theory "HOL-Library.FuncSet" (required by "Draft.Algebra5MoreTemplates" via "Draft.Algebra5" via "Draft.Algebra4" via "Draft.Algebra3" via "Draft.Algebra2" via "Draft.Algebra1")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.099s elapsed time, 0.408s cpu time, 0.019s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.199s elapsed time, 0.800s cpu time, 0.077s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.370s elapsed time, 1.373s cpu time, 0.382s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.477s elapsed time, 1.789s cpu time, 0.425s GC time
Loading theory "Draft.Algebra1" (required by "Draft.Algebra5MoreTemplates" via "Draft.Algebra5" via "Draft.Algebra4" via "Draft.Algebra3" via "Draft.Algebra2")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.803s elapsed time, 3.047s cpu time, 0.646s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  nasc_seq :: "nat set => nat => nat => nat"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.929s elapsed time, 3.414s cpu time, 0.872s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  ndec_seq :: "nat set => nat => nat => nat"
Found termination order: "size <*mlex*> {}"
consts
  dec_seq :: "int set => int => nat => int"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  ant :: {minus,one,plus,times,uminus,zero,ord}
  less_eq_ant == less_eq :: ant => ant => bool
  less_ant == less :: ant => ant => bool
  zero_ant == zero_class.zero :: ant
  uminus_ant == uminus :: ant => ant
  times_ant == times :: ant => ant => ant
  plus_ant == plus :: ant => ant => ant
  one_ant == one_class.one :: ant
  minus_ant == minus :: ant => ant => ant
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  Amin :: "nat => (nat => ant) => ant"
consts
  Amax :: "nat => (nat => ant) => ant"
consts
  aasc_seq :: "ant set => ant => nat => ant"
consts
  ASum :: "(nat => ant) => nat => ant"
### theory "HOL-Library.Tree"
### 1.906s elapsed time, 5.910s cpu time, 1.471s GC time
Loading theory "Draft.Templates" (required by "Draft.Algebra5MoreTemplates" via "Draft.ExtrEqs")
consts
  Zmax :: "nat => (nat => int) => int"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.050s elapsed time, 0.101s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Algebra5MoreTemplates")
locale Order
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Order D"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.762s elapsed time, 1.885s cpu time, 0.870s GC time
locale Torder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Torder D"
locale Worder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Worder D"
### theory "Draft.Algebra1"
### 2.960s elapsed time, 7.003s cpu time, 2.092s GC time
Loading theory "Draft.Algebra2" (required by "Draft.Algebra5MoreTemplates" via "Draft.Algebra5" via "Draft.Algebra4" via "Draft.Algebra3")
locale Group
  fixes G :: "('a, 'b) Group_scheme"  (structure)
  assumes "Group G"
### theory "Draft.Algebra2"
### 2.087s elapsed time, 3.014s cpu time, 1.290s GC time
Loading theory "Draft.Algebra3" (required by "Draft.Algebra5MoreTemplates" via "Draft.Algebra5" via "Draft.Algebra4")
[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |] ==> inj_on (transpos ?i ?j) {i. i <= ?n}
### theory "Draft.Algebra3"
### 1.838s elapsed time, 2.102s cpu time, 0.358s GC time
Loading theory "Draft.Algebra4" (required by "Draft.Algebra5MoreTemplates" via "Draft.Algebra5")
locale aGroup
  fixes A :: "('a, 'b) aGroup_scheme"  (structure)
  assumes "aGroup A"
locale Ring
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
  assumes "Ring R"
consts
  nscal :: "('a, 'more) Ring_scheme => 'a => nat => 'a"
consts
  npow :: "('a, 'more) Ring_scheme => 'a => nat => 'a"
consts
  nprod :: "('a, 'more) Ring_scheme => (nat => 'a) => nat => 'a"
consts
  nsum :: "('a, 'more) aGroup_scheme => (nat => 'a) => nat => 'a"
consts
  sum_pr_ideals :: "('a, 'm) Ring_scheme => (nat => 'a) => nat => 'a set"
consts
  ideal_n_prod :: "('a, 'm) Ring_scheme => nat => (nat => 'a set) => 'a set"
consts
  ideal_pow :: "'a set => ('a, 'more) Ring_scheme => nat => 'a set"
locale Idomain
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
  assumes "Idomain R"
locale Corps
  fixes K :: "('a, 'b) Ring_scheme"  (structure)
  assumes "Corps K"
### theory "Draft.Algebra4"
### 2.519s elapsed time, 2.951s cpu time, 0.587s GC time
Loading theory "Draft.Algebra5" (required by "Draft.Algebra5MoreTemplates")
consts
  ac_fProd_Rg ::
    "nat => (nat => ('a, 'more) Ring_scheme) => (nat => 'a) set"
locale TwoRings
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
    and R' :: "('c, 'd) Ring_scheme"  (structure)
  assumes "TwoRings R R'"
locale PolynRg
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
    and S :: "('a, 'c) Ring_scheme"  (structure)
    and X :: "'a"  (structure)
  assumes "PolynRg R S X"
### theory "Draft.Algebra5"
### 1.823s elapsed time, 2.104s cpu time, 0.384s GC time
Loading theory "Draft.Algebra5MoreTemplates"
val templateLemmas =
   [("Algebra5.Subring_subset",
     "Subring ?R ?S ==> carrier ?S <= carrier ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Algebra5.prodrg_ring",
     "ALL k:?I. Ring (?A k) ==> Ring (r\<Pi>\<^bsub>?I\<^esub> ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra5.prod_one_func",
     "ALL k:?I. Ring (?A k) ==> prod_one ?I ?A : carr_prodag ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra5.fprodrg_ring",
     "ALL k<=?n. Ring (?B k) ==> Ring (fprodrg ?n ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebra5.prodrg_one",
     "ALL k:?I. Ring (?A k) ==>
      1\<^sub>r\<^bsub>r\<Pi>\<^bsub>?I\<^esub> ?A\<^esub> =
      prod_one ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra5.prodrg_zero",
     "ALL k:?I. Ring (?A k) ==>
      \<zero>\<^bsub>r\<Pi>\<^bsub>?I\<^esub> ?A\<^esub> = prod_zero ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra5.prodrg_mOp",
     "ALL k:?I. Ring (?A k) ==>
      mop (r\<Pi>\<^bsub>?I\<^esub> ?A) = prod_mOp ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra5.prodrg_tOp",
     "ALL k:?I. Ring (?A k) ==>
      (\<cdot>\<^sub>r\<^bsub>r\<Pi>\<^bsub>?I\<^esub> ?A\<^esub>) =
      prod_tOp ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra5.prodrg_pOp",
     "ALL k:?I. Ring (?A k) ==>
      (\<plusminus>\<^bsub>r\<Pi>\<^bsub>?I\<^esub> ?A\<^esub>) =
      prod_pOp ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Algebra5.prodrg_carrier",
     "ALL k:?I. Ring (?A k) ==>
      carrier (r\<Pi>\<^bsub>?I\<^esub> ?A) =
      carrier (a\<Pi>\<^bsub>?I\<^esub> ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra5.transpos_Tr_n1",
     "Suc (Suc 0) <= ?n ==> transpos (?n - Suc 0) ?n ?n = ?n - Suc 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 4, template_hole 3))),
             template_var 0),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 4, template_hole 3))))),
    ("Algebra5.transpos_Tr_n2",
     "Suc (Suc 0) <= ?n ==> transpos (?n - Suc 0) ?n (?n - Suc 0) = ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 4,
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 4, template_hole 3))),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 4, template_hole 3))),
         template_var 0))),
    ("Algebra5.prodrg_component",
     "[| ?f : carrier (r\<Pi>\<^bsub>?I\<^esub> ?A); ?i : ?I |]
      ==> ?f ?i : carrier (?A ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 0)),
             template_app
              (template_hole 0,
               template_app (template_var 1, template_var 0)))
           ))),
    ("Algebra5.prodrg_elem_extensional",
     "[| ALL k:?I. Ring (?A k);
         ?f : carrier (r\<Pi>\<^bsub>?I\<^esub> ?A) |]
      ==> ?f : extensional ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Algebra5.ac_fProd_Prod",
     "ALL k<=?n. Ring (?B k) ==>
      ac_fProd_Rg ?n ?B = carr_prodag {j. j <= ?n} ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1, template_app (template_hole 0, t_empty)),
           template_var 0)))),
    ("Algebra5.project_rhom",
     "[| ALL k:?I. Ring (?A k); ?j : ?I |]
      ==> \<pi>\<^bsub>?I,?A,?j\<^esub>
          : rHom (r\<Pi>\<^bsub>?I\<^esub> ?A) (?A ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app (template_var 1, template_var 0)))
           ))),
    ("Algebra5.prod_tOp_func",
     "ALL k:?I. Ring (?A k) ==>
      prod_tOp ?I ?A
      : carr_prodag ?I ?A \<rightarrow>
        carr_prodag ?I ?A \<rightarrow> carr_prodag ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               t_empty))
           ))),
    ("Algebra5.prodrg_sameTr6",
     "[| ALL k:?I. Ring (?A k); ALL k:?I. ?A k = ?B k |]
      ==> prod_one ?I ?A = prod_one ?I ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra5.prodrg_sameTr5",
     "[| ALL k:?I. Ring (?A k); ALL k:?I. ?A k = ?B k |]
      ==> prod_tOp ?I ?A = prod_tOp ?I ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra5.prodrg_same",
     "[| ALL k:?I. Ring (?A k); ALL k:?I. ?A k = ?B k |]
      ==> r\<Pi>\<^bsub>?I\<^esub> ?A = r\<Pi>\<^bsub>?I\<^esub> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Algebra5.carr_prodrg_mem_eq",
     "[| ?f : carrier (r\<Pi>\<^bsub>?I\<^esub> ?A);
         ?g : carrier (r\<Pi>\<^bsub>?I\<^esub> ?A);
         ALL i:?I. ?f i = ?g i |]
      ==> ?f = ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_equation (template_var 3, template_var 0))),
    ("Algebra5.prod_tOp_mem",
     "[| ALL k:?I. Ring (?A k); ?X : carr_prodag ?I ?A;
         ?Y : carr_prodag ?I ?A |]
      ==> prod_tOp ?I ?A ?X ?Y : carr_prodag ?I ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))
           ))),
    ("Algebra5.A_to_prodag_rHom",
     "[| Ring ?A; ALL k:?I. Ring (?B k); ALL k:?I. ?S k : rHom ?A (?B k) |]
      ==> A_to_prodag ?A ?I ?S ?B : rHom ?A (r\<Pi>\<^bsub>?I\<^esub> ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2),
                   template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("Algebra5.A_to_prodag_mem",
     "[| Ring ?A; ALL k:?I. Ring (?B k); ALL k:?I. ?S k : rHom ?A (?B k);
         ?x : carrier ?A |]
      ==> A_to_prodag ?A ?I ?S ?B ?x : carr_prodag ?I ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 1),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("Algebra5.skip_im1",
     "[| ?i <= Suc ?n;
         ?P : {j. j <= Suc ?n} \<rightarrow> Collect (prime_ideal ?R) |]
      ==> compose {j. j <= ?n} ?P (skip ?i) ` {j. j <= ?n} =
          ?P ` ({j. j <= Suc ?n} - {?i})",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, t_empty)),
                t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 9, t_empty)),
                 template_var 1),
               template_app (template_hole 3, template_var 3))),
           template_app (template_hole 9, t_empty)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 9, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0)))))),
    ("Algebra5.ac_fProd_ProdTr1",
     "ALL k<=Suc ?n. Ring (?B k) ==>
      ag_setfunc ?n ?B (Suc 0) (compose {0} ?B (slide (Suc ?n)))
       (carr_prodag {i. i <= ?n} ?B)
       (carr_prodag {0} (compose {0} ?B (slide (Suc ?n))))
      <= carr_prodag {i. i <= Suc ?n} ?B",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0),
                 template_app (template_hole 10, template_hole 6)),
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 6),
                       template_hole 3)),
                   template_var 0),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 10, template_var 1)))),
             template_app
              (template_app
                (template_hole 1, template_app (template_hole 0, t_empty)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 6),
                     template_hole 3)),
                 template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 10, template_var 1))))),
         template_app
          (template_app
            (template_hole 1, template_app (template_hole 0, t_empty)),
           template_var 0)))),
    ("Algebra5.augm_funcTr",
     "[| ALL k<=Suc ?n. Ring (?B k); ?f : carr_prodag {i. i <= Suc ?n} ?B |]
      ==> ?f =
          augm_func ?n (restrict ?f {i. i <= ?n})
           (Un_carrier {i. i <= ?n} ?B) (Suc 0)
           (\<lambda>x\<in>{0}. ?f (x + Suc ?n))
           (Un_carrier {0} (compose {0} ?B (slide (Suc ?n))))",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, t_empty)),
                template_var 1))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app (template_hole 10, t_empty))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 10, t_empty)),
                   template_var 1)),
               template_app (template_hole 14, template_hole 5)),
             template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app (template_hole 3, template_hole 5),
                 template_hole 2))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_hole 5),
                 template_hole 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_hole 5),
                     template_hole 2)),
                 template_var 1),
               template_app
                (template_hole 0,
                 template_app (template_hole 14, template_var 2)))))))),
    ("Algebra5.Chinese_remTr1",
     "[| Ring ?A; ALL k<=?n. ideal ?A (?J k);
         ALL k<=?n. ?B k = ?A /\<^sub>r ?J k;
         ALL k<=?n. ?S k = pj ?A (?J k) |]
      ==> ker\<^bsub>?A,(r\<Pi>\<^bsub>{j. j <= ?n}\<^esub>
                         ?B)\<^esub> A_to_prodag ?A {j. j <= ?n} ?S ?B =
          \<Inter> {I. EX k:{j. j <= ?n}. I = ?J k}",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 4)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 4),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 4, t_empty)),
               template_var 0),
             template_var 1)),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty)))))]:
   (string * thm * template) list
### theory "Draft.Algebra5MoreTemplates"
### 0.427s elapsed time, 0.653s cpu time, 0.102s GC time
val it = (): unit
