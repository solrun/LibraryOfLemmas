Loading theory "HOL-Library.FuncSet" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7" via "Draft.Algebra6" via "Draft.Algebra5" via "Draft.Algebra4" via "Draft.Algebra3" via "Draft.Algebra2" via "Draft.Algebra1")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.553s cpu time, 0.053s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.180s elapsed time, 0.717s cpu time, 0.053s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.414s elapsed time, 1.539s cpu time, 0.391s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.449s elapsed time, 1.677s cpu time, 0.391s GC time
Loading theory "Draft.Algebra1" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7" via "Draft.Algebra6" via "Draft.Algebra5" via "Draft.Algebra4" via "Draft.Algebra3" via "Draft.Algebra2")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.692s elapsed time, 2.712s cpu time, 0.348s GC time
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  nasc_seq :: "nat set => nat => nat => nat"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.930s elapsed time, 3.352s cpu time, 0.824s GC time
Found termination order: "size <*mlex*> {}"
consts
  ndec_seq :: "nat set => nat => nat => nat"
Found termination order: "size <*mlex*> {}"
consts
  dec_seq :: "int set => int => nat => int"
Found termination order: "size <*mlex*> {}"
instantiation
  ant :: {minus,one,plus,times,uminus,zero,ord}
  less_eq_ant == less_eq :: ant => ant => bool
  less_ant == less :: ant => ant => bool
  zero_ant == zero_class.zero :: ant
  uminus_ant == uminus :: ant => ant
  times_ant == times :: ant => ant => ant
  plus_ant == plus :: ant => ant => ant
  one_ant == one_class.one :: ant
  minus_ant == minus :: ant => ant => ant
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  Amin :: "nat => (nat => ant) => ant"
consts
  Amax :: "nat => (nat => ant) => ant"
Found termination order: "size <*mlex*> {}"
consts
  aasc_seq :: "ant set => ant => nat => ant"
consts
  ASum :: "(nat => ant) => nat => ant"
consts
  Zmax :: "nat => (nat => int) => int"
### theory "HOL-Library.Tree"
### 1.835s elapsed time, 5.666s cpu time, 1.326s GC time
Loading theory "Draft.Templates" (required by "Draft.Algebra9MoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.156s cpu time, 0.060s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Algebra9MoreTemplates")
locale Order
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Order D"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.668s elapsed time, 1.648s cpu time, 0.740s GC time
locale Torder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Torder D"
locale Worder
  fixes D :: "('a, 'b) Order_scheme"  (structure)
  assumes "Worder D"
### theory "Draft.Algebra1"
### 2.827s elapsed time, 6.659s cpu time, 1.818s GC time
Loading theory "Draft.Algebra2" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7" via "Draft.Algebra6" via "Draft.Algebra5" via "Draft.Algebra4" via "Draft.Algebra3")
locale Group
  fixes G :: "('a, 'b) Group_scheme"  (structure)
  assumes "Group G"
### theory "Draft.Algebra2"
### 2.056s elapsed time, 2.975s cpu time, 1.271s GC time
Loading theory "Draft.Algebra3" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7" via "Draft.Algebra6" via "Draft.Algebra5" via "Draft.Algebra4")
[| ?i <= ?n; ?j <= ?n; ?i ~= ?j |] ==> inj_on (transpos ?i ?j) {i. i <= ?n}
### theory "Draft.Algebra3"
### 1.788s elapsed time, 2.098s cpu time, 0.417s GC time
Loading theory "Draft.Algebra4" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7" via "Draft.Algebra6" via "Draft.Algebra5")
locale aGroup
  fixes A :: "('a, 'b) aGroup_scheme"  (structure)
  assumes "aGroup A"
locale Ring
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
  assumes "Ring R"
consts
  nscal :: "('a, 'more) Ring_scheme => 'a => nat => 'a"
consts
  npow :: "('a, 'more) Ring_scheme => 'a => nat => 'a"
consts
  nprod :: "('a, 'more) Ring_scheme => (nat => 'a) => nat => 'a"
consts
  nsum :: "('a, 'more) aGroup_scheme => (nat => 'a) => nat => 'a"
consts
  sum_pr_ideals :: "('a, 'm) Ring_scheme => (nat => 'a) => nat => 'a set"
consts
  ideal_n_prod :: "('a, 'm) Ring_scheme => nat => (nat => 'a set) => 'a set"
consts
  ideal_pow :: "'a set => ('a, 'more) Ring_scheme => nat => 'a set"
locale Idomain
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
  assumes "Idomain R"
locale Corps
  fixes K :: "('a, 'b) Ring_scheme"  (structure)
  assumes "Corps K"
### theory "Draft.Algebra4"
### 2.428s elapsed time, 2.856s cpu time, 0.577s GC time
Loading theory "Draft.Algebra5" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7" via "Draft.Algebra6")
consts
  ac_fProd_Rg ::
    "nat => (nat => ('a, 'more) Ring_scheme) => (nat => 'a) set"
locale TwoRings
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
    and R' :: "('c, 'd) Ring_scheme"  (structure)
  assumes "TwoRings R R'"
locale PolynRg
  fixes R :: "('a, 'b) Ring_scheme"  (structure)
    and S :: "('a, 'c) Ring_scheme"  (structure)
    and X :: "'a"  (structure)
  assumes "PolynRg R S X"
### theory "Draft.Algebra5"
### 1.785s elapsed time, 2.143s cpu time, 0.482s GC time
Loading theory "Draft.Algebra6" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8" via "Draft.Algebra7")
### Ignoring duplicate rewrite rule:
### ?b1 <= ?y ==> max ?y ?b1 == ?y
### Ignoring duplicate rewrite rule:
### ?a1 <= ?y ==> max ?a1 ?y == ?y
### Ambiguous input (line 4679 of "$AFP/Group-Ring-Module/Algebra6.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>Hensel_next" ("_position" R) ("_position" S) ("_position" X)
###       ("_position" t) ("_position" R') ("_position" Y) ("_position" f)
###       ("_position" m) ("_position" gh))
###     ("_Eps" ("_position" gh1)
###       ("\<^const>HOL.conj"
###         ("\<^const>Set.member" ("_position" gh1)
###           ("\<^const>Product_Type.Times"
###             ("_applC" ("_position" carrier) ("_position" R))
###             ("_applC" ("_position" carrier) ("_position" R))))
###         ("\<^const>HOL.conj"
###           ("\<^const>Orderings.ord_class.less_eq"
###             ("_applC" ("_position" deg)
###               ("_cargs" ("_position" R)
###                 ("_cargs" ("_position" S)
###                   ("_cargs" ("_position" X)
###                     ("_applC" ("_position" fst) ("_position" gh1))))))
###             ("_applC" ("_position" deg)
###               ("_cargs" ("_position" R')
###                 ("_cargs"
###                   ("\<^const>Algebra4.QRING" ("_position" S)
###                     ("\<^const>Algebra4.Rxa" ("_position" S)
###                       ("_position" t)))
###                   ("_cargs" ("_position" Y)
###                     ("_applC" ("_position" erH)
###                       ("_cargs" ("_position" R)
###                         ("_cargs" ("_position" S)
###                           ("_cargs" ("_position" X)
###                             ("_cargs" ("_position" R')
###                               ("_cargs"
###                                 ("\<^const>Algebra4.QRING" ("_position" S)
###                                   ("\<^const>Algebra4.Rxa" ("_position" S)
###                                     ("_position" t)))
###                                 ("_cargs" ("_position" Y)
###                                   ("_cargs"
###                                     ("_applC" ("_position" pj)
### ("_cargs" ("_position" S)
###   ("\<^const>Algebra4.Rxa" ("_position" S) ("_position" t))))
###                                     ("_applC" ("_position" fst)
### ("_position" gh1)))))))))))))))
###           ("\<^const>HOL.conj"
###             ("_applC" ("_position" P_mod)
###               ("_cargs" ("_position" R)
###                 ("_cargs" ("_position" S)
###                   ("_cargs" ("_position" X)
###                     ("_cargs"
###                       ("\<^const>Algebra4.Rxa" ("_position" S)
###                         ("\<^const>Algebra4.NPOW" ("_position" t)
###                           ("_position" S) ("_position" m)))
###                       ("\<^const>Algebra4.aGroup.pop_indexed"
###                         ("_applC" ("_position" fst) ("_position" gh))
###                         ("_index" ("_position" R))
###                         ("\<^const>Algebra4.aGroup.mop_indexed"
###                           ("_index" ("_position" R))
###                           ("_applC" ("_position" fst)
###                             ("_position" gh1)))))))))
###             ("\<^const>HOL.conj"
###               ("\<^const>Orderings.ord_class.less_eq"
###                 ("\<^const>Groups.plus_class.plus"
###                   ("_applC" ("_position" deg)
###                     ("_cargs" ("_position" R)
###                       ("_cargs" ("_position" S)
###                         ("_cargs" ("_position" X)
###                           ("_applC" ("_position" snd) ("_position" gh1))))))
###                   ("_applC" ("_position" deg)
###                     ("_cargs" ("_position" R')
###                       ("_cargs"
###                         ("\<^const>Algebra4.QRING" ("_position" S)
###                           ("\<^const>Algebra4.Rxa" ("_position" S)
###                             ("_position" t)))
###                         ("_cargs" ("_position" Y)
###                           ("_applC" ("_position" erH)
###                             ("_cargs" ("_position" R)
###                               ("_cargs" ("_position" S)
###                                 ("_cargs" ("_position" X)
###                                   ("_cargs" ("_position" R')
###                                     ("_cargs"
### ("\<^const>Algebra4.QRING" ("_position" S)
###   ("\<^const>Algebra4.Rxa" ("_position" S) ("_position" t)))
### ("_cargs" ("_position" Y)
###   ("_cargs"
###     ("_applC" ("_position" pj)
###       ("_cargs" ("_position" S)
###         ("\<^const>Algebra4.Rxa" ("_position" S) ("_position" t))))
###     ("_applC" ("_position" fst) ("_position" gh1)))))))))))))))
###                 ("_applC" ("_position" deg)
###                   ("_cargs" ("_position" R)
###                     ("_cargs" ("_position" S)
###                       ("_cargs" ("_position" X) ("_position" f))))))
###               ("\<^const>HOL.conj"
###                 ("_applC" ("_position" P_mod)
###                   ("_cargs" ("_position" R)
###                     ("_cargs" ("_position" S)
###                       ("_cargs" ("_position" X)
###                         ("_cargs"
###                           ("\<^const>Algebra4.Rxa" ("_position" S)
###                             ("\<^const>Algebra4.NPOW" ("_position" t)
###                               ("_position" S) ("_position" m)))
###                           ("\<^const>Algebra4.aGroup.pop_indexed"
###                             ("_applC" ("_position" snd) ("_position" gh))
###                             ("_index" ("_position" R))
###                             ("\<^const>Algebra4.aGroup.mop_indexed"
###                               ("_index" ("_position" R))
###                               ("_applC" ("_position" snd)
###                                 ("_position" gh1)))))))))
###                 ("_applC" ("_position" P_mod)
###                   ("_cargs" ("_position" R)
###                     ("_cargs" ("_position" S)
###                       ("_cargs" ("_position" X)
###                         ("_cargs"
###                           ("\<^const>Algebra4.Rxa" ("_position" S)
###                             ("\<^const>Algebra4.NPOW" ("_position" t)
###                               ("_position" S)
###                               ("_applC" ("_position" Suc) ("_position" m))))
###                           ("\<^const>Algebra4.aGroup.pop_indexed"
###                             ("_position" f) ("_index" ("_position" R))
###                             ("\<^const>Algebra4.aGroup.mop_indexed"
###                               ("_index" ("_position" R))
###                               ("\<^const>Algebra4.Ring.tp_indexed"
###                                 ("_applC" ("_position" fst)
###                                   ("_position" gh1))
###                                 ("_index" ("_position" R))
###                                 ("_applC" ("_position" snd)
###                                   ("_position" gh1))))))))))))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>Hensel_next" ("_position" R) ("_position" S) ("_position" X)
###     ("_position" t) ("_position" R') ("_position" Y) ("_position" f)
###     ("_position" m)
###     ("\<^const>HOL.eq" ("_position" gh)
###       ("_Eps" ("_position" gh1)
###         ("\<^const>HOL.conj"
###           ("\<^const>Set.member" ("_position" gh1)
###             ("\<^const>Product_Type.Times"
###               ("_applC" ("_position" carrier) ("_position" R))
###               ("_applC" ("_position" carrier) ("_position" R))))
###           ("\<^const>HOL.conj"
###             ("\<^const>Orderings.ord_class.less_eq"
###               ("_applC" ("_position" deg)
###                 ("_cargs" ("_position" R)
###                   ("_cargs" ("_position" S)
###                     ("_cargs" ("_position" X)
###                       ("_applC" ("_position" fst) ("_position" gh1))))))
###               ("_applC" ("_position" deg)
###                 ("_cargs" ("_position" R')
###                   ("_cargs"
###                     ("\<^const>Algebra4.QRING" ("_position" S)
###                       ("\<^const>Algebra4.Rxa" ("_position" S)
###                         ("_position" t)))
###                     ("_cargs" ("_position" Y)
###                       ("_applC" ("_position" erH)
###                         ("_cargs" ("_position" R)
###                           ("_cargs" ("_position" S)
###                             ("_cargs" ("_position" X)
###                               ("_cargs" ("_position" R')
###                                 ("_cargs"
###                                   ("\<^const>Algebra4.QRING" ("_position" S)
###                                     ("\<^const>Algebra4.Rxa" ("_position" S)
### ("_position" t)))
###                                   ("_cargs" ("_position" Y)
###                                     ("_cargs"
### ("_applC" ("_position" pj)
###   ("_cargs" ("_position" S)
###     ("\<^const>Algebra4.Rxa" ("_position" S) ("_position" t))))
### ("_applC" ("_position" fst) ("_position" gh1)))))))))))))))
###             ("\<^const>HOL.conj"
###               ("_applC" ("_position" P_mod)
###                 ("_cargs" ("_position" R)
###                   ("_cargs" ("_position" S)
###                     ("_cargs" ("_position" X)
###                       ("_cargs"
###                         ("\<^const>Algebra4.Rxa" ("_position" S)
###                           ("\<^const>Algebra4.NPOW" ("_position" t)
###                             ("_position" S) ("_position" m)))
###                         ("\<^const>Algebra4.aGroup.pop_indexed"
###                           ("_applC" ("_position" fst) ("_position" gh))
###                           ("_index" ("_position" R))
###                           ("\<^const>Algebra4.aGroup.mop_indexed"
###                             ("_index" ("_position" R))
###                             ("_applC" ("_position" fst)
###                               ("_position" gh1)))))))))
###               ("\<^const>HOL.conj"
###                 ("\<^const>Orderings.ord_class.less_eq"
###                   ("\<^const>Groups.plus_class.plus"
###                     ("_applC" ("_position" deg)
###                       ("_cargs" ("_position" R)
###                         ("_cargs" ("_position" S)
###                           ("_cargs" ("_position" X)
###                             ("_applC" ("_position" snd)
###                               ("_position" gh1))))))
###                     ("_applC" ("_position" deg)
###                       ("_cargs" ("_position" R')
###                         ("_cargs"
###                           ("\<^const>Algebra4.QRING" ("_position" S)
###                             ("\<^const>Algebra4.Rxa" ("_position" S)
###                               ("_position" t)))
###                           ("_cargs" ("_position" Y)
###                             ("_applC" ("_position" erH)
###                               ("_cargs" ("_position" R)
###                                 ("_cargs" ("_position" S)
###                                   ("_cargs" ("_position" X)
###                                     ("_cargs" ("_position" R')
### ("_cargs"
###   ("\<^const>Algebra4.QRING" ("_position" S)
###     ("\<^const>Algebra4.Rxa" ("_position" S) ("_position" t)))
###   ("_cargs" ("_position" Y)
###     ("_cargs"
###       ("_applC" ("_position" pj)
###         ("_cargs" ("_position" S)
###           ("\<^const>Algebra4.Rxa" ("_position" S) ("_position" t))))
###       ("_applC" ("_position" fst) ("_position" gh1)))))))))))))))
###                   ("_applC" ("_position" deg)
###                     ("_cargs" ("_position" R)
###                       ("_cargs" ("_position" S)
###                         ("_cargs" ("_position" X) ("_position" f))))))
###                 ("\<^const>HOL.conj"
###                   ("_applC" ("_position" P_mod)
###                     ("_cargs" ("_position" R)
###                       ("_cargs" ("_position" S)
###                         ("_cargs" ("_position" X)
###                           ("_cargs"
###                             ("\<^const>Algebra4.Rxa" ("_position" S)
###                               ("\<^const>Algebra4.NPOW" ("_position" t)
###                                 ("_position" S) ("_position" m)))
###                             ("\<^const>Algebra4.aGroup.pop_indexed"
###                               ("_applC" ("_position" snd) ("_position" gh))
###                               ("_index" ("_position" R))
###                               ("\<^const>Algebra4.aGroup.mop_indexed"
###                                 ("_index" ("_position" R))
###                                 ("_applC" ("_position" snd)
###                                   ("_position" gh1)))))))))
###                   ("_applC" ("_position" P_mod)
###                     ("_cargs" ("_position" R)
###                       ("_cargs" ("_position" S)
###                         ("_cargs" ("_position" X)
###                           ("_cargs"
###                             ("\<^const>Algebra4.Rxa" ("_position" S)
###                               ("\<^const>Algebra4.NPOW" ("_position" t)
###                                 ("_position" S)
###                                 ("_applC" ("_position" Suc)
###                                   ("_position" m))))
###                             ("\<^const>Algebra4.aGroup.pop_indexed"
###                               ("_position" f) ("_index" ("_position" R))
###                               ("\<^const>Algebra4.aGroup.mop_indexed"
###                                 ("_index" ("_position" R))
###                                 ("\<^const>Algebra4.Ring.tp_indexed"
###                                   ("_applC" ("_position" fst)
###                                     ("_position" gh1))
###                                   ("_index" ("_position" R))
###                                   ("_applC" ("_position" snd)
###                                     ("_position" gh1)))))))))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  Hensel_pair ::
    "('a, 'b) Ring_scheme
     => ('a, 'c) Ring_scheme
        => 'a => 'a => ('a set, 'm) Ring_scheme
                       => 'a set => 'a => 'a => 'a => nat => 'a * 'a"
### theory "Draft.Algebra6"
### 1.879s elapsed time, 2.230s cpu time, 0.477s GC time
Loading theory "Draft.Algebra7" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9" via "Draft.Algebra8")
locale Module
  fixes M :: "('a, 'b, 'c) Module_scheme"  (structure)
    and R :: "('b, 'd) Ring_scheme"  (structure)
  assumes "Module M R"
[| R module N; R module M; invmfun R M N f : mHom R N M; ?m : carrier N |]
==> invmfun R M N f ?m : carrier M
[| ?R module ?M; ?R module ?N; ?f : mHom ?R ?M ?N |]
==> ?f\<^sup>\<flat>\<^bsub>?R ?M, ?N\<^esub>
    : mHom ?R (?M /\<^sub>m (ker\<^bsub>?M,?N\<^esub> ?f)) ?N
consts
  natm :: "('a, 'm) aGroup_scheme => nat => 'a => 'a"
[| ?R module ?M; submodule ?R ?M ?H |]
==> mpj ?M ?H : mHom ?R ?M (?M /\<^sub>m ?H)
### theory "Draft.Algebra7"
### 2.093s elapsed time, 2.613s cpu time, 0.706s GC time
Loading theory "Draft.Algebra8" (required by "Draft.Algebra9MoreTemplates" via "Draft.Algebra9")
### theory "Draft.Algebra8"
### 0.851s elapsed time, 1.070s cpu time, 0.295s GC time
Loading theory "Draft.Algebra9" (required by "Draft.Algebra9MoreTemplates")
[| R module Zm R e; R module M3; R module ?N; z1 : mHom R M3 (Zm R e);
   ?g : mHom R (Zm R e) ?N |]
==> compos M3 ?g z1 : mHom R M3 ?N
[| R module M1; R module M2; R module ?L; f : mHom R M1 M2;
   ?f : mHom R M2 ?L |]
==> sup_sharp R M1 M2 ?L f ?f : mHom R M1 ?L
consts
  add_set :: "('a => 'a => 'a) => 'a set => nat => 'a set"
consts
  aSum :: "('a, 'm) aGroup_scheme => nat => 'a => 'a"
### Ambiguous input (line 4200 of "$AFP/Group-Ring-Module/Algebra9.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.iff"
###     ("\<^fixed>fm_gen_by_prod" ("_position" R) ("_position" P)
###       ("_position" M) ("_position" N))
###     ("\<^const>HOL.conj"
###       ("\<^const>Algebra7.MODULE" ("_position" R) ("_position" P))
###       ("_applC" ("_position" free_generator)
###         ("_cargs" ("_position" R)
###           ("_cargs" ("_position" P)
###             ("\<^const>Algebra9.prod_carr" ("_position" M)
###               ("_position" N))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>fm_gen_by_prod" ("_position" R) ("_position" P) ("_position" M)
###     ("\<^const>HOL.iff" ("_position" N)
###       ("\<^const>HOL.conj"
###         ("\<^const>Algebra7.MODULE" ("_position" R) ("_position" P))
###         ("_applC" ("_position" free_generator)
###           ("_cargs" ("_position" R)
###             ("_cargs" ("_position" P)
###               ("\<^const>Algebra9.prod_carr" ("_position" M)
###                 ("_position" N)))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.conj"
###     ("\<^fixed>fm_gen_by_prod" ("_position" R) ("_position" P)
###       ("_position" M)
###       ("\<^const>HOL.iff" ("_position" N)
###         ("\<^const>Algebra7.MODULE" ("_position" R) ("_position" P))))
###     ("_applC" ("_position" free_generator)
###       ("_cargs" ("_position" R)
###         ("_cargs" ("_position" P)
###           ("\<^const>Algebra9.prod_carr" ("_position" M)
###             ("_position" N)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.conj"
###     ("\<^const>Algebra7.MODULE"
###       ("\<^fixed>fm_gen_by_prod" ("_position" R) ("_position" P)
###         ("_position" M)
###         ("\<^const>HOL.iff" ("_position" N) ("_position" R)))
###       ("_position" P))
###     ("_applC" ("_position" free_generator)
###       ("_cargs" ("_position" R)
###         ("_cargs" ("_position" P)
###           ("\<^const>Algebra9.prod_carr" ("_position" M)
###             ("_position" N)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 4420 of "$AFP/Group-Ring-Module/Algebra9.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>tensor_relations" ("_position" R) ("_position" M)
###       ("_position" N) ("_position" MN))
###     ("\<^const>Algebra9.Least_submodule" ("_position" R) ("_position" MN)
###       ("\<^const>Set.union"
###         ("\<^const>Set.union"
###           ("\<^const>Set.union"
###             ("\<^const>Algebra9.tensor_relations1" ("_position" R)
###               ("_position" M) ("_position" N) ("_position" MN))
###             ("\<^const>Algebra9.tensor_relations2" ("_position" R)
###               ("_position" M) ("_position" N) ("_position" MN)))
###           ("\<^const>Algebra9.tensor_relations3" ("_position" R)
###             ("_position" M) ("_position" N) ("_position" MN)))
###         ("\<^const>Algebra9.tensor_relations4" ("_position" R)
###           ("_position" M) ("_position" N) ("_position" MN))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>tensor_relations" ("_position" R) ("_position" M)
###     ("_position" N)
###     ("\<^const>HOL.eq" ("_position" MN)
###       ("\<^const>Algebra9.Least_submodule" ("_position" R) ("_position" MN)
###         ("\<^const>Set.union"
###           ("\<^const>Set.union"
###             ("\<^const>Set.union"
###               ("\<^const>Algebra9.tensor_relations1" ("_position" R)
###                 ("_position" M) ("_position" N) ("_position" MN))
###               ("\<^const>Algebra9.tensor_relations2" ("_position" R)
###                 ("_position" M) ("_position" N) ("_position" MN)))
###             ("\<^const>Algebra9.tensor_relations3" ("_position" R)
###               ("_position" M) ("_position" N) ("_position" MN)))
###           ("\<^const>Algebra9.tensor_relations4" ("_position" R)
###             ("_position" M) ("_position" N) ("_position" MN)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Algebra9"
### 2.937s elapsed time, 4.689s cpu time, 2.406s GC time
Loading theory "Draft.Algebra9MoreTemplates"
val templateLemmas =
   [("Algebra9.addition_inc_add0", "?A <= addition_set ?f ?A",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Algebra9.A_sub_aug_pm_set", "?A <= aug_pm_set ?z ?i ?A",
     template_inequation
      (less_equals, template_var 2,
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Algebra9.sfg_agroup", "sfg ?A ?a ==> aGroup ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Algebra9.addition_inc_add", "add_set ?f ?A ?n <= addition_set ?f ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Algebra9.addition_set_inc_z",
     "?z : addition_set ?f (aug_pm_set ?z ?i ?A)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0)))
         )),
    ("Algebra9.addition_sub_aug_pm_addition",
     "addition_set ?f ?A <= addition_set ?f (aug_pm_set ?z ?i ?A)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 3), template_var 2),
       template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Algebra9.a_in_aug_pm_set", "?a : ?A ==> ?a : aug_pm_set ?z ?i ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Algebra9.a_in_s_set", "?a : ?A ==> ?a : s_set ?R ?s ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("Algebra9.addition_set_mono",
     "?A <= ?B ==> addition_set ?f ?A <= addition_set ?f ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Algebra9.fags_ag",
     "fags_cond ?f ?z ?i ?a ==> aGroup (fags ?f ?z ?i ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Algebra9.assoc_bpp_restrict",
     "[| ?A <= ?B; assoc_bpp ?B ?f |] ==> assoc_bpp ?A ?f",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Algebra9.add_set_mono",
     "?A <= ?B ==> add_set ?f ?A ?n <= add_set ?f ?B ?n",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Algebra9.ipp_cond1_minus",
     "ipp_cond1 {?a} ?i ==> ipp_cond1 {\<^sub>?i- ?a} ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_hole 1)),
             template_var 0)
           ))),
    ("Algebra9.assoc_aug_assoc",
     "assoc_bpp (aug_pm_set ?z ?i {?a}) ?f ==> assoc_bpp {?a} ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 0))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Algebra9.fgmodule_carr",
     "carrier (fgmodule ?R ?A ?z ?i ?f ?s) =
      addition_set ?f (aug_pm_set ?z ?i (s_set ?R ?s ?A))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0),
             template_var 4))))),
    ("Algebra9.fags_mem",
     "fags_cond ?f ?z ?i ?a ==>
      ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> : fags_carr ?f ?z ?i ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 2),
                     template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Algebra9.in_aug_pm_set",
     "(?x : aug_pm_set ?z ?i ?A) =
      (?x = ?z | ?x : ?A | ?x : minus_set ?i ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("Algebra9.aug_pm_aug_pm_minus",
     "ipp_cond1 {?a} ?i ==>
      aug_pm_set ?z ?i {?a} = aug_pm_set ?z ?i {\<^sub>?i- ?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_hole 3)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_hole 3)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_hole 3))))),
    ("Algebra9.fag_single_free1",
     "[| fags_cond ?f ?z ?i ?a;
         ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> =
         ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub> |]
      ==> ?n = ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 3),
                template_var 2),
              template_var 4),
            template_var 1),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 3),
                template_var 2),
              template_var 4),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Algebra9.inv_ipp_minus",
     "[| ipp_cond1 {?a} ?i; inv_ipp ?z ?i ?f {?a} |]
      ==> inv_ipp ?z ?i ?f {\<^sub>?i- ?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 2),
                template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_hole 2))
           ))),
    ("Algebra9.ipp_cond2_minus",
     "[| ipp_cond1 {?a} ?i; ipp_cond2 ?z {?a} ?i ?f |]
      ==> ipp_cond2 ?z {\<^sub>?i- ?a} ?i ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_hole 2)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 3)),
                   template_hole 2)),
               template_var 2),
             template_var 0)
           ))),
    ("Algebra9.fags_ippTr",
     "fags_cond ?f ?z ?i ?a ==>
      fags_ipp ?f ?z ?i ?a (?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub>) =
      (- ?n)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 3),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra9.fag_single_free",
     "[| fags_cond ?f ?z ?i ?a; ?n ~= ?m |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> ~=
          ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 0))
           ))),
    ("Algebra9.zeroA_minus",
     "[| ipp_cond1 {?a} ?i; zeroA ?z ?i ?f {?a} ?z1.0 |]
      ==> zeroA ?z ?i ?f {\<^sub>?i- ?a} ?z1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_hole 2)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 3),
                  template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 3),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 4)),
                 template_hole 2)),
             template_var 0)
           ))),
    ("Algebra9.bpp_closed",
     "[| assoc_bpp ?A ?f; ?x : addition_set ?f ?A;
         ?y : addition_set ?f ?A |]
      ==> ?x \<^sub>?f+ ?y : addition_set ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3))
           ))),
    ("Algebra9.fags_bppTr",
     "fags_cond ?f ?z ?i ?a ==>
      fags_bpp ?f ?z ?i ?a (?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub>)
       (?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub>) =
      (?n + ?m)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 2),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra9.bpp_closed1",
     "[| assoc_bpp ?A ?f; ?x : add_set ?f ?A ?n; ?y : add_set ?f ?A ?m |]
      ==> ?x \<^sub>?f+ ?y : add_set ?f ?A (?n + ?m + Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 5),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 5),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("Algebra9.bpp_closedTr",
     "assoc_bpp ?A ?f ==>
      ALL x y.
         x : add_set ?f ?A ?n & y : add_set ?f ?A ?m -->
         x \<^sub>?f+ y : add_set ?f ?A (?n + ?m + Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Algebra9.aug_commute",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         ?x : addition_set ?f (aug_pm_set ?z ?i ?A);
         ?y : addition_set ?f (aug_pm_set ?z ?i ?A) |]
      ==> ?x \<^sub>?f+ ?y = ?y \<^sub>?f+ ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 0),
           template_var 1)))),
    ("Algebra9.aug_zero_unique",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         ?z1.0 : addition_set ?f (aug_pm_set ?z ?i ?A);
         zeroA ?z ?i ?f ?A ?z; zeroA ?z ?i ?f ?A ?z1.0 |]
      ==> ?z = ?z1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 4),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 3, template_var 0))),
    ("Algebra9.aug_bpp_closed",
     "[| assoc_bpp (aug_pm_set ?z ?i ?A) ?f;
         ?x : addition_set ?f (aug_pm_set ?z ?i ?A);
         ?y : addition_set ?f (aug_pm_set ?z ?i ?A) |]
      ==> ?x \<^sub>?f+ ?y : addition_set ?f (aug_pm_set ?z ?i ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 3)))
           ))),
    ("Algebra9.addition_assoc",
     "[| assoc_bpp ?A ?f; ?x : addition_set ?f ?A; ?y : addition_set ?f ?A;
         ?z : addition_set ?f ?A |]
      ==> ?x \<^sub>?f+ ?y \<^sub>?f+ ?z =
          ?x \<^sub>?f+ (?y \<^sub>?f+ ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0))))),
    ("Algebra9.tensor_prod_unique",
     "[| Ring ?R; ?R module ?M; ?R module ?N; ?R module ?MN;
         ?R module ?MN1.0; universal_property ?R ?M ?N ?MN ?f;
         universal_property ?R ?M ?N ?MN1.0 ?g |]
      ==> ?MN \<cong>\<^bsub>?R\<^esub> ?MN1.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 3),
             template_var 2)
           ))),
    ("Algebra9.aug_ipp_closed",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i;
         ?x : addition_set ?f (aug_pm_set ?z ?i ?A) |]
      ==> \<^sub>?i- ?x : addition_set ?f (aug_pm_set ?z ?i ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 2),
                 template_var 1)))
           ))),
    ("Algebra9.aug_ipp_closed0",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i;
         ?x : add_set ?f (aug_pm_set ?z ?i ?A) 0 |]
      ==> \<^sub>?i- ?x : add_set ?f (aug_pm_set ?z ?i ?A) 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 1),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2),
                    template_var 1)),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app
                    (template_app (template_hole 8, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_hole 1))
           ))),
    ("Algebra9.aug_ipp_closedTr2",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i;
         ?x : add_set ?f (aug_pm_set ?z ?i ?A) ?n |]
      ==> \<^sub>?i- ?x : add_set ?f (aug_pm_set ?z ?i ?A) ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 2),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3),
                    template_var 2)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_var 0))
           ))),
    ("Algebra9.aug_ipp_closedTr",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i |]
      ==> ALL x.
             x : add_set ?f (aug_pm_set ?z ?i ?A) ?n -->
             \<^sub>?i- x : add_set ?f (aug_pm_set ?z ?i ?A) ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 1),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Algebra9.tensor_prod_uniqueTr",
     "[| Ring ?R; ?R module ?M; ?R module ?N; ?R module ?MN;
         ?R module ?MN1.0; universal_property ?R ?M ?N ?MN ?f;
         universal_property ?R ?M ?N ?MN1.0 ?g |]
      ==> EX! k.
             k : mHom ?R ?MN1.0 ?MN &
             compose (?M \<times>\<^sub>c ?N) k ?g = ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Algebra9.fag_aGroup",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f ?A;
         commute_bpp ?f (aug_pm_set ?z ?i ?A); zeroA ?z ?i ?f ?A ?z |]
      ==> aGroup (fag_gen_by ?A ?f ?i ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 0),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1),
                  template_var 3),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 1),
               template_var 2))
           ))),
    ("Algebra9.addition_set_sub_fag_gen_carrier",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f ?A;
         commute_bpp ?f (aug_pm_set ?z ?i ?A); zeroA ?z ?i ?f ?A ?z |]
      ==> addition_set ?f ?A <= carrier (fag_gen_by ?A ?f ?i ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 0),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1),
                  template_var 3),
                template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 3), template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1),
             template_var 2))))),
    ("Algebra9.fag_gen_carrier",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f ?A;
         commute_bpp ?f (aug_pm_set ?z ?i ?A); zeroA ?z ?i ?f ?A ?z |]
      ==> carrier (fag_gen_by ?A ?f ?i ?z) =
          addition_set ?f (aug_pm_set ?z ?i ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 0),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1),
                  template_var 3),
                template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3),
               template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 10, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Algebra9.inv_aug_addition",
     "[| commute_bpp ?f (aug_pm_set ?z ?i ?A);
         assoc_bpp (aug_pm_set ?z ?i ?A) ?f; ipp_cond1 ?A ?i;
         ipp_cond2 ?z ?A ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f ?A;
         commute_bpp ?f (aug_pm_set ?z ?i ?A); zeroA ?z ?i ?f ?A ?z |]
      ==> ALL a:addition_set ?f (aug_pm_set ?z ?i ?A).
             \<^sub>?i- a \<^sub>?f+ a = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 0),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1),
                  template_var 3),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 11, template_var 2),
                     template_var 1),
                   template_var 0))),
             t_empty)
           ))),
    ("Algebra9.single_addition_pm_mem",
     "[| assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub>
          : addition_set ?f (aug_pm_set ?z ?i {?a})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_hole 9))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_hole 9)),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 1),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 1),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9)),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 3),
                     template_var 2),
                   template_var 4),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 4),
                   template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 2),
                   template_hole 9))))
           ))),
    ("Algebra9.single_addition_zero",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> 0\<Odot>?a\<^bsub>?f,?i,?z\<^esub> = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1),
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_hole 9))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_hole 9)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_hole 9)),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 3),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_var 3),
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_hole 9)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2),
           template_hole 0),
         template_var 2))),
    ("Algebra9.add_set_single_nonempty1",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> EX x. x : add_set ?f {?a} ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 10, template_var 1),
                    template_hole 9))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_hole 9)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 10, template_var 1),
                    template_hole 9)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_hole 9)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Algebra9.add_set_single_nonempty2",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> EX x. x : add_set ?f {\<^sub>?i- ?a} ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_hole 10))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Algebra9.single_inv",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> \<^sub>?i- ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub> =
          (- ?m)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_hole 10)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_hole 10))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_hole 10)),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 3),
           template_app (template_hole 0, template_var 0))))),
    ("Algebra9.fag_single_additionTr2",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?s : add_set ?f {?a} 0 |]
      ==> ?s \<^sub>?f+ \<^sub>?i- ?a = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_hole 12))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12)),
                template_hole 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 3))),
    ("Algebra9.single_addition_pm",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> \<^sub>?f+
             ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub> =
          (?n + ?m)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_hole 10))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_hole 10)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_hole 10)),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_hole 10))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 5),
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_hole 10)),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 2),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra9.s_a_p_1",
     "[| assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?m < 0; 0 < ?n |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> \<^sub>?f+
             ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub> =
          (?n + ?m)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 13, template_var 3),
                    template_hole 12))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_hole 12)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_app
                   (template_app (template_hole 13, template_var 3),
                    template_hole 12)),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 2),
              template_app
               (template_app (template_hole 13, template_var 3),
                template_hole 12))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4),
                  template_var 2),
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_hole 12)),
              template_var 5)
            ),
        template_inequation (less_than, template_var 1, template_hole 4),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 5),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_var 3),
               template_var 5),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 4),
               template_var 3),
             template_var 5),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Algebra9.add_set_single1",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?x : add_set ?f {?a} ?n; ?y : add_set ?f {?a} ?n |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_hole 9))),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_hole 9)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_hole 9)),
                template_var 4),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 6),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_hole 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_hole 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 6),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_hole 9)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_hole 9)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 6),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_hole 9)),
                template_var 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Algebra9.add_set_single1Tr",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ALL x y.
             x : add_set ?f {?a} ?n & y : add_set ?f {?a} ?n --> x = y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_hole 12)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_hole 12))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_hole 12)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Algebra9.fag_single_additionTr1",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ALL s.
             s : add_set ?f {?a} (Suc ?n) -->
             s \<^sub>?f+ \<^sub>?i- ?a : add_set ?f {?a} ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_hole 13))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_hole 13)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 14, template_var 1),
                template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Algebra9.free_ag_single",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         free_gen_condition ?f ?i ?a ?z; ?n ~= ?m |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> ~=
          ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_hole 11))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_hole 11)),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_hole 11))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_var 5),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 3),
                template_var 2),
              template_var 4)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 0))
           ))),
    ("Algebra9.add_set_single2",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?x : add_set ?f {\<^sub>?i- ?a} ?n;
         ?y : add_set ?f {\<^sub>?i- ?a} ?n |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_hole 10))),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_hole 10)),
                template_var 4),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 6),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_hole 10))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 6),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_hole 10)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 6),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3)),
                    template_hole 10)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 6),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3)),
                    template_hole 10)),
                template_var 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Algebra9.fag_single_additionTr3",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?s : add_set ?f {\<^sub>?i- ?a} ?n |]
      ==> ?s \<^sub>?f+ \<^sub>?i- ?a
          : add_set ?f {\<^sub>?i- ?a} (Suc ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_hole 11))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_hole 11)),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_hole 11))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_var 5),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2)),
                    template_hole 11)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2))),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2)),
                   template_hole 11)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Algebra9.fag_single_additionTr4_1",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?s : add_set ?f {?a} ?n; ?t : add_set ?f {\<^sub>?i- ?a} ?n |]
      ==> ?s \<^sub>?f+ ?t = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app (template_hole 13, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_hole 11))),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_hole 11)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_hole 11)),
                template_var 4),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_var 6),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_hole 11))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 6),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_hole 11)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 6),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_hole 11)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_hole 11)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 2, template_var 4),
                        template_var 3)),
                    template_hole 11)),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 6),
             template_var 2),
           template_var 0),
         template_var 5))),
    ("Algebra9.fag_single_additionTr4",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ALL s t.
             s : add_set ?f {?a} ?n & t : add_set ?f {\<^sub>?i- ?a} ?n -->
             s \<^sub>?f+ t = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 16, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 15, template_var 1),
                    template_hole 14))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app (template_hole 15, template_var 1),
                    template_hole 14)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 15, template_var 1),
                template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Algebra9.single_addition_pos",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         0 < ?n; 0 < ?m |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> \<^sub>?f+
             ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub> =
          (?n + ?m)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_hole 12))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_hole 12)),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 13, template_var 2),
                template_hole 12))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 5),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)),
              template_var 4)
            ),
        template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 2),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra9.single_addition_neg",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?n < 0; ?m < 0 |]
      ==> ?n\<Odot>?a\<^bsub>?f,?i,?z\<^esub> \<^sub>?f+
             ?m\<Odot>?a\<^bsub>?f,?i,?z\<^esub> =
          (?n + ?m)\<Odot>?a\<^bsub>?f,?i,?z\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_hole 12))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_hole 12)),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 13, template_var 2),
                template_hole 12))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 5),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_hole 12)),
              template_var 4)
            ),
        template_inequation (less_than, template_var 1, template_hole 4),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 2),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Algebra9.lexact4_rexact4_HOM",
     "[| Ring ?R; ?R module ?M1.0; ?R module ?M2.0; ?R module ?M3.0;
         ?f : mHom ?R ?M1.0 ?M2.0; ?g : mHom ?R ?M2.0 ?M3.0;
         ?z : mHom ?R (Zm ?R ?e) ?M1.0;
         exact4 ?R (Zm ?R ?e) ?z ?M1.0 ?f ?M2.0 ?g ?M3.0 |]
      ==> ALL N.
             ?R module N -->
             exact4 ?R (HOM\<^bsub>?R\<^esub> N Zm ?R ?e)
              (sub_sharp ?R N (Zm ?R ?e) ?M1.0 ?z)
              (HOM\<^bsub>?R\<^esub> N ?M1.0)
              (sub_sharp ?R N ?M1.0 ?M2.0 ?f)
              (HOM\<^bsub>?R\<^esub> N ?M2.0)
              (sub_sharp ?R N ?M2.0 ?M3.0 ?g)
              (HOM\<^bsub>?R\<^esub> N ?M3.0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 6),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 5),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 4),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 17, template_var 7),
                  template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 7),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 7),
                  template_app
                   (template_app (template_hole 12, template_var 7),
                    template_var 0)),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 11, template_var 7),
                          template_app
                           (template_app (template_hole 12, template_var 7),
                            template_var 0)),
                        template_var 1),
                      template_var 6),
                    template_var 3),
                  template_var 5),
                template_var 2),
              template_var 4)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Algebra9.fag_single_additionTr5_1",
     "[| assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?m < Suc ?n |]
      ==> (THE x. x : add_set ?f {?a} (Suc ?n)) \<^sub>?f+
             (THE x. x : add_set ?f {\<^sub>?i- ?a} ?m) =
          (THE x. x : add_set ?f {?a} (?n - ?m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_hole 15))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_hole 15)),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_var 2),
              template_app
               (template_app (template_hole 16, template_var 3),
                template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 17, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 2),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)),
              template_var 5)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("Algebra9.fag_single_additionTr5",
     "[| assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ALL m<Suc ?n.
             (THE x. x : add_set ?f {?a} (Suc ?n)) \<^sub>?f+
                (THE x. x : add_set ?f {\<^sub>?i- ?a} m) =
             (THE x. x : add_set ?f {?a} (?n - m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 18, template_var 2),
                    template_hole 17))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 15, template_var 4),
                  template_app
                   (template_app (template_hole 18, template_var 2),
                    template_hole 17)),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_var 1),
              template_app
               (template_app (template_hole 18, template_var 2),
                template_hole 17))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 19, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 3),
                  template_var 1),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)),
              template_var 4)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Algebra9.fag_single_additionTr5_2",
     "[| assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?n < Suc ?m |]
      ==> (THE x. x : add_set ?f {\<^sub>?i- ?a} (Suc ?m)) \<^sub>?f+
             (THE x. x : add_set ?f {?a} ?n) =
          (THE x. x : add_set ?f {\<^sub>?i- ?a} (?m - ?n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_hole 15))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_hole 15)),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_var 2),
              template_app
               (template_app (template_hole 16, template_var 3),
                template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 17, template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 2),
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)),
              template_var 5)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("Algebra9.fag_single_elem",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         ?x : addition_set ?f (aug_pm_set ?z ?i {?a}) |]
      ==> (EX n1. ?x : add_set ?f {?a} n1) |
          (EX m1. ?x : add_set ?f {\<^sub>?i- ?a} m1) | ?x = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_hole 13))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_hole 13)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 14, template_var 1),
                template_hole 13))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_hole 13)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_hole 13))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("Algebra9.fag_single_elemTr",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> ALL x.
             x : add_set ?f (aug_pm_set ?z ?i {?a}) ?n -->
             (EX n1. x : add_set ?f {?a} n1) |
             (EX m1. x : add_set ?f {\<^sub>?i- ?a} m1) | x = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_app (template_hole 16, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 15, template_var 1),
                    template_hole 14))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app (template_hole 15, template_var 1),
                    template_hole 14)),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_var 4),
              template_app
               (template_app (template_hole 15, template_var 1),
                template_hole 14))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2),
                  template_var 4),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_hole 14)),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Algebra9.ipp_conditions",
     "[| assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z |]
      ==> assoc_bpp (aug_pm_set ?z ?i {\<^sub>?i- ?a}) ?f &
          ipp_cond1 {\<^sub>?i- ?a} ?i &
          ipp_cond2 ?z {\<^sub>?i- ?a} ?i ?f &
          inv_ipp ?z ?i ?f {\<^sub>?i- ?a} &
          commute_bpp ?f (aug_pm_set ?z ?i {\<^sub>?i- ?a}) &
          zeroA ?z ?i ?f {\<^sub>?i- ?a} ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_hole 8))),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_hole 8)),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 0),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_hole 8))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 0),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app (template_hole 10, template_var 3),
                       template_var 2),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_var 1)),
                       template_hole 8))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_var 1)),
                       template_hole 8)),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 6, template_var 3),
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_var 1)),
                           template_hole 8)),
                       template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 2),
                         template_var 0),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_var 1)),
                         template_hole 8))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 10, template_var 3),
                             template_var 2),
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 0, template_var 2),
                                 template_var 1)),
                             template_hole 8)))),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 2, template_var 3),
                             template_var 2),
                           template_var 0),
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_var 1)),
                           template_hole 8)),
                       template_var 3))))))
           ))),
    ("Algebra9.single_addition_posTr",
     "[| commute_bpp ?f (aug_pm_set ?z ?i {?a});
         assoc_bpp (aug_pm_set ?z ?i {?a}) ?f; ipp_cond1 {?a} ?i;
         ipp_cond2 ?z {?a} ?i ?f; ipp_cond3 ?z ?i; inv_ipp ?z ?i ?f {?a};
         commute_bpp ?f (aug_pm_set ?z ?i {?a}); zeroA ?z ?i ?f {?a} ?z;
         0 < ?n; 0 < ?m |]
      ==> (THE x. x : add_set ?f {?a} (nat (?n - 1))) \<^sub>?f+
             (THE x. x : add_set ?f {?a} (nat (?m - 1))) =
          (THE x. x : add_set ?f {?a} (nat (?n + ?m - 1)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 19, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 18, template_var 2),
                    template_hole 17))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 4),
                  template_app
                   (template_app (template_hole 18, template_var 2),
                    template_hole 17)),
                template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 18, template_var 2),
                template_hole 17))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 19, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 3),
                  template_var 5),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_hole 17)),
              template_var 4)
            ),
        template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 9, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 5),
             template_app (template_hole 6, t_empty)),
           template_app (template_hole 6, t_empty)),
         template_app (template_hole 6, t_empty)))),
    ("Algebra9.exact_HOM_exactTr",
     "[| Ring ?R; ?f : mHom ?R ?M1.0 ?M2.0; ?g : mHom ?R ?M2.0 ?M3.0;
         ?z1.0 : mHom ?R ?M3.0 (Zm ?R ?e); ?R module ?NV;
         ALL N.
            ?R module N -->
            exact4 ?R (HOM\<^bsub>?R\<^esub> Zm ?R ?e N)
             (sup_sharp ?R ?M3.0 (Zm ?R ?e) N ?z1.0)
             (HOM\<^bsub>?R\<^esub> ?M3.0 N) (sup_sharp ?R ?M2.0 ?M3.0 N ?g)
             (HOM\<^bsub>?R\<^esub> ?M2.0 N) (sup_sharp ?R ?M1.0 ?M2.0 N ?f)
             (HOM\<^bsub>?R\<^esub> ?M1.0 N);
         ?R module ?L |]
      ==> exact4 ?R (HOM\<^bsub>?R\<^esub> Zm ?R ?e ?L)
           (sup_sharp ?R ?M3.0 (Zm ?R ?e) ?L ?z1.0)
           (HOM\<^bsub>?R\<^esub> ?M3.0 ?L) (sup_sharp ?R ?M2.0 ?M3.0 ?L ?g)
           (HOM\<^bsub>?R\<^esub> ?M2.0 ?L) (sup_sharp ?R ?M1.0 ?M2.0 ?L ?f)
           (HOM\<^bsub>?R\<^esub> ?M1.0 ?L)",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 9)),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 8),
              template_app
               (template_app
                 (template_app (template_hole 17, template_var 9),
                  template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 9),
                  template_var 6),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 9),
                  template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 9),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 9)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 9)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 7, template_var 9),
                         template_app
                          (template_app
                            (template_app (template_hole 6, template_var 9),
                             template_app
                              (template_app
                                (template_hole 12, template_var 9),
                               template_var 2)),
                           template_var 0)),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 5, template_var 9),
                               template_var 4),
                             template_app
                              (template_app
                                (template_hole 12, template_var 9),
                               template_var 2)),
                           template_var 0),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_var 9),
                         template_var 4),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 9),
                           template_var 6),
                         template_var 4),
                       template_var 0),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 9),
                     template_var 6),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 9),
                       template_var 7),
                     template_var 6),
                   template_var 0),
                 template_var 8)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 9),
                 template_var 7),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.Algebra9MoreTemplates"
### 0.530s elapsed time, 0.760s cpu time, 0.121s GC time
val it = (): unit
