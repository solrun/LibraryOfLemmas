   [("Assertions_ext.events_CHAOS", "events_of (CHAOS ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Assertions_ext.events_DF", "events_of (DF ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Assertions_ext.events_DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P",
     "events_of (DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Assertions_ext.events_RUN", "events_of (RUN ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Assertions_ext.events_CHAOS\<^sub>S\<^sub>K\<^sub>I\<^sub>P",
     "events_of (CHAOS\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Assertions_ext.div_free_CHAOS", "D (CHAOS ?A) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Assertions_ext.div_free_DF", "D (DF ?A) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Assertions_ext.div_free_DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P",
     "D (DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Assertions_ext.div_free_RUN", "D (RUN ?A) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Assertions_ext.div_free_CHAOS\<^sub>S\<^sub>K\<^sub>I\<^sub>P",
     "D (CHAOS\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Assertions_ext.RUN_unfold", "RUN ?A = Mprefix ?A (%z. RUN ?A)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Assertions_ext.CHAOS_unfold",
     "CHAOS ?A = (STOP |-| Mprefix ?A (%z. CHAOS ?A))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0), t_empty)))),
    ("Assertions_ext.DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P_unfold",
     "DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A =
      ((\<sqinter>z\<in>?A \<rightarrow> 
           DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) |-|
       SKIP)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)),
         template_hole 0))),
    ("Assertions_ext.CHAOS_all_tickfree_traces1",
     "T (CHAOS ?A) = {s. set s <= ev ` ?A}",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Assertions_ext.DF_all_tickfree_traces1",
     "T (DF ?A) = {s. set s <= ev ` ?A}",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Assertions_ext.RUN_all_tickfree_traces1",
     "T (RUN ?A) = {s. set s <= ev ` ?A}",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Assertions_ext.DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P_all_front_tickfree_traces1",
     "T (DF\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) =
      {s. front_tickFree s & set s <= ev ` ?A Un {tick}}",
     template_equation
      (template_app
        (template_hole 12, template_app (template_hole 11, template_var 0)),
       template_app (template_hole 10, t_empty))),
    ("Assertions_ext.CHAOS\<^sub>S\<^sub>K\<^sub>I\<^sub>P_all_front_tickfree_traces1",
     "T (CHAOS\<^sub>S\<^sub>K\<^sub>I\<^sub>P ?A) =
      {s. front_tickFree s & set s <= ev ` ?A Un {tick}}",
     template_equation
      (template_app
        (template_hole 12, template_app (template_hole 11, template_var 0)),
       template_app (template_hole 10, t_empty)))]
