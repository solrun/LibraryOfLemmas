   [("Equivalence_Relations.ltl_const_equiv_implies_prop_equiv",
     "?\<phi> \<sim>\<^sub>C false\<^sub>n =
      ?\<phi> \<sim>\<^sub>P false\<^sub>n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Equivalence_Relations.ltl_const_equiv_implies_prop_equiv",
     "?\<phi> \<sim>\<^sub>C true\<^sub>n =
      ?\<phi> \<sim>\<^sub>P true\<^sub>n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Equivalence_Relations.ltl_prop_equiv_true",
     "?\<phi> \<sim>\<^sub>P true\<^sub>n =
      {} \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Equivalence_Relations.ltl_const_equiv_const",
     "?\<phi> \<sim>\<^sub>C false\<^sub>n = (eval ?\<phi> = No)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Equivalence_Relations.ltl_const_equiv_const",
     "?\<phi> \<sim>\<^sub>C true\<^sub>n = (eval ?\<phi> = Yes)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Equivalence_Relations.ltl_prop_equiv_false",
     "?\<phi> \<sim>\<^sub>P false\<^sub>n =
      (~ UNIV \<Turnstile>\<^sub>P ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Equivalence_Relations.eval_prop_entailment",
     "(eval ?\<phi> = Yes) = {} \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C X\<^sub>n ?\<psi> =
      (?\<phi> = X\<^sub>n ?\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C nprop\<^sub>n(?a) =
      (?\<phi> = nprop\<^sub>n(?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C prop\<^sub>n(?a) =
      (?\<phi> = prop\<^sub>n(?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Equivalence_Relations.eval_prop_entailment",
     "(eval ?\<phi> = No) = (~ UNIV \<Turnstile>\<^sub>P ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Equivalence_Relations.Rep_Abs_prop_entailment",
     "?\<A> \<Turnstile>\<^sub>P
      rep_ltln\<^sub>P (abs_ltln\<^sub>P ?\<phi>) =
      ?\<A> \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Equivalence_Relations.sat_models_Abs",
     "(?\<A> : sat_models (abs_ltln\<^sub>P ?\<phi>)) =
      ?\<A> \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Equivalence_Relations.ltl_prop_implies_equiv",
     "?\<phi> \<sim>\<^sub>P ?\<psi> =
      (?\<phi> \<longrightarrow>\<^sub>P ?\<psi> &
       ?\<psi> \<longrightarrow>\<^sub>P ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Equivalence_Relations.ltl_models_equiv_prop_entailment",
     "?w \<Turnstile>\<^sub>n ?\<phi> =
      {\<psi>. ?w \<Turnstile>\<^sub>n \<psi>} \<Turnstile>\<^sub>P
      ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 R\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 R\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 M\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 M\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 U\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 U\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 W\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 W\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_and_const",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      false\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C false\<^sub>n |
       ?\<phi>\<^sub>2 \<sim>\<^sub>C false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_const_equiv_and_const",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      true\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C true\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>C true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_const_equiv_or_const",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      false\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C false\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>C false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_const_equiv_or_const",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      true\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C true\<^sub>n |
       ?\<phi>\<^sub>2 \<sim>\<^sub>C true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_lang_equiv_and_true",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      true\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>L true\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>L true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_lang_equiv_or_false",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      false\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>L false\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>L false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.eval_and_const",
     "(eval_and ?\<phi> ?\<psi> = No) = (?\<phi> = No | ?\<psi> = No)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Equivalence_Relations.eval_and_const",
     "(eval_and ?\<phi> ?\<psi> = Yes) = (?\<phi> = Yes & ?\<psi> = Yes)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Equivalence_Relations.eval_or_const",
     "(eval_or ?\<phi> ?\<psi> = No) = (?\<phi> = No & ?\<psi> = No)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Equivalence_Relations.eval_or_const",
     "(eval_or ?\<phi> ?\<psi> = Yes) = (?\<phi> = Yes | ?\<psi> = Yes)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("Equivalence_Relations.image_filter",
     "?f ` {?g a |a. ?P a} = {?f (?g a) |a. ?P a}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app (template_hole 5, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("Equivalence_Relations.ltl_prop_equiv_subst_S",
     "?S \<Turnstile>\<^sub>P subst ?\<phi> ?m =
      (?S - dom ?m Un
       {uu_.
        EX \<chi> \<chi>'.
           uu_ = \<chi> &
           \<chi> : dom ?m &
           ?m \<chi> = Some \<chi>' &
           ?S \<Turnstile>\<^sub>P \<chi>'}) \<Turnstile>\<^sub>P
      ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app (template_hole 7, template_var 0))),
             template_app (template_hole 6, t_empty))),
         template_var 1)))]
