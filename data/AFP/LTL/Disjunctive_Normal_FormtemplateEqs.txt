   [("Disjunctive_Normal_Form.min_product_empty",
     "?A \<otimes>\<^sub>m {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Disjunctive_Normal_Form.min_product_empty",
     "{} \<otimes>\<^sub>m ?A = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Disjunctive_Normal_Form.product_empty", "?A \<otimes> {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Disjunctive_Normal_Form.product_empty", "{} \<otimes> ?A = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Disjunctive_Normal_Form.subst_dnf_empty", "subst_dnf {} ?m = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Disjunctive_Normal_Form.min_set_idem",
     "min_set (min_set ?X) = min_set ?X",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_set_product_set",
     "\<Otimes>\<^sub>m ?A = min_set (\<Otimes> ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Disjunctive_Normal_Form.min_product_idem",
     "?A \<otimes>\<^sub>m ?A = min_set ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_union_idem",
     "?A \<union>\<^sub>m ?A = min_set ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_union_empty",
     "?A \<union>\<^sub>m {} = min_set ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_union_empty",
     "{} \<union>\<^sub>m ?A = min_set ?A",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.dnf_min_set",
     "min_dnf ?\<phi> = min_set (dnf ?\<phi>)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Disjunctive_Normal_Form.list_dnf_to_dnf_list_dnf",
     "list_dnf_to_dnf (list_dnf ?\<phi>) = dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_dnf_min_set",
     "min_set (min_dnf ?\<phi>) = min_dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_product_comm",
     "?A \<otimes>\<^sub>m ?B = ?B \<otimes>\<^sub>m ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Disjunctive_Normal_Form.min_union_comm",
     "?A \<union>\<^sub>m ?B = ?B \<union>\<^sub>m ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Disjunctive_Normal_Form.product_comm",
     "?A \<otimes> ?B = ?B \<otimes> ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Disjunctive_Normal_Form.product_empty_singleton",
     "?A \<otimes> {{||}} = ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)),
       template_var 0)),
    ("Disjunctive_Normal_Form.product_empty_singleton",
     "{{||}} \<otimes> ?A = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Disjunctive_Normal_Form.subst_clause_empty",
     "subst_clause {||} ?m = {{||}}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_hole 0))),
    ("Disjunctive_Normal_Form.dnf_ltln_of_dnf_min_dnf",
     "dnf (ltln_of_dnf (min_dnf ?\<phi>)) = min_dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_dnf_ltln_of_dnf",
     "min_dnf (ltln_of_dnf (min_dnf ?\<phi>)) = min_dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 1, template_var 0))),
    ("Disjunctive_Normal_Form.min_dnf_rep_abs",
     "min_dnf (rep_ltln\<^sub>P (abs_ltln\<^sub>P ?\<phi>)) =
      min_dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("Disjunctive_Normal_Form.dnf_Abs_fset",
     "fset (Abs_fset (dnf ?\<phi>)) = dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_dnf_Abs_fset",
     "fset (Abs_fset (min_dnf ?\<phi>)) = min_dnf ?\<phi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.subst_clause'_nil",
     "subst_clause' [] ?m = {[]}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_hole 0))),
    ("Disjunctive_Normal_Form.min_set_singleton", "min_set {?x} = {?x}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Disjunctive_Normal_Form.min_set_min_product",
     "?A \<otimes>\<^sub>m min_set ?B = ?A \<otimes>\<^sub>m ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.min_set_min_product",
     "min_set ?A \<otimes>\<^sub>m ?B = ?A \<otimes>\<^sub>m ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.min_set_min_union",
     "?A \<union>\<^sub>m min_set ?B = ?A \<union>\<^sub>m ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.min_set_min_union",
     "min_set ?A \<union>\<^sub>m ?B = ?A \<union>\<^sub>m ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.min_product_min_set",
     "min_set (?A \<otimes>\<^sub>m ?B) = ?A \<otimes>\<^sub>m ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.min_union_min_set",
     "min_set (?A \<union>\<^sub>m ?B) = ?A \<union>\<^sub>m ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.min_product_empty_singleton",
     "?A \<otimes>\<^sub>m {{||}} = min_set ?A",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.min_product_empty_singleton",
     "{{||}} \<otimes>\<^sub>m ?A = min_set ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.subst_clause_min_set",
     "min_set (subst_clause ?\<Phi> ?m) = subst_clause ?\<Phi> ?m",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Disjunctive_Normal_Form.subst_dnf'_list_dnf",
     "subst_dnf' (list_dnf ?\<phi>) ?m = list_dnf (subst ?\<phi> ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.ltl_prop_equiv_min_dnf",
     "?\<phi> \<sim>\<^sub>P ?\<psi> = (min_dnf ?\<phi> = min_dnf ?\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Disjunctive_Normal_Form.subst_clause_fset_of_list",
     "subst_clause (fset_of_list ?\<Phi>) ?m =
      min_set (list_dnf_to_dnf (subst_clause' ?\<Phi> ?m))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Disjunctive_Normal_Form.subst_dnf_dnf",
     "min_set (subst_dnf (dnf ?\<phi>) ?m) = min_dnf (subst ?\<phi> ?m)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.min_dnf_subst",
     "min_set (subst_dnf (min_dnf ?\<phi>) ?m) =
      min_dnf (subst ?\<phi> ?m)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.min_product_set_code",
     "\<Otimes>\<^sub>m (set ?xs) =
      fold (\<otimes>\<^sub>m) (remdups ?xs) {{||}}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Disjunctive_Normal_Form.product_set_code",
     "\<Otimes> (set ?xs) = fold (\<otimes>) (remdups ?xs) {{||}}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Disjunctive_Normal_Form.min_product_assoc",
     "(?A \<otimes>\<^sub>m ?B) \<otimes>\<^sub>m ?C =
      ?A \<otimes>\<^sub>m ?B \<otimes>\<^sub>m ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.min_union_assoc",
     "(?A \<union>\<^sub>m ?B) \<union>\<^sub>m ?C =
      ?A \<union>\<^sub>m ?B \<union>\<^sub>m ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.product_assoc",
     "(?A \<otimes> ?B) \<otimes> ?C = ?A \<otimes> ?B \<otimes> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.list_product_assoc",
     "?A \<otimes>\<^sub>l (?B \<otimes>\<^sub>l ?C) =
      ?A \<otimes>\<^sub>l ?B \<otimes>\<^sub>l ?C",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Disjunctive_Normal_Form.fold_union",
     "Finite_Set.fold (%x. (Un) {x}) {} (fset ?x) = fset ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Disjunctive_Normal_Form.product_singleton_singleton",
     "?A \<otimes> {{|?x|}} = finsert ?x ` ?A",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 0)),
         template_var 1))),
    ("Disjunctive_Normal_Form.product_singleton_singleton",
     "{{|?x|}} \<otimes> ?A = finsert ?x ` ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 1)),
         template_var 0))),
    ("Disjunctive_Normal_Form.min_set_min_product_helper",
     "(?x : min_set ?A \<otimes>\<^sub>m ?B) =
      (?x : ?A \<otimes>\<^sub>m ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.list_product_fset_of_list",
     "fset_of_list ` (?A \<otimes>\<^sub>l ?B) =
      fset_of_list ` ?A \<otimes> fset_of_list ` ?B",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Disjunctive_Normal_Form.subst_clause_funion",
     "subst_clause (?\<Phi> |\<union>| ?\<Psi>) ?m =
      subst_clause ?\<Phi> ?m \<otimes>\<^sub>m subst_clause ?\<Psi> ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.subst_clause'_append",
     "subst_clause' (?A @ ?B) ?m =
      subst_clause' ?A ?m \<otimes>\<^sub>l subst_clause' ?B ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.subst_dnf'_product",
     "subst_dnf' (?A \<otimes>\<^sub>l ?B) ?m =
      subst_dnf' ?A ?m \<otimes>\<^sub>l subst_dnf' ?B ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.subst_clause_finsert",
     "subst_clause (finsert ?\<phi> ?\<Phi>) ?m =
      min_dnf (subst ?\<phi> ?m) \<otimes>\<^sub>m subst_clause ?\<Phi> ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Disjunctive_Normal_Form.subst_dnf'_iff",
     "(?x : subst_dnf' ?A ?m) =
      (EX \<Phi>:?A. ?x : subst_clause' \<Phi> ?m)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Disjunctive_Normal_Form.min_dnf_iff_prop_assignment_subset",
     "?\<A> \<Turnstile>\<^sub>P ?\<phi> =
      (EX B. fset B <= ?\<A> & B : min_dnf ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Disjunctive_Normal_Form.ltl_prop_implies_min_dnf",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> =
      (ALL A:min_dnf ?\<phi>. EX B:min_dnf ?\<psi>. B |\<subseteq>| A)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         t_empty))),
    ("Disjunctive_Normal_Form.subst_clause'_cons",
     "subst_clause' (?xs @ [?x]) ?m =
      subst_clause' ?xs ?m \<otimes>\<^sub>l list_dnf (subst ?x ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Disjunctive_Normal_Form.fold_product",
     "Finite_Set.fold (%x. (\<otimes>) {{|x|}}) {{||}} (fset ?x) = {?x}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 2),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 0), template_hole 1))),
    ("Disjunctive_Normal_Form.product_iff",
     "(?x : ?A \<otimes> ?B) = (EX a:?A. EX b:?B. ?x = a |\<union>| b)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Disjunctive_Normal_Form.min_set_iff",
     "(?x : min_set ?X) = (?x : ?X & (ALL y:?X. y <= ?x --> y = ?x))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 0), t_empty)))),
    ("Disjunctive_Normal_Form.list_product_iff",
     "(?x : ?A \<otimes>\<^sub>l ?B) =
      (EX a b. a : ?A & b : ?B & ?x = a @ b)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Disjunctive_Normal_Form.min_union_iff",
     "(?x : ?A \<union>\<^sub>m ?B) =
      (?x : ?A Un ?B &
       (ALL a:?A. a |\<subseteq>| ?x --> a = ?x) &
       (ALL b:?B. b |\<subseteq>| ?x --> b = ?x))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 3, template_var 1), t_empty)),
           template_app
            (template_app (template_hole 3, template_var 0), t_empty))))),
    ("Disjunctive_Normal_Form.min_product_iff",
     "(?x : ?A \<otimes>\<^sub>m ?B) =
      ((EX a:?A. EX b:?B. ?x = a |\<union>| b) &
       (ALL a:?A.
           ALL b:?B.
              a |\<union>| b |\<subseteq>| ?x --> a |\<union>| b = ?x))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty))))]
