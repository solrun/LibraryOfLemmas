   [("Equivalence_Relations.nested_prop_atoms_finite",
     "finite (nested_prop_atoms ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Equivalence_Relations.prop_atoms_finite",
     "finite (prop_atoms ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Equivalence_Relations.nested_prop_atoms_notin",
     "false\<^sub>n ~: nested_prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.prop_atoms_notin",
     "false\<^sub>n ~: prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.nested_prop_atoms_notin",
     "true\<^sub>n ~: nested_prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.prop_atoms_notin",
     "true\<^sub>n ~: prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.nested_prop_atoms_subfrmlsn",
     "nested_prop_atoms ?\<phi> <= subfrmlsn ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Equivalence_Relations.prop_atoms_nested_prop_atoms",
     "prop_atoms ?\<phi> <= nested_prop_atoms ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Equivalence_Relations.prop_atoms_subfrmlsn",
     "prop_atoms ?\<phi> <= subfrmlsn ?\<phi>",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Equivalence_Relations.nested_prop_atoms_notin",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2
      ~: nested_prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.prop_atoms_notin",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 ~: prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.nested_prop_atoms_notin",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2
      ~: nested_prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.prop_atoms_notin",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 ~: prop_atoms ?\<phi>",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Equivalence_Relations.ltl_const_equiv_implies_prop_equiv",
     "?\<phi> \<sim>\<^sub>C false\<^sub>n =
      ?\<phi> \<sim>\<^sub>P false\<^sub>n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Equivalence_Relations.ltl_const_equiv_implies_prop_equiv",
     "?\<phi> \<sim>\<^sub>C true\<^sub>n =
      ?\<phi> \<sim>\<^sub>P true\<^sub>n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_hole 1))),
    ("Equivalence_Relations.ltl_prop_equiv_true",
     "?\<phi> \<sim>\<^sub>P true\<^sub>n =
      {} \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Equivalence_Relations.ltl_const_equiv_const",
     "?\<phi> \<sim>\<^sub>C false\<^sub>n = (eval ?\<phi> = No)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Equivalence_Relations.ltl_const_equiv_const",
     "?\<phi> \<sim>\<^sub>C true\<^sub>n = (eval ?\<phi> = Yes)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Equivalence_Relations.ltl_prop_equiv_false",
     "?\<phi> \<sim>\<^sub>P false\<^sub>n =
      (~ UNIV \<Turnstile>\<^sub>P ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Equivalence_Relations.eval_prop_entailment",
     "(eval ?\<phi> = Yes) = {} \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Equivalence_Relations.ltl_const_equiv_implies_ltl_prop_equiv",
     "?\<phi> \<sim>\<^sub>C ?\<psi> ==> ?\<phi> \<sim>\<^sub>P ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Equivalence_Relations.ltl_prop_equiv_implies_ltl_lang_equiv",
     "?\<phi> \<sim>\<^sub>P ?\<psi> ==> ?\<phi> \<sim>\<^sub>L ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C X\<^sub>n ?\<psi> =
      (?\<phi> = X\<^sub>n ?\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C nprop\<^sub>n(?a) =
      (?\<phi> = nprop\<^sub>n(?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C prop\<^sub>n(?a) =
      (?\<phi> = prop\<^sub>n(?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("Equivalence_Relations.eval_prop_entailment",
     "(eval ?\<phi> = No) = (~ UNIV \<Turnstile>\<^sub>P ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Equivalence_Relations.Rep_Abs_prop_entailment",
     "?\<A> \<Turnstile>\<^sub>P
      rep_ltln\<^sub>P (abs_ltln\<^sub>P ?\<phi>) =
      ?\<A> \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Equivalence_Relations.sat_models_Abs",
     "(?\<A> : sat_models (abs_ltln\<^sub>P ?\<phi>)) =
      ?\<A> \<Turnstile>\<^sub>P ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Equivalence_Relations.ltl_lang_equiv_and_false",
     "?\<phi>\<^sub>1 \<sim>\<^sub>L false\<^sub>n ==>
      ?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      false\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Equivalence_Relations.ltl_lang_equiv_or_const",
     "?\<phi>\<^sub>1 \<sim>\<^sub>L true\<^sub>n ==>
      ?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      true\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Equivalence_Relations.ltl_lang_equiv_and_false",
     "?\<phi>\<^sub>2 \<sim>\<^sub>L false\<^sub>n ==>
      ?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      false\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Equivalence_Relations.ltl_lang_equiv_or_const",
     "?\<phi>\<^sub>2 \<sim>\<^sub>L true\<^sub>n ==>
      ?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      true\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Equivalence_Relations.ltl_prop_implies_equiv",
     "?\<phi> \<sim>\<^sub>P ?\<psi> =
      (?\<phi> \<longrightarrow>\<^sub>P ?\<psi> &
       ?\<psi> \<longrightarrow>\<^sub>P ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Equivalence_Relations.ltl_models_equiv_prop_entailment",
     "?w \<Turnstile>\<^sub>n ?\<phi> =
      {\<psi>. ?w \<Turnstile>\<^sub>n \<psi>} \<Turnstile>\<^sub>P
      ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 R\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 R\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 M\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 M\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 U\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 U\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.ltl_const_equiv_other",
     "?\<phi> \<sim>\<^sub>C ?\<psi>\<^sub>1 W\<^sub>n ?\<psi>\<^sub>2 =
      (?\<phi> = ?\<psi>\<^sub>1 W\<^sub>n ?\<psi>\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Equivalence_Relations.subst_respects_ltl_const_entailment",
     "?\<phi> \<sim>\<^sub>C ?\<psi> ==>
      subst ?\<phi> ?m \<sim>\<^sub>C subst ?\<psi> ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Equivalence_Relations.subst_respects_ltl_prop_entailment",
     "?\<phi> \<sim>\<^sub>P ?\<psi> ==>
      subst ?\<phi> ?m \<sim>\<^sub>P subst ?\<psi> ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Equivalence_Relations.subst_respects_ltl_prop_entailment",
     "?\<phi> \<longrightarrow>\<^sub>P ?\<psi> ==>
      subst ?\<phi> ?m \<longrightarrow>\<^sub>P subst ?\<psi> ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Equivalence_Relations.eval_subst",
     "eval ?\<phi> = No ==> eval (subst ?\<phi> ?m) = No",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("Equivalence_Relations.eval_subst",
     "eval ?\<phi> = Yes ==> eval (subst ?\<phi> ?m) = Yes",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("Equivalence_Relations.ltl_const_equiv_and_const",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      false\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C false\<^sub>n |
       ?\<phi>\<^sub>2 \<sim>\<^sub>C false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_const_equiv_and_const",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      true\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C true\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>C true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_const_equiv_or_const",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      false\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C false\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>C false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_const_equiv_or_const",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>C
      true\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>C true\<^sub>n |
       ?\<phi>\<^sub>2 \<sim>\<^sub>C true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_lang_equiv_and_true",
     "?\<phi>\<^sub>1 and\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      true\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>L true\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>L true\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.ltl_lang_equiv_or_false",
     "?\<phi>\<^sub>1 or\<^sub>n ?\<phi>\<^sub>2 \<sim>\<^sub>L
      false\<^sub>n =
      (?\<phi>\<^sub>1 \<sim>\<^sub>L false\<^sub>n &
       ?\<phi>\<^sub>2 \<sim>\<^sub>L false\<^sub>n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Equivalence_Relations.eval_and_const",
     "(eval_and ?\<phi> ?\<psi> = No) = (?\<phi> = No | ?\<psi> = No)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Equivalence_Relations.eval_and_const",
     "(eval_and ?\<phi> ?\<psi> = Yes) = (?\<phi> = Yes & ?\<psi> = Yes)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Equivalence_Relations.eval_or_const",
     "(eval_or ?\<phi> ?\<psi> = No) = (?\<phi> = No & ?\<psi> = No)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Equivalence_Relations.eval_or_const",
     "(eval_or ?\<phi> ?\<psi> = Yes) = (?\<phi> = Yes | ?\<psi> = Yes)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Equivalence_Relations.prop_atoms_entailment_iff",
     "?\<phi> : prop_atoms ?\<psi> ==>
      ?\<A> \<Turnstile>\<^sub>P ?\<phi> = (?\<phi> : ?\<A>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Equivalence_Relations.ltl_prop_entailment_monotonI",
     "[| ?S \<Turnstile>\<^sub>P ?\<phi>; ?S <= ?S' |]
      ==> ?S' \<Turnstile>\<^sub>P ?\<phi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("Equivalence_Relations.ltl_prop_equiv_trans",
     "[| ?\<phi> \<sim>\<^sub>P ?\<psi>; ?\<psi> \<sim>\<^sub>P ?\<chi> |]
      ==> ?\<phi> \<sim>\<^sub>P ?\<chi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Equivalence_Relations.ltl_prop_equiv_true_implies_true",
     "[| ?x \<sim>\<^sub>P true\<^sub>n; ?x \<longrightarrow>\<^sub>P ?y |]
      ==> ?y \<sim>\<^sub>P true\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)
           ))),
    ("Equivalence_Relations.ltl_prop_equiv_false_implied_by_false",
     "[| ?y \<sim>\<^sub>P false\<^sub>n; ?x \<longrightarrow>\<^sub>P ?y |]
      ==> ?x \<sim>\<^sub>P false\<^sub>n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)
           ))),
    ("Equivalence_Relations.ltl_prop_implication_implies_ltl_implication",
     "[| ?w \<Turnstile>\<^sub>n ?\<phi>;
         ?\<phi> \<longrightarrow>\<^sub>P ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Equivalence_Relations.ltl_const_equiv_no_const_prop_equiv",
     "[| eval ?\<psi> = Maybe; ?\<phi> \<sim>\<^sub>C ?\<psi> |]
      ==> ?\<phi> \<sim>\<^sub>P ?\<psi>",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Equivalence_Relations.ltl_const_equiv_no_const_singleton",
     "[| eval ?\<psi> = Maybe; ?\<phi> \<sim>\<^sub>C ?\<psi> |]
      ==> ?\<phi> = ?\<psi>",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Equivalence_Relations.nested_prop_atoms_entailment_inter",
     "nested_prop_atoms ?\<phi> <= ?P ==>
      (?\<A> Int ?P) \<Turnstile>\<^sub>P ?\<phi> =
      ?\<A> \<Turnstile>\<^sub>P ?\<phi>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Equivalence_Relations.prop_atoms_entailment_inter",
     "prop_atoms ?\<phi> <= ?P ==>
      (?\<A> Int ?P) \<Turnstile>\<^sub>P ?\<phi> =
      ?\<A> \<Turnstile>\<^sub>P ?\<phi>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Equivalence_Relations.prop_equiv_finite'",
     "finite ?P ==>
      finite
       {abs_ltln\<^sub>P \<psi> |\<psi>. nested_prop_atoms \<psi> <= ?P}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("Equivalence_Relations.prop_equiv_finite",
     "finite ?P ==>
      finite {abs_ltln\<^sub>P \<psi> |\<psi>. prop_atoms \<psi> <= ?P}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("Equivalence_Relations.sat_models_inter_inj",
     "inj_on (%\<phi>. sat_models \<phi> Int Pow ?P)
       {abs_ltln\<^sub>P \<phi> |\<phi>. prop_atoms \<phi> <= ?P}",
     template_predicate
      (
         template_app
          (template_app (template_hole 10, t_empty),
           template_app (template_hole 6, t_empty))
         )),
    ("Equivalence_Relations.sat_models_pow_pow",
     "{sat_models (abs_ltln\<^sub>P \<phi>) Int Pow ?P |\<phi>.
       prop_atoms \<phi> <= ?P}
      <= Pow (Pow ?P)",
     template_inequation
      (less_equals, template_app (template_hole 10, t_empty),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("Equivalence_Relations.sat_models_finite",
     "finite ?P ==>
      finite
       {sat_models (abs_ltln\<^sub>P \<phi>) Int Pow ?P |\<phi>.
        prop_atoms \<phi> <= ?P}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 10, template_app (template_hole 9, t_empty))
           ))),
    ("Equivalence_Relations.image_filter",
     "?f ` {?g a |a. ?P a} = {?f (?g a) |a. ?P a}",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app (template_hole 5, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("Equivalence_Relations.prop_equiv_subset",
     "{abs_ltln\<^sub>P \<psi> |\<psi>. nested_prop_atoms \<psi> <= ?P}
      <= {abs_ltln\<^sub>P \<psi> |\<psi>. prop_atoms \<psi> <= ?P}",
     template_inequation
      (less_equals, template_app (template_hole 7, t_empty),
       template_app (template_hole 7, t_empty))),
    ("Equivalence_Relations.prop_equiv_card'",
     "finite ?P ==>
      card {abs_ltln\<^sub>P \<psi> |\<psi>. nested_prop_atoms \<psi> <= ?P}
      <= 2 ^ 2 ^ card ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12, template_app (template_hole 11, t_empty)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 0)))))),
    ("Equivalence_Relations.prop_equiv_card",
     "finite ?P ==>
      card {abs_ltln\<^sub>P \<psi> |\<psi>. prop_atoms \<psi> <= ?P}
      <= 2 ^ 2 ^ card ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12, template_app (template_hole 11, t_empty)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 0)))))),
    ("Equivalence_Relations.sat_models_inter_inj_helper",
     "[| prop_atoms ?\<phi> <= ?P; prop_atoms ?\<psi> <= ?P;
         sat_models (abs_ltln\<^sub>P ?\<phi>) Int Pow ?P =
         sat_models (abs_ltln\<^sub>P ?\<psi>) Int Pow ?P |]
      ==> ?\<phi> \<sim>\<^sub>P ?\<psi>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_var 1),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2))),
            template_app (template_hole 1, template_var 1)),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0))),
            template_app (template_hole 1, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Equivalence_Relations.sat_models_card",
     "finite ?P ==>
      card
       {sat_models (abs_ltln\<^sub>P \<phi>) Int Pow ?P |\<phi>.
        prop_atoms \<phi> <= ?P}
      <= 2 ^ 2 ^ card ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 0)))))),
    ("Equivalence_Relations.ltl_prop_equiv_subst_S",
     "?S \<Turnstile>\<^sub>P subst ?\<phi> ?m =
      (?S - dom ?m Un
       {uu_.
        EX \<chi> \<chi>'.
           uu_ = \<chi> &
           \<chi> : dom ?m &
           ?m \<chi> = Some \<chi>' &
           ?S \<Turnstile>\<^sub>P \<chi>'}) \<Turnstile>\<^sub>P
      ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app (template_hole 7, template_var 0))),
             template_app (template_hole 6, t_empty))),
         template_var 1)))]
