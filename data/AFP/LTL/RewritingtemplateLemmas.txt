   [("Rewriting.mk_next_pow_simp", "X\<^sub>n' 0 ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Rewriting.mk_next_atoms",
     "atoms_ltln (mk_next ?\<phi>) = atoms_ltln ?\<phi>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_finally ?x) = is_constant ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_globally ?x) = is_constant ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_next ?x) = is_constant ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.mk_next_pow_simp", "X\<^sub>n' 1 ?x = mk_next ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Rewriting.rewrite_modal_size",
     "size (rewrite_modal ?\<phi>) <= size ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.mk_finally_atoms",
     "atoms_ltln (mk_finally ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.mk_globally_atoms",
     "atoms_ltln (mk_globally ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.remove_strong_ops_atoms",
     "atoms_ltln (remove_strong_ops ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.remove_weak_ops_atoms",
     "atoms_ltln (remove_weak_ops ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.rewrite_X_atoms",
     "atoms_ltln (rewrite_X ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.rewrite_iter_fast_atoms",
     "atoms_ltln (rewrite_iter_fast ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.rewrite_iter_slow_atoms",
     "atoms_ltln (rewrite_iter_slow ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.rewrite_modal_atoms",
     "atoms_ltln (rewrite_modal ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.rewrite_syn_imp_atoms",
     "atoms_ltln (rewrite_syn_imp ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.mk_next_pow_atoms",
     "atoms_ltln (X\<^sub>n' ?n ?\<phi>) = atoms_ltln ?\<phi>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructors_simps",
     "is_constant (X\<^sub>n' ?n ?x) = is_constant ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_release ?y ?x) = is_constant ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_until ?y ?x) = is_constant ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.rewrite_X_enat_atoms",
     "atoms_ltln (fst (rewrite_X_enat ?\<phi>)) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("Rewriting.simplify_atoms",
     "atoms_ltln (simplify ?m ?\<phi>) <= atoms_ltln ?\<phi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Rewriting.is_constant_constructorsI",
     "is_constant ?x ==> is_constant (mk_finally ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "is_constant ?x ==> is_constant (mk_globally ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "is_constant ?x ==> is_constant (mk_next ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Rewriting.rewrite_X_sound",
     "?w \<Turnstile>\<^sub>n rewrite_X ?\<phi> =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Rewriting.rewrite_iter_fast_sound",
     "?w \<Turnstile>\<^sub>n rewrite_iter_fast ?\<phi> =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Rewriting.rewrite_iter_slow_sound",
     "?w \<Turnstile>\<^sub>n rewrite_iter_slow ?\<phi> =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Rewriting.rewrite_modal_sound",
     "?w \<Turnstile>\<^sub>n rewrite_modal ?\<phi> =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Rewriting.rewrite_syn_imp_sound",
     "?w \<Turnstile>\<^sub>n rewrite_syn_imp ?\<phi> =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Rewriting.is_constant_constructorsI",
     "is_constant ?x ==> is_constant (X\<^sub>n' ?n ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "is_constant ?x ==> is_constant (mk_release ?y ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "is_constant ?x ==> is_constant (mk_until ?y ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Rewriting.mk_next_semantics",
     "?w \<Turnstile>\<^sub>n mk_next ?x =
      ?w \<Turnstile>\<^sub>n X\<^sub>n ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Rewriting.is_constant_constructors_simps",
     "(X\<^sub>n' ?n ?x = false\<^sub>n) = (?x = false\<^sub>n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Rewriting.is_constant_constructors_simps",
     "(X\<^sub>n' ?n ?x = true\<^sub>n) = (?x = true\<^sub>n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Rewriting.simplify_correct",
     "?w \<Turnstile>\<^sub>n simplify ?m ?\<phi> =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Rewriting.is_constant_constructorsI",
     "~ is_constant ?x ==> ~ is_constant (mk_finally ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Rewriting.is_constant_constructorsI",
     "~ is_constant ?x ==> ~ is_constant (mk_globally ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Rewriting.is_constant_constructorsI",
     "~ is_constant ?x ==> ~ is_constant (mk_next ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Rewriting.eq_i_oI",
     "Predicate.eq ?x ?xa ==> pred.eval (eq_i_o ?x) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Rewriting.eq_o_iI",
     "Predicate.eq ?x ?xa ==> pred.eval (eq_o_i ?xa) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Rewriting.mk_finally_semantics",
     "?w \<Turnstile>\<^sub>n mk_finally ?x =
      ?w \<Turnstile>\<^sub>n F\<^sub>n ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Rewriting.mk_globally_semantics",
     "?w \<Turnstile>\<^sub>n mk_globally ?x =
      ?w \<Turnstile>\<^sub>n G\<^sub>n ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Rewriting.rewrite_X_enat_infinity_invariant",
     "(snd (rewrite_X_enat ?\<phi>) = \<infinity>) =
      is_constant (fst (rewrite_X_enat ?\<phi>))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         template_hole 2),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.mk_and_atoms",
     "atoms_ltln (mk_and ?\<phi> ?\<psi>)
      <= atoms_ltln ?\<phi> Un atoms_ltln ?\<psi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Rewriting.mk_or_atoms",
     "atoms_ltln (mk_or ?\<phi> ?\<psi>)
      <= atoms_ltln ?\<phi> Un atoms_ltln ?\<psi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Rewriting.mk_release_atoms",
     "atoms_ltln (mk_release ?\<phi> ?\<psi>)
      <= atoms_ltln ?\<phi> Un atoms_ltln ?\<psi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Rewriting.mk_strong_release_atoms",
     "atoms_ltln (mk_strong_release ?\<phi> ?\<psi>)
      <= atoms_ltln ?\<phi> Un atoms_ltln ?\<psi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Rewriting.mk_until_atoms",
     "atoms_ltln (mk_until ?\<phi> ?\<psi>)
      <= atoms_ltln ?\<phi> Un atoms_ltln ?\<psi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Rewriting.mk_weak_until_atoms",
     "atoms_ltln (mk_weak_until ?\<phi> ?\<psi>)
      <= atoms_ltln ?\<phi> Un atoms_ltln ?\<psi>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Rewriting.is_constant_constructorsI",
     "~ is_constant ?x ==> ~ is_constant (mk_release ?y ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("Rewriting.is_constant_constructorsI",
     "~ is_constant ?x ==> ~ is_constant (mk_until ?y ?x)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("Rewriting.eq_i_iI",
     "Predicate.eq ?x ?xa ==> pred.eval (eq_i_i ?x ?xa) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Rewriting.syntactical_implies_i_iI",
     "?x \<turnstile>\<^sub>s ?xa ==>
      pred.eval (syntactical_implies_i_i ?x ?xa) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Rewriting.mk_and_semantics",
     "?w \<Turnstile>\<^sub>n mk_and ?x ?y =
      ?w \<Turnstile>\<^sub>n ?x and\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Rewriting.mk_next_pow_semantics",
     "?w \<Turnstile>\<^sub>n X\<^sub>n' ?i ?x =
      suffix ?i ?w \<Turnstile>\<^sub>n ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Rewriting.mk_or_semantics",
     "?w \<Turnstile>\<^sub>n mk_or ?x ?y =
      ?w \<Turnstile>\<^sub>n ?x or\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Rewriting.mk_release_semantics",
     "?w \<Turnstile>\<^sub>n mk_release ?x ?y =
      ?w \<Turnstile>\<^sub>n ?x R\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Rewriting.mk_strong_release_semantics",
     "?w \<Turnstile>\<^sub>n mk_strong_release ?x ?y =
      ?w \<Turnstile>\<^sub>n ?x M\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Rewriting.mk_until_semantics",
     "?w \<Turnstile>\<^sub>n mk_until ?x ?y =
      ?w \<Turnstile>\<^sub>n ?x U\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Rewriting.mk_weak_until_semantics",
     "?w \<Turnstile>\<^sub>n mk_weak_until ?x ?y =
      ?w \<Turnstile>\<^sub>n ?x W\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Rewriting.mk_next_pow_dist",
     "X\<^sub>n' (?i + ?j) ?\<phi> = X\<^sub>n' ?i (X\<^sub>n' ?j ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Rewriting.remove_weak_ops_sound",
     "?w \<Turnstile>\<^sub>n G\<^sub>n remove_weak_ops ?y =
      ?w \<Turnstile>\<^sub>n G\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Rewriting.remove_strong_ops_sound",
     "?w \<Turnstile>\<^sub>n F\<^sub>n remove_strong_ops ?y =
      ?w \<Turnstile>\<^sub>n F\<^sub>n ?y",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("Rewriting.suspendable_formula_simp",
     "suspendable ?\<xi> ==>
      ?w \<Turnstile>\<^sub>n X\<^sub>n ?\<xi> =
      ?w \<Turnstile>\<^sub>n ?\<xi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Rewriting.is_constant_constructorsI",
     "[| is_constant ?x; is_constant ?y |] ==> is_constant (mk_and ?x ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| is_constant ?x; is_constant ?y |] ==> is_constant (mk_or ?x ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| is_constant ?x; is_constant ?y |]
      ==> is_constant (mk_strong_release ?x ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| is_constant ?x; is_constant ?y |]
      ==> is_constant (mk_weak_until ?x ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Rewriting.release_constant_simp",
     "is_constant ?\<psi> ==>
      ?w \<Turnstile>\<^sub>n ?\<phi> R\<^sub>n ?\<psi> =
      ?w \<Turnstile>\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Rewriting.until_constant_simp",
     "is_constant ?\<psi> ==>
      ?w \<Turnstile>\<^sub>n ?\<phi> U\<^sub>n ?\<psi> =
      ?w \<Turnstile>\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Rewriting.pure_eventual_until_simp",
     "pure_eventual ?\<mu> ==>
      ?w \<Turnstile>\<^sub>n ?\<phi> U\<^sub>n ?\<mu> =
      ?w \<Turnstile>\<^sub>n ?\<mu>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Rewriting.pure_universal_release_simp",
     "pure_universal ?\<nu> ==>
      ?w \<Turnstile>\<^sub>n ?\<phi> R\<^sub>n ?\<nu> =
      ?w \<Turnstile>\<^sub>n ?\<nu>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Rewriting.suspendable_formula_simp",
     "suspendable ?\<xi> ==>
      ?w \<Turnstile>\<^sub>n ?\<phi> R\<^sub>n ?\<xi> =
      ?w \<Turnstile>\<^sub>n ?\<xi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Rewriting.suspendable_formula_simp",
     "suspendable ?\<xi> ==>
      ?w \<Turnstile>\<^sub>n ?\<phi> U\<^sub>n ?\<xi> =
      ?w \<Turnstile>\<^sub>n ?\<xi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Rewriting.suspendable_prefix_invariant",
     "suspendable ?\<xi> ==>
      (?u \<frown> ?w) \<Turnstile>\<^sub>n ?\<xi> =
      ?w \<Turnstile>\<^sub>n ?\<xi>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Rewriting.syntactical_implies_correct",
     "[| ?\<phi> \<turnstile>\<^sub>s ?\<psi>;
         ?w \<Turnstile>\<^sub>n ?\<phi> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Rewriting.rewrite_X_enat_correct",
     "?w \<Turnstile>\<^sub>n ?\<phi> =
      ?w \<Turnstile>\<^sub>n to_ltln (rewrite_X_enat ?\<phi>)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)))),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))))),
    ("Rewriting.pure_eventual_left_append",
     "[| pure_eventual ?\<mu>; ?w \<Turnstile>\<^sub>n ?\<mu> |]
      ==> (?u \<frown> ?w) \<Turnstile>\<^sub>n ?\<mu>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 2)
           ))),
    ("Rewriting.pure_universal_suffix_closed",
     "[| pure_universal ?\<nu>;
         (?u \<frown> ?w) \<Turnstile>\<^sub>n ?\<nu> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<nu>",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 2)
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| ~ is_constant ?x; ~ is_constant ?y |]
      ==> ~ is_constant (mk_and ?x ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| ~ is_constant ?x; ~ is_constant ?y |]
      ==> ~ is_constant (mk_or ?x ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| ~ is_constant ?x; ~ is_constant ?y |]
      ==> ~ is_constant (mk_strong_release ?x ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Rewriting.is_constant_constructorsI",
     "[| ~ is_constant ?x; ~ is_constant ?y |]
      ==> ~ is_constant (mk_weak_until ?x ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("Rewriting.eq_i_oE",
     "[| pred.eval (eq_i_o ?x) ?xa; Predicate.eq ?x ?xa ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Rewriting.eq_o_iE",
     "[| pred.eval (eq_o_i ?xa) ?x; Predicate.eq ?x ?xa ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Rewriting.is_constant_semantics",
     "is_constant ?\<phi> ==>
      (ALL w. w \<Turnstile>\<^sub>n ?\<phi>) |
      (\<nexists>w. w \<Turnstile>\<^sub>n ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app
              (template_hole 1, template_app (template_hole 0, t_empty)))
           ))),
    ("Rewriting.eq_i_iE",
     "[| pred.eval (eq_i_i ?x ?xa) ?y; Predicate.eq ?x ?xa ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Rewriting.syntactical_implies_i_iE",
     "[| pred.eval (syntactical_implies_i_i ?x ?xa) ?y;
         ?x \<turnstile>\<^sub>s ?xa ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Rewriting.combine_mk_atoms",
     "atoms_ltln (fst (combine mk_and ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.combine_mk_atoms",
     "atoms_ltln (fst (combine mk_or ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.combine_mk_atoms",
     "atoms_ltln (fst (combine mk_release ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.combine_mk_atoms",
     "atoms_ltln (fst (combine mk_strong_release ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.combine_mk_atoms",
     "atoms_ltln (fst (combine mk_until ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.combine_mk_atoms",
     "atoms_ltln (fst (combine mk_weak_until ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Rewriting.iterate_atoms",
     "(!!\<phi>. atoms_ltln (?f \<phi>) <= atoms_ltln \<phi>) ==>
      atoms_ltln (iterate ?f ?\<phi> ?n) <= atoms_ltln ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Rewriting.pure_eventual_strong_release_simp",
     "[| pure_eventual ?\<phi>; pure_eventual ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<phi> M\<^sub>n ?\<psi> =
          ?w \<Turnstile>\<^sub>n ?\<phi> and\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Rewriting.pure_universal_weak_until_simp",
     "[| pure_universal ?\<phi>; pure_universal ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<phi> W\<^sub>n ?\<psi> =
          ?w \<Turnstile>\<^sub>n ?\<phi> or\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Rewriting.suspendable_formula_simp2",
     "[| suspendable ?\<phi>; suspendable ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<phi> M\<^sub>n ?\<psi> =
          ?w \<Turnstile>\<^sub>n ?\<phi> and\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Rewriting.suspendable_formula_simp2",
     "[| suspendable ?\<phi>; suspendable ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n ?\<phi> W\<^sub>n ?\<psi> =
          ?w \<Turnstile>\<^sub>n ?\<phi> or\<^sub>n ?\<psi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_and ?x ?y) =
      (?x = true\<^sub>n & ?y = true\<^sub>n |
       ?x = false\<^sub>n | ?y = false\<^sub>n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 0)))
           ))),
    ("Rewriting.is_constant_constructors_simps2",
     "is_constant (mk_or ?x ?y) =
      (?x = false\<^sub>n & ?y = false\<^sub>n |
       ?x = true\<^sub>n | ?y = true\<^sub>n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 0)))
           ))),
    ("Rewriting.is_constant_constructors_simps3",
     "is_constant (mk_strong_release ?x ?y) =
      (?x = true\<^sub>n & ?y = true\<^sub>n |
       ?x = false\<^sub>n | ?y = false\<^sub>n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 0)))
           ))),
    ("Rewriting.is_constant_constructors_simps3",
     "is_constant (mk_weak_until ?x ?y) =
      (?x = false\<^sub>n & ?y = false\<^sub>n |
       ?x = true\<^sub>n | ?y = true\<^sub>n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 0)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 0)))
           ))),
    ("Rewriting.iterate_sound",
     "(!!\<phi>.
          ?w \<Turnstile>\<^sub>n ?f \<phi> =
          ?w \<Turnstile>\<^sub>n \<phi>) ==>
      ?w \<Turnstile>\<^sub>n iterate ?f ?\<phi> ?n =
      ?w \<Turnstile>\<^sub>n ?\<phi>",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 1)))),
    ("Rewriting.fst_combine",
     "fst (combine ?binop (?\<phi>, ?i) (?\<psi>, ?j)) =
      ?binop (X\<^sub>n' (the_enat_0 (?i - ?j)) ?\<phi>)
       (X\<^sub>n' (the_enat_0 (?j - ?i)) ?\<psi>)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_var 4,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2))),
           template_var 1)))),
    ("Rewriting.mk_next_pow_release",
     "suffix (min ?i ?j)
       ?w \<Turnstile>\<^sub>n X\<^sub>n' (?i - ?j)
                                ?\<phi> R\<^sub>n X\<^sub>n' (?j - ?i)
             ?\<psi> =
      ?w \<Turnstile>\<^sub>n X\<^sub>n' ?i
                               ?\<phi> R\<^sub>n X\<^sub>n' ?j ?\<psi>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 4)),
             template_var 0))),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Rewriting.mk_next_pow_until",
     "suffix (min ?i ?j)
       ?w \<Turnstile>\<^sub>n X\<^sub>n' (?i - ?j)
                                ?\<phi> U\<^sub>n X\<^sub>n' (?j - ?i)
             ?\<psi> =
      ?w \<Turnstile>\<^sub>n X\<^sub>n' ?i
                               ?\<phi> U\<^sub>n X\<^sub>n' ?j ?\<psi>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 4)),
             template_var 0))),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0))))),
    ("Rewriting.combine_atoms",
     "(!!\<phi> \<psi>.
          atoms_ltln (?f \<phi> \<psi>)
          <= atoms_ltln \<phi> Un atoms_ltln \<psi>) ==>
      atoms_ltln (fst (combine ?f ?x ?y))
      <= atoms_ltln (fst ?x) Un atoms_ltln (fst ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 0)))))),
    ("Rewriting.combine_infinity_invariant",
     "[| (?i = \<infinity>) = is_constant ?x;
         (?j = \<infinity>) = is_constant ?y;
         combine mk_and (?x, ?i) (?y, ?j) = (?z, ?k) |]
      ==> (?k = \<infinity>) = is_constant ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_hole 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 5)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app (template_hole 4, template_var 1)))),
    ("Rewriting.combine_infinity_invariant",
     "[| (?i = \<infinity>) = is_constant ?x;
         (?j = \<infinity>) = is_constant ?y;
         combine mk_or (?x, ?i) (?y, ?j) = (?z, ?k) |]
      ==> (?k = \<infinity>) = is_constant ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_hole 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 5)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app (template_hole 4, template_var 1)))),
    ("Rewriting.combine_infinity_invariant",
     "[| (?i = \<infinity>) = is_constant ?x;
         (?j = \<infinity>) = is_constant ?y;
         combine mk_release (?x, ?i) (?y, ?j) = (?z, ?k) |]
      ==> (?k = \<infinity>) = is_constant ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_hole 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 5)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app (template_hole 4, template_var 1)))),
    ("Rewriting.combine_infinity_invariant",
     "[| (?i = \<infinity>) = is_constant ?x;
         (?j = \<infinity>) = is_constant ?y;
         combine mk_strong_release (?x, ?i) (?y, ?j) = (?z, ?k) |]
      ==> (?k = \<infinity>) = is_constant ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_hole 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 5)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app (template_hole 4, template_var 1)))),
    ("Rewriting.combine_infinity_invariant",
     "[| (?i = \<infinity>) = is_constant ?x;
         (?j = \<infinity>) = is_constant ?y;
         combine mk_until (?x, ?i) (?y, ?j) = (?z, ?k) |]
      ==> (?k = \<infinity>) = is_constant ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_hole 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 5)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app (template_hole 4, template_var 1)))),
    ("Rewriting.combine_infinity_invariant",
     "[| (?i = \<infinity>) = is_constant ?x;
         (?j = \<infinity>) = is_constant ?y;
         combine mk_weak_until (?x, ?i) (?y, ?j) = (?z, ?k) |]
      ==> (?k = \<infinity>) = is_constant ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5),
            template_hole 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_app (template_hole 4, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_hole 1),
              template_app
               (template_app (template_hole 0, template_var 4),
                template_var 5)),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 3)),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_app (template_hole 4, template_var 1)))),
    ("Rewriting.combine_and_or_semantics",
     "[| (?i = \<infinity>) = is_constant ?\<phi>;
         (?j = \<infinity>) = is_constant ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n to_ltln
                                   (combine mk_and (?\<phi>, ?i)
                                     (?\<psi>, ?j)) =
          ?w \<Turnstile>\<^sub>n to_ltln
                                   (?\<phi>,
                                    ?i) and\<^sub>n to_ltln (?\<psi>, ?j)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_hole 10),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_hole 10),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2))))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2)))))))),
    ("Rewriting.combine_and_or_semantics",
     "[| (?i = \<infinity>) = is_constant ?\<phi>;
         (?j = \<infinity>) = is_constant ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n to_ltln
                                   (combine mk_or (?\<phi>, ?i)
                                     (?\<psi>, ?j)) =
          ?w \<Turnstile>\<^sub>n to_ltln
                                   (?\<phi>,
                                    ?i) or\<^sub>n to_ltln (?\<psi>, ?j)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_hole 10),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_hole 10),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2))))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2)))))))),
    ("Rewriting.combine_until_release_semantics",
     "[| (?i = \<infinity>) = is_constant ?\<phi>;
         (?j = \<infinity>) = is_constant ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n to_ltln
                                   (combine mk_release (?\<phi>, ?i)
                                     (?\<psi>, ?j)) =
          ?w \<Turnstile>\<^sub>n to_ltln
                                   (?\<phi>,
                                    ?i) R\<^sub>n to_ltln (?\<psi>, ?j)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_hole 10),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_hole 10),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2))))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2)))))))),
    ("Rewriting.combine_weak_until_strong_release_semantics",
     "[| (?i = \<infinity>) = is_constant ?\<phi>;
         (?j = \<infinity>) = is_constant ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n to_ltln
                                   (combine mk_strong_release (?\<phi>, ?i)
                                     (?\<psi>, ?j)) =
          ?w \<Turnstile>\<^sub>n to_ltln
                                   (?\<phi>,
                                    ?i) M\<^sub>n to_ltln (?\<psi>, ?j)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_hole 10),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_hole 10),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2))))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2)))))))),
    ("Rewriting.combine_until_release_semantics",
     "[| (?i = \<infinity>) = is_constant ?\<phi>;
         (?j = \<infinity>) = is_constant ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n to_ltln
                                   (combine mk_until (?\<phi>, ?i)
                                     (?\<psi>, ?j)) =
          ?w \<Turnstile>\<^sub>n to_ltln
                                   (?\<phi>,
                                    ?i) U\<^sub>n to_ltln (?\<psi>, ?j)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_hole 10),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_hole 10),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2))))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2)))))))),
    ("Rewriting.combine_weak_until_strong_release_semantics",
     "[| (?i = \<infinity>) = is_constant ?\<phi>;
         (?j = \<infinity>) = is_constant ?\<psi> |]
      ==> ?w \<Turnstile>\<^sub>n to_ltln
                                   (combine mk_weak_until (?\<phi>, ?i)
                                     (?\<psi>, ?j)) =
          ?w \<Turnstile>\<^sub>n to_ltln
                                   (?\<phi>,
                                    ?i) W\<^sub>n to_ltln (?\<psi>, ?j)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_hole 10),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 2),
            template_hole 10),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2))))),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_var 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 2)))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))))))))]
