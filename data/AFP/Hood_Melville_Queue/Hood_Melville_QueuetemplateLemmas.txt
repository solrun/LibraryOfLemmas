   [("Hood_Melville_Queue.invar_qfa", "invar (qfa ?l)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Hood_Melville_Queue.inv_st_exec", "inv_st ?s ==> inv_st (exec ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hood_Melville_Queue.inv_st_invalidate",
     "inv_st ?s ==> inv_st (invalidate ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hood_Melville_Queue.invar_deq", "invar ?q ==> invar (deq ?q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hood_Melville_Queue.inv_st_exec2",
     "inv_st ?s ==> inv_st (exec (exec ?s))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Hood_Melville_Queue.invar_enq", "invar ?q ==> invar (enq ?x ?q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Hood_Melville_Queue.qfa_deq_correct",
     "list (deq (qfa ?l)) = tl (list (qfa ?l))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0,
         template_app
          (template_hole 3,
           template_app (template_hole 1, template_var 0))))),
    ("Hood_Melville_Queue.queue_correct_deq",
     "invar ?q ==> list (deq ?q) = tl (list ?q)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("Hood_Melville_Queue.qfa_enq_correct",
     "list (enq ?x (qfa ?l)) = list (qfa ?l) @ [?x]",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 5,
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Hood_Melville_Queue.queue_correct_enq",
     "invar ?q ==> list (enq ?x ?q) = list ?q @ [?x]",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Hood_Melville_Queue.first_correct",
     "[| invar ?q; list ?q ~= [] |] ==> first ?q = hd (list ?q)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("Hood_Melville_Queue.tl_rev_take_Suc",
     "?n + 1 <= length ?l ==>
      rev (take ?n ?l) = tl (rev (take (Suc ?n) ?l))",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 6),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("Hood_Melville_Queue.inv_st_steps",
     "[| inv_st ?s; ?s ~= Idle |]
      ==> EX x. steps (rem_steps ?s) ?s = Done x",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Hood_Melville_Queue.tl_rev_take",
     "[| 0 < ?ok; ?ok <= length ?f |]
      ==> rev (take ?ok (?x # ?f)) = tl (rev (take ?ok ?f)) @ [?x]",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1)))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 0))))),
    ("Hood_Melville_Queue.rev_steps_app",
     "inv_st (Rev ?ok ?f ?f' ?r ?r') ==>
      steps (length ?f + 1) (Rev ?ok ?f ?f' ?r ?r') =
      App (length ?f + ?ok) (rev ?f @ ?f') (rev ?r @ ?r')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 3)),
               template_hole 3)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 8, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 3)),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)))))]
