   [("LTL_to_GBA.new1_finite", "finite (new1 ?\<psi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LTL_to_GBA.new2_finite", "finite (new2 ?\<psi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LTL_to_GBA.next1_finite", "finite (next1 ?\<psi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LTL_to_GBA.create_graph_nofail", "nofail (create_graph ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LTL_to_GBA.expand_ord_wf", "wf (expand_ord ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("LTL_to_GBA.expand_new_name__less_zero", "0 < expand_new_name ?nm",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("LTL_to_GBA.expand_new_name_expand_init",
     "expand_init < expand_new_name ?nm",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("LTL_to_GBA.create_graph_eq_create_graph\<^sub>T",
     "create_graph ?\<phi> = create_graph\<^sub>T ?\<phi>",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("LTL_to_GBA.expand_new_name_step",
     "name ?n < expand_new_name (name ?n)",
     template_inequation
      (less_than, template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("LTL_to_GBA.create_graph_finite",
     "create_graph ?\<phi> <= SPEC finite",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("LTL_to_GBA.create_gba__invar", "create_gba ?\<phi> <= SPEC gba",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("LTL_to_GBA.create_graph_precond",
     "create_graph ?\<phi> <= SPEC (create_gba_from_nodes_precond ?\<phi>)",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("LTL_to_GBA.expand_nofail",
     "expand_inv ?\<phi> ?n_ns ==> nofail (expand\<^sub>T ?n_ns)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("LTL_to_GBA.old_next_limit_finite", "finite (old_next_limit ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             t_empty))
         )),
    ("LTL_to_GBA.name_upd_incoming",
     "name ` upd_incoming ?n ?ns = name ` ?ns",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("LTL_to_GBA.create_graph__name_inj",
     "create_graph ?\<phi> <= SPEC (inj_on name)",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("LTL_to_GBA.create_gba__fin",
     "create_gba ?\<phi> <= SPEC (%\<A>. finite (g_V \<A>))",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("LTL_to_GBA.create_gba_nds_invars",
     "create_gba ?\<phi> <= SPEC (%\<A>. nds_invars (g_V \<A>))",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("LTL_to_GBA.create_gba__name_inj",
     "create_gba ?\<phi> <= SPEC (%\<A>. inj_on name (g_V \<A>))",
     template_inequation
      (less_equals, template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("LTL_to_GBA.expand_eq_expand\<^sub>T",
     "expand_inv ?\<phi> ?n_ns ==> expand\<^sub>T ?n_ns = expand ?n_ns",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("LTL_to_GBA.new1_subset_frmls",
     "?\<phi> : new1 ?\<psi> ==> ?\<phi> : subfrmlsr ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("LTL_to_GBA.new2_subset_frmls",
     "?\<phi> : new2 ?\<psi> ==> ?\<phi> : subfrmlsr ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("LTL_to_GBA.next1_subset_frmls",
     "?\<phi> : next1 ?\<psi> ==> ?\<phi> : subfrmlsr ?\<psi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("LTL_to_GBA.create_graph_old_finite",
     "create_graph ?\<phi> <= SPEC (%nds. ALL nd:nds. finite (old nd))",
     template_inequation
      (less_equals, template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("LTL_to_GBA.create_gba__no_init",
     "create_gba ?\<phi> <= SPEC (%\<A>. expand_init ~: name ` g_V \<A>)",
     template_inequation
      (less_equals, template_app (template_hole 8, template_var 0),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("LTL_to_GBA.create_gba__old_fin",
     "create_gba ?\<phi> <= SPEC (%\<A>. ALL nd:g_V \<A>. finite (old nd))",
     template_inequation
      (less_equals, template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("LTL_to_GBA.create_gba_acc",
     "create_gba ?\<phi>
      <= SPEC
          (%\<A>.
              ALL \<xi>.
                 gba.accept \<A> \<xi> =
                 \<xi> \<Turnstile>\<^sub>r ?\<phi>)",
     template_inequation
      (less_equals, template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("LTL_to_GBA.discard_stat_refine",
     "?m1.0 <= ?m2.0 ==>
      stat_set_data_nres ?ns ?ni ?na >>= (%_. ?m1.0) <= ?m2.0",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0))),
           t_empty),
         template_var 3))),
    ("LTL_to_GBA.upd_incoming_eq_old_next_pair",
     "old_next_pair ` ?ns = old_next_pair ` upd_incoming ?n ?ns",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 1),
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("LTL_to_GBA.create_gba__incoming_exists",
     "create_gba ?\<phi>
      <= SPEC
          (%\<A>.
              ALL nd:g_V \<A>.
                 incoming nd <= insert expand_init (name ` g_V \<A>))",
     template_inequation
      (less_equals, template_app (template_hole 10, template_var 0),
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("LTL_to_GBA.create_graph__name_ident",
     "create_graph ?\<phi> <= SPEC expand_name_ident",
     template_inequation
      (less_equals, template_app (template_hole 8, template_var 0),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("LTL_to_GBA.create_name_gba_correct",
     "create_name_gba ?\<phi>
      <= SPEC
          (%\<A>.
              gba \<A> &
              finite (g_V \<A>) &
              (ALL \<xi>.
                  gba.accept \<A> \<xi> =
                  \<xi> \<Turnstile>\<^sub>r ?\<phi>))",
     template_inequation
      (less_equals, template_app (template_hole 10, template_var 0),
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("LTL_to_GBA.create_name_igba_correct",
     "create_name_igba ?\<phi>
      <= SPEC
          (%G. igba G &
               finite (g_V G) &
               (ALL \<xi>.
                   igba.accept G \<xi> =
                   \<xi> \<Turnstile>\<^sub>r ?\<phi>))",
     template_inequation
      (less_equals, template_app (template_hole 10, template_var 0),
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("LTL_to_GBA.name_upd_incoming_f",
     "name (upd_incoming_f ?n ?x) = name ?x",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 1)),
                     template_app (template_hole 6, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 5, template_var 1)),
                   template_app (template_hole 4, template_var 0)))),
             template_app
              (template_app (template_hole 3, t_empty), template_var 1)),
           template_var 1)),
       template_app (template_hole 11, template_var 1))),
    ("LTL_to_GBA.new1_less_sum",
     "size_set (new1 ?\<phi>) < size_set {?\<phi>}",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 10, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("LTL_to_GBA.new2_less_sum",
     "size_set (new2 ?\<phi>) < size_set {?\<phi>}",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 10, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("LTL_to_GBA.T4_1",
     "create_gba ?\<phi>
      <= SPEC
          (%\<A>.
              gba \<A> &
              finite (g_V \<A>) &
              (ALL \<xi>.
                  gba.accept \<A> \<xi> =
                  \<xi> \<Turnstile>\<^sub>r ?\<phi>) &
              nds_invars (g_V \<A>))",
     template_inequation
      (less_equals, template_app (template_hole 11, template_var 0),
       template_app
        (template_hole 10, template_app (template_hole 9, t_empty)))),
    ("LTL_to_GBA.create_graph__incoming_name_exist",
     "create_graph ?\<phi>
      <= SPEC
          (%nds. ALL nd:nds.
                    expand_init < name nd &
                    (ALL nm:incoming nd.
                        nm ~= expand_init --> nm : name ` nds))",
     template_inequation
      (less_equals, template_app (template_hole 14, template_var 0),
       template_app
        (template_hole 13, template_app (template_hole 12, t_empty)))),
    ("LTL_to_GBA.expand_inv_upd_incoming",
     "expand_inv ?\<phi> (?n, ?ns) ==>
      expand_inv_result ?\<phi> (upd_incoming ?n ?ns)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   template_var 0)),
               t_empty))
           ))),
    ("LTL_to_GBA.upd_incoming__ident_node",
     "[| ?nd : upd_incoming ?n ?ns; ?nd : ?ns |]
      ==> incoming ?n <= incoming ?nd |
          ~ (old ?nd = old ?n & next ?nd = next ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1)),
                 template_app (template_hole 7, template_var 2))),
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 2)),
                     template_app (template_hole 2, template_var 1))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 0, template_var 1)))))
           ))),
    ("LTL_to_GBA.upd_incoming__ident",
     "[| ALL n:?ns. ?P n;
         !!n v. [| n : ?ns; ?P n |] ==> ?P (n(| incoming := v |)) |]
      ==> ALL n:upd_incoming ?n ?ns. ?P n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             t_empty)
           ))),
    ("LTL_to_GBA.SPEC_rule_param2",
     "[| ?f ?x <= SPEC (?P ?x);
         !!r1 r2. ?P ?x (r1, r2) ==> ?P ?x' (r1, r2) |]
      ==> ?f ?x <= SPEC (?P ?x')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 3, template_var 2),
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app (template_var 1, template_var 2)))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 3, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0)))))),
    ("LTL_to_GBA.upd_incoming__elem",
     "?nd : upd_incoming ?n ?ns ==>
      ?nd : ?ns |
      (EX nd':?ns.
          ?nd = nd'(| incoming := incoming ?n Un incoming nd' |) &
          old nd' = old ?n & next nd' = next ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 14, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 11, template_var 0), t_empty))
           ))),
    ("LTL_to_GBA.expand_rslt_exist_eq",
     "expand ?n_ns <= SPEC (expand_rslt_exist_eq ?n_ns)",
     template_inequation
      (less_equals, template_app (template_hole 14, template_var 0),
       template_app
        (template_hole 13, template_app (template_hole 12, t_empty)))),
    ("LTL_to_GBA.SPEC_rule_nested2",
     "[| ?m <= SPEC ?P; !!r1 r2. ?P (r1, r2) ==> ?g (r1, r2) <= SPEC ?P |]
      ==> ?m <= SPEC (%r'. ?g r' <= SPEC ?P)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("LTL_to_GBA.expand_term_prop",
     "expand_inv ?\<phi> ?n_ns ==>
      expand\<^sub>T ?n_ns
      <= SPEC
          (%(uu_, nds).
              old_next_pair ` snd ?n_ns <= old_next_pair ` nds &
              expand_inv_result ?\<phi> nds)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 16, template_var 0),
         template_app
          (template_hole 15,
           template_app
            (template_hole 14,
             template_app (template_hole 13, t_empty)))))),
    ("LTL_to_GBA.REC_rule_old",
     "[| trimono ?body; ?\<Phi> ?x;
         !!f x.
            [| !!x. ?\<Phi> x ==> f x <= ?M x; ?\<Phi> x; f <= REC ?body |]
            ==> ?body f x <= ?M x |]
      ==> REC ?body ?x <= ?M ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("LTL_to_GBA.SPEC_rule_weak",
     "[| ?f ?x <= SPEC (?Q ?x); ?f ?x <= SPEC (?P ?x);
         !!r1 r2.
            [| ?Q ?x (r1, r2); ?P ?x (r1, r2) |] ==> ?P ?x' (r1, r2) |]
      ==> ?f ?x <= SPEC (?P ?x')",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 4, template_var 3),
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app (template_var 2, template_var 3)))),
        template_inequation
         (less_equals, template_app (template_var 4, template_var 3),
          template_app
           (template_hole 4,
            template_app
             (template_hole 3,
              template_app (template_var 1, template_var 3)))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_var 4, template_var 3),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_var 1, template_var 0)))))),
    ("LTL_to_GBA.SPEC_rule_weak_nested2",
     "[| ?f <= SPEC ?Q; ?f <= SPEC ?P;
         !!r1 r2.
            [| ?Q (r1, r2); ?P (r1, r2) |] ==> ?g (r1, r2) <= SPEC ?P |]
      ==> ?f <= SPEC (%r'. ?g r' <= SPEC ?P)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 2))),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1))),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("LTL_to_GBA.L4_7",
     "?\<xi> \<Turnstile>\<^sub>r ?\<phi> ==>
      create_graph ?\<phi> <= SPEC (create_graph_rslt_exist ?\<xi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 16, template_var 0),
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty))))),
    ("LTL_to_GBA.expand_term_prop_help",
     "[| ((?n', ?ns'), ?n, ?ns) : expand_ord ?\<phi> &
         expand_inv ?\<phi> (?n', ?ns');
         [| expand_inv ?\<phi> (?n', ?ns');
            ((?n', ?ns'), ?n, ?ns) : expand_ord ?\<phi> |]
         ==> ?f (?n', ?ns') <= SPEC ?P |]
      ==> ?f (?n', ?ns') <= SPEC ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 5, template_var 6),
                          template_var 5)),
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_var 3))),
                  template_app (template_hole 4, template_var 2))),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_var 6),
                           template_var 5)),
                       template_app
                        (template_app (template_hole 5, template_var 4),
                         template_var 3))),
                   template_app (template_hole 4, template_var 2))
                 )],
            template_inequation
             (less_equals,
              template_app
               (template_var 1,
                template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5)),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))))],
       template_inequation
        (less_equals,
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 5, template_var 6),
             template_var 5)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("LTL_to_GBA.L4_5",
     "create_graph ?\<phi>
      <= SPEC
          (%nds. ALL q:nds.
                    (ALL \<psi>:old q. ?\<xi> \<Turnstile>\<^sub>r \<psi>) &
                    (ALL \<psi>:next q.
                        ?\<xi> \<Turnstile>\<^sub>r X\<^sub>r \<psi>) -->
                    expand_rslt_all__ex_equiv ?\<xi> q nds)",
     template_inequation
      (less_equals, template_app (template_hole 21, template_var 1),
       template_app
        (template_hole 20, template_app (template_hole 19, t_empty)))),
    ("LTL_to_GBA.expand_name_propag__name_ident",
     "((ALL nm:incoming (fst ?n_ns). nm < name (fst ?n_ns)) &
       0 < name (fst ?n_ns) &
       (ALL q:snd ?n_ns.
           name q < name (fst ?n_ns) &
           (ALL nm:incoming q. nm < name (fst ?n_ns)))) &
      expand_name_ident (snd ?n_ns) ==>
      expand ?n_ns <= SPEC (%r. expand_name_ident (snd r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_hole 14,
                          template_app (template_hole 13, template_var 0))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 12, template_hole 10),
                        template_app
                         (template_hole 11,
                          template_app
                           (template_hole 13, template_var 0)))),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app (template_hole 8, template_var 0)),
                      t_empty)))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0)),
                t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("LTL_to_GBA.expand_name_propag__incoming",
     "((ALL nm:incoming (fst ?n_ns). nm < name (fst ?n_ns)) &
       0 < name (fst ?n_ns) &
       (ALL q:snd ?n_ns.
           name q < name (fst ?n_ns) &
           (ALL nm:incoming q. nm < name (fst ?n_ns)))) &
      expand_name_ident (snd ?n_ns) ==>
      expand ?n_ns
      <= SPEC
          (%r. ALL q:snd r.
                  name q < fst r & (ALL nm':incoming q. nm' < fst r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_hole 15,
                          template_app (template_hole 14, template_var 0))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 13, template_hole 11),
                        template_app
                         (template_hole 12,
                          template_app
                           (template_hole 14, template_var 0)))),
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 0)),
                      t_empty)))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0)),
                t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("LTL_to_GBA.expand_prop_exist",
     "expand ?n_ns
      <= SPEC
          (%r. expand_assm_exist ?\<xi> ?n_ns -->
               expand_rslt_exist ?\<xi> ?n_ns r)",
     template_inequation
      (less_equals, template_app (template_hole 21, template_var 1),
       template_app
        (template_hole 20, template_app (template_hole 19, t_empty)))),
    ("LTL_to_GBA.expand_name_propag__name",
     "((ALL nm:incoming (fst ?n_ns). nm < name (fst ?n_ns)) &
       0 < name (fst ?n_ns) &
       (ALL q:snd ?n_ns.
           name q < name (fst ?n_ns) &
           (ALL nm:incoming q. nm < name (fst ?n_ns)))) &
      expand_name_ident (snd ?n_ns) ==>
      expand ?n_ns
      <= SPEC
          (%r. (name (fst ?n_ns) <= fst r &
                name ` snd ?n_ns <= name ` snd r) &
               name ` snd r =
               name ` snd ?n_ns Un
               name ` {nd: snd r. name (fst ?n_ns) <= name nd})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app
                         (template_hole 21,
                          template_app (template_hole 20, template_var 0))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 19, template_hole 17),
                        template_app
                         (template_hole 18,
                          template_app
                           (template_hole 20, template_var 0)))),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 15, template_var 0)),
                      t_empty)))),
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 0)),
                t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 10, template_var 0),
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))))),
    ("LTL_to_GBA.expand_incoming_name_exist",
     "[| expand_init < name (fst ?n_ns) &
         (ALL nm:incoming (fst ?n_ns).
             nm ~= expand_init --> nm : name ` snd ?n_ns) &
         ((ALL nm:incoming (fst ?n_ns). nm < name (fst ?n_ns)) &
          0 < name (fst ?n_ns) &
          (ALL q:snd ?n_ns.
              name q < name (fst ?n_ns) &
              (ALL nm:incoming q. nm < name (fst ?n_ns)))) &
         expand_name_ident (snd ?n_ns);
         ALL nd:snd ?n_ns.
            expand_init < name nd &
            (ALL nm:incoming nd.
                nm ~= expand_init --> nm : name ` snd ?n_ns) |]
      ==> expand ?n_ns
          <= SPEC
              (%nm_nds.
                  ALL nd:snd nm_nds.
                     expand_init < name nd &
                     (ALL nm:incoming nd.
                         nm ~= expand_init --> nm : name ` snd nm_nds))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_hole 19),
                  template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_var 0)))),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_hole 15,
                        template_app (template_hole 17, template_var 0))),
                    t_empty)),
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15,
                              template_app
                               (template_hole 17, template_var 0))),
                          t_empty)),
                      template_app
                       (template_app
                         (template_hole 21,
                          template_app
                           (template_app
                             (template_hole 20, template_hole 8),
                            template_app
                             (template_hole 18,
                              template_app
                               (template_hole 17, template_var 0)))),
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app (template_hole 9, template_var 0)),
                          t_empty)))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 9, template_var 0)),
                    t_empty))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 9, template_var 0)),
              t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2, template_app (template_hole 1, t_empty))))),
    ("LTL_to_GBA.expand_name_propag",
     "((ALL nm:incoming (fst ?n_ns). nm < name (fst ?n_ns)) &
       0 < name (fst ?n_ns) &
       (ALL q:snd ?n_ns.
           name q < name (fst ?n_ns) &
           (ALL nm:incoming q. nm < name (fst ?n_ns)))) &
      expand_name_ident (snd ?n_ns) ==>
      expand ?n_ns
      <= SPEC
          (%r. (ALL q:snd r.
                   name q < fst r & (ALL nm':incoming q. nm' < fst r)) &
               ((name (fst ?n_ns) <= fst r &
                 name ` snd ?n_ns <= name ` snd r) &
                name ` snd r =
                name ` snd ?n_ns Un
                name ` {nd: snd r. name (fst ?n_ns) <= name nd}) &
               expand_name_ident (snd r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app
                         (template_hole 21,
                          template_app (template_hole 20, template_var 0))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 19, template_hole 17),
                        template_app
                         (template_hole 18,
                          template_app
                           (template_hole 20, template_var 0)))),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app (template_hole 15, template_var 0)),
                      t_empty)))),
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 0)),
                t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 10, template_var 0),
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))))),
    ("LTL_to_GBA.expand_prop_all",
     "((ALL nm:incoming (fst ?n_ns). nm < name (fst ?n_ns)) &
       0 < name (fst ?n_ns) &
       (ALL q:snd ?n_ns.
           name q < name (fst ?n_ns) &
           (ALL nm:incoming q. nm < name (fst ?n_ns)))) &
      expand_name_ident (snd ?n_ns) ==>
      expand ?n_ns <= SPEC (expand_rslt_all ?\<xi> ?n_ns)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app
                   (template_hole 33,
                    template_app
                     (template_app
                       (template_hole 32,
                        template_app
                         (template_hole 31,
                          template_app (template_hole 30, template_var 1))),
                      t_empty)),
                  template_app
                   (template_app
                     (template_hole 33,
                      template_app
                       (template_app (template_hole 29, template_hole 27),
                        template_app
                         (template_hole 28,
                          template_app
                           (template_hole 30, template_var 1)))),
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app (template_hole 25, template_var 1)),
                      t_empty)))),
              template_app
               (template_app
                 (template_hole 26,
                  template_app (template_hole 25, template_var 1)),
                t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 20, template_var 1),
         template_app
          (template_hole 19, template_app (template_hole 18, t_empty))))),
    ("LTL_to_GBA.expand_inv_impl",
     "[| expand_inv ?\<phi> (?n, ?ns); ?\<psi> : new ?n;
         old_next_pair ` ?ns <= old_next_pair ` ?ns';
         expand_inv_result ?\<phi> ?ns';
         ?n' = ?n
         (| new := new ?n - {?\<psi>}, old := {?\<psi>} Un old ?n |) |
         ?n' = ?n
         (| new := new1 ?\<psi> Un (new ?n - {?\<psi>}),
            old := {?\<psi>} Un old ?n,
            next := next1 ?\<psi> Un next ?n |) |
         ?n' = ?n
         (| name := ?nm, new := new2 ?\<psi> Un (new ?n - {?\<psi>}),
            old := {?\<psi>} Un old ?n |) |]
      ==> ((?n', ?ns'), ?n, ?ns) : expand_ord ?\<phi> &
          expand_inv ?\<phi> (?n', ?ns')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 32, template_var 6),
              template_app
               (template_app (template_hole 31, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 3),
              template_app (template_hole 29, template_var 5))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 27, t_empty), template_var 4),
          template_app
           (template_app (template_hole 27, t_empty), template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app (template_hole 22, template_var 2)),
              template_app
               (template_app (template_hole 21, template_var 2), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_app
                   (template_app (template_hole 14, t_empty),
                    template_app
                     (template_app (template_hole 10, t_empty),
                      template_var 5)))),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 1),
                    template_app
                     (template_app (template_hole 8, t_empty),
                      template_app
                       (template_app (template_hole 14, t_empty),
                        template_app
                         (template_app (template_hole 10, t_empty),
                          template_var 5))))),
                template_app
                 (template_app (template_hole 15, template_var 1),
                  template_app
                   (template_app (template_hole 14, t_empty),
                    template_app
                     (template_app (template_hole 10, t_empty),
                      template_app
                       (template_app (template_hole 3, t_empty),
                        template_var 5))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 31, template_var 1),
                         template_var 2)),
                     template_app
                      (template_app (template_hole 31, template_var 5),
                       template_var 4))),
                 template_app (template_hole 0, template_var 6))),
             template_app
              (template_app (template_hole 32, template_var 6),
               template_app
                (template_app (template_hole 31, template_var 1),
                 template_var 2)))
           ))),
    ("LTL_to_GBA.expand_rec_rule",
     "[| ?\<Phi> ?x;
         !!f x.
            [| !!x. f x <= expand x; !!x. ?\<Phi> x ==> f x <= ?M x;
               ?\<Phi> x |]
            ==> (case x of
                 (n, ns) =>
                   if new n = {}
                   then if EX n':ns. old n' = old n & next n' = next n
                        then RETURN (name n, upd_incoming n ns)
                        else f ((| name = expand_new_name (name n),
                                   incoming = {name n}, new = next n,
                                   old = {}, next = {} |),
                                {n} Un ns)
                   else SPEC (%x. x : new n) >>=
                        (%\<phi>.
                            let n = n(| new := new n - {\<phi>} |)
                            in if EX q. \<phi> = prop\<^sub>r(q) |
  \<phi> = nprop\<^sub>r(q)
                               then if not\<^sub>r \<phi> : old n
                                    then RETURN (name n, ns)
                                    else f
    (n(| old := {\<phi>} Un old n |), ns)
                               else if \<phi> = true\<^sub>r
                                    then f
    (n(| old := {\<phi>} Un old n |), ns)
                                    else if \<phi> = false\<^sub>r
   then RETURN (name n, ns)
   else if EX \<nu> \<mu>.
              \<phi> = \<nu> and\<^sub>r \<mu> | \<phi> = X\<^sub>r \<nu>
        then f (n(| new := new1 \<phi> Un new n, old := {\<phi>} Un old n,
                    next := next1 \<phi> Un next n |),
                ns)
        else f (n(| new := new1 \<phi> Un new n, old := {\<phi>} Un old n,
                    next := next1 \<phi> Un next n |),
                ns) >>=
             (%(nm, nds).
                 f (n(| name := nm, new := new2 \<phi> Un new n,
                        old := {\<phi>} Un old n |),
                    nds))))
                <= ?M x |]
      ==> expand ?x <= ?M ?x",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 53, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 50, template_var 1),
         template_app (template_var 0, template_var 1))))]
