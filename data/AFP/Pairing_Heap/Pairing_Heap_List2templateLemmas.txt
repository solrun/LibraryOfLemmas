   [("Pairing_Heap_List2.mset_hp_empty", "mset_hp ?hp ~= {#}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Pairing_Heap_List2.merge_None", "merge None ?h = ?h",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Pairing_Heap_List2.set_mset_mset_hp",
     "set_mset (mset_hp ?h) = set_hp ?h",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Pairing_Heap_List2.invar_Some", "invar (Some ?h) = php ?h",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Pairing_Heap_List2.pass12_merge_pairs",
     "pass\<^sub>2 (pass\<^sub>1 ?hs) = merge_pairs ?hs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Pairing_Heap_List2.mset_heap_Some",
     "mset_heap (Some ?hp) = mset_hp ?hp",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Pairing_Heap_List2.invar_del_min", "invar ?h ==> invar (del_min ?h)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Pairing_Heap_List2.mset_heap_empty",
     "(mset_heap ?h = {#}) = (?h = None)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Pairing_Heap_List2.invar_insert",
     "invar ?h ==> invar (Pairing_Heap_List2.insert ?x ?h)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Pairing_Heap_List2.mset_merge_pairs",
     "mset_heap (merge_pairs ?hs) =
      \<Sum>\<^sub># (image_mset mset_hp (mset ?hs))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Pairing_Heap_List2.mset_merge",
     "mset_heap (merge ?h1.0 ?h2.0) = mset_heap ?h1.0 + mset_heap ?h2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Pairing_Heap_List2.mset_link",
     "mset_hp (link ?h1.0 ?h2.0) = mset_hp ?h1.0 + mset_hp ?h2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Pairing_Heap_List2.mset_insert",
     "mset_heap (Pairing_Heap_List2.insert ?a ?h) = {#?a#} + mset_heap ?h",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app (template_hole 4, template_var 0)))),
    ("Pairing_Heap_List2.invar_pass2",
     "ALL h:set ?hs. php h ==> invar (pass\<^sub>2 ?hs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Pairing_Heap_List2.get_min_in",
     "?h ~= None ==> get_min ?h : set_hp (the ?h)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Pairing_Heap_List2.invar_merge",
     "[| invar ?h1.0; invar ?h2.0 |] ==> invar (merge ?h1.0 ?h2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pairing_Heap_List2.php_link",
     "[| php ?h1.0; php ?h2.0 |] ==> php (link ?h1.0 ?h2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Pairing_Heap_List2.invar_pass1",
     "ALL h:set ?hs. php h ==> ALL h:set (pass\<^sub>1 ?hs). php h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 0))),
             t_empty)
           ))),
    ("Pairing_Heap_List2.mset_del_min",
     "?h ~= None ==>
      mset_heap (del_min ?h) = mset_heap ?h - {#get_min ?h#}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("Pairing_Heap_List2.get_min_min",
     "[| ?h ~= None; invar ?h; ?x : set_hp (the ?h) |]
      ==> get_min ?h <= ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0)))]
