Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Tree" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.518s cpu time, 0.044s GC time
Loading theory "Draft.Bounds_Lemmas" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.Sin_Cos_Bounds")
### theory "Draft.Bounds_Lemmas"
### 0.049s elapsed time, 0.193s cpu time, 0.000s GC time
Loading theory "Draft.Sin_Cos_Bounds" (required by "Draft.Sin_Cos_BoundsMoreTemplates")
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.854s cpu time, 0.044s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Sin_Cos_Bounds"
### 0.128s elapsed time, 0.497s cpu time, 0.080s GC time
### theory "HOL-Library.Nat_Bijection"
### 0.355s elapsed time, 1.374s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.748s elapsed time, 2.346s cpu time, 0.277s GC time
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.968s elapsed time, 2.745s cpu time, 0.698s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.916s elapsed time, 4.756s cpu time, 0.854s GC time
Loading theory "Draft.Templates" (required by "Draft.Sin_Cos_BoundsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.117s cpu time, 0.052s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Sin_Cos_BoundsMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.456s elapsed time, 0.461s cpu time, 0.000s GC time
Loading theory "Draft.Sin_Cos_BoundsMoreTemplates"
val templateLemmas =
   [("Sin_Cos_Bounds.cospoly_minus", "cospoly ?n (- ?x) = cospoly ?n ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Sin_Cos_Bounds.sinpoly_minus", "sinpoly ?n (- ?x) = - sinpoly ?n ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Sin_Cos_Bounds.sin_le_arg", "0 <= ?x ==> sin ?x <= ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 0))),
    ("Sin_Cos_Bounds.d_sinpoly_cospoly",
     "(sinpoly (Suc ?n) has_real_derivative cospoly ?n ?x) (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Sin_Cos_Bounds.d_cospoly_sinpoly",
     "(cospoly (Suc ?n) has_real_derivative - sinpoly ?n ?x) (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Sin_Cos_Bounds.cos_ge_1_arg", "0 <= ?x ==> 1 - ?x <= cos ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Sin_Cos_Bounds.cospoly_upper", "cos ?x <= cospoly (Suc (4 * ?n)) ?x",
     template_inequation
      (less_equals, template_app (template_hole 6, template_var 1),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 1, template_hole 0)))),
               template_var 0))),
         template_var 1))),
    ("Sin_Cos_Bounds.cospoly_lower",
     "cospoly (Suc (Suc (Suc (4 * ?n)))) ?x <= cos ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 2, template_hole 1)))),
                   template_var 1))))),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Sin_Cos_Bounds.cospoly_Suc",
     "cospoly (Suc ?n) = (%x. cospoly ?n x + cos_coeff ?n * x ^ ?n)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       t_empty)),
    ("Sin_Cos_Bounds.sinpoly_Suc",
     "sinpoly (Suc ?n) = (%x. sinpoly ?n x + sin_coeff ?n * x ^ ?n)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       t_empty)),
    ("Sin_Cos_Bounds.cospoly_upper_nonneg",
     "0 <= ?x ==> cos ?x <= cospoly (Suc (4 * ?n)) ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 1, template_hole 0)))),
                 template_var 0))),
           template_var 1)))),
    ("Sin_Cos_Bounds.sinpoly_lower_nonneg",
     "0 <= ?x ==> sinpoly (4 * Suc ?n) ?x <= sin ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 3, template_hole 2)))),
               template_app (template_hole 1, template_var 0))),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Sin_Cos_Bounds.sinpoly_upper_nonpos",
     "?x <= 0 ==> sin ?x <= sinpoly (4 * Suc ?n) ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 7)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 2, template_hole 1)))),
               template_app (template_hole 0, template_var 0))),
           template_var 1)))),
    ("Sin_Cos_Bounds.sinpoly_upper_nonneg",
     "0 <= ?x ==> sin ?x <= sinpoly (Suc (Suc (4 * ?n))) ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 1, template_hole 0)))),
                   template_var 0)))),
           template_var 1)))),
    ("Sin_Cos_Bounds.sinpoly_lower_nonpos",
     "?x <= 0 ==> sinpoly (Suc (Suc (4 * ?n))) ?x <= sin ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 7)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 2, template_hole 1)))),
                   template_var 0)))),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Sin_Cos_Bounds.cos_Taylor_1_lower_bound",
     "0 <= ?x ==> 1 - ?x\<^sup>2 / 2 <= cos ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_hole 1,
               template_app (template_hole 3, template_hole 2)))),
         template_app (template_hole 0, template_var 0)))),
    ("Sin_Cos_Bounds.cospoly_lower_nonneg",
     "0 <= ?x ==> cospoly (Suc (Suc (Suc (4 * ?n)))) ?x <= cos ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2, template_hole 1)))),
                     template_var 0))))),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Sin_Cos_Bounds.sin_Taylor_1_lower_bound",
     "0 <= ?x ==> ?x - ?x ^ 3 / 6 <= sin ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)))),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 4, template_hole 3))))),
         template_app (template_hole 0, template_var 0)))),
    ("Sin_Cos_Bounds.cospoly_ub_imp_sinpoly_ub",
     "[| 0 <= ?x; 0 < ?k; !!x. 0 <= x ==> cos x <= cospoly (?k - 1) x |]
      ==> sin ?x <= sinpoly ?k ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Sin_Cos_Bounds.sinpoly_ub_imp_cospoly_lb",
     "[| 0 <= ?x; 0 < ?k; !!x. 0 <= x ==> sin x <= sinpoly (?k - 1) x |]
      ==> cospoly ?k ?x <= cos ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Sin_Cos_Bounds.cospoly_lb_imp_sinpoly_lb",
     "[| 0 <= ?x; 0 < ?k; !!x. 0 <= x ==> cospoly (?k - 1) x <= cos x |]
      ==> sinpoly ?k ?x <= sin ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Sin_Cos_Bounds.sinpoly_lb_imp_cospoly_ub",
     "[| 0 <= ?x; 0 < ?k; !!x. 0 <= x ==> sinpoly (?k - 1) x <= sin x |]
      ==> cos ?x <= cospoly ?k ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1))))]:
   (string * thm * template) list
### theory "Draft.Sin_Cos_BoundsMoreTemplates"
### 0.291s elapsed time, 0.405s cpu time, 0.056s GC time
val it = (): unit
