Loading theory "Pure-ex.Guess" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "Sturm_Sequences.Sturm_Library" via "Sturm_Sequences.Misc_Polynomial")
Loading theory "HOL-Computational_Algebra.Fraction_Field" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "Sturm_Sequences.Sturm_Library" via "Sturm_Sequences.Misc_Polynomial" via "HOL-Computational_Algebra.Polynomial_Factorial" via "HOL-Computational_Algebra.Normalized_Fraction")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "HOL-Computational_Algebra.Polynomial" via "HOL-Computational_Algebra.Factorial_Ring" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### ML warning (line 99 of "~~/src/Pure/ex/Guess.thy"):
### Pattern is not exhaustive.
### ML warning (line 150 of "~~/src/Pure/ex/Guess.thy"):
### Matches are not exhaustive.
### ML warning (line 157 of "~~/src/Pure/ex/Guess.thy"):
### Pattern is not exhaustive.
signature GUESS =
  sig
    val guess:
       (binding * typ option * mixfix) list ->
         bool -> Proof.state -> Proof.state
    val guess_cmd:
       (binding * string option * mixfix) list ->
         bool -> Proof.state -> Proof.state
  end
structure Guess: GUESS
### theory "Pure-ex.Guess"
### 0.058s elapsed time, 0.230s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "HOL-Computational_Algebra.Polynomial")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.137s elapsed time, 0.563s cpu time, 0.026s GC time
Loading theory "HOL-Library.More_List" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "HOL-Computational_Algebra.Polynomial")
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Library.More_List"
### 0.177s elapsed time, 0.695s cpu time, 0.058s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fract :: (idom) comm_ring_1
  uminus_fract == uminus :: 'a fract => 'a fract
  one_fract == one_class.one :: 'a fract
  times_fract == times :: 'a fract => 'a fract => 'a fract
  zero_fract == zero_class.zero :: 'a fract
  minus_fract == minus :: 'a fract => 'a fract => 'a fract
  plus_fract == plus :: 'a fract => 'a fract => 'a fract
### theory "HOL-Library.Infinite_Set"
### 0.275s elapsed time, 1.098s cpu time, 0.084s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.480s elapsed time, 1.903s cpu time, 0.155s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "HOL-Computational_Algebra.Polynomial" via "HOL-Computational_Algebra.Factorial_Ring")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.249s elapsed time, 0.967s cpu time, 0.156s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Nat_Bijection"
### 0.348s elapsed time, 1.360s cpu time, 0.156s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs")
instantiation
  fract :: (idom) field
  inverse_fract == inverse :: 'a fract => 'a fract
  divide_fract == divide :: 'a fract => 'a fract => 'a fract
instantiation
  fract :: (linordered_idom) linorder
  less_eq_fract == less_eq :: 'a fract => 'a fract => bool
  less_fract == less :: 'a fract => 'a fract => bool
instantiation
  fract :: (linordered_idom) linordered_field
  sgn_fract == sgn :: 'a fract => 'a fract
  abs_fract == abs :: 'a fract => 'a fract
instantiation
  fract :: (linordered_idom) distrib_lattice
  inf_fract == inf :: 'a fract => 'a fract => 'a fract
  sup_fract == sup :: 'a fract => 'a fract => 'a fract
### theory "HOL-Computational_Algebra.Fraction_Field"
### 0.886s elapsed time, 3.508s cpu time, 0.307s GC time
Loading theory "Draft.Bounds_Lemmas" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds")
### theory "Draft.Bounds_Lemmas"
### 0.242s elapsed time, 0.783s cpu time, 0.507s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### theory "HOL-Library.Stream"
### 1.112s elapsed time, 4.210s cpu time, 0.819s GC time
Loading theory "HOL-Library.Sum_of_Squares" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.080s elapsed time, 4.094s cpu time, 1.072s GC time
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "size <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
### ML warning (line 261 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_abs) has not been referenced.
### ML warning (line 265 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_max) has not been referenced.
### ML warning (line 269 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Value identifier (pth_min) has not been referenced.
### ML warning (line 379 of "~~/src/HOL/Library/Sum_of_Squares/positivstellensatz.ML"):
### Pattern is not exhaustive.
signature FUNC =
  sig
    exception DUP of key
    exception SAME
    exception UNDEF of key
    val apply: 'a table -> key -> 'a
    val applyd: 'a table -> (key -> 'a) -> key -> 'a
    val build: ('a table -> 'a table) -> 'a table
    val choose: 'a table -> key * 'a
    val combine:
       ('a -> 'a -> 'a) -> ('a -> bool) -> 'a table -> 'a table -> 'a table
    val cons_list: key * 'a -> 'a list table -> 'a list table
    val default: key * 'a -> 'a table -> 'a table
    val defined: 'a table -> key -> bool
    val delete: key -> 'a table -> 'a table
    val delete_safe: key -> 'a table -> 'a table
    val dest: 'a table -> (key * 'a) list
    val dest_list: 'a list table -> (key * 'a) list
    val dom: 'a table -> key list
    val empty: 'a table
    val exists: (key * 'a -> bool) -> 'a table -> bool
    val fold: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val fold_rev: (key * 'a -> 'b -> 'b) -> 'a table -> 'b -> 'b
    val forall: (key * 'a -> bool) -> 'a table -> bool
    val get_first: (key * 'a -> 'b option) -> 'a table -> 'b option
    val insert: ('a * 'a -> bool) -> key * 'a -> 'a table -> 'a table
    val insert_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val insert_set: key -> set -> set
    val is_empty: 'a table -> bool
    val is_single: 'a table -> bool
    val join: (key -> 'a * 'a -> 'a) -> 'a table * 'a table -> 'a table
    type key
    val keys: 'a table -> key list
    val lookup: 'a table -> key -> 'a option
    val lookup_key: 'a table -> key -> (key * 'a) option
    val lookup_list: 'a list table -> key -> 'a list
    val make: (key * 'a) list -> 'a table
    val make_list: (key * 'a) list -> 'a list table
    val make_set: key list -> set
    val map: (key -> 'a -> 'b) -> 'a table -> 'b table
    val map_default: key * 'a -> ('a -> 'a) -> 'a table -> 'a table
    val map_entry: key -> ('a -> 'a) -> 'a table -> 'a table
    val max: 'a table -> (key * 'a) option
    val member: ('a * 'b -> bool) -> 'b table -> key * 'a -> bool
    val merge: ('a * 'a -> bool) -> 'a table * 'a table -> 'a table
    val merge_list:
       ('a * 'a -> bool) -> 'a list table * 'a list table -> 'a list table
    val min: 'a table -> (key * 'a) option
    val onefunc: key * 'a -> 'a table
    val remove: ('a * 'b -> bool) -> key * 'a -> 'b table -> 'b table
    val remove_list:
       ('a * 'b -> bool) -> key * 'a -> 'b list table -> 'b list table
    val remove_set: key -> set -> set
    type set = unit table
    type 'a table
    val tryapplyd: 'a table -> key -> 'a -> 'a
    val update: key * 'a -> 'a table -> 'a table
    val update_list:
       ('a * 'a -> bool) -> key * 'a -> 'a list table -> 'a list table
    val update_new: key * 'a -> 'a table -> 'a table
    val updatep: (key * 'a -> bool) -> key * 'a -> 'a table -> 'a table
  end
functor FuncFun (Key: KEY): FUNC
signature REAL_ARITH =
  sig
    type cert_conv = cterm -> thm * pss_tree
    val cterm_of_rat: Rat.rat -> cterm
    val dest_ratconst: cterm -> Rat.rat
    val gen_gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * conv * conv * prover
           -> cert_conv
    val gen_prover_real_arith: Proof.context -> prover -> cert_conv
    val gen_real_arith:
       Proof.context ->
         (Rat.rat -> cterm) * conv * conv * conv * conv * conv * conv *
         conv * prover
           -> cert_conv
    val is_ratconst: cterm -> bool
    datatype positivstellensatz
    =
         Axiom_eq of int
       | Axiom_le of int
       | Axiom_lt of int
       | Eqmul of FuncUtil.poly * positivstellensatz
       | Product of positivstellensatz * positivstellensatz
       | Rational_eq of Rat.rat
       | Rational_le of Rat.rat
       | Rational_lt of Rat.rat
       | Square of FuncUtil.poly
       | Sum of positivstellensatz * positivstellensatz
    type prover =
       tree_choice list ->
         (thm list * thm list * thm list -> positivstellensatz -> thm) ->
           thm list * thm list * thm list -> thm * pss_tree
    datatype pss_tree
    = Branch of pss_tree * pss_tree | Cert of positivstellensatz | Trivial
    val real_linear_prover:
       (thm list * thm list * thm list -> positivstellensatz -> thm) ->
         thm list * thm list * thm list -> thm * pss_tree
    datatype tree_choice = Left | Right
  end
structure FuncUtil:
  sig
    structure Ctermfunc: FUNC
    structure Intfunc: FUNC
    structure Intpairfunc: FUNC
    structure Monomialfunc: FUNC
    structure Ratfunc: FUNC
    structure Symfunc: FUNC
    structure Termfunc: FUNC
    val dest_monomial: 'a Ctermfunc.table -> (cterm * 'a) list
    type monomial = int Ctermfunc.table
    val monomial_ord: int Ctermfunc.table * int Ctermfunc.table -> order
    val monomial_order: int Ctermfunc.table * int Ctermfunc.table -> order
    type poly = Rat.rat Monomialfunc.table
  end
structure RealArith: REAL_ARITH
signature POSITIVSTELLENSATZ_TOOLS =
  sig
    val print_cert: RealArith.pss_tree -> string
    val read_cert: Proof.context -> string -> RealArith.pss_tree
  end
structure Positivstellensatz_Tools: POSITIVSTELLENSATZ_TOOLS
### theory "HOL-Library.Tree"
### 2.431s elapsed time, 8.538s cpu time, 1.942s GC time
Loading theory "Draft.Templates" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.062s elapsed time, 0.190s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Exp_BoundsMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
signature SUM_OF_SQUARES =
  sig
    exception Failure of string
    val debug: bool Config.T
    val debug_message: Proof.context -> (unit -> string) -> unit
    datatype proof_method
    = Certificate of RealArith.pss_tree | Prover of string -> string
    val sos_tac:
       (RealArith.pss_tree -> unit) ->
         proof_method -> Proof.context -> int -> tactic
    val trace: bool Config.T
    val trace_message: Proof.context -> (unit -> string) -> unit
  end
structure Sum_of_Squares: SUM_OF_SQUARES
signature SOS_WRAPPER =
  sig val sos_tac: Proof.context -> string option -> int -> tactic end
structure SOS_Wrapper: SOS_WRAPPER
### theory "HOL-Library.Sum_of_Squares"
### 1.850s elapsed time, 5.920s cpu time, 2.090s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.878s elapsed time, 2.396s cpu time, 1.005s GC time
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.969s elapsed time, 11.976s cpu time, 3.083s GC time
Loading theory "HOL-Computational_Algebra.Factorial_Ring" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "HOL-Computational_Algebra.Polynomial")
class normalization_semidom = algebraic_semidom +
  semidom_divide_unit_factor +
  fixes normalize :: "'a => 'a"
  assumes
    "unit_factor_mult_normalize": "!!a. unit_factor a * normalize a = a"
    and "normalize_0": "normalize (0::'a) = (0::'a)"
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
class factorial_semiring_gcd = factorial_semiring + Gcd +
  assumes "gcd_eq_gcd_factorial": "!!a b. gcd a b = gcd_factorial a b"
    and "lcm_eq_lcm_factorial": "!!a b. lcm a b = lcm_factorial a b"
    and "Gcd_eq_Gcd_factorial": "!!A. Gcd A = Gcd_factorial A"
    and "Lcm_eq_Lcm_factorial": "!!A. Lcm A = Lcm_factorial A"
### theory "HOL-Computational_Algebra.Factorial_Ring"
### 4.222s elapsed time, 4.475s cpu time, 0.289s GC time
Loading theory "HOL-Computational_Algebra.Euclidean_Algorithm" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "Sturm_Sequences.Sturm_Library" via "Sturm_Sequences.Misc_Polynomial" via "HOL-Computational_Algebra.Polynomial_Factorial" via "HOL-Computational_Algebra.Normalized_Fraction")
Loading theory "HOL-Computational_Algebra.Polynomial" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem")
instantiation
  poly :: (zero) zero
  zero_poly == zero_class.zero :: 'a poly
consts
  Poly :: "'a list => 'a poly"
instantiation
  poly :: ({zero,equal}) equal
  equal_poly == equal_class.equal :: 'a poly => 'a poly => bool
instantiation
  poly :: (comm_monoid_add) comm_monoid_add
  plus_poly == plus :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (cancel_comm_monoid_add) cancel_comm_monoid_add
  minus_poly == minus :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (ab_group_add) ab_group_add
  uminus_poly == uminus :: 'a poly => 'a poly
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  poly :: (comm_semiring_0) comm_semiring_0
  times_poly == times :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (comm_semiring_1) comm_semiring_1
  one_poly == one_class.one :: 'a poly
instantiation
  poly :: (linordered_idom) linordered_idom
  sgn_poly == sgn :: 'a poly => 'a poly
  abs_poly == abs :: 'a poly => 'a poly
  less_eq_poly == less_eq :: 'a poly => 'a poly => bool
  less_poly == less :: 'a poly => 'a poly => bool
class euclidean_semiring_gcd = normalization_euclidean_semiring + Gcd +
  assumes "gcd_eucl": "normalization_euclidean_semiring_class.gcd = gcd"
    and "lcm_eucl": "normalization_euclidean_semiring_class.lcm = lcm"
  assumes "Gcd_eucl": "normalization_euclidean_semiring_class.Gcd = Gcd"
    and "Lcm_eucl": "normalization_euclidean_semiring_class.Lcm = Lcm"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "algebraic_int"
  Proving monotonicity ...
instantiation
  poly :: (idom_divide) idom_divide
  divide_poly == divide :: 'a poly => 'a poly => 'a poly
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
instantiation
  poly :: ({idom_divide,semidom_divide_unit_factor}) normalization_semidom
  normalize_poly == normalize :: 'a poly => 'a poly
  unit_factor_poly == unit_factor :: 'a poly => 'a poly
class field_unit_factor = field + unit_factor +
  assumes "unit_factor_field": "unit_factor = id"
Proofs for inductive predicate(s) "eucl_rel_poly"
  Proving monotonicity ...
instantiation
  poly :: (field) semidom_modulo
  modulo_poly == modulo :: 'a poly => 'a poly => 'a poly
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
### theory "HOL-Computational_Algebra.Polynomial"
### 4.475s elapsed time, 9.349s cpu time, 0.752s GC time
### theory "HOL-Computational_Algebra.Euclidean_Algorithm"
### 6.581s elapsed time, 11.608s cpu time, 0.863s GC time
Loading theory "HOL-Computational_Algebra.Normalized_Fraction" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "Sturm_Sequences.Sturm_Library" via "Sturm_Sequences.Misc_Polynomial" via "HOL-Computational_Algebra.Polynomial_Factorial")
Loading theory "HOL-Computational_Algebra.Field_as_Ring" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem")
locale fract_as_normalized_quot
### theory "HOL-Computational_Algebra.Normalized_Fraction"
### 0.342s elapsed time, 0.701s cpu time, 0.000s GC time
Loading theory "HOL-Computational_Algebra.Polynomial_Factorial" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "Sturm_Sequences.Sturm_Library" via "Sturm_Sequences.Misc_Polynomial")
class field = division_ring + idom_divide +
  assumes "field_inverse": "!!a. a ~= (0::'a) ==> inverse a * a = (1::'a)"
  assumes "field_divide_inverse": "!!a b. a / b = a * inverse b"
  assumes "field_inverse_zero": "inverse (0::'a) = (0::'a)"
instantiation
  real ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_real == division_segment :: real => real
  normalize_real == normalize :: real => real
  unit_factor_real == unit_factor :: real => real
  euclidean_size_real == euclidean_size :: real => nat
  modulo_real == modulo :: real => real => real
instantiation
  real :: euclidean_ring_gcd
  Gcd_real == Gcd :: real set => real
  Lcm_real == Lcm :: real set => real
  gcd_real == gcd :: real => real => real
  lcm_real == lcm :: real => real => real
instantiation
  rat ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_rat == division_segment :: rat => rat
  normalize_rat == normalize :: rat => rat
  unit_factor_rat == unit_factor :: rat => rat
  euclidean_size_rat == euclidean_size :: rat => nat
  modulo_rat == modulo :: rat => rat => rat
instantiation
  rat :: euclidean_ring_gcd
  Gcd_rat == Gcd :: rat set => rat
  Lcm_rat == Lcm :: rat set => rat
  gcd_rat == gcd :: rat => rat => rat
  lcm_rat == lcm :: rat => rat => rat
### Cannot skip proof of schematic goal statement
instantiation
  complex ::
    {normalization_euclidean_semiring,unique_euclidean_ring,normalization_semidom_multiplicative}
  division_segment_complex == division_segment :: complex => complex
  normalize_complex == normalize :: complex => complex
  unit_factor_complex == unit_factor :: complex => complex
  euclidean_size_complex == euclidean_size :: complex => nat
  modulo_complex == modulo :: complex => complex => complex
instantiation
  complex :: euclidean_ring_gcd
  Gcd_complex == Gcd :: complex set => complex
  Lcm_complex == Lcm :: complex set => complex
  gcd_complex == gcd :: complex => complex => complex
  lcm_complex == lcm :: complex => complex => complex
### theory "HOL-Computational_Algebra.Field_as_Ring"
### 0.844s elapsed time, 1.791s cpu time, 0.102s GC time
instantiation
  poly :: ({factorial_ring_gcd,semiring_gcd_mult_normalize})
    factorial_ring_gcd
  Gcd_poly == Gcd :: 'a poly set => 'a poly
  Lcm_poly == Lcm :: 'a poly set => 'a poly
  gcd_poly == gcd :: 'a poly => 'a poly => 'a poly
  lcm_poly == lcm :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: ({factorial_ring_gcd,field,semiring_gcd_mult_normalize})
    {normalization_euclidean_semiring,unique_euclidean_ring}
  division_segment_poly == division_segment :: 'a poly => 'a poly
  euclidean_size_poly == euclidean_size :: 'a poly => nat
### theory "HOL-Computational_Algebra.Polynomial_Factorial"
### 0.813s elapsed time, 1.456s cpu time, 0.187s GC time
Loading theory "Sturm_Sequences.Misc_Polynomial" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem" via "Sturm_Sequences.Sturm_Library")
### theory "Sturm_Sequences.Misc_Polynomial"
### 0.310s elapsed time, 0.311s cpu time, 0.000s GC time
Loading theory "Sturm_Sequences.Sturm_Library" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method" via "Sturm_Sequences.Sturm_Theorem")
### theory "Sturm_Sequences.Sturm_Library"
### 0.035s elapsed time, 0.035s cpu time, 0.000s GC time
Loading theory "Sturm_Sequences.Sturm_Theorem" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm" via "Sturm_Sequences.Sturm_Method")
locale quasi_sturm_seq
  fixes ps :: "real poly list"
  assumes "quasi_sturm_seq ps"
locale sturm_seq
  fixes ps :: "real poly list"
    and p :: "real poly"
  assumes "sturm_seq ps p"
### Missing patterns in function definition:
### !!b. split_sign_changes [] b = undefined
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Sturm_Sequences.Sturm_Theorem"
### 0.718s elapsed time, 0.840s cpu time, 0.153s GC time
Loading theory "Sturm_Sequences.Sturm_Method" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds" via "Sturm_Sequences.Sturm")
### ML warning (line 98 of "$AFP/Sturm_Sequences/sturm.ML"):
### Matches are not exhaustive.
signature STURM =
  sig
    val sturm_conv: Proof.context -> conv
    val sturm_tac: Proof.context -> bool -> int -> tactic
  end
structure Sturm: STURM
### theory "Sturm_Sequences.Sturm_Method"
### 0.279s elapsed time, 0.280s cpu time, 0.000s GC time
Loading theory "Sturm_Sequences.Sturm" (required by "Draft.Exp_BoundsMoreTemplates" via "Draft.Exp_Bounds")
### theory "Sturm_Sequences.Sturm"
### 0.035s elapsed time, 0.036s cpu time, 0.000s GC time
Loading theory "Draft.Exp_Bounds" (required by "Draft.Exp_BoundsMoreTemplates")
### theory "Draft.Exp_Bounds"
### 0.629s elapsed time, 0.733s cpu time, 0.140s GC time
Loading theory "Draft.Exp_BoundsMoreTemplates"
val templateLemmas =
   [("Exp_Bounds.exp_cf2_pos", "0 < exp_cf2 ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.exp_cf4_pos", "0 < exp_cf4 ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.exp_cf6_pos", "0 < exp_cf6 ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.numer_cf4_pos", "0 < numer_cf4 ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.numer_cf6_pos", "0 < numer_cf6 ?x",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.numer_cf5_deriv_pos", "0 <= numer_cf5_deriv ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.numer_cf7_deriv_pos", "0 <= numer_cf7_deriv ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.d_delta_lnexp_cf2_nonpos", "diff_delta_lnexp_cf2 ?x <= 0",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Exp_Bounds.d_delta_lnexp_cf4_nonpos", "diff_delta_lnexp_cf4 ?x <= 0",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Exp_Bounds.d_delta_lnexp_cf6_nonpos", "diff_delta_lnexp_cf6 ?x <= 0",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Exp_Bounds.numer_cf5_deriv",
     "(numer_cf5 has_real_derivative numer_cf5_deriv ?x) (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Exp_Bounds.numer_cf7_deriv",
     "(numer_cf7 has_real_derivative numer_cf7_deriv ?x) (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Exp_Bounds.exp_cf2_lower_bound_pos",
     "0 <= ?x ==> exp_cf2 ?x <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf4_lower_bound_pos",
     "0 <= ?x ==> exp_cf4 ?x <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf6_lower_bound_pos",
     "0 <= ?x ==> exp_cf6 ?x <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.ln_exp_cf2_lower_bound_pos",
     "0 <= ?x ==> ln (exp_cf2 ?x) <= ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Exp_Bounds.ln_exp_cf4_lower_bound_pos",
     "0 <= ?x ==> ln (exp_cf4 ?x) <= ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Exp_Bounds.ln_exp_cf6_lower_bound_pos",
     "0 <= ?x ==> ln (exp_cf6 ?x) <= ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Exp_Bounds.ln_exp_cf2_upper_bound_neg",
     "?x <= 0 ==> ?x <= ln (exp_cf2 ?x)",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Exp_Bounds.ln_exp_cf4_upper_bound_neg",
     "?x <= 0 ==> ?x <= ln (exp_cf4 ?x)",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Exp_Bounds.ln_exp_cf6_upper_bound_neg",
     "?x <= 0 ==> ?x <= ln (exp_cf6 ?x)",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Exp_Bounds.exp_cf3_lower_bound_pos",
     "?x <= 0 ==> exp_cf3 ?x <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf5_lower_bound_pos",
     "?x <= 0 ==> exp_cf5 ?x <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf7_lower_bound_pos",
     "?x <= 0 ==> exp_cf7 ?x <= exp ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf2_upper_bound_neg",
     "?x <= 0 ==> exp ?x <= exp_cf2 ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf4_upper_bound_neg",
     "?x <= 0 ==> exp ?x <= exp_cf4 ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf6_upper_bound_neg",
     "?x <= 0 ==> exp ?x <= exp_cf6 ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.numer_cf3_mono",
     "?y <= ?x ==> numer_cf3 ?y <= numer_cf3 ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.numer_cf5_mono",
     "?y <= ?x ==> numer_cf5 ?y <= numer_cf5 ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.numer_cf7_mono",
     "?y <= ?x ==> numer_cf7 ?y <= numer_cf7 ?x",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.d_delta_lnexp_cf2",
     "((%x. ln (exp_cf2 x) - x) has_real_derivative diff_delta_lnexp_cf2 ?x)
       (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Exp_Bounds.d_delta_lnexp_cf4",
     "((%x. ln (exp_cf4 x) - x) has_real_derivative diff_delta_lnexp_cf4 ?x)
       (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Exp_Bounds.d_delta_lnexp_cf6",
     "((%x. ln (exp_cf6 x) - x) has_real_derivative diff_delta_lnexp_cf6 ?x)
       (at ?x)",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Exp_Bounds.ln_exp_cf3_lower_bound_neg",
     "[| ?x <= 0; 0 < numer_cf3 ?x |] ==> ln (exp_cf3 ?x) <= ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 4),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Exp_Bounds.ln_exp_cf5_lower_bound_neg",
     "[| ?x <= 0; 0 < numer_cf5 ?x |] ==> ln (exp_cf5 ?x) <= ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 4),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Exp_Bounds.ln_exp_cf7_lower_bound_neg",
     "[| ?x <= 0; 0 < numer_cf7 ?x |] ==> ln (exp_cf7 ?x) <= ?x",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 4),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Exp_Bounds.ln_exp_cf3_upper_bound_nonneg",
     "[| 0 <= ?x; 0 < numer_cf3 (- ?x) |] ==> ?x <= ln (exp_cf3 ?x)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0),
        template_inequation
         (less_than, template_hole 5,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Exp_Bounds.exp_cf3_upper_bound_pos",
     "[| 0 <= ?x; 0 < numer_cf3 (- ?x) |] ==> exp ?x <= exp_cf3 ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0),
        template_inequation
         (less_than, template_hole 5,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.ln_exp_cf5_upper_bound_nonneg",
     "[| 0 <= ?x; 0 < numer_cf5 (- ?x) |] ==> ?x <= ln (exp_cf5 ?x)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0),
        template_inequation
         (less_than, template_hole 5,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Exp_Bounds.exp_cf5_upper_bound_pos",
     "[| 0 <= ?x; 0 < numer_cf5 (- ?x) |] ==> exp ?x <= exp_cf5 ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0),
        template_inequation
         (less_than, template_hole 5,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.ln_exp_cf7_upper_bound_nonneg",
     "[| 0 <= ?x; 0 < numer_cf7 (- ?x) |] ==> ?x <= ln (exp_cf7 ?x)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0),
        template_inequation
         (less_than, template_hole 5,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Exp_Bounds.exp_cf7_upper_bound_pos",
     "[| 0 <= ?x; 0 < numer_cf7 (- ?x) |] ==> exp ?x <= exp_cf7 ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 0),
        template_inequation
         (less_than, template_hole 5,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf3_pos",
     "[| 0 < numer_cf3 ?x; 0 < numer_cf3 (- ?x) |] ==> 0 < exp_cf3 ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0)),
        template_inequation
         (less_than, template_hole 3,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_than, template_hole 3,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.d_delta_lnexp_cf3_nonneg",
     "[| 0 < numer_cf3 ?x; 0 < numer_cf3 (- ?x) |]
      ==> 0 <= diff_delta_lnexp_cf3 ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_hole 4,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf5_pos",
     "[| 0 < numer_cf5 ?x; 0 < numer_cf5 (- ?x) |] ==> 0 < exp_cf5 ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0)),
        template_inequation
         (less_than, template_hole 3,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_than, template_hole 3,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.d_delta_lnexp_cf5_nonneg",
     "[| 0 < numer_cf5 ?x; 0 < numer_cf5 (- ?x) |]
      ==> 0 <= diff_delta_lnexp_cf5 ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_hole 4,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_cf7_pos",
     "[| 0 < numer_cf7 ?x; 0 < numer_cf7 (- ?x) |] ==> 0 < exp_cf7 ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 2, template_var 0)),
        template_inequation
         (less_than, template_hole 3,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_inequation
        (less_than, template_hole 3,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.d_delta_lnexp_cf7_nonneg",
     "[| 0 < numer_cf7 ?x; 0 < numer_cf7 (- ?x) |]
      ==> 0 <= diff_delta_lnexp_cf7 ?x",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)))],
       template_inequation
        (less_equals, template_hole 4,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.denom_cf2_pos", "0 < ?x\<^sup>2 - 6 * ?x + 12",
     template_inequation
      (less_than, template_hole 9,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_hole 3)))),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_hole 3))))))),
    ("Exp_Bounds.numer_cf2_pos", "0 < ?x\<^sup>2 + 6 * ?x + 12",
     template_inequation
      (less_than, template_hole 8,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_hole 3)))),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_hole 3))))))),
    ("Exp_Bounds.exp_lower_taylor_even",
     "even ?n ==> (SUM m<?n. ?x ^ m / fact m) <= exp ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7))),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.d_delta_lnexp_cf3",
     "[| 0 < numer_cf3 ?x; 0 < numer_cf3 (- ?x) |]
      ==> ((%x. ln (exp_cf3 x) - x) has_real_derivative
           diff_delta_lnexp_cf3 ?x)
           (at ?x)",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 0)),
        template_inequation
         (less_than, template_hole 9,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Exp_Bounds.d_delta_lnexp_cf5",
     "[| 0 < numer_cf5 ?x; 0 < numer_cf5 (- ?x) |]
      ==> ((%x. ln (exp_cf5 x) - x) has_real_derivative
           diff_delta_lnexp_cf5 ?x)
           (at ?x)",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 0)),
        template_inequation
         (less_than, template_hole 9,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Exp_Bounds.d_delta_lnexp_cf7",
     "[| 0 < numer_cf7 ?x; 0 < numer_cf7 (- ?x) |]
      ==> ((%x. ln (exp_cf7 x) - x) has_real_derivative
           diff_delta_lnexp_cf7 ?x)
           (at ?x)",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 0)),
        template_inequation
         (less_than, template_hole 9,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Exp_Bounds.numer_cf3_pos",
     "- (464 / 10\<^sup>2) <= ?x ==> 0 < numer_cf3 ?x",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 6,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 6,
                                template_app
                                 (template_hole 6,
                                  template_hole 5)))))))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app (template_hole 7, template_hole 5))))),
                template_app
                 (template_hole 3,
                  template_app (template_hole 7, template_hole 5))))),
          template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_lower_taylor_2",
     "1 + ?x + 1 / 2 * ?x\<^sup>2 + 1 / 6 * ?x ^ 3 <= exp ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 5, template_hole 4)))))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 9),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_hole 4))))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 4))))),
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.numer_cf5_pos",
     "- (7293 / 10 ^ 3) <= ?x ==> 0 < numer_cf5 ?x",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 6,
                                  template_app
                                   (template_hole 6,
                                    template_app
                                     (template_hole 6,
template_app
 (template_hole 7,
  template_app (template_hole 7, template_hole 5)))))))))))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_hole 5))))),
                template_app
                 (template_hole 3,
                  template_app (template_hole 7, template_hole 5))))),
          template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.numer_cf7_pos",
     "- (9943 / 10 ^ 3) <= ?x ==> 0 < numer_cf7 ?x",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_hole 6,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6,
                              template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 7,
                                  template_app
                                   (template_hole 6,
                                    template_app
                                     (template_hole 7,
template_app
 (template_hole 7,
  template_app
   (template_hole 6,
    template_app (template_hole 6, template_hole 5))))))))))))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_hole 5))))),
                template_app
                 (template_hole 3,
                  template_app (template_hole 7, template_hole 5))))),
          template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Exp_Bounds.exp_upper_taylor_even",
     "[| even ?n; 0 < (SUM m<?n. (- ?x) ^ m / fact m) |]
      ==> exp ?x <= inverse (SUM m<?n. (- ?x) ^ m / fact m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_hole 11))),
              template_var 1)
            ),
        template_inequation
         (less_than, template_hole 9,
          template_app
           (template_app (template_hole 8, t_empty),
            template_app (template_hole 3, template_var 1)))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 8, t_empty),
             template_app (template_hole 3, template_var 1)))))),
    ("Exp_Bounds.exp_lower_taylor_3",
     "1 + ?x + 1 / 2 * ?x\<^sup>2 + 1 / 6 * ?x ^ 3 + 1 / 24 * ?x ^ 4 +
      1 / 120 * ?x ^ 5
      <= exp ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_hole 9),
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4)))),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 5, template_hole 4)))))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 9),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 1, template_hole 4))))),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 4)))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 1, template_hole 4))))))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 9),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1, template_hole 4))))))))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 5, template_hole 4)))))),
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.exp_upper_bound_case_3",
     "?x <= 319 / 10\<^sup>2 ==>
      exp ?x
      <= 2304 / (- (?x ^ 3) + 6 * ?x\<^sup>2 - 24 * ?x + 48)\<^sup>2",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 8, template_hole 7)))))))))),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 10,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 7))))),
              template_app
               (template_hole 5,
                template_app (template_hole 8, template_hole 7)))))],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_hole 7))))))))))))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 6, template_var 0),
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 9, template_hole 7))))),
                         template_app
                          (template_app
                            (template_hole 0,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 9, template_hole 7)))),
                           template_app
                            (template_app (template_hole 6, template_var 0),
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 8, template_hole 7)))))),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 9, template_hole 7)))))),
                       template_var 0))),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 9, template_hole 7)))))))),
             template_app
              (template_hole 5,
               template_app (template_hole 8, template_hole 7))))))),
    ("Exp_Bounds.exp_lower_taylor_3_cubed",
     "(1 + ?x / 3 + 1 / 2 * (?x / 3)\<^sup>2 + 1 / 6 * (?x / 3) ^ 3 +
       1 / 24 * (?x / 3) ^ 4 +
       1 / 120 * (?x / 3) ^ 5) ^
      3
      <= exp ?x",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_app
                              (template_app
                                (template_hole 7, template_var 0),
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_hole 4))))),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 7, template_hole 8),
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 2, template_hole 4)))),
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app
                                (template_app
                                  (template_hole 7, template_var 0),
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 5, template_hole 4)))),
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 2, template_hole 4)))))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 7, template_hole 8),
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 5, template_hole 4))))),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app (template_hole 7, template_var 0),
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5, template_hole 4)))),
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 5, template_hole 4)))))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 7, template_hole 8),
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 5, template_hole 4))))))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5, template_hole 4)))),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2, template_hole 4))))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_hole 8),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5, template_hole 4))))))))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4)))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 2, template_hole 4))))))),
         template_app
          (template_hole 1,
           template_app (template_hole 5, template_hole 4))),
       template_app (template_hole 0, template_var 0))),
    ("Exp_Bounds.exp_upper_bound_case_5",
     "?x <= 636 / 10\<^sup>2 ==>
      exp ?x
      <= 21743271936 / (- (?x ^ 3) + 12 * ?x\<^sup>2 - 96 * ?x + 384) ^ 4",
     template_implication
      ([template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 9,
                                  template_hole 7))))))))))),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 10,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app (template_hole 9, template_hole 7))))),
              template_app
               (template_hole 5,
                template_app (template_hole 9, template_hole 7)))))],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 9,
     template_app
      (template_hole 9,
       template_app
        (template_hole 9,
         template_app
          (template_hole 9,
           template_app
            (template_hole 9,
             template_app
              (template_hole 9,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 8,
     template_app
      (template_hole 9, template_hole 7)))))))))))))))))))))))))))))))))))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 6, template_var 0),
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 8, template_hole 7))))),
                         template_app
                          (template_app
                            (template_hole 0,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 8, template_hole 7))))),
                           template_app
                            (template_app (template_hole 6, template_var 0),
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 9, template_hole 7)))))),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 8, template_hole 7)))))))),
                       template_var 0))),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8,
                                   template_hole 7))))))))))),
             template_app
              (template_hole 5,
               template_app
                (template_hole 9,
                 template_app (template_hole 9, template_hole 7))))))))]:
   (string * thm * template) list
### theory "Draft.Exp_BoundsMoreTemplates"
### 0.542s elapsed time, 0.790s cpu time, 0.129s GC time
val it = (): unit
