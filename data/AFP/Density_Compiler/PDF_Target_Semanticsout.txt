Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PDF_Target_SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.PDF_Target_SemanticsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Density_Predicates" (required by "Draft.PDF_Target_SemanticsTemplates" via "Draft.PDF_Target_Semantics" via "Draft.PDF_Semantics" via "Draft.PDF_Values")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.071s elapsed time, 0.259s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.106s elapsed time, 0.327s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PDF_Target_SemanticsTemplates" via "Draft.ExtrEqs")
### theory "Draft.Density_Predicates"
### 0.324s elapsed time, 0.781s cpu time, 0.043s GC time
Loading theory "Draft.PDF_Values" (required by "Draft.PDF_Target_SemanticsTemplates" via "Draft.PDF_Target_Semantics" via "Draft.PDF_Semantics")
### theory "HOL-Library.BigO"
### 0.602s elapsed time, 1.238s cpu time, 0.093s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PDF_Target_SemanticsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.535s elapsed time, 1.112s cpu time, 0.124s GC time
### No equation for constructor "UnitVal"
### No equation for constructor "BoolVal"
### No equation for constructor "IntVal"
### No equation for constructor "RealVal"
consts
  extract_pair' :: "(val => 'a) => (val => 'b) => val => 'a * 'b"
Found termination order: "size <*mlex*> {}"
consts
  stock_measure :: "pdf_type => val measure"
### theory "Draft.PDF_Values"
### 1.726s elapsed time, 2.766s cpu time, 0.257s GC time
Loading theory "Draft.PDF_Semantics" (required by "Draft.PDF_Target_SemanticsTemplates" via "Draft.PDF_Target_Semantics")
class expr = type +
  fixes free_vars :: "'a => nat set"
instantiation
  expr :: expr
  free_vars_expr == free_vars :: expr => nat set
consts
  free_vars_expr :: "expr => nat set"
consts
  free_vars_expr_code :: "expr => nat set"
consts
  dist_param_type :: "pdf_dist => pdf_type"
consts
  dist_result_type :: "pdf_dist => pdf_type"
consts
  dist_measure :: "pdf_dist => val => val measure"
consts
  dist_dens :: "pdf_dist => val => val => ennreal"
consts
  op_type :: "pdf_operator => pdf_type => pdf_type option"
### Ambiguous input (line 414 of "$AFP/Density_Compiler/PDF_Semantics.thy") produces 2 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>expr_typing" ("_position" \<Gamma>) ("_position" e1)
###       ("_position" t1)))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing"
###         ("\<^const>PDF_Semantics.de_bruijn_insert" ("_position" t1)
###           ("_position" \<Gamma>))
###         ("_position" e2) ("_position" t2)))
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing" ("_position" \<Gamma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))
###         ("_position" t2)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>expr_typing" ("_position" \<Gamma>) ("_position" e1)
###       ("_position" t1)))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing"
###         ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###           ("_position" t1) ("_position" \<Gamma>))
###         ("_position" e2) ("_position" t2)))
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing" ("_position" \<Gamma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))
###         ("_position" t2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "expr_typing"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  countable_type :: "pdf_type => bool"
Found termination order: "{}"
### Ambiguous input (line 607 of "$AFP/Density_Compiler/PDF_Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem)
###       ("_cargs" ("_position" \<sigma>)
###         ("\<^const>PDF_Semantics.expr.LetVar" ("_position" e1)
###           ("_position" e2))))
###     ("_do_block"
###       ("_do_cons"
###         ("_do_bind" ("_position" v)
###           ("_applC" ("_position" expr_sem)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1))))
###         ("_do_final"
###           ("_applC" ("_position" expr_sem)
###             ("_cargs"
###               ("\<^const>PDF_Semantics.de_bruijn_insert" ("_position" v)
###                 ("_position" \<sigma>))
###               ("_position" e2))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem)
###       ("_cargs" ("_position" \<sigma>)
###         ("\<^const>PDF_Semantics.expr.LetVar" ("_position" e1)
###           ("_position" e2))))
###     ("_do_block"
###       ("_do_cons"
###         ("_do_bind" ("_position" v)
###           ("_applC" ("_position" expr_sem)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1))))
###         ("_do_final"
###           ("_applC" ("_position" expr_sem)
###             ("_cargs"
###               ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###                 ("_position" v) ("_position" \<sigma>))
###               ("_position" e2))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  expr_sem :: "(nat => val) => expr => val measure"
Found termination order: "size <*mlex*> {}"
### Ambiguous input (line 965 of "$AFP/Density_Compiler/PDF_Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs" ("_position" \<sigma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))))
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs"
###         ("\<^const>PDF_Semantics.de_bruijn_insert"
###           ("_applC" ("_position" expr_sem_rf)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1)))
###           ("_position" \<sigma>))
###         ("_position" e2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs" ("_position" \<sigma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))))
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs"
###         ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###           ("_applC" ("_position" expr_sem_rf)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1)))
###           ("_position" \<sigma>))
###         ("_position" e2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  expr_sem_rf :: "(nat => val) => expr => val"
### theory "Draft.PDF_Semantics"
### 4.456s elapsed time, 5.521s cpu time, 1.438s GC time
Loading theory "Draft.PDF_Target_Semantics" (required by "Draft.PDF_Target_SemanticsTemplates")
instantiation
  cexpr :: expr
  free_vars_cexpr == free_vars :: cexpr => nat set
consts
  free_vars_cexpr :: "cexpr => nat set"
### Ambiguous input (line 86 of "$AFP/Density_Compiler/PDF_Target_Semantics.thy") produces 2 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>cexpr_typing"
###       ("\<^const>PDF_Semantics.de_bruijn_insert" ("_position" t)
###         ("_position" \<Gamma>))
###       ("_position" e) ("_position" REAL)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>cexpr_typing" ("_position" \<Gamma>)
###       ("\<^const>PDF_Target_Semantics.cexpr.CIntegral" ("_position" e)
###         ("_position" t))
###       ("_position" REAL))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>cexpr_typing"
###       ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt" ("_position" t)
###         ("_position" \<Gamma>))
###       ("_position" e) ("_position" REAL)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>cexpr_typing" ("_position" \<Gamma>)
###       ("\<^const>PDF_Target_Semantics.cexpr.CIntegral" ("_position" e)
###         ("_position" t))
###       ("_position" REAL))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "cexpr_typing"
  Proving monotonicity ...
consts
  cexpr_type :: "(nat => pdf_type) => cexpr => pdf_type option"
### Ambiguous input (line 215 of "$AFP/Density_Compiler/PDF_Target_Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" cexpr_sem)
###       ("_cargs" ("_position" \<sigma>)
###         ("\<^const>PDF_Target_Semantics.cexpr.CIntegral" ("_position" e)
###           ("_position" t))))
###     ("_applC" ("_position" RealVal)
###       ("_lebesgue_integral" ("_position" x)
###         ("_applC" ("_position" extract_real)
###           ("_applC" ("_position" cexpr_sem)
###             ("_cargs"
###               ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###                 ("_position" x) ("_position" \<sigma>))
###               ("_position" e))))
###         ("_applC" ("_position" stock_measure) ("_position" t))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" cexpr_sem)
###       ("_cargs" ("_position" \<sigma>)
###         ("\<^const>PDF_Target_Semantics.cexpr.CIntegral" ("_position" e)
###           ("_position" t))))
###     ("_applC" ("_position" RealVal)
###       ("_lebesgue_integral" ("_position" x)
###         ("_applC" ("_position" extract_real)
###           ("_applC" ("_position" cexpr_sem)
###             ("_cargs"
###               ("\<^const>PDF_Semantics.de_bruijn_insert" ("_position" x)
###                 ("_position" \<sigma>))
###               ("_position" e))))
###         ("_applC" ("_position" stock_measure) ("_position" t))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  cexpr_sem :: "(nat => val) => cexpr => val"
consts
  map_vars :: "(nat => nat) => cexpr => cexpr"
consts
  cexpr_subst :: "nat => cexpr => cexpr => cexpr"
consts
  cexpr_comp_aux :: "nat => cexpr => cexpr => cexpr"
consts
  cexpr_subst_val_aux :: "nat => cexpr => val => cexpr"
consts
  expr_rf_to_cexpr :: "expr => cexpr"
consts
  dist_dens_cexpr :: "pdf_dist => cexpr => cexpr => cexpr"
### theory "Draft.PDF_Target_Semantics"
### 1.599s elapsed time, 1.718s cpu time, 0.162s GC time
Loading theory "Draft.PDF_Target_SemanticsTemplates"
val templateLemmas =
   [("PDF_Target_Semantics.cexpr_equiv_commute",
     "cexpr_equiv ?e1.0 ?e2.0 = cexpr_equiv ?e2.0 ?e1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("PDF_Target_Semantics.cet_pi",
     "?\<Gamma> \<turnstile>\<^sub>c \<pi>\<^sub>c : REAL",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_hole 1))),
           template_hole 0)
         )),
    ("PDF_Target_Semantics.insert_var_0",
     "insert_var 0 ?f ?x = case_nat ?x ?f",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("PDF_Target_Semantics.free_vars_cexpr_subst_val",
     "free_vars (cexpr_subst_val ?e ?v) = Suc -` free_vars ?e",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 1)))),
    ("PDF_Target_Semantics.free_vars_map_vars",
     "free_vars (map_vars ?f ?e) = ?f ` free_vars ?e",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("PDF_Target_Semantics.val_type_eq_BOOL",
     "(val_type ?x = BOOL) = (?x : range BoolVal)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("PDF_Target_Semantics.val_type_eq_INTEG",
     "(val_type ?x = INTEG) = (?x : range IntVal)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("PDF_Target_Semantics.cexpr_subst_val_aux_eq_cexpr_subst",
     "cexpr_subst_val_aux ?x ?e ?v = cexpr_subst ?x (CVal ?v) ?e",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("PDF_Target_Semantics.free_vars_cexpr_comp'",
     "free_vars (?e \<circ>\<^sub>c ?e') <= free_vars ?e Un free_vars ?e'",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PDF_Target_Semantics.free_vars_expr_rf_to_cexpr",
     "randomfree ?e ==> free_vars (expr_rf_to_cexpr ?e) <= free_vars ?e",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("PDF_Target_Semantics.free_vars_integrate_vars",
     "free_vars (integrate_vars ?\<Gamma> ?vs ?e) = free_vars ?e - set ?vs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("PDF_Target_Semantics.cexpr_typing_code",
     "(?\<Gamma> \<turnstile>\<^sub>c ?e : ?t) =
      (cexpr_type ?\<Gamma> ?e = Some ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PDF_Target_Semantics.cexpr_type_Some_iff",
     "(cexpr_type ?\<Gamma> ?e = Some ?t) =
      (?\<Gamma> \<turnstile>\<^sub>c ?e : ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("PDF_Target_Semantics.cexpr_sem_cexpr_subst_val",
     "cexpr_sem ?\<sigma> (cexpr_subst_val ?e ?v) =
      cexpr_sem (case_nat ?v ?\<sigma>) ?e",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("PDF_Target_Semantics.cexpr_sem_map_vars",
     "cexpr_sem ?\<sigma> (map_vars ?f ?e) = cexpr_sem (?\<sigma> o ?f) ?e",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("PDF_Target_Semantics.free_vars_dist_dens_cexpr",
     "free_vars (dist_dens_cexpr ?dst ?e1.0 ?e2.0)
      <= free_vars ?e1.0 Un free_vars ?e2.0",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("PDF_Target_Semantics.cet_val'",
     "?t = val_type ?v ==> ?\<Gamma> \<turnstile>\<^sub>c CVal ?v : ?t",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)),
             template_var 2)
           ))),
    ("PDF_Target_Semantics.cet_var'",
     "?t = ?\<Gamma> ?x ==> ?\<Gamma> \<turnstile>\<^sub>c CVar ?x : ?t",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_var 2)
           ))),
    ("PDF_Target_Semantics.cdens_ctxt_invarD",
     "cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta> ==>
      distinct (?vs @ ?vs')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("PDF_Target_Semantics.cdens_ctxt_invarD",
     "cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta> ==>
      ?\<Gamma> \<turnstile>\<^sub>c ?\<delta> : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.free_vars_integrate_var",
     "free_vars (integrate_var ?\<Gamma> ?v ?e) = free_vars ?e - {?v}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("PDF_Target_Semantics.cexpr_sem_expr_rf_to_cexpr",
     "randomfree ?e ==>
      cexpr_sem ?\<sigma> (expr_rf_to_cexpr ?e) = expr_sem_rf ?\<sigma> ?e",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("PDF_Target_Semantics.cet_not",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : BOOL ==>
      ?\<Gamma> \<turnstile>\<^sub>c \<not>\<^sub>c ?e : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.cet_minus_int",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : INTEG ==>
      ?\<Gamma> \<turnstile>\<^sub>c -\<^sub>c ?e : INTEG",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.cet_exp",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c exp\<^sub>c ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.cet_inverse",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c inverse\<^sub>c ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.cet_ln",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c ln\<^sub>c ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.cet_minus_real",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c -\<^sub>c ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.cet_sqrt",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c sqrt\<^sub>c ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_hole 2)
           ))),
    ("PDF_Target_Semantics.free_vars_cexpr_subst",
     "free_vars (cexpr_subst 0 ?e ?e')
      <= Suc -` free_vars ?e' Un free_vars ?e",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 5, template_var 0))),
         template_app (template_hole 5, template_var 1)))),
    ("PDF_Target_Semantics.cet_cast_real",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : BOOL ==>
      ?\<Gamma> \<turnstile>\<^sub>c \<langle>?e\<rangle>\<^sub>c : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.cet_cast_real_int",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : INTEG ==>
      ?\<Gamma> \<turnstile>\<^sub>c \<langle>?e\<rangle>\<^sub>c : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_integrate_var",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c integrate_var ?\<Gamma> ?v ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_integrate_vars",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : REAL ==>
      ?\<Gamma> \<turnstile>\<^sub>c
       integrate_vars ?\<Gamma> ?vs ?e : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("PDF_Target_Semantics.cexpr_sem_cexpr_comp",
     "cexpr_sem ?\<sigma> (?f \<circ>\<^sub>c ?g) =
      cexpr_sem (?\<sigma>(0 := cexpr_sem ?\<sigma> ?g)) ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_var 1))),
    ("PDF_Target_Semantics.cexpr_sem_cexpr_subst",
     "cexpr_sem ?\<sigma> (cexpr_subst 0 ?e ?e') =
      cexpr_sem (case_nat (cexpr_sem ?\<sigma> ?e) ?\<sigma>) ?e'",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("PDF_Target_Semantics.free_vars_cexpr_comp",
     "free_vars (?e \<circ>\<^sub>c ?e')
      <= free_vars ?e - {0} Un free_vars ?e'",
     template_inequation
      (less_equals,
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))),
         template_app (template_hole 6, template_var 0)))),
    ("PDF_Target_Semantics.cdens_ctxt_invarD",
     "cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta> ==>
      free_vars ?\<delta> <= set (?vs @ ?vs')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2))))),
    ("PDF_Target_Semantics.cdens_ctxt_invarD",
     "cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta> ==>
      subprob_cexpr (set ?vs) (set ?vs') ?\<Gamma> ?\<delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)),
                 template_app (template_hole 0, template_var 2)),
               template_var 1),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cet_fst",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : PRODUCT ?t ?t' ==>
      ?\<Gamma> \<turnstile>\<^sub>c fst\<^sub>c ?e : ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.cet_snd",
     "?\<Gamma> \<turnstile>\<^sub>c ?e : PRODUCT ?t ?t' ==>
      ?\<Gamma> \<turnstile>\<^sub>c snd\<^sub>c ?e : ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_map_vars",
     "?\<Gamma> o ?f \<turnstile>\<^sub>c ?e : ?t ==>
      ?\<Gamma> \<turnstile>\<^sub>c map_vars ?f ?e : ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.eval_cexpr_comp",
     "eval_cexpr (?f \<circ>\<^sub>c ?g) ?\<sigma> ?x =
      eval_cexpr ?f ?\<sigma> (cexpr_sem (case_nat ?x ?\<sigma>) ?g)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("PDF_Target_Semantics.cexpr_sem_cexpr_comp_aux",
     "cexpr_sem ?\<sigma> (cexpr_comp_aux ?x ?e ?e') =
      cexpr_sem (?\<sigma>(?x := cexpr_sem ?\<sigma> ?e)) ?e'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1))),
         template_var 0))),
    ("PDF_Target_Semantics.cexpr_sem_cexpr_subst_aux",
     "cexpr_sem ?\<sigma> (cexpr_subst ?x ?e ?e') =
      cexpr_sem (insert_var ?x ?\<sigma> (cexpr_sem ?\<sigma> ?e)) ?e'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1))),
         template_var 0))),
    ("PDF_Target_Semantics.free_vars_cexpr_comp_aux",
     "free_vars (cexpr_comp_aux ?x ?e ?e')
      <= free_vars ?e' - {?x} Un free_vars ?e",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))),
         template_app (template_hole 5, template_var 1)))),
    ("PDF_Target_Semantics.cdens_ctxt_invarD",
     "cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta> ==>
      nonneg_cexpr (set ?vs Un set ?vs') ?\<Gamma> ?\<delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_app (template_hole 0, template_var 2))),
               template_var 1),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_int",
     "nonneg_cexpr (shift_var_set ?V) (case_nat ?t ?\<Gamma>) ?e ==>
      nonneg_cexpr ?V ?\<Gamma> (\<integral>\<^sub>c ?e \<partial>?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 3)),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("PDF_Target_Semantics.cexpr_typing_expr_rf_to_cexpr",
     "[| ?\<Gamma> \<turnstile> ?e : ?t; randomfree ?e |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c expr_rf_to_cexpr ?e : ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cdens_ctxt_invar_empty",
     "cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta> ==>
      cdens_ctxt_invar [] (?vs @ ?vs') ?\<Gamma> (CReal 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2)),
               template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_map_vars",
     "nonneg_cexpr (?f -` ?V) (?\<Gamma> o ?f) ?e ==>
      nonneg_cexpr ?V ?\<Gamma> (map_vars ?f ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("PDF_Target_Semantics.free_vars_cexpr_subst_val_aux",
     "free_vars (cexpr_subst_val_aux ?x ?e ?v) =
      (%y. if ?x <= y then Suc y else y) -` free_vars ?e",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 5, template_var 1)))),
    ("PDF_Target_Semantics.cexpr_typing_valE",
     "[| ?\<Gamma> \<turnstile>\<^sub>c CVal ?v : ?t;
         ?t = val_type ?v ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PDF_Target_Semantics.cexpr_typing_varE",
     "[| ?\<Gamma> \<turnstile>\<^sub>c CVar ?x : ?t;
         ?t = ?\<Gamma> ?x ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_var 3, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PDF_Target_Semantics.nonneg_indicator",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e : BOOL; free_vars ?e <= ?V |]
      ==> nonneg_cexpr ?V ?\<Gamma> (\<langle>?e\<rangle>\<^sub>c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_hole 6)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)),
               template_var 1))
           ))),
    ("PDF_Target_Semantics.cexpr_sem_integrate_var'",
     "extract_real (cexpr_sem ?\<sigma> (integrate_var ?\<Gamma> ?v ?e)) =
      LINT x|stock_measure (?\<Gamma> ?v).
         extract_real (cexpr_sem (?\<sigma>(?v := x)) ?e)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1))),
         t_empty))),
    ("PDF_Target_Semantics.cexpr_sem_integrate_var",
     "cexpr_sem ?\<sigma> (integrate_var ?\<Gamma> ?v ?e) =
      RealVal
       (LINT x|stock_measure (?\<Gamma> ?v).
           extract_real (cexpr_sem (?\<sigma>(?v := x)) ?e))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_var 2, template_var 1))),
           t_empty)))),
    ("PDF_Target_Semantics.cet_and",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : BOOL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : BOOL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 \<and>\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("PDF_Target_Semantics.cet_or",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : BOOL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : BOOL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 \<or>\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("PDF_Target_Semantics.cet_add_int",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : INTEG;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : INTEG |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 +\<^sub>c ?e2.0 : INTEG",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("PDF_Target_Semantics.cet_less_int",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : INTEG;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : INTEG |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 <\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.cet_mult_int",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : INTEG;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : INTEG |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 *\<^sub>c ?e2.0 : INTEG",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("PDF_Target_Semantics.cet_pow_real",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : INTEG |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 ^\<^sub>c ?e2.0 : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 4)
           ))),
    ("PDF_Target_Semantics.cet_add_real",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 +\<^sub>c ?e2.0 : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("PDF_Target_Semantics.cet_less_real",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 <\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.cet_mult_real",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 *\<^sub>c ?e2.0 : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 3)
           ))),
    ("PDF_Target_Semantics.cet_eq",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : ?t;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : ?t |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 =\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.nonneg_cexprD",
     "[| nonneg_cexpr ?V ?\<Gamma> ?e;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> 0 <= extract_real (cexpr_sem ?\<sigma> ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)))
            )],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("PDF_Target_Semantics.cexpr_typing_subst_val",
     "[| case_nat ?t ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t';
         val_type ?v = ?t |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c cexpr_subst_val ?e ?v : ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 1, template_var 0), template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.free_vars_cexpr_subst_aux",
     "free_vars (cexpr_subst ?x ?e ?e')
      <= (%y. if ?x <= y then y + 1 else y) -` free_vars ?e' Un
         free_vars ?e",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 7, template_var 0))),
         template_app (template_hole 7, template_var 1)))),
    ("PDF_Target_Semantics.cexpr_typing_subst",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t;
         case_nat ?t ?\<Gamma> \<turnstile>\<^sub>c ?e' : ?t' |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c cexpr_subst 0 ?e ?e' : ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_dist_dens_cexpr",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : dist_param_type ?dst;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : dist_result_type ?dst |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c
           dist_dens_cexpr ?dst ?e1.0 ?e2.0 : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_subst_val",
     "[| nonneg_cexpr (shift_var_set ?V) (case_nat ?t ?\<Gamma>) ?e;
         val_type ?v = ?t |]
      ==> nonneg_cexpr ?V ?\<Gamma> (cexpr_subst_val ?e ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 4)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 1, template_var 0), template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 4),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_subset",
     "[| nonneg_cexpr ?V ?\<Gamma> ?e; ?V <= ?V'; free_vars ?e <= ?V |]
      ==> nonneg_cexpr ?V' ?\<Gamma> ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 1),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.cexpr_sem_eq_on_vars",
     "(!!x. x : free_vars ?e ==> ?\<sigma> x = ?\<sigma>' x) ==>
      cexpr_sem ?\<sigma> ?e = cexpr_sem ?\<sigma>' ?e",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("PDF_Target_Semantics.nonneg_cexprI",
     "(!!\<sigma>.
          \<sigma> : space (state_measure ?V ?\<Gamma>) ==>
          0 <= extract_real (cexpr_sem \<sigma> ?e)) ==>
      nonneg_cexpr ?V ?\<Gamma> ?e",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cet_sub_int",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : INTEG;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : INTEG |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 -\<^sub>c ?e2.0 : INTEG",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 0)))),
             template_hole 4)
           ))),
    ("PDF_Target_Semantics.cet_sub_real",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 -\<^sub>c ?e2.0 : REAL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 0)))),
             template_hole 4)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_cexpr_comp_aux",
     "[| ?\<Gamma>(?x := ?t1.0) \<turnstile>\<^sub>c ?e' : ?t2.0;
         ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t1.0 |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c cexpr_comp_aux ?x ?e ?e' : ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_subst_aux",
     "[| insert_var ?x ?\<Gamma> ?t \<turnstile>\<^sub>c ?e' : ?t';
         ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c cexpr_subst ?x ?e ?e' : ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.measurable_cexpr_sem",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t; free_vars ?e <= ?V |]
      ==> (%\<sigma>. cexpr_sem \<sigma> ?e)
          : state_measure ?V ?\<Gamma> \<rightarrow>\<^sub>M
            stock_measure ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("PDF_Target_Semantics.cexpr_typing_cong",
     "(!!x. x : free_vars ?e ==> ?\<Gamma> x = ?\<Gamma>' x) ==>
      (?\<Gamma> \<turnstile>\<^sub>c ?e : ?t) =
      (?\<Gamma>' \<turnstile>\<^sub>c ?e : ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("PDF_Target_Semantics.cexpr_typing_cexpr_comp",
     "[| case_nat ?t1.0 ?\<Gamma> \<turnstile>\<^sub>c ?g : ?t2.0;
         case_nat ?t2.0 ?\<Gamma> \<turnstile>\<^sub>c ?f : ?t3.0 |]
      ==> case_nat ?t1.0 ?\<Gamma> \<turnstile>\<^sub>c
           ?f \<circ>\<^sub>c ?g : ?t3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 4)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_cong'",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t;
         !!x. x : free_vars ?e ==> ?\<Gamma> x = ?\<Gamma>' x |]
      ==> ?\<Gamma>' \<turnstile>\<^sub>c ?e : ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_intE",
     "[| ?\<Gamma> \<turnstile>\<^sub>c
          \<integral>\<^sub>c ?e \<partial>?t : ?t';
         [| ?t' = REAL;
            case_nat ?t ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 4)),
                     template_var 3),
                   template_hole 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("PDF_Target_Semantics.val_type_eq_PRODUCT",
     "(val_type ?x = PRODUCT ?t1.0 ?t2.0) =
      (EX a b. val_type a = ?t1.0 & val_type b = ?t2.0 & ?x = <|a, b|>)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("PDF_Target_Semantics.val_type_cexpr_sem",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e : ?t; free_vars ?e <= ?V;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> val_type (cexpr_sem ?\<sigma> ?e) = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 4)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_var 2))),
    ("PDF_Target_Semantics.measurable_fun_upd_state_measure",
     "?v ~: ?V ==>
      (%(x, y). y(?v := x))
      : stock_measure (?\<Gamma> ?v) \<Otimes>\<^sub>M
        state_measure ?V ?\<Gamma> \<rightarrow>\<^sub>M
        state_measure (insert ?v ?V) ?\<Gamma>",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app (template_var 0, template_var 2))),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 0)))
           ))),
    ("PDF_Target_Semantics.measurable_eval_cexpr",
     "[| case_nat ?t ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= shift_var_set ?V |]
      ==> (%(x, y). eval_cexpr ?e x y)
          : borel_measurable
             (state_measure ?V ?\<Gamma> \<Otimes>\<^sub>M
              stock_measure ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_var 2)),
                template_var 1),
              template_hole 11)
            ),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_var 2)),
                   template_app (template_hole 1, template_var 3))),
               template_hole 0))
           ))),
    ("PDF_Target_Semantics.cet_less_eq_int",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : INTEG;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : INTEG |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 \<le>\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 5, template_hole 2),
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 5, template_hole 1),
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0))))),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.cet_less_eq_real",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL |]
      ==> ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 \<le>\<^sub>c ?e2.0 : BOOL",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 5, template_hole 2),
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 5, template_hole 1),
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0))))),
             template_hole 0)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_opE",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?oper $$\<^sub>c ?e : ?t;
         !!t. [| ?\<Gamma> \<turnstile>\<^sub>c ?e : t;
                 op_type ?oper t = Some ?t |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("PDF_Target_Semantics.cexpr_typing_ifE",
     "[| ?\<Gamma> \<turnstile>\<^sub>c
          IF\<^sub>c ?b THEN ?e1.0 ELSE ?e2.0 : ?t;
         [| ?\<Gamma> \<turnstile>\<^sub>c ?b : BOOL;
            ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : ?t;
            ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_hole 0)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 3),
                   template_var 1)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 2),
                     template_var 1)
                   )],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("PDF_Target_Semantics.subprob_cexprD",
     "[| subprob_cexpr ?V ?V' ?\<Gamma> ?e;
         ?\<rho> : space (state_measure ?V' ?\<Gamma>) |]
      ==> \<integral>\<^sup>+ x. ennreal
                                  (extract_real
                                    (cexpr_sem (merge ?V ?V' (x, ?\<rho>))
?e))
                             \<partial>state_measure ?V ?\<Gamma>
          <= 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 8, template_var 4),
               template_var 2)),
           t_empty),
         template_hole 0))),
    ("PDF_Target_Semantics.cdens_ctxt_invar_imp_integrable",
     "[| cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta>;
         ?\<rho> : space (state_measure (set ?vs') ?\<Gamma>) |]
      ==> integrable (state_measure (set ?vs) ?\<Gamma>)
           (%\<sigma>.
               extract_real
                (cexpr_sem (merge (set ?vs) (set ?vs') (\<sigma>, ?\<rho>))
                  ?\<delta>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 3)),
                  template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 4)),
                 template_var 2)),
             t_empty)
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_comp",
     "[| nonneg_cexpr (shift_var_set ?V) (case_nat ?t2.0 ?\<Gamma>) ?e;
         case_nat ?t1.0 ?\<Gamma> \<turnstile>\<^sub>c ?f : ?t2.0;
         free_vars ?f <= shift_var_set ?V |]
      ==> nonneg_cexpr (shift_var_set ?V) (case_nat ?t1.0 ?\<Gamma>)
           (?e \<circ>\<^sub>c ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 3)),
                template_var 0),
              template_var 4)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app (template_hole 5, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("PDF_Target_Semantics.nonneg_dist_dens_cexpr",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : dist_param_type ?dst;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : dist_result_type ?dst;
         free_vars ?e1.0 <= ?V; free_vars ?e2.0 <= ?V |]
      ==> nonneg_cexpr ?V ?\<Gamma> (dist_dens_cexpr ?dst ?e1.0 ?e2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 1))
           ))),
    ("PDF_Target_Semantics.subprob_cexprI",
     "(!!\<rho>.
          \<rho> : space (state_measure ?V' ?\<Gamma>) ==>
          \<integral>\<^sup>+ x. ennreal
                                  (extract_real
                                    (cexpr_sem (merge ?V ?V' (x, \<rho>))
?e))
                             \<partial>state_measure ?V ?\<Gamma>
          <= 1) ==>
      subprob_cexpr ?V ?V' ?\<Gamma> ?e",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("PDF_Target_Semantics.cexpr_typing_pairE",
     "[| ?\<Gamma> \<turnstile>\<^sub>c <?e1.0, ?e2.0>\<^sub>c : ?t;
         !!t1 t2.
            [| ?t = PRODUCT t1 t2;
               ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : t1;
               ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : t2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("PDF_Target_Semantics.measurable_cexpr_sem'",
     "[| ?\<rho> : space (state_measure ?V' ?\<Gamma>);
         ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= ?V Un ?V' |]
      ==> (%\<sigma>.
              extract_real
               (cexpr_sem (merge ?V ?V' (\<sigma>, ?\<rho>)) ?e))
          : borel_measurable (state_measure ?V ?\<Gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_hole 10)
            ),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 12, template_var 0),
                   template_var 2)),
               template_hole 0))
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_comp_aux",
     "[| nonneg_cexpr ?V (?\<Gamma>(?x := ?t1.0)) ?e; ?x : ?V;
         ?\<Gamma>(?x := ?t1.0) \<turnstile>\<^sub>c ?e : ?t2.0;
         ?\<Gamma> \<turnstile>\<^sub>c ?f : ?t1.0; free_vars ?f <= ?V |]
      ==> nonneg_cexpr ?V ?\<Gamma> (cexpr_comp_aux ?x ?f ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_var 0),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 2))
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_sem_integrate_vars'",
     "[| distinct ?vs; set ?vs Int ?V' = {};
         nonneg_cexpr (set ?vs Un ?V') ?\<Gamma> ?e;
         ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= set ?vs Un ?V' |]
      ==> nonneg_cexpr ?V' ?\<Gamma> (integrate_vars ?\<Gamma> ?vs ?e)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_var 2),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 8, template_var 3)),
                    template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 8, template_var 3)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("PDF_Target_Semantics.nonneg_cexpr_Mult",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL; free_vars ?e1.0 <= ?V;
         free_vars ?e2.0 <= ?V; nonneg_cexpr ?V ?\<Gamma> ?e1.0;
         nonneg_cexpr ?V ?\<Gamma> ?e2.0 |]
      ==> nonneg_cexpr ?V ?\<Gamma> (?e1.0 *\<^sub>c ?e2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 1),
              template_hole 6)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_var 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)))
           ))),
    ("PDF_Target_Semantics.cdens_ctxt_invarI",
     "[| distinct (?vs @ ?vs'); free_vars ?\<delta> <= set (?vs @ ?vs');
         ?\<Gamma> \<turnstile>\<^sub>c ?\<delta> : REAL;
         nonneg_cexpr (set ?vs Un set ?vs') ?\<Gamma> ?\<delta>;
         subprob_cexpr (set ?vs) (set ?vs') ?\<Gamma> ?\<delta> |]
      ==> cdens_ctxt_invar ?vs ?vs' ?\<Gamma> ?\<delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 0),
                template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app (template_hole 6, template_var 3)),
                    template_app (template_hole 6, template_var 2))),
                template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 6, template_var 3)),
                  template_app (template_hole 6, template_var 2)),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("PDF_Target_Semantics.cexpr_sem_Add",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>);
         free_vars ?e1.0 <= ?V; free_vars ?e2.0 <= ?V |]
      ==> extract_real (cexpr_sem ?\<sigma> (?e1.0 +\<^sub>c ?e2.0)) =
          extract_real (cexpr_sem ?\<sigma> ?e1.0) +
          extract_real (cexpr_sem ?\<sigma> ?e2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_var 2),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 4)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3))),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 2)))))),
    ("PDF_Target_Semantics.cexpr_sem_Mult",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : REAL;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>);
         free_vars ?e1.0 <= ?V; free_vars ?e2.0 <= ?V |]
      ==> extract_real (cexpr_sem ?\<sigma> (?e1.0 *\<^sub>c ?e2.0)) =
          extract_real (cexpr_sem ?\<sigma> ?e1.0) *
          extract_real (cexpr_sem ?\<sigma> ?e2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_var 2),
              template_hole 12)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 4)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_var 0),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3))),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 2)))))),
    ("PDF_Target_Semantics.cexpr_sem_dist_dens_cexpr",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : dist_param_type ?dst;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : dist_result_type ?dst;
         free_vars ?e1.0 <= ?V; free_vars ?e2.0 <= ?V;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> ennreal
           (extract_real
             (cexpr_sem ?\<sigma> (dist_dens_cexpr ?dst ?e1.0 ?e2.0))) =
          dist_dens ?dst (cexpr_sem ?\<sigma> ?e1.0)
           (cexpr_sem ?\<sigma> ?e2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_app (template_hole 12, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 2),
              template_app (template_hole 11, template_var 3))
            ),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 4),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 5)))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 4),
                 template_var 2)))),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 4)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("PDF_Target_Semantics.nonneg_cexpr_sem_integrate_vars",
     "[| ?\<rho> : space (state_measure ?V' ?\<Gamma>); distinct ?vs;
         set ?vs Int ?V' = {}; nonneg_cexpr (set ?vs Un ?V') ?\<Gamma> ?e;
         ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= set ?vs Un ?V' |]
      ==> 0 <= extract_real
                (cexpr_sem ?\<rho> (integrate_vars ?\<Gamma> ?vs ?e))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 1)),
            template_var 3),
          template_hole 11),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 12, template_var 1)),
                    template_var 3)),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 0),
              template_hole 7)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 12, template_var 1)),
            template_var 3))],
       template_inequation
        (less_equals, template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)))))),
    ("PDF_Target_Semantics.subprob_indicator",
     "[| subprob_cexpr ?V ?V' ?\<Gamma> ?e1.0;
         nonneg_cexpr (?V Un ?V') ?\<Gamma> ?e1.0;
         ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : REAL;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : BOOL;
         free_vars ?e1.0 <= ?V Un ?V'; free_vars ?e2.0 <= ?V Un ?V' |]
      ==> subprob_cexpr ?V ?V' ?\<Gamma>
           (?e1.0 *\<^sub>c \<langle>?e2.0\<rangle>\<^sub>c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_hole 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 0),
              template_hole 6)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 11, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 0, template_hole 7)),
                   template_var 0))))
           ))),
    ("PDF_Target_Semantics.cexpr_sem_dist_dens_cexpr_nonneg",
     "[| ?\<Gamma> \<turnstile>\<^sub>c ?e1.0 : dist_param_type ?dst;
         ?\<Gamma> \<turnstile>\<^sub>c ?e2.0 : dist_result_type ?dst;
         free_vars ?e1.0 <= ?V; free_vars ?e2.0 <= ?V;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> ennreal
           (extract_real
             (cexpr_sem ?\<sigma> (dist_dens_cexpr ?dst ?e1.0 ?e2.0))) =
          dist_dens ?dst (cexpr_sem ?\<sigma> ?e1.0)
           (cexpr_sem ?\<sigma> ?e2.0) &
          0 <= extract_real
                (cexpr_sem ?\<sigma> (dist_dens_cexpr ?dst ?e1.0 ?e2.0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 5),
                template_var 4),
              template_app (template_hole 15, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 5),
                template_var 2),
              template_app (template_hole 14, template_var 3))
            ),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 4),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 5)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_app
                          (template_app
                            (template_app (template_hole 3, template_var 3),
                             template_var 4),
                           template_var 2))))),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)))),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 4),
                     template_var 2)))))
           ))),
    ("PDF_Target_Semantics.cexpr_sem_integral_nonneg",
     "[| \<integral>\<^sup>+ x. ennreal
                                 (extract_real
                                   (cexpr_sem (case_nat x ?\<sigma>) ?e))
                            \<partial>stock_measure ?t
         < \<infinity>;
         nonneg_cexpr (shift_var_set ?V) (case_nat ?t ?\<Gamma>) ?e;
         case_nat ?t ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= shift_var_set ?V;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> ennreal
           (extract_real
             (cexpr_sem ?\<sigma> (\<integral>\<^sub>c ?e \<partial>?t))) =
          \<integral>\<^sup>+ x. ennreal
                                  (extract_real
                                    (cexpr_sem (case_nat x ?\<sigma>) ?e))
                             \<partial>stock_measure ?t",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 18,
              template_app (template_hole 17, template_var 4)),
            t_empty),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 1)),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 0)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 0)),
                template_var 2),
              template_hole 7)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 16,
           template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)))),
         template_app
          (template_app
            (template_hole 18,
             template_app (template_hole 17, template_var 4)),
           t_empty)))),
    ("PDF_Target_Semantics.cexpr_sem_integrate_vars",
     "[| ?\<rho> : space (state_measure ?V' ?\<Gamma>); distinct ?vs;
         set ?vs Int ?V' = {};
         integrable (state_measure (set ?vs) ?\<Gamma>)
          (%\<sigma>.
              extract_real
               (cexpr_sem (merge (set ?vs) ?V' (\<sigma>, ?\<rho>)) ?e));
         ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= set ?vs Un ?V' |]
      ==> extract_real
           (cexpr_sem ?\<rho> (integrate_vars ?\<Gamma> ?vs ?e)) =
          LINT \<sigma>|state_measure (set ?vs) ?\<Gamma>.
             extract_real
              (cexpr_sem (merge (set ?vs) ?V' (\<sigma>, ?\<rho>)) ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 4),
              template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 1)),
            template_var 3),
          template_hole 13),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 14, template_var 1)),
                  template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 0),
              template_hole 6)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 14, template_var 1)),
            template_var 3))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 18,
                 template_app (template_hole 14, template_var 1)),
               template_var 2)),
           t_empty)))),
    ("PDF_Target_Semantics.has_parametrized_subprob_density_cexpr_sem_integral",
     "[| has_parametrized_subprob_density (state_measure ?V' ?\<Gamma>) ?M
          (stock_measure ?t)
          (%\<rho> x.
              \<integral>\<^sup>+ xa. ennreal
 (eval_cexpr ?f (case_nat x \<rho>) xa)
                                 \<partial>stock_measure ?t');
         nonneg_cexpr (shift_var_set (shift_var_set ?V'))
          (case_nat ?t' (case_nat ?t ?\<Gamma>)) ?f;
         case_nat ?t' (case_nat ?t ?\<Gamma>) \<turnstile>\<^sub>c
          ?f : REAL;
         free_vars ?f <= shift_var_set (shift_var_set ?V');
         ?\<rho> : space (state_measure ?V' ?\<Gamma>) |]
      ==> AE x in stock_measure
                   ?t. \<integral>\<^sup>+ xa.
      ennreal (eval_cexpr ?f (case_nat x ?\<rho>) xa)
    \<partial>stock_measure ?t' =
                       ennreal
                        (eval_cexpr (\<integral>\<^sub>c ?f \<partial>?t')
                          ?\<rho> x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app (template_hole 18, template_var 6),
                      template_var 5)),
                  template_var 4),
                template_app (template_hole 17, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_hole 11,
                    template_app (template_hole 11, template_var 6))),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 5))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_app
                     (template_app (template_hole 10, template_var 3),
                      template_var 5))),
                template_var 1),
              template_hole 8)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app
           (template_hole 11,
            template_app (template_hole 11, template_var 6))),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 18, template_var 6),
                  template_var 5)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_hole 0,
               template_app (template_hole 17, template_var 3)))
           ))),
    ("PDF_Target_Semantics.cexpr_sem_integrate_vars'",
     "[| ?\<rho> : space (state_measure ?V' ?\<Gamma>); distinct ?vs;
         set ?vs Int ?V' = {}; nonneg_cexpr (set ?vs Un ?V') ?\<Gamma> ?e;
         integrable (state_measure (set ?vs) ?\<Gamma>)
          (%\<sigma>.
              extract_real
               (cexpr_sem (merge (set ?vs) ?V' (\<sigma>, ?\<rho>)) ?e));
         ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= set ?vs Un ?V' |]
      ==> ennreal
           (extract_real
             (cexpr_sem ?\<rho> (integrate_vars ?\<Gamma> ?vs ?e))) =
          \<integral>\<^sup>+ x. ennreal
                                  (extract_real
                                    (cexpr_sem
(merge (set ?vs) ?V' (x, ?\<rho>)) ?e))
                             \<partial>state_measure (set ?vs) ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 3),
                  template_var 2)))
            ),
        template_predicate
         (template_app (template_hole 19, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 17,
              template_app (template_hole 16, template_var 1)),
            template_var 3),
          template_hole 15),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app (template_hole 16, template_var 1)),
                    template_var 3)),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 20,
                    template_app (template_hole 16, template_var 1)),
                  template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 0),
              template_hole 6)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 16, template_var 1)),
            template_var 3))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 20,
                 template_app (template_hole 16, template_var 1)),
               template_var 2)),
           t_empty)))),
    ("PDF_Target_Semantics.integrable_cexpr_projection",
     "[| finite ?V; ?V Int ?V' = {}; ?v ~: ?V; ?v ~: ?V';
         ?\<rho> : space (state_measure ?V' ?\<Gamma>);
         ?\<Gamma> \<turnstile>\<^sub>c ?e : REAL;
         free_vars ?e <= insert ?v ?V Un ?V';
         integrable (state_measure (insert ?v ?V) ?\<Gamma>)
          (%\<sigma>.
              extract_real
               (cexpr_sem (merge (insert ?v ?V) ?V' (\<sigma>, ?\<rho>))
                 ?e)) |]
      ==> AE x in stock_measure
                   (?\<Gamma>
                     ?v). integrable (state_measure ?V ?\<Gamma>)
                           (%\<sigma>.
                               extract_real
                                (cexpr_sem
                                  (merge ?V (insert ?v ?V')
                                    (\<sigma>, ?\<rho>(?v := x)))
                                  ?e))",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 21, template_var 5),
            template_var 4),
          template_hole 20),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_var 5)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_var 4)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 1),
                template_var 0),
              template_hole 13)
            ),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 0),
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 5)),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 5)),
                  template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_var 1, template_var 3))))
           )))]:
   (string * thm * template) list
### theory "Draft.PDF_Target_SemanticsTemplates"
### 1.688s elapsed time, 2.511s cpu time, 0.918s GC time
val it = (): unit
