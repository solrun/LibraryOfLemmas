Loading theory "HOL-Library.Function_Algebras" (required by "Draft.PDF_SemanticsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Density_Predicates" (required by "Draft.PDF_SemanticsTemplates" via "Draft.PDF_Semantics" via "Draft.PDF_Values")
Loading theory "Draft.Templates" (required by "Draft.PDF_SemanticsTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.076s elapsed time, 0.259s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.108s elapsed time, 0.321s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.PDF_SemanticsTemplates" via "Draft.ExtrEqs")
### theory "Draft.Density_Predicates"
### 0.306s elapsed time, 0.729s cpu time, 0.042s GC time
Loading theory "Draft.PDF_Values" (required by "Draft.PDF_SemanticsTemplates" via "Draft.PDF_Semantics")
### theory "HOL-Library.BigO"
### 0.579s elapsed time, 1.185s cpu time, 0.055s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.PDF_SemanticsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.497s elapsed time, 1.032s cpu time, 0.117s GC time
### No equation for constructor "UnitVal"
### No equation for constructor "BoolVal"
### No equation for constructor "IntVal"
### No equation for constructor "RealVal"
consts
  extract_pair' :: "(val => 'a) => (val => 'b) => val => 'a * 'b"
Found termination order: "size <*mlex*> {}"
consts
  stock_measure :: "pdf_type => val measure"
### theory "Draft.PDF_Values"
### 1.671s elapsed time, 2.681s cpu time, 0.250s GC time
Loading theory "Draft.PDF_Semantics" (required by "Draft.PDF_SemanticsTemplates")
class expr = type +
  fixes free_vars :: "'a => nat set"
instantiation
  expr :: expr
  free_vars_expr == free_vars :: expr => nat set
consts
  free_vars_expr :: "expr => nat set"
consts
  free_vars_expr_code :: "expr => nat set"
consts
  dist_param_type :: "pdf_dist => pdf_type"
consts
  dist_result_type :: "pdf_dist => pdf_type"
consts
  dist_measure :: "pdf_dist => val => val measure"
consts
  dist_dens :: "pdf_dist => val => val => ennreal"
consts
  op_type :: "pdf_operator => pdf_type => pdf_type option"
### Ambiguous input (line 414 of "$AFP/Density_Compiler/PDF_Semantics.thy") produces 2 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>expr_typing" ("_position" \<Gamma>) ("_position" e1)
###       ("_position" t1)))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing"
###         ("\<^const>PDF_Semantics.de_bruijn_insert" ("_position" t1)
###           ("_position" \<Gamma>))
###         ("_position" e2) ("_position" t2)))
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing" ("_position" \<Gamma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))
###         ("_position" t2)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>expr_typing" ("_position" \<Gamma>) ("_position" e1)
###       ("_position" t1)))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing"
###         ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###           ("_position" t1) ("_position" \<Gamma>))
###         ("_position" e2) ("_position" t2)))
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>expr_typing" ("_position" \<Gamma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))
###         ("_position" t2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "expr_typing"
  Proving monotonicity ...
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  countable_type :: "pdf_type => bool"
Found termination order: "{}"
### Ambiguous input (line 607 of "$AFP/Density_Compiler/PDF_Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem)
###       ("_cargs" ("_position" \<sigma>)
###         ("\<^const>PDF_Semantics.expr.LetVar" ("_position" e1)
###           ("_position" e2))))
###     ("_do_block"
###       ("_do_cons"
###         ("_do_bind" ("_position" v)
###           ("_applC" ("_position" expr_sem)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1))))
###         ("_do_final"
###           ("_applC" ("_position" expr_sem)
###             ("_cargs"
###               ("\<^const>PDF_Semantics.de_bruijn_insert" ("_position" v)
###                 ("_position" \<sigma>))
###               ("_position" e2))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem)
###       ("_cargs" ("_position" \<sigma>)
###         ("\<^const>PDF_Semantics.expr.LetVar" ("_position" e1)
###           ("_position" e2))))
###     ("_do_block"
###       ("_do_cons"
###         ("_do_bind" ("_position" v)
###           ("_applC" ("_position" expr_sem)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1))))
###         ("_do_final"
###           ("_applC" ("_position" expr_sem)
###             ("_cargs"
###               ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###                 ("_position" v) ("_position" \<sigma>))
###               ("_position" e2))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  expr_sem :: "(nat => val) => expr => val measure"
Found termination order: "size <*mlex*> {}"
### Ambiguous input (line 965 of "$AFP/Density_Compiler/PDF_Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs" ("_position" \<sigma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))))
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs"
###         ("\<^const>PDF_Semantics.de_bruijn_insert"
###           ("_applC" ("_position" expr_sem_rf)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1)))
###           ("_position" \<sigma>))
###         ("_position" e2)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs" ("_position" \<sigma>)
###         ("_applC" ("_position" LetVar)
###           ("_cargs" ("_position" e1) ("_position" e2)))))
###     ("_applC" ("_position" expr_sem_rf)
###       ("_cargs"
###         ("\<^const>Linear_Temporal_Logic_on_Streams.HLD_nxt"
###           ("_applC" ("_position" expr_sem_rf)
###             ("_cargs" ("_position" \<sigma>) ("_position" e1)))
###           ("_position" \<sigma>))
###         ("_position" e2)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  expr_sem_rf :: "(nat => val) => expr => val"
### theory "Draft.PDF_Semantics"
### 4.459s elapsed time, 5.380s cpu time, 1.236s GC time
Loading theory "Draft.PDF_SemanticsTemplates"
val templateLemmas =
   [("PDF_Semantics.shift_var_set_0", "0 : shift_var_set ?V",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("PDF_Semantics.free_vars_expr_code",
     "free_vars ?e = free_vars_expr_code ?e",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("PDF_Semantics.countable_type_countable",
     "countable_type ?t ==> countable (space (stock_measure ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("PDF_Semantics.shift_var_set_Suc",
     "(Suc ?x : shift_var_set ?V) = (?x : ?V)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("PDF_Semantics.case_nat_update_0",
     "(case_nat ?x ?\<sigma>)(0 := ?y) = case_nat ?y ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_hole 0),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("PDF_Semantics.countable_type_imp_count_space",
     "countable_type ?t ==>
      stock_measure ?t = count_space (type_universe ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PDF_Semantics.safe_ln_gt_0", "0 < ?x ==> safe_ln ?x = ln ?x",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("PDF_Semantics.safe_sqrt_ge_0", "0 <= ?x ==> safe_sqrt ?x = sqrt ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("PDF_Semantics.expr_typing_code",
     "(?\<Gamma> \<turnstile> ?e : ?t) =
      (expr_type ?\<Gamma> ?e = Some ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("PDF_Semantics.expr_type_Some_iff",
     "(expr_type ?\<Gamma> ?e = Some ?t) =
      (?\<Gamma> \<turnstile> ?e : ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("PDF_Semantics.measurable_dist_measure",
     "dist_measure ?d
      : stock_measure (dist_param_type ?d) \<rightarrow>\<^sub>M
        subprob_algebra (stock_measure (dist_result_type ?d))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app (template_hole 0, template_var 0)))))
         )),
    ("PDF_Semantics.subset_shift_var_set",
     "Suc -` ?A <= ?V ==> ?A <= shift_var_set ?V",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("PDF_Semantics.subprob_space_dist_measure",
     "?v : type_universe (dist_param_type ?dst) ==>
      subprob_space (dist_measure ?dst ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PDF_Semantics.delete_var_1_vimage",
     "case_nat 0 (%x. Suc (Suc x)) -` shift_var_set (shift_var_set ?V) =
      shift_var_set ?V",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2), t_empty)),
         template_app
          (template_hole 0,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("PDF_Semantics.expr_sem_pair_vars",
     "expr_sem ?\<sigma> <Var ?x ,  Var ?y> =
      return_val <|?\<sigma> ?x, ?\<sigma> ?y|>",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("PDF_Semantics.measurable_equals",
     "Measurable.pred (stock_measure ?t \<Otimes>\<^sub>M stock_measure ?t)
       (%(x, y). x = y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app (template_hole 2, template_var 0))),
             template_app (template_hole 1, template_hole 0)))
         )),
    ("PDF_Semantics.space_dist_measure",
     "val_type ?x = dist_param_type ?dst ==>
      space (dist_measure ?dst ?x) = type_universe (dist_result_type ?dst)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("PDF_Semantics.op_sem_val_type",
     "op_type ?oper (val_type ?v) = Some ?t' ==>
      val_type (op_sem ?oper ?v) = ?t'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2),
            template_app (template_hole 3, template_var 1)),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("PDF_Semantics.expr_typing_unique",
     "[| ?\<Gamma> \<turnstile> ?e : ?t; ?\<Gamma> \<turnstile> ?e : ?t' |]
      ==> ?t = ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("PDF_Semantics.case_nat_delete_var_1",
     "case_nat ?x (case_nat ?y ?\<sigma>) o case_nat 0 (%x. Suc (Suc x)) =
      case_nat ?x ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)),
       template_app
        (template_app (template_hole 3, template_var 2), template_var 0))),
    ("PDF_Semantics.return_val_countable",
     "countable_type (val_type ?v) ==>
      return_val ?v =
      density (stock_measure (val_type ?v)) (indicator {?v})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 7, template_var 0))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("PDF_Semantics.sets_dist_measure",
     "val_type ?x = dist_param_type ?dst ==>
      sets (dist_measure ?dst ?x) =
      sets (stock_measure (dist_result_type ?dst))",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("PDF_Semantics.measurable_op_sem",
     "op_type ?oper ?t = Some ?t' ==>
      op_sem ?oper
      : stock_measure ?t \<rightarrow>\<^sub>M stock_measure ?t'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("PDF_Semantics.expr_typing_failE",
     "[| ?\<Gamma> \<turnstile> Fail ?t : ?t'; ?t' = ?t ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_var 2)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.dist_measure_has_density",
     "?v : type_universe (dist_param_type ?dst) ==>
      has_density (dist_measure ?dst ?v)
       (stock_measure (dist_result_type ?dst)) (dist_dens ?dst ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PDF_Semantics.dist_measure_has_subprob_density",
     "?v : type_universe (dist_param_type ?dst) ==>
      has_subprob_density (dist_measure ?dst ?v)
       (stock_measure (dist_result_type ?dst)) (dist_dens ?dst ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("PDF_Semantics.expr_typing_valE",
     "[| ?\<Gamma> \<turnstile> Val ?v : ?t; ?t = val_type ?v ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 0, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.expr_typing_varE",
     "[| ?\<Gamma> \<turnstile> Var ?x : ?t; ?t = ?\<Gamma> ?x ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_var 3, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.if_bounded",
     "(if ?a <= ?i & ?i <= ?b then ?v else 0) =
      ?v * indicat_real {?a..?b} ?i",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1))),
           template_var 0),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 2)))),
    ("PDF_Semantics.dist_dens_integral_space",
     "?v : type_universe (dist_param_type ?dst) ==>
      integral\<^sup>N (stock_measure (dist_result_type ?dst))
       (dist_dens ?dst ?v)
      <= 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty),
         template_hole 0))),
    ("PDF_Semantics.density_cong'",
     "(!!x. x : space ?M ==> ?f x = ?g x) ==>
      density ?M ?f = density ?M ?g",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("PDF_Semantics.expr_sem_rf_eq_on_vars",
     "(!!x. x : free_vars ?e ==> ?\<sigma>1.0 x = ?\<sigma>2.0 x) ==>
      expr_sem_rf ?\<sigma>1.0 ?e = expr_sem_rf ?\<sigma>2.0 ?e",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("PDF_Semantics.expr_sem_eq_on_vars",
     "(!!x. x : free_vars ?e ==>
            ?\<sigma>\<^sub>1 x = ?\<sigma>\<^sub>2 x) ==>
      expr_sem ?\<sigma>\<^sub>1 ?e = expr_sem ?\<sigma>\<^sub>2 ?e",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("PDF_Semantics.expr_typing_cong",
     "(!!x. x : free_vars ?e ==> ?\<Gamma> x = ?\<Gamma>' x) ==>
      (?\<Gamma> \<turnstile> ?e : ?t) = (?\<Gamma>' \<turnstile> ?e : ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("PDF_Semantics.measurable_expr_sem",
     "[| ?\<Gamma> \<turnstile> ?e : ?t; free_vars ?e <= ?V |]
      ==> (%\<sigma>. expr_sem \<sigma> ?e)
          : state_measure ?V ?\<Gamma> \<rightarrow>\<^sub>M
            subprob_algebra (stock_measure ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("PDF_Semantics.expr_typing_cong'",
     "[| ?\<Gamma> \<turnstile> ?e : ?t;
         !!x. x : free_vars ?e ==> ?\<Gamma> x = ?\<Gamma>' x |]
      ==> ?\<Gamma>' \<turnstile> ?e : ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("PDF_Semantics.space_expr_sem",
     "[| ?\<Gamma> \<turnstile> ?w : ?t;
         ALL x:free_vars ?w. val_type (?\<sigma> x) = ?\<Gamma> x |]
      ==> space (expr_sem ?\<sigma> ?w) = type_universe ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("PDF_Semantics.case_nat_in_state_measure",
     "[| ?x : type_universe ?t1.0;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> case_nat ?x ?\<sigma>
          : space
             (state_measure (shift_var_set ?V) (case_nat ?t1.0 ?\<Gamma>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2)),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 1, template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))))
           ))),
    ("PDF_Semantics.borel_measurable_eq",
     "[| ?f : borel_measurable ?M; ?g : borel_measurable ?M |]
      ==> Measurable.pred ?M (%x. ?f x = ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("PDF_Semantics.expr_typing_randE",
     "[| ?\<Gamma> \<turnstile> Random ?dst ?e : ?t;
         [| ?t = dist_result_type ?dst;
            ?\<Gamma> \<turnstile> ?e : dist_param_type ?dst |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 3))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 2),
                   template_app (template_hole 0, template_var 3))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.sets_expr_sem",
     "[| ?\<Gamma> \<turnstile> ?w : ?t;
         ALL x:free_vars ?w. val_type (?\<sigma> x) = ?\<Gamma> x |]
      ==> sets (expr_sem ?\<sigma> ?w) = sets (stock_measure ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 1))))),
    ("PDF_Semantics.measurable_equals_stock_measure",
     "[| ?f : ?M \<rightarrow>\<^sub>M stock_measure ?t;
         ?g : ?M \<rightarrow>\<^sub>M stock_measure ?t |]
      ==> Measurable.pred ?M (%x. ?f x = ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app (template_hole 5, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("PDF_Semantics.measurable_expr_sem_rf",
     "[| ?\<Gamma> \<turnstile> ?e : ?t; randomfree ?e;
         free_vars ?e <= ?V |]
      ==> (%\<sigma>. expr_sem_rf \<sigma> ?e)
          : state_measure ?V ?\<Gamma> \<rightarrow>\<^sub>M
            stock_measure ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("PDF_Semantics.expr_typing_letE",
     "[| ?\<Gamma> \<turnstile> LET ?e1.0 IN ?e2.0 : ?t;
         !!t1. [| ?\<Gamma> \<turnstile> ?e1.0 : t1;
                  case_nat t1 ?\<Gamma> \<turnstile> ?e2.0 : ?t |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.expr_typing_opE",
     "[| ?\<Gamma> \<turnstile> ?oper $$ ?e : ?t;
         !!t. [| ?\<Gamma> \<turnstile> ?e : t; op_type ?oper t = Some ?t |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.measurable_expr_sem_eq",
     "[| ?\<Gamma> \<turnstile> ?e : ?t;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>);
         free_vars ?e <= ?V |]
      ==> (\<rightarrow>\<^sub>M) (expr_sem ?\<sigma> ?e) =
          (\<rightarrow>\<^sub>M) (stock_measure ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 4)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 2))))),
    ("PDF_Semantics.measurable_dist_dens",
     "[| ?f : ?M \<rightarrow>\<^sub>M stock_measure (dist_param_type ?dst);
         ?g : ?M \<rightarrow>\<^sub>M
              stock_measure (dist_result_type ?dst) |]
      ==> (%x. dist_dens ?dst (?f x) (?g x)) : borel_measurable ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_hole 6,
                  template_app (template_hole 4, template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))
           ))),
    ("PDF_Semantics.val_type_expr_sem_rf",
     "[| ?\<Gamma> \<turnstile> ?e : ?t; randomfree ?e; free_vars ?e <= ?V;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> val_type (expr_sem_rf ?\<sigma> ?e) = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 4)))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_var 2))),
    ("PDF_Semantics.measurable_case_nat",
     "[| ?g : ?R \<rightarrow>\<^sub>M ?N;
         ?h : ?R \<rightarrow>\<^sub>M Pi\<^sub>M ?V ?M |]
      ==> (%x. case_nat (?g x) (?h x))
          : ?R \<rightarrow>\<^sub>M
            Pi\<^sub>M (shift_var_set ?V) (case_nat ?N ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 1, template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))))
           ))),
    ("PDF_Semantics.expr_typing_ifE",
     "[| ?\<Gamma> \<turnstile> IF ?b THEN ?e1.0 ELSE ?e2.0 : ?t;
         [| ?\<Gamma> \<turnstile> ?b : BOOL;
            ?\<Gamma> \<turnstile> ?e1.0 : ?t;
            ?\<Gamma> \<turnstile> ?e2.0 : ?t |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_hole 0)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 3),
                   template_var 1)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 2),
                     template_var 1)
                   )],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.measurable_case_nat'",
     "[| ?g : ?R \<rightarrow>\<^sub>M stock_measure ?t;
         ?h : ?R \<rightarrow>\<^sub>M state_measure ?V ?\<Gamma> |]
      ==> (%x. case_nat (?g x) (?h x))
          : ?R \<rightarrow>\<^sub>M
            state_measure (shift_var_set ?V) (case_nat ?t ?\<Gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app (template_hole 6, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 1, template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))))
           ))),
    ("PDF_Semantics.expr_sem_rf_sound",
     "[| ?\<Gamma> \<turnstile> ?e : ?t; randomfree ?e; free_vars ?e <= ?V;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>) |]
      ==> return_val (expr_sem_rf ?\<sigma> ?e) = expr_sem ?\<sigma> ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 4)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("PDF_Semantics.expr_typing_pairE",
     "[| ?\<Gamma> \<turnstile> <?e1.0 ,  ?e2.0> : ?t;
         !!t1 t2.
            [| ?t = PRODUCT t1 t2; ?\<Gamma> \<turnstile> ?e1.0 : t1;
               ?\<Gamma> \<turnstile> ?e2.0 : t2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("PDF_Semantics.measurable_expr_semI",
     "[| ?\<Gamma> \<turnstile> ?e : ?t;
         ?\<sigma> : space (state_measure ?V ?\<Gamma>); free_vars ?e <= ?V;
         ?f : stock_measure ?t \<rightarrow>\<^sub>M ?M |]
      ==> ?f : expr_sem ?\<sigma> ?e \<rightarrow>\<^sub>M ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 6)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 5),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 4)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 5)),
               template_var 0))
           ))),
    ("PDF_Semantics.measurable_subprob_algebra_density",
     "[| sigma_finite_measure ?N; space ?N ~= {};
         (%(x, y). ?f x y) : borel_measurable (?M \<Otimes>\<^sub>M ?N);
         !!x. x : space ?M ==> integral\<^sup>N ?N (?f x) <= 1 |]
      ==> (%x. density ?N (?f x))
          : ?M \<rightarrow>\<^sub>M subprob_algebra ?N",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 2)),
        template_negation
         (
            template_equation
             (template_app (template_hole 16, template_var 2),
              template_hole 15)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_var 0),
                    template_var 2)),
                template_hole 10))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 2)))
           )))]:
   (string * thm * template) list
### theory "Draft.PDF_SemanticsTemplates"
### 1.324s elapsed time, 1.704s cpu time, 0.255s GC time
val it = (): unit
