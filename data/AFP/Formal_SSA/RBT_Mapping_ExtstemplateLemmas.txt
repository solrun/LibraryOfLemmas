   [("RBT_Mapping_Exts.mmap_rbt_code",
     "mmap ?f (RBT_Mapping.Mapping ?t) =
      RBT_Mapping.Mapping (RBT.map (%_. ?f) ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("RBT_Mapping_Exts.mapping_add_code",
     "mapping_add (RBT_Mapping.Mapping ?t1.0) (RBT_Mapping.Mapping ?t2.0) =
      RBT_Mapping.Mapping (RBT.union ?t1.0 ?t2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("RBT_Mapping_Exts.restrict_mapping_code",
     "restrict_mapping ?f (RBT_Set.Set ?r) =
      RBT_Mapping.Mapping (RBT.map (%a _. ?f a) ?r)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("RBT_Mapping_Exts.map_values_code",
     "map_values ?f (RBT_Mapping.Mapping ?t) =
      RBT.fold
       (%x v m. case ?f x v of None => m | Some v' => Mapping.update x v' m)
       ?t Mapping.empty",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_hole 0))),
    ("RBT_Mapping_Exts.map_keys_code",
     "inj ?f ==>
      map_keys ?f (RBT_Mapping.Mapping ?t) =
      RBT.fold (%x. Mapping.update (?f x)) ?t Mapping.empty",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 0),
           template_hole 0))))]
