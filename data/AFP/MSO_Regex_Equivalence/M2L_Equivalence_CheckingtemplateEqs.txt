   [("M2L_Equivalence_Checking.toplevel_summands_REV",
     "toplevel_summands (REV ?r) = REV ` toplevel_summands ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_hole 1),
         template_app (template_hole 2, template_var 0)))),
    ("M2L_Equivalence_Checking.ACI_norm_REV",
     "\<guillemotleft>REV \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>REV ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("M2L_Equivalence_Checking.lderivs_Full",
     "lderivs ?\<Sigma> ?xs Full = Full",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_hole 0)),
    ("M2L_Equivalence_Checking.lderivs_Zero",
     "lderivs ?\<Sigma> ?xs Zero = Zero",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_hole 0)),
    ("M2L_Equivalence_Checking.ACI_norm_wf",
     "M2L_Equivalence_Checking.wf ?\<Sigma> ?n
       \<guillemotleft>?r\<guillemotright> =
      M2L_Equivalence_Checking.wf ?\<Sigma> ?n ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0))),
    ("M2L_Equivalence_Checking.ACI_norm_lderiv",
     "\<guillemotleft>\<DD> ?\<Sigma> ?as
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>\<DD> ?\<Sigma> ?as ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.toplevel_inters_subset_singleton",
     "(toplevel_inters ?r <= {?s}) = (toplevel_inters ?r = {?s})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)))),
    ("M2L_Equivalence_Checking.rderiv_lderiv",
     "rderiv ?\<Sigma> ?as ?r = REV (\<DD> ?\<Sigma> ?as (REV ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("M2L_Equivalence_Checking.lang_final",
     "final ?r = ([] : lang ?\<Sigma> ?n ?r)",
     template_equation
      (template_app (template_hole 8, template_var 2),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2)))),
    ("M2L_Equivalence_Checking.lang_dual_final_dual",
     "final_dual ?r = ([] : lang_dual ?\<Sigma> ?n ?r)",
     template_equation
      (template_app (template_hole 8, template_var 2),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2)))),
    ("M2L_Equivalence_Checking.toplevel_inters_wf",
     "M2L_Equivalence_Checking.wf ?\<Sigma> ?n ?s =
      (ALL r:toplevel_inters ?s.
          M2L_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.toplevel_summands_wf",
     "M2L_Equivalence_Checking.wf ?\<Sigma> ?n ?s =
      (ALL r:toplevel_summands ?s.
          M2L_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.rderivs_lderivs",
     "rderivs ?\<Sigma> ?w ?r = REV (lderivs ?\<Sigma> ?w (REV ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("M2L_Equivalence_Checking.lderivs_Not",
     "lderivs ?\<Sigma> ?xs (rexp.Not ?r) =
      rexp.Not (lderivs ?\<Sigma> ?xs ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.toplevel_summands_lderiv",
     "toplevel_summands (\<DD> ?\<Sigma> ?as ?r) =
      (UN s:toplevel_summands ?r.
          toplevel_summands (\<DD> ?\<Sigma> ?as s))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 3, template_var 0))))),
    ("M2L_Equivalence_Checking.wf_word",
     "wf_word ?\<Sigma> ?n ?w =
      (?w : lists ((set o \<sigma> ?\<Sigma>) ?n))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_var 1))))),
    ("M2L_Equivalence_Checking.lderiv_PLUS",
     "\<DD> ?\<Sigma> ?a (PLUS ?xs) = PLUS (map (\<DD> ?\<Sigma> ?a) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("M2L_Equivalence_Checking.ACI_norm_lderivs",
     "\<guillemotleft>lderivs ?\<Sigma> ?ws
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>lderivs ?\<Sigma> ?ws ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.ACI_norm_rderiv",
     "\<guillemotleft>rderiv ?\<Sigma> ?as
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>rderiv ?\<Sigma> ?as ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.ACI_norm_rderivs",
     "\<guillemotleft>rderivs ?\<Sigma> ?w
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>rderivs ?\<Sigma> ?w ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.wf_INTERSECT",
     "M2L_Equivalence_Checking.wf ?\<Sigma> ?n (INTERSECT ?xs) =
      (ALL r:set ?xs. M2L_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.wf_PLUS",
     "M2L_Equivalence_Checking.wf ?\<Sigma> ?n (PLUS ?xs) =
      (ALL r:set ?xs. M2L_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.wf_TIMES",
     "M2L_Equivalence_Checking.wf ?\<Sigma> ?n (TIMES ?xs) =
      (ALL r:set ?xs. M2L_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.ACI_norm_biderivs",
     "\<guillemotleft>biderivs ?\<Sigma> ?w1.0 ?w2.0
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>biderivs ?\<Sigma> ?w1.0 ?w2.0 ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lderivs_alt",
     "\<guillemotleft>lderivs ?\<Sigma> ?w ?r\<guillemotright> =
      fold (%a r. \<guillemotleft>\<DD> ?\<Sigma> a r\<guillemotright>) ?w
       \<guillemotleft>?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_app (template_hole 5, template_var 0)))),
    ("M2L_Equivalence_Checking.ACI_norm_lang",
     "lang ?\<Sigma> ?n \<guillemotleft>?r\<guillemotright> =
      lang ?\<Sigma> ?n ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 2))),
               template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 2))),
               template_hole 2),
             template_hole 1),
           template_var 1),
         template_var 0))),
    ("M2L_Equivalence_Checking.toplevel_summands_ACI_norm_lderiv",
     "(UN a:toplevel_summands ?r.
          toplevel_summands
           \<guillemotleft>\<DD> ?\<Sigma> ?as
                            \<guillemotleft>a\<guillemotright>\<guillemotright>) =
      toplevel_summands
       \<guillemotleft>\<DD> ?\<Sigma> ?as
                        \<guillemotleft>?r\<guillemotright>\<guillemotright>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_app (template_hole 1, template_var 0)))))),
    ("M2L_Equivalence_Checking.wf_dual_PLUS_dual",
     "wf_dual ?\<Sigma> ?n (CoPLUS_dual ?b ?xs) =
      (ALL r:set ?xs. wf_dual ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.rderivs_append",
     "rderivs ?\<Sigma> (?ws @ ?ws') ?r =
      rderivs ?\<Sigma> ?ws' (rderivs ?\<Sigma> ?ws ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lderivs_PLUS",
     "lderivs ?\<Sigma> ?xs (PLUS ?ys) =
      PLUS (map (lderivs ?\<Sigma> ?xs) ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("M2L_Equivalence_Checking.rderiv_PLUS",
     "rderiv ?\<Sigma> ?a (PLUS ?xs) =
      PLUS (map (rderiv ?\<Sigma> ?a) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lderivs_snoc",
     "lderivs ?\<Sigma> (?ws @ [?w]) ?r =
      \<DD> ?\<Sigma> ?w (lderivs ?\<Sigma> ?ws ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lang_REV",
     "lang ?\<Sigma> ?n (REV ?r) = rev ` lang ?\<Sigma> ?n ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_hole 4),
             template_hole 3),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 5, template_var 2))),
                 template_hole 4),
               template_hole 3),
             template_var 1),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lderivs_Inter",
     "lderivs ?\<Sigma> ?xs (rexp.Inter ?r ?s) =
      rexp.Inter (lderivs ?\<Sigma> ?xs ?r) (lderivs ?\<Sigma> ?xs ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lderivs_Plus",
     "lderivs ?\<Sigma> ?xs (Plus ?r ?s) =
      Plus (lderivs ?\<Sigma> ?xs ?r) (lderivs ?\<Sigma> ?xs ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("M2L_Equivalence_Checking.rderivs_snoc",
     "rderivs ?\<Sigma> (?ws @ [?w]) ?r =
      rderiv ?\<Sigma> ?w (rderivs ?\<Sigma> ?ws ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_hole 5),
             template_app (template_hole 4, template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("M2L_Equivalence_Checking.toplevel_inters_lang_INT",
     "lang ?\<Sigma> ?n ?s =
      \<Inter> (lang ?\<Sigma> ?n ` toplevel_inters ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_hole 4),
             template_hole 3),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("M2L_Equivalence_Checking.toplevel_summands_lang_UN",
     "lang ?\<Sigma> ?n ?s =
      \<Union> (lang ?\<Sigma> ?n ` toplevel_summands ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_hole 4),
             template_hole 3),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("M2L_Equivalence_Checking.wf_word_append",
     "wf_word ?\<Sigma> ?n (?ws @ ?vs) =
      (wf_word ?\<Sigma> ?n ?ws & wf_word ?\<Sigma> ?n ?vs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 3))),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app (template_hole 2, template_var 3))),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 3))),
             template_var 2),
           template_var 0)))),
    ("M2L_Equivalence_Checking.lang_PLUS",
     "lang ?\<Sigma> ?n (PLUS ?xs) =
      \<Union> (lang ?\<Sigma> ?n ` set ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app (template_hole 8, template_var 2))),
               template_hole 7),
             template_hole 6),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("M2L_Equivalence_Checking.wf_word_snoc",
     "wf_word ?\<Sigma> ?n (?ws @ [?w]) =
      (?w : (set o \<sigma> ?\<Sigma>) ?n & wf_word ?\<Sigma> ?n ?ws)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app (template_hole 5, template_var 3))),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_var 3)),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_var 3))),
             template_var 2),
           template_var 1)))),
    ("M2L_Equivalence_Checking.toplevel_inters_in_lang",
     "(?w : lang ?\<Sigma> ?n ?s) =
      (ALL r:toplevel_inters ?s. ?w : lang ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.toplevel_summands_in_lang",
     "(?w : lang ?\<Sigma> ?n ?s) =
      (EX r:toplevel_summands ?s. ?w : lang ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("M2L_Equivalence_Checking.lang_TIMES",
     "lang ?\<Sigma> ?n (TIMES ?xs) =
      foldr (@@) (map (lang ?\<Sigma> ?n) ?xs) {[]}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app (template_hole 11, template_var 2))),
               template_hole 10),
             template_hole 9),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_app (template_hole 11, template_var 2))),
                     template_hole 10),
                   template_hole 9),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("M2L_Equivalence_Checking.lang_dual_PLUS_dual",
     "lang_dual ?\<Sigma> ?n (CoPLUS_dual True ?xs) =
      \<Union> (lang_dual ?\<Sigma> ?n ` set ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app (template_hole 9, template_var 2))),
               template_hole 8),
             template_hole 7),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_app (template_hole 3, template_hole 4)),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("M2L_Equivalence_Checking.lang_lderiv_rderiv",
     "lang ?\<Sigma> ?n (\<DD> ?\<Sigma> ?a (rderiv ?\<Sigma> ?b ?r)) =
      lang ?\<Sigma> ?n (rderiv ?\<Sigma> ?b (\<DD> ?\<Sigma> ?a ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 4))),
               template_hole 4),
             template_hole 3),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 3),
                 template_app (template_hole 0, template_var 4)),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 4))),
               template_hole 4),
             template_hole 3),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_hole 3),
               template_app (template_hole 0, template_var 4)),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2),
             template_var 0))))),
    ("M2L_Equivalence_Checking.lang_rderiv_lderiv",
     "lang ?\<Sigma> ?n (rderiv ?\<Sigma> ?a (\<DD> ?\<Sigma> ?b ?r)) =
      lang ?\<Sigma> ?n (\<DD> ?\<Sigma> ?b (rderiv ?\<Sigma> ?a ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 4))),
               template_hole 4),
             template_hole 3),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 3),
               template_app (template_hole 1, template_var 4)),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 4))),
               template_hole 4),
             template_hole 3),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 3),
                 template_app (template_hole 1, template_var 4)),
               template_var 2),
             template_var 0))))),
    ("M2L_Equivalence_Checking.lang_INTERSECT",
     "lang ?\<Sigma> ?n (INTERSECT ?xs) =
      (if ?xs = [] then lists ((set o \<sigma> ?\<Sigma>) ?n)
       else \<Inter> (lang ?\<Sigma> ?n ` set ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_hole 13),
                        template_app (template_hole 12, template_var 2))),
                    template_hole 11),
                  template_hole 10),
                template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_hole 7),
                template_var 0))
            )],
       template_dunno)),
    ("M2L_Equivalence_Checking.lang_dual_CoPLUS_dual",
     "lang_dual ?\<Sigma> ?n (CoPLUS_dual False ?xs) =
      (if ?xs = [] then lists ((set o \<sigma> ?\<Sigma>) ?n)
       else \<Inter> (lang_dual ?\<Sigma> ?n ` set ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_app (template_hole 13, template_var 2))),
                    template_hole 12),
                  template_hole 11),
                template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 8)),
                  template_app (template_hole 7, template_hole 8)),
                template_var 0))
            )],
       template_dunno)),
    ("M2L_Equivalence_Checking.lang_Plus_Zero",
     "(lang ?\<Sigma> ?n (Plus ?r One) = lang ?\<Sigma> ?n (Plus ?s One)) =
      (lang ?\<Sigma> ?n ?r - {[]} = lang ?\<Sigma> ?n ?s - {[]})",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 3))),
                 template_hole 7),
               template_hole 6),
             template_var 2),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 3))),
                 template_hole 7),
               template_hole 6),
             template_var 2),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app (template_hole 8, template_var 3))),
                     template_hole 7),
                   template_hole 6),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app (template_hole 8, template_var 3))),
                     template_hole 7),
                   template_hole 6),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0)))))]
