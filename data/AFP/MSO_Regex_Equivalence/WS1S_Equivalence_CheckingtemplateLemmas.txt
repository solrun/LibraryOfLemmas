   [("WS1S_Equivalence_Checking.project_axioms",
     "project (set o \<sigma> ?\<Sigma>) \<pi>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("WS1S_Equivalence_Checking.toplevel_summands_REV",
     "toplevel_summands (REV ?r) = REV ` toplevel_summands ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_hole 1),
         template_app (template_hole 2, template_var 0)))),
    ("WS1S_Equivalence_Checking.ACI_norm_REV",
     "\<guillemotleft>REV \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>REV ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("WS1S_Equivalence_Checking.lderivs_Full",
     "lderivs ?\<Sigma> ?xs Full = Full",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_hole 0)),
    ("WS1S_Equivalence_Checking.lderivs_Zero",
     "lderivs ?\<Sigma> ?xs Zero = Zero",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0),
       template_hole 0)),
    ("WS1S_Equivalence_Checking.embed_axioms",
     "Pi_Derivatives.embed (set o \<sigma> ?\<Sigma>) \<pi>
       (\<epsilon> ?\<Sigma>)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("WS1S_Equivalence_Checking.lookup_singleton",
     "lookup (case ?a of (x, xa) => Singleton x xa) ?a' = (?a = ?a')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("WS1S_Equivalence_Checking.rderiv_lderiv",
     "r\<DD> ?\<Sigma> ?as ?r = REV (\<DD> ?\<Sigma> ?as (REV ?r))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("WS1S_Equivalence_Checking.ex_lderivs_Pr",
     "EX s. lderivs ?\<Sigma> ?ass (Pr ?r) = Pr s",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("WS1S_Equivalence_Checking.ACI_norm_wf",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n
       \<guillemotleft>?r\<guillemotright> =
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0))),
    ("WS1S_Equivalence_Checking.ACI_norm_lderiv",
     "\<guillemotleft>\<DD> ?\<Sigma> ?as
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>\<DD> ?\<Sigma> ?as ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.ACI_norm_rderiv",
     "\<guillemotleft>r\<DD> ?\<Sigma> ?as
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>r\<DD> ?\<Sigma> ?as ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.invar_rderiv_and_add_init",
     "invar_rderiv_and_add ?\<Sigma> ?as ?r
       (True, [\<guillemotleft>?r\<guillemotright>])",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_var 2)),
               template_var 1),
             template_var 0),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0)))
         )),
    ("WS1S_Equivalence_Checking.lderivs_One",
     "lderivs ?\<Sigma> ?xs One : {Zero, One}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 1)),
                 template_var 0),
               template_hole 3)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 2, template_hole 3),
               template_hole 0)))
         )),
    ("WS1S_Equivalence_Checking.ACI_norm_toplevel_summands_Zero",
     "toplevel_summands ?r <= {Zero} ==>
      \<guillemotleft>?r\<guillemotright> = Zero",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 3))),
    ("WS1S_Equivalence_Checking.toplevel_inters_subset_singleton",
     "(toplevel_inters ?r <= {?s}) = (toplevel_inters ?r = {?s})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_equation
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)))),
    ("WS1S_Equivalence_Checking.embed2_axioms",
     "embed2 (set o \<sigma> ?\<Sigma>) (wf_atom ?\<Sigma>) \<pi> lookup
       (\<epsilon> ?\<Sigma>) (%(x, y). Singleton x y)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 0))),
                   template_app (template_hole 5, template_var 0)),
                 template_hole 4),
               template_hole 3),
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_hole 0))
         )),
    ("WS1S_Equivalence_Checking.wf_inNot",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inNot ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_inStar",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inStar ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_inorm",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inorm ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_pnNot",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (pnNot ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_pnorm",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (pnorm ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_REV",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (REV ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_rexp_dual_of",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      wf_dual ?\<Sigma> ?n (rexp_dual_of ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_CoNot",
     "wf_dual ?\<Sigma> ?n ?r ==> wf_dual ?\<Sigma> ?n (CoNot ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_pnorm_dual",
     "wf_dual ?\<Sigma> ?n ?r ==> wf_dual ?\<Sigma> ?n (pnorm_dual ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.lang_final",
     "final ?r = ([] : lang ?\<Sigma> ?n ?r)",
     template_equation
      (template_app (template_hole 8, template_var 2),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2)))),
    ("WS1S_Equivalence_Checking.lang_dual_final_dual",
     "final_dual ?r = ([] : lang_dual ?\<Sigma> ?n ?r)",
     template_equation
      (template_app (template_hole 8, template_var 2),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2)))),
    ("WS1S_Equivalence_Checking.wf_inPr",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> (Suc ?n) ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inPr ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_pnPr",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> (Suc ?n) ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (pnPr ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.toplevel_inters_wf",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s =
      (ALL r:toplevel_inters ?s.
          WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.toplevel_summands_wf",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s =
      (ALL r:toplevel_summands ?s.
          WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.rderivs_lderivs",
     "rderivs ?\<Sigma> ?w ?r = REV (lderivs ?\<Sigma> ?w (REV ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("WS1S_Equivalence_Checking.lderivs_Not",
     "lderivs ?\<Sigma> ?xs (rexp.Not ?r) =
      rexp.Not (lderivs ?\<Sigma> ?xs ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.take_drop_CycleI",
     "?x : ?L ==> drop ?i ?x @ take ?i ?x : Cycle ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_lderiv",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (\<DD> ?\<Sigma> ?w ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_rderiv",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (r\<DD> ?\<Sigma> ?w ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_lderiv_dual",
     "wf_dual ?\<Sigma> ?n ?r ==>
      wf_dual ?\<Sigma> ?n (Co\<DD> ?\<Sigma> ?w ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_pnCoPr",
     "wf_dual ?\<Sigma> (Suc ?n) ?r ==>
      wf_dual ?\<Sigma> ?n (pnCoPr ?b ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 3)),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_singleton",
     "?a : (set o \<sigma> ?\<Sigma>) ?n ==>
      wf_atom ?\<Sigma> ?n (case ?a of (x, xa) => Singleton x xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2))
           ))),
    ("WS1S_Equivalence_Checking.take_drop_CycleI'",
     "drop ?i ?x @ take ?i ?x : ?L ==> ?x : Cycle ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 2),
                      template_var 1)),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.finite_lderivs",
     "finite
       {\<guillemotleft>lderivs ?\<Sigma> xs ?r\<guillemotright> |xs.
        True}",
     template_predicate
      (
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))
         )),
    ("WS1S_Equivalence_Checking.finite_rderivs",
     "finite
       {\<guillemotleft>rderivs ?\<Sigma> xs ?r\<guillemotright> |xs.
        True}",
     template_predicate
      (
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))
         )),
    ("WS1S_Equivalence_Checking.toplevel_summands_lderiv",
     "toplevel_summands (\<DD> ?\<Sigma> ?as ?r) =
      (UN s:toplevel_summands ?r.
          toplevel_summands (\<DD> ?\<Sigma> ?as s))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 3, template_var 0))))),
    ("WS1S_Equivalence_Checking.wf_word",
     "wf_word ?\<Sigma> ?n ?w =
      (?w : lists ((set o \<sigma> ?\<Sigma>) ?n))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lderiv_PLUS",
     "\<DD> ?\<Sigma> ?a (PLUS ?xs) = PLUS (map (\<DD> ?\<Sigma> ?a) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.rderiv_PLUS",
     "r\<DD> ?\<Sigma> ?a (PLUS ?xs) =
      PLUS (map (r\<DD> ?\<Sigma> ?a) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.ACI_norm_lderivs",
     "\<guillemotleft>lderivs ?\<Sigma> ?ws
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>lderivs ?\<Sigma> ?ws ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.ACI_norm_rderivs",
     "\<guillemotleft>rderivs ?\<Sigma> ?w
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>rderivs ?\<Sigma> ?w ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lderivs_Atom",
     "lderivs ?\<Sigma> ?xs (Atom ?as) : {Zero, One, Atom ?as}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2)),
                 template_var 1),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 3, template_hole 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 0))))
         )),
    ("WS1S_Equivalence_Checking.samequot_termination",
     "while_option fst (r\<DD>_add ?\<Sigma> ?as)
       (True, [\<guillemotleft>?r\<guillemotright>]) =
      None ==>
      False",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1)),
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0)),
                template_hole 2))),
          template_hole 1)],
       template_predicate (template_hole 0))),
    ("WS1S_Equivalence_Checking.Zero_toplevel_inters",
     "Zero : toplevel_inters ?r ==> lang ?\<Sigma> ?n ?r = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app (template_hole 8, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 1))),
                 template_hole 2),
               template_hole 1),
             template_var 0),
           template_var 2),
         template_hole 0))),
    ("WS1S_Equivalence_Checking.wf_lderivs",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (lderivs ?\<Sigma> ?ws ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 3)),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_rderivs",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (rderivs ?\<Sigma> ?ws ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 3)),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_lderivs_dual",
     "wf_dual ?\<Sigma> ?n ?r ==>
      wf_dual ?\<Sigma> ?n (lderivs_dual ?\<Sigma> ?ws ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3)),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 3)),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.finite_rderivs_same",
     "finite
       {\<guillemotleft>rderivs ?\<Sigma> (replicate m ?a)
                         ?r\<guillemotright> |
        m. True}",
     template_predicate
      (
         template_app
          (template_hole 10, template_app (template_hole 9, t_empty))
         )),
    ("WS1S_Equivalence_Checking.star_singleton",
     "star {[?x]} = {replicate m ?x |m. True}",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 0),
               template_hole 7)),
           template_hole 6)),
       template_app (template_hole 5, t_empty))),
    ("WS1S_Equivalence_Checking.wf_INTERSECT",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (INTERSECT ?xs) =
      (ALL r:set ?xs. WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.wf_PLUS",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (PLUS ?xs) =
      (ALL r:set ?xs. WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.wf_TIMES",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (TIMES ?xs) =
      (ALL r:set ?xs. WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.ACI_norm_biderivs",
     "\<guillemotleft>biderivs ?\<Sigma> ?w1.0 ?w2.0
                       \<guillemotleft>?r\<guillemotright>\<guillemotright> =
      \<guillemotleft>biderivs ?\<Sigma> ?w1.0 ?w2.0 ?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lderiv_preserves",
     "\<guillemotleft>?r\<guillemotright> =
      \<guillemotleft>?s\<guillemotright> ==>
      \<guillemotleft>\<DD> ?\<Sigma> ?as ?r\<guillemotright> =
      \<guillemotleft>\<DD> ?\<Sigma> ?as ?s\<guillemotright>",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2))))),
    ("WS1S_Equivalence_Checking.wf_biderivs",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n
       (biderivs ?\<Sigma> ?w1.0 ?w2.0 ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 4)),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 4)),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app (template_hole 0, template_var 4)),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("WS1S_Equivalence_Checking.wf_word_replicate",
     "?a : (set o \<sigma> ?\<Sigma>) ?n ==>
      wf_word ?\<Sigma> ?n (replicate ?m ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 2)),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app (template_hole 2, template_var 2))),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("WS1S_Equivalence_Checking.project",
     "?a : (set o \<sigma> ?\<Sigma>) (Suc ?n) ==>
      \<pi> ?a : (set o \<sigma> ?\<Sigma>) ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 1)),
                template_app (template_hole 1, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 1)),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.lderivs_alt",
     "\<guillemotleft>lderivs ?\<Sigma> ?w ?r\<guillemotright> =
      fold (%a r. \<guillemotleft>\<DD> ?\<Sigma> a r\<guillemotright>) ?w
       \<guillemotleft>?r\<guillemotright>",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_app (template_hole 5, template_var 0)))),
    ("WS1S_Equivalence_Checking.finite_ACI_norm_toplevel_summands",
     "finite ?B ==>
      finite
       {?f \<guillemotleft>s\<guillemotright> |s.
        toplevel_summands s <= ?B}",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))
           ))),
    ("WS1S_Equivalence_Checking.wf_word_map_project",
     "wf_word ?\<Sigma> (Suc ?n) ?ws ==>
      wf_word ?\<Sigma> ?n (map \<pi> ?ws)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app (template_hole 3, template_var 2))),
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 2))),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.finite_fold_lderiv",
     "finite
       {fold (%a r. \<guillemotleft>\<DD> ?\<Sigma> a r\<guillemotright>) w
         \<guillemotleft>?s\<guillemotright> |
        w. True}",
     template_predicate
      (
         template_app
          (template_hole 8, template_app (template_hole 7, t_empty))
         )),
    ("WS1S_Equivalence_Checking.ACI_norm_lang",
     "lang ?\<Sigma> ?n \<guillemotleft>?r\<guillemotright> =
      lang ?\<Sigma> ?n ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 2))),
               template_hole 2),
             template_hole 1),
           template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 2))),
               template_hole 2),
             template_hole 1),
           template_var 1),
         template_var 0))),
    ("WS1S_Equivalence_Checking.toplevel_summands_ACI_norm_lderiv",
     "(UN a:toplevel_summands ?r.
          toplevel_summands
           \<guillemotleft>\<DD> ?\<Sigma> ?as
                            \<guillemotleft>a\<guillemotright>\<guillemotright>) =
      toplevel_summands
       \<guillemotleft>\<DD> ?\<Sigma> ?as
                        \<guillemotleft>?r\<guillemotright>\<guillemotright>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_app (template_hole 1, template_var 0)))))),
    ("WS1S_Equivalence_Checking.wf_dual_PLUS_dual",
     "wf_dual ?\<Sigma> ?n (CoPLUS_dual ?b ?xs) =
      (ALL r:set ?xs. wf_dual ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 2, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.rderivs_append",
     "rderivs ?\<Sigma> (?ws @ ?ws') ?r =
      rderivs ?\<Sigma> ?ws' (rderivs ?\<Sigma> ?ws ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lderivs_PLUS",
     "lderivs ?\<Sigma> ?xs (PLUS ?ys) =
      PLUS (map (lderivs ?\<Sigma> ?xs) ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lderivs_snoc",
     "lderivs ?\<Sigma> (?ws @ [?w]) ?r =
      \<DD> ?\<Sigma> ?w (lderivs ?\<Sigma> ?ws ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.rderivs_snoc",
     "rderivs ?\<Sigma> (?ws @ [?w]) ?r =
      r\<DD> ?\<Sigma> ?w (rderivs ?\<Sigma> ?ws ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app (template_hole 4, template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.wf_PREFIX",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (PREFIX ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 2)),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_app (template_hole 2, template_var 2))),
                     template_hole 1),
                   template_app (template_hole 0, template_var 2)),
                 template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_SUFFIX",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (SUFFIX ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 2)),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_app (template_hole 2, template_var 2))),
                     template_hole 1),
                   template_app (template_hole 0, template_var 2)),
                 template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_inInter",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inInter ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_inPlus",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inPlus ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_inTimes",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (inTimes ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_pnInter",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (pnInter ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_pnPlus",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (pnPlus ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.wf_pnTimes",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (pnTimes ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.finite_lderivs_wf",
     "finite
       {\<guillemotleft>lderivs ?\<Sigma> w ?r\<guillemotright> |w.
        wf_word ?\<Sigma> ?n w}",
     template_predicate
      (
         template_app
          (template_hole 12, template_app (template_hole 11, t_empty))
         )),
    ("WS1S_Equivalence_Checking.lang_REV",
     "lang ?\<Sigma> ?n (REV ?r) = rev ` lang ?\<Sigma> ?n ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_hole 4),
             template_hole 3),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 5, template_var 2))),
                 template_hole 4),
               template_hole 3),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lderivs_Inter",
     "lderivs ?\<Sigma> ?xs (rexp.Inter ?r ?s) =
      rexp.Inter (lderivs ?\<Sigma> ?xs ?r) (lderivs ?\<Sigma> ?xs ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lderivs_Plus",
     "lderivs ?\<Sigma> ?xs (Plus ?r ?s) =
      Plus (lderivs ?\<Sigma> ?xs ?r) (lderivs ?\<Sigma> ?xs ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.wf_flatten_INTERSECT",
     "finite ?X ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n
       (INTERSECT (sorted_list_of_set ?X)) =
      (ALL r:?X. WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_app (template_hole 1, template_var 2))),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("WS1S_Equivalence_Checking.wf_flatten_PLUS",
     "finite ?X ==>
      WS1S_Equivalence_Checking.wf ?\<Sigma> ?n
       (PLUS (sorted_list_of_set ?X)) =
      (ALL r:?X. WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2),
             template_app (template_hole 1, template_var 2))),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("WS1S_Equivalence_Checking.toplevel_summands_PLUS",
     "?xs ~= [] ==>
      toplevel_summands (PLUS (map ?f ?xs)) =
      (UN r:set ?xs. toplevel_summands (?f r))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 9))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_hole 5),
               template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("WS1S_Equivalence_Checking.wf_dual_pnCoPlus",
     "[| wf_dual ?\<Sigma> ?n ?r; wf_dual ?\<Sigma> ?n ?s |]
      ==> wf_dual ?\<Sigma> ?n (pnCoPlus ?b ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 4)),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 4)),
               template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_pnCoTimes",
     "[| wf_dual ?\<Sigma> ?n ?r; wf_dual ?\<Sigma> ?n ?s |]
      ==> wf_dual ?\<Sigma> ?n (pnCoTimes ?b ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 4)),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 4)),
               template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.lang\<^sub>W\<^sub>S\<^sub>1\<^sub>S_rexp_of_norm",
     "wf_formula ?n (WS1S_Normalization.norm ?\<phi>) ==>
      \<Phi>.lang\<^sub>W\<^sub>S\<^sub>1\<^sub>S ?n ?\<phi> =
      lang enum_class.enum ?n
       (rexp_of ?n (WS1S_Normalization.norm ?\<phi>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_hole 7))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 10, template_var 0)))))),
    ("WS1S_Equivalence_Checking.lang\<^sub>W\<^sub>S\<^sub>1\<^sub>S_rexp_of'_norm",
     "wf_formula ?n (WS1S_Normalization.norm ?\<phi>) ==>
      \<Phi>.lang\<^sub>W\<^sub>S\<^sub>1\<^sub>S ?n ?\<phi> =
      lang enum_class.enum ?n
       (rexp_of' ?n (WS1S_Normalization.norm ?\<phi>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_hole 7))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 10, template_var 0)))))),
    ("WS1S_Equivalence_Checking.lang\<^sub>W\<^sub>S\<^sub>1\<^sub>S_rexp_of''_norm",
     "wf_formula ?n (WS1S_Normalization.norm ?\<phi>) ==>
      \<Phi>.lang\<^sub>W\<^sub>S\<^sub>1\<^sub>S ?n ?\<phi> =
      lang enum_class.enum ?n
       (rexp_of'' ?n (WS1S_Normalization.norm ?\<phi>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_hole 7))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 10, template_var 0)))))),
    ("WS1S_Equivalence_Checking.lang_subset_lists",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n ?r <= lists ((set o \<sigma> ?\<Sigma>) ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, template_var 2)),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_dual_subset_lists",
     "wf_dual ?\<Sigma> ?n ?r ==>
      lang_dual ?\<Sigma> ?n ?r <= lists ((set o \<sigma> ?\<Sigma>) ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, template_var 2)),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.ACI_norm_PLUS",
     "list_all2
       (%r s. \<guillemotleft>r\<guillemotright> =
              \<guillemotleft>s\<guillemotright>)
       ?xs ?ys ==>
      \<guillemotleft>PLUS ?xs\<guillemotright> =
      \<guillemotleft>PLUS ?ys\<guillemotright>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, t_empty), template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.invar_rderiv_and_add_step",
     "[| invar_rderiv_and_add ?\<Sigma> ?as ?r ?brs; fst ?brs |]
      ==> invar_rderiv_and_add ?\<Sigma> ?as ?r
           (r\<DD>_add ?\<Sigma> ?as ?brs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app (template_hole 2, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app (template_hole 2, template_var 3)),
                 template_var 2),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.length_subset_card",
     "[| finite ?X; distinct (?x # ?xs); set (?x # ?xs) <= ?X |]
      ==> length ?xs < card ?X",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)),
          template_var 2)],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 2)))),
    ("WS1S_Equivalence_Checking.toplevel_inters_lang_INT",
     "lang ?\<Sigma> ?n ?s =
      \<Inter> (lang ?\<Sigma> ?n ` toplevel_inters ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_hole 4),
             template_hole 3),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.toplevel_summands_lang_UN",
     "lang ?\<Sigma> ?n ?s =
      \<Union> (lang ?\<Sigma> ?n ` toplevel_summands ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2))),
               template_hole 4),
             template_hole 3),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.wf_samequot_exec",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         ?as : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n
           (\<QQ> ?\<Sigma> ?as ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app (template_hole 1, template_var 3)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.wf_word_append",
     "wf_word ?\<Sigma> ?n (?ws @ ?vs) =
      (wf_word ?\<Sigma> ?n ?ws & wf_word ?\<Sigma> ?n ?vs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_var 3))),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app (template_hole 2, template_var 3))),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app (template_hole 2, template_var 3))),
             template_var 2),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.toplevel_inters_lang",
     "?r : toplevel_inters ?s ==>
      lang ?\<Sigma> ?n ?s <= lang ?\<Sigma> ?n ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 3)))),
    ("WS1S_Equivalence_Checking.toplevel_summands_lang",
     "?r : toplevel_summands ?s ==>
      lang ?\<Sigma> ?n ?r <= lang ?\<Sigma> ?n ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 1))),
                 template_hole 1),
               template_hole 0),
             template_var 0),
           template_var 2)))),
    ("WS1S_Equivalence_Checking.wf_lang_wf_word",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      ALL w:lang ?\<Sigma> ?n ?r. wf_word ?\<Sigma> ?n w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_app (template_hole 3, template_var 2))),
                       template_hole 2),
                     template_hole 1),
                   template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("WS1S_Equivalence_Checking.wf_dual_lang_dual_wf_word",
     "wf_dual ?\<Sigma> ?n ?r ==>
      ALL w:lang_dual ?\<Sigma> ?n ?r. wf_word ?\<Sigma> ?n w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_app (template_hole 3, template_var 2))),
                       template_hole 2),
                     template_hole 1),
                   template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("WS1S_Equivalence_Checking.lderiv_toplevel_summands_Zero",
     "[| lderivs ?\<Sigma> ?xs (Pr ?r) = Pr ?s;
         toplevel_summands ?r = {Zero} |]
      ==> toplevel_summands ?s = {Zero}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 8, template_hole 7),
                template_app (template_hole 6, template_var 3)),
              template_var 2),
            template_app (template_hole 5, template_var 1)),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_hole 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("WS1S_Equivalence_Checking.lang_PLUS",
     "lang ?\<Sigma> ?n (PLUS ?xs) =
      \<Union> (lang ?\<Sigma> ?n ` set ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app (template_hole 8, template_var 2))),
               template_hole 7),
             template_hole 6),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.wf_word_snoc",
     "wf_word ?\<Sigma> ?n (?ws @ [?w]) =
      (?w : (set o \<sigma> ?\<Sigma>) ?n & wf_word ?\<Sigma> ?n ?ws)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app (template_hole 5, template_var 3))),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_var 3)),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_var 3))),
             template_var 2),
           template_var 1)))),
    ("WS1S_Equivalence_Checking.toplevel_inters_in_lang",
     "(?w : lang ?\<Sigma> ?n ?s) =
      (ALL r:toplevel_inters ?s. ?w : lang ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.toplevel_summands_in_lang",
     "(?w : lang ?\<Sigma> ?n ?s) =
      (EX r:toplevel_summands ?s. ?w : lang ?\<Sigma> ?n r)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("WS1S_Equivalence_Checking.lang_inorm",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (inorm ?r) = lang ?\<Sigma> ?n ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lang_pnorm",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (pnorm ?r) = lang ?\<Sigma> ?n ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lang_dual_rexp_dual_of",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang_dual ?\<Sigma> ?n (rexp_dual_of ?r) = lang ?\<Sigma> ?n ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lang_dual_pnorm_dual",
     "wf_dual ?\<Sigma> ?n ?r ==>
      lang_dual ?\<Sigma> ?n (pnorm_dual ?r) = lang_dual ?\<Sigma> ?n ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 2))),
                 template_hole 2),
               template_hole 1),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lang_TIMES",
     "lang ?\<Sigma> ?n (TIMES ?xs) =
      foldr (@@) (map (lang ?\<Sigma> ?n) ?xs) {[]}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app (template_hole 11, template_var 2))),
               template_hole 10),
             template_hole 9),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 8, template_hole 7),
             template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_app (template_hole 11, template_var 2))),
                     template_hole 10),
                   template_hole 9),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("WS1S_Equivalence_Checking.lang_inNot",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (inNot ?r) = lang ?\<Sigma> ?n (rexp.Not ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_inStar",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (inStar ?r) = lang ?\<Sigma> ?n (Star ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_pnNot",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (pnNot ?r) = lang ?\<Sigma> ?n (rexp.Not ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.wf_samequot",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         ?a : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n
           (samequot ?\<Sigma> ?a ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app (template_hole 5, template_var 3)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app (template_hole 2, template_var 3)),
                   template_app (template_hole 1, template_hole 0)),
                 template_var 0),
               template_var 1))
           ))),
    ("WS1S_Equivalence_Checking.samequot_exec_samequot",
     "lang ?\<Sigma> ?n (\<QQ> ?\<Sigma> ?as ?r) =
      lang ?\<Sigma> ?n (samequot ?\<Sigma> ?as ?r)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app (template_hole 7, template_var 3))),
               template_hole 6),
             template_hole 5),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app (template_hole 7, template_var 3))),
               template_hole 6),
             template_hole 5),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 5),
                 template_app (template_hole 2, template_var 3)),
               template_app (template_hole 1, template_hole 0)),
             template_var 1),
           template_var 0)))),
    ("WS1S_Equivalence_Checking.lang_dual_PLUS_dual",
     "lang_dual ?\<Sigma> ?n (CoPLUS_dual True ?xs) =
      \<Union> (lang_dual ?\<Sigma> ?n ` set ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_app (template_hole 9, template_var 2))),
               template_hole 8),
             template_hole 7),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)),
             template_app (template_hole 3, template_hole 4)),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_inPr",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> (Suc ?n) ?r ==>
      lang ?\<Sigma> ?n (inPr ?r) = lang ?\<Sigma> ?n (Pr ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_pnPr",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> (Suc ?n) ?r ==>
      lang ?\<Sigma> ?n (pnPr ?r) = lang ?\<Sigma> ?n (Pr ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_app (template_hole 9, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 2))),
                 template_hole 3),
               template_hole 2),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("WS1S_Equivalence_Checking.embed",
     "?a : (set o \<sigma> ?\<Sigma>) ?n ==>
      (?b : set (\<epsilon> ?\<Sigma> ?a)) =
      (?b : (set o \<sigma> ?\<Sigma>) (Suc ?n) & \<pi> ?b = ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 2)),
                template_var 1))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 9, template_var 0),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 3)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 2)),
                     template_app (template_hole 2, template_var 1)))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 3))
             )))),
    ("WS1S_Equivalence_Checking.lang_lderiv_rderiv",
     "lang ?\<Sigma> ?n (\<DD> ?\<Sigma> ?a (r\<DD> ?\<Sigma> ?b ?r)) =
      lang ?\<Sigma> ?n (r\<DD> ?\<Sigma> ?b (\<DD> ?\<Sigma> ?a ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 4))),
               template_hole 3),
             template_hole 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 4))),
               template_hole 3),
             template_hole 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_rderiv_lderiv",
     "lang ?\<Sigma> ?n (r\<DD> ?\<Sigma> ?a (\<DD> ?\<Sigma> ?b ?r)) =
      lang ?\<Sigma> ?n (\<DD> ?\<Sigma> ?b (r\<DD> ?\<Sigma> ?a ?r))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 4))),
               template_hole 3),
             template_hole 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app (template_hole 4, template_var 4))),
               template_hole 3),
             template_hole 2),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_flatten_PLUS",
     "finite ?X ==>
      lang ?\<Sigma> ?n (PLUS (sorted_list_of_set ?X)) =
      \<Union> (lang ?\<Sigma> ?n ` ?X)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 1))),
                 template_hole 7),
               template_hole 6),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_app (template_hole 2, template_var 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("WS1S_Equivalence_Checking.lang_dual_pnCoPr",
     "wf_dual ?\<Sigma> (Suc ?n) ?r ==>
      lang_dual ?\<Sigma> ?n (pnCoPr ?b ?r) =
      lang_dual ?\<Sigma> ?n (CoPr ?b ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_app (template_hole 9, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.toplevel_inters_Full",
     "[| toplevel_inters ?r = {Full};
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r |]
      ==> lang ?\<Sigma> ?n ?r = lists ((set o \<sigma> ?\<Sigma>) ?n)",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 2),
          template_app
           (template_app (template_hole 12, template_hole 11),
            template_hole 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 1)),
                template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app (template_hole 3, template_var 1))),
                 template_hole 2),
               template_hole 1),
             template_var 0),
           template_var 2),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_app (template_hole 3, template_var 1)),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.samequot_wf",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         while_option fst (r\<DD>_add ?\<Sigma> ?as)
          (True, [\<guillemotleft>?r\<guillemotright>]) =
         Some (?b, ?rs) |]
      ==> WS1S_Equivalence_Checking.wf ?\<Sigma> ?n (PLUS ?rs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 5)),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_hole 10),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_var 2)),
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 3)),
                template_hole 4))),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 14,
                 template_app (template_hole 13, template_var 5)),
               template_var 4),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0))
           ))),
    ("WS1S_Equivalence_Checking.rderivs_replicate_mult",
     "[| \<guillemotleft>rderivs ?\<Sigma> (replicate ?i ?as)
                          ?r\<guillemotright> =
         \<guillemotleft>?r\<guillemotright>;
         0 < ?i |]
      ==> \<guillemotleft>rderivs ?\<Sigma> (replicate (?m * ?i) ?as)
                           ?r\<guillemotright> =
          \<guillemotleft>?r\<guillemotright>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 4)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)),
          template_app (template_hole 7, template_var 1)),
        template_inequation (less_than, template_hole 1, template_var 3)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_app (template_hole 7, template_var 1)))),
    ("WS1S_Equivalence_Checking.lang_dual_CoNot",
     "wf_dual ?\<Sigma> ?n ?r ==>
      lang_dual ?\<Sigma> ?n (CoNot ?r) =
      lists ((set o \<sigma> ?\<Sigma>) ?n) - lang_dual ?\<Sigma> ?n ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 5, template_var 2))),
                 template_hole 4),
               template_hole 3),
             template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 2)),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 2))),
                   template_hole 4),
                 template_hole 3),
               template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lderivs_final",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?ws |]
      ==> final (lderivs ?\<Sigma> ?ws ?r) = (?ws : lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_var 3))),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 3)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_app (template_hole 8, template_var 3))),
                   template_hole 0),
                 template_hole 4),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lderivs_dual_final_dual",
     "[| wf_dual ?\<Sigma> ?n ?r; wf_word ?\<Sigma> ?n ?ws |]
      ==> final_dual (lderivs_dual ?\<Sigma> ?ws ?r) =
          (?ws : lang_dual ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_var 3))),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 3)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 10, template_hole 9),
                       template_app (template_hole 8, template_var 3))),
                   template_hole 0),
                 template_hole 4),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_PREFIX",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (PREFIX ?\<Sigma> ?n ?r) =
      Prefix (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 5, template_var 2))),
                 template_hole 4),
               template_hole 3),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 2))),
                   template_hole 3),
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 2))),
                   template_hole 4),
                 template_hole 3),
               template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_SUFFIX",
     "WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r ==>
      lang ?\<Sigma> ?n (SUFFIX ?\<Sigma> ?n ?r) =
      Suffix (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app (template_hole 5, template_var 2))),
                 template_hole 4),
               template_hole 3),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 2))),
                   template_hole 3),
                 template_app (template_hole 1, template_var 2)),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 2))),
                   template_hole 4),
                 template_hole 3),
               template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.rderivs_final",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?w |]
      ==> final (rderivs ?\<Sigma> ?w ?r) =
          (rev ?w : lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_app (template_hole 9, template_var 3))),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 3)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_app (template_hole 9, template_var 3))),
                   template_hole 0),
                 template_hole 5),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_INTERSECT",
     "lang ?\<Sigma> ?n (INTERSECT ?xs) =
      (if ?xs = [] then lists ((set o \<sigma> ?\<Sigma>) ?n)
       else \<Inter> (lang ?\<Sigma> ?n ` set ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_hole 13),
                        template_app (template_hole 12, template_var 2))),
                    template_hole 11),
                  template_hole 10),
                template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_hole 7),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 14, template_hole 13),
                     template_app (template_hole 12, template_var 2)),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("WS1S_Equivalence_Checking.lang_inInter",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> lang ?\<Sigma> ?n (inInter ?r ?s) =
          lang ?\<Sigma> ?n (rexp.Inter ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_inPlus",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> lang ?\<Sigma> ?n (inPlus ?r ?s) =
          lang ?\<Sigma> ?n (Plus ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_inTimes",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> lang ?\<Sigma> ?n (inTimes ?r ?s) =
          lang ?\<Sigma> ?n (Times ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_pnInter",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> lang ?\<Sigma> ?n (pnInter ?r ?s) =
          lang ?\<Sigma> ?n (rexp.Inter ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_pnPlus",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> lang ?\<Sigma> ?n (pnPlus ?r ?s) =
          lang ?\<Sigma> ?n (Plus ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_pnTimes",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> lang ?\<Sigma> ?n (pnTimes ?r ?s) =
          lang ?\<Sigma> ?n (Times ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("WS1S_Equivalence_Checking.lang_dual_CoPLUS_dual",
     "lang_dual ?\<Sigma> ?n (CoPLUS_dual False ?xs) =
      (if ?xs = [] then lists ((set o \<sigma> ?\<Sigma>) ?n)
       else \<Inter> (lang_dual ?\<Sigma> ?n ` set ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_app (template_hole 13, template_var 2))),
                    template_hole 12),
                  template_hole 11),
                template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 8)),
                  template_app (template_hole 7, template_hole 8)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 15, template_hole 14),
                     template_app (template_hole 13, template_var 2)),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("WS1S_Equivalence_Checking.in_lang_INTERSECT",
     "wf_word ?\<Sigma> ?n ?w ==>
      (?w : lang ?\<Sigma> ?n (INTERSECT ?xs)) =
      (ALL r:set ?xs. ?w : lang ?\<Sigma> ?n r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 10, template_var 3))),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_app (template_hole 10, template_var 3))),
                   template_hole 6),
                 template_hole 5),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           t_empty)))),
    ("WS1S_Equivalence_Checking.toplevel_summands_lderivs_Pr",
     "[| ?xs ~= []; lderivs ?\<Sigma> ?xs (Pr ?r) = Pr ?s |]
      ==> toplevel_summands ?s <= {Zero} |
          toplevel_summands ?s
          <= (UN xs. toplevel_summands (lderivs ?\<Sigma> xs ?r))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 14)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 12, template_hole 11),
                template_app (template_hole 10, template_var 2)),
              template_var 3),
            template_app (template_hole 9, template_var 1)),
          template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_hole 0))))
           ))),
    ("WS1S_Equivalence_Checking.lang_dual_pnCoPlus",
     "[| wf_dual ?\<Sigma> ?n ?r; wf_dual ?\<Sigma> ?n ?s |]
      ==> lang_dual ?\<Sigma> ?n (pnCoPlus ?b ?r ?s) =
          lang_dual ?\<Sigma> ?n (CoPlus ?b ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 4)),
                template_var 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 4))),
                 template_hole 3),
               template_hole 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 4))),
                 template_hole 3),
               template_hole 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_dual_pnCoTimes",
     "[| wf_dual ?\<Sigma> ?n ?r; wf_dual ?\<Sigma> ?n ?s |]
      ==> lang_dual ?\<Sigma> ?n (pnCoTimes ?b ?r ?s) =
          lang_dual ?\<Sigma> ?n (CoTimes ?b ?r ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 4)),
                template_var 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 4))),
                 template_hole 3),
               template_hole 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app (template_hole 4, template_var 4))),
                 template_hole 3),
               template_hole 2),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_samequot_exec",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         ?as : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang ?\<Sigma> ?n (\<QQ> ?\<Sigma> ?as ?r) =
          SAMEQUOT ?as (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 3)),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app (template_hole 6, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 3))),
                   template_hole 3),
                 template_hole 2),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_rderiv",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         ?as : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang ?\<Sigma> ?n (r\<DD> ?\<Sigma> ?as ?r) =
          rQuot ?as (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 3)),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app (template_hole 6, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 3))),
                   template_hole 3),
                 template_hole 2),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_lderiv",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         ?w : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang ?\<Sigma> ?n (\<DD> ?\<Sigma> ?w ?r) =
          lQuot ?w (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 3)),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app (template_hole 6, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 3))),
                   template_hole 3),
                 template_hole 2),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_dual_lderiv_dual",
     "[| wf_dual ?\<Sigma> ?n ?r; ?w : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang_dual ?\<Sigma> ?n (Co\<DD> ?\<Sigma> ?w ?r) =
          lQuot ?w (lang_dual ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 6, template_var 3)),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app (template_hole 6, template_var 3))),
                 template_hole 3),
               template_hole 2),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 3))),
                   template_hole 3),
                 template_hole 2),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lQuot_map_project",
     "[| ?as : (set o \<sigma> ?\<Sigma>) ?n;
         ?A <= lists ((set o \<sigma> ?\<Sigma>) (Suc ?n)) |]
      ==> lQuot ?as (map \<pi> ` ?A) =
          map \<pi> ` (UN a:set (\<epsilon> ?\<Sigma> ?as). lQuot a ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app (template_hole 11, template_var 2)),
                template_var 1))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_app (template_hole 13, template_hole 12),
                template_app (template_hole 11, template_var 2)),
              template_app (template_hole 8, template_var 1))))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)))))))),
    ("WS1S_Equivalence_Checking.rderivs_replicate_mod",
     "[| \<guillemotleft>rderivs ?\<Sigma> (replicate ?i ?as)
                          ?r\<guillemotright> =
         \<guillemotleft>?r\<guillemotright>;
         0 < ?i |]
      ==> \<guillemotleft>rderivs ?\<Sigma> (replicate ?m ?as)
                           ?r\<guillemotright> =
          \<guillemotleft>rderivs ?\<Sigma> (replicate (?m mod ?i) ?as)
                           ?r\<guillemotright>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 4)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)),
          template_app (template_hole 7, template_var 1)),
        template_inequation (less_than, template_hole 1, template_var 3)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 4)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_var 2)),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.toplevel_summands_lderivs_Star",
     "toplevel_summands (lderivs ?\<Sigma> ?xs (Star ?r))
      <= {Star ?r} Un
         {Times (lderivs ?\<Sigma> ys ?r) (Star ?r) |ys.
          EX zs. ys ~= [] & zs @ ys = ?xs}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 16,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 15, template_hole 14),
               template_app (template_hole 13, template_var 2)),
             template_var 1),
           template_app (template_hole 12, template_var 0))),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 12, template_var 0)),
             template_hole 9)),
         template_app (template_hole 8, t_empty)))),
    ("WS1S_Equivalence_Checking.lang_rderivs",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?w |]
      ==> lang ?\<Sigma> ?n (rderivs ?\<Sigma> ?w ?r) =
          rQuots ?w (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 3))),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app (template_hole 7, template_var 3))),
                 template_hole 4),
               template_hole 3),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 3),
                 template_app (template_hole 1, template_var 3)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_app (template_hole 7, template_var 3))),
                   template_hole 4),
                 template_hole 3),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_lderivs",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?ws |]
      ==> lang ?\<Sigma> ?n (lderivs ?\<Sigma> ?ws ?r) =
          lQuots ?ws (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 3))),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app (template_hole 7, template_var 3))),
                 template_hole 4),
               template_hole 3),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 3),
                 template_app (template_hole 1, template_var 3)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_app (template_hole 7, template_var 3))),
                   template_hole 4),
                 template_hole 3),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lang_dual_lderivs_dual",
     "[| wf_dual ?\<Sigma> ?n ?r; wf_word ?\<Sigma> ?n ?ws |]
      ==> lang_dual ?\<Sigma> ?n (lderivs_dual ?\<Sigma> ?ws ?r) =
          lQuots ?ws (lang_dual ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 3))),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app (template_hole 7, template_var 3))),
                 template_hole 4),
               template_hole 3),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_hole 3),
                 template_app (template_hole 1, template_var 3)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_app (template_hole 7, template_var 3))),
                   template_hole 4),
                 template_hole 3),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.rderivs_replicate_mult_rest",
     "[| \<guillemotleft>rderivs ?\<Sigma> (replicate ?i ?as)
                          ?r\<guillemotright> =
         \<guillemotleft>?r\<guillemotright>;
         ?k < ?i |]
      ==> \<guillemotleft>rderivs ?\<Sigma> (replicate (?m * ?i + ?k) ?as)
                           ?r\<guillemotright> =
          \<guillemotleft>rderivs ?\<Sigma> (replicate ?k ?as)
                           ?r\<guillemotright>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 5)),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_var 2)),
          template_app (template_hole 7, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 4)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 5)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 0),
                         template_var 4)),
                     template_var 1)),
                 template_var 3)),
             template_var 2)),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app (template_hole 4, template_var 5)),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 3)),
             template_var 2))))),
    ("WS1S_Equivalence_Checking.toplevel_summands_lderivs_Star_nonempty",
     "?xs ~= [] ==>
      toplevel_summands (lderivs ?\<Sigma> ?xs (Star ?r))
      <= {Times (lderivs ?\<Sigma> ys ?r) (Star ?r) |ys.
          EX zs. ys ~= [] & zs @ ys = ?xs}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 12))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app (template_hole 7, template_var 1)),
               template_var 2),
             template_app (template_hole 6, template_var 0))),
         template_app (template_hole 5, t_empty)))),
    ("WS1S_Equivalence_Checking.lang_samequot",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         ?a : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang ?\<Sigma> ?n (samequot ?\<Sigma> ?a ?r) =
          SAMEQUOT ?a (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app (template_hole 9, template_var 3)),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_app (template_hole 9, template_var 3))),
                 template_hole 6),
               template_hole 5),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_hole 5),
                   template_app (template_hole 3, template_var 3)),
                 template_app (template_hole 2, template_hole 1)),
               template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 11, template_hole 10),
                       template_app (template_hole 9, template_var 3))),
                   template_hole 6),
                 template_hole 5),
               template_var 2),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.lderivs_Pr",
     "{lderivs ?\<Sigma> xs (Pr ?r) |xs. True}
      <= {Pr s |s.
          toplevel_summands s <= {Zero} |
          toplevel_summands s
          <= (UN xs. toplevel_summands (lderivs ?\<Sigma> xs ?r))}",
     template_inequation
      (less_equals, template_app (template_hole 17, t_empty),
       template_app (template_hole 17, t_empty))),
    ("WS1S_Equivalence_Checking.lang_flatten_INTERSECT_finite",
     "finite ?X ==>
      (?w : lang ?\<Sigma> ?n (INTERSECT (sorted_list_of_set ?X))) =
      (if ?X = {} then ?w : lists ((set o \<sigma> ?\<Sigma>) ?n)
       else ALL r:?X. ?w : lang ?\<Sigma> ?n r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 3))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 15, template_var 2),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_app
                             (template_hole 13, template_hole 12),
                            template_app
                             (template_hole 11, template_var 1))),
                        template_hole 10),
                      template_hole 9),
                    template_var 0),
                  template_app
                   (template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_hole 6),
                    template_app (template_hole 5, template_var 3))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 15, template_var 2),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_app (template_hole 11, template_var 1)),
                       template_var 0)))),
               template_app
                (template_app (template_hole 0, template_var 3), t_empty))
             )))),
    ("WS1S_Equivalence_Checking.toplevel_summands_lderivs_Times",
     "toplevel_summands (lderivs ?\<Sigma> ?xs (Times ?r ?s))
      <= {Times (lderivs ?\<Sigma> ?xs ?r) ?s} Un
         {r'.
          EX ys zs.
             r' : toplevel_summands (lderivs ?\<Sigma> ys ?s) &
             ys ~= [] & zs @ ys = ?xs}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 15,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 14, template_hole 13),
               template_app (template_hole 12, template_var 3)),
             template_var 2),
           template_app
            (template_app (template_hole 11, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 14, template_hole 13),
                         template_app (template_hole 12, template_var 3)),
                       template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_hole 8)),
         template_app (template_hole 7, t_empty)))),
    ("WS1S_Equivalence_Checking.ACI_norm_lderivs_Pr",
     "ACI_norm ` {lderivs ?\<Sigma> xs (Pr ?r) |xs. True}
      <= {Pr Zero} Un
         {Pr \<guillemotleft>s\<guillemotright> |s.
          toplevel_summands s
          <= (UN xs.
                 toplevel_summands
                  \<guillemotleft>lderivs ?\<Sigma> xs
                                   ?r\<guillemotright>)}",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 19, template_hole 18),
         template_app (template_hole 17, t_empty)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 10, template_hole 6)),
             template_hole 5)),
         template_app (template_hole 17, t_empty)))),
    ("WS1S_Equivalence_Checking.biderivs_final",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?w1.0; wf_word ?\<Sigma> ?n ?w2.0 |]
      ==> final (biderivs ?\<Sigma> ?w1.0 ?w2.0 ?r) =
          (?w1.0 @ rev ?w2.0 : lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 10, template_var 4))),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_hole 11),
                    template_app (template_hole 10, template_var 4))),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 4)),
                 template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_app (template_hole 10, template_var 4))),
                   template_hole 0),
                 template_hole 6),
               template_var 3),
             template_var 2))))),
    ("WS1S_Equivalence_Checking.lang_flatten_INTERSECT",
     "[| finite ?X; ?X ~= {};
         ALL r:?X. WS1S_Equivalence_Checking.wf ?\<Sigma> ?n r |]
      ==> (?w : lang ?\<Sigma> ?n (INTERSECT (sorted_list_of_set ?X))) =
          (ALL r:?X. ?w : lang ?\<Sigma> ?n r)",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 3)),
        template_negation
         (template_equation (template_var 3, template_hole 15)),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_app (template_hole 6, template_var 2))),
                   template_hole 5),
                 template_hole 4),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_app (template_hole 0, template_var 3)))),
         template_app
          (template_app (template_hole 14, template_var 3), t_empty)))),
    ("WS1S_Equivalence_Checking.lang_biderivs",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?w1.0; wf_word ?\<Sigma> ?n ?w2.0 |]
      ==> lang ?\<Sigma> ?n (biderivs ?\<Sigma> ?w1.0 ?w2.0 ?r) =
          biQuots ?w1.0 ?w2.0 (lang ?\<Sigma> ?n ?r)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 4))),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 4))),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app (template_hole 7, template_var 4))),
                 template_hole 4),
               template_hole 3),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 3),
                   template_app (template_hole 1, template_var 4)),
                 template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_app (template_hole 7, template_var 4))),
                   template_hole 4),
                 template_hole 3),
               template_var 3),
             template_var 2))))),
    ("WS1S_Equivalence_Checking.rderivs_replicate_diff",
     "[| \<guillemotleft>rderivs ?\<Sigma> (replicate ?i ?as)
                          ?r\<guillemotright> =
         \<guillemotleft>rderivs ?\<Sigma> (replicate ?j ?as)
                          ?r\<guillemotright>;
         ?j < ?i |]
      ==> \<guillemotleft>rderivs ?\<Sigma> (replicate (?i - ?j) ?as)
                           (rderivs ?\<Sigma> (replicate ?j ?as)
                             ?r)\<guillemotright> =
          \<guillemotleft>rderivs ?\<Sigma> (replicate ?j ?as)
                           ?r\<guillemotright>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 4)),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_var 1)),
          template_app
           (template_hole 6,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 4)),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 2)),
              template_var 1))),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 4)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app (template_hole 3, template_var 4)),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 2)),
               template_var 1))),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app (template_hole 3, template_var 4)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_var 1))))),
    ("WS1S_Equivalence_Checking.samequot_soundness",
     "while_option fst (r\<DD>_add ?\<Sigma> ?as)
       (True, [\<guillemotleft>?r\<guillemotright>]) =
      Some (?b, ?rs) ==>
      lang ?\<Sigma> ?n (PLUS ?rs) =
      \<Union>
       (lang ?\<Sigma> ?n `
        {\<guillemotleft>rderivs ?\<Sigma> (replicate m ?as)
                          ?r\<guillemotright> |
         m. True})",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 27, template_hole 26),
              template_app
               (template_app (template_hole 25, template_var 5),
                template_var 4)),
            template_app
             (template_app (template_hole 24, template_hole 23),
              template_app
               (template_app
                 (template_hole 22,
                  template_app (template_hole 21, template_var 3)),
                template_hole 20))),
          template_app
           (template_hole 19,
            template_app
             (template_app (template_hole 24, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app (template_hole 16, template_hole 15),
                     template_app (template_hole 14, template_var 5))),
                 template_hole 13),
               template_hole 12),
             template_var 0),
           template_app
            (template_app
              (template_app (template_hole 11, template_hole 10),
               template_hole 9),
             template_var 1)),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_app (template_hole 14, template_var 5))),
                     template_hole 13),
                   template_hole 12),
                 template_var 0)),
             template_app (template_hole 6, t_empty)))))),
    ("WS1S_Equivalence_Checking.lang_lderiv_rderivs",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?w; ?a : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang ?\<Sigma> ?n (\<DD> ?\<Sigma> ?a (rderivs ?\<Sigma> ?w ?r)) =
          lang ?\<Sigma> ?n (rderivs ?\<Sigma> ?w (\<DD> ?\<Sigma> ?a ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_var 4))),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_app (template_hole 8, template_var 4)),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 4))),
                 template_hole 4),
               template_hole 3),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 3),
                   template_app (template_hole 0, template_var 4)),
                 template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 4))),
                 template_hole 4),
               template_hole 3),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 3),
                 template_app (template_hole 0, template_var 4)),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0),
               template_var 2)))))),
    ("WS1S_Equivalence_Checking.lang_rderiv_lderivs",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         wf_word ?\<Sigma> ?n ?w; ?a : (set o \<sigma> ?\<Sigma>) ?n |]
      ==> lang ?\<Sigma> ?n
           (r\<DD> ?\<Sigma> ?a (lderivs ?\<Sigma> ?w ?r)) =
          lang ?\<Sigma> ?n
           (lderivs ?\<Sigma> ?w (r\<DD> ?\<Sigma> ?a ?r))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 4)),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_app (template_hole 8, template_var 4))),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_app (template_hole 8, template_var 4)),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 4))),
                 template_hole 4),
               template_hole 3),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_hole 3),
                   template_app (template_hole 0, template_var 4)),
                 template_var 1),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_app (template_hole 8, template_var 4))),
                 template_hole 4),
               template_hole 3),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_hole 3),
                 template_app (template_hole 0, template_var 4)),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0),
               template_var 2)))))),
    ("WS1S_Equivalence_Checking.lang_eq_ext",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> (lang ?\<Sigma> ?n ?r = lang ?\<Sigma> ?n ?s) =
          (ALL w:lists ((set o \<sigma> ?\<Sigma>) ?n).
              (w : lang ?\<Sigma> ?n ?r) = (w : lang ?\<Sigma> ?n ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_app (template_hole 5, template_var 3))),
                     template_hole 4),
                   template_hole 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app (template_hole 5, template_var 3))),
                   template_hole 4),
                 template_hole 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, template_var 3)),
                 template_var 2))),
           t_empty)))),
    ("WS1S_Equivalence_Checking.lang_eq_ext_Nil_fold_Deriv",
     "[| WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?r;
         WS1S_Equivalence_Checking.wf ?\<Sigma> ?n ?s |]
      ==> (lang ?\<Sigma> ?n ?r = lang ?\<Sigma> ?n ?s) =
          (ALL (K, L)
               :{(fold lQuot w (lang ?\<Sigma> ?n ?r),
                  fold lQuot w (lang ?\<Sigma> ?n ?s)) |
                 w. w : lists ((set o \<sigma> ?\<Sigma>) ?n)}.
              ([] : K) = ([] : L))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 21,
                  template_app (template_hole 20, template_var 3)),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app (template_hole 16, template_hole 15),
                         template_app (template_hole 14, template_var 3))),
                     template_hole 13),
                   template_hole 12),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app (template_hole 16, template_hole 15),
                       template_app (template_hole 14, template_var 3))),
                   template_hole 13),
                 template_hole 12),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_app (template_hole 1, t_empty)))))]
