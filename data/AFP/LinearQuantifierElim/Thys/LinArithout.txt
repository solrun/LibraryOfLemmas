Loading theory "HOL-Library.FuncSet" (required by "Draft.LinArithMoreTemplates" via "Draft.LinArith" via "Draft.QE" via "Draft.Logic")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.ListVector" (required by "Draft.LinArithMoreTemplates" via "Draft.LinArith")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.119s elapsed time, 0.498s cpu time, 0.044s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order:
  "(%p. length (snd (snd p))) <*mlex*>
   (%p. length (fst (snd p))) <*mlex*> {}"
instantiation
  list :: ({plus,zero}) plus
  plus_list == plus :: 'a list => 'a list => 'a list
instantiation
  list :: ({uminus,zero}) uminus
  uminus_list == uminus :: 'a list => 'a list
instantiation
  list :: ({minus,zero}) minus
  minus_list == minus :: 'a list => 'a list => 'a list
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.ListVector"
### 0.276s elapsed time, 1.112s cpu time, 0.131s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.304s cpu time, 0.131s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.210s elapsed time, 0.830s cpu time, 0.088s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.439s elapsed time, 1.748s cpu time, 0.238s GC time
Loading theory "Draft.Logic" (required by "Draft.LinArithMoreTemplates" via "Draft.LinArith" via "Draft.QE")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.030s elapsed time, 3.914s cpu time, 0.923s GC time
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.100s elapsed time, 4.125s cpu time, 0.923s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!a v. amap\<^sub>f\<^sub>m a (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v. dnf (Neg v) = undefined
### !!v. dnf (ExQ v) = undefined
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.967s elapsed time, 6.116s cpu time, 1.124s GC time
Loading theory "Draft.Templates" (required by "Draft.LinArithMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.110s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LinArithMoreTemplates")
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
### Missing patterns in function definition:
### !!v. atoms\<^sub>0 (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Logic"
### 2.201s elapsed time, 6.303s cpu time, 1.068s GC time
Loading theory "Draft.QE" (required by "Draft.LinArithMoreTemplates" via "Draft.LinArith")
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.543s elapsed time, 1.174s cpu time, 0.100s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale ATOM_EQ
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
    and solvable\<^sub>0 :: "'a => bool"
    and trivial :: "'a => bool"
    and subst\<^sub>0 :: "'a => 'a => 'a"
  assumes
    "ATOM_EQ aneg anormal I\<^sub>a depends\<^sub>0 decr solvable\<^sub>0
      trivial subst\<^sub>0"
### theory "Draft.QE"
### 0.584s elapsed time, 0.859s cpu time, 0.089s GC time
Loading theory "Draft.LinArith" (required by "Draft.LinArithMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.LinArith"
### 1.592s elapsed time, 1.815s cpu time, 0.185s GC time
Loading theory "Draft.LinArithMoreTemplates"
val templateLemmas =
   [("LinArith.qfree_min_inf",
     "qfree ?\<phi> ==> qfree (inf\<^sub>- ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinArith.qfree_plus_inf",
     "qfree ?\<phi> ==> qfree (inf\<^sub>+ ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinArith.is_Less_iff", "is_Less ?f = (EX r rs. ?f = Less r rs)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("LinArith.I_asubst",
     "I\<^sub>R (asubst ?t ?a) ?xs = I\<^sub>R ?a (eval ?t ?xs # ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 0)))),
    ("LinArith.is_Eq_iff",
     "(ALL i j. ?a ~= Less i j) = (EX i j. ?a = Eq i j)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 2, t_empty))),
    ("LinArith.I_subst",
     "qfree ?\<phi> ==>
      R.I (subst ?\<phi> ?t) ?xs = R.I ?\<phi> (eval ?t ?xs # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0))))),
    ("LinArith.min_inf",
     "nqfree ?f ==>
      EX x. ALL y<=x. R.I (inf\<^sub>- ?f) ?xs = R.I ?f (y # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("LinArith.plus_inf",
     "nqfree ?f ==>
      EX x. ALL y>=x. R.I (inf\<^sub>+ ?f) ?xs = R.I ?f (y # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("LinArith.I_subst_pretty",
     "qfree ?\<phi> ==>
      R.I (subst ?\<phi> (?r, ?cs)) ?xs =
      R.I ?\<phi> ((?r + \<langle>?cs,?xs\<rangle>) # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1))),
               template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 0))))),
    ("LinArith.finite_LB",
     "finite
       {(r - \<langle>cs,?xs\<rangle>) / c |r c cs.
        Less r (c # cs) : set (atoms\<^sub>0 ?f) & 0 < c}",
     template_predicate
      (
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty))
         )),
    ("LinArith.finite_UB", "finite (UB ?f ?xs)",
     template_predicate
      (
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty))
         )),
    ("LinArith.set_lbounds",
     "set (lbounds ?as) =
      {(r / c, (- 1 / c) *\<^sub>s cs) |r c cs.
       Less r (c # cs) : set ?as & 0 < c}",
     template_equation
      (template_app
        (template_hole 18, template_app (template_hole 17, template_var 0)),
       template_app (template_hole 16, t_empty))),
    ("LinArith.set_ubounds",
     "set (ubounds ?as) =
      {(r / c, (- 1 / c) *\<^sub>s cs) |r c cs.
       Less r (c # cs) : set ?as & c < 0}",
     template_equation
      (template_app
        (template_hole 18, template_app (template_hole 17, template_var 0)),
       template_app (template_hole 16, t_empty))),
    ("LinArith.set_ebounds",
     "set (ebounds ?as) =
      {(r / c, (- 1 / c) *\<^sub>s cs) |r c cs.
       Eq r (c # cs) : set ?as & c ~= 0}",
     template_equation
      (template_app
        (template_hole 19, template_app (template_hole 18, template_var 0)),
       template_app (template_hole 17, t_empty))),
    ("LinArith.LBex",
     "[| nqfree ?f; R.I ?f (?x # ?xs); ~ R.I (inf\<^sub>- ?f) ?xs;
         ?x ~: EQ ?f ?xs |]
      ==> EX l:{(r - \<langle>cs,?xs\<rangle>) / c |r c cs.
                Less r (c # cs) : set (atoms\<^sub>0 ?f) & 0 < c}.
             l < ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_hole 20),
                template_var 2),
              template_app
               (template_app (template_hole 19, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 21, template_hole 20),
                    template_app (template_hole 17, template_var 2)),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app (template_hole 15, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 15, t_empty)),
             t_empty)
           ))),
    ("LinArith.UBex",
     "[| nqfree ?f; R.I ?f (?x # ?xs); ~ R.I (inf\<^sub>+ ?f) ?xs;
         ?x ~: EQ ?f ?xs |]
      ==> EX u:UB ?f ?xs. ?x < u",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_hole 20),
                template_var 2),
              template_app
               (template_app (template_hole 19, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 21, template_hole 20),
                    template_app (template_hole 17, template_var 2)),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app (template_hole 15, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 15, t_empty)),
             t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.LinArithMoreTemplates"
### 0.364s elapsed time, 0.534s cpu time, 0.050s GC time
val it = (): unit
