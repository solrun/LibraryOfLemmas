Loading theory "HOL-Library.Function_Algebras" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.FuncSet" (required by "Draft.QEpresMoreTemplates" via "Draft.QEpres" via "Draft.PresArith" via "Draft.QE" via "Draft.Logic")
Loading theory "HOL-Library.ListVector" (required by "Draft.QEpresMoreTemplates" via "Draft.QEpres" via "Draft.PresArith")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.115s elapsed time, 0.483s cpu time, 0.037s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order:
  "(%p. length (snd (snd p))) <*mlex*>
   (%p. length (fst (snd p))) <*mlex*> {}"
instantiation
  list :: ({plus,zero}) plus
  plus_list == plus :: 'a list => 'a list => 'a list
Found termination order: "size_list size <*mlex*> {}"
instantiation
  list :: ({uminus,zero}) uminus
  uminus_list == uminus :: 'a list => 'a list
instantiation
  list :: ({minus,zero}) minus
  minus_list == minus :: 'a list => 'a list => 'a list
### theory "HOL-Library.ListVector"
### 0.277s elapsed time, 1.120s cpu time, 0.107s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.317s elapsed time, 1.276s cpu time, 0.107s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.837s cpu time, 0.070s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.426s elapsed time, 1.688s cpu time, 0.217s GC time
Loading theory "Draft.Logic" (required by "Draft.QEpresMoreTemplates" via "Draft.QEpres" via "Draft.PresArith" via "Draft.QE")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.045s elapsed time, 3.974s cpu time, 0.992s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.102s elapsed time, 4.160s cpu time, 0.992s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!a v. amap\<^sub>f\<^sub>m a (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v. dnf (Neg v) = undefined
### !!v. dnf (ExQ v) = undefined
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.000s elapsed time, 6.213s cpu time, 1.250s GC time
Loading theory "Draft.Templates" (required by "Draft.QEpresMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.109s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.QEpresMoreTemplates")
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
### Missing patterns in function definition:
### !!v. atoms\<^sub>0 (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Logic"
### 2.239s elapsed time, 6.444s cpu time, 1.202s GC time
Loading theory "Draft.QE" (required by "Draft.QEpresMoreTemplates" via "Draft.QEpres" via "Draft.PresArith")
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.545s elapsed time, 1.192s cpu time, 0.124s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale ATOM_EQ
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
    and solvable\<^sub>0 :: "'a => bool"
    and trivial :: "'a => bool"
    and subst\<^sub>0 :: "'a => 'a => 'a"
  assumes
    "ATOM_EQ aneg anormal I\<^sub>a depends\<^sub>0 decr solvable\<^sub>0
      trivial subst\<^sub>0"
### theory "Draft.QE"
### 0.592s elapsed time, 0.898s cpu time, 0.114s GC time
Loading theory "Draft.PresArith" (required by "Draft.QEpresMoreTemplates" via "Draft.QEpres")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list (nat o abs) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.PresArith"
### 1.556s elapsed time, 2.251s cpu time, 0.892s GC time
Loading theory "Draft.QEpres" (required by "Draft.QEpresMoreTemplates")
### theory "Draft.QEpres"
### 0.094s elapsed time, 0.119s cpu time, 0.000s GC time
Loading theory "Draft.QEpresMoreTemplates"
val templateLemmas =
   [("QEpres.qfree_pres_qe", "qfree (qe_pres ?f)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("QEpres.qfree_qe_pres_o", "qfree ((qe_pres\<^sub>1 o hd_coeffs1) ?as)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0),
             template_var 0))
         )),
    ("QEpres.I_pres_qe",
     "Z.normal ?\<phi> ==> Z.I (qe_pres ?\<phi>) ?xs = Z.I ?\<phi> ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0)))),
    ("QEpres.normal_qe_pres\<^sub>1_o",
     "ALL a:set ?as. hd_coeff a ~= 0 & divisor a ~= 0 ==>
      Z.normal ((qe_pres\<^sub>1 o hd_coeffs1) ?as)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app
                (template_app (template_hole 2, template_hole 1),
                 template_hole 0),
               template_var 0))
           ))),
    ("QEpres.divisors_hd_coeffs1",
     "[| ALL a:set ?as. divisor a ~= 0; ALL a:set ?as. hd_coeff a ~= 0;
         ?a : set (hd_coeffs1 ?as) |]
      ==> divisor ?a ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app
               (template_hole 7,
                template_app (template_hole 0, template_var 1)))
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 4, template_var 0),
             template_hole 3)
           ))),
    ("QEpres.I_hd_coeffs1",
     "ALL a:set ?as. hd_coeff a ~= 0 ==>
      (EX x. ALL a:set (hd_coeffs1 ?as). I\<^sub>Z a (x # ?xs)) =
      (EX x. ALL a:set ?as. I\<^sub>Z a (x # ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("QEpres.I_qe_pres\<^sub>1_o",
     "[| ALL a:set ?as. divisor a ~= 0; ALL a:set ?as. hd_coeff a ~= 0 |]
      ==> Z.I ((qe_pres\<^sub>1 o hd_coeffs1) ?as) ?e =
          (EX x. ALL a:set ?as. I\<^sub>Z a (x # ?e))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2),
               template_var 1)),
           template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("QEpres.I_cyclic",
     "[| is_dvd ?a; hd_coeff ?a = 1;
         ?i mod divisor ?a = ?j mod divisor ?a |]
      ==> I\<^sub>Z ?a (?i # ?e) = I\<^sub>Z ?a (?j # ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, t_empty), t_empty),
                t_empty),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 6, template_var 3), template_hole 5),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 2),
            template_app (template_hole 3, template_var 3)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 3)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("QEpres.hd_coeff_is1_hd_coeffs1",
     "[| ALL a:set ?as. hd_coeff a ~= 0; ?a : set (hd_coeffs1 ?as) |]
      ==> hd_coeff_is1 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 12,
                template_app (template_hole 6, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, t_empty), t_empty),
               t_empty),
             template_var 0)
           ))),
    ("QEpres.I_qe_pres\<^sub>1",
     "[| ALL a:set ?as. divisor a ~= 0; ALL a:set ?as. hd_coeff_is1 a |]
      ==> Z.I (qe_pres\<^sub>1 ?as) ?xs =
          (EX x. ALL a:set ?as. I\<^sub>Z a (x # ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 1)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app (template_hole 1, t_empty))))]:
   (string * thm * template) list
### theory "Draft.QEpresMoreTemplates"
### 0.378s elapsed time, 0.566s cpu time, 0.065s GC time
val it = (): unit
