Loading theory "HOL-Library.Function_Algebras" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.FuncSet" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.QEdlo_fr" via "Draft.DLO" via "Draft.QE" via "Draft.Logic")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.533s cpu time, 0.043s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.862s cpu time, 0.043s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.368s elapsed time, 1.470s cpu time, 0.133s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.475s elapsed time, 1.884s cpu time, 0.228s GC time
Loading theory "Draft.Logic" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.QEdlo_fr" via "Draft.DLO" via "Draft.QE")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 1.004s elapsed time, 3.798s cpu time, 0.968s GC time
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.091s elapsed time, 3.944s cpu time, 0.961s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!a v. amap\<^sub>f\<^sub>m a (ExQ v) = undefined
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v. dnf (Neg v) = undefined
### !!v. dnf (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.012s elapsed time, 6.368s cpu time, 1.228s GC time
Loading theory "Draft.Templates" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.QEdlo_frMoreTemplates")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
### Missing patterns in function definition:
### !!v. atoms\<^sub>0 (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Logic"
### 2.223s elapsed time, 6.224s cpu time, 1.175s GC time
Loading theory "Draft.QE" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.QEdlo_fr" via "Draft.DLO")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.557s elapsed time, 1.226s cpu time, 0.132s GC time
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale ATOM_EQ
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
    and solvable\<^sub>0 :: "'a => bool"
    and trivial :: "'a => bool"
    and subst\<^sub>0 :: "'a => 'a => 'a"
  assumes
    "ATOM_EQ aneg anormal I\<^sub>a depends\<^sub>0 decr solvable\<^sub>0
      trivial subst\<^sub>0"
### theory "Draft.QE"
### 0.566s elapsed time, 0.713s cpu time, 0.088s GC time
Loading theory "Draft.DLO" (required by "Draft.QEdlo_frMoreTemplates" via "Draft.QEdlo_fr")
class dlo = linorder +
  assumes "dense": "!!x z. x < z ==> EX y>x. y < z"
    and "no_ub": "!!x. EX u. x < u"
    and "no_lb": "!!x. EX l. l < x"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (And ?\<phi>\<^sub>1 ?\<phi>\<^sub>2) ==
### Logic.and (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>1)
###  (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>2)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (Or ?\<phi>\<^sub>1 ?\<phi>\<^sub>2) ==
### Logic.or (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>1)
###  (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>2)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (Neg ?\<phi>) == neg (??.DLO.lift_dnf_qe ?qe ?\<phi>)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (ExQ ?\<phi>) ==
### Disj (dnf (??.DLO.nnf (??.DLO.lift_dnf_qe ?qe ?\<phi>))) (??.DLO.qelim ?qe)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe TrueF == TrueF
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe FalseF == FalseF
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (Atom ?v) == Atom ?v
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.DLO"
### 1.674s elapsed time, 2.361s cpu time, 0.905s GC time
Loading theory "Draft.QEdlo_fr" (required by "Draft.QEdlo_frMoreTemplates")
Found termination order: "{}"
### theory "Draft.QEdlo_fr"
### 0.224s elapsed time, 0.285s cpu time, 0.026s GC time
Loading theory "Draft.QEdlo_frMoreTemplates"
val templateLemmas =
   [("QEdlo_fr.qfree_qe_interior", "qfree (qe_interior ?\<phi>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("QEdlo_fr.qfree_asubst\<^sub>2", "qfree (asubst\<^sub>2 ?l ?u ?a)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("QEdlo_fr.qfree_interior1",
     "nqfree ?\<phi> ==> qfree (qe_interior\<^sub>1 ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("QEdlo_fr.I_qe_interior",
     "DLO.I (qe_interior ?\<phi>) ?xs = DLO.I ?\<phi> ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0))),
    ("QEdlo_fr.qfree_subst\<^sub>2",
     "nqfree ?\<phi> ==> qfree (subst\<^sub>2 ?l ?u ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("QEdlo_fr.I_interior1",
     "nqfree ?\<phi> ==>
      DLO.I (qe_interior\<^sub>1 ?\<phi>) ?xs =
      (EX x. DLO.I ?\<phi> (x # ?xs))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app (template_hole 1, t_empty)))),
    ("QEdlo_fr.nolub_And",
     "nolub (And ?f ?g) ?xs ?l ?x ?u =
      (nolub ?f ?xs ?l ?x ?u & nolub ?g ?xs ?l ?x ?u)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4)),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("QEdlo_fr.nolub_Or",
     "nolub (Or ?f ?g) ?xs ?l ?x ?u =
      (nolub ?f ?xs ?l ?x ?u & nolub ?g ?xs ?l ?x ?u)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4)),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("QEdlo_fr.I_subst\<^sub>21",
     "[| nqfree ?f; ?xs ! ?l < ?xs ! ?u; DLO.I (subst\<^sub>2 ?l ?u ?f) ?xs;
         ?xs ! ?l < ?x; ?x < ?xs ! ?u |]
      ==> DLO.I ?f (?x # ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 1)),
                  template_var 4)),
              template_var 3)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 5, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("QEdlo_fr.innermost_intvl",
     "[| nqfree ?f; nolub ?f ?xs ?l ?x ?u; ?l < ?x; ?x < ?u;
         ?x ~: EQ ?f ?xs; DLO.I ?f (?x # ?xs); ?l < ?y; ?y < ?u |]
      ==> DLO.I ?f (?y # ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 5),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 4))
            ),
        template_inequation (less_than, template_var 3, template_var 0),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 5),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4))
           ))),
    ("QEdlo_fr.I_subst\<^sub>22",
     "[| nqfree ?f; ?xs ! ?l < ?x & ?x < ?xs ! ?u;
         nolub ?f ?xs (?xs ! ?l) ?x (?xs ! ?u);
         ALL x:{?xs ! ?l<..<?xs ! ?u}.
            DLO.I ?f (x # ?xs) & x ~: EQ ?f ?xs |]
      ==> DLO.I (subst\<^sub>2 ?l ?u ?f) ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2)),
                template_var 1),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 11, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 0))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 4)),
             template_var 3)
           ))),
    ("QEdlo_fr.dense_interval",
     "[| finite ?L; finite ?U; ?l : ?L; ?u : ?U; ?l < ?x; ?x < ?u; ?P ?x;
         !!y l u.
            [| ALL y:{l<..<?x}. y ~: ?L; ALL y:{?x<..<u}. y ~: ?U; l < ?x;
               ?x < u; l < y; y < u |]
            ==> ?P y |]
      ==> EX l:?L.
             EX u:?U.
                l < ?x &
                ?x < u &
                (ALL y:{l<..<?x}. y ~: ?L) &
                (ALL y:{?x<..<u}. y ~: ?U) &
                (ALL y. l < y & y < u --> ?P y)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 4)
            ),
        template_inequation (less_than, template_var 3, template_var 1),
        template_inequation (less_than, template_var 1, template_var 2),
        template_predicate (template_app (template_var 0, template_var 1)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 5), t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.QEdlo_frMoreTemplates"
### 0.377s elapsed time, 0.547s cpu time, 0.046s GC time
val it = (): unit
