   [("LinArith.qfree_min_inf",
     "qfree ?\<phi> ==> qfree (inf\<^sub>- ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinArith.qfree_plus_inf",
     "qfree ?\<phi> ==> qfree (inf\<^sub>+ ?\<phi>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("LinArith.is_Less_iff", "is_Less ?f = (EX r rs. ?f = Less r rs)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("LinArith.I_asubst",
     "I\<^sub>R (asubst ?t ?a) ?xs = I\<^sub>R ?a (eval ?t ?xs # ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 0)))),
    ("LinArith.is_Eq_iff",
     "(ALL i j. ?a ~= Less i j) = (EX i j. ?a = Eq i j)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 2, t_empty))),
    ("LinArith.I_subst",
     "qfree ?\<phi> ==>
      R.I (subst ?\<phi> ?t) ?xs = R.I ?\<phi> (eval ?t ?xs # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0))))),
    ("LinArith.min_inf",
     "nqfree ?f ==>
      EX x. ALL y<=x. R.I (inf\<^sub>- ?f) ?xs = R.I ?f (y # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("LinArith.plus_inf",
     "nqfree ?f ==>
      EX x. ALL y>=x. R.I (inf\<^sub>+ ?f) ?xs = R.I ?f (y # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("LinArith.I_subst_pretty",
     "qfree ?\<phi> ==>
      R.I (subst ?\<phi> (?r, ?cs)) ?xs =
      R.I ?\<phi> ((?r + \<langle>?cs,?xs\<rangle>) # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1))),
               template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 0))))),
    ("LinArith.finite_LB",
     "finite
       {(r - \<langle>cs,?xs\<rangle>) / c |r c cs.
        Less r (c # cs) : set (atoms\<^sub>0 ?f) & 0 < c}",
     template_predicate
      (
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty))
         )),
    ("LinArith.finite_UB", "finite (UB ?f ?xs)",
     template_predicate
      (
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty))
         )),
    ("LinArith.set_lbounds",
     "set (lbounds ?as) =
      {(r / c, (- 1 / c) *\<^sub>s cs) |r c cs.
       Less r (c # cs) : set ?as & 0 < c}",
     template_equation
      (template_app
        (template_hole 18, template_app (template_hole 17, template_var 0)),
       template_app (template_hole 16, t_empty))),
    ("LinArith.set_ubounds",
     "set (ubounds ?as) =
      {(r / c, (- 1 / c) *\<^sub>s cs) |r c cs.
       Less r (c # cs) : set ?as & c < 0}",
     template_equation
      (template_app
        (template_hole 18, template_app (template_hole 17, template_var 0)),
       template_app (template_hole 16, t_empty))),
    ("LinArith.set_ebounds",
     "set (ebounds ?as) =
      {(r / c, (- 1 / c) *\<^sub>s cs) |r c cs.
       Eq r (c # cs) : set ?as & c ~= 0}",
     template_equation
      (template_app
        (template_hole 19, template_app (template_hole 18, template_var 0)),
       template_app (template_hole 17, t_empty))),
    ("LinArith.LBex",
     "[| nqfree ?f; R.I ?f (?x # ?xs); ~ R.I (inf\<^sub>- ?f) ?xs;
         ?x ~: EQ ?f ?xs |]
      ==> EX l:{(r - \<langle>cs,?xs\<rangle>) / c |r c cs.
                Less r (c # cs) : set (atoms\<^sub>0 ?f) & 0 < c}.
             l < ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_hole 20),
                template_var 2),
              template_app
               (template_app (template_hole 19, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 21, template_hole 20),
                    template_app (template_hole 17, template_var 2)),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app (template_hole 15, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 15, t_empty)),
             t_empty)
           ))),
    ("LinArith.UBex",
     "[| nqfree ?f; R.I ?f (?x # ?xs); ~ R.I (inf\<^sub>+ ?f) ?xs;
         ?x ~: EQ ?f ?xs |]
      ==> EX u:UB ?f ?xs. ?x < u",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_hole 20),
                template_var 2),
              template_app
               (template_app (template_hole 19, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 21, template_hole 20),
                    template_app (template_hole 17, template_var 2)),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app (template_hole 15, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 15, t_empty)),
             t_empty)
           )))]
