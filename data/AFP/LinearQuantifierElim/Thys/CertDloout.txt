Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.FuncSet" (required by "Draft.CertDloMoreTemplates" via "Draft.CertDlo" via "Draft.QEdlo" via "Draft.DLO" via "Draft.QE" via "Draft.Logic")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.531s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.842s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.318s elapsed time, 1.270s cpu time, 0.116s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.400s elapsed time, 1.596s cpu time, 0.116s GC time
Loading theory "Draft.Logic" (required by "Draft.CertDloMoreTemplates" via "Draft.CertDlo" via "Draft.QEdlo" via "Draft.DLO" via "Draft.QE")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.983s elapsed time, 3.730s cpu time, 0.849s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.079s elapsed time, 3.939s cpu time, 0.849s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!a v. amap\<^sub>f\<^sub>m a (ExQ v) = undefined
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Missing patterns in function definition:
### !!v. dnf (Neg v) = undefined
### !!v. dnf (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.978s elapsed time, 6.211s cpu time, 1.071s GC time
Loading theory "Draft.Templates" (required by "Draft.CertDloMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.117s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CertDloMoreTemplates")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
### Missing patterns in function definition:
### !!v. atoms\<^sub>0 (ExQ v) = undefined
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Logic"
### 2.220s elapsed time, 6.237s cpu time, 1.109s GC time
Loading theory "Draft.QE" (required by "Draft.CertDloMoreTemplates" via "Draft.CertDlo" via "Draft.QEdlo" via "Draft.DLO")
locale ATOM
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
  assumes "ATOM aneg anormal I\<^sub>a depends\<^sub>0 decr"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.549s elapsed time, 1.189s cpu time, 0.114s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale ATOM_EQ
  fixes aneg :: "'a => 'a fm"
    and anormal :: "'a => bool"
    and I\<^sub>a :: "'a => 'b list => bool"
    and depends\<^sub>0 :: "'a => bool"
    and decr :: "'a => 'a"
    and solvable\<^sub>0 :: "'a => bool"
    and trivial :: "'a => bool"
    and subst\<^sub>0 :: "'a => 'a => 'a"
  assumes
    "ATOM_EQ aneg anormal I\<^sub>a depends\<^sub>0 decr solvable\<^sub>0
      trivial subst\<^sub>0"
### theory "Draft.QE"
### 0.565s elapsed time, 0.730s cpu time, 0.075s GC time
Loading theory "Draft.DLO" (required by "Draft.CertDloMoreTemplates" via "Draft.CertDlo" via "Draft.QEdlo")
class dlo = linorder +
  assumes "dense": "!!x z. x < z ==> EX y>x. y < z"
    and "no_ub": "!!x. EX u. x < u"
    and "no_lb": "!!x. EX l. l < x"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (And ?\<phi>\<^sub>1 ?\<phi>\<^sub>2) ==
### Logic.and (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>1)
###  (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>2)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (Or ?\<phi>\<^sub>1 ?\<phi>\<^sub>2) ==
### Logic.or (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>1)
###  (??.DLO.lift_dnf_qe ?qe ?\<phi>\<^sub>2)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (Neg ?\<phi>) == neg (??.DLO.lift_dnf_qe ?qe ?\<phi>)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (ExQ ?\<phi>) ==
### Disj (dnf (??.DLO.nnf (??.DLO.lift_dnf_qe ?qe ?\<phi>))) (??.DLO.qelim ?qe)
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe TrueF == TrueF
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe FalseF == FalseF
### Code generator: dropping subsumed code equation
### ??.DLO.lift_dnf_qe ?qe (Atom ?v) == Atom ?v
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.DLO"
### 1.681s elapsed time, 2.403s cpu time, 0.949s GC time
Loading theory "Draft.QEdlo" (required by "Draft.CertDloMoreTemplates" via "Draft.CertDlo")
### Missing patterns in function definition:
### !!v va b. subst\<^sub>0 (Less v va) b = undefined
Found termination order: "{}"
### theory "Draft.QEdlo"
### 0.158s elapsed time, 0.185s cpu time, 0.000s GC time
Loading theory "Draft.CertDlo" (required by "Draft.CertDloMoreTemplates")
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
### theory "Draft.CertDlo"
### 0.141s elapsed time, 0.170s cpu time, 0.032s GC time
Loading theory "Draft.CertDloMoreTemplates"
val templateLemmas =
   [("CertDlo.refute_I",
     "~ interpret ?h (Neg ?f) ?e ==> interpret ?h ?f ?e",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("CertDlo.cycleD",
     "CertDlo.cycle ?as ?is ==> ~ DLO.I (list_conj (map Atom ?as)) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2))),
                 template_var 0)
               )
           ))),
    ("CertDlo.cyclic_dnfD",
     "[| qfree ?f; cyclic_dnf (dnf (DLO.nnf ?f)) |] ==> ~ DLO.I ?f ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1),
                 template_var 0)
               )
           ))),
    ("CertDlo.cyclerecD",
     "[| cyclerec ?i ?j ?as; ?xs ! ?i < ?xs ! ?j |]
      ==> EX a:set ?as. ~ I\<^sub>d\<^sub>l\<^sub>o a ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 0), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.CertDloMoreTemplates"
### 0.379s elapsed time, 0.535s cpu time, 0.053s GC time
val it = (): unit
