Loading theory "Draft.Templates" (required by "Draft.More_Jordan_Normal_FormsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.More_Jordan_Normal_Forms" (required by "Draft.More_Jordan_Normal_FormsTemplates")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.174s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.More_Jordan_Normal_FormsTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.More_Jordan_Normal_Forms"
### 0.394s elapsed time, 0.835s cpu time, 0.064s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.536s elapsed time, 0.879s cpu time, 0.064s GC time
Loading theory "Draft.More_Jordan_Normal_FormsTemplates"
val templateLemmas =
   [("More_Jordan_Normal_Forms.one_element_vec_dim",
     "dim_vec (one_element_vec ?n ?r) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("More_Jordan_Normal_Forms.one_element_vec_carrier",
     "one_element_vec ?n ?e : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1))
         )),
    ("More_Jordan_Normal_Forms.single_nz_val_carrier",
     "single_nz_val ?n ?i ?v : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))
         )),
    ("More_Jordan_Normal_Forms.elem_in_singleton", "[?a]\<^sub>v $ 0 = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1), t_empty)),
         template_hole 0),
       template_var 0)),
    ("More_Jordan_Normal_Forms.single_nz_zero_singleton",
     "single_nz_val 1 0 ?v = [?v]\<^sub>v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_hole 2), t_empty))),
    ("More_Jordan_Normal_Forms.single_nz_val_unit_vec",
     "?v \<cdot>\<^sub>v unit_vec ?n ?i = single_nz_val ?n ?i ?v",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("More_Jordan_Normal_Forms.elem_in_singleton_append",
     "(?x @\<^sub>v [?a]\<^sub>v) $ dim_vec ?x = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1), t_empty))),
         template_app (template_hole 0, template_var 1)),
       template_var 0)),
    ("More_Jordan_Normal_Forms.mat_append_col_dims",
     "mat_append_col ?A ?b : carrier_mat (dim_row ?A) (dim_col ?A + 1)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_hole 0)))
         )),
    ("More_Jordan_Normal_Forms.mat_append_row_dims",
     "mat_append_row ?A ?c : carrier_mat (dim_row ?A + 1) (dim_col ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_hole 1)),
             template_app (template_hole 0, template_var 1)))
         )),
    ("More_Jordan_Normal_Forms.append_singleton_access",
     "(vec ?n ?f @\<^sub>v [?r]\<^sub>v) $ ?n = ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0), t_empty))),
         template_var 2),
       template_var 0)),
    ("More_Jordan_Normal_Forms.one_element_vec_access",
     "?i < ?n ==> one_element_vec ?n ?e $ ?i = ?e",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("More_Jordan_Normal_Forms.singletons_dotP",
     "[?v]\<^sub>v \<bullet> [?w]\<^sub>v = ?v * ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("More_Jordan_Normal_Forms.map_vec_append",
     "map_vec ?f (?a @\<^sub>v ?b) = map_vec ?f ?a @\<^sub>v map_vec ?f ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("More_Jordan_Normal_Forms.single_nz_val_access1",
     "?i < ?n ==> single_nz_val ?n ?i ?v $ ?i = ?v",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("More_Jordan_Normal_Forms.mat_append_row_in_mat",
     "?i < dim_row ?A ==> row (mat_append_row ?A ?r) ?i = row ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("More_Jordan_Normal_Forms.mat_append_row_row",
     "dim_col ?A = dim_vec ?c ==>
      row (mat_append_row ?A ?c) (dim_row ?A) = ?c",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("More_Jordan_Normal_Forms.mat_append_col_col",
     "dim_row ?A = dim_vec ?b ==>
      col (mat_append_col ?A ?b) (dim_col ?A) = ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("More_Jordan_Normal_Forms.map_mat_map_vec",
     "?i < dim_row ?P ==> row (map_mat ?f ?P) ?i = map_vec ?f (row ?P ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("More_Jordan_Normal_Forms.singleton_dotP",
     "dim_vec ?x = 1 ==> [?v]\<^sub>v \<bullet> ?x = ?v * ?x $ 0",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 6), t_empty)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("More_Jordan_Normal_Forms.vector_cases_append",
     "?x = vNil | (EX v a. ?x = v @\<^sub>v [a]\<^sub>v)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 0),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_hole 4)))),
           template_app (template_hole 3, t_empty))
         )),
    ("More_Jordan_Normal_Forms.append_rows_access1",
     "[| ?i < dim_row ?A; dim_col ?A = dim_col ?B |]
      ==> row (?A @\<^sub>r ?B) ?i = row ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("More_Jordan_Normal_Forms.in_second_append_list",
     "[| length ?a <= ?i; ?i < length (?a @ ?b) |]
      ==> (?a @ ?b) ! ?i : set ?b",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Jordan_Normal_Forms.set_comprehension_list_comprehension",
     "set (map ?f [?x..<?a]) = {?f i |i. i : {?x..<?a}}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("More_Jordan_Normal_Forms.one_element_vec_dotP",
     "dim_vec ?x = ?n ==>
      one_element_vec ?n ?e \<bullet> ?x =
      (SUM i = 0..<dim_vec ?x. ?e * ?x $ i)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 8, template_var 2)))))),
    ("More_Jordan_Normal_Forms.split_four_block_dual_fst_lst",
     "split_block (four_block_mat ?A ?B ?C ?D) (dim_row ?A) (dim_col ?A) =
      (?U, ?X, ?Y, ?V) ==>
      ?U = ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)),
              template_app (template_hole 5, template_var 7)),
            template_app (template_hole 4, template_var 7)),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))))],
       template_equation (template_var 3, template_var 7))),
    ("More_Jordan_Normal_Forms.split_four_block_dual_fst_lst",
     "split_block (four_block_mat ?A ?B ?C ?D) (dim_row ?A) (dim_col ?A) =
      (?U, ?X, ?Y, ?V) ==>
      ?V = ?D",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)),
              template_app (template_hole 5, template_var 7)),
            template_app (template_hole 4, template_var 7)),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))))],
       template_equation (template_var 0, template_var 4))),
    ("More_Jordan_Normal_Forms.single_nz_val_dotP",
     "[| ?i < ?n; dim_vec ?x = ?n |]
      ==> single_nz_val ?n ?i ?v \<bullet> ?x = ?v * ?x $ ?i",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app (template_hole 5, template_var 1), template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("More_Jordan_Normal_Forms.single_nz_val_access2",
     "[| ?i < ?n; ?j < ?n; ?i ~= ?j |]
      ==> single_nz_val ?n ?i ?v $ ?j = (0::?'a)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1),
         template_hole 0))),
    ("More_Jordan_Normal_Forms.mat_append_row_vec_index",
     "[| ?i < dim_col ?A; dim_col ?A = dim_vec ?b |]
      ==> col (mat_append_row ?A ?b) ?i $ dim_row ?A = ?b $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 2)))),
    ("More_Jordan_Normal_Forms.mat_append_col_vec_index",
     "[| ?i < dim_row ?A; dim_row ?A = dim_vec ?b |]
      ==> row (mat_append_col ?A ?b) ?i $ dim_col ?A = ?b $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 2)))),
    ("More_Jordan_Normal_Forms.vec_rev_induct",
     "[| ?P vNil; !!a v. ?P v ==> ?P (v @\<^sub>v [a]\<^sub>v) |]
      ==> ?P ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 1,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app (template_hole 5, template_hole 4)))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("More_Jordan_Normal_Forms.singleton_appends_dotP",
     "dim_vec ?x = dim_vec ?y ==>
      (?x @\<^sub>v [?v]\<^sub>v) \<bullet> (?y @\<^sub>v [?w]\<^sub>v) =
      ?x \<bullet> ?y + ?v * ?w",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 t_empty))),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_hole 2), t_empty))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("More_Jordan_Normal_Forms.append_split_vec_distrib_scalar_prod",
     "dim_vec (?u @\<^sub>v ?w) = dim_vec ?x ==>
      (?u @\<^sub>v ?w) \<bullet> ?x =
      ?u \<bullet> vec_first ?x (dim_vec ?u) +
      ?w \<bullet> vec_last ?x (dim_vec ?w)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 6, template_var 2)))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 6, template_var 1))))))),
    ("More_Jordan_Normal_Forms.constructing_append_col_row",
     "[| ?i < dim_row ?A; dim_row ?A = dim_vec ?b |]
      ==> row (mat_append_col ?A ?b) ?i =
          row ?A ?i @\<^sub>v [?b $ ?i]\<^sub>v",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_hole 1), t_empty))))),
    ("More_Jordan_Normal_Forms.assoc_scalar_prod_mult_mat_vec",
     "[| ?y : carrier_vec ?n; ?x : carrier_vec ?m; ?A : carrier_mat ?n ?m |]
      ==> (?A *\<^sub>v ?x) \<bullet> ?y =
          (?A\<^sup>T *\<^sub>v ?y) \<bullet> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_var 4),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 4)),
           template_var 2)))),
    ("More_Jordan_Normal_Forms.mat_append_col_access_in_mat",
     "[| dim_row ?A = dim_vec ?b; ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> row (mat_append_col ?A ?b) ?i $ ?j = row ?A ?i $ ?j",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("More_Jordan_Normal_Forms.append_one_elem_zero_dotP",
     "[| dim_vec ?u = ?m; dim_vec ?x = ?n |]
      ==> (one_element_vec ?n ?e @\<^sub>v 0\<^sub>v ?m) \<bullet>
          (?x @\<^sub>v ?u) =
          (SUM i = 0..<dim_vec ?x. ?e * ?x $ i)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4), template_var 3),
        template_equation
         (template_app (template_hole 10, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 0)),
               template_app (template_hole 5, template_var 3))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 4)),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 10, template_var 2)))))),
    ("More_Jordan_Normal_Forms.append_rows_access2",
     "[| dim_row ?A <= ?i; ?i < dim_row ?A + dim_row ?B;
         dim_col ?A = dim_col ?B |]
      ==> row (?A @\<^sub>r ?B) ?i = row ?B (?i - dim_row ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 8, template_var 0))),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 8, template_var 2)))))),
    ("More_Jordan_Normal_Forms.single_nz_valI",
     "[| !!j. [| j < dim_vec ?v; j ~= ?i |] ==> ?v $ j = (0::?'a);
         ?v $ ?i = ?val |]
      ==> ?v = single_nz_val (dim_vec ?v) ?i ?val",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 7, template_var 2)),
             template_var 1),
           template_var 0)))),
    ("More_Jordan_Normal_Forms.singleton_append_dotP",
     "dim_vec ?z = dim_vec ?y + 1 ==>
      (?y @\<^sub>v [?x]\<^sub>v) \<bullet> ?z =
      (SUM i = 0..<dim_vec ?y. ?y $ i * ?z $ i) + ?x * ?z $ dim_vec ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 12, template_var 1)),
            template_hole 10))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app (template_hole 6, template_hole 10),
                 t_empty))),
           template_var 2),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app (template_hole 12, template_var 1)))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app (template_hole 12, template_var 1))))))),
    ("More_Jordan_Normal_Forms.append_dot_product_split",
     "dim_vec (?u @\<^sub>v ?w) = dim_vec ?x ==>
      (?u @\<^sub>v ?w) \<bullet> ?x =
      (SUM i = 0..<dim_vec ?u. ?u $ i * ?x $ i) +
      (SUM i = 0..<dim_vec ?w. ?w $ i * ?x $ (i + dim_vec ?u))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)),
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 10, template_var 2)))),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 10, template_var 1)))))))]:
   (string * thm * template) list
### theory "Draft.More_Jordan_Normal_FormsTemplates"
### 0.987s elapsed time, 1.234s cpu time, 0.202s GC time
val it = (): unit
