   [("LP_Preliminaries.two_block_non_interfering_dims",
     "dim_col (two_block_non_interfering ?A ?B) = dim_col ?A + dim_col ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("LP_Preliminaries.two_block_non_interfering_dims",
     "dim_row (two_block_non_interfering ?A ?B) = dim_row ?A + dim_row ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("LP_Preliminaries.mat_times_vec_leqD",
     "[?A*\<^sub>v?x]\<le>?b ==> dim_col ?A = dim_vec ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("LP_Preliminaries.mat_times_vec_leqD",
     "[?A*\<^sub>v?x]\<le>?b ==> dim_row ?A = dim_vec ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("LP_Preliminaries.vec_times_mat_eqD",
     "[?y\<^sub>v*?A]=?c ==> dim_col ?A\<^sup>T = dim_vec ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 2)))),
    ("LP_Preliminaries.vec_times_mat_eqD",
     "[?y\<^sub>v*?A]=?c ==> dim_row ?A\<^sup>T = dim_vec ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("LP_Preliminaries.vec_times_mat_leqD",
     "[?y\<^sub>v*?A]\<le>?c ==> dim_col ?A\<^sup>T = dim_vec ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 2)))),
    ("LP_Preliminaries.vec_times_mat_leqD",
     "[?y\<^sub>v*?A]\<le>?c ==> dim_row ?A\<^sup>T = dim_vec ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("LP_Preliminaries.sat_constr_sat_transf_constrs",
     "?v \<Turnstile>\<^sub>c ?cs ==>
      ?v \<Turnstile>\<^sub>c\<^sub>s set (transf_constraint ?cs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             t_empty)
           ))),
    ("LP_Preliminaries.index_geq_n_simplex",
     "\<langle>?x\<rangle> \<Turnstile>\<^sub>c index_geq_n ?i ?n ==>
      ?n <= \<langle>?x\<rangle> ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("LP_Preliminaries.split_vec_dims",
     "split_i_j_x ?i ?j ?x = (?a, ?b) ==> dim_vec ?a = ?i",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 4))),
    ("LP_Preliminaries.split_vec_dims",
     "split_i_j_x ?i ?j ?x = (?a, ?b) ==> dim_vec ?b = ?j - ?i",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 4)))),
    ("LP_Preliminaries.split_n_m_x_abbrev_dims",
     "split_n_m_x ?n ?m ?x = (?a, ?b) ==> dim_vec ?a = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 4))),
    ("LP_Preliminaries.split_n_m_x_abbrev_dims",
     "split_n_m_x ?n ?m ?x = (?a, ?b) ==> dim_vec ?b = ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3)),
            template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 3))),
    ("LP_Preliminaries.completeness_mat_x_leq",
     "EX x. [?A*\<^sub>vx]\<le>?b ==>
      EX X. simplex (mat_x_leq_vec ?A ?b) = Inr X",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("LP_Preliminaries.sat_constrs_sat_transf_constrs",
     "?v \<Turnstile>\<^sub>c\<^sub>s set ?cs ==>
      ?v \<Turnstile>\<^sub>c\<^sub>s set (transf_constraints ?cs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 1))),
             t_empty)
           ))),
    ("LP_Preliminaries.sat_transf_constrs_sat_constr",
     "[| nonstrict_constr ?cs;
         ?v \<Turnstile>\<^sub>c\<^sub>s set (transf_constraint ?cs) |]
      ==> ?v \<Turnstile>\<^sub>c ?cs",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("LP_Preliminaries.completeness_mat_x_eq_vec",
     "EX x. [x\<^sub>v*?A]=?c ==>
      EX X. simplex (x_mat_eq_vec ?c ?A\<^sup>T) = Inr X",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("LP_Preliminaries.two_block_non_interfering_row_comp1",
     "?i < dim_row ?A ==>
      row (two_block_non_interfering ?A ?B) ?i =
      row ?A ?i @\<^sub>v 0\<^sub>v (dim_col ?B)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("LP_Preliminaries.trans_constraint_creats_LEQ_only",
     "transf_constraint ?x ~= [] ==>
      ALL x:set (transf_constraint ?x). EX a b. x = LEQ a b",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 0),
              template_hole 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 7, template_var 0))),
             t_empty)
           ))),
    ("LP_Preliminaries.scalar_prod_valuation_after_split_equiv1",
     "(?x, ?y) = split_i_j_x (dim_vec (lpoly_to_vec ?v)) ?l ?X ==>
      lpoly_to_vec ?v \<bullet> ?x =
      ?v \<lbrace> \<langle>?X\<rangle> \<rbrace>",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 4), template_var 3),
          template_app
           (template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2))),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 4, template_var 2)),
           template_var 4),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("LP_Preliminaries.split_two_block_non_interfering",
     "split_block (two_block_non_interfering ?A ?B) (dim_row ?A)
       (dim_col ?A) =
      (?Q1.0, ?Q2.0, ?Q3.0, ?Q4.0) ==>
      ?Q1.0 = ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_app (template_hole 5, template_var 5)),
            template_app (template_hole 4, template_var 5)),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))))],
       template_equation (template_var 3, template_var 5))),
    ("LP_Preliminaries.split_two_block_non_interfering",
     "split_block (two_block_non_interfering ?A ?B) (dim_row ?A)
       (dim_col ?A) =
      (?Q1.0, ?Q2.0, ?Q3.0, ?Q4.0) ==>
      ?Q4.0 = ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_app (template_hole 5, template_var 5)),
            template_app (template_hole 4, template_var 5)),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))))],
       template_equation (template_var 0, template_var 4))),
    ("LP_Preliminaries.mat_times_vec_leqD",
     "[| [?A*\<^sub>v?x]\<le>?b; ?i < dim_vec ?b |]
      ==> (?A *\<^sub>v ?x) $ ?i <= ?b $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("LP_Preliminaries.non_strict_constr_no_GT",
     "nonstrict_constrs ?cs ==> ALL x:set ?cs. \<nexists>a b. GT a b = x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             t_empty)
           ))),
    ("LP_Preliminaries.non_strict_constr_no_LT",
     "nonstrict_constrs ?cs ==> ALL x:set ?cs. \<nexists>a b. LT a b = x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             t_empty)
           ))),
    ("LP_Preliminaries.non_strict_constr_no_GTPP",
     "nonstrict_constrs ?cs ==> ALL x:set ?cs. \<nexists>a b. GTPP a b = x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("LP_Preliminaries.non_strict_constr_no_LTPP",
     "nonstrict_constrs ?cs ==> ALL x:set ?cs. \<nexists>a b. LTPP a b = x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("LP_Preliminaries.split_access_fst_1",
     "[| ?k < ?i; split_i_j_x ?i ?j ?x = (?a, ?b) |]
      ==> ?a $ ?k = \<langle>?x\<rangle> ?k",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 5),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 5)))),
    ("LP_Preliminaries.soundness_mat_x_leq",
     "[| dim_row ?A = dim_vec ?b; simplex (mat_x_leq_vec ?A ?b) = Inr ?X |]
      ==> EX x. [?A*\<^sub>vx]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)),
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("LP_Preliminaries.vec_times_mat_eqD",
     "[?y\<^sub>v*?A]=?c ==>
      ALL i<dim_vec ?c. (?A\<^sup>T *\<^sub>v ?y) $ i = ?c $ i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("LP_Preliminaries.vec_times_mat_leqD",
     "[?y\<^sub>v*?A]\<le>?c ==>
      ALL i<dim_vec ?c. (?A\<^sup>T *\<^sub>v ?y) $ i <= ?c $ i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("LP_Preliminaries.trans_constraints_creats_LEQ_only",
     "[| transf_constraints ?xs ~= []; ?x : set (transf_constraints ?xs) |]
      ==> EX p r. LEQ p r = ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 7, template_var 1)))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("LP_Preliminaries.soundness_mat_leqb_eqc1",
     "[| dim_row ?A = dim_vec ?b;
         simplex (mat_leqb_eqc ?A ?b ?c) = Inr ?X |]
      ==> EX x. [?A*\<^sub>vx]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)),
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("LP_Preliminaries.mult_right_eq",
     "[| dim_vec ?x = dim_vec ?c; [?y\<^sub>v*?A]=?c |]
      ==> (?A\<^sup>T *\<^sub>v ?y) \<bullet> ?x = ?c \<bullet> ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1)),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 3)))),
    ("LP_Preliminaries.split_access_fst_2",
     "[| (?x, ?y) = split_i_j_x ?i ?j ?Z; ?k < dim_vec ?x |]
      ==> ?x $ ?k = \<langle>?Z\<rangle> ?k",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 5), template_var 4),
          template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 5))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("LP_Preliminaries.eval_lpoly_eq_dot_prod_split1",
     "(?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X ==>
      vec_to_lpoly ?c \<lbrace> \<langle>?X\<rangle> \<rbrace> =
      ?c \<bullet> ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 4), template_var 3),
          template_app
           (template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 7, template_var 2)),
                template_app (template_hole 5, template_var 1))),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 4)))),
    ("LP_Preliminaries.soundness_mat_x_eq_vec",
     "[| dim_row ?A\<^sup>T = dim_vec ?c;
         simplex (x_mat_eq_vec ?c ?A\<^sup>T) = Inr ?X |]
      ==> EX x. [x\<^sub>v*?A]=?c",
     template_implication
      ([template_equation
         (template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 2)),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 7, template_var 2))),
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("LP_Preliminaries.sat_mono",
     "[| set ?A <= set ?B;
         \<langle>?X\<rangle> \<Turnstile>\<^sub>c\<^sub>s set ?B |]
      ==> \<langle>?X\<rangle> \<Turnstile>\<^sub>c\<^sub>s set ?A",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 3, template_var 2)),
             t_empty)
           ))),
    ("LP_Preliminaries.sat_transf_constrs_sat_constrs",
     "[| nonstrict_constrs ?cs;
         ?v \<Turnstile>\<^sub>c\<^sub>s set (transf_constraints ?cs) |]
      ==> ?v \<Turnstile>\<^sub>c\<^sub>s set ?cs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 1, template_var 1))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             t_empty)
           ))),
    ("LP_Preliminaries.from_index_geq_vector_simplex",
     "[| ?x \<Turnstile>\<^sub>c\<^sub>s set (from_index_geq0_vector ?i ?v);
         ?j < dim_vec ?v |]
      ==> ?v $ ?j <= ?x (?i + ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("LP_Preliminaries.completeness_mat_leqb_eqc",
     "[| EX x. [?A*\<^sub>vx]\<le>?b; EX y. [y\<^sub>v*?A]=?c |]
      ==> EX X. simplex (mat_leqb_eqc ?A ?b ?c) = Inr X",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("LP_Preliminaries.split_access_snd_2",
     "[| (?x, ?y) = split_i_j_x ?i ?j ?Z; ?k < dim_vec ?y |]
      ==> ?y $ ?k = \<langle>?Z\<rangle> (?k + dim_vec ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 5), template_var 4),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 4, template_var 5)))))),
    ("LP_Preliminaries.mat_leqb_eqc_for_LEQ",
     "[| ?i < dim_vec ?b; ?i < dim_row ?A |]
      ==> mat_leqb_eqc ?A ?b ?c ! ?i =
          LEQ (matrix_to_lpolies ?A ! ?i) (?b $ ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 3))))),
    ("LP_Preliminaries.x_mat_eq_vec_sol",
     "[| ?x \<Turnstile>\<^sub>c\<^sub>s set (x_mat_eq_vec ?b ?A);
         ?i < dim_vec ?b |]
      ==> matrix_to_lpolies ?A ! ?i \<lbrace> ?x \<rbrace> = ?b $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("LP_Preliminaries.vars_from_index_geq_sat",
     "[| \<langle>?x\<rangle> \<Turnstile>\<^sub>c\<^sub>s
         set (vars_from_index_geq_vec ?start ?b);
         ?i < dim_vec ?b |]
      ==> ?b $ ?i <= \<langle>?x\<rangle> (?i + ?start)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("LP_Preliminaries.eval_lpoly_eq_dot_prod_split2",
     "(?x, ?y) = split_n_m_x (dim_vec ?b) (dim_vec ?c) ?X ==>
      vec_to_lpoly
       (0\<^sub>v (dim_vec ?b) @\<^sub>v
        ?c) \<lbrace> \<langle>?X\<rangle> \<rbrace> =
      ?c \<bullet> ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 9, template_var 2)),
                template_app (template_hole 7, template_var 1))),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 9, template_var 2))),
                 template_var 1))),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("LP_Preliminaries.two_block_non_interfering_mult_decomposition",
     "dim_col ?A + dim_col ?B = dim_vec ?v ==>
      two_block_non_interfering ?A ?B *\<^sub>v ?v =
      ?A *\<^sub>v vec_first ?v (dim_col ?A) @\<^sub>v
      ?B *\<^sub>v vec_last ?v (dim_col ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 7, template_var 1)),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 7, template_var 2)))),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 7, template_var 1))))))),
    ("LP_Preliminaries.mat_x_leq_vec_sol",
     "[| \<langle>?x\<rangle> \<Turnstile>\<^sub>c\<^sub>s
         set (mat_x_leq_vec ?A ?b);
         ?i < dim_vec ?b |]
      ==> matrix_to_lpolies ?A ! ?i \<lbrace> \<langle>?x\<rangle> \<rbrace>
          <= ?b $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 0)),
           template_app (template_hole 7, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("LP_Preliminaries.split_access_snd_1",
     "[| ?i <= ?k; ?k < ?j; split_i_j_x ?i ?j ?x = (?a, ?b) |]
      ==> ?b $ (?k - ?i) = \<langle>?x\<rangle> ?k",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_inequation (less_than, template_var 4, template_var 3),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 5),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 5)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 4)))),
    ("LP_Preliminaries.two_block_non_interfering_zeros_are_0",
     "[| ?i < dim_row ?A; dim_col ?A <= ?j;
         ?j < dim_col (two_block_non_interfering ?A ?B) |]
      ==> two_block_non_interfering ?A ?B $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_hole 0))),
    ("LP_Preliminaries.x_times_c_geq_y_times_b_correct",
     "simplex [x_times_c_geq_y_times_b ?c ?b] = Inr ?x ==>
      vec_to_lpoly
       (0\<^sub>v (dim_vec ?c) @\<^sub>v
        ?b) \<lbrace> \<langle>?x\<rangle> \<rbrace>
      <= vec_to_lpoly
          (?c @\<^sub>v
           0\<^sub>v
            (dim_vec ?b)) \<lbrace> \<langle>?x\<rangle> \<rbrace>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_hole 8)),
          template_app (template_hole 7, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2))),
                 template_var 1))),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1))))),
           template_app (template_hole 0, template_var 0))))),
    ("LP_Preliminaries.two_block_non_interfering_row_comp2",
     "[| ?i < dim_row (two_block_non_interfering ?A ?B); dim_row ?A <= ?i |]
      ==> row (two_block_non_interfering ?A ?B) ?i =
          0\<^sub>v (dim_col ?A) @\<^sub>v row ?B (?i - dim_row ?A)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0))),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 1),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1))),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 8, template_var 1))))))),
    ("LP_Preliminaries.x_times_c_geq_y_times_b_split_dotP",
     "[| \<langle>?X\<rangle> \<Turnstile>\<^sub>c
         x_times_c_geq_y_times_b ?c ?b;
         (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X |]
      ==> ?b \<bullet> ?y <= ?c \<bullet> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 4)),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 3, template_var 3)),
                template_app (template_hole 3, template_var 2))),
            template_var 4))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("LP_Preliminaries.first_vec_two_block_non_inter_is_first_vec",
     "[| dim_col ?A + dim_col ?B = dim_vec ?v; dim_row ?A = ?n |]
      ==> vec_first (two_block_non_interfering ?A ?B *\<^sub>v ?v) ?n =
          ?A *\<^sub>v vec_first ?v (dim_col ?A)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 3)),
            template_app (template_hole 6, template_var 2)),
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 3), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 6, template_var 3)))))),
    ("LP_Preliminaries.last_vec_two_block_non_inter_is_last_vec",
     "[| dim_col ?A + dim_col ?B = dim_vec ?v; dim_row ?B = ?n |]
      ==> vec_last (two_block_non_interfering ?A ?B *\<^sub>v ?v) ?n =
          ?B *\<^sub>v vec_last ?v (dim_col ?B)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 3)),
            template_app (template_hole 6, template_var 2)),
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 2), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 6, template_var 2)))))),
    ("LP_Preliminaries.mat_leqb_eqc_split_simplex_correct1",
     "[| dim_vec ?b = dim_row ?A; simplex (mat_leqb_eqc ?A ?b ?c) = Inr ?X;
         (?x, ?y) = split_i_j_x (dim_col ?A) ?l ?X |]
      ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 6),
          template_app (template_hole 9, template_var 5)),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 6),
              template_var 4)),
          template_app (template_hole 5, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 5)),
              template_var 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 6)
           ))),
    ("LP_Preliminaries.soundness_mat_leqb_eqc2",
     "[| dim_row ?A\<^sup>T = dim_vec ?c; dim_col ?A\<^sup>T = dim_vec ?b;
         simplex (mat_leqb_eqc ?A ?b ?c) = Inr ?X |]
      ==> EX y. [y\<^sub>v*?A]=?c",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 3)),
          template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 8, template_var 3)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1),
              template_var 2)),
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("LP_Preliminaries.from_index_geq0_vector_simplex2",
     "[| \<langle>?x\<rangle> \<Turnstile>\<^sub>c\<^sub>s
         set (from_index_geq0_vector ?i ?v);
         ?i <= ?j; ?j < dim_vec ?v + ?i |]
      ==> ?v $ (?j - ?i) <= \<langle>?x\<rangle> ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2)),
            template_var 3))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_var 0)))),
    ("LP_Preliminaries.mat_leqb_eqc_satisfies1",
     "[| ?x \<Turnstile>\<^sub>c\<^sub>s set (mat_leqb_eqc ?A ?b ?c);
         ?i < dim_vec ?b; ?i < dim_row ?A |]
      ==> matrix_to_lpolies ?A ! ?i \<lbrace> ?x \<rbrace> <= ?b $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_app (template_hole 9, template_var 4),
                      template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 6, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 4))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 4)),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("LP_Preliminaries.mat_leqb_eqc_split_correct1",
     "[| dim_vec ?b = dim_row ?A;
         \<langle>?X\<rangle> \<Turnstile>\<^sub>c\<^sub>s
         set (mat_leqb_eqc ?A ?b ?c);
         (?x, ?y) = split_i_j_x (dim_col ?A) ?l ?X |]
      ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 6),
          template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 5),
                      template_var 6),
                    template_var 4))),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 5)),
              template_var 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 6)
           ))),
    ("LP_Preliminaries.mult_right_leq",
     "[| dim_vec ?y = dim_vec ?b; ALL i<dim_vec ?y. (0::?'a) <= ?y $ i;
         [?A*\<^sub>v?x]\<le>?b |]
      ==> (?A *\<^sub>v ?x) \<bullet> ?y <= ?b \<bullet> ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 3)))),
    ("LP_Preliminaries.mat_times_vec_leqI",
     "[| dim_row ?A = dim_vec ?b; dim_col ?A = dim_vec ?x;
         !!i. i < dim_vec ?b ==> (?A *\<^sub>v ?x) $ i <= ?b $ i |]
      ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("LP_Preliminaries.mat_leqb_eqc_split_subset_correct1",
     "[| dim_vec ?b = dim_row ?A; set (mat_leqb_eqc ?A ?b ?c) <= set ?S;
         simplex ?S = Inr ?X; (?x, ?y) = split_i_j_x (dim_col ?A) ?l ?X |]
      ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 7),
          template_app (template_hole 11, template_var 6)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_app (template_hole 8, template_var 6),
                template_var 7),
              template_var 5)),
          template_app (template_hole 9, template_var 4)),
        template_equation
         (template_app (template_hole 6, template_var 4),
          template_app (template_hole 5, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 6)),
              template_var 0),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 2),
             template_var 7)
           ))),
    ("LP_Preliminaries.split_coeff_vec_index_sum",
     "(?x, ?y) = split_i_j_x (dim_vec (lpoly_to_vec ?v)) ?l ?X ==>
      (SUM i = 0..<dim_vec ?x.
       Abstract_Linear_Poly.coeff ?v i * \<langle>?X\<rangle> i) =
      (SUM i = 0..<dim_vec ?x. lpoly_to_vec ?v $ i * ?x $ i)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 2))),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 9, template_var 4))),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 9, template_var 4)))))),
    ("LP_Preliminaries.sound_and_compltete_mat_leqb_eqc",
     "[| dim_row ?A\<^sup>T = dim_vec ?c; dim_col ?A\<^sup>T = dim_vec ?b |]
      ==> ((EX x. [?A*\<^sub>vx]\<le>?b) & (EX y. [y\<^sub>v*?A]=?c)) =
          (EX X. simplex (mat_leqb_eqc ?A ?b ?c) = Inr X)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 2)),
          template_app (template_hole 11, template_var 1)),
        template_equation
         (template_app
           (template_hole 10,
            template_app (template_hole 12, template_var 2)),
          template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           template_app (template_hole 7, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("LP_Preliminaries.mat_times_vec_eqI",
     "[| dim_col ?A\<^sup>T = dim_vec ?x; dim_row ?A\<^sup>T = dim_vec ?c;
         !!i. i < dim_vec ?c ==> (?A\<^sup>T *\<^sub>v ?x) $ i = ?c $ i |]
      ==> [?x\<^sub>v*?A]=?c",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 8, template_var 2)),
          template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("LP_Preliminaries.from_index_geq0_vector_split_snd",
     "[| \<langle>?X\<rangle> \<Turnstile>\<^sub>c\<^sub>s
         set (from_index_geq0_vector ?d ?v);
         (?x, ?y) = split_n_m_x ?d ?m ?X; ?i < dim_vec ?v; ?i < ?m |]
      ==> ?v $ ?i <= ?y $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 5))),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app
           (template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 1)),
            template_var 4)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 5)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 5), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("LP_Preliminaries.mat_leqb_eqc_correct",
     "[| dim_vec ?c = dim_row ?A\<^sup>T; dim_vec ?b = dim_col ?A\<^sup>T;
         simplex (mat_leqb_eqc ?A ?b ?c) = Inr ?X;
         (?x, ?y) =
         split_n_m_x (dim_row ?A\<^sup>T) (dim_col ?A\<^sup>T) ?X |]
      ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 5),
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_var 4))),
        template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_hole 9,
            template_app (template_hole 10, template_var 4))),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 5)),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 4))),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 4))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 10, template_var 4)))),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 3)
           ))),
    ("LP_Preliminaries.mat_leqb_eqc_split_simplex_correct2",
     "[| dim_vec ?c = dim_row ?A\<^sup>T; dim_vec ?b = dim_col ?A\<^sup>T;
         simplex (mat_leqb_eqc ?A ?b ?c) = Inr ?X;
         (?x, ?y) =
         split_n_m_x (dim_row ?A\<^sup>T) (dim_col ?A\<^sup>T) ?X |]
      ==> [?y\<^sub>v*?A]=?c",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 5),
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_var 4))),
        template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_hole 9,
            template_app (template_hole 10, template_var 4))),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 5)),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 4))),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 4))),
                template_app
                 (template_hole 9,
                  template_app (template_hole 10, template_var 4)))),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 5)
           ))),
    ("LP_Preliminaries.mat_leqb_eqc_split_correct2",
     "[| dim_vec ?c = dim_row ?A\<^sup>T; dim_vec ?b = dim_col ?A\<^sup>T;
         \<langle>?X\<rangle> \<Turnstile>\<^sub>c\<^sub>s
         set (mat_leqb_eqc ?A ?b ?c);
         (?x, ?y) =
         split_n_m_x (dim_row ?A\<^sup>T) (dim_col ?A\<^sup>T) ?X |]
      ==> [?y\<^sub>v*?A]=?c",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 5),
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 4))),
        template_equation
         (template_app (template_hole 13, template_var 3),
          template_app
           (template_hole 10,
            template_app (template_hole 11, template_var 4))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3),
                    template_var 5))),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 4))),
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 4))),
                template_app
                 (template_hole 10,
                  template_app (template_hole 11, template_var 4)))),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 5)
           ))),
    ("LP_Preliminaries.mat_leqb_eqc_for_EQ",
     "[| dim_vec ?b <= ?i; ?i < dim_vec (?b @\<^sub>v ?c);
         dim_row ?A = dim_vec ?b; dim_vec ?c <= dim_col ?A |]
      ==> mat_leqb_eqc ?A ?b ?c ! ?i =
          EQ (vec_to_lpoly
               (0\<^sub>v (dim_col ?A) @\<^sub>v
                row ?A\<^sup>T (?i - dim_vec ?b)))
           (?c $ (?i - dim_vec ?b))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 15, template_var 3),
          template_var 2),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 1))),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_app (template_hole 15, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 15, template_var 1),
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 3),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 10, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app (template_hole 15, template_var 3)))))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 15, template_var 3))))))),
    ("LP_Preliminaries.mat_leqb_eqc_simplex_satisfies2",
     "[| simplex (mat_leqb_eqc ?A ?b ?c) = Inr ?x; dim_vec ?b <= ?i;
         ?i < dim_vec (?b @\<^sub>v ?c); dim_row ?A = dim_vec ?b;
         dim_vec ?c <= dim_col ?A |]
      ==> matrix_to_lpolies (two_block_non_interfering ?A ?A\<^sup>T) !
          ?i \<lbrace> \<langle>?x\<rangle> \<rbrace> =
          (?b @\<^sub>v ?c) $ ?i",
     template_implication
      ([template_equation
         (template_app
           (template_hole 17,
            template_app
             (template_app
               (template_app (template_hole 16, template_var 4),
                template_var 3),
              template_var 2)),
          template_app (template_hole 15, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 3),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2))),
        template_equation
         (template_app (template_hole 9, template_var 4),
          template_app (template_hole 13, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 2),
          template_app (template_hole 8, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app (template_hole 2, template_var 4)))),
               template_var 0)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 11, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("LP_Preliminaries.mat_leqb_eqc_satisfies2",
     "[| ?x \<Turnstile>\<^sub>c\<^sub>s set (mat_leqb_eqc ?A ?b ?c);
         dim_vec ?b <= ?i; ?i < dim_vec (?b @\<^sub>v ?c);
         dim_row ?A = dim_vec ?b; dim_vec ?c <= dim_col ?A |]
      ==> matrix_to_lpolies (two_block_non_interfering ?A ?A\<^sup>T) !
          ?i \<lbrace> ?x \<rbrace> =
          (?b @\<^sub>v ?c) $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_app (template_hole 15, template_var 4),
                      template_var 3),
                    template_var 2))),
              t_empty)
            ),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 3),
          template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2))),
        template_equation
         (template_app (template_hole 8, template_var 4),
          template_app (template_hole 12, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 12, template_var 2),
          template_app (template_hole 7, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_app (template_hole 1, template_var 4)))),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("LP_Preliminaries.non_strict_consts_cond",
     "[| !!x. x : set ?cs ==> \<nexists>a b. LT a b = x;
         !!x. x : set ?cs ==> \<nexists>a b. GT a b = x;
         !!x. x : set ?cs ==> \<nexists>a b. LTPP a b = x;
         !!x. x : set ?cs ==> \<nexists>a b. GTPP a b = x |]
      ==> nonstrict_constrs ?cs",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 10, template_var 0)),
             t_empty)
           )))]
