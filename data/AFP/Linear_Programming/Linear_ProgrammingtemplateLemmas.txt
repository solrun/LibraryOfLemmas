   [("Linear_Programming.comparator_atom",
     "comparator ?comp\<^sub>'\<^sub>a ==>
      comparator (comparator_atom ?comp\<^sub>'\<^sub>a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Linear_Programming.comparator_atom_simps",
     "comparator_atom ?comp\<^sub>'\<^sub>a (Geq ?x ?xa) (Leq ?y ?ya) = Gt",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Linear_Programming.comparator_atom_simps",
     "comparator_atom ?comp\<^sub>'\<^sub>a (Leq ?x ?xa) (Geq ?yb ?yc) =
      Lt",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Linear_Programming.sat_primalI",
     "[?A*\<^sub>v?x]\<le>?b ==> ?x : sat_primal ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Linear_Programming.sat_primalD",
     "?x : sat_primal ?A ?b ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)
           ))),
    ("Linear_Programming.sat_dualD",
     "?y : sat_dual ?A ?c ==> [?y\<^sub>v*?A]=?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Linear_Programming.sol_dim_in_sat_dual",
     "?x : sat_dual ?A ?c ==> dim_vec ?x = dim_row ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Linear_Programming.sol_dim_in_sat_primal",
     "?x : sat_primal ?A ?b ==> dim_vec ?x = dim_col ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("Linear_Programming.maximize_option_elim",
     "maximize ?A ?b ?c = Some ?x ==> dim_vec ?b = dim_row ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 3)))),
    ("Linear_Programming.maximize_option_elim",
     "maximize ?A ?b ?c = Some ?x ==> dim_vec ?c = dim_col ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 3)))),
    ("Linear_Programming.optimize_sat",
     "maximize ?A ?b ?c = Some (Inr ?x) ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 2)
           ))),
    ("Linear_Programming.optimize_sol_dimension",
     "maximize ?A ?b ?c = Some (Inr ?x) ==> ?x : carrier_vec (dim_col ?A)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)))
           ))),
    ("Linear_Programming.of_rat_val",
     "simplex ?cs = Inr ?v ==>
      of_rat_val \<langle>?v\<rangle> \<Turnstile>\<^sub>r\<^sub>c\<^sub>s
      set ?cs",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             t_empty)
           ))),
    ("Linear_Programming.comparator_atom_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_atom ?x\<^sub>0 ==>
          peq_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      peq_comp (comparator_atom ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Linear_Programming.comparator_atom_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_atom ?x\<^sub>0 ==>
          psym_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      psym_comp (comparator_atom ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Linear_Programming.comparator_atom_pointwise",
     "(!!x\<^sub>0\<^sub>_\<^sub>0.
          x\<^sub>0\<^sub>_\<^sub>0 : set_atom ?x\<^sub>0 ==>
          ptrans_comp ?comp\<^sub>'\<^sub>a x\<^sub>0\<^sub>_\<^sub>0) ==>
      ptrans_comp (comparator_atom ?comp\<^sub>'\<^sub>a) ?x\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Linear_Programming.comparator_atom_simps",
     "comparator_atom ?comp\<^sub>'\<^sub>a (Geq ?x ?xa) (Geq ?yb ?yc) =
      (case comparator_of ?x ?yb of Eq => ?comp\<^sub>'\<^sub>a ?xa ?yc
       | Lt => Lt | Gt => Gt)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 4),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_var 4, template_var 2),
                 template_var 0)),
             template_hole 2),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("Linear_Programming.comparator_atom_simps",
     "comparator_atom ?comp\<^sub>'\<^sub>a (Leq ?x ?xa) (Leq ?y ?ya) =
      (case comparator_of ?x ?y of Eq => ?comp\<^sub>'\<^sub>a ?xa ?ya
       | Lt => Lt | Gt => Gt)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 4),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_var 4, template_var 2),
                 template_var 0)),
             template_hole 2),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("Linear_Programming.sat_dualD",
     "?y : sat_dual ?A ?c ==> ALL i<dim_vec ?y. (0::?'a) <= ?y $ i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Linear_Programming.sol_dim_in_max_lp",
     "?x : max_lp ?A ?b ?c ==> dim_vec ?x = dim_col ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, t_empty),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app (template_hole 1, template_var 3),
         template_app (template_hole 0, template_var 1)))),
    ("Linear_Programming.max_lp_in_sat_primal",
     "?x : max_lp ?A ?b ?c ==> ?x : sat_primal ?A ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, t_empty),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linear_Programming.sol_dim_in_min_lp",
     "?x : optimal_set (%x y. x \<bullet> ?c <= y \<bullet> ?c)
            (sat_dual ?A ?c) ==>
      dim_vec ?x = dim_row ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, t_empty),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)))
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Linear_Programming.min_lp_in_sat_dual",
     "?x : optimal_set (%x y. x \<bullet> ?c <= y \<bullet> ?c)
            (sat_dual ?A ?c) ==>
      ?x : sat_dual ?A ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, t_empty),
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Linear_Programming.optimize_sound",
     "maximize ?A ?b ?c = Some (Inr ?x) ==> ?x : max_lp ?A ?b ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)))
           ))),
    ("Linear_Programming.sat_dualI",
     "[| [?y\<^sub>v*?A]=?c; ALL i<dim_vec ?y. (0::?'a) <= ?y $ i |]
      ==> ?y : sat_dual ?A ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Linear_Programming.create_opt_sol_satisfies",
     "create_optimal_solutions ?A ?b ?c = Inr ?X ==>
      \<langle>?X\<rangle> \<Turnstile>\<^sub>c\<^sub>s
      set (x_times_c_geq_y_times_b ?c ?b #
           mat_leqb_eqc ?A ?b ?c @
           from_index_geq0_vector (dim_vec ?c) (0\<^sub>v (dim_vec ?b)))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 12, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 11, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app (template_hole 5, template_var 3),
                           template_var 2),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_var 1)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 3, template_var 2))))))),
             t_empty)
           ))),
    ("Linear_Programming.create_opt_sol_satisfies_leq",
     "[| create_optimal_solutions ?A ?b ?c = Inr ?X;
         (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X |]
      ==> ?y \<bullet> ?b <= ?x \<bullet> ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 7, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 3, template_var 3)),
                template_app (template_hole 3, template_var 4))),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 4),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("Linear_Programming.create_opt_sol_sat_leq_mat",
     "[| dim_vec ?b = dim_row ?A;
         create_optimal_solutions ?A ?b ?c = Inr ?X;
         (?x, ?y) = split_i_j_x (dim_col ?A) (dim_vec ?b) ?X |]
      ==> [?A*\<^sub>v?x]\<le>?b",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 5),
          template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 4),
              template_var 5),
            template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 4)),
              template_app (template_hole 9, template_var 5)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 5)
           ))),
    ("Linear_Programming.optimal_setI",
     "[| ?x : ?S; !!y. y : ?S ==> ?x \<bullet> ?c <= y \<bullet> ?c |]
      ==> ?x : optimal_set (%x y. x \<bullet> ?c <= y \<bullet> ?c) ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))
           ))),
    ("Linear_Programming.create_opt_sol_satisfies_geq0",
     "[| create_optimal_solutions ?A ?b ?c = Inr ?X;
         (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X;
         ?i < dim_vec ?y |]
      ==> 0 <= ?y $ ?i",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 6),
              template_var 5),
            template_var 4),
          template_app (template_hole 9, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2), template_var 1),
          template_app
           (template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 4)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 5, template_var 4)),
                template_app (template_hole 5, template_var 5))),
            template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Linear_Programming.max_lpI",
     "[| [?A*\<^sub>v?x]\<le>?b;
         !!y. [?A*\<^sub>vy]\<le>?b ==> y \<bullet> ?c <= ?x \<bullet> ?c |]
      ==> ?x : max_lp ?A ?b ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, t_empty),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("Linear_Programming.create_opt_sol_sat_eq_mat",
     "[| dim_vec ?c = dim_row ?A\<^sup>T; dim_vec ?b = dim_col ?A\<^sup>T;
         create_optimal_solutions ?A ?b ?c = Inr ?X;
         (?x, ?y) = split_n_m_x (dim_vec ?c) (dim_vec ?b) ?X |]
      ==> [?y\<^sub>v*?A]=?c",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 5),
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 4))),
        template_equation
         (template_app (template_hole 11, template_var 3),
          template_app
           (template_hole 8,
            template_app (template_hole 9, template_var 4))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3),
            template_var 5),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_app
           (template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 11, template_var 5)),
              template_app
               (template_app
                 (template_hole 1,
                  template_app (template_hole 11, template_var 5)),
                template_app (template_hole 11, template_var 3))),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4),
             template_var 5)
           ))),
    ("Linear_Programming.min_lpI",
     "[| [?y\<^sub>v*?A]=?c; !!i. i < dim_vec ?y ==> (0::?'a) <= ?y $ i;
         !!x. x : sat_dual ?A ?c ==> ?y \<bullet> ?c <= x \<bullet> ?c |]
      ==> ?y : optimal_set (%x y. x \<bullet> ?c <= y \<bullet> ?c)
                (sat_dual ?A ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, t_empty),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))
           )))]
