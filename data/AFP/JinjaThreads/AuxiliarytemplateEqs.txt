   [("Auxiliary.converse3p_converse3p", "converse3p (converse3p ?r) = ?r",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Auxiliary.snd_o_Pair_conv_id", "snd o Pair ?a = id",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Auxiliary.tl_conv_drop", "tl ?xs = drop 1 ?xs",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Auxiliary.list_all2_op_eq", "list_all2 (=) ?xs ?ys = (?xs = ?ys)",
     template_bimplication
      (template_dunno, template_equation (template_var 1, template_var 0))),
    ("Auxiliary.eval_single_conv",
     "pred.eval (Predicate.single ?a) ?b = (?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Auxiliary.foldr_insert_conv_set",
     "foldr insert ?xs ?A = ?A Un set ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Auxiliary.rtrancl3p_Nil", "rtrancl3p ?r ?a [] ?a' = (?a = ?a')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Auxiliary.explode_add",
     "literal.explode (?s + ?t) = literal.explode ?s @ literal.explode ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Auxiliary.zip_same_conv", "zip ?xs ?xs = map (%x. (x, x)) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Auxiliary.ex_set_conv", "(EX x. x : set ?xs) = (?xs ~= [])",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Auxiliary.if_else_if_else_eq_if_else",
     "(if ?b then ?x else if ?b then ?y else ?z) = (if ?b then ?x else ?z)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_var 0))),
    ("Auxiliary.list_all2_refl_conv",
     "list_all2 ?P ?xs ?xs = (ALL x:set ?xs. ?P x x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Auxiliary.in_ran_conv",
     "(?v : ran ?m) = (EX k. ?m k = \<lfloor>?v\<rfloor>)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Auxiliary.replicate_Suc_snoc",
     "replicate (Suc ?n) ?x = replicate ?n ?x @ [?x]",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Auxiliary.filter_replicate_conv",
     "filter ?P (replicate ?n ?x) =
      (if ?P ?x then replicate ?n ?x else [])",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Auxiliary.map_upd_map_add", "?X(?V |-> ?v) = ?X ++ [?V |-> ?v]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("Auxiliary.dropWhile_eq_same_conv",
     "(dropWhile ?P ?xs = ?xs) = (?xs = [] | ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_var 0),
       template_dunno)),
    ("Auxiliary.takeWhile_eq_Nil_conv",
     "(takeWhile ?P ?xs = []) = (?xs = [] | ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_dunno)),
    ("Auxiliary.subset_code",
     "(set ?xs <= set ?ys) = (ALL x:set ?xs. x : set ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 1)),
         t_empty))),
    ("Auxiliary.takeWhile_takeWhile",
     "takeWhile ?P (takeWhile ?Q ?xs) = takeWhile (%x. ?P x & ?Q x) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Auxiliary.rel_option_Some2",
     "rel_option ?R ?x \<lfloor>?y\<rfloor> =
      (EX x'. ?x = \<lfloor>x'\<rfloor> & ?R x' ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.rel_option_Some1",
     "rel_option ?R \<lfloor>?x\<rfloor> ?y =
      (EX y'. ?y = \<lfloor>y'\<rfloor> & ?R ?x y')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.eval_bind_conv",
     "pred.eval (?P >>= ?R) ?y =
      (EX x. pred.eval ?P x & pred.eval (?R x) ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Auxiliary.foldr_filter_conv",
     "foldr ?f (filter ?P ?xs) =
      foldr (%x s. if ?P x then ?f x s else s) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("Auxiliary.case_option_conv_if",
     "(case ?v of None => ?f | \<lfloor>x\<rfloor> => ?g x) =
      (if EX a. ?v = \<lfloor>a\<rfloor> then ?g (the ?v) else ?f)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_app
            (template_var 1,
             template_app (template_hole 0, template_var 0))),
         template_var 2))),
    ("Auxiliary.map_eq_map_conv",
     "(map ?f ?xs = map ?g ?ys) = list_all2 (%x y. ?f x = ?g y) ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 2),
         template_var 0))),
    ("Auxiliary.length_greater_Suc_0_conv",
     "(Suc 0 < length ?xs) = (EX x x' xs'. ?xs = x # x' # xs')",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app (template_hole 6, template_hole 5)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.distinct_fst_Cons",
     "distinct_fst ((?k, ?x) # ?kxs) =
      (distinct_fst ?kxs & (ALL y. (?k, y) ~: set ?kxs))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 7, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("Auxiliary.Option_bind_eq_Some_conv",
     "(?x >>= ?y = \<lfloor>?z\<rfloor>) =
      (EX x'. ?x = \<lfloor>x'\<rfloor> & ?y x' = \<lfloor>?z\<rfloor>)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.nat_add_max_le",
     "(?n + max ?i ?j <= ?m) = (?n + ?i <= ?m & ?n + ?j <= ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Auxiliary.nat_fun_sum_eq_conv",
     "((%a. ?f a + ?g a) = (%a. 0)) = (?f = (%a. 0) & ?g = (%a. 0))",
     template_bimplication
      (template_equation (t_empty, t_empty), template_dunno)),
    ("Auxiliary.rtrancl3p_Cons",
     "rtrancl3p ?r ?a (?b # ?bs) ?a' =
      (EX a''. ?r ?a ?b a'' & rtrancl3p ?r a'' ?bs ?a')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Auxiliary.Collect_eq_singleton_conv",
     "({a. ?P a} = {?a}) = (?P ?a & (ALL a'. ?P a' --> ?a = a'))",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_var 0)),
         template_app (template_hole 2, t_empty)))),
    ("Auxiliary.Collect_conv_UN_singleton",
     "{?f x |x. x : ?P} = (UN x:?P. {?f x})",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("Auxiliary.Option_bind_eq_None_conv",
     "(?x >>= ?y = None) =
      (?x = None | (EX x'. ?x = \<lfloor>x'\<rfloor> & ?y x' = None))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 7, template_var 1), template_var 0),
         template_hole 6),
       template_dunno)),
    ("Auxiliary.rel_list_all2_Cons",
     "list_all2 (fun_of ?S) (?x # ?xs) (?y # ?ys) =
      ((?x, ?y) : ?S & list_all2 (fun_of ?S) ?xs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 4)),
             template_var 2),
           template_var 0)))),
    ("Auxiliary.Suc_add_max_le",
     "(Suc (?n + max ?i ?j) <= ?m) =
      (Suc (?n + ?i) <= ?m & Suc (?n + ?j) <= ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1))),
           template_var 0)))),
    ("Auxiliary.disj_split",
     "?P (?a | ?b) =
      ((?a --> ?P True) & (?b --> ?P True) & (~ ?a & ~ ?b --> ?P False))",
     template_equation
      (template_app
        (template_var 2,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_var 2, template_hole 2))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_var 2, template_hole 2))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 1, template_var 0))),
             template_app (template_var 2, template_hole 0)))))),
    ("Auxiliary.dropWhile_eq_hd_conv",
     "(dropWhile ?P ?xs = hd ?xs # ?rest) =
      (?xs ~= [] & ?rest = tl ?xs & ~ ?P (hd ?xs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0)),
       template_dunno)),
    ("Auxiliary.disj_split_asm",
     "?P (?a | ?b) =
      (~ (?a & ~ ?P True | ?b & ~ ?P True | ~ ?a & ~ ?b & ~ ?P False))",
     template_equation
      (template_app
        (template_var 2,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 3,
                 template_app (template_var 2, template_hole 1)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_var 2, template_hole 1)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_hole 3,
                   template_app (template_var 2, template_hole 0))))))))),
    ("Auxiliary.map_eq_all_nth_conv",
     "(map ?f ?xs = ?ys) =
      (length ?xs = length ?ys &
       (ALL n<length ?xs. ?f (?xs ! n) = ?ys ! n))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 10, template_var 2), template_var 1),
         template_var 0),
       template_dunno)),
    ("Auxiliary.replicate_eq_append_conv",
     "(replicate ?n ?x = ?xs @ ?ys) =
      (EX m<=?n. ?xs = replicate m ?x & ?ys = replicate (?n - m) ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.append_eq_map_conv",
     "(?ys @ ?zs = map ?f ?xs) =
      (EX ys' zs'. map ?f ys' = ?ys & map ?f zs' = ?zs & ?xs = ys' @ zs')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.map_eq_append_conv",
     "(map ?f ?xs = ?ys @ ?zs) =
      (EX ys' zs'. map ?f ys' = ?ys & map ?f zs' = ?zs & ?xs = ys' @ zs')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Auxiliary.rel_list_all2_Cons2",
     "list_all2 (fun_of ?S) ?xs (?y # ?ys) =
      (EX z zs.
          ?xs = z # zs & (z, ?y) : ?S & list_all2 (fun_of ?S) zs ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Auxiliary.rel_list_all2_Cons1",
     "list_all2 (fun_of ?S) (?x # ?xs) ?ys =
      (EX z zs.
          ?ys = z # zs & (?x, z) : ?S & list_all2 (fun_of ?S) ?xs zs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 3)),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 6, t_empty)))]
