   [("JMM_Compiler.external_actions_committed_compP",
     "external_actions_committed (compP ?f ?P) =
      external_actions_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.justification_well_formed_compP",
     "justification_well_formed (compP ?f ?P) =
      justification_well_formed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.uncommitted_reads_see_hb_compP",
     "uncommitted_reads_see_hb (compP ?f ?P) = uncommitted_reads_see_hb ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.correctly_synchronized_compP",
     "correctly_synchronized (compP ?f ?P) = correctly_synchronized ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.addr_locs_compP",
     "addr_locs (compP ?f ?P) = addr_locs ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_volatile_compP",
     "is_volatile (compP ?f ?P) = is_volatile ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.value_written_aux_compP",
     "value_written_aux (compP ?f ?P) = value_written_aux ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.action_loc_aux_compP",
     "action_loc_aux (compP ?f ?P) = action_loc_aux ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.saction_compP", "saction (compP ?f ?P) = saction ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.syncronizes_with_compP",
     "synchronizes_with (compP ?f ?P) = synchronizes_with ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_justified_by_compP",
     "is_justified_by (compP ?f ?P) = is_justified_by ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_weakly_justified_by_compP",
     "is_weakly_justified_by (compP ?f ?P) = is_weakly_justified_by ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sequentially_consistent_compP",
     "sequentially_consistent (compP ?f ?P) = sequentially_consistent ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.happens_before_committed_weak_compP",
     "happens_before_committed_weak (compP ?f ?P) =
      happens_before_committed_weak ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_write_seen_compP",
     "is_write_seen (compP ?f ?P) = is_write_seen ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.happens_before_committed_compP",
     "happens_before_committed (compP ?f ?P) = happens_before_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sync_order_committed_compP",
     "sync_order_committed (compP ?f ?P) = sync_order_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.value_written_committed_compP",
     "value_written_committed (compP ?f ?P) = value_written_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.most_recent_write_for_compP",
     "most_recent_write_for (compP ?f ?P) = most_recent_write_for ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.conflict_compP",
     "non_volatile_conflict (compP ?f ?P) = non_volatile_conflict ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.po_sw_compP", "po_sw (compP ?f ?P) = po_sw ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sync_order_compP",
     "sync_order (compP ?f ?P) = sync_order ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sync_with_compP",
     "sync_with (compP ?f ?P) = sync_with ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.value_written_compP",
     "value_written (compP ?f ?P) = value_written ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sactions_compP", "sactions (compP ?f ?P) = sactions ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.legal_execution_compP",
     "legal_execution (compP ?f ?P) = legal_execution ?P",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("JMM_Compiler.weakly_legal_execution_compP",
     "weakly_legal_execution (compP ?f ?P) = weakly_legal_execution ?P",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("JMM_Compiler.happens_before_compP",
     "happens_before (compP ?f ?P) = happens_before ?P",
     template_equation (t_empty, t_empty)),
    ("JMM_Compiler.action_loc_compP",
     "action_loc (compP ?f ?P) = action_loc ?P",
     template_equation (t_empty, t_empty))]
