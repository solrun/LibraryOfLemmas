   [("Kildall.length_merges", "length (merges ?f ?ps ?ss) = length ?ss",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Kildall.is_empty_spec", "(?A = []) = (set ?A = {})",
     template_bimplication
      (template_equation (template_var 0, template_hole 3),
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Kildall.insert_spec", "set (?n # ?A) = insert ?n (set ?A)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Kildall.kildall_code",
     "Kildall_base.propa ?s_insert ?f [] ?\<tau>s ?w = (?\<tau>s, ?w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_hole 1),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Kildall.remove_spec", "set (removeAll ?n ?A) = set ?A - {?n}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Kildall.s_\<alpha>_foldr_s_insert",
     "set (foldr (#) ?xs ?A) = foldr insert ?xs (set ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("Kildall.unstables_spec",
     "set (unstables ?r ?step ?\<tau>s) =
      {p. p < length ?\<tau>s & ~ stable ?r ?step ?\<tau>s p}",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_hole 6),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Kildall.kildall_code",
     "Kildall_base.unstables ?s_empty ?s_insert ?r ?step ?\<tau>s =
      foldr ?s_insert
       (filter (%p. ~ stable ?r ?step ?\<tau>s p) [0..<length ?\<tau>s])
       ?s_empty",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 0)))),
         template_var 4))),
    ("Kildall.kildall_code",
     "Kildall_base.iter ?s_is_empty ?s_choose ?s_remove ?s_insert ?f ?step
       ?\<tau>s ?w =
      while (%(\<tau>s, w). ~ ?s_is_empty w)
       (%(\<tau>s, w).
           let p = ?s_choose w
           in Kildall_base.propa ?s_insert ?f (?step p (\<tau>s ! p))
               \<tau>s (?s_remove p w))
       (?\<tau>s, ?w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 8, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Kildall.kildall_code",
     "Kildall_base.propa ?s_insert ?f (?q' # ?qs) ?\<tau>s ?w =
      (let (q, \<tau>) = ?q'; u = \<tau> +_?f ?\<tau>s ! q
       in Let (if u = ?\<tau>s ! q then ?w else ?s_insert q ?w)
           (Kildall_base.propa ?s_insert ?f ?qs (?\<tau>s[q := u])))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 8, template_var 3),
         template_app (template_hole 7, t_empty))))]
