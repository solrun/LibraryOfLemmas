   [("SC_Completion.ta_seq_consist_simps",
     "ta_seq_consist ?P ?vs LNil = True",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("SC_Completion.eq_upto_seq_inconsist_simps",
     "eq_upto_seq_inconsist ?P [] ?obs' ?vs = (?obs' = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_hole 1))),
    ("SC_Completion.eq_upto_seq_inconsist_simps",
     "eq_upto_seq_inconsist ?P ?obs [] ?vs = (?obs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_hole 1))),
    ("SC_Completion.foldl_list_all2_simps",
     "foldl_list_all2 ?f ?P ?Q [] ?ys ?s = (?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("SC_Completion.foldl_list_all2_simps",
     "foldl_list_all2 ?f ?P ?Q ?xs [] ?s = (?xs = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("SC_Completion.foldl_list_all2_simps",
     "foldl_list_all2 ?f ?P ?Q (?x # ?xs) (?y # ?ys) ?s =
      (?Q ?x ?y ?s &
       (?P ?x ?y ?s --> foldl_list_all2 ?f ?P ?Q ?xs ?ys (?f ?x ?y ?s)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_var 5, template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_var 6, template_var 4),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_app (template_var 7, template_var 4),
                 template_var 2),
               template_var 0)))))),
    ("SC_Completion.foldl_list_all2_Cons2",
     "foldl_list_all2 ?f ?P ?Q ?xs (?y # ?ys) ?s =
      (EX x xs.
          ?xs = x # xs &
          ?Q x ?y ?s &
          (?P x ?y ?s --> foldl_list_all2 ?f ?P ?Q xs ?ys (?f x ?y ?s)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("SC_Completion.foldl_list_all2_Cons1",
     "foldl_list_all2 ?f ?P ?Q (?x # ?xs) ?ys ?s =
      (EX y ys.
          ?ys = y # ys &
          ?Q ?x y ?s &
          (?P ?x y ?s --> foldl_list_all2 ?f ?P ?Q ?xs ys (?f ?x y ?s)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("SC_Completion.ta_seq_consist_simps",
     "ta_seq_consist ?P ?vs (LCons ?ob ?obs) =
      ((case ?ob of
        NormalAction (ReadMem ad al v) =>
          EX b. ?vs (ad, al) = \<lfloor>(v, b)\<rfloor>
        | NormalAction _ => True | _ => True) &
       ta_seq_consist ?P (mrw_value ?P ?vs ?ob) ?obs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 7, t_empty),
                                     t_empty),
                                   t_empty),
                                 t_empty),
                               t_empty),
                             t_empty),
                           t_empty),
                         t_empty),
                       t_empty),
                     t_empty)),
                 template_hole 6),
               template_hole 6),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 11, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("SC_Completion.eq_upto_seq_inconsist_simps",
     "eq_upto_seq_inconsist ?P (?ob # ?obs) (?ob' # ?obs') ?vs =
      (case ?ob of
       NormalAction (ReadMem ad al v) =>
         if EX b. ?vs (ad, al) = \<lfloor>(v, b)\<rfloor>
         then ?ob = ?ob' &
              eq_upto_seq_inconsist ?P ?obs ?obs' (mrw_value ?P ?vs ?ob)
         else ?ob \<approx> ?ob'
       | NormalAction _ =>
           ?ob = ?ob' &
           eq_upto_seq_inconsist ?P ?obs ?obs' (mrw_value ?P ?vs ?ob)
       | _ => ?ob = ?ob' &
              eq_upto_seq_inconsist ?P ?obs ?obs' (mrw_value ?P ?vs ?ob))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("SC_Completion.eq_upto_seq_inconsist_Cons1",
     "eq_upto_seq_inconsist ?P (?ob # ?obs) ?obs' ?vs =
      (EX ob' obs''.
          ?obs' = ob' # obs'' &
          (case ?ob of
           NormalAction (ReadMem ad al v) =>
             if EX b. ?vs (ad, al) = \<lfloor>(v, b)\<rfloor>
             then ob' = ?ob &
                  eq_upto_seq_inconsist ?P ?obs obs'' (mrw_value ?P ?vs ?ob)
             else ?ob \<approx> ob'
           | NormalAction _ =>
               ob' = ?ob &
               eq_upto_seq_inconsist ?P ?obs obs'' (mrw_value ?P ?vs ?ob)
           | _ => ob' = ?ob &
                  eq_upto_seq_inconsist ?P ?obs obs''
                   (mrw_value ?P ?vs ?ob)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 16, template_var 4),
             template_app
              (template_app (template_hole 15, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 14, t_empty)))]
