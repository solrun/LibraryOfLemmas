   [("Err.order_le_err", "order (le ?r) = order ?r",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Err.Err_lift2", "Err +_(lift2 ?f) ?x = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("Err.Err_sup_Err", "Err +_(Err.sup ?f) ?x = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_hole 0)),
    ("Err.lift2_Err", "?x +_(lift2 ?f) Err = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Err.Err_sup_Err2", "?x +_(Err.sup ?f) Err = Err",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Err.Err_le_conv", "(Err <=_(le ?r) ?e) = (?e = Err)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_hole 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 2))),
    ("Err.Ok_in_err", "(OK ?x : err ?A) = (?x : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Err.unfold_lesub_err", "(?e1.0 <=_(le ?r) ?e2.0) = le ?r ?e1.0 ?e2.0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Err.not_Err_eq", "(?x ~= Err) = (EX a. ?x = OK a)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Err.not_OK_eq", "(ALL y. ?x ~= OK y) = (?x = Err)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Err.OK_lift2_OK", "OK ?x +_(lift2 ?f) OK ?y = ?x +_?f ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Err.OK_le_err_OK", "(OK ?x <=_(le ?r) OK ?y) = (?x <=_?r ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Err.Err_sup_OK", "OK ?x +_(Err.sup ?f) OK ?y = OK (?x +_?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Err.Err_sup_eq_Err",
     "(Err.sup ?f ?ex ?ey = Err) = (?ex = Err | ?ey = Err)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 5),
       template_dunno)),
    ("Err.le_OK_conv",
     "(?e <=_(le ?r) OK ?x) = (EX y. ?e = OK y & y <=_?r ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Err.strict_Some",
     "(strict ?f ?x = OK ?y) = (EX z. ?x = OK z & ?f z = OK ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Err.all_bex_swap_lemma",
     "(ALL x. (EX y:?A. x = ?f y) --> ?P x) = (ALL y:?A. ?P (?f y))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Err.OK_less_conv",
     "(OK ?x <_(le ?r) ?e) = (?e = Err | (EX y. ?e = OK y & ?x <_?r y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 2)),
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Err.OK_le_conv",
     "(OK ?x <=_(le ?r) ?e) = (?e = Err | (EX y. ?e = OK y & ?x <=_?r y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 2)),
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Err.Err_sup_eq_OK_conv",
     "(Err.sup ?f ?ex ?ey = OK ?z) =
      (EX x y. ?ex = OK x & ?ey = OK y & ?f x y = ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 8, template_var 0)),
       template_app (template_hole 7, t_empty)))]
