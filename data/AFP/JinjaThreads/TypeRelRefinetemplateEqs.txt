   [("TypeRelRefine.ProgImpl_impl_of", "ProgRefine (impl_of ?Pi) = ?Pi",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("TypeRelRefine.Fields'_eq_Fields", "Fields' ?P = Fields (Program ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("TypeRelRefine.subcls1_eq_subcls1'",
     "subcls1 (Program ?P) = subcls1' ?P",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("TypeRelRefine.rtranclp_FioB_i_i_subcls1_i_i_o_code",
     "rtranclp_FioB_i_i (subcls1_i_i_o ?P) = subcls'_i_i_i ?P",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("TypeRelRefine.classes_program",
     "classes (program ?P) = fst (impl_of ?P)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("TypeRelRefine.eval_Fields'_conv",
     "pred.eval (Fields'_i_i_o ?P ?C) = Fields' ?P ?C",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("TypeRelRefine.class_program",
     "class (program ?Pi) = Mapping.lookup (fst (snd (impl_of ?Pi)))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("TypeRelRefine.prog_impl_eq_iff",
     "(?Pi = ?Pi') = (program ?Pi = program ?Pi')",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("TypeRelRefine.subcls''_eq_subcls",
     "subcls'' ?P = subcls (Program ?P)",
     template_equation
      (template_app (template_hole 3, template_var 0), t_empty)),
    ("TypeRelRefine.map_values_Mapping",
     "map_values ?f (mapping.Mapping ?m) =
      mapping.Mapping (%k. map_option (?f k) (?m k))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("TypeRelRefine.subcls'_i_i_i_program",
     "subcls'_i_i_i ?P ?C ?D =
      (if subcls' ?P ?C ?D then Predicate.single () else bot)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 2, template_hole 1)),
         template_hole 0))),
    ("TypeRelRefine.map_Mapping",
     "Mapping.map ?f ?g (mapping.Mapping ?m) =
      mapping.Mapping (map_option ?g o ?m o ?f)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)),
           template_var 2)))),
    ("TypeRelRefine.map_of_map_K",
     "map_of (map (%k. (k, ?c)) ?xs) ?k =
      (if ?k : set ?xs then \<lfloor>?c\<rfloor> else None)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 1))),
           template_app (template_hole 1, template_var 2)),
         template_hole 0))),
    ("TypeRelRefine.impl_of_tabulate_program",
     "impl_of (tabulate_program ?P) =
      (?P, tabulate_class ?P, tabulate_subcls ?P, tabulate_sees_field ?P,
       tabulate_Method ?P)",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, template_var 0)),
       template_app
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 0))))))),
    ("TypeRelRefine.methods'_code",
     "methods' ?P ?C =
      (let Mm = Methods'_i_i_o ?P ?C
       in if Predicate.holds (Mm >>= (%_. Predicate.single ()))
          then Predicate.the Mm else [])",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         t_empty))),
    ("TypeRelRefine.fields'_code",
     "fields' ?P ?C =
      (let FDTs = Fields'_i_i_o ?P ?C
       in if Predicate.holds (FDTs >>= (%_. Predicate.single ()))
          then Predicate.the FDTs else [])",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         t_empty))),
    ("TypeRelRefine.map_of_map2",
     "map_of (map (%(k, v). (k, ?f k v)) ?xs) ?k =
      map_option (?f ?k) (map_of ?xs ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("TypeRelRefine.subcls'_i_i_o_program",
     "subcls'_i_i_o (program ?Pi) ?C =
      sup (Predicate.single ?C)
       (case Mapping.lookup (fst (snd (snd (impl_of ?Pi)))) ?C of
        None => bot | \<lfloor>m\<rfloor> => pred_of_set m)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 7, template_hole 6), t_empty),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))),
             template_var 0))))),
    ("TypeRelRefine.subcls'_program",
     "subcls' (program ?Pi) ?C ?D =
      (?C = ?D |
       (case Mapping.lookup (fst (snd (snd (impl_of ?Pi)))) ?C of
        None => False | \<lfloor>m\<rfloor> => ?D : m))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("TypeRelRefine.tabulate_sees_field_code",
     "tabulate_sees_field ?P =
      Mapping.tabulate (map fst ?P)
       (%C. Mapping.of_alist
             (map (%((F, D), Tfm). (F, D, Tfm)) (fields' ?P C)))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 0)),
         t_empty))),
    ("TypeRelRefine.tabulate_Method_code",
     "tabulate_Method ?P =
      Mapping.tabulate (map fst ?P)
       (%C. Mapping.of_alist
             (map (%(M, rest, D). (M, D, rest)) (methods' ?P C)))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_var 0)),
         t_empty))),
    ("TypeRelRefine.check_acyclicity_code",
     "check_acyclicity ?mapping ?P =
      (let _ = map (%(C, D, uu_).
                       if C = Object then ()
                       else case Mapping.lookup ?mapping D of None => ()
                            | \<lfloor>Cs\<rfloor> =>
                                if C : Cs then cyclic_class_hierarchy
                                else ())
                ?P
       in ())",
     template_equation
      (template_app
        (template_app (template_hole 12, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_var 0)),
         t_empty))),
    ("TypeRelRefine.tablulate_subcls_code",
     "tabulate_subcls ?P =
      (let cnames = map fst ?P; cnames' = map (fst o snd) ?P;
           mapping =
             Mapping.tabulate cnames
              (%C. set (C # filter (subcls'' ?P C) cnames'));
           _ = check_acyclicity mapping ?P
       in mapping)",
     template_equation
      (template_app (template_hole 14, template_var 0),
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, template_hole 11),
             template_var 0)),
         t_empty))),
    ("TypeRelRefine.sees_field_i_i_i_o_o_o_program",
     "sees_field_i_i_i_o_o_o (program ?Pi) ?C ?F =
      (case Mapping.lookup (fst (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => bot
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?F of None => bot
           | \<lfloor>(D, T, fd)\<rfloor> => Predicate.single (T, fd, D))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 16,
             template_app (template_hole 15, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 14, template_hole 13), t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2)))))),
           template_var 1)))),
    ("TypeRelRefine.sees_field_i_i_i_o_o_i_program",
     "sees_field_i_i_i_o_o_i (program ?Pi) ?C ?F ?D =
      (case Mapping.lookup (fst (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => bot
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?F of None => bot
           | \<lfloor>(D', T, fd)\<rfloor> =>
               if ?D = D' then Predicate.single (T, fd) else bot)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 17,
               template_app (template_hole 16, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 15, template_hole 14), t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)))))),
           template_var 2)))),
    ("TypeRelRefine.Method_i_i_i_o_o_o_o_program",
     "Method_i_i_i_o_o_o_o (program ?Pi) ?C ?M =
      (case Mapping.lookup (snd (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => bot
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?M of None => bot
           | \<lfloor>(D, Ts, T, meth)\<rfloor> =>
               Predicate.single (Ts, T, meth, D))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 18,
             template_app (template_hole 17, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 16, template_hole 15), t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2)))))),
           template_var 1)))),
    ("TypeRelRefine.sees_field_program",
     "(program ?Pi \<turnstile> ?C sees ?F:?T (?fd) in ?D) =
      (case Mapping.lookup (fst (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => False
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?F of None => False
           | \<lfloor>(D', T', fd')\<rfloor> =>
               ?T = T' & ?fd = fd' & ?D = D')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 17,
                   template_app (template_hole 16, template_var 5)),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 15, template_hole 14), t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 5)))))),
           template_var 4)))),
    ("TypeRelRefine.Method_i_i_i_o_o_o_i_program",
     "Method_i_i_i_o_o_o_i (program ?Pi) ?C ?M ?D =
      (case Mapping.lookup (snd (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => bot
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?M of None => bot
           | \<lfloor>(D', Ts, T, meth)\<rfloor> =>
               if ?D = D' then Predicate.single (Ts, T, meth) else bot)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 19,
               template_app (template_hole 18, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 17, template_hole 16), t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)))))),
           template_var 2)))),
    ("TypeRelRefine.Method_program",
     "(program
        ?Pi \<turnstile> ?C sees ?M: ?Ts\<rightarrow>?T = ?meth in ?D) =
      (case Mapping.lookup (snd (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => False
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?M of None => False
           | \<lfloor>(D', Ts', T', meth')\<rfloor> =>
               ?Ts = Ts' & ?T = T' & ?meth = meth' & ?D = D')",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 19,
                     template_app (template_hole 18, template_var 6)),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 17, template_hole 16), t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 6)))))),
           template_var 5)))),
    ("TypeRelRefine.field_program",
     "field (program ?Pi) ?C ?F =
      (case Mapping.lookup (fst (snd (snd (snd (impl_of ?Pi))))) ?C of
       None => Code.abort STR ''not_unique'' (%_. Predicate.the bot)
       | \<lfloor>m\<rfloor> =>
           case Mapping.lookup m ?F of
           None => Code.abort STR ''not_unique'' (%_. Predicate.the bot)
           | \<lfloor>(D', T, fd)\<rfloor> => (D', T, fd))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 21,
             template_app (template_hole 20, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 17, template_hole 16),
                               template_hole 15),
                             template_hole 15),
                           template_hole 15),
                         template_hole 16),
                       template_hole 15),
                     template_hole 15),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 17, template_hole 15),
                                 template_hole 15),
                               template_hole 15),
                             template_hole 15),
                           template_hole 16),
                         template_hole 15),
                       template_hole 15),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 17, template_hole 16),
                                   template_hole 16),
                                 template_hole 15),
                               template_hole 16),
                             template_hole 15),
                           template_hole 15),
                         template_hole 15),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 17, template_hole 15),
                                     template_hole 15),
                                   template_hole 15),
                                 template_hole 15),
                               template_hole 15),
                             template_hole 16),
                           template_hole 15),
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 17, template_hole 15), template_hole 16),
                                     template_hole 15),
                                   template_hole 16),
                                 template_hole 15),
                               template_hole 15),
                             template_hole 15),
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 17, template_hole 16), template_hole 15),
 template_hole 15),
                                     template_hole 15),
                                   template_hole 16),
                                 template_hole 15),
                               template_hole 15),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 17, template_hole 15), template_hole 16),
   template_hole 16),
 template_hole 15),
                                     template_hole 16),
                                   template_hole 15),
                                 template_hole 15),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 17, template_hole 15), template_hole 16),
     template_hole 16),
   template_hole 16),
 template_hole 15),
                                     template_hole 15),
                                   template_hole 15),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 17, template_hole 15),
         template_hole 16),
       template_hole 15),
     template_hole 16),
   template_hole 15),
 template_hole 15),
                                     template_hole 15),
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 17, template_hole 15),
           template_hole 16),
         template_hole 15),
       template_hole 16),
     template_hole 16),
   template_hole 15),
 template_hole 15),
                                     template_hole 14))))))))))),
               t_empty)),
           t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2)))))),
           template_var 1))))]
