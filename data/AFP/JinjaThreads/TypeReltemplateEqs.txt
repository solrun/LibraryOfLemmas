   [("TypeRel.subcls_conv_subcls'", "subcls ?P = subcls' ?P",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("TypeRel.fields_code",
     "TypeRel.fields ?P ?C = Predicate.the (Fields_i_i_o ?P ?C)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("TypeRel.Object_subcls_conv",
     "?P \<turnstile> Object \<preceq>\<^sup>* ?C = (?C = Object)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("TypeRel.is_lub_Void",
     "(?P \<turnstile> lub(Void, Void) = ?T) = (?T = Void)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("TypeRel.eval_Fields_conv",
     "pred.eval (Fields_i_i_o ?P ?C) = Fields ?P ?C",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("TypeRel.widen_i_i_i'_equation",
     "?x1.0 \<turnstile> ?x2.0 \<le> ?x3.0 =
      Predicate.holds (widen_i_i_i' ?x1.0 ?x2.0 ?x3.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("TypeRel.Class_widen_Class",
     "?P \<turnstile> Class ?C \<le> Class ?D =
      ?P \<turnstile> ?C \<preceq>\<^sup>* ?D",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("TypeRel.widen_i_i_i_code",
     "widen_i_i_i ?P ?T ?T' =
      (if ?P \<turnstile> ?T \<le> ?T' then Predicate.single () else bot)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 2, template_hole 1)),
         template_hole 0))),
    ("TypeRel.eval_sees_field_i_i_i_o_i_conv",
     "pred.eval (sees_field_i_i_i_o_o_i ?P ?C ?F ?D) =
      (%(T, fm). ?P \<turnstile> ?C sees ?F:T (fm) in ?D)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("TypeRel.eval_sees_field_i_i_i_o_o_o_conv",
     "pred.eval (sees_field_i_i_i_o_o_o ?P ?C ?F) =
      (%(T, fm, D). ?P \<turnstile> ?C sees ?F:T (fm) in D)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("TypeRel.Class_widen2",
     "?P \<turnstile> Class ?C \<le> ?T =
      (EX D. ?T = Class D & ?P \<turnstile> ?C \<preceq>\<^sup>* D)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("TypeRel.eval_Method_i_i_i_o_o_o_o_conv",
     "pred.eval (Method_i_i_i_o_o_o_o ?P ?C ?M) =
      (%(Ts, T, m, D).
          ?P \<turnstile> ?C sees ?M: Ts\<rightarrow>T = m in D)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("TypeRel.widen_Array",
     "?P \<turnstile> ?T \<le> ?U\<lfloor>\<rceil> =
      (?T = NT |
       (EX V. ?T = V\<lfloor>\<rceil> & ?P \<turnstile> V \<le> ?U))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_dunno)),
    ("TypeRel.NT_widen",
     "?P \<turnstile> NT \<le> ?T =
      (?T = NT | (EX C. ?T = Class C) | (EX U. ?T = U\<lfloor>\<rceil>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 6),
              template_var 0)
            )],
       template_dunno)),
    ("TypeRel.field_code",
     "field ?P ?C ?F =
      Predicate.the
       (sees_field_i_i_i_o_o_o ?P ?C ?F >>=
        (%(T, fm, D). Predicate.single (D, T, fm)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 8, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 4, t_empty))))),
    ("TypeRel.method_code",
     "method ?P ?C ?M =
      Predicate.the
       (Method_i_i_i_o_o_o_o ?P ?C ?M >>=
        (%(Ts, T, m, D). Predicate.single (D, Ts, T, m)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app (template_hole 6, t_empty))))),
    ("TypeRel.widens_Cons",
     "?P \<turnstile> (?x # ?xs) [\<le>] ?ys =
      (EX z zs.
          ?ys = z # zs &
          ?P \<turnstile> ?x \<le> z & ?P \<turnstile> ?xs [\<le>] zs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("TypeRel.widen_Class",
     "?P \<turnstile> ?T \<le> Class ?C =
      (?T = NT |
       (EX D. ?T = Class D & ?P \<turnstile> D \<preceq>\<^sup>* ?C) |
       ?C = Object & (EX A. ?T = A\<lfloor>\<rceil>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1),
              template_app (template_hole 11, template_var 0))
            )],
       template_dunno)),
    ("TypeRel.widen_append1",
     "?P \<turnstile> (?xs @ ?ys) [\<le>] ?Ts =
      (EX Ts1 Ts2.
          ?Ts = Ts1 @ Ts2 &
          length ?xs = length Ts1 &
          length ?ys = length Ts2 &
          ?P \<turnstile> ?xs [\<le>] Ts1 &
          ?P \<turnstile> ?ys [\<le>] Ts2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 3)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("TypeRel.widen_i_i_i'_equation",
     "widen_i_i_i' ?x ?xa ?xb =
      sup (Predicate.single (?x, ?xa, ?xb) >>=
           (%x. case x of
                (P_, T_, Ta_) =>
                  if T_ = Ta_ then Predicate.single () else bot))
       (sup (Predicate.single (?x, ?xa, ?xb) >>=
             (%x. case x of
                  (P_, Class C_, Class D_) =>
                    rtranclp_FioB_i_i (subcls1_i_i_o P_) C_ D_ >>=
                    (%x. case x of () => Predicate.single ())
                  | (P_, Class C_, _) => bot | (P_, _, ba) => bot))
         (sup (Predicate.single (?x, ?xa, ?xb) >>=
               (%x. case x of (P_, NT, Class C_) => Predicate.single ()
                    | (P_, NT, _) => bot | (P_, _, ba) => bot))
           (sup (Predicate.single (?x, ?xa, ?xb) >>=
                 (%x. case x of
                      (P_, NT, A_\<lfloor>\<rceil>) => Predicate.single ()
                      | (P_, NT, _) => bot | (P_, _, ba) => bot))
             (sup (Predicate.single (?x, ?xa, ?xb) >>=
                   (%x. case x of
                        (P_, A_\<lfloor>\<rceil>, Class C_) =>
                          eq_i_i C_ Object >>=
                          (%x. case x of () => Predicate.single ())
                        | (P_, A_\<lfloor>\<rceil>, _) => bot
                        | (P_, _, ba) => bot))
               (Predicate.single (?x, ?xa, ?xb) >>=
                (%x. case x of
                     (P_, A_\<lfloor>\<rceil>, B_\<lfloor>\<rceil>) =>
                       widen_i_i_i' P_ A_ B_ >>=
                       (%x. case x of () => Predicate.single ())
                     | (P_, A_\<lfloor>\<rceil>, _) => bot
                     | (P_, _, ba) => bot))))))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 19, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 18,
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 15, template_var 2),
                   template_app
                    (template_app (template_hole 14, template_var 1),
                     template_var 0)))),
             t_empty)),
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_hole 16,
                   template_app
                    (template_app (template_hole 15, template_var 2),
                     template_app
                      (template_app (template_hole 14, template_var 1),
                       template_var 0)))),
               t_empty)),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 2),
                       template_app
                        (template_app (template_hole 14, template_var 1),
                         template_var 0)))),
                 t_empty)),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 2),
                         template_app
                          (template_app (template_hole 14, template_var 1),
                           template_var 0)))),
                   t_empty)),
               template_app
                (template_app
                  (template_hole 18,
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 15, template_var 2),
                           template_app
                            (template_app
                              (template_hole 14, template_var 1),
                             template_var 0)))),
                     t_empty)),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 2),
                         template_app
                          (template_app (template_hole 14, template_var 1),
                           template_var 0)))),
                   t_empty))))))))]
