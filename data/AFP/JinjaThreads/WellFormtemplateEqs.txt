   [("WellForm.finite_conversep",
     "finite {(x, y). ?r^--1 x y} = finite {(x, y). ?r x y}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty))))),
    ("WellForm.wf_prog_code",
     "wf_prog ?wf_md ?P =
      (acyclic_class_hierarchy ?P &
       wf_syscls ?P &
       distinct_fst (classes ?P) &
       (ALL c:set (classes ?P). wf_cdecl' ?wf_md ?P c))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0))),
               t_empty)))))),
    ("WellForm.acyclic_class_hierarchy_code",
     "acyclic_class_hierarchy ?P =
      (ALL (C, D, fs, ml):set (classes ?P).
          C ~= Object --> ~ subcls' ?P D C)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 0))),
         template_app (template_hole 7, t_empty)))),
    ("WellForm.wf_cdecl'_code",
     "wf_cdecl' ?wf_md ?P =
      (%(C, D, fs, ms).
          (ALL f:set fs. wf_fdecl ?P f) &
          distinct_fst fs &
          (ALL m:set ms. wf_mdecl ?wf_md ?P C m) &
          distinct_fst ms &
          (C ~= Object -->
           is_class ?P D & (ALL m:set ms. wf_overriding ?P D m)) &
          (C = Thread -->
           (run, [], Void) : set (map (%(M, Ts, T, b). (M, Ts, T)) ms)))",
     template_equation
      (template_app
        (template_app (template_hole 30, template_var 1), template_var 0),
       template_app (template_hole 29, t_empty)))]
