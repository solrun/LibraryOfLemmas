   [("FWThread.free_thread_id_iff",
     "free_thread_id ?ts ?t = (?ts ?t = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_var 1, template_var 0), template_hole 0))),
    ("FWThread.thread_ok_convert_new_thread_action",
     "thread_ok ?ts (convert_new_thread_action ?f ?ta) = thread_ok ?ts ?ta",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("FWThread.redT_updT_finite_dom_inv",
     "finite (dom (redT_updT ?ts ?ta)) = finite (dom ?ts)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)))),
    ("FWThread.redT_updTs_finite_dom_inv",
     "finite (dom (redT_updTs ?ts ?tas)) = finite (dom ?ts)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 1)))),
    ("FWThread.thread_oks_convert_new_thread_action",
     "thread_oks ?ts (map (convert_new_thread_action ?f) ?tas) =
      thread_oks ?ts ?tas",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("FWThread.redT_updTs_append",
     "redT_updTs ?ts (?tas @ ?tas') =
      redT_updTs (redT_updTs ?ts ?tas) ?tas'",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("FWThread.thread_oks_redT_updT_conv",
     "thread_oks (redT_updT' ?ts ?ta) ?tas =
      thread_oks (redT_updT ?ts ?ta) ?tas",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("FWThread.thread_oks_redT_updTs_conv",
     "thread_oks (redT_updTs' ?ts ?ta) ?tas =
      thread_oks (redT_updTs ?ts ?ta) ?tas",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("FWThread.thread_oks_append",
     "thread_oks ?ts (?tas @ ?tas') =
      (thread_oks ?ts ?tas & thread_oks (redT_updTs' ?ts ?tas) ?tas')",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("FWThread.redT_updT'_convert_new_thread_action_eq_None",
     "(redT_updT' ?ts (convert_new_thread_action ?f ?ta) ?t = None) =
      (redT_updT' ?ts ?ta ?t = None)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0),
         template_hole 1),
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_hole 1))),
    ("FWThread.map_redT_updT",
     "map_option (map_prod ?f id) (redT_updT ?ts ?ta ?t) =
      redT_updT (%t. map_option (map_prod ?f id) (?ts t))
       (convert_new_thread_action ?f ?ta) ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_hole 3)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("FWThread.map_redT_updTs",
     "map_option (map_prod ?f id) (redT_updTs ?ts ?tas ?t) =
      redT_updTs (%t. map_option (map_prod ?f id) (?ts t))
       (map (convert_new_thread_action ?f) ?tas) ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_hole 4)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 1)),
         template_var 0)))]
