   [("JMM_Spec.saction_simps", "saction ?P InitialThreadAction = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("JMM_Spec.saction_simps", "saction ?P ThreadFinishAction = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("JMM_Type2.jmm_typeof_addr'_conv_jmm_typeof_addr",
     "(%_. jmm_typeof_addr' ?P) = JMM_Type2.jmm_typeof_addr ?P",
     template_equation
      (t_empty, template_app (template_hole 0, template_var 0))),
    ("JMM_Type2.jmm_typeof_addr'_conv_jmm_type_addr",
     "jmm_typeof_addr' ?P = JMM_Type2.jmm_typeof_addr ?P ?h",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (ObsInterrupt ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (ObsInterrupted ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (SyncLock ?a)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (SyncUnlock ?a)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (ThreadJoin ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (ThreadStart ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (ObsInterrupt ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (ObsInterrupted ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (SyncLock ?a)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (SyncUnlock ?a)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (ThreadJoin ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (ThreadStart ?t)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Compiler.external_actions_committed_compP",
     "external_actions_committed (compP ?f ?P) =
      external_actions_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.justification_well_formed_compP",
     "justification_well_formed (compP ?f ?P) =
      justification_well_formed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.uncommitted_reads_see_hb_compP",
     "uncommitted_reads_see_hb (compP ?f ?P) = uncommitted_reads_see_hb ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Interp.jmm_typeof_addr_compP",
     "JMM_Type2.jmm_typeof_addr (compP ?f ?P) =
      JMM_Type2.jmm_typeof_addr ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.correctly_synchronized_compP",
     "correctly_synchronized (compP ?f ?P) = correctly_synchronized ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Interp.compP2_compP1_convs",
     "is_type (compP2 (compP1 ?P)) = is_type ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.addr_locs_compP",
     "addr_locs (compP ?f ?P) = addr_locs ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_volatile_compP",
     "is_volatile (compP ?f ?P) = is_volatile ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.value_written_aux_compP",
     "value_written_aux (compP ?f ?P) = value_written_aux ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.action_loc_aux_compP",
     "action_loc_aux (compP ?f ?P) = action_loc_aux ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.saction_compP", "saction (compP ?f ?P) = saction ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Interp.compP2_compP1_convs",
     "is_class (compP2 (compP1 ?P)) = is_class ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.syncronizes_with_compP",
     "synchronizes_with (compP ?f ?P) = synchronizes_with ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_justified_by_compP",
     "is_justified_by (compP ?f ?P) = is_justified_by ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_weakly_justified_by_compP",
     "is_weakly_justified_by (compP ?f ?P) = is_weakly_justified_by ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sequentially_consistent_compP",
     "sequentially_consistent (compP ?f ?P) = sequentially_consistent ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.happens_before_committed_weak_compP",
     "happens_before_committed_weak (compP ?f ?P) =
      happens_before_committed_weak ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.is_write_seen_compP",
     "is_write_seen (compP ?f ?P) = is_write_seen ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.happens_before_committed_compP",
     "happens_before_committed (compP ?f ?P) = happens_before_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sync_order_committed_compP",
     "sync_order_committed (compP ?f ?P) = sync_order_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.value_written_committed_compP",
     "value_written_committed (compP ?f ?P) = value_written_committed ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.most_recent_write_for_compP",
     "most_recent_write_for (compP ?f ?P) = most_recent_write_for ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.conflict_compP",
     "non_volatile_conflict (compP ?f ?P) = non_volatile_conflict ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.po_sw_compP", "po_sw (compP ?f ?P) = po_sw ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sync_order_compP",
     "sync_order (compP ?f ?P) = sync_order ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sync_with_compP",
     "sync_with (compP ?f ?P) = sync_with ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.value_written_compP",
     "value_written (compP ?f ?P) = value_written ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Compiler.sactions_compP", "sactions (compP ?f ?P) = sactions ?P",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("JMM_Spec.read_actions_Int_write_actions",
     "read_actions ?E Int write_actions ?E = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("JMM_Spec.read_actions_Int_write_actions",
     "write_actions ?E Int read_actions ?E = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("JMM_Spec.sim_action_simps",
     "InitialThreadAction \<approx> ?obs = (?obs = InitialThreadAction)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("JMM_Spec.sim_action_simps",
     "ThreadFinishAction \<approx> ?obs = (?obs = ThreadFinishAction)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> InitialThreadAction = (?obs = InitialThreadAction)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> ThreadFinishAction = (?obs = ThreadFinishAction)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (NewHeapElem ?a ?hT)) = True",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (NewHeapElem ?a ?hT)) = True",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (ObsInterrupt ?t)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (ObsInterrupted ?t)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (SyncLock ?a)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (SyncUnlock ?a)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (ThreadJoin ?t)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (ThreadStart ?t)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("JMM_Spec.external_actionsp_external_actions_eq",
     "external_actionsp ?E = (%x. x : external_actions ?E)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("JMM_Spec.read_actionsp_read_actions_eq",
     "read_actionsp ?E = (%x. x : read_actions ?E)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("JMM_Spec.write_actionsp_write_actions_eq",
     "write_actionsp ?E = (%x. x : write_actions ?E)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (ReadMem ?a ?al ?v)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (WriteMem ?a ?al ?v)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (ReadMem ?a ?al ?v)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (WriteMem ?a ?al ?v)) = True",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (NewHeapElem ?a ?hT)) = True",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Compiler.legal_execution_compP",
     "legal_execution (compP ?f ?P) = legal_execution ?P",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("JMM_Compiler.weakly_legal_execution_compP",
     "weakly_legal_execution (compP ?f ?P) = weakly_legal_execution ?P",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("JMM_Spec.is_new_action_simps",
     "is_new_action (NormalAction (ExternalCall ?a ?M ?vs ?v)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.is_write_action_simps",
     "is_write_action (NormalAction (ExternalCall ?a ?m ?vs ?v)) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Typesafe.heap_independent",
     "heap_base.typeof_h (%_. jmm_typeof_addr' ?P) ?h =
      heap_base'.typeof_h TYPE(JMM_Type2.JMM_heap) (jmm_typeof_addr' ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 2, template_var 1)))),
    ("JMM_Typesafe.heap_independent",
     "heap_base.cname_of (%_. jmm_typeof_addr' ?P) ?h =
      heap_base'.cname_of TYPE(JMM_Type2.JMM_heap) (jmm_typeof_addr' ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 2, template_var 1)))),
    ("JMM_Type2.jmm_allocate_eq_empty",
     "(JMM_Type2.jmm_allocate ?h ?hT = {}) = (?h ?hT = UNIV)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation
        (template_app (template_var 1, template_var 0), template_hole 0))),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (ExternalCall ?a ?M ?vs ?v)) = False",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 4),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_hole 0)),
    ("JMM_Spec.value_written_aux_WriteMem",
     "value_written_aux ?P (NormalAction (WriteMem ?ad ?al ?v)) ?al = ?v",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))),
         template_var 1),
       template_var 0)),
    ("JMM_Typesafe2.jmm_conf_conv_jmm_conf'",
     "jmm'_conf ?P ?h = jmm_conf' ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_var 1))),
    ("JMM_Typesafe2.jmm_addr_loc_type_conv_jmm_addr_loc_type'",
     "jmm'_addr_loc_type ?P ?h = jmm_addr_loc_type' ?P",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1)),
         template_var 1))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (ObsInterrupt ?t) =
      (?obs = NormalAction (ObsInterrupt ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (ObsInterrupted ?t) =
      (?obs = NormalAction (ObsInterrupted ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (SyncLock ?a) =
      (?obs = NormalAction (SyncLock ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (SyncUnlock ?a) =
      (?obs = NormalAction (SyncUnlock ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (ThreadJoin ?t) =
      (?obs = NormalAction (ThreadJoin ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (ThreadStart ?t) =
      (?obs = NormalAction (ThreadStart ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (ObsInterrupt ?t) \<approx> ?obs =
      (?obs = NormalAction (ObsInterrupt ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (ObsInterrupted ?t) \<approx> ?obs =
      (?obs = NormalAction (ObsInterrupted ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (SyncLock ?a) \<approx> ?obs =
      (?obs = NormalAction (SyncLock ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (SyncUnlock ?a) \<approx> ?obs =
      (?obs = NormalAction (SyncUnlock ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (ThreadJoin ?t) \<approx> ?obs =
      (?obs = NormalAction (ThreadJoin ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (ThreadStart ?t) \<approx> ?obs =
      (?obs = NormalAction (ThreadStart ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 1))))),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (ReadMem ?a ?al ?v)) = is_volatile ?P ?al",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 3), template_var 1))),
    ("JMM_Spec.saction_simps",
     "saction ?P (NormalAction (WriteMem ?a ?al ?v)) = is_volatile ?P ?al",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 3), template_var 1))),
    ("JMM_Typesafe.heap_independent",
     "heap_base.lconf (%_. jmm_typeof_addr' ?Pa) ?P ?h =
      heap_base'.lconf TYPE(JMM_Type2.JMM_heap) (jmm_typeof_addr' ?Pa) ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Typesafe.heap_independent",
     "heap_base.vs_conf (%_. jmm_typeof_addr' ?Pa) ?P ?h =
      heap_base'.vs_conf TYPE(JMM_Type2.JMM_heap) (jmm_typeof_addr' ?Pa)
       ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Typesafe.heap_independent",
     "heap_base.conf (%_. jmm_typeof_addr' ?Pa) ?P ?h =
      heap_base'.conf TYPE(JMM_Type2.JMM_heap) (jmm_typeof_addr' ?Pa) ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Typesafe.heap_independent",
     "heap_base.addr_loc_type (%_. jmm_typeof_addr' ?Pa) ?P ?h =
      heap_base'.addr_loc_type TYPE(JMM_Type2.JMM_heap)
       (jmm_typeof_addr' ?Pa) ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Typesafe.heap_independent",
     "heap_base.typeof_addr_loc (%_. jmm_typeof_addr' ?Pa) ?P ?h =
      heap_base'.typeof_addr_loc TYPE(JMM_Type2.JMM_heap)
       (jmm_typeof_addr' ?Pa) ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Interp.compP2_compP1_convs",
     "jmm'_conf (compP2 (compP1 ?P)) = jmm'_conf ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("JMM_Interp.compP2_compP1_convs",
     "jmm'_addr_loc_type (compP2 (compP1 ?P)) = jmm'_addr_loc_type ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("JMM_Compiler.happens_before_compP",
     "happens_before (compP ?f ?P) = happens_before ?P",
     template_equation (t_empty, t_empty)),
    ("JMM_Spec.is_new_action_iff",
     "is_new_action ?a = (EX a hT. ?a = NormalAction (NewHeapElem a hT))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (NewHeapElem ?a ?hT) =
      (?obs = NormalAction (NewHeapElem ?a ?hT))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_var 2,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (NewHeapElem ?a ?hT) \<approx> ?obs =
      (?obs = NormalAction (NewHeapElem ?a ?hT))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("JMM_Spec.write_actions_iff",
     "(?a : write_actions ?E) =
      (?a : actions ?E & is_write_action (action_obs ?E ?a))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("JMM_Spec.value_written_aux_WriteMem'",
     "value_written_aux ?P (NormalAction (WriteMem ?ad ?al' ?v)) ?al =
      (if ?al = ?al' then ?v else undefined)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_dunno)),
    ("JMM_Typesafe.heap_independent",
     "heap_base.tconf (%x. x) (%_. jmm_typeof_addr' ?Pa) ?P ?h =
      heap_base'.tconf TYPE(JMM_Type2.JMM_heap) (%x. x)
       (jmm_typeof_addr' ?Pa) ?P",
     template_equation
      (template_app
        (template_app
          (template_app (template_app (template_hole 3, t_empty), t_empty),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0), t_empty),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Typesafe.heap_independent",
     "list_all2 (heap_base.conf (%_. jmm_typeof_addr' ?Pa) ?P ?h) =
      heap_base'.confs TYPE(JMM_Type2.JMM_heap) (jmm_typeof_addr' ?Pa) ?P",
     template_equation
      (t_empty,
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("JMM_Compiler.action_loc_compP",
     "action_loc (compP ?f ?P) = action_loc ?P",
     template_equation (t_empty, t_empty)),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (ReadMem ?ad ?al ?v') =
      (EX v. ?obs = NormalAction (ReadMem ?ad ?al v))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))),
       template_app (template_hole 1, t_empty))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (WriteMem ?ad ?al ?v') =
      (EX v. ?obs = NormalAction (WriteMem ?ad ?al v))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))),
       template_app (template_hole 1, t_empty))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (ReadMem ?ad ?al ?v) \<approx> ?obs =
      (EX v'. ?obs = NormalAction (ReadMem ?ad ?al v'))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1))),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (WriteMem ?ad ?al ?v) \<approx> ?obs =
      (EX v'. ?obs = NormalAction (WriteMem ?ad ?al v'))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1))),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("JMM_Spec.sim_action_simps",
     "?obs \<approx> NormalAction (ExternalCall ?a ?M ?vs ?v) =
      (?obs = NormalAction (ExternalCall ?a ?M ?vs ?v))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_var 4,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("JMM_Spec.sim_action_simps",
     "NormalAction (ExternalCall ?a ?M ?vs ?v) \<approx> ?obs =
      (?obs = NormalAction (ExternalCall ?a ?M ?vs ?v))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1))))),
    ("JMM_Framework.enat_plus_eq_enat_conv",
     "(enat ?m + ?n = enat ?k) = (?m <= ?k & ?n = enat (?k - ?m))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_dunno)),
    ("JMM_Spec.action_loc_aux_simps",
     "((?ad', ?al')
       : action_loc_aux ?P (NormalAction (WriteMem ?ad ?al ?v))) =
      (?ad = ?ad' & ?al = ?al')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1),
                    template_var 0))))
            )],
       template_dunno)),
    ("JMM_Spec.action_loc_aux_simps",
     "((?ad', ?al')
       : action_loc_aux ?P (NormalAction (ReadMem ?ad ?al ?v))) =
      (?ad = ?ad' & ?al = ?al')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1),
                    template_var 0))))
            )],
       template_dunno)),
    ("JMM_Spec.read_actions_iff",
     "(?a : read_actions ?E) =
      (?a : actions ?E &
       (EX ad al v. action_obs ?E ?a = NormalAction (ReadMem ad al v)))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 10, template_var 1),
             template_app (template_hole 7, template_var 0))),
         template_app (template_hole 6, t_empty)))),
    ("JMM_Spec.is_write_action_iff",
     "is_write_action ?a =
      ((EX ad hT. ?a = NormalAction (NewHeapElem ad hT)) |
       (EX ad al v. ?a = NormalAction (WriteMem ad al v)))",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app (template_hole 7, t_empty)))),
    ("JMM_Typesafe2.heap_copies_heap_read_typed",
     "heap_base.heap_copies
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write ?a ?a' ?als ?h ?obs ?h' =
      (heap_base.heap_copies ?heap_read ?heap_write ?a ?a' ?als ?h ?obs
        ?h' &
       (ALL ad al v T.
           ReadMem ad al v : set ?obs -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app
                          (template_app (template_hole 12, t_empty),
                           template_var 8),
                         template_var 7)),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 13, template_var 8),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 10, t_empty)))),
    ("JMM_Typesafe2.heap_copy_loc_heap_read_typed",
     "heap_base.heap_copy_loc
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write ?a ?a' ?al ?h ?obs ?h' =
      (heap_base.heap_copy_loc ?heap_read ?heap_write ?a ?a' ?al ?h ?obs
        ?h' &
       (ALL ad al v T.
           ReadMem ad al v : set ?obs -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app
                          (template_app (template_hole 12, t_empty),
                           template_var 8),
                         template_var 7)),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 13, template_var 8),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 10, t_empty)))),
    ("JMM_Spec.action_loc_aux_simps",
     "((?ad', ?al')
       : action_loc_aux ?P (NormalAction (NewHeapElem ?ad ?hT))) =
      ((EX D F T fm.
           ?ad = ?ad' &
           ?al' = CField D F &
           ?P \<turnstile> class_type_of ?hT has F:T (fm) in D) |
       (EX n T n'.
           ?ad = ?ad' & ?al' = ACell n & ?hT = Array_type T n' & n < n'))",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app (template_hole 18, template_var 4),
             template_var 3)),
         template_app
          (template_app (template_hole 17, template_var 2),
           template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 14, template_app (template_hole 13, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("JMM_Typesafe2.heap_clone_heap_read_typed",
     "heap_base.heap_clone ?allocate (%_. ?typeof_addr)
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write ?P ?a ?h ?h' ?obs =
      (heap_base.heap_clone ?allocate (%_. ?typeof_addr) ?heap_read
        ?heap_write ?P ?a ?h ?h' ?obs &
       (ALL ad al v T obs' a'.
           ?obs = \<lfloor>(obs', a')\<rfloor> -->
           ReadMem ad al v : set obs' -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 17, template_var 8),
                       t_empty),
                     template_app
                      (template_app
                        (template_app (template_hole 16, t_empty),
                         template_var 6),
                       template_var 5)),
                   template_var 4),
                 template_var 5),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 17, template_var 8),
                           t_empty),
                         template_var 6),
                       template_var 4),
                     template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 14, t_empty)))),
    ("JMM_JVM_Typesafe.exec_1_d_heap_read_typed",
     "JVM_heap_base.exec_1_d (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
       ?allocate (%_. ?typeof_addr)
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write ?P ?t (Normal ?xcphfrs) ?ta (Normal ?xcphfrs') =
      (JVM_heap_base.exec_1_d (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
        ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write ?P ?t
        (Normal ?xcphfrs) ?ta (Normal ?xcphfrs') &
       (ALL ad al v T.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app (template_hole 15, t_empty),
                               t_empty),
                             template_var 10),
                           template_var 9),
                         template_var 8),
                       t_empty),
                     template_app
                      (template_app
                        (template_app (template_hole 14, t_empty),
                         template_var 6),
                       template_var 5)),
                   template_var 4),
                 template_var 5),
               template_var 3),
             template_app (template_hole 13, template_var 2)),
           template_var 1),
         template_app (template_hole 13, template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app (template_hole 15, t_empty),
                                   t_empty),
                                 template_var 10),
                               template_var 9),
                             template_var 8),
                           t_empty),
                         template_var 6),
                       template_var 4),
                     template_var 5),
                   template_var 3),
                 template_app (template_hole 13, template_var 2)),
               template_var 1),
             template_app (template_hole 13, template_var 0))),
         template_app (template_hole 11, t_empty)))),
    ("JMM_JVM_Typesafe.exec_heap_read_typed",
     "((?ta, ?xcphfrs')
       : JVM_heap_base.exec (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
          ?allocate (%_. ?typeof_addr)
          (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
          ?heap_write ?P ?t ?xcphfrs) =
      ((?ta, ?xcphfrs')
       : JVM_heap_base.exec (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
          ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write ?P ?t
          ?xcphfrs &
       (ALL ad al v T.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app (template_hole 15, template_var 10),
             template_var 9)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 14, t_empty),
                             t_empty),
                           template_var 8),
                         template_var 7),
                       template_var 6),
                     t_empty),
                   template_app
                    (template_app
                      (template_app (template_hole 13, t_empty),
                       template_var 4),
                     template_var 3)),
                 template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 10),
                 template_var 9)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app (template_hole 14, t_empty),
                                 t_empty),
                               template_var 8),
                             template_var 7),
                           template_var 6),
                         t_empty),
                       template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 1),
               template_var 0))),
         template_app (template_hole 11, t_empty)))),
    ("JMM_J_Typesafe.red_heap_read_typedD",
     "J_heap_base.red (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
       ?allocate (%_. ?typeof_addr)
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write (extTA2J ?P) ?P ?t ?e ?s ?ta ?e' ?s' =
      (J_heap_base.red (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
        ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write (extTA2J ?P) ?P
        ?t ?e ?s ?ta ?e' ?s' &
       (ALL ad al v T.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 16, t_empty),
                                     t_empty),
                                   template_var 12),
                                 template_var 11),
                               template_var 10),
                             t_empty),
                           template_app
                            (template_app
                              (template_app (template_hole 15, t_empty),
                               template_var 8),
                             template_var 7)),
                         template_var 6),
                       template_app
                        (template_hole 14,
                         template_app (template_hole 13, template_var 7))),
                     template_var 7),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_app (template_hole 16, t_empty), t_empty),
 template_var 12),
                                     template_var 11),
                                   template_var 10),
                                 t_empty),
                               template_var 8),
                             template_var 6),
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 13, template_var 7))),
                         template_var 7),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 11, t_empty)))),
    ("JMM_J_Typesafe.reds_heap_read_typedD",
     "J_heap_base.reds (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
       ?allocate (%_. ?typeof_addr)
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write (extTA2J ?P) ?P ?t ?es ?s ?ta ?es' ?s' =
      (J_heap_base.reds (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
        ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write (extTA2J ?P) ?P
        ?t ?es ?s ?ta ?es' ?s' &
       (ALL ad al v T.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 16, t_empty),
                                     t_empty),
                                   template_var 12),
                                 template_var 11),
                               template_var 10),
                             t_empty),
                           template_app
                            (template_app
                              (template_app (template_hole 15, t_empty),
                               template_var 8),
                             template_var 7)),
                         template_var 6),
                       template_app
                        (template_hole 14,
                         template_app (template_hole 13, template_var 7))),
                     template_var 7),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_app (template_hole 16, t_empty), t_empty),
 template_var 12),
                                     template_var 11),
                                   template_var 10),
                                 t_empty),
                               template_var 8),
                             template_var 6),
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 13, template_var 7))),
                         template_var 7),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 11, t_empty)))),
    ("JMM_Typesafe2.red_external_heap_read_typed",
     "heap_base.red_external (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
       ?allocate (%_. ?typeof_addr)
       (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
       ?heap_write ?P ?t ?h ?a ?M ?vs ?ta ?va ?h' =
      (heap_base.red_external (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
        ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write ?P ?t ?h ?a ?M
        ?vs ?ta ?va ?h' &
       (ALL ad al v T obs' a'.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 16, t_empty), t_empty),
                                     template_var 14),
                                   template_var 13),
                                 template_var 12),
                               t_empty),
                             template_app
                              (template_app
                                (template_app (template_hole 15, t_empty),
                                 template_var 10),
                               template_var 9)),
                           template_var 8),
                         template_var 9),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_app (template_hole 16, t_empty), t_empty),
   template_var 14),
 template_var 13),
                                     template_var 12),
                                   t_empty),
                                 template_var 10),
                               template_var 8),
                             template_var 9),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 13, t_empty)))),
    ("JMM_Typesafe2.red_external_aggr_heap_read_typed",
     "((?ta, ?va, ?h')
       : heap_base.red_external_aggr (%x. x) (%x. x) ?spurious_wakeups
          ?empty_heap ?allocate (%_. ?typeof_addr)
          (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
          ?heap_write ?P ?t ?h ?a ?M ?vs) =
      ((?ta, ?va, ?h')
       : heap_base.red_external_aggr (%x. x) (%x. x) ?spurious_wakeups
          ?empty_heap ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write ?P
          ?t ?h ?a ?M ?vs &
       (ALL ad al v T obs' a'.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app (template_hole 18, template_var 14),
             template_app
              (template_app (template_hole 17, template_var 13),
               template_var 12))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app (template_hole 16, t_empty),
                                   t_empty),
                                 template_var 11),
                               template_var 10),
                             template_var 9),
                           t_empty),
                         template_app
                          (template_app
                            (template_app (template_hole 15, t_empty),
                             template_var 7),
                           template_var 6)),
                       template_var 5),
                     template_var 6),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, template_var 14),
                 template_app
                  (template_app (template_hole 17, template_var 13),
                   template_var 12))),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 16, t_empty), t_empty),
                                     template_var 11),
                                   template_var 10),
                                 template_var 9),
                               t_empty),
                             template_var 7),
                           template_var 5),
                         template_var 6),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))),
         template_app (template_hole 13, t_empty)))),
    ("JMM_JVM_Typesafe.exec_instr_heap_read_typed",
     "((?ta, ?xcphfrs')
       : JVM_heap_base.exec_instr (%x. x) (%x. x) ?spurious_wakeups
          ?empty_heap ?allocate (%_. ?typeof_addr)
          (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
          ?heap_write ?i ?P ?t ?h ?stk ?loc ?C ?M ?pc ?frs) =
      ((?ta, ?xcphfrs')
       : JVM_heap_base.exec_instr (%x. x) (%x. x) ?spurious_wakeups
          ?empty_heap ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write ?i
          ?P ?t ?h ?stk ?loc ?C ?M ?pc ?frs &
       (ALL ad al v T.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app (template_hole 15, template_var 17),
             template_var 16)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_app (template_hole 14, t_empty), t_empty),
   template_var 15),
 template_var 14),
                                     template_var 13),
                                   t_empty),
                                 template_app
                                  (template_app
                                    (template_app
(template_hole 13, t_empty),
                                     template_var 11),
                                   template_var 10)),
                               template_var 9),
                             template_var 8),
                           template_var 10),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 17),
                 template_var 16)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_app (template_hole 14, t_empty), t_empty),
       template_var 15),
     template_var 14),
   template_var 13),
 t_empty),
                                     template_var 11),
                                   template_var 9),
                                 template_var 8),
                               template_var 10),
                             template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))),
         template_app (template_hole 11, t_empty)))),
    ("JMM_Spec.saction_iff",
     "saction ?P ?a =
      ((EX a hT. ?a = NormalAction (NewHeapElem a hT)) |
       (EX al a v. ?a = NormalAction (ReadMem a al v) & is_volatile ?P al) |
       (EX al a v.
           ?a = NormalAction (WriteMem a al v) & is_volatile ?P al) |
       (EX t. ?a = NormalAction (ThreadStart t)) |
       (EX t. ?a = NormalAction (ThreadJoin t)) |
       (EX a. ?a = NormalAction (SyncLock a)) |
       (EX a. ?a = NormalAction (SyncUnlock a)) |
       (EX t. ?a = NormalAction (ObsInterrupt t)) |
       (EX t. ?a = NormalAction (ObsInterrupted t)) |
       ?a = InitialThreadAction | ?a = ThreadFinishAction)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("JMM_JVM_Typesafe.mexecd_heap_read_typed",
     "(case ?xcpfrsh of
       (x, xa) =>
         (case x of
          (xcp, frstls) =>
            %h ta ((xcp', frstls'), h').
               JVM_heap_base.exec_1_d (%x. x) (%x. x) ?spurious_wakeups
                ?empty_heap ?allocate (%_. ?typeof_addr)
                (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
                ?heap_write ?P ?t (Normal (xcp, h, frstls)) ta
                (Normal (xcp', h', frstls')))
          xa)
       ?ta ?xcpfrsh' =
      ((case ?xcpfrsh of
        (x, xa) =>
          (case x of
           (xcp, frstls) =>
             %h ta ((xcp', frstls'), h').
                JVM_heap_base.exec_1_d (%x. x) (%x. x) ?spurious_wakeups
                 ?empty_heap ?allocate (%_. ?typeof_addr) ?heap_read
                 ?heap_write ?P ?t (Normal (xcp, h, frstls)) ta
                 (Normal (xcp', h', frstls')))
           xa)
        ?ta ?xcpfrsh' &
       (ALL ad al v T.
           ReadMem ad al v : set \<lbrace>?ta\<rbrace>\<^bsub>o\<^esub> -->
           heap_base'.addr_loc_type TYPE(?'heap) ?typeof_addr ?P ad al T -->
           heap_base'.conf TYPE(?'heap) ?typeof_addr ?P v T))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 21, template_app (template_hole 20, t_empty)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 21,
                   template_app (template_hole 20, t_empty)),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 11, t_empty)))),
    ("JMM_JVM_Typesafe.if_mexecd_heap_read_typed",
     "multithreaded_base.init_fin JVM_final
       (%t ((xcp, frstls), h) ta ((xcp', frstls'), h').
           JVM_heap_base.exec_1_d (%x. x) (%x. x) ?spurious_wakeups
            ?empty_heap ?allocate (%_. ?typeof_addr)
            (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
            ?heap_write ?P t (Normal (xcp, h, frstls)) ta
            (Normal (xcp', h', frstls')))
       ?t ?xh ?ta ?x'h' =
      if_heap_read_typed JVM_final
       (%t ((xcp, frstls), h) ta ((xcp', frstls'), h').
           JVM_heap_base.exec_1_d (%x. x) (%x. x) ?spurious_wakeups
            ?empty_heap ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write
            ?P t (Normal (xcp, h, frstls)) ta (Normal (xcp', h', frstls')))
       ?typeof_addr ?P ?t ?xh ?ta ?x'h'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 24, template_hole 23),
                 t_empty),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 24, template_hole 23),
                     t_empty),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 12, t_empty)))),
    ("JMM_J_Typesafe.if_mred_heap_read_typedD",
     "multithreaded_base.init_fin final_expr
       (%t ((e, l), h) ta ((e', l'), h').
           J_heap_base.red (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
            ?allocate (%_. ?typeof_addr)
            (heap_base.heap_read_typed (%_. ?typeof_addr) ?heap_read ?P)
            ?heap_write (extTA2J ?P) ?P t e (h, l) ta e' (h', l'))
       ?t ?xh ?ta ?x'h' =
      if_heap_read_typed final_expr
       (%t ((e, l), h) ta ((e', l'), h').
           J_heap_base.red (%x. x) (%x. x) ?spurious_wakeups ?empty_heap
            ?allocate (%_. ?typeof_addr) ?heap_read ?heap_write (extTA2J ?P)
            ?P t e (h, l) ta e' (h', l'))
       ?typeof_addr ?P ?t ?xh ?ta ?x'h'",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 25,
                   template_app (template_hole 24, t_empty)),
                 t_empty),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 25,
                       template_app (template_hole 24, t_empty)),
                     t_empty),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app (template_hole 12, t_empty))))]
