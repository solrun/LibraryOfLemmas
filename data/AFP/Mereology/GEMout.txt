Loading theory "Draft.PM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM" via "Draft.GMM" via "Draft.GM" via "Draft.CM" via "Draft.M")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
locale PM
  assumes "PM"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.PM"
### 0.081s elapsed time, 0.348s cpu time, 0.000s GC time
Loading theory "Draft.M" (required by "Draft.GEMMoreTemplates" via "Draft.GEM" via "Draft.GMM" via "Draft.GM" via "Draft.CM")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale M
  assumes "M"
### theory "HOL-Library.Function_Algebras"
### 0.133s elapsed time, 0.543s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
locale M1
  assumes "M1"
locale M2
  assumes "M2"
locale M3
  assumes "M3"
locale M4
  assumes "M4"
### theory "Draft.M"
### 0.111s elapsed time, 0.435s cpu time, 0.039s GC time
Loading theory "Draft.CM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM" via "Draft.GMM" via "Draft.GM")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.215s elapsed time, 0.868s cpu time, 0.039s GC time
Loading theory "Draft.MM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM" via "Draft.GMM")
locale MM
  assumes "MM"
locale CM
  assumes "CM"
locale MM1
  assumes "MM1"
locale MM
  assumes "MM"
locale MM2
  assumes "MM2"
locale MM3
  assumes "MM3"
### theory "Draft.MM"
### 0.114s elapsed time, 0.447s cpu time, 0.098s GC time
Loading theory "Draft.EM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM" via "Draft.CEM")
### theory "HOL-Library.Nat_Bijection"
### 0.341s elapsed time, 1.356s cpu time, 0.137s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs")
locale CMD
  assumes "CMD"
locale EM
  assumes "EM"
locale EM
  assumes "EM"
locale CMU
  assumes "CMU"
### theory "Draft.EM"
### 0.049s elapsed time, 0.191s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs")
locale CMC
  assumes "CMC"
locale CMUD
  assumes "CMUD"
### theory "Draft.CM"
### 0.303s elapsed time, 1.182s cpu time, 0.188s GC time
Loading theory "Draft.GM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM" via "Draft.GMM")
locale GM
  assumes "GM"
### theory "Draft.GM"
### 0.051s elapsed time, 0.207s cpu time, 0.000s GC time
Loading theory "Draft.CEM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM")
locale CEM
  assumes "CEM"
locale CMM
  assumes "CMM"
locale CEM
  assumes "CEM"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
locale CEMD
  assumes "CEMD"
locale CEMU
  assumes "CEMU"
locale CEMC
  assumes "CEMC"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
locale CEMC
  assumes "CEMC"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.CEM"
### 0.343s elapsed time, 1.355s cpu time, 0.125s GC time
Loading theory "Draft.GMM" (required by "Draft.GEMMoreTemplates" via "Draft.GEM")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
locale GMM
  assumes "GMM"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.GMM"
### 0.305s elapsed time, 1.067s cpu time, 0.552s GC time
Loading theory "Draft.GEM" (required by "Draft.GEMMoreTemplates")
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.BigO"
### 0.995s elapsed time, 3.796s cpu time, 0.811s GC time
locale GEM
  assumes "GEM"
locale GEM
  assumes "GEM"
### theory "HOL-Library.Stream"
### 1.072s elapsed time, 4.068s cpu time, 0.811s GC time
Found termination order: "size <*mlex*> {}"
locale GEM
  assumes "GEM"
locale GEM
  assumes "GEM"
Found termination order: "size <*mlex*> {}"
locale GEM1
  assumes "GEM1"
locale GEM1
  assumes "GEM1"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.GEM"
### 0.405s elapsed time, 1.184s cpu time, 0.129s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.019s elapsed time, 5.957s cpu time, 1.059s GC time
Loading theory "Draft.Templates" (required by "Draft.GEMMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.050s elapsed time, 0.070s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.GEMMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.441s elapsed time, 0.448s cpu time, 0.000s GC time
Loading theory "Draft.GEMMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.GEMMoreTemplates"
### 0.312s elapsed time, 0.449s cpu time, 0.054s GC time
val it = (): unit
