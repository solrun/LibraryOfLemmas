   [("MDL.atms_finite", "finite (atms ?r)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("MDL.size_formula_positive", "0 < size ?phi",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("MDL.atms_nonempty", "atms ?r ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("MDL.size_regex_positive", "Suc 0 < size ?r",
     template_inequation
      (less_than, template_app (template_hole 2, template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("MDL.size_atms", "?phi : atms ?r ==> size ?phi < size ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MDL.size_rderive", "?phi : atms (rderive ?r) ==> size ?phi < size ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("MDL.atms_rderive",
     "?phi : atms (rderive ?r) ==> ?phi : atms ?r | ?phi = Bool False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app (template_hole 5, template_var 0))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_hole 0)))
           ))),
    ("MDL.progress_le_ts",
     "(!!t. t : set ?ts ==> t : tfin) ==> progress ?phi ?ts <= length ?ts",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("MDL.regex_induct",
     "[| !!x. ?P2.0 (Lookahead x); !!x. ?P2.0 (Symbol x);
         !!x1 x2. [| ?P2.0 x1; ?P2.0 x2 |] ==> ?P2.0 (Plus x1 x2);
         !!x1 x2. [| ?P2.0 x1; ?P2.0 x2 |] ==> ?P2.0 (Times x1 x2);
         !!x. ?P2.0 x ==> ?P2.0 (Star x) |]
      ==> ?P2.0 ?regex",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
