   [("PseudonaturalTransformation.pseudonaturally_equivalent_reflexive",
     "pseudofunctor ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B ?\<i>\<^sub>B
       ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C ?\<a>\<^sub>C
       ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F ?\<Phi>\<^sub>F ==>
      pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
       ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
       ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F
       ?\<Phi>\<^sub>F ?F ?\<Phi>\<^sub>F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 1, template_var 13),
template_var 12),
                                    template_var 11),
                                  template_var 10),
                                template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 0, template_var 13), template_var 12),
 template_var 11),
                                     template_var 10),
                                   template_var 9),
                                 template_var 8),
                               template_var 7),
                             template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 1),
             template_var 0)
           ))),
    ("PseudonaturalTransformation.pseudonaturally_equivalent_symmetric",
     "pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
       ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
       ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F
       ?\<Phi>\<^sub>F ?G ?\<Phi>\<^sub>G ==>
      pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
       ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
       ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?G
       ?\<Phi>\<^sub>G ?F ?\<Phi>\<^sub>F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app (template_hole 0, template_var 15), template_var 14),
  template_var 13),
template_var 12),
                                    template_var 11),
                                  template_var 10),
                                template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 0, template_var 15), template_var 14),
 template_var 13),
                                     template_var 12),
                                   template_var 11),
                                 template_var 10),
                               template_var 9),
                             template_var 8),
                           template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 1),
                 template_var 0),
               template_var 3),
             template_var 2)
           ))),
    ("PseudonaturalTransformation.pseudonaturally_equivalent_respects_equivalence_pseudofunctor",
     "[| pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
          ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
          ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F
          ?\<Phi>\<^sub>F ?G ?\<Phi>\<^sub>G;
         equivalence_pseudofunctor ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
          ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
          ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F
          ?\<Phi>\<^sub>F |]
      ==> equivalence_pseudofunctor ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
           ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
           ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?G
           ?\<Phi>\<^sub>G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app (template_hole 1, template_var 15), template_var 14),
  template_var 13),
template_var 12),
                                    template_var 11),
                                  template_var 10),
                                template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_hole 0, template_var 15),
template_var 14),
                                    template_var 13),
                                  template_var 12),
                                template_var 11),
                              template_var 10),
                            template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 0, template_var 15),
                                     template_var 14),
                                   template_var 13),
                                 template_var 12),
                               template_var 11),
                             template_var 10),
                           template_var 9),
                         template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("PseudonaturalTransformation.pseudonaturally_equivalent_transitive",
     "[| pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
          ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
          ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F
          ?\<Phi>\<^sub>F ?G ?\<Phi>\<^sub>G;
         pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
          ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
          ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?G
          ?\<Phi>\<^sub>G ?H ?\<Phi>\<^sub>H |]
      ==> pseudonaturally_equivalent ?V\<^sub>B ?H\<^sub>B ?\<a>\<^sub>B
           ?\<i>\<^sub>B ?src\<^sub>B ?trg\<^sub>B ?V\<^sub>C ?H\<^sub>C
           ?\<a>\<^sub>C ?\<i>\<^sub>C ?src\<^sub>C ?trg\<^sub>C ?F
           ?\<Phi>\<^sub>F ?H ?\<Phi>\<^sub>H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app (template_hole 0, template_var 17), template_var 16),
  template_var 15),
template_var 14),
                                    template_var 13),
                                  template_var 12),
                                template_var 11),
                              template_var 10),
                            template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_app (template_hole 0, template_var 17), template_var 16),
  template_var 15),
template_var 14),
                                    template_var 13),
                                  template_var 12),
                                template_var 11),
                              template_var 10),
                            template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 0, template_var 17), template_var 16),
 template_var 15),
                                     template_var 14),
                                   template_var 13),
                                 template_var 12),
                               template_var 11),
                             template_var 10),
                           template_var 9),
                         template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)
           )))]
