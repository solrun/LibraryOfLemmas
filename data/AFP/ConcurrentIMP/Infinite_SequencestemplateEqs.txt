   [("Infinite_Sequences.suffix_zero", "?\<sigma> |\<^sub>s 0 = ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Infinite_Sequences.length_stake", "length (stake ?n ?s) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Infinite_Sequences.suffix_eval",
     "(?\<sigma> |\<^sub>s ?i) ?j = ?\<sigma> (?j + ?i)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Infinite_Sequences.stake_suffix_id",
     "stake ?i ?\<sigma> @- (?\<sigma> |\<^sub>s ?i) = ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 0)),
    ("Infinite_Sequences.stake_nil", "(stake ?i ?\<sigma> = []) = (?i = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("Infinite_Sequences.decomp", "?P = (%s. Safe ?P s & Live ?P s)",
     template_equation (template_var 0, t_empty)),
    ("Infinite_Sequences.comp_suffix",
     "?f o ?\<sigma> |\<^sub>s ?i = (?f o ?\<sigma>) |\<^sub>s ?i",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Infinite_Sequences.suffix_plus_com",
     "?\<sigma> |\<^sub>s ?m |\<^sub>s ?n = ?\<sigma> |\<^sub>s ?m + ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Infinite_Sequences.suffix_plus",
     "?\<sigma> |\<^sub>s ?n |\<^sub>s ?m = ?\<sigma> |\<^sub>s ?m + ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Infinite_Sequences.suffix_commute",
     "?\<sigma> |\<^sub>s ?n |\<^sub>s ?m =
      ?\<sigma> |\<^sub>s ?m |\<^sub>s ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Infinite_Sequences.shift_simps",
     "(?xs @- ?\<sigma>) 0 = (if ?xs = [] then ?\<sigma> 0 else hd ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_dunno)),
    ("Infinite_Sequences.stake_suffix_drop",
     "?\<sigma>(?j \<rightarrow> ?i) = drop ?j (stake (?i + ?j) ?\<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("Infinite_Sequences.id_stake_snth_suffix",
     "?\<sigma> =
      (stake ?i ?\<sigma> @ [?\<sigma> ?i]) @-
      (?\<sigma> |\<^sub>s Suc ?i)",
     template_equation
      (template_var 1,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 1, template_var 0)),
               template_hole 2))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Infinite_Sequences.stake_add",
     "stake ?i ?\<sigma> @ ?\<sigma>(?i \<rightarrow> ?j) =
      stake (?i + ?j) ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Infinite_Sequences.suffix_shift",
     "?xs @- ?\<sigma> |\<^sub>s ?i =
      drop ?i ?xs @- (?\<sigma> |\<^sub>s ?i - length ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Infinite_Sequences.stake_shift",
     "stake ?i (?w @- ?\<sigma>) =
      take ?i ?w @ stake (?i - length ?w) ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("Infinite_Sequences.shift_snth",
     "(?xs @- ?\<sigma>) ?i =
      (if ?i < length ?xs then ?xs ! ?i else ?\<sigma> (?i - length ?xs))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 2, template_var 2)))))),
    ("Infinite_Sequences.shift_simps",
     "?xs @- ?\<sigma> |\<^sub>s Suc 0 =
      (if ?xs = [] then ?\<sigma> |\<^sub>s Suc 0
       else tl ?xs @- ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app (template_hole 5, template_hole 4))
            )],
       template_dunno)),
    ("Infinite_Sequences.stake_shift_stake_shift",
     "stake ?i ?\<sigma> @- ?\<sigma>(?i \<rightarrow> ?j) @- ?\<beta> =
      stake (?i + ?j) ?\<sigma> @- ?\<beta>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Infinite_Sequences.stake_append",
     "stake ?n (?u @- ?s) =
      take (min (length ?u) ?n) ?u @ stake (?n - length ?u) ?s",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 1, template_var 1))),
           template_var 0))))]
