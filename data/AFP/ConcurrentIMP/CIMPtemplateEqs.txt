   [("CIMP.cleanup_simps", "(ALL x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("CIMP.cleanup_simps", "(EX x. ?P) = ?P",
     template_equation
      (template_app (template_hole 0, t_empty), template_var 0)),
    ("CIMP.cleanup_simps", "(~ ~ ?P) = ?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("CIMP.cleanup_simps", "(False & ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(True & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(?P & False) = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(?P & True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(?P & ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(False | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(True | ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(?P | False) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(?P | True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(?P | ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(?x = ?x) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(True = ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(?P = True) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(False --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(True --> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("CIMP.cleanup_simps", "(?P --> True) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(?P --> ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(False = ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("CIMP.cleanup_simps", "(?P = False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("CIMP.cleanup_simps", "(?P --> False) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("CIMP.cleanup_simps", "(?P & ~ ?P) = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(~ ?P & ?P) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(?P | ~ ?P) = True",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(~ ?P | ?P) = True",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("CIMP.cleanup_simps", "(?P --> ~ ?P) = (~ ?P)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("CIMP_vcg.atCs_empty", "(atCs ?cs = {}) = (?cs = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("CIMP.cleanup_simps", "(ALL x. x ~= ?t) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("CIMP.cleanup_simps", "(ALL x. ?t ~= x) = False",
     template_equation
      (template_app (template_hole 3, t_empty), template_hole 0)),
    ("CIMP.cleanup_simps", "(?P ~= ?Q) = (?P = (~ ?Q))",
     template_bimplication
      (template_negation
        (template_equation (template_var 1, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("CIMP.cleanup_simps", "(?P & ?P & ?Q) = (?P & ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CIMP.cleanup_simps", "(?P | ?P | ?Q) = (?P | ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CIMP.cleanup_simps", "((~ ?P) = (~ ?Q)) = (?P = ?Q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("CIMP_vcg_rules.curry_forall_eq",
     "(ALL f. ?P f) = (ALL f. ?P (%(x, y). f x y))",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 1, t_empty))),
    ("CIMP.cleanup_simps", "(ALL x. x = ?t --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("CIMP.cleanup_simps", "(ALL x. ?t = x --> ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("CIMP.cleanup_simps", "(EX x. x = ?t & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("CIMP.cleanup_simps", "(EX x. ?t = x & ?P x) = ?P ?t",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_var 1))),
    ("CIMP_vcg.atS_simps", "atS ?p {?l} ?s = at ?p ?l ?s",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("CIMP_vcg.atLs_disj_union",
     "(%s. atLs ?p ?label0.0 s | atLs ?p ?label1.0 s) =
      atLs ?p (?label0.0 Un ?label1.0)",
     template_equation
      (t_empty,
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CIMP_vcg.atS_un",
     "atS ?p (?l Un ?l') ?s = (atS ?p ?l ?s | atS ?p ?l' ?s)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0)))),
    ("CIMP_vcg.atLs_insert_disj",
     "atLs ?p (insert ?l ?label0.0) =
      (%s. atLs ?p {?l} s | atLs ?p ?label0.0 s)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       t_empty)),
    ("CIMP_vcg.lcond_split",
     "?Q (lcond ?lp ?lp' ?b ?s) =
      ((?b ?s --> ?Q ?lp) & (~ ?b ?s --> ?Q ?lp'))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_app (template_var 4, template_var 3))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 1, template_var 0))),
           template_app (template_var 4, template_var 2))))),
    ("CIMP_vcg.lcond_split_asm",
     "?Q (lcond ?lp ?lp' ?b ?s) =
      (~ (?b ?s & ~ ?Q ?lp | ~ ?b ?s & ~ ?Q ?lp'))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 1, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_var 4, template_var 3)))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_hole 2,
               template_app (template_var 4, template_var 2))))))),
    ("CIMP_pred.always_eventually_pigeonhole",
     "(ALL i. EX n>=i. EX m<=?k. ?P m n) =
      (EX m<=?k. ALL i. EX n>=i. ?P m n)",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 2, t_empty))),
    ("CIMP_vcg_rules.pres_tuple_vcg",
     "(ALL P. ?coms, ?p, ?aft \<turnstile>
          \<lbrace>P o (%s. (?f s, ?g s))\<rbrace> ?c) =
      ((ALL P. ?coms, ?p, ?aft \<turnstile> \<lbrace>P o ?f\<rbrace> ?c) &
       (ALL P. ?coms, ?p, ?aft \<turnstile> \<lbrace>P o ?g\<rbrace> ?c))",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("CIMP_vcg.context_decompose",
     "?s \<rightarrow>\<^bsub>?\<alpha>\<^esub> ?s' =
      (EX (c, ictxt, fctxt):decomposeLS ?s.
          cPGM ?s = ictxt c # tl (cPGM ?s) &
          (c # fctxt c @ tl (cPGM ?s), cTKN ?s,
           cLST ?s) \<rightarrow>\<^bsub>?\<alpha>\<^esub> ?s' &
          (ALL l:atC c. cTKN ?s' = Some l))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 19, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 18,
           template_app (template_hole 17, template_var 2)),
         template_app (template_hole 16, t_empty)))),
    ("CIMP_vcg_rules.pres_tuple_vcg_LST",
     "(ALL P. ?coms, ?p, ?aft \<turnstile>
          \<lbrace>P o (%s. (?f s, ?g s)) o LST\<rbrace> ?c) =
      ((ALL P. ?coms, ?p, ?aft \<turnstile> \<lbrace>P o ?f o LST\<rbrace>
           ?c) &
       (ALL P. ?coms, ?p, ?aft \<turnstile> \<lbrace>P o ?g o LST\<rbrace>
           ?c))",
     template_equation
      (template_app (template_hole 10, t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, t_empty))))]
