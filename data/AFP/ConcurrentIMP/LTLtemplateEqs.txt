   [("LTL.norm", "\<box>\<box>?P = \<box>?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("LTL.norm", "\<diamond>\<diamond>?P = \<diamond>?P",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("LTL.norm", "((%s. True) \<R> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("LTL.norm", "((%s. False) \<U> ?P) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       template_var 0)),
    ("LTL.defs", "\<diamond>?P = ((%s. True) \<U> ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("LTL.defs", "\<lceil>?P\<rceil> = (%\<sigma>. ?P (\<sigma> 0))",
     template_equation
      (template_app (template_hole 1, template_var 0), t_empty)),
    ("LTL.eventually_until_eventually",
     "\<diamond>(?P \<U> ?Q) = \<diamond>?Q",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("LTL.norm", "(?P \<R> (%s. False)) = (%s. False)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       t_empty)),
    ("LTL.norm", "(?P \<R> (%s. True)) = (%s. True)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       t_empty)),
    ("LTL.norm", "((%s. False) \<R> ?P) = \<box>?P",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("LTL.norm", "(?P \<W> (%s. False)) = \<box>?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("LTL.norm", "(?P \<U> (%s. False)) = (%s. False)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       t_empty)),
    ("LTL.norm", "(?P \<U> (%s. True)) = (%s. True)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       t_empty)),
    ("LTL.norm", "((%s. True) \<U> ?P) = \<diamond>?P",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("LTL.defs", "\<circle>?P = (%\<sigma>. ?P (\<sigma> |\<^sub>s 1))",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("LTL.always_strongly_fair",
     "\<box>strongly_fair ?enabled ?taken = strongly_fair ?enabled ?taken",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL.always_weakly_fair",
     "\<box>weakly_fair ?enabled ?taken = weakly_fair ?enabled ?taken",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL.always_eventually_always",
     "\<diamond>\<box>\<diamond>?P = \<box>\<diamond>?P",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("LTL.eventually_strongly_fair",
     "\<diamond>strongly_fair ?enabled ?taken =
      strongly_fair ?enabled ?taken",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL.eventually_weakly_fair",
     "\<diamond>weakly_fair ?enabled ?taken = weakly_fair ?enabled ?taken",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL.eventually_until", "\<diamond>?P = ((%s. ~ ?P s) \<U> ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("LTL.norm", "(?P \<U> ?P \<U> ?Q) = (?P \<U> ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL.suffix_state_prop",
     "\<lceil>?P\<rceil> (?\<sigma> |\<^sub>s ?i) = ?P (?\<sigma> ?i)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_var 2, template_app (template_var 1, template_var 0)))),
    ("LTL.defs", "\<box>?P = (%\<sigma>. ALL i. ?P (\<sigma> |\<^sub>s i))",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("LTL.until_next_distrib",
     "\<circle>(?P \<U> ?Q) = (\<circle>?P \<U> \<circle>?Q)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("LTL.norm", "(%s. ~ (\<diamond>?P) s) = \<box>(%s. ~ ?P s)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("LTL.norm",
     "(%s. ~ \<lceil>?p\<rceil> s) = \<lceil>%s. ~ ?p s\<rceil>",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("LTL.unfold",
     "(\<box>?P) ?\<sigma> =
      (?P ?\<sigma> & (\<circle>\<box>?P) ?\<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("LTL.unfold",
     "(\<diamond>?P) ?\<sigma> =
      (?P ?\<sigma> | (\<circle>\<diamond>?P) ?\<sigma>)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("LTL.norm",
     "(~ (\<box>?P) ?\<sigma>) = (\<diamond>(%s. ~ ?P s)) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("LTL.absolute_liveness_eventually",
     "absolute_liveness ?P =
      ((EX \<sigma>. ?P \<sigma>) & ?P = \<diamond>?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_dunno)),
    ("LTL.stable_always",
     "stable ?P = ((EX \<sigma>. ?P \<sigma>) & ?P = \<box>?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_dunno)),
    ("LTL.defs", "(?P \<W> ?Q) = (%s. (?P \<U> ?Q) s | (\<box>?P) s)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       t_empty)),
    ("LTL.eventually_unless_until",
     "(%s. (?P \<W> ?Q) s & (\<diamond>?Q) s) = (?P \<U> ?Q)",
     template_equation
      (t_empty,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("LTL.seq_comp",
     "(\<box>?P) (?f o ?\<sigma>) =
      (\<box>(%\<sigma>. ?P (?f o \<sigma>))) ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("LTL.seq_comp",
     "(\<diamond>?P) (?f o ?\<sigma>) =
      (\<diamond>(%\<sigma>. ?P (?f o \<sigma>))) ?\<sigma>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("LTL.defs",
     "(?P \<R> ?Q) = (%s. ~ ((%s. ~ ?P s) \<U> (%s. ~ ?Q s)) s)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       t_empty)),
    ("LTL.always_conj_distrib",
     "\<box>(%s. ?P s & ?Q s) = (%s. (\<box>?P) s & (\<box>?Q) s)",
     template_equation (template_app (template_hole 1, t_empty), t_empty)),
    ("LTL.eventually_disj_distrib",
     "\<diamond>(%s. ?P s | ?Q s) =
      (%s. (\<diamond>?P) s | (\<diamond>?Q) s)",
     template_equation (template_app (template_hole 1, t_empty), t_empty)),
    ("LTL.eventually_imp_distrib",
     "\<diamond>(%s. ?P s --> ?Q s) =
      (%s. (\<box>?P) s --> (\<diamond>?Q) s)",
     template_equation (template_app (template_hole 2, t_empty), t_empty)),
    ("LTL.next_conj_distrib",
     "\<circle>(%s. ?P s & ?Q s) = (%s. (\<circle>?P) s & (\<circle>?Q) s)",
     template_equation (template_app (template_hole 1, t_empty), t_empty)),
    ("LTL.next_disj_distrib",
     "\<circle>(%s. ?P s | ?Q s) = (%s. (\<circle>?P) s | (\<circle>?Q) s)",
     template_equation (template_app (template_hole 1, t_empty), t_empty)),
    ("LTL.norm",
     "(%s. \<lceil>?p\<rceil> s & \<lceil>?q\<rceil> s) =
      \<lceil>%s. ?p s & ?q s\<rceil>",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("LTL.norm",
     "(%s. \<lceil>?p\<rceil> s | \<lceil>?q\<rceil> s) =
      \<lceil>%s. ?p s | ?q s\<rceil>",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("LTL.norm",
     "(%s. \<lceil>?p\<rceil> s --> \<lceil>?q\<rceil> s) =
      \<lceil>%s. ?p s --> ?q s\<rceil>",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("LTL.unfold",
     "(?P \<R> ?Q) ?\<sigma> =
      (?Q ?\<sigma> & (?P ?\<sigma> | (\<circle>(?P \<R> ?Q)) ?\<sigma>))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("LTL.unfold",
     "(?P \<W> ?Q) ?\<sigma> =
      (?Q ?\<sigma> | ?P ?\<sigma> & (\<circle>(?P \<W> ?Q)) ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("LTL.unfold",
     "(?P \<U> ?Q) ?\<sigma> =
      (?Q ?\<sigma> | ?P ?\<sigma> & (\<circle>(?P \<U> ?Q)) ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("LTL.norm",
     "(~ (?P \<R> ?Q) ?\<sigma>) =
      ((%s. ~ ?P s) \<U> (%s. ~ ?Q s)) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("LTL.norm",
     "(~ (?P \<U> ?Q) ?\<sigma>) =
      ((%s. ~ ?P s) \<R> (%s. ~ ?Q s)) ?\<sigma>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("LTL.norm",
     "(\<lceil>?p\<rceil> ?\<sigma> & \<lceil>?q\<rceil> ?\<sigma>) =
      \<lceil>%s. ?p s & ?q s\<rceil> ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("LTL.norm",
     "(\<lceil>?p\<rceil> ?\<sigma> | \<lceil>?q\<rceil> ?\<sigma>) =
      \<lceil>%s. ?p s | ?q s\<rceil> ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("LTL.norm",
     "(\<lceil>?p\<rceil> ?\<sigma> --> \<lceil>?q\<rceil> ?\<sigma>) =
      \<lceil>%s. ?p s --> ?q s\<rceil> ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("LTL.eventually_imp_conv_disj",
     "\<diamond>(%s. ?P s --> ?Q s) =
      (%s. (\<diamond>(%s. ~ ?P s)) s | (\<diamond>?Q) s)",
     template_equation (template_app (template_hole 3, t_empty), t_empty)),
    ("LTL.strongly_fair_disj_distrib",
     "strongly_fair (%s. ?enabled1.0 s | ?enabled2.0 s) ?taken =
      (%s. strongly_fair ?enabled1.0 ?taken s &
           strongly_fair ?enabled2.0 ?taken s)",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       t_empty)),
    ("LTL.until_disj_distrib",
     "(?P \<U> (%s. ?Q s | ?R s)) = (%s. (?P \<U> ?Q) s | (?P \<U> ?R) s)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2), t_empty),
       t_empty)),
    ("LTL.until_conj_distrib",
     "((%s. ?P s & ?Q s) \<U> ?R) = (%s. (?P \<U> ?R) s & (?Q \<U> ?R) s)",
     template_equation
      (template_app
        (template_app (template_hole 1, t_empty), template_var 0),
       t_empty)),
    ("LTL.seq_comp",
     "(?P \<W> ?Q) (?f o ?\<sigma>) =
      ((%\<sigma>. ?P (?f o \<sigma>)) \<W> (%\<sigma>. ?Q (?f o \<sigma>)))
       ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("LTL.seq_comp",
     "(?P \<U> ?Q) (?f o ?\<sigma>) =
      ((%\<sigma>. ?P (?f o \<sigma>)) \<U> (%\<sigma>. ?Q (?f o \<sigma>)))
       ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("LTL.defs",
     "(?P \<U> ?Q) =
      (%\<sigma>.
          EX i. ?Q (\<sigma> |\<^sub>s i) &
                (ALL k<i. ?P (\<sigma> |\<^sub>s k)))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       t_empty)),
    ("LTL.weakly_fair_unless_until",
     "(%s. weakly_fair ?enabled ?taken s &
           (\<box>(%s. ?enabled s --> (?enabled \<W> ?taken) s)) s) =
      \<box>(%s. ?enabled s --> (?enabled \<U> ?taken) s)",
     template_equation (t_empty, template_app (template_hole 3, t_empty)))]
