Loading theory "Draft.Pick" (required by "Draft.TermsTemplates" via "Draft.Terms" via "Draft.Transition_QuasiTerms_Terms" via "Draft.Equiv_Relation2")
Loading theory "Draft.Preliminaries" (required by "Draft.TermsTemplates" via "Draft.Terms" via "Draft.Transition_QuasiTerms_Terms" via "Draft.QuasiTerms_Environments_Substitution" via "Draft.QuasiTerms_PickFresh_Alpha" via "Draft.QuasiTerms_Swap_Fresh")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Pick"
### 0.035s elapsed time, 0.171s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.135s elapsed time, 0.553s cpu time, 0.056s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.301s elapsed time, 1.167s cpu time, 0.151s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.400s elapsed time, 1.597s cpu time, 0.151s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs")
### theory "Draft.Preliminaries"
### 0.639s elapsed time, 2.539s cpu time, 0.257s GC time
Loading theory "Draft.Equiv_Relation2" (required by "Draft.TermsTemplates" via "Draft.Terms" via "Draft.Transition_QuasiTerms_Terms")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "Draft.Equiv_Relation2"
### 0.301s elapsed time, 1.184s cpu time, 0.137s GC time
Loading theory "Draft.QuasiTerms_Swap_Fresh" (required by "Draft.TermsTemplates" via "Draft.Terms" via "Draft.Transition_QuasiTerms_Terms" via "Draft.QuasiTerms_Environments_Substitution" via "Draft.QuasiTerms_PickFresh_Alpha")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.991s elapsed time, 3.744s cpu time, 0.880s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.112s elapsed time, 4.066s cpu time, 0.988s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.030s elapsed time, 6.488s cpu time, 1.227s GC time
Loading theory "Draft.Templates" (required by "Draft.TermsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.174s cpu time, 0.066s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TermsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.545s elapsed time, 1.131s cpu time, 0.087s GC time
Proofs for inductive predicate(s) "qSwappedp"
  Proving monotonicity ...
### theory "Draft.QuasiTerms_Swap_Fresh"
### 2.973s elapsed time, 5.846s cpu time, 1.212s GC time
Loading theory "Draft.QuasiTerms_PickFresh_Alpha" (required by "Draft.TermsTemplates" via "Draft.Terms" via "Draft.Transition_QuasiTerms_Terms" via "Draft.QuasiTerms_Environments_Substitution")
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
Found termination order: "{}"
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
"X'"
  :: "'a"
"binp"
  :: "'a"
### theory "Draft.QuasiTerms_PickFresh_Alpha"
### 1.341s elapsed time, 1.444s cpu time, 0.147s GC time
Loading theory "Draft.QuasiTerms_Environments_Substitution" (required by "Draft.TermsTemplates" via "Draft.Terms" via "Draft.Transition_QuasiTerms_Terms")
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
### theory "Draft.QuasiTerms_Environments_Substitution"
### 0.529s elapsed time, 0.586s cpu time, 0.082s GC time
Loading theory "Draft.Transition_QuasiTerms_Terms" (required by "Draft.TermsTemplates" via "Draft.Terms")
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
Proofs for inductive predicate(s) "swappedp"
  Proving monotonicity ...
### theory "Draft.Transition_QuasiTerms_Terms"
### 3.450s elapsed time, 5.167s cpu time, 2.400s GC time
Loading theory "Draft.Terms" (required by "Draft.TermsTemplates")
locale FixVars
  fixes dummyV :: "'var"
    and dummyVS :: "'varSort"
  assumes "FixVars TYPE('var) TYPE('varSort)"
### theory "Draft.Terms"
### 1.043s elapsed time, 1.104s cpu time, 0.093s GC time
Loading theory "Draft.TermsTemplates"
val templateLemmas =
   [("QuasiTerms_Swap_Fresh.qSwapped_Clauses", "(?X, ?X) : qSwapped",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("QuasiTerms_Swap_Fresh.qSwap_ident", "?X #[[?x \<and> ?x]]_?zs = ?X",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 1),
         template_var 0),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.sb_simps1", "?x @?xs[?y / ?x]_?xs = ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 2),
         template_var 0),
       template_var 1)),
    ("QuasiTerms_Swap_Fresh.sb_ident", "?x @?xs[?y / ?y]_?ys = ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 2),
           template_var 1),
         template_var 0),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.sw_simps1", "?x @?xs[?x \<and> ?y]_?xs = ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 2),
         template_var 1),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.sw_simps2", "?x @?xs[?y \<and> ?x]_?xs = ?y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 2),
         template_var 0),
       template_var 1)),
    ("QuasiTerms_Swap_Fresh.sw_ident", "?x @?xs[?y \<and> ?y]_?ys = ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 2),
           template_var 1),
         template_var 0),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.qSkel_qSwap",
     "qSkel (?X #[[?x \<and> ?y]]_?zs) = qSkel ?X",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSwap_qSwapped",
     "(?X, ?X #[[?x \<and> ?y]]_?zs) : qSwapped",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0),
                 template_var 3))),
           template_hole 0)
         )),
    ("QuasiTerms_Swap_Fresh.qAFresh_imp_qFresh",
     "qAFresh ?xs ?x ?X ==> qFresh ?xs ?x ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("QuasiTerms_Swap_Fresh.qSwap_sym",
     "?X #[[?x \<and> ?y]]_?zs = ?X #[[?y \<and> ?x]]_?zs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 2),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSwap_involutive",
     "?X #[[?x \<and> ?y]]_?zs #[[?x \<and> ?y]]_?zs = ?X",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.qSwapped_qSkel",
     "(?X, ?Y) : qSwapped ==> qSkel ?Y = qSkel ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_hole 2)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("QuasiTerms_Swap_Fresh.sw_sym",
     "?z @?zs[?x \<and> ?y]_?xs = ?z @?zs[?y \<and> ?x]_?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 3),
           template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.sw_involutive",
     "?z @?zs[?x \<and> ?y]_?xs @?zs[?x \<and> ?y]_?xs = ?z",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.sw_involutive2",
     "?z @?zs[?x \<and> ?y]_?xs @?zs[?y \<and> ?x]_?xs = ?z",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2),
               template_var 3),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("QuasiTerms_Swap_Fresh.qFresh_qSwap_exchange2",
     "qFresh ?zs ?z1.0 ?X =
      qFresh ?zs ?z2.0 (?X #[[?z2.0 \<and> ?z1.0]]_?zs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0),
             template_var 2),
           template_var 1)))),
    ("QuasiTerms_Swap_Fresh.qAFresh_qSwap_exchange1",
     "qAFresh ?zs ?z2.0 (?X #[[?z1.0 \<and> ?z2.0]]_?zs) =
      qAFresh ?zs ?z1.0 ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qAFresh_qSwap_exchange2",
     "qAFresh ?zs ?z2.0 (?X #[[?z2.0 \<and> ?z1.0]]_?zs) =
      qAFresh ?zs ?z1.0 ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qFresh_qSwap_exchange1",
     "qFresh ?zs ?z2.0 (?X #[[?z1.0 \<and> ?z2.0]]_?zs) =
      qFresh ?zs ?z1.0 ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSwapAll_ident",
     "?X #[[?x \<and> ?x]]_?zs = ?X & ?A $[[?x \<and> ?x]]_?zs = ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2),
                     template_var 2),
                   template_var 1)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 2),
                 template_var 0)),
             template_var 0))
         )),
    ("QuasiTerms_Swap_Fresh.qAFreshAll_simps",
     "qAFresh ?xs ?x (qVar ?ys ?y) = (?xs ~= ?ys | ?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("QuasiTerms_Swap_Fresh.qFreshAll_simps",
     "qFresh ?xs ?x (qVar ?ys ?y) = (?xs ~= ?ys | ?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("QuasiTerms_Swap_Fresh.qSwapAll_simps",
     "qVar ?zs' ?z #[[?x \<and> ?y]]_?zs =
      qVar ?zs' (?z @?zs'[?x \<and> ?y]_?zs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.qSwapped_Clauses",
     "(?X, ?Y) : qSwapped ==> (?X, ?Y #[[?x \<and> ?y]]_?zs) : qSwapped",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 0),
                   template_var 3))),
             template_hole 1)
           ))),
    ("QuasiTerms_Swap_Fresh.sw_inj",
     "(?z @?zs[?x \<and> ?y]_?xs = ?z' @?zs[?x \<and> ?y]_?xs) =
      (?z = ?z')",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("QuasiTerms_Swap_Fresh.sb_idem",
     "?z @?zs[?x / ?y]_?xs @?zs[?x / ?y]_?xs = ?z @?zs[?x / ?y]_?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSwap_preserves_qAFresh",
     "qAFresh ?ys (?y @?ys[?z1.0 \<and> ?z2.0]_?zs)
       (?X #[[?z1.0 \<and> ?z2.0]]_?zs) =
      qAFresh ?ys ?y ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 5),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 5), template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSwap_preserves_qFresh",
     "qFresh ?ys (?y @?ys[?z1.0 \<and> ?z2.0]_?zs)
       (?X #[[?z1.0 \<and> ?z2.0]]_?zs) =
      qFresh ?ys ?y ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 5),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 5), template_var 1),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSkel_qSwapAll",
     "qSkel (?X #[[?x \<and> ?y]]_?zs) = qSkel ?X &
      qSkelAbs (?A $[[?x \<and> ?y]]_?zs) = qSkelAbs ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1))),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 0))),
             template_app (template_hole 1, template_var 0)))
         )),
    ("QuasiTerms_Swap_Fresh.qAFreshAll_imp_qFreshAll",
     "(qAFresh ?xs ?x ?X --> qFresh ?xs ?x ?X) &
      (qAFreshAbs ?xs ?x ?A --> qFreshAbs ?xs ?x ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0)))
         )),
    ("QuasiTerms_Swap_Fresh.qAFreshAll_simps",
     "qAFresh ?xs ?x (qOp ?delta ?inp ?binp) =
      (liftAll (qAFresh ?xs ?x) ?inp & liftAll (qAFreshAbs ?xs ?x) ?binp)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3)),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.qFreshAll_simps",
     "qFresh ?xs ?x (qOp ?delta ?inp ?binp) =
      (liftAll (qFresh ?xs ?x) ?inp & liftAll (qFreshAbs ?xs ?x) ?binp)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 4), template_var 3),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3)),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.sb_simps2",
     "?zs ~= ?xs | ?z2.0 ~= ?x ==> ?x @?xs[?z1.0 / ?z2.0]_?zs = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3))),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 2),
             template_var 3),
           template_var 1),
         template_var 1))),
    ("QuasiTerms_Swap_Fresh.qAFresh_qSwap_id",
     "[| qAFresh ?zs ?z1.0 ?X; qAFresh ?zs ?z2.0 ?X |]
      ==> ?X #[[?z1.0 \<and> ?z2.0]]_?zs = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("QuasiTerms_Swap_Fresh.qSwapped_Clauses",
     "[| (?X, ?Y) : qSwapped; (?Y, ?Z) : qSwapped |]
      ==> (?X, ?Z) : qSwapped",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("QuasiTerms_Swap_Fresh.qFreshAll_simps",
     "qFreshAbs ?xs ?x (qAbs ?ys ?y ?X) =
      (?xs = ?ys & ?x = ?y | qFresh ?xs ?x ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 0))
           ))),
    ("QuasiTerms_Swap_Fresh.qTermLess_modulo_wf",
     "(!!X Y. (X, Y) : ?rel ==> qSkel Y = qSkel X) ==>
      wf (qTermLess_modulo ?rel)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("QuasiTerms_Swap_Fresh.qAFreshAll_simps",
     "qAFreshAbs ?xs ?x (qAbs ?ys ?y ?X) =
      ((?xs ~= ?ys | ?x ~= ?y) & qAFresh ?xs ?x ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 2))),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 0))
           ))),
    ("QuasiTerms_Swap_Fresh.qSwapAll_simps",
     "qAbs ?zs' ?z ?X $[[?x \<and> ?y]]_?zs =
      qAbs ?zs' (?z @?zs'[?x \<and> ?y]_?zs) (?X #[[?x \<and> ?y]]_?zs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4),
             template_var 3),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.qSwapAll_sym",
     "?X #[[?x \<and> ?y]]_?zs = ?X #[[?y \<and> ?x]]_?zs &
      ?A $[[?x \<and> ?y]]_?zs = ?A $[[?y \<and> ?x]]_?zs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 0)))
         )),
    ("QuasiTerms_Swap_Fresh.qSwapAll_involutive",
     "?X #[[?x \<and> ?y]]_?zs #[[?x \<and> ?y]]_?zs = ?X &
      ?A $[[?x \<and> ?y]]_?zs $[[?x \<and> ?y]]_?zs = ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 0))),
             template_var 0))
         )),
    ("QuasiTerms_Swap_Fresh.sb_compose1",
     "?z @?zs[?y1.0 / ?x]_?xs @?zs[?y2.0 / ?x]_?xs =
      ?z @?zs[?y1.0 @?xs[?y2.0 / ?x]_?xs / ?x]_?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 3),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 5),
                 template_var 1)),
             template_var 3),
           template_var 2),
         template_var 0))),
    ("QuasiTerms_Swap_Fresh.qSwapAll_simps",
     "qOp ?delta ?inp ?binp #[[?x \<and> ?y]]_?zs =
      qOp ?delta (lift (qSwap ?zs ?x ?y) ?inp)
       (lift (qSwapAbs ?zs ?x ?y) ?binp)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 5),
             template_var 4),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_var 3)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 3)),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.sw_simps3",
     "?zs ~= ?xs | ?x ~: {?z1.0, ?z2.0} ==>
      ?x @?xs[?z1.0 \<and> ?z2.0]_?zs = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3))),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_hole 2)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 0),
             template_var 3),
           template_var 2),
         template_var 2))),
    ("QuasiTerms_Swap_Fresh.sb_preserves_mship",
     "{?y1.0, ?y2.0} <= ?Var ?ys ==>
      (?x @?xs[?y1.0 / ?y2.0]_?ys : ?Var ?xs) = (?x : ?Var ?xs)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 5),
            template_app
             (template_app (template_hole 4, template_var 4),
              template_hole 3)),
          template_app (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 1),
               template_var 0)),
           template_app (template_var 3, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_var 3, template_var 1))))),
    ("QuasiTerms_Swap_Fresh.sw_preserves_mship",
     "{?y1.0, ?y2.0} <= ?Var ?ys ==>
      (?x @?xs[?y1.0 \<and> ?y2.0]_?ys : ?Var ?xs) = (?x : ?Var ?xs)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 5),
            template_app
             (template_app (template_hole 4, template_var 4),
              template_hole 3)),
          template_app (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 1),
               template_var 0)),
           template_app (template_var 3, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_var 3, template_var 1))))),
    ("QuasiTerms_Swap_Fresh.qAFresh_qSwap_compose",
     "[| qAFresh ?zs ?y ?X; qAFresh ?zs ?z ?X |]
      ==> ?X #[[?y \<and> ?x]]_?zs #[[?z \<and> ?y]]_?zs =
          ?X #[[?z \<and> ?x]]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0),
           template_var 2)))),
    ("QuasiTerms_Swap_Fresh.qSwap_preserves_qAFresh_distinct",
     "?ys ~= ?zs | ?y ~: {?z1.0, ?z2.0} ==>
      qAFresh ?ys ?y (?X #[[?z1.0 \<and> ?z2.0]]_?zs) = qAFresh ?ys ?y ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4))),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_hole 3)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.qSwap_preserves_qFresh_distinct",
     "?ys ~= ?zs | ?y ~: {?z1.0, ?z2.0} ==>
      qFresh ?ys ?y (?X #[[?z1.0 \<and> ?z2.0]]_?zs) = qFresh ?ys ?y ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4))),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_hole 3)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_var 3),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.qSwap_compose",
     "?X #[[?x \<and> ?y]]_?zs #[[?x' \<and> ?y']]_?zs' =
      ?X #[[?x' \<and> ?y']]_?zs' #[[?x @?zs[?x' \<and> ?y']_?zs' \<and> ?y @?zs[?x' \<and> ?y']_?zs']]_?zs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_var 5),
             template_var 4),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.sb_trans",
     "?us ~= ?zs | ?u ~= ?y ==>
      ?u @?us[?y / ?x]_?zs @?us[?z / ?y]_?zs = ?u @?us[?z / ?x]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4))),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 2),
             template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 0),
               template_var 5),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 0),
             template_var 5),
           template_var 3)))),
    ("QuasiTerms_Swap_Fresh.sw_compose",
     "?z @?zs[?x \<and> ?y]_?xs @?zs[?x' \<and> ?y']_?xs' =
      ?z @?zs[?x' \<and> ?y']_?xs' @?zs[?x @?xs[?x' \<and> ?y']_?xs' \<and> ?y @?xs[?x' \<and> ?y']_?xs']_?xs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 7),
               template_var 6),
             template_var 5),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 4),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 3),
               template_var 1)),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 6),
               template_var 5),
             template_var 4),
           template_var 0)))),
    ("QuasiTerms_Swap_Fresh.sw_trans",
     "?us ~= ?zs | ?u ~: {?y, ?z} ==>
      ?u @?us[?y \<and> ?x]_?zs @?us[?z \<and> ?y]_?zs =
      ?u @?us[?z \<and> ?x]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4))),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 2),
             template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 0),
               template_var 5),
             template_var 3)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 0),
             template_var 5),
           template_var 3)))),
    ("QuasiTerms_Swap_Fresh.qAFreshAll_qSwapAll_id",
     "(qAFresh ?zs ?z1.0 ?X & qAFresh ?zs ?z2.0 ?X -->
       ?X #[[?z1.0 \<and> ?z2.0]]_?zs = ?X) &
      (qAFreshAbs ?zs ?z1.0 ?A & qAFreshAbs ?zs ?z2.0 ?A -->
       ?A $[[?z1.0 \<and> ?z2.0]]_?zs = ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 4),
                         template_var 3),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 1),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 4),
                         template_var 3),
                       template_var 1),
                     template_var 2)),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 4),
                       template_var 3),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 1),
                   template_var 0)),
               template_var 0)))
         )),
    ("QuasiTerms_Swap_Fresh.qSwapAll_preserves_qAFreshAll",
     "qAFresh ?ys (?y @?ys[?z1.0 \<and> ?z2.0]_?zs)
       (?X #[[?z1.0 \<and> ?z2.0]]_?zs) =
      qAFresh ?ys ?y ?X &
      qAFreshAbs ?ys (?y @?ys[?z1.0 \<and> ?z2.0]_?zs)
       (?A $[[?z1.0 \<and> ?z2.0]]_?zs) =
      qAFreshAbs ?ys ?y ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 3, template_var 5),
                             template_var 4),
                           template_var 3),
                         template_var 6),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 5),
                           template_var 4),
                         template_var 3),
                       template_var 6),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 2),
               template_var 0)))
         )),
    ("QuasiTerms_Swap_Fresh.qSwapAll_preserves_qFreshAll",
     "qFresh ?ys (?y @?ys[?z1.0 \<and> ?z2.0]_?zs)
       (?X #[[?z1.0 \<and> ?z2.0]]_?zs) =
      qFresh ?ys ?y ?X &
      qFreshAbs ?ys (?y @?ys[?z1.0 \<and> ?z2.0]_?zs)
       (?A $[[?z1.0 \<and> ?z2.0]]_?zs) =
      qFreshAbs ?ys ?y ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 3, template_var 5),
                             template_var 4),
                           template_var 3),
                         template_var 6),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 5),
                           template_var 4),
                         template_var 3),
                       template_var 6),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 2),
               template_var 0)))
         )),
    ("QuasiTerms_Swap_Fresh.qSwap_commute",
     "?zs ~= ?zs' | {?x, ?y} Int {?x', ?y'} = {} ==>
      ?X #[[?x \<and> ?y]]_?zs #[[?x' \<and> ?y']]_?zs' =
      ?X #[[?x' \<and> ?y']]_?zs' #[[?x \<and> ?y]]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 4),
                        template_app
                         (template_app (template_hole 3, template_var 3),
                          template_hole 2))),
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_app
                       (template_app (template_hole 3, template_var 1),
                        template_hole 2)))),
                template_hole 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4),
               template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("QuasiTerms_Swap_Fresh.sb_compose2",
     "?ys ~= ?xs | ?x2.0 ~: {?y1.0, ?y2.0} ==>
      ?z @?zs[?x1.0 / ?x2.0]_?xs @?zs[?y1.0 / ?y2.0]_?ys =
      ?z @?zs[?y1.0 / ?y2.0]_?ys @?zs[?x1.0 @?xs[?y1.0 / ?y2.0]_?ys / ?x2.0]_?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 7),
                    template_var 6))),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_hole 2)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 1),
                 template_var 5),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 4),
                       template_var 3),
                     template_var 6),
                   template_var 1)),
               template_var 5),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 7),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0))))),
    ("QuasiTerms_Swap_Fresh.sb_commute",
     "?zs ~= ?zs' | {?x, ?y} Int {?x', ?y'} = {} ==>
      ?u @?us[?x / ?y]_?zs @?us[?x' / ?y']_?zs' =
      ?u @?us[?x' / ?y']_?zs' @?us[?x / ?y]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_var 6))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_hole 2))),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_hole 2)))),
                template_hole 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 7),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 5),
               template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("QuasiTerms_Swap_Fresh.sw_commute",
     "?zs ~= ?zs' | {?x, ?y} Int {?x', ?y'} = {} ==>
      ?u @?us[?x \<and> ?y]_?zs @?us[?x' \<and> ?y']_?zs' =
      ?u @?us[?x' \<and> ?y']_?zs' @?us[?x \<and> ?y]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_var 6))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_app
                         (template_app (template_hole 3, template_var 4),
                          template_hole 2))),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_hole 2)))),
                template_hole 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 7),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 5),
               template_var 4),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))))),
    ("QuasiTerms_Swap_Fresh.qAFreshAll_qSwapAll_compose",
     "(qAFresh ?zs ?y ?X & qAFresh ?zs ?z ?X -->
       ?X #[[?y \<and> ?x]]_?zs #[[?z \<and> ?y]]_?zs =
       ?X #[[?z \<and> ?x]]_?zs) &
      (qAFreshAbs ?zs ?y ?A & qAFreshAbs ?zs ?z ?A -->
       ?A $[[?y \<and> ?x]]_?zs $[[?z \<and> ?y]]_?zs =
       ?A $[[?z \<and> ?x]]_?zs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 5),
                         template_var 4),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 5),
                       template_var 2),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 5),
                         template_var 2),
                       template_var 4),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 5),
                           template_var 4),
                         template_var 1),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 2),
                     template_var 1),
                   template_var 3)))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 2),
                     template_var 4),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 4),
                       template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2),
                   template_var 1),
                 template_var 0))))
         )),
    ("QuasiTerms_Swap_Fresh.qSwap_3commute",
     "[| qAFresh ?ys ?y ?X; qAFresh ?ys ?y0.0 ?X;
         ?ys ~= ?zs | ?y0.0 ~: {?z1.0, ?z2.0} |]
      ==> ?X #[[?z1.0 \<and> ?z2.0]]_?zs #[[?y0.0 \<and> ?x @?ys[?z1.0 \<and> ?z2.0]_?zs]]_?ys =
          ?X #[[?y \<and> ?x]]_?ys #[[?y0.0 \<and> ?y]]_?ys #[[?z1.0 \<and> ?z2.0]]_?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 7),
                template_var 4),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_var 3))),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_hole 3)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 7),
               template_var 4),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 7),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 5)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 4),
               template_var 6),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 6),
                 template_var 0),
               template_var 5)))))),
    ("QuasiTerms_Swap_Fresh.qTerm_rawInduct",
     "[| !!xs x. ?phi (qVar xs x);
         !!delta inp binp.
            [| liftAll ?phi inp; liftAll ?phiAbs binp |]
            ==> ?phi (qOp delta inp binp);
         !!xs x X. ?phi X ==> ?phiAbs (qAbs xs x X) |]
      ==> ?phi ?X & ?phiAbs ?A",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("QuasiTerms_Swap_Fresh.qSwapAll_compose",
     "?X #[[?x \<and> ?y]]_?zs #[[?x' \<and> ?y']]_?zs' =
      ?X #[[?x' \<and> ?y']]_?zs' #[[?x @?zs[?x' \<and> ?y']_?zs' \<and> ?y @?zs[?x' \<and> ?y']_?zs']]_?zs &
      ?A $[[?x \<and> ?y]]_?zs $[[?x' \<and> ?y']]_?zs' =
      ?A $[[?x' \<and> ?y']]_?zs' $[[?x @?zs[?x' \<and> ?y']_?zs' \<and> ?y @?zs[?x' \<and> ?y']_?zs']]_?zs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 2, template_var 7),
                             template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 1)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 2, template_var 7),
                           template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 0))))
         )),
    ("QuasiTerms_Swap_Fresh.qTerm_induct",
     "[| !!xs x. ?phi (qVar xs x);
         !!delta inp binp.
            [| liftAll ?phi inp; liftAll ?phiAbs binp |]
            ==> ?phi (qOp delta inp binp);
         !!xs x X.
            [| !!Y. (X, Y) : qSwapped ==> ?phi Y;
               !!Y. qSkel Y = qSkel X ==> ?phi Y |]
            ==> ?phiAbs (qAbs xs x X) |]
      ==> ?phi ?X & ?phiAbs ?A",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           ))),
    ("QuasiTerms_Swap_Fresh.qTerm_templateInduct",
     "[| !!X Y. (X, Y) : ?rel ==> qSkel Y = qSkel X;
         !!xs x. ?phi (qVar xs x);
         !!delta inp binp.
            [| liftAll ?phi inp; liftAll ?phiAbs binp |]
            ==> ?phi (qOp delta inp binp);
         !!xs x X.
            (!!Y. (X, Y) : ?rel ==> ?phi Y) ==> ?phiAbs (qAbs xs x X) |]
      ==> ?phi ?X & ?phiAbs ?A",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 2, template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.TermsTemplates"
### 0.432s elapsed time, 0.626s cpu time, 0.053s GC time
val it = (): unit
