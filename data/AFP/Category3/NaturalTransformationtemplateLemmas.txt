   [("NaturalTransformation.naturally_isomorphic_reflexive",
     "functor ?A ?B ?F ==> naturally_isomorphic ?A ?B ?F ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 0)
           ))),
    ("NaturalTransformation.functor_is_transformation",
     "functor ?A ?B ?F ==> natural_transformation ?A ?B ?F ?F ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 0),
             template_var 0)
           ))),
    ("NaturalTransformation.naturally_isomorphic_symmetric",
     "naturally_isomorphic ?A ?B ?F ?G ==>
      naturally_isomorphic ?A ?B ?G ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("NaturalTransformation.hcomp_ide_dom",
     "natural_transformation ?A ?B ?F ?G ?\<tau> ==>
      ?\<tau> o identity_functor.map ?A = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 4)),
         template_var 0))),
    ("NaturalTransformation.hcomp_ide_cod",
     "natural_transformation ?A ?B ?F ?G ?\<tau> ==>
      identity_functor.map ?B o ?\<tau> = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 0),
         template_var 0))),
    ("NaturalTransformation.transformation_by_components_idem",
     "natural_transformation ?A ?B ?F ?G ?\<tau> ==>
      transformation_by_components.map ?A ?B ?F ?\<tau> = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0),
         template_var 0))),
    ("NaturalTransformation.vcomp_ide_dom",
     "natural_transformation ?A ?B ?F ?G ?\<tau> ==>
      vertical_composite.map ?A ?B ?F ?\<tau> = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0),
         template_var 0))),
    ("NaturalTransformation.vcomp_ide_cod",
     "natural_transformation ?A ?B ?F ?G ?\<tau> ==>
      vertical_composite.map ?A ?B ?\<tau> ?G = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 0),
           template_var 1),
         template_var 0))),
    ("NaturalTransformation.inverse_transformations_inverse",
     "inverse_transformations ?A ?B ?F ?G ?\<sigma> ?\<sigma>' ==>
      vertical_composite.map ?A ?B ?\<sigma> ?\<sigma>' = ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4),
             template_var 1),
           template_var 0),
         template_var 3))),
    ("NaturalTransformation.inverse_transformations_inverse",
     "inverse_transformations ?A ?B ?F ?G ?\<sigma> ?\<sigma>' ==>
      vertical_composite.map ?A ?B ?\<sigma>' ?\<sigma> = ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4),
             template_var 0),
           template_var 1),
         template_var 2))),
    ("NaturalTransformation.inverse_transformations_sym",
     "inverse_transformations ?A ?B ?F ?G ?\<sigma> ?\<sigma>' ==>
      inverse_transformations ?A ?B ?G ?F ?\<sigma>' ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 0, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("NaturalTransformation.naturally_isomorphic_respects_faithful_functor",
     "[| naturally_isomorphic ?A ?B ?F ?G; faithful_functor ?A ?B ?F |]
      ==> faithful_functor ?A ?B ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("NaturalTransformation.naturally_isomorphic_respects_full_functor",
     "[| naturally_isomorphic ?A ?B ?F ?G; full_functor ?A ?B ?F |]
      ==> full_functor ?A ?B ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("NaturalTransformation.inverse_inverse_transformation",
     "natural_isomorphism ?A ?B ?F ?G ?\<tau> ==>
      inverse_transformation.map ?A ?B ?F
       (inverse_transformation.map ?A ?B ?G ?\<tau>) =
      ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("NaturalTransformation.vertical_composite_iso_inverse",
     "natural_isomorphism ?A ?B ?F ?G ?\<tau> ==>
      vertical_composite.map ?A ?B ?\<tau>
       (inverse_transformation.map ?A ?B ?G ?\<tau>) =
      ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_var 2))),
    ("NaturalTransformation.vertical_composite_inverse_iso",
     "natural_isomorphism ?A ?B ?F ?G ?\<tau> ==>
      vertical_composite.map ?A ?B
       (inverse_transformation.map ?A ?B ?G ?\<tau>) ?\<tau> =
      ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 0),
         template_var 1))),
    ("NaturalTransformation.naturally_isomorphic_transitive",
     "[| naturally_isomorphic ?A ?B ?F ?G;
         naturally_isomorphic ?A ?B ?G ?H |]
      ==> naturally_isomorphic ?A ?B ?F ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("NaturalTransformation.natural_isomorphisms_compose",
     "[| natural_isomorphism ?A ?B ?F ?G ?\<sigma>;
         natural_isomorphism ?A ?B ?G ?H ?\<tau> |]
      ==> natural_isomorphism ?A ?B ?F ?H
           (vertical_composite.map ?A ?B ?\<sigma> ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 5),
                 template_var 2),
               template_var 0))
           ))),
    ("NaturalTransformation.horizontal_composite",
     "[| natural_transformation ?A ?B ?F ?G ?\<sigma>;
         natural_transformation ?B ?C ?H ?K ?\<tau> |]
      ==> natural_transformation ?A ?C (?H o ?F) (?K o ?G)
           (?\<tau> o ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 7),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 8),
                   template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 6)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 5)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4))
           ))),
    ("NaturalTransformation.interchange_spc",
     "[| natural_transformation ?B ?C ?F ?G ?\<sigma>;
         natural_transformation ?C ?D ?H ?K ?\<tau> |]
      ==> ?\<tau> o ?\<sigma> =
          vertical_composite.map ?B ?D (?H o ?\<sigma>) (?\<tau> o ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 7),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 8),
               template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 4)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 5))))),
    ("NaturalTransformation.interchange_spc",
     "[| natural_transformation ?B ?C ?F ?G ?\<sigma>;
         natural_transformation ?C ?D ?H ?K ?\<tau> |]
      ==> ?\<tau> o ?\<sigma> =
          vertical_composite.map ?B ?D (?\<tau> o ?F) (?K o ?\<sigma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 7),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 4),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 8),
               template_var 3),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 6)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 4))))),
    ("NaturalTransformation.inverse_transformations_compose",
     "[| inverse_transformations ?A ?B ?F ?G ?\<sigma> ?\<sigma>';
         inverse_transformations ?A ?B ?G ?H ?\<tau> ?\<tau>' |]
      ==> inverse_transformations ?A ?B ?F ?H
           (vertical_composite.map ?A ?B ?\<sigma> ?\<tau>)
           (vertical_composite.map ?A ?B ?\<tau>' ?\<sigma>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 8),
                      template_var 7),
                    template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 8),
                     template_var 7),
                   template_var 6),
                 template_var 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 8),
                     template_var 7),
                   template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 8),
                   template_var 7),
                 template_var 0),
               template_var 3))
           ))),
    ("NaturalTransformation.eqI",
     "[| natural_transformation ?A ?B ?F ?G ?\<sigma>;
         natural_transformation ?A ?B ?F ?G ?\<sigma>';
         !!a. partial_magma.ide ?A a ==> ?\<sigma> a = ?\<sigma>' a |]
      ==> ?\<sigma> = ?\<sigma>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("NaturalTransformation.whisker_right",
     "[| functor ?A ?B ?F; natural_transformation ?B ?C ?H ?K ?\<tau>;
         natural_transformation ?B ?C ?K ?L ?\<tau>' |]
      ==> vertical_composite.map ?B ?C ?\<tau> ?\<tau>' o ?F =
          vertical_composite.map ?A ?C (?\<tau> o ?F) (?\<tau>' o ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 5),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 5),
                 template_var 2),
               template_var 0)),
           template_var 6),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 8),
               template_var 5),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 6)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 6))))),
    ("NaturalTransformation.whisker_left",
     "[| functor ?B ?C ?K; natural_transformation ?A ?B ?F ?G ?\<tau>;
         natural_transformation ?A ?B ?G ?H ?\<tau>' |]
      ==> ?K o vertical_composite.map ?A ?B ?\<tau> ?\<tau>' =
          vertical_composite.map ?A ?C (?K o ?\<tau>) (?K o ?\<tau>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 8),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 6),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 8),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 7),
             template_app
              (template_app (template_hole 2, template_var 6),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 6),
             template_var 0))))),
    ("NaturalTransformation.vcomp_assoc",
     "[| natural_transformation ?A ?B ?F ?G ?\<rho>;
         natural_transformation ?A ?B ?G ?H ?\<sigma>;
         natural_transformation ?A ?B ?H ?K ?\<tau> |]
      ==> vertical_composite.map ?A ?B
           (vertical_composite.map ?A ?B ?\<rho> ?\<sigma>) ?\<tau> =
          vertical_composite.map ?A ?B ?\<rho>
           (vertical_composite.map ?A ?B ?\<sigma> ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 8),
                    template_var 7),
                  template_var 5),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 8),
                    template_var 7),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 8),
               template_var 7),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 8),
                   template_var 7),
                 template_var 4),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 8),
               template_var 7),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 7),
               template_var 2),
             template_var 0))))),
    ("NaturalTransformation.interchange",
     "[| natural_transformation ?B ?C ?F ?G ?\<tau>;
         natural_transformation ?B ?C ?G ?H ?\<nu>;
         natural_transformation ?C ?D ?K ?L ?\<sigma>;
         natural_transformation ?C ?D ?L ?M ?\<mu> |]
      ==> vertical_composite.map ?C ?D ?\<sigma> ?\<mu> o
          vertical_composite.map ?B ?C ?\<tau> ?\<nu> =
          vertical_composite.map ?B ?D (?\<sigma> o ?\<tau>)
           (?\<mu> o ?\<nu>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 12),
                    template_var 11),
                  template_var 10),
                template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 12),
                    template_var 11),
                  template_var 9),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 11),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 11),
                    template_var 5),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 11),
                   template_var 5),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 12),
                 template_var 11),
               template_var 8),
             template_var 6)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 12),
               template_var 5),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 8)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 6)))))]
