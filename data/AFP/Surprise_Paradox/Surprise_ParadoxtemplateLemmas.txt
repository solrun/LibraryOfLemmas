   [("Surprise_Paradox.closed_hfm_Conj",
     "closed_hfm (?A HAND ?B) = (closed_hfm ?A & closed_hfm ?B)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Surprise_Paradox.hfm_to_fm_Conj",
     "hfm_to_fm (?A HAND ?B) = hfm_to_fm ?A AND hfm_to_fm ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Surprise_Paradox.quot_closed_hfm",
     "closed_hfm ?A ==>
      \<guillemotleft>?A\<guillemotright> =
      \<guillemotleft>hfm_to_fm ?A\<guillemotright>",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Surprise_Paradox.subst_quot_hfm",
     "subst ?i \<guillemotleft>?P\<guillemotright>
       \<guillemotleft>?A\<guillemotright> =
      \<guillemotleft>?A(?i:::=?P)\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Surprise_Paradox.vquot_dbtm_fresh",
     "atom ` ?V \<sharp>* ?t ==> vquot_dbtm ?V ?t = quot_dbtm ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Surprise_Paradox.subst_vquot",
     "subst ?i \<guillemotleft>?t\<guillemotright>
       \<lfloor>?A\<rfloor>{?i} =
      \<guillemotleft>?A(?i::=?t)\<guillemotright>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 2),
           template_app (template_hole 5, template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_hole 2))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1)))),
    ("Surprise_Paradox.trans_tm_forgets",
     "atom ` set ?is \<sharp>* ?t ==> trans_tm ?is ?t = trans_tm [] ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Surprise_Paradox.subst_hfml_Conj",
     "(?A HAND ?B)(?i:::=?x) = ?A(?i:::=?x) HAND ?B(?i:::=?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A ?H \<turnstile> ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 2), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("Surprise_Paradox.13",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile> Neg (P ?Q\<^sub>1 ?Q\<^sub>2)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4),
        template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?A2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 4), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 3), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 1)
           ))),
    ("Surprise_Paradox.11",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile> P ?Q\<^sub>1 ?Q\<^sub>2 IMP ?Q\<^sub>1",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5),
        template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_var 1))
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0 (insert ?A2.0 (insert ?A3.0 ?H)) \<turnstile> ?A3.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 5), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 4), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_var 1)
           ))),
    ("Surprise_Paradox.12_I",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> ?H \<turnstile>
          PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 IMP
                              ?Q\<^sub>1\<guillemotright>",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2), template_hole 6),
        template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1))),
                   template_var 2))))
           ))),
    ("Surprise_Paradox.12",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile>
          PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 IMP
                              ?Q\<^sub>1\<guillemotright>",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 0), template_hole 7)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0))),
                   template_var 1))))
           ))),
    ("Surprise_Paradox.8",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile>
          P ?Q\<^sub>1 ?Q\<^sub>2 AND Neg ?Q\<^sub>1 IMP ?Q\<^sub>2",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6),
        template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_app (template_hole 2, template_var 1)))),
               template_var 0))
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0 (insert ?A3.0 (insert ?A4.0 ?H))) \<turnstile>
          ?A4.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 6), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 5), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {}; ?H \<turnstile> ?Aa |]
      ==> insert (Neg ?Aa) ?H \<turnstile> ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 4), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 3), template_hole 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2)),
             template_var 0)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert ?A ?H \<turnstile> Fls |]
      ==> ?H \<turnstile> Neg ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3), template_hole 4),
        template_equation
         (template_app (template_hole 5, template_var 2), template_hole 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Surprise_Paradox.10_I",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> ?H \<turnstile>
          PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 AND Neg ?Q\<^sub>1 IMP
                              ?Q\<^sub>2\<guillemotright>",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_var 1)),
                         template_app (template_hole 2, template_var 2)))),
                   template_var 1))))
           ))),
    ("Surprise_Paradox.10",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile>
          PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 AND Neg ?Q\<^sub>1 IMP
                              ?Q\<^sub>2\<guillemotright>",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1), template_hole 8),
        template_equation
         (template_app (template_hole 9, template_var 0), template_hole 8)],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0)),
                         template_app (template_hole 2, template_var 1)))),
                   template_var 0))))
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0 (insert ?A4.0 (insert ?A5.0 ?H)))) \<turnstile>
          ?A5.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 7), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 6), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert ?A ?H \<turnstile> ?B |]
      ==> ?H \<turnstile> ?A IMP ?B",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 4), template_hole 4),
        template_equation
         (template_app (template_hole 5, template_var 3), template_hole 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0))
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0 (insert ?A6.0 ?H))))) \<turnstile>
          ?A6.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 8), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 7), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 0))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert ?A1.0 ?H \<turnstile> ?Aa |]
      ==> insert ?A1.0 (insert (Neg ?Aa) ?H) \<turnstile> ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 5), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 4), template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 2))),
             template_var 0)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert ?A (insert ?B ?H) \<turnstile> ?C |]
      ==> insert (?A AND ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 5), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 4), template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0 (insert ?A7.0 ?H)))))) \<turnstile>
          ?A7.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 9), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 8), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_app
                            (template_app (template_hole 0, template_var 1),
                             template_var 0)))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0 (insert ?A8.0 ?H))))))) \<turnstile>
          ?A8.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 10), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 9), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 8),
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_app
                            (template_app (template_hole 0, template_var 2),
                             template_app
                              (template_app
                                (template_hole 0, template_var 1),
                               template_var 0))))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert ?A1.0 (insert ?A2.0 ?H) \<turnstile> ?Aa |]
      ==> insert ?A1.0 (insert ?A2.0 (insert (Neg ?Aa) ?H)) \<turnstile>
          ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 6), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 5), template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_var 2)))),
             template_var 0)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0 (insert ?A9.0 ?H)))))))) \<turnstile>
          ?A9.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 11), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 10),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 9),
                 template_app
                  (template_app (template_hole 0, template_var 8),
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_app
                        (template_app (template_hole 0, template_var 5),
                         template_app
                          (template_app (template_hole 0, template_var 4),
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_app
                              (template_app
                                (template_hole 0, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 1),
                                 template_var 0)))))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.subst_vquot_dbtm_trans_fm",
     "[| atom ?i \<sharp> ?is; atom ` set ?is \<sharp>* ?t |]
      ==> subst ?i \<guillemotleft>?t\<guillemotright>
           (vquot_dbfm {?i} (trans_fm ?is ?A)) =
          quot_dbfm (trans_fm ?is (?A(?i::=?t)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_hole 12),
                  template_app (template_hole 9, template_var 2))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 3),
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_hole 3)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1)))))),
    ("Surprise_Paradox.subst_vquot_dbtm_trans_tm",
     "[| atom ?i \<sharp> ?is; atom ` set ?is \<sharp>* ?t |]
      ==> subst ?i \<guillemotleft>?t\<guillemotright>
           (vquot_dbtm {?i} (trans_tm ?is ?t')) =
          quot_dbtm (trans_tm ?is (subst ?i ?t ?t'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 11),
                  template_app (template_hole 8, template_var 2))),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 1),
               template_var 0)))))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert ?A ?H \<turnstile> ?C; insert ?B ?H \<turnstile> ?C |]
      ==> insert (?A OR ?B) ?H \<turnstile> ?C",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 5), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 4), template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert ?A10.0 ?H))))))))) \<turnstile>
          ?A10.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 12), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 11),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 10),
                 template_app
                  (template_app (template_hole 0, template_var 9),
                   template_app
                    (template_app (template_hole 0, template_var 8),
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_app
                            (template_app (template_hole 0, template_var 4),
                             template_app
                              (template_app
                                (template_hole 0, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 1),
                                   template_var 0))))))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert ?A10.0
                             (insert ?A11.0 ?H)))))))))) \<turnstile>
          ?A11.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 13), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 12),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 11),
                 template_app
                  (template_app (template_hole 0, template_var 10),
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_app
                      (template_app (template_hole 0, template_var 8),
                       template_app
                        (template_app (template_hole 0, template_var 7),
                         template_app
                          (template_app (template_hole 0, template_var 6),
                           template_app
                            (template_app (template_hole 0, template_var 5),
                             template_app
                              (template_app
                                (template_hole 0, template_var 4),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 2),
                                   template_app
                                    (template_app
(template_hole 0, template_var 1),
                                     template_var 0)))))))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.propositional_calculus",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> insert ?A1.0
           (insert ?A2.0
             (insert ?A3.0
               (insert ?A4.0
                 (insert ?A5.0
                   (insert ?A6.0
                     (insert ?A7.0
                       (insert ?A8.0
                         (insert ?A9.0
                           (insert ?A10.0
                             (insert ?A11.0
                               (insert ?A12.0 ?H))))))))))) \<turnstile>
          ?A12.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 14), template_hole 2),
        template_equation
         (template_app (template_hole 3, template_var 13),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 12),
                 template_app
                  (template_app (template_hole 0, template_var 11),
                   template_app
                    (template_app (template_hole 0, template_var 10),
                     template_app
                      (template_app (template_hole 0, template_var 9),
                       template_app
                        (template_app (template_hole 0, template_var 8),
                         template_app
                          (template_app (template_hole 0, template_var 7),
                           template_app
                            (template_app (template_hole 0, template_var 6),
                             template_app
                              (template_app
                                (template_hole 0, template_var 5),
                               template_app
                                (template_app
                                  (template_hole 0, template_var 4),
                                 template_app
                                  (template_app
                                    (template_hole 0, template_var 3),
                                   template_app
                                    (template_app
(template_hole 0, template_var 2),
                                     template_app
(template_app (template_hole 0, template_var 1),
 template_var 0))))))))))))),
             template_var 1)
           ))),
    ("Surprise_Paradox.7_E",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {};
         insert
          (?Q\<^sub>1 AND
           Neg (PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 IMP
                                    ?Q\<^sub>1\<guillemotright>) OR
           ?Q\<^sub>2 AND
           Neg (PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 AND
                                    Neg ?Q\<^sub>1 IMP
                                    ?Q\<^sub>2\<guillemotright>))
          ?H \<turnstile>
         ?C |]
      ==> insert (P ?Q\<^sub>1 ?Q\<^sub>2) ?H \<turnstile> ?C",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3), template_hole 8),
        template_equation
         (template_app (template_hole 9, template_var 2), template_hole 8),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 4, template_var 3),
                          template_app
                           (template_hole 3,
                            template_app
                             (template_hole 2,
                              template_app
                               (template_hole 1,
                                template_app
                                 (template_app
                                   (template_hole 5,
                                    template_app
                                     (template_hole 3,
template_app
 (template_app (template_hole 0, template_var 3), template_var 2))),
                                  template_var 3)))))),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 2,
                            template_app
                             (template_hole 1,
                              template_app
                               (template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 3,
                                    template_app
                                     (template_app
 (template_hole 4,
  template_app
   (template_app (template_hole 0, template_var 3), template_var 2)),
template_app (template_hole 3, template_var 3)))),
                                template_var 2))))))),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Surprise_Paradox.7",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile>
          P ?Q\<^sub>1 ?Q\<^sub>2 IFF
          (?Q\<^sub>1 AND
           Neg (PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 IMP
                                    ?Q\<^sub>1\<guillemotright>) XOR
           ?Q\<^sub>2 AND
           Neg (PfP \<guillemotleft>P ?Q\<^sub>1 ?Q\<^sub>2 AND
                                    Neg ?Q\<^sub>1 IMP
                                    ?Q\<^sub>2\<guillemotright>))",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 1), template_hole 9),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_hole 9)],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_app (template_hole 5, template_var 1), template_var 0))),
                                 template_var 1)))))),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_app
(template_hole 4,
 template_app
  (template_app (template_hole 5, template_var 1), template_var 0)),
                                     template_app
(template_hole 2, template_var 1)))),
                               template_var 0))))))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_app (template_hole 5, template_var 1), template_var 0))),
                                 template_var 1))))))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_app
(template_hole 4,
 template_app
  (template_app (template_hole 5, template_var 1), template_var 0)),
                                     template_app
(template_hole 2, template_var 1)))),
                               template_var 0))))))))))
           ))),
    ("Surprise_Paradox.P'",
     "[| supp ?Q\<^sub>1 = {}; supp ?Q\<^sub>2 = {} |]
      ==> {} \<turnstile>
          P ?Q\<^sub>1 ?Q\<^sub>2 IFF
          (H ?Q\<^sub>1
            ?Q\<^sub>2)(X0::=\<guillemotleft>P ?Q\<^sub>1
        ?Q\<^sub>2\<guillemotright>)",
     template_implication
      ([template_equation
         (template_app (template_hole 18, template_var 1),
          template_hole 17),
        template_equation
         (template_app (template_hole 18, template_var 0),
          template_hole 17)],
       template_predicate
        (
           template_app
            (template_app (template_hole 16, template_hole 15),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 1),
                       template_var 0)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 6, template_hole 5), template_hole 5),
       template_hole 4),
     template_hole 4),
   template_hole 5),
 template_hole 4),
                                     template_hole 5),
                                   template_hole 4)),
                               template_app
                                (template_app
                                  (template_hole 7,
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_hole 4),
         template_hole 4),
       template_hole 5),
     template_hole 5),
   template_hole 5),
 template_hole 5),
                                     template_hole 4)),
                                 template_app
                                  (template_app
                                    (template_hole 7,
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 4),
             template_hole 5),
           template_hole 5),
         template_hole 5),
       template_hole 4),
     template_hole 5),
   template_hole 5),
 template_hole 4)),
                                   template_app
                                    (template_app
(template_hole 7,
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_hole 4),
               template_hole 4),
             template_hole 5),
           template_hole 4),
         template_hole 5),
       template_hole 5),
     template_hole 5),
   template_hole 4)),
                                     template_app
(template_app
  (template_hole 7,
   template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_hole 5),
                 template_hole 4),
               template_hole 4),
             template_hole 4),
           template_hole 4),
         template_hole 5),
       template_hole 5),
     template_hole 4)),
 template_app
  (template_app
    (template_hole 7,
     template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_hole 4),
                   template_hole 4),
                 template_hole 4),
               template_hole 5),
             template_hole 5),
           template_hole 5),
         template_hole 5),
       template_hole 4)),
   template_app
    (template_app
      (template_hole 7,
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_hole 4),
                     template_hole 5),
                   template_hole 5),
                 template_hole 5),
               template_hole 4),
             template_hole 4),
           template_hole 5),
         template_hole 4)),
     template_app
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_hole 4),
                       template_hole 5),
                     template_hole 5),
                   template_hole 5),
                 template_hole 4),
               template_hole 5),
             template_hole 4),
           template_hole 4)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 6, template_hole 4),
                         template_hole 5),
                       template_hole 5),
                     template_hole 5),
                   template_hole 4),
                 template_hole 5),
               template_hole 5),
             template_hole 4)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_hole 4),
                         template_hole 4),
                       template_hole 4),
                     template_hole 4),
                   template_hole 5),
                 template_hole 5),
               template_hole 4)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_hole 4),
                           template_hole 5),
                         template_hole 5),
                       template_hole 4),
                     template_hole 5),
                   template_hole 5),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_hole 4),
                             template_hole 5),
                           template_hole 4),
                         template_hole 4),
                       template_hole 5),
                     template_hole 5),
                   template_hole 4)),
               template_hole 3))))))))))))),
                           template_hole 2)),
                       template_hole 1))),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 13, template_var 1),
                     template_var 0)))))
           )))]
