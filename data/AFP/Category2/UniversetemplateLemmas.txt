   [("Universe.ReplId", "Repl ?A id = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Universe.SepSubset", "HOLZF.subset (Sep ?A ?p) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)
         )),
    ("Universe.ZFTFst", "ZFTFst (ZFTriple ?a ?b ?c) = ?a",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("Universe.ZFTSnd", "ZFTSnd (ZFTriple ?a ?b ?c) = ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("Universe.ZFTThd", "ZFTThd (ZFTriple ?a ?b ?c) = ?c",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Universe.SingletonInRangeExplode", "{?x} : range explode",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))
         )),
    ("Universe.RangeRepl", "HOLZF.Range (Lambda ?A ?f) = Repl ?A ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Universe.ProductSubset",
     "HOLZF.subset (Product ?u) (Power (CartProd ?u (HOLZF.Sum ?u)))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Universe.UPairSingleton",
     "Upair ?u ?v = HOLZF.union (Singleton ?u) (Singleton ?v)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Universe.SumRepl",
     "HOLZF.Sum (Repl ?A (Singleton o ?f)) = Repl ?A ?f",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Universe.SubsetSepTrans",
     "HOLZF.subset ?A ?B ==> HOLZF.subset (Sep ?A ?p) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Universe.ZFSucNeq0", "Elem ?x HOLZF.Nat ==> Nat2nat (SucNat ?x) ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Universe.SubsetSmall",
     "[| HOLZF.subset ?A' ?A; HOLZF.subset ?A ?B |]
      ==> HOLZF.subset ?A' ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Universe.SubsetTrans",
     "[| HOLZF.subset ?a ?b; HOLZF.subset ?b ?c |] ==> HOLZF.subset ?a ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Universe.ZFImageRangeExplode",
     "?x : range explode ==> ?f ` ?x : range explode",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Universe.ZFSubsetRangeExplode",
     "[| ?X : range explode; ?Y <= ?X |] ==> ?Y : range explode",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Universe.subsetFn",
     "[| ?Y ~= {}; ?Y <= ?X |] ==> subsetFn ?X ?Y ` ?X = ?Y",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 0),
         template_var 1))),
    ("Universe.ZFUnionNatInRangeExplode",
     "(!!n. ?f n : range explode) ==> \<Union> (range ?f) : range explode",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_hole 0))),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3))
           ))),
    ("Universe.ElemLambdaFun",
     "(!!x. Elem x ?u ==> Elem (?f x) ?U) ==>
      Elem (Lambda ?u ?f) (Fun ?u ?U)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Universe.ZFUnionInRangeExplode",
     "[| ?A : range explode; ?B : range explode |]
      ==> ?A Un ?B : range explode",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           ))),
    ("Universe.ZFTriple",
     "ZFTriple ?a ?b ?c = ZFTriple ?a' ?b' ?c' ==>
      ?a = ?a' & ?b = ?b' & ?c = ?c'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)))
           ))),
    ("Universe.ZFProdFnInRangeExplode",
     "[| ?A : range explode; ?B : range explode |]
      ==> ?f ` (?A \<times> ?B) : range explode",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   t_empty))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_hole 2))
           ))),
    ("Universe.ZFUnionRangeExplode",
     "[| !!x. x : ?A ==> ?f x : range explode; ?A : range explode |]
      ==> \<Union> (?f ` ?A) : range explode",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1))
           )))]
