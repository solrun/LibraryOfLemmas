Loading theory "HOL-Library.Cancellation" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Universe" via "HOL-ZF.MainZF" via "HOL-ZF.LProd" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.FuncSet" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Category")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.525s cpu time, 0.040s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.Set_Algebras"
### 0.201s elapsed time, 0.789s cpu time, 0.062s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Nat_Bijection"
### 0.363s elapsed time, 1.451s cpu time, 0.101s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.430s elapsed time, 1.725s cpu time, 0.101s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Universe" via "HOL-ZF.MainZF" via "HOL-ZF.LProd")
### theory "HOL-Library.FuncSet"
### 0.473s elapsed time, 1.877s cpu time, 0.206s GC time
Loading theory "Draft.Category" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
locale ExtCategory
  fixes C :: "('o, 'm, 'a) Category_scheme"  (structure)
  assumes "ExtCategory C"
locale Category
  fixes C :: "('a, 'b, 'c) Category_scheme"  (structure)
  assumes "Category C"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "Draft.Category"
### 0.847s elapsed time, 3.158s cpu time, 0.813s GC time
Loading theory "HOL-ZF.HOLZF" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Universe" via "HOL-ZF.MainZF" via "HOL-ZF.Zet")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.145s elapsed time, 4.316s cpu time, 1.001s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
consts
  nat2Nat :: "nat => ZF"
Found termination order: "size <*mlex*> {}"
consts
  NatInterval :: "nat => nat => ZF"
Found termination order: "size <*mlex*> {}"
consts
  Ext_ZF_n :: "(ZF * ZF) set => ZF => nat => ZF"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
### theory "HOL-ZF.HOLZF"
### 0.455s elapsed time, 1.786s cpu time, 0.268s GC time
Loading theory "HOL-ZF.Zet" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Universe" via "HOL-ZF.MainZF")
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-ZF.Zet"
### 0.145s elapsed time, 0.567s cpu time, 0.082s GC time
Elem ?y (Power ?x) = (ALL x. Elem x ?y --> Elem x ?x)
"P"
  :: "'a"
"Sep"
  :: "ZF => (ZF => bool) => ZF"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.093s elapsed time, 3.773s cpu time, 1.229s GC time
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.470s elapsed time, 8.700s cpu time, 2.351s GC time
Loading theory "Draft.Templates" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.ExtrEqs")
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.058s elapsed time, 0.117s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MonadicEquationalTheoryMoreTemplates")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.545s elapsed time, 1.135s cpu time, 0.108s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.599s elapsed time, 10.073s cpu time, 2.445s GC time
Loading theory "HOL-ZF.LProd" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Universe" via "HOL-ZF.MainZF")
Proofs for inductive predicate(s) "lprodp"
  Proving monotonicity ...
### theory "HOL-ZF.LProd"
### 0.424s elapsed time, 1.150s cpu time, 0.937s GC time
Loading theory "HOL-ZF.MainZF" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory" via "Draft.Universe")
### theory "HOL-ZF.MainZF"
### 0.168s elapsed time, 0.228s cpu time, 0.050s GC time
Loading theory "Draft.Universe" (required by "Draft.MonadicEquationalTheoryMoreTemplates" via "Draft.MonadicEquationalTheory")
locale Universe
  fixes U :: "ZF"  (structure)
  assumes "Universe U"
### theory "Draft.Universe"
### 0.097s elapsed time, 0.097s cpu time, 0.000s GC time
Loading theory "Draft.MonadicEquationalTheory" (required by "Draft.MonadicEquationalTheoryMoreTemplates")
locale Signature
  fixes S :: "('t, 'f) Signature"  (structure)
  assumes "Signature S"
Proofs for inductive predicate(s) "WellDefined"
  Proving monotonicity ...
locale Interpretation
  fixes I :: "('t, 'f, 'o, 'm) Interpretation"  (structure)
  assumes "Interpretation I"
Proofs for inductive predicate(s) "Interp"
  Proving monotonicity ...
locale Axioms
  fixes Ax :: "('t, 'f) Axioms"  (structure)
  assumes "Axioms Ax"
consts
  Subst ::
    "('t, 'f) Expression => ('t, 'f) Expression => ('t, 'f) Expression"
Proofs for inductive predicate(s) "Theoryp"
  Proving monotonicity ...
locale Model
  fixes I :: "('t, 'f, 'o, 'm) Interpretation"  (structure)
    and Ax :: "('t, 'f) Axioms"
  assumes "Model I Ax"
locale ZFAxioms
  fixes Ax :: "(ZF, ZF) Axioms"  (structure)
  assumes "ZFAxioms Ax"
consts
  Expr2ZF :: "(ZF, ZF) Expression => ZF"
consts
  WellFormedToSet :: "(ZF, ZF) Signature => nat => (ZF, ZF) Expression set"
### theory "Draft.MonadicEquationalTheory"
### 3.602s elapsed time, 4.074s cpu time, 0.632s GC time
Loading theory "Draft.MonadicEquationalTheoryMoreTemplates"
val templateLemmas =
   [("MonadicEquationalTheory.SubstXinE", "sub Vx in ?e = ?e",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("MonadicEquationalTheory.ZFDepthInNat",
     "Elem (ZFTFst (Expr2ZF ?e)) HOLZF.Nat",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("MonadicEquationalTheory.CIObj",
     "obj\<^bsub>CanonicalCat ?T\<^esub> =
      Ty\<^bsub>aS\<^bsub>?T\<^esub>\<^esub>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("MonadicEquationalTheory.CanonicalCatCat",
     "ZFAxioms ?T ==> Category (CanonicalCat ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("MonadicEquationalTheory.CanonicalCatCat'",
     "ZFAxioms ?T ==> Category_axioms (CanonicalCat' ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("MonadicEquationalTheory.CIInterpretation",
     "ZFAxioms ?T ==> Interpretation (CI ?T)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("MonadicEquationalTheory.TCodomain",
     "TCodomain (TermEquivCl' ?T ?A ?e ?B) = ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("MonadicEquationalTheory.TDomain",
     "TDomain (TermEquivCl' ?T ?A ?e ?B) = ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("MonadicEquationalTheory.CIModel", "ZFAxioms ?T ==> Model (CI ?T) ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("MonadicEquationalTheory.Expr2Data",
     "ZFData (Expr2ZF ?f E@ ?e) = Opair ?f (Expr2ZF ?e)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("MonadicEquationalTheory.Expr2ZFType0",
     "ZFType (Expr2ZF ?e) = 0 ==> ?e = Vx",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation (template_var 0, template_hole 0))),
    ("MonadicEquationalTheory.SubstAssoc",
     "sub ?a in sub ?b in ?c = sub sub ?a in ?b in ?c",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("MonadicEquationalTheory.SigId",
     "Sig ?S \<triangleright> Vx : ?A \<turnstile> Vx : ?B ==> ?A = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1),
                template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("MonadicEquationalTheory.Expr2ZFDepth0",
     "ZFDepth (Expr2ZF ?e) = 0 ==> ZFType (Expr2ZF ?e) = 0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_equation
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_hole 1))),
    ("MonadicEquationalTheory.SigTyId",
     "Sig ?S \<triangleright> Vx : ?A \<turnstile> Vx : ?A ==>
      ?A : Ty\<^bsub>?S\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 0),
                  template_hole 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("MonadicEquationalTheory.CLCodomain",
     "ZFAxioms ?T ==> CLCodomain ?T [?A,?e,?B]\<^bsub>?T\<^esub> = ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("MonadicEquationalTheory.CLDomain",
     "ZFAxioms ?T ==> CLDomain ?T [?A,?e,?B]\<^bsub>?T\<^esub> = ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 2))),
    ("MonadicEquationalTheory.Expr2ZFDepthSuc",
     "ZFDepth (Expr2ZF ?e) = Suc ?n ==> ZFType (Expr2ZF ?e) = 1",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 1)),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_hole 0))),
    ("MonadicEquationalTheory.WellFormedToSetInRangeExplode",
     "ZFAxioms ?T ==>
      Expr2ZF ` WellFormedToSet aS\<^bsub>?T\<^esub> ?n : range explode",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_var 0))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("MonadicEquationalTheory.TermSetInSet",
     "ZFAxioms ?T ==> Expr2ZF ` TermEquivClGen ?T ?A ?e ?B : range explode",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0))
           ))),
    ("MonadicEquationalTheory.WellDefinedToWellFormedSet",
     "Sig ?S \<triangleright> Vx : ?A \<turnstile> ?e : ?B ==>
      EX n. ?e : WellFormedToSet ?S n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("MonadicEquationalTheory.CIComplete",
     "[| ZFAxioms ?T;
         L\<lbrakk>?\<phi>\<rbrakk>\<^bsub>CI ?T\<^esub> \<rightarrow> IBool
                                  True |]
      ==> ?\<phi> : Axioms.Theory ?T",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_var 0),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("MonadicEquationalTheory.WellDefinedTyE",
     "[| Sig ?S \<triangleright> \<turnstile> ?A Type;
         ?A : Ty\<^bsub>?S\<^esub> ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 2))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.CIId",
     "?A : Ty\<^bsub>aS\<^bsub>?T\<^esub>\<^esub> ==>
      id\<^bsub>CanonicalCat ?T\<^esub> ?A = [?A,Vx,?A]\<^bsub>?T\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0),
           template_var 1)))),
    ("MonadicEquationalTheory.ZF2m",
     "ZFAxioms ?T ==>
      ZF2m ?T (m2ZF (TermEquivCl' ?T ?A ?e ?B)) = TermEquivCl' ?T ?A ?e ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("MonadicEquationalTheory.WellDefinedVarE",
     "[| Sig ?S \<triangleright> Vx : ?A \<turnstile> Vx : ?A;
         Sig ?S \<triangleright> \<turnstile> ?A Type ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 0, template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.CIMor",
     "ZFAxioms ?T ==>
      ([?A,?e,?B]\<^bsub>?T\<^esub> : mor\<^bsub>CanonicalCat ?T\<^esub>) =
      Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?A \<turnstile> ?e : ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("MonadicEquationalTheory.Complete",
     "[| ZFAxioms ?T;
         !!I. Model I ?T ==>
              L\<lbrakk>?\<phi>\<rbrakk>\<^bsub>I\<^esub> \<rightarrow> IBool
                                   True |]
      ==> ?\<phi> : Axioms.Theory ?T",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("MonadicEquationalTheory.m2ZFinj_on",
     "ZFAxioms ?T ==> inj_on m2ZF {TermEquivCl' ?T A e B |A e B. True}",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_hole 7),
             template_app (template_hole 6, t_empty))
           ))),
    ("MonadicEquationalTheory.SubstWellDefined",
     "[| Sig ?S \<triangleright> Vx : ?A \<turnstile> ?e : ?B;
         Sig ?S \<triangleright> Vx : ?B \<turnstile> ?d : ?C |]
      ==> Sig ?S \<triangleright> Vx : ?A \<turnstile> sub ?e in ?d : ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0))
           ))),
    ("MonadicEquationalTheory.Expr2ZFType1",
     "ZFType (Expr2ZF ?e) = 1 ==>
      EX f e'.
         ?e = f E@ e' & Suc (ZFDepth (Expr2ZF e')) = ZFDepth (Expr2ZF ?e)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)),
          template_hole 7)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("MonadicEquationalTheory.Equiv2Cl",
     "[| Axioms ?T;
         Vx : ?A \<turnstile> ?e\<equiv>?d : ?B : Axioms.Theory ?T |]
      ==> [?A,?e,?B]\<^bsub>?T\<^esub> = [?A,?d,?B]\<^bsub>?T\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("MonadicEquationalTheory.CICod",
     "[| ZFAxioms ?T;
         [?A,?e,?B]\<^bsub>?T\<^esub>
         : mor\<^bsub>CanonicalCat ?T\<^esub> |]
      ==> cod\<^bsub>CanonicalCat ?T\<^esub> [?A,?e,?B]\<^bsub>?T\<^esub> =
          ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 3)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 0))),
    ("MonadicEquationalTheory.CIDom",
     "[| ZFAxioms ?T;
         [?A,?e,?B]\<^bsub>?T\<^esub>
         : mor\<^bsub>CanonicalCat ?T\<^esub> |]
      ==> dom\<^bsub>CanonicalCat ?T\<^esub> [?A,?e,?B]\<^bsub>?T\<^esub> =
          ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 3)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_var 2))),
    ("MonadicEquationalTheory.InterpTyE",
     "[| L\<lbrakk>\<turnstile> ?A Type\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> ?i;
         [| ?i = IObj Ty\<lbrakk>?A\<rbrakk>\<^bsub>?I\<^esub>;
            Sig iS\<^bsub>?I\<^esub> \<triangleright> \<turnstile> ?A Type |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_app (template_hole 5, template_var 2))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.CIInterp2Mor",
     "[| ZFAxioms ?T;
         Sig iS\<^bsub>CI ?T\<^esub> \<triangleright> Vx : ?A \<turnstile> ?e : ?B |]
      ==> L\<lbrakk>Vx : ?A \<turnstile> ?e : ?B\<rbrakk>\<^bsub>CI ?T\<^esub> \<rightarrow> IMor
                  [?A,?e,?B]\<^bsub>?T\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3))),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 3)),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)))
           ))),
    ("MonadicEquationalTheory.CanonicalCat'MapsTo",
     "[| ?f maps\<^bsub>CanonicalCat' ?T\<^esub> ?X to ?Y; ZFAxioms ?T |]
      ==> EX ef.
             ?f = [?X,ef,?Y]\<^bsub>?T\<^esub> &
             Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?X \<turnstile> ef : ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 7, template_var 3))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("MonadicEquationalTheory.WellDefinedEqE",
     "[| Sig ?S \<triangleright> Vx : ?A \<turnstile> ?e1.0\<equiv>?e2.0 : ?B;
         [| Sig ?S \<triangleright> Vx : ?A \<turnstile> ?e1.0 : ?B;
            Sig ?S \<triangleright> Vx : ?A \<turnstile> ?e2.0 : ?B |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 2),
                     template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.WellDefinedFnE",
     "[| Sig ?S \<triangleright> Vx : ?A \<turnstile> ?f E@ ?e : ?C;
         !!B. [| Sig ?S \<triangleright> Vx : ?A \<turnstile> ?e : B;
                 ?f \<in> Sig ?S : B \<rightarrow> ?C |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.InterpVarE",
     "[| L\<lbrakk>Vx : ?A \<turnstile> Vx : ?A\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> ?i;
         !!c. [| ?i = IMor (id\<^bsub>iC\<^bsub>?I\<^esub>\<^esub> c);
                 L\<lbrakk>\<turnstile> ?A Type\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> IObj
              c |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 2),
                    template_hole 7),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.Cl2Equiv",
     "[| ZFAxioms ?T;
         Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?A \<turnstile> ?e : ?B;
         [?A,?e,?B]\<^bsub>?T\<^esub> = [?A,?d,?B]\<^bsub>?T\<^esub> |]
      ==> Vx : ?A \<turnstile> ?e\<equiv>?d : ?B : Axioms.Theory ?T",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 4))
           ))),
    ("MonadicEquationalTheory.CanonicalCompWellDefined",
     "[| ZFAxioms ?T;
         Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?A \<turnstile> ?d : ?B;
         Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?B \<turnstile> ?d' : ?C |]
      ==> CanonicalComp ?T [?A,?d,?B]\<^bsub>?T\<^esub>
           [?B,?d',?C]\<^bsub>?T\<^esub> =
          [?A,sub ?d in ?d',?C]\<^bsub>?T\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("MonadicEquationalTheory.CIComp",
     "[| ZFAxioms ?T;
         Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?A \<turnstile> ?e : ?B;
         Sig aS\<^bsub>?T\<^esub> \<triangleright> Vx : ?B \<turnstile> ?d : ?C |]
      ==> [?A,?e,?B]\<^bsub>?T\<^esub> ;;\<^bsub>CanonicalCat ?T\<^esub>
          [?B,?d,?C]\<^bsub>?T\<^esub> =
          [?A,sub ?e in ?d,?C]\<^bsub>?T\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 5)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("MonadicEquationalTheory.InterpEqE",
     "[| L\<lbrakk>Vx : ?A \<turnstile> ?e1.0\<equiv>?e2.0 : ?B\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> ?i;
         !!g1 g2.
            [| ?i = IBool (g1 = g2);
               L\<lbrakk>Vx : ?A \<turnstile> ?e1.0 : ?B\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> IMor
                       g1;
               L\<lbrakk>Vx : ?A \<turnstile> ?e2.0 : ?B\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> IMor
                       g2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.funsignature_abbrevE",
     "[| ?f \<in> Sig ?S : ?A \<rightarrow> ?B;
         [| ?f : Fn\<^bsub>?S\<^esub>; ?A : Ty\<^bsub>?S\<^esub>;
            ?B : Ty\<^bsub>?S\<^esub>; sDom\<^bsub>?S\<^esub> ?f = ?A;
            sCod\<^bsub>?S\<^esub> ?f = ?B; Signature ?S |]
         ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_app (template_hole 6, template_var 3))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app (template_hole 4, template_var 3))
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app (template_hole 4, template_var 3))
                   )],
              template_implication
               ([template_equation
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 4),
                   template_var 2)],
                template_implication
                 ([template_equation
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 4),
                     template_var 1)],
                  template_implication
                   ([template_predicate
                      (template_app (template_hole 0, template_var 3))],
                    template_predicate (template_var 0)))))))],
       template_predicate (template_var 0))),
    ("MonadicEquationalTheory.InterpFnE",
     "[| L\<lbrakk>Vx : ?A \<turnstile> ?f E@ ?e : ?C\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> ?i;
         !!B g.
            [| ?i =
               IMor
                (g ;;\<^bsub>iC\<^bsub>?I\<^esub>\<^esub>
                 Fn\<lbrakk>?f\<rbrakk>\<^bsub>?I\<^esub>);
               Sig iS\<^bsub>?I\<^esub> \<triangleright> Vx : ?A \<turnstile> ?e : B;
               ?f \<in> Sig iS\<^bsub>?I\<^esub> : B \<rightarrow> ?C;
               L\<lbrakk>Vx : ?A \<turnstile> ?e : B\<rbrakk>\<^bsub>?I\<^esub> \<rightarrow> IMor
                   g |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.MonadicEquationalTheoryMoreTemplates"
### 0.470s elapsed time, 0.680s cpu time, 0.103s GC time
val it = (): unit
