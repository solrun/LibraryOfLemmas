   [("MonadicEquationalTheory.SubstXinE", "sub Vx in ?e = ?e",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("MonadicEquationalTheory.CIObj",
     "obj\<^bsub>CanonicalCat ?T\<^esub> =
      Ty\<^bsub>aS\<^bsub>?T\<^esub>\<^esub>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("MonadicEquationalTheory.TCodomain",
     "TCodomain (TermEquivCl' ?T ?A ?e ?B) = ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("MonadicEquationalTheory.TDomain",
     "TDomain (TermEquivCl' ?T ?A ?e ?B) = ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("MonadicEquationalTheory.Expr2Data",
     "ZFData (Expr2ZF ?f E@ ?e) = Opair ?f (Expr2ZF ?e)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("MonadicEquationalTheory.SubstAssoc",
     "sub ?a in sub ?b in ?c = sub sub ?a in ?b in ?c",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0)))]
