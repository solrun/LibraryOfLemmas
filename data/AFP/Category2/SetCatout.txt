Loading theory "HOL-Library.FuncSet" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Functors" via "Draft.Category")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Cancellation" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Universe" via "HOL-ZF.MainZF" via "HOL-ZF.LProd" via "HOL-Library.Multiset")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.148s elapsed time, 0.609s cpu time, 0.038s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Nat_Bijection"
### 0.373s elapsed time, 1.500s cpu time, 0.110s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.225s elapsed time, 0.886s cpu time, 0.071s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.FuncSet"
### 0.399s elapsed time, 1.596s cpu time, 0.110s GC time
Loading theory "Draft.Category" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Functors")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.451s elapsed time, 1.809s cpu time, 0.110s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Universe" via "HOL-ZF.MainZF" via "HOL-ZF.LProd")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
locale ExtCategory
  fixes C :: "('o, 'm, 'a) Category_scheme"  (structure)
  assumes "ExtCategory C"
consts
  shift :: "'a list => 'a stream => 'a stream"
locale Category
  fixes C :: "('a, 'b, 'c) Category_scheme"  (structure)
  assumes "Category C"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "Draft.Category"
### 0.845s elapsed time, 3.152s cpu time, 0.835s GC time
Loading theory "Draft.Functors" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.130s elapsed time, 4.286s cpu time, 0.908s GC time
Loading theory "HOL-ZF.HOLZF" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Universe" via "HOL-ZF.MainZF" via "HOL-ZF.Zet")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale PreFunctor
  fixes
    F :: "('o1, 'o2, 'm1, 'm2, 'a1, 'a2, 'a) Functor_scheme"  (structure)
  assumes "PreFunctor F"
locale FunctorM
  fixes F :: "('a, 'b, 'c, 'd, 'e, 'f, 'g) Functor_scheme"  (structure)
  assumes "FunctorM F"
locale FunctorExt
  fixes
    F :: "('o1, 'o2, 'm1, 'm2, 'a1, 'a2, 'a) Functor_scheme"  (structure)
  assumes "FunctorExt F"
locale Functor
  fixes F :: "('a, 'b, 'c, 'd, 'e, 'f, 'g) Functor_scheme"  (structure)
  assumes "Functor F"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
consts
  nat2Nat :: "nat => ZF"
Found termination order: "size <*mlex*> {}"
consts
  NatInterval :: "nat => nat => ZF"
Found termination order: "size <*mlex*> {}"
consts
  Ext_ZF_n :: "(ZF * ZF) set => ZF => nat => ZF"
Found termination order: "size <*mlex*> {}"
### theory "HOL-ZF.HOLZF"
### 0.443s elapsed time, 1.736s cpu time, 0.218s GC time
Loading theory "HOL-ZF.Zet" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Universe" via "HOL-ZF.MainZF")
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale Equivalence
  fixes F :: "('a, 'b, 'c, 'd, 'e, 'f, 'g) Functor_scheme"  (structure)
  assumes "Equivalence F"
### theory "Draft.Functors"
### 0.818s elapsed time, 3.220s cpu time, 0.386s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs")
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### theory "HOL-ZF.Zet"
### 0.150s elapsed time, 0.593s cpu time, 0.096s GC time
Elem ?y (Power ?x) = (ALL x. Elem x ?y --> Elem x ?x)
"P"
  :: "'a"
"Sep"
  :: "ZF => (ZF => bool) => ZF"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.571s elapsed time, 9.271s cpu time, 2.309s GC time
Loading theory "Draft.Templates" (required by "Draft.SetCatMoreTemplates" via "Draft.ExtrEqs")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.060s elapsed time, 0.183s cpu time, 0.000s GC time
### theory "HOL-Library.BigO"
### 1.046s elapsed time, 3.184s cpu time, 1.164s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SetCatMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.867s elapsed time, 2.224s cpu time, 1.150s GC time
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 4.087s elapsed time, 12.142s cpu time, 3.586s GC time
Loading theory "HOL-ZF.LProd" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Universe" via "HOL-ZF.MainZF")
Proofs for inductive predicate(s) "lprodp"
  Proving monotonicity ...
### theory "HOL-ZF.LProd"
### 0.140s elapsed time, 0.203s cpu time, 0.000s GC time
Loading theory "HOL-ZF.MainZF" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat" via "Draft.Universe")
### theory "HOL-ZF.MainZF"
### 0.171s elapsed time, 0.255s cpu time, 0.081s GC time
Loading theory "Draft.Universe" (required by "Draft.SetCatMoreTemplates" via "Draft.SetCat")
locale Universe
  fixes U :: "ZF"  (structure)
  assumes "Universe U"
### theory "Draft.Universe"
### 0.092s elapsed time, 0.092s cpu time, 0.000s GC time
Loading theory "Draft.SetCat" (required by "Draft.SetCatMoreTemplates")
locale LSCategory
  fixes C :: "('a, 'b, 'c) LSCategory_scheme"  (structure)
  assumes "LSCategory C"
### theory "Draft.SetCat"
### 0.533s elapsed time, 0.615s cpu time, 0.111s GC time
Loading theory "Draft.SetCatMoreTemplates"
val templateLemmas =
   [("SetCat.SETobj", "?X : obj\<^bsub>SET\<^esub>",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("SetCat.mor2ZF_Op", "mor2ZF (Op ?C) = mor2ZF ?C",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SetCat.mor_Op", "mor\<^bsub>Op ?C\<^esub> = mor\<^bsub>?C\<^esub>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SetCat.obj_Op", "obj\<^bsub>Op ?C\<^esub> = obj\<^bsub>?C\<^esub>",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("SetCat.HomFtorContraCod",
     "CatCod (Hom\<^bsub>?C\<^esub>[\<midarrow>,?X]) = SET",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("SetCat.SETmor", "isZFfun ?f = (?f : mor\<^bsub>SET\<^esub>)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("SetCat.ZFfunCod", "|cod|ZFfun ?A ?B ?f = ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("SetCat.ZFfunDom", "|dom|ZFfun ?A ?B ?f = ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("SetCat.HomFtorContraDom",
     "CatDom (Hom\<^bsub>?C\<^esub>[\<midarrow>,?X]) = Op ?C",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("SetCat.LSCategory_Op", "LSCategory ?C ==> LSCategory (Op ?C)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SetCat.ZF2mor_Op",
     "z2m\<^bsub>Op ?C\<^esub>?f = z2m\<^bsub>?C\<^esub>?f",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SetCat.HomFtorContra",
     "Hom\<^bsub>?C\<^esub>[\<midarrow>,?X] =
      Hom\<^bsub>Op ?C\<^esub>[?X,\<midarrow>]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("SetCat.HomFtorContra'",
     "HomP\<^bsub>?C\<^esub>[\<midarrow>,?X] =
      HomP\<^bsub>Op ?C\<^esub>[?X,\<midarrow>]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("SetCat.HOMCollection_Op",
     "HOMCollection (Op ?C) ?X ?Y = HOMCollection ?C ?Y ?X",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 1))),
    ("SetCat.HomCHomOp",
     "HomC\<^bsub>?C\<^esub>[?g,?X] = Hom\<^bsub>Op ?C\<^esub>[?X,?g]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_var 1))),
    ("SetCat.Hom_Op",
     "Hom\<^bsub>Op ?C\<^esub> ?X ?Y = Hom\<^bsub>?C\<^esub> ?Y ?X",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 1))),
    ("SetCat.mapsTo_Op",
     "?f maps\<^bsub>Op ?C\<^esub> ?Y to ?X =
      ?f maps\<^bsub>?C\<^esub> ?X to ?Y",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("SetCat.SETId",
     "?x |\<in>| ?X ==> id\<^bsub>SET\<^esub> ?X |@| ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("SetCat.ZFfunApp", "?x |\<in>| ?A ==> ZFfun ?A ?B ?f |@| ?x = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app (template_var 0, template_var 3)))),
    ("SetCat.SETComp",
     "?f \<approx>>\<^bsub>SET\<^esub> ?g ==>
      ?f ;;\<^bsub>SET\<^esub> ?g = ?f |o| ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetCat.HomFtorFtor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub> |]
      ==> Functor (Hom\<^bsub>?C\<^esub>[?X,\<midarrow>])",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetCat.HomFtorFtor'",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub> |]
      ==> FunctorM (HomP\<^bsub>?C\<^esub>[?X,\<midarrow>])",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetCat.ZFfun",
     "isZFfun ?f ==> ?f = ZFfun (|dom|?f) (|cod|?f) ((|@|) ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           t_empty)))),
    ("SetCat.ZFfunIdRight",
     "isZFfun ?f ==> ?f |o| ZFfun (|cod|?f) (|cod|?f) (%x. x) = ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 0)),
             t_empty)),
         template_var 0))),
    ("SetCat.ZFfunIdLeft",
     "isZFfun ?f ==> ZFfun (|dom|?f) (|dom|?f) (%x. x) |o| ?f = ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 0, template_var 0)),
               t_empty)),
           template_var 0),
         template_var 0))),
    ("SetCat.SETcod",
     "isZFfun (ZFfun ?A ?B ?f) ==>
      cod\<^bsub>SET\<^esub> ZFfun ?A ?B ?f = ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 1))),
    ("SetCat.SETdom",
     "isZFfun (ZFfun ?A ?B ?f) ==>
      dom\<^bsub>SET\<^esub> ZFfun ?A ?B ?f = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_var 2))),
    ("SetCat.SETZFfun",
     "?f maps\<^bsub>SET\<^esub> ?X to ?Y ==> ?f = ZFfun ?X ?Y ((|@|) ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           t_empty)))),
    ("SetCat.ZFfunDomAppCod",
     "[| isZFfun ?f; ?x |\<in>| |dom|?f |] ==> ?f |@| ?x |\<in>| |cod|?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetCat.SETfun",
     "ALL x. x |\<in>| ?A --> ?f x |\<in>| ?B ==> isZFfun (ZFfun ?A ?B ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("SetCat.ZFfunDomainOpair",
     "[| isFun ?f; ?x |\<in>| HOLZF.Domain ?f |]
      ==> Opair ?x (?f \<acute> ?x) |\<in>| ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 1)
           ))),
    ("SetCat.HomFtorContraFtor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub> |]
      ==> Ftor (Hom\<^bsub>?C\<^esub>[\<midarrow>,?X]) : Op ?C \<longrightarrow> SET",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app (template_hole 1, template_var 1)),
             template_hole 0)
           ))),
    ("SetCat.SETfunDomAppCod",
     "[| ?f maps\<^bsub>SET\<^esub> ?X to ?Y; ?x |\<in>| ?X |]
      ==> ?f |@| ?x |\<in>| ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 1)
           ))),
    ("SetCat.SETmapsTo",
     "?f maps\<^bsub>SET\<^esub> ?X to ?Y ==>
      isZFfun ?f & |dom|?f = ?X & |cod|?f = ?Y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("SetCat.ZFCartProd",
     "?x |\<in>| ?A |\<times>| ?B ==>
      Fst ?x |\<in>| ?A & Snd ?x |\<in>| ?B & isOpair ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 1, template_var 2)),
                   template_var 0)),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("SetCat.ZFfunCompAppZFfun",
     "[| isZFfun ?f; isZFfun ?g; |dom|?g = |cod|?f |]
      ==> isZFfun (?f |o| ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetCat.HomContraMor",
     "[| LSCategory ?C; ?f : mor\<^bsub>?C\<^esub> |]
      ==> (Hom\<^bsub>?C\<^esub>[\<midarrow>,?X]) ## ?f =
          HomC\<^bsub>?C\<^esub>[?f,?X]",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SetCat.ZFfun_ext",
     "ALL x. x |\<in>| ?A --> ?f x = ?g x ==>
      ZFfun ?A ?B ?f = ZFfun ?A ?B ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 1)))),
    ("SetCat.ZFFunToLambda",
     "[| isFun ?f;
         ?f |\<subseteq>| HOLZF.Domain ?f |\<times>| HOLZF.Range ?f |]
      ==> ?f = Lambda (HOLZF.Domain ?f) ((\<acute>) ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0)),
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0)),
           t_empty)))),
    ("SetCat.HomFtorMor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> Hom\<^bsub>?C\<^esub>[?X,?f] : mor\<^bsub>SET\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("SetCat.HomFtorInMor'",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> Hom\<^bsub>?C\<^esub>[?X,?f] : mor\<^bsub>SET'\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("SetCat.HomFtorContraMor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> HomC\<^bsub>?C\<^esub>[?f,?X] : mor\<^bsub>SET\<^esub>",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0),
                 template_var 1)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("SetCat.SETCompAt",
     "[| ?f \<approx>>\<^bsub>SET\<^esub> ?g; ?x |\<in>| |dom|?f |]
      ==> (?f ;;\<^bsub>SET\<^esub> ?g) |@| ?x = ?g |@| (?f |@| ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_hole 5),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("SetCat.HomContraAt",
     "?x |\<in>| (Hom\<^bsub>?C\<^esub> cod\<^bsub>?C\<^esub> ?f ?X) ==>
      (HomC\<^bsub>?C\<^esub>[?f,?X]) |@| ?x =
      m2z\<^bsub>?C\<^esub>?f ;;\<^bsub>?C\<^esub>
                           (z2m\<^bsub>?C\<^esub>?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)))))),
    ("SetCat.SETCompE",
     "[| ?f \<approx>>\<^bsub>SET\<^esub> ?g;
         [| isZFfun ?f; isZFfun ?g; |cod|?f = |dom|?g |] ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 3, template_var 1))],
            template_implication
             ([template_equation
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("SetCat.HomFtorCompDef'",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f \<approx>>\<^bsub>?C\<^esub> ?g |]
      ==> Hom\<^bsub>?C\<^esub>[?X,?f] \<approx>>\<^bsub>SET'\<^esub>
          (Hom\<^bsub>?C\<^esub>[?X,?g])",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("SetCat.HomFtorObj",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?Y : obj\<^bsub>?C\<^esub> |]
      ==> (Hom\<^bsub>?C\<^esub>[?X,\<midarrow>]) @@ ?Y =
          Hom\<^bsub>?C\<^esub> ?X ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SetCat.HomFtorOpObj",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?Y : obj\<^bsub>?C\<^esub> |]
      ==> (Hom\<^bsub>?C\<^esub>[\<midarrow>,?X]) @@ ?Y =
          Hom\<^bsub>?C\<^esub> ?Y ?X",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1)))),
    ("SetCat.ZFfunComp",
     "ALL x. x |\<in>| ?A --> ?f x |\<in>| ?B ==>
      ZFfun ?A ?B ?f |o| ZFfun ?B ?C ?g = ZFfun ?A ?C (?g o ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("SetCat.HomFtorId",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?Y : obj\<^bsub>?C\<^esub> |]
      ==> Hom\<^bsub>?C\<^esub>[?X,id\<^bsub>?C\<^esub> ?Y] =
          id\<^bsub>SET\<^esub> (Hom\<^bsub>?C\<^esub> ?X ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("SetCat.HomFtorId'",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?Y : obj\<^bsub>?C\<^esub> |]
      ==> Hom\<^bsub>?C\<^esub>[?X,id\<^bsub>?C\<^esub> ?Y] =
          id\<^bsub>SET'\<^esub> (Hom\<^bsub>?C\<^esub> ?X ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))))),
    ("SetCat.HomFtorMor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> cod\<^bsub>SET\<^esub> (Hom\<^bsub>?C\<^esub>[?X,?f]) =
          Hom\<^bsub>?C\<^esub> ?X cod\<^bsub>?C\<^esub> ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("SetCat.HomFtorContraMor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> cod\<^bsub>SET\<^esub> (HomC\<^bsub>?C\<^esub>[?f,?X]) =
          Hom\<^bsub>?C\<^esub> dom\<^bsub>?C\<^esub> ?f ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("SetCat.HomFtorMor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> dom\<^bsub>SET\<^esub> (Hom\<^bsub>?C\<^esub>[?X,?f]) =
          Hom\<^bsub>?C\<^esub> ?X dom\<^bsub>?C\<^esub> ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("SetCat.HomFtorContraMor",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> dom\<^bsub>SET\<^esub> (HomC\<^bsub>?C\<^esub>[?f,?X]) =
          Hom\<^bsub>?C\<^esub> cod\<^bsub>?C\<^esub> ?f ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1)))),
    ("SetCat.ZFfunCompAppDomCod",
     "[| isZFfun ?f; isZFfun ?g; |dom|?g = |cod|?f |]
      ==> |dom|?f |o| ?g = |dom|?f & |cod|?f |o| ?g = |cod|?g",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))),
                 template_app (template_hole 3, template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("SetCat.ZFfunCompApp",
     "[| isZFfun ?f; isZFfun ?g; |dom|?g = |cod|?f |]
      ==> ?f |o| ?g = ZFfun (|dom|?f) (|cod|?g) (%x. ?g |@| (?f |@| x))",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 1)),
             template_app (template_hole 3, template_var 0)),
           t_empty)))),
    ("SetCat.HomFtorObj'",
     "[| LSCategory ?C; PreFunctor (HomP\<^bsub>?C\<^esub>[?X,\<midarrow>]);
         ?X : obj\<^bsub>?C\<^esub>; ?Y : obj\<^bsub>?C\<^esub> |]
      ==> (HomP\<^bsub>?C\<^esub>[?X,\<midarrow>]) @@ ?Y =
          Hom\<^bsub>?C\<^esub> ?X ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SetCat.HomFtorDist",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f \<approx>>\<^bsub>?C\<^esub> ?g |]
      ==> (Hom\<^bsub>?C\<^esub>[?X,?f]) ;;\<^bsub>SET\<^esub>
          (Hom\<^bsub>?C\<^esub>[?X,?g]) =
          Hom\<^bsub>?C\<^esub>[?X,?f ;;\<^bsub>?C\<^esub> ?g]",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0))))),
    ("SetCat.HomFtorDist'",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f \<approx>>\<^bsub>?C\<^esub> ?g |]
      ==> (Hom\<^bsub>?C\<^esub>[?X,?f]) ;;\<^bsub>SET'\<^esub>
          (Hom\<^bsub>?C\<^esub>[?X,?g]) =
          Hom\<^bsub>?C\<^esub>[?X,?f ;;\<^bsub>?C\<^esub> ?g]",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0))))),
    ("SetCat.HomFtorMapsTo",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> Hom\<^bsub>?C\<^esub>[?X,?f] maps\<^bsub>SET\<^esub> Hom\<^bsub>?C\<^esub> ?X dom\<^bsub>?C\<^esub> ?f to Hom\<^bsub>?C\<^esub> ?X cod\<^bsub>?C\<^esub> ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SetCat.HomFtorContraMapsTo",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> HomC\<^bsub>?C\<^esub>[?f,?X] maps\<^bsub>SET\<^esub> Hom\<^bsub>?C\<^esub> cod\<^bsub>?C\<^esub> ?f ?X to Hom\<^bsub>?C\<^esub> dom\<^bsub>?C\<^esub> ?f ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 1))
           ))),
    ("SetCat.HomFtorMor'",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub> |]
      ==> Hom\<^bsub>?C\<^esub>[?X,?f] maps\<^bsub>SET'\<^esub> Hom\<^bsub>?C\<^esub> ?X dom\<^bsub>?C\<^esub> ?f to Hom\<^bsub>?C\<^esub> ?X cod\<^bsub>?C\<^esub> ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("SetCat.ZFfunCompAssoc",
     "[| isZFfun ?f; isZFfun ?h; |cod|?g = |dom|?h; isZFfun ?g;
         |cod|?f = |dom|?g |]
      ==> ?f |o| ?g |o| ?h = ?f |o| (?g |o| ?h)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 1)),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("SetCat.HomFtorMapLemma1",
     "[| LSCategory ?C; ?X : obj\<^bsub>?C\<^esub>;
         ?f : mor\<^bsub>?C\<^esub>;
         ?x |\<in>| (Hom\<^bsub>?C\<^esub> ?X dom\<^bsub>?C\<^esub> ?f) |]
      ==> m2z\<^bsub>?C\<^esub>z2m\<^bsub>?C\<^esub>?x ;;\<^bsub>?C\<^esub>
                               ?f |\<in>|
          (Hom\<^bsub>?C\<^esub> ?X cod\<^bsub>?C\<^esub> ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 0)),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("SetCat.ZFfunExt",
     "[| |dom|?f = |dom|?g; |cod|?f = |cod|?g; isZFfun ?f; isZFfun ?g;
         !!x. x |\<in>| |dom|?f ==> ?f |@| x = ?g |@| x |]
      ==> ?f = ?g",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("SetCat.HomCHom",
     "[| LSCategory ?C; ?f : mor\<^bsub>?C\<^esub>;
         ?g : mor\<^bsub>?C\<^esub> |]
      ==> (HomC\<^bsub>?C\<^esub>[?g,dom\<^bsub>?C\<^esub> ?f]) ;;\<^bsub>SET\<^esub>
          (Hom\<^bsub>?C\<^esub>[dom\<^bsub>?C\<^esub> ?g,?f]) =
          (Hom\<^bsub>?C\<^esub>[cod\<^bsub>?C\<^esub> ?g,?f]) ;;\<^bsub>SET\<^esub>
          (HomC\<^bsub>?C\<^esub>[?g,cod\<^bsub>?C\<^esub> ?f])",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("SetCat.isZFfunE",
     "[| isZFfun ?f;
         [| isOpair ?f; isOpair (Fst ?f); isFun (Snd ?f);
            Snd ?f |\<subseteq>|
            HOLZF.Domain (Snd ?f) |\<times>| HOLZF.Range (Snd ?f);
            HOLZF.Domain (Snd ?f) = |dom|?f &
            HOLZF.Range (Snd ?f) |\<subseteq>| |cod|?f |]
         ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_implication
         ([template_predicate
            (template_app (template_hole 11, template_var 1))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_var 1))
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_var 1))
                   )],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 8, template_var 1)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 8, template_var 1))),
                         template_app
                          (template_hole 4,
                           template_app (template_hole 8, template_var 1))))
                     )],
                template_implication
                 ([template_predicate
                    (
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 8, template_var 1))),
                             template_app
                              (template_hole 1, template_var 1))),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 8, template_var 1))),
                           template_app (template_hole 0, template_var 1)))
                       )],
                  template_predicate (template_var 0))))))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.SetCatMoreTemplates"
### 0.412s elapsed time, 0.633s cpu time, 0.117s GC time
val it = (): unit
