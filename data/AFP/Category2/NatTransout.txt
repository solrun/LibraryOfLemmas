Loading theory "HOL-Library.Function_Algebras" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.FuncSet" (required by "Draft.NatTransMoreTemplates" via "Draft.NatTrans" via "Draft.Functors" via "Draft.Category")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.525s cpu time, 0.048s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.327s elapsed time, 1.300s cpu time, 0.137s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.376s elapsed time, 1.499s cpu time, 0.137s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.583s elapsed time, 2.303s cpu time, 0.233s GC time
Loading theory "Draft.Category" (required by "Draft.NatTransMoreTemplates" via "Draft.NatTrans" via "Draft.Functors")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
locale ExtCategory
  fixes C :: "('o, 'm, 'a) Category_scheme"  (structure)
  assumes "ExtCategory C"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
locale Category
  fixes C :: "('a, 'b, 'c) Category_scheme"  (structure)
  assumes "Category C"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.BigO"
### 1.079s elapsed time, 4.100s cpu time, 0.834s GC time
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "Draft.Category"
### 0.868s elapsed time, 3.224s cpu time, 0.737s GC time
Loading theory "Draft.Functors" (required by "Draft.NatTransMoreTemplates" via "Draft.NatTrans")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.121s elapsed time, 4.198s cpu time, 0.925s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale PreFunctor
  fixes
    F :: "('o1, 'o2, 'm1, 'm2, 'a1, 'a2, 'a) Functor_scheme"  (structure)
  assumes "PreFunctor F"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale FunctorM
  fixes F :: "('a, 'b, 'c, 'd, 'e, 'f, 'g) Functor_scheme"  (structure)
  assumes "FunctorM F"
locale FunctorExt
  fixes
    F :: "('o1, 'o2, 'm1, 'm2, 'a1, 'a2, 'a) Functor_scheme"  (structure)
  assumes "FunctorExt F"
locale Functor
  fixes F :: "('a, 'b, 'c, 'd, 'e, 'f, 'g) Functor_scheme"  (structure)
  assumes "Functor F"
Found termination order: "size <*mlex*> {}"
locale Equivalence
  fixes F :: "('a, 'b, 'c, 'd, 'e, 'f, 'g) Functor_scheme"  (structure)
  assumes "Equivalence F"
### theory "Draft.Functors"
### 0.607s elapsed time, 1.275s cpu time, 0.111s GC time
Loading theory "Draft.NatTrans" (required by "Draft.NatTransMoreTemplates")
### theory "HOL-Library.Tree"
### 2.026s elapsed time, 6.540s cpu time, 1.125s GC time
Loading theory "Draft.Templates" (required by "Draft.NatTransMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.172s cpu time, 0.063s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.NatTransMoreTemplates")
locale NatTransExt
  fixes \<eta> :: "('o1, 'o2, 'm1, 'm2, 'a, 'b) NatTrans"  (structure)
  assumes "NatTransExt \<eta>"
locale NatTransP
  fixes \<eta> :: "('o1, 'o2, 'm1, 'm2, 'a, 'b) NatTrans"  (structure)
  assumes "NatTransP \<eta>"
locale NatTrans
  fixes \<eta> :: "('a, 'b, 'c, 'd, 'e, 'f) NatTrans"  (structure)
  assumes "NatTrans \<eta>"
### theory "Draft.NatTrans"
### 0.599s elapsed time, 1.243s cpu time, 0.113s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.548s elapsed time, 1.140s cpu time, 0.121s GC time
Loading theory "Draft.NatTransMoreTemplates"
val templateLemmas =
   [("NatTrans.MakeNT_cod", "NTCatCod ?f = NTCatCod (MakeNT ?f)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("NatTrans.MakeNT_dom", "NTCatDom ?f = NTCatDom (MakeNT ?f)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("NatTrans.IdNatTransNatTrans",
     "Functor ?F ==> NatTrans (IdNatTrans ?F)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("NatTrans.IdNatTransNatTrans'",
     "Functor ?F ==> NatTransP (IdNatTrans' ?F)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("NatTrans.MakeNT", "NatTransP ?\<eta> ==> NatTrans (MakeNT ?\<eta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("NatTrans.IdNatTransCompDefCod",
     "NatTrans ?f ==> ?f \<approx>>\<bullet> IdNatTrans (NTCod ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("NatTrans.IdNatTransCompDefDom",
     "NatTrans ?f ==> IdNatTrans (NTDom ?f) \<approx>>\<bullet> ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 0)
           ))),
    ("NatTrans.NatTransCompNatTrans",
     "?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0 ==>
      NatTrans (?\<eta>1.0 \<bullet> ?\<eta>2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.NatTransCompNatTrans'",
     "?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0 ==>
      NatTransP (?\<eta>1.0 \<bullet>1 ?\<eta>2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.NTCatDom",
     "?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0 ==>
      NTCatDom ?\<eta>1.0 = NTCatDom ?\<eta>2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NatTrans.NTCatCod",
     "?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0 ==>
      NTCatCod ?\<eta>1.0 = NTCatCod ?\<eta>2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NatTrans.CatExpMorNT",
     "?f : mor\<^bsub>CatExp ?A ?B\<^esub> ==> NatTrans ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("NatTrans.DDDC",
     "NatTrans ?f ==> CatDom (NTDom ?f) = CatDom (NTCod ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("NatTrans.CCCD",
     "NatTrans ?f ==> CatCod (NTCod ?f) = CatCod (NTDom ?f)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("NatTrans.IdNatTransMapR",
     "NatTrans ?f ==> ?f \<bullet> IdNatTrans (NTCod ?f) = ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("NatTrans.IdNatTransMapL",
     "NatTrans ?f ==> IdNatTrans (NTDom ?f) \<bullet> ?f = ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0),
         template_var 0))),
    ("NatTrans.CatExpNatTransCompDef",
     "?f \<approx>>\<^bsub>CatExp ?A ?B\<^esub> ?g ==>
      ?f \<approx>>\<bullet> ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("NatTrans.CatExpCat",
     "[| Category ?A; Category ?B |] ==> Category (CatExp ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.CatExpCatAx",
     "[| Category ?A; Category ?B |] ==> Category_axioms (CatExp' ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.MakeNT_comp",
     "?X : obj\<^bsub>NTCatDom ?f\<^esub> ==> MakeNT ?f $$ ?X = ?f $$ ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("NatTrans.NatTransCompDefined",
     "[| ?f \<approx>>\<bullet> ?g; ?g \<approx>>\<bullet> ?h |]
      ==> ?f \<approx>>\<bullet> ?g \<bullet> ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.NatTransCompDefined",
     "[| ?f \<approx>>\<bullet> ?g; ?g \<approx>>\<bullet> ?h |]
      ==> ?f \<bullet> ?g \<approx>>\<bullet> ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("NatTrans.MakeNTApp",
     "?X : obj\<^bsub>NTCatDom (MakeNT ?f)\<^esub> ==>
      ?f $$ ?X = MakeNT ?f $$ ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 0))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 1)))),
    ("NatTrans.CatExpId",
     "?X : obj\<^bsub>CatExp ?A ?B\<^esub> ==>
      id\<^bsub>CatExp ?A ?B\<^esub> ?X = IdNatTrans ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("NatTrans.CatExpCod",
     "?f : mor\<^bsub>CatExp ?A ?B\<^esub> ==>
      cod\<^bsub>CatExp ?A ?B\<^esub> ?f = NTCod ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("NatTrans.CatExpDom",
     "?f : mor\<^bsub>CatExp ?A ?B\<^esub> ==>
      dom\<^bsub>CatExp ?A ?B\<^esub> ?f = NTDom ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("NatTrans.IdNatTrans_map",
     "?X : obj\<^bsub>CatDom ?F\<^esub> ==>
      IdNatTrans ?F $$ ?X = id\<^bsub>CatCod ?F\<^esub> (?F @@ ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("NatTrans.NatTransCompCompDef",
     "[| ?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0;
         ?X : obj\<^bsub>NTCatDom ?\<eta>1.0\<^esub> |]
      ==> ?\<eta>1.0 $$ ?X \<approx>>\<^bsub>NTCatCod ?\<eta>1.0\<^esub>
          ?\<eta>2.0 $$ ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.NatTransCompAssoc",
     "[| ?f \<approx>>\<bullet> ?g; ?g \<approx>>\<bullet> ?h |]
      ==> ?f \<bullet> ?g \<bullet> ?h = ?f \<bullet> (?g \<bullet> ?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("NatTrans.NatTransCompDefCod",
     "[| NatTrans ?\<eta>;
         ?f maps\<^bsub>NTCatDom ?\<eta>\<^esub> ?X to ?Y |]
      ==> ?\<eta> $$ ?X \<approx>>\<^bsub>NTCatCod ?\<eta>\<^esub>
          NTCod ?\<eta> ## ?f",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 2))
           ))),
    ("NatTrans.NatTransCompDefDom",
     "[| NatTrans ?\<eta>;
         ?f maps\<^bsub>NTCatDom ?\<eta>\<^esub> ?X to ?Y |]
      ==> NTDom ?\<eta> ## ?f \<approx>>\<^bsub>NTCatCod ?\<eta>\<^esub>
          ?\<eta> $$ ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("NatTrans.NatTransMapsTo",
     "[| NT ?\<eta> : ?F \<Longrightarrow> ?G;
         ?X : obj\<^bsub>CatDom ?F\<^esub> |]
      ==> ?\<eta> $$ ?X maps\<^bsub>CatCod ?G\<^esub> ?F @@ ?X to ?G @@ ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("NatTrans.nt_abbrevE",
     "[| NT ?f : ?F \<Longrightarrow> ?G;
         [| NatTrans ?f; NTDom ?f = ?F; NTCod ?f = ?G |] ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 3, template_var 3))],
          template_implication
           ([template_equation
              (template_app (template_hole 1, template_var 3),
               template_var 2)],
            template_implication
             ([template_equation
                (template_app (template_hole 0, template_var 3),
                 template_var 1)],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("NatTrans.NatTransComp_Comp2",
     "[| ?x : obj\<^bsub>NTCatDom ?f\<^esub>; ?f \<approx>>\<bullet> ?g |]
      ==> ?f \<bullet> ?g $$ ?x =
          ?f $$ ?x ;;\<^bsub>NTCatCod ?f\<^esub> (?g $$ ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2))))),
    ("NatTrans.NatTransComp_Comp1",
     "[| ?x : obj\<^bsub>NTCatDom ?f\<^esub>; ?f \<approx>>\<bullet> ?g |]
      ==> ?f \<bullet> ?g $$ ?x =
          ?f $$ ?x ;;\<^bsub>NTCatCod ?g\<^esub> (?g $$ ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2))))),
    ("NatTrans.CatExpDist",
     "[| ?X : obj\<^bsub>?A\<^esub>;
         ?f \<approx>>\<^bsub>CatExp ?A ?B\<^esub> ?g |]
      ==> (?f ;;\<^bsub>CatExp ?A ?B\<^esub> ?g) $$ ?X =
          ?f $$ ?X ;;\<^bsub>?B\<^esub> (?g $$ ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app (template_hole 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 2)),
                 template_var 1),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 4)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 4))))),
    ("NatTrans.NTCompDefinedI",
     "[| NatTrans ?\<eta>1.0; NatTrans ?\<eta>2.0;
         NTCatDom ?\<eta>2.0 = NTCatDom ?\<eta>1.0;
         NTCatCod ?\<eta>2.0 = NTCatCod ?\<eta>1.0;
         NTCod ?\<eta>1.0 = NTDom ?\<eta>2.0 |]
      ==> ?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("NatTrans.NatTransExt'",
     "[| NTDom ?\<eta>1' = NTDom ?\<eta>2';
         NTCod ?\<eta>1' = NTCod ?\<eta>2';
         !!X. X : obj\<^bsub>NTCatDom ?\<eta>1'\<^esub> ==>
              ?\<eta>1' $$ X = ?\<eta>2' $$ X |]
      ==> MakeNT ?\<eta>1' = MakeNT ?\<eta>2'",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("NatTrans.NTCompDefinedE",
     "[| ?\<eta>1.0 \<approx>>\<bullet> ?\<eta>2.0;
         [| NatTrans ?\<eta>1.0; NatTrans ?\<eta>2.0;
            NTCatDom ?\<eta>2.0 = NTCatDom ?\<eta>1.0;
            NTCatCod ?\<eta>2.0 = NTCatCod ?\<eta>1.0;
            NTCod ?\<eta>1.0 = NTDom ?\<eta>2.0 |]
         ==> ?R |]
      ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 7, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 7, template_var 1))],
            template_implication
             ([template_equation
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 5, template_var 2))],
              template_implication
               ([template_equation
                  (template_app (template_hole 3, template_var 1),
                   template_app (template_hole 3, template_var 2))],
                template_implication
                 ([template_equation
                    (template_app (template_hole 1, template_var 2),
                     template_app (template_hole 0, template_var 1))],
                  template_predicate (template_var 0))))))],
       template_predicate (template_var 0))),
    ("NatTrans.NatTransExt",
     "[| NatTrans ?\<eta>1.0; NatTrans ?\<eta>2.0;
         NTDom ?\<eta>1.0 = NTDom ?\<eta>2.0;
         NTCod ?\<eta>1.0 = NTCod ?\<eta>2.0;
         !!X. X : obj\<^bsub>NTCatDom ?\<eta>1.0\<^esub> ==>
              ?\<eta>1.0 $$ X = ?\<eta>2.0 $$ X |]
      ==> ?\<eta>1.0 = ?\<eta>2.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 7, template_var 0)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("NatTrans.NatTransExt0",
     "[| NTDom ?\<eta>1.0 = NTDom ?\<eta>2.0;
         NTCod ?\<eta>1.0 = NTCod ?\<eta>2.0;
         !!X. X : obj\<^bsub>NTCatDom ?\<eta>1.0\<^esub> ==>
              ?\<eta>1.0 $$ X = ?\<eta>2.0 $$ X;
         ($$) ?\<eta>1.0
         : extensional (obj\<^bsub>NTCatDom ?\<eta>1.0\<^esub>);
         ($$) ?\<eta>2.0
         : extensional (obj\<^bsub>NTCatDom ?\<eta>2.0\<^esub>) |]
      ==> ?\<eta>1.0 = ?\<eta>2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 3, template_var 1)),
              template_app
               (template_hole 1,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 3, template_var 0)),
              template_app
               (template_hole 1,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0))))
            )],
       template_equation (template_var 1, template_var 0)))]:
   (string * thm * template) list
### theory "Draft.NatTransMoreTemplates"
### 0.355s elapsed time, 0.468s cpu time, 0.027s GC time
val it = (): unit
