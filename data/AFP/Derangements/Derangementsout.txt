Loading theory "HOL-Library.FuncSet" (required by "Draft.DerangementsMoreTemplates" via "Draft.Derangements" via "HOL-Combinatorics.Permutations" via "HOL-Library.Disjoint_Sets")
Loading theory "HOL-Library.Cancellation" (required by "Draft.DerangementsMoreTemplates" via "Draft.Derangements" via "HOL-Combinatorics.Permutations" via "HOL-Library.Multiset")
Loading theory "HOL-Combinatorics.Transposition" (required by "Draft.DerangementsMoreTemplates" via "Draft.Derangements" via "HOL-Combinatorics.Permutations")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.121s elapsed time, 0.505s cpu time, 0.038s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Combinatorics.Transposition"
### 0.148s elapsed time, 0.605s cpu time, 0.038s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.816s cpu time, 0.066s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.FuncSet"
### 0.405s elapsed time, 1.620s cpu time, 0.104s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.DerangementsMoreTemplates" via "Draft.Derangements" via "HOL-Combinatorics.Permutations")
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.281s cpu time, 0.141s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.464s elapsed time, 1.849s cpu time, 0.179s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.DerangementsMoreTemplates" via "Draft.Derangements" via "HOL-Combinatorics.Permutations")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Disjoint_Sets"
### 0.290s elapsed time, 1.148s cpu time, 0.105s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.125s elapsed time, 4.287s cpu time, 0.858s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.024s elapsed time, 3.718s cpu time, 0.811s GC time
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
### theory "HOL-Library.Tree"
### 2.101s elapsed time, 6.672s cpu time, 1.151s GC time
Loading theory "Draft.Templates" (required by "Draft.DerangementsMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.057s elapsed time, 0.115s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.DerangementsMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.541s elapsed time, 1.124s cpu time, 0.113s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.139s elapsed time, 8.010s cpu time, 1.279s GC time
Loading theory "HOL-Combinatorics.Permutations" (required by "Draft.DerangementsMoreTemplates" via "Draft.Derangements")
Proofs for inductive predicate(s) "swapidseq"
  Proving monotonicity ...
"(bij, bij_betw, permutation)"
  :: "(('a => 'b) => bool) *
      (('c => 'd) => 'c set => 'd set => bool) * (('e => 'e) => bool)"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "HOL-Combinatorics.Permutations"
### 0.626s elapsed time, 0.774s cpu time, 0.129s GC time
Loading theory "Draft.Derangements" (required by "Draft.DerangementsMoreTemplates")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Derangements"
### 0.663s elapsed time, 1.368s cpu time, 0.939s GC time
Loading theory "Draft.DerangementsMoreTemplates"
val templateLemmas =
   [("Derangements.derangements_singleton", "derangements {?x} = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Derangements.finite_derangements",
     "finite ?A ==> finite (derangements ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Derangements.permutes_imp_bij'", "?p permutes ?S ==> bij ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0),
             template_hole 0)
           ))),
    ("Derangements.derangements_inv",
     "?d : derangements ?S ==> inv ?d : derangements ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Derangements.derangements_in_image",
     "[| ?d : derangements ?A; ?x : ?A |] ==> ?d ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 2, template_var 0)),
             template_var 1)
           ))),
    ("Derangements.permutes_swap",
     "?p permutes ?S ==>
      ?p o Transposition.transpose ?x ?y permutes insert ?x (insert ?y ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Derangements.card_derangements",
     "[| finite ?S; card ?S = ?n |]
      ==> card (derangements ?S) = count_derangements ?n",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Derangements.derangements_no_fixpoint",
     "[| ?d : derangements ?A; ?x : ?A |] ==> ?d ?x ~= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app (template_var 2, template_var 0), template_var 0)
           ))),
    ("Derangements.derangements_fixpoint",
     "[| ?d : derangements ?A; ?x ~: ?A |] ==> ?d ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)
                )
            )],
       template_equation
        (template_app (template_var 2, template_var 0), template_var 0))),
    ("Derangements.derangements_inverse_in_image",
     "[| ?d : derangements ?A; ?x : ?A |] ==> inv ?d ?x : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Derangements.two_power_fact_le_fact",
     "1 <= ?n ==> (2::?'a) ^ ?k * fact ?n <= fact (?n + ?k)",
     template_implication
      ([template_inequation (less_equals, template_hole 8, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_var 0)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Derangements.count_derangements",
     "real (count_derangements ?n) =
      fact ?n * (SUM k = 0..?n. (- 1) ^ k / fact k)",
     template_equation
      (template_app
        (template_hole 10, template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Derangements.derangements_in_image_strong",
     "[| ?d : derangements ?A; ?x : ?A |] ==> ?d ?x : ?A - {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_var 2, template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Derangements.count_derangements_approximation",
     "?n ~= 0 ==>
      \<bar>real (count_derangements ?n) - fact ?n / exp 1\<bar> < 1 / 2",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_inequation
        (less_than,
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 0)),
               template_app (template_hole 4, template_hole 3)))),
         template_app
          (template_app (template_hole 6, template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Derangements.bij_imp_permutes'",
     "[| bij ?p; ALL x. x ~: ?A --> ?p x = x |] ==> ?p permutes ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 6),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Derangements.derangementsI",
     "[| ?p permutes ?S; !!x. x : ?S ==> ?p x ~= x |]
      ==> ?p : derangements ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Derangements.exp1_approx",
     "0 < ?n ==> exp 1 - (SUM k<?n. 1 / fact k) : {0..2 / fact ?n}",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_hole 9)),
                 template_app
                  (template_app (template_hole 8, t_empty),
                   template_app (template_hole 5, template_var 0)))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_app (template_hole 6, template_var 0))))
           ))),
    ("Derangements.bij_extends",
     "[| bij ?p; ?p ?x = ?x |] ==> bij (?p(?x := ?y, inv ?p ?y := ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_hole 3)
            ),
        template_equation
         (template_app (template_var 2, template_var 1), template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_hole 3),
                         template_var 2),
                       template_var 0)),
                   template_var 1)),
               template_hole 3),
             template_hole 3)
           ))),
    ("Derangements.derangementsE",
     "[| ?d : derangements ?S;
         [| ?d permutes ?S; ALL x:?S. ?d x ~= x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 2, template_var 1), t_empty)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Derangements.permutations_skip_one",
     "[| ?p permutes ?S; ?x : ?S |]
      ==> ?p(?x := ?x, inv ?p ?x := ?p ?x) permutes ?S - {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 2),
                         template_var 0),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 2),
                     template_var 0)),
                 template_app (template_var 2, template_var 0))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Derangements.permutes_drop_cycle_size_two",
     "[| ?p permutes ?S; ?p (?p ?x) = ?x |]
      ==> ?p o Transposition.transpose ?x (?p ?x) permutes
          ?S - {?x, ?p ?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_var 2, template_app (template_var 2, template_var 0)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_var 2, template_var 0)))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 2, template_var 0)),
                   template_hole 0))))
           ))),
    ("Derangements.derangements_formula",
     "[| ?n ~= 0; finite ?S; card ?S = ?n |]
      ==> int (card (derangements ?S)) = round (fact ?n / exp 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 11)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 0), template_var 1)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 1, template_hole 0)))))),
    ("Derangements.derangements_formula'",
     "[| ?n ~= 0; finite ?S; card ?S = ?n |]
      ==> card (derangements ?S) = nat (round (fact ?n / exp 1))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_predicate (template_app (template_hole 9, template_var 0)),
        template_equation
         (template_app (template_hole 8, template_var 0), template_var 1)],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 1, template_hole 0))))))),
    ("Derangements.permutesE",
     "[| ?p permutes ?S;
         [| bij ?p; ALL x. x ~: ?S --> ?p x = x |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 2),
                   template_hole 5),
                 template_hole 5)
               )],
          template_implication
           ([template_predicate (template_app (template_hole 4, t_empty))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Derangements.derangements_drop_minimal_cycle",
     "[| ?d : derangements ?S; ?d (?d ?x) = ?x |]
      ==> ?d o Transposition.transpose ?x (?d ?x)
          : derangements (?S - {?x, ?d ?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_equation
         (template_app
           (template_var 2, template_app (template_var 2, template_var 0)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_var 2, template_var 0)))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_var 2, template_var 0)),
                     template_hole 0)))))
           ))),
    ("Derangements.permutes_add_one",
     "[| ?p permutes ?S; ?x ~: ?S; ?y : ?S |]
      ==> ?p(?x := ?y, inv ?p ?y := ?x) permutes insert ?x ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 3),
                         template_var 1),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Derangements.card_product_dependent",
     "[| finite ?S; ALL x:?S. finite (?T x) |]
      ==> card {(x, y). x : ?S & y : ?T x} = (SUM x:?S. card (?T x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         template_app
          (template_app (template_hole 1, t_empty), template_var 1)))),
    ("Derangements.derangements_add_one",
     "[| ?d : derangements ?S; ?x ~: ?S; ?y : ?S |]
      ==> ?d(?x := ?y, inv ?d ?y := ?x) : derangements (insert ?x ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 3),
                         template_var 1),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)))
           ))),
    ("Derangements.derangements_swap",
     "[| ?d : derangements ?S; ?x ~: ?S; ?y ~: ?S; ?x ~= ?y |]
      ==> ?d o Transposition.transpose ?x ?y
          : derangements (insert ?x (insert ?y ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)
                )
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))))
           ))),
    ("Derangements.derangements_skip_one",
     "[| ?d : derangements ?S; ?x : ?S; ?d (?d ?x) ~= ?x |]
      ==> ?d(?x := ?x, inv ?d ?x := ?d ?x) : derangements (?S - {?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_var 2,
                template_app (template_var 2, template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_var 2),
                         template_var 0),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 2),
                     template_var 0)),
                 template_app (template_var 2, template_var 0))),
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           )))]:
   (string * thm * template) list
### theory "Draft.DerangementsMoreTemplates"
### 0.390s elapsed time, 0.587s cpu time, 0.059s GC time
val it = (): unit
