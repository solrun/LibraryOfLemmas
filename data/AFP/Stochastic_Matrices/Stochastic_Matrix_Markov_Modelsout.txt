Loading theory "HOL-Library.BigO" (required by "Draft.Stochastic_Matrix_Markov_ModelsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Templates" (required by "Draft.Stochastic_Matrix_Markov_ModelsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Stochastic_Matrix" (required by "Draft.Stochastic_Matrix_Markov_ModelsTemplates" via "Draft.Stochastic_Matrix_Markov_Models" via "Draft.Stochastic_Vector_PMF")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.080s elapsed time, 0.290s cpu time, 0.000s GC time
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Finite_Cartesian_Product.vec" found.
### Generation of a parametrized correspondence relation failed.
### Reason:  No relator for the type "Finite_Cartesian_Product.vec" found.
### theory "Draft.Stochastic_Matrix"
### 0.304s elapsed time, 0.750s cpu time, 0.032s GC time
Loading theory "Draft.Stochastic_Vector_PMF" (required by "Draft.Stochastic_Matrix_Markov_ModelsTemplates" via "Draft.Stochastic_Matrix_Markov_Models")
### theory "HOL-Library.BigO"
### 0.659s elapsed time, 1.477s cpu time, 0.123s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Stochastic_Matrix_Markov_ModelsTemplates")
locale pmf_as_measure
### theory "Draft.Stochastic_Vector_PMF"
### 0.859s elapsed time, 1.774s cpu time, 0.186s GC time
Loading theory "Draft.Stochastic_Matrix_Markov_Models" (required by "Draft.Stochastic_Matrix_Markov_ModelsTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.514s elapsed time, 1.061s cpu time, 0.094s GC time
locale transition_matrix
  fixes A :: "'i st_mat"
### theory "Draft.Stochastic_Matrix_Markov_Models"
### 0.969s elapsed time, 1.083s cpu time, 0.122s GC time
Loading theory "Draft.Stochastic_Matrix_Markov_ModelsTemplates"
val templateLemmas =
   [("Stochastic_Matrix_Markov_Models.st_vec_transition_vec_of_st_mat",
     "st_vec (transition_vec_of_st_mat ?A ?a) $h ?i =
      st_mat ?A $h ?i $h ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_var 1)))]:
   (string * thm * template) list
### theory "Draft.Stochastic_Matrix_Markov_ModelsTemplates"
### 2.099s elapsed time, 2.707s cpu time, 0.687s GC time
val it = (): unit
