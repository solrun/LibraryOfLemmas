   [("Sqrt_Babylonian_Auxiliary.quotient_of_int",
     "quotient_of (rat_of_int ?i) = (?i, 1)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Sqrt_Babylonian_Auxiliary.quotient_of_nat",
     "quotient_of (rat_of_nat ?i) = (int ?i, 1)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Sqrt_Babylonian_Auxiliary.div_is_floor_divide_rat",
     "?n div ?y = \<lfloor>rat_of_int ?n / rat_of_int ?y\<rfloor>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Sqrt_Babylonian_Auxiliary.div_is_floor_divide_real",
     "?n div ?y = \<lfloor>real_of_int ?n / real_of_int ?y\<rfloor>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Sqrt_Babylonian_Auxiliary.mod_div_equality_int",
     "?n div ?x * ?x = ?n - ?n mod ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sqrt_Babylonian_Auxiliary.divide_less_floor1",
     "?n / ?y < of_int \<lfloor>?n / ?y\<rfloor> + (1::?'a)",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)))),
         template_hole 0))),
    ("Sqrt_Babylonian_Auxiliary.sqrt_sqrt",
     "0 <= ?x ==> sqrt ?x * sqrt ?x = ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Sqrt_Babylonian_Auxiliary.abs_lesseq_square",
     "(\<bar>?x\<bar> <= \<bar>?y\<bar>) = (?x * ?x <= ?y * ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Sqrt_Babylonian_Auxiliary.floor_div_pos_int",
     "0 < ?n ==>
      \<lfloor>?r / of_int ?n\<rfloor> = \<lfloor>?r\<rfloor> div ?n",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_var 1)))),
    ("Sqrt_Babylonian_Auxiliary.floor_div_neg_int",
     "?n < 0 ==>
      \<lfloor>?r / of_int ?n\<rfloor> = \<lceil>?r\<rceil> div ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Sqrt_Babylonian_Auxiliary.square_less_square",
     "[| (0::?'a) <= ?x; (0::?'a) <= ?y |]
      ==> (?x * ?x < ?y * ?y) = (?x < ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Sqrt_Babylonian_Auxiliary.square_lesseq_square",
     "[| (0::?'a) <= ?x; (0::?'a) <= ?y |]
      ==> (?x * ?x <= ?y * ?y) = (?x <= ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_equals, template_hole 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0))))]
