   [("Herbrand_Interpretation.true_cls_mset_empty", "?I \<Turnstile>m {#}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Herbrand_Interpretation.true_clss_empty", "?I \<Turnstile>s {}",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Herbrand_Interpretation.true_cls_empty", "~ ?I \<Turnstile> {#}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("Herbrand_Interpretation.true_clss_set_mset",
     "(?I \<Turnstile>s set_mset ?CC) = (?I \<Turnstile>m ?CC)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Herbrand_Interpretation.true_lit_simps",
     "(?I \<Turnstile>l Pos ?A) = (?A : ?I)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Herbrand_Interpretation.true_lit_simps",
     "(?I \<Turnstile>l Neg ?A) = (?A ~: ?I)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Herbrand_Interpretation.true_cls_singleton",
     "(?I \<Turnstile> {#?L#}) = (?I \<Turnstile>l ?L)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Herbrand_Interpretation.true_cls_mset_singleton",
     "(?I \<Turnstile>m {#?C#}) = (?I \<Turnstile> ?C)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Herbrand_Interpretation.true_clss_singleton",
     "(?I \<Turnstile>s {?C}) = (?I \<Turnstile> ?C)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Herbrand_Interpretation.true_clss_Union",
     "(?I \<Turnstile>s \<Union> ?CCC) =
      (ALL CC:?CCC. ?I \<Turnstile>s CC)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Herbrand_Interpretation.true_cls_mset_Union",
     "(?I \<Turnstile>m \<Sum>\<^sub># ?CCC) =
      (\<forall>CC:#?CCC. ?I \<Turnstile>m CC)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Herbrand_Interpretation.true_clss_mset_set",
     "finite ?CC ==>
      (?I \<Turnstile>m mset_set ?CC) = (?I \<Turnstile>s ?CC)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Herbrand_Interpretation.true_cls_union",
     "(?I \<Turnstile> ?C + ?D) =
      (?I \<Turnstile> ?C | ?I \<Turnstile> ?D)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Herbrand_Interpretation.true_cls_add_mset",
     "(?I \<Turnstile> add_mset ?C ?D) =
      (?I \<Turnstile>l ?C | ?I \<Turnstile> ?D)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Herbrand_Interpretation.true_cls_mset_union",
     "(?I \<Turnstile>m ?CC + ?DD) =
      (?I \<Turnstile>m ?CC & ?I \<Turnstile>m ?DD)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Herbrand_Interpretation.true_cls_mset_add_mset",
     "(?I \<Turnstile>m add_mset ?C ?CC) =
      (?I \<Turnstile> ?C & ?I \<Turnstile>m ?CC)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Herbrand_Interpretation.true_clss_union",
     "(?I \<Turnstile>s ?CC Un ?DD) =
      (?I \<Turnstile>s ?CC & ?I \<Turnstile>s ?DD)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Herbrand_Interpretation.true_clss_insert",
     "(?I \<Turnstile>s insert ?C ?DD) =
      (?I \<Turnstile> ?C & ?I \<Turnstile>s ?DD)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Herbrand_Interpretation.true_clss_mono",
     "[| ?DD <= ?CC; ?I \<Turnstile>s ?CC |] ==> ?I \<Turnstile>s ?DD",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Herbrand_Interpretation.true_cls_replicate_mset",
     "(?I \<Turnstile> replicate_mset ?n ?L) =
      (?n ~= 0 & ?I \<Turnstile>l ?L)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Herbrand_Interpretation.true_cls_mset_image_mset",
     "(?I \<Turnstile>m image_mset ?f ?A) =
      (\<forall>x:#?A. ?I \<Turnstile> ?f x)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         t_empty))),
    ("Herbrand_Interpretation.true_cls_mset_true_cls",
     "[| ?I \<Turnstile>m ?CC; ?C :# ?CC |] ==> ?I \<Turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Herbrand_Interpretation.true_cls_mset_mono",
     "[| set_mset ?DD <= set_mset ?CC; ?I \<Turnstile>m ?CC |]
      ==> ?I \<Turnstile>m ?DD",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Herbrand_Interpretation.true_cls_mono",
     "[| set_mset ?C <= set_mset ?D; ?I \<Turnstile> ?C |]
      ==> ?I \<Turnstile> ?D",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Herbrand_Interpretation.pos_literal_in_imp_true_cls",
     "[| Pos ?A :# ?C; ?A : ?I |] ==> ?I \<Turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Herbrand_Interpretation.neg_literal_notin_imp_true_cls",
     "[| Neg ?A :# ?C; ?A ~: ?I |] ==> ?I \<Turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Herbrand_Interpretation.true_clss_subclause",
     "[| ?C <=# ?D; ?I \<Turnstile>s {?C} |] ==> ?I \<Turnstile>s {?D}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_hole 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Herbrand_Interpretation.satisfiable_antimono",
     "[| ?CC <= ?DD; satisfiable ?DD |] ==> satisfiable ?CC",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Herbrand_Interpretation.pos_neg_in_imp_true",
     "[| Pos ?A :# ?C; Neg ?A :# ?C |] ==> ?I \<Turnstile> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 1, template_var 2)),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Herbrand_Interpretation.unsatisfiable_mono",
     "[| ?CC <= ?DD; ~ satisfiable ?CC |] ==> ~ satisfiable ?DD",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_predicate (template_app (template_hole 1, t_empty)))],
       template_negation
        (template_predicate (template_app (template_hole 1, t_empty))))),
    ("Herbrand_Interpretation.true_clss_mono_strong",
     "[| ALL D:?DD. EX C:?CC. C <=# D; ?I \<Turnstile>s ?CC |]
      ==> ?I \<Turnstile>s ?DD",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Herbrand_Interpretation.true_cls_mset_mono_strong",
     "[| \<forall>D:#?DD. \<exists>C:#?CC. C <=# D; ?I \<Turnstile>m ?CC |]
      ==> ?I \<Turnstile>m ?DD",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Herbrand_Interpretation.true_lit_iff",
     "(?I \<Turnstile>l ?L) =
      (EX A. ?L = Pos A & A : ?I | ?L = Neg A & A ~: ?I)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Herbrand_Interpretation.true_to_false_imp_ex_neg",
     "[| ?I <= ?J; ?I \<Turnstile> ?C; ~ ?J \<Turnstile> ?C |]
      ==> EX A:?J. Neg A :# ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Herbrand_Interpretation.false_to_true_imp_ex_pos",
     "[| ?I <= ?J; ~ ?I \<Turnstile> ?C; ?J \<Turnstile> ?C |]
      ==> EX A:?J. Pos A :# ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           )))]
