   [("Lazy_List_Chain.chain_LNil", "~ chain ?R LNil",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("Lazy_List_Chain.full_chain_LNil", "~ full_chain ?R LNil",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("Lazy_List_Chain.wit_LNil", "??.Lazy_List_Chain.wit ?R LNil = LNil",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Lazy_List_Chain.LNil_eq_iff_lnull", "(LNil = ?xs) = lnull ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Lazy_List_Chain.prepend_LNil", "prepend ?xs LNil = llist_of ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Lazy_List_Chain.lfinite_prepend",
     "lfinite (prepend ?xs ?ys) = lfinite ?ys",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Lazy_List_Chain.lnull_wit",
     "lnull (??.Lazy_List_Chain.wit ?R ?xs) = lnull ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Lazy_List_Chain.chain_not_lnull", "chain ?R ?xs ==> ~ lnull ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Lazy_List_Chain.chain_imp_chain'",
     "chain ?R ?xs ==> ??.Lazy_List_Chain.chain' ?R ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lazy_List_Chain.chain'_imp_chain",
     "??.Lazy_List_Chain.chain' ?R ?xs ==> chain ?R ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lazy_List_Chain.full_chain_not_lnull",
     "full_chain ?R ?xs ==> ~ lnull ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Lazy_List_Chain.full_chain_imp_chain",
     "full_chain ?R ?xs ==> chain ?R ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lazy_List_Chain.wit_lsingleton",
     "??.Lazy_List_Chain.wit ?R (LCons ?x LNil) = LCons ?x LNil",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Lazy_List_Chain.chain_length_pos", "chain ?R ?xs ==> 0 < llength ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Lazy_List_Chain.full_chain_length_pos",
     "full_chain ?R ?xs ==> 0 < llength ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Lazy_List_Chain.lset_prepend",
     "lset (prepend ?xs ?ys) = set ?xs Un lset ?ys",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Lazy_List_Chain.emb_lfinite",
     "emb ?xs ?ys ==> lfinite ?ys = lfinite ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Lazy_List_Chain.lnull_prepend",
     "lnull (prepend ?xs ?ys) = (?xs = [] & lnull ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app (template_hole 4, template_var 0))
           ))),
    ("Lazy_List_Chain.llength_prepend",
     "llength (prepend ?xs ?ys) = enat (length ?xs) + llength ?ys",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Lazy_List_Chain.prepend_prepend",
     "prepend ?xs (prepend ?ys ?zs) = prepend (?xs @ ?ys) ?zs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Lazy_List_Chain.emb_wit",
     "chain ?R^++ ?xs ==> emb ?xs (??.Lazy_List_Chain.wit ?R ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lazy_List_Chain.emb_lfinite_antimono",
     "[| emb ?xs ?ys; lfinite ?ys |] ==> lfinite ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Lazy_List_Chain.llast_prepend",
     "~ lnull ?ys ==> llast (prepend ?xs ?ys) = llast ?ys",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("Lazy_List_Chain.emb_lmap",
     "emb ?xs ?ys ==> emb (lmap ?f ?xs) (lmap ?f ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lazy_List_Chain.lmap_prepend",
     "lmap ?f (prepend ?xs ?ys) = prepend (map ?f ?xs) (lmap ?f ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Lazy_List_Chain.prepend_LCons",
     "prepend ?xs (LCons ?y ?ys) = prepend (?xs @ [?y]) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("Lazy_List_Chain.llast_wit",
     "chain ?R^++ ?xs ==>
      llast (??.Lazy_List_Chain.wit ?R ?xs) = llast ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Lazy_List_Chain.lhd_wit",
     "chain ?R^++ ?xs ==> lhd (??.Lazy_List_Chain.wit ?R ?xs) = lhd ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Lazy_List_Chain.lfinite_wit",
     "chain ?R^++ ?xs ==>
      lfinite (??.Lazy_List_Chain.wit ?R ?xs) = lfinite ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Lazy_List_Chain.emb_LNil1E",
     "[| emb LNil ?ys; lfinite ?ys ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 0, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.lhd_prepend",
     "lhd (prepend ?xs ?ys) = (if ?xs ~= [] then hd ?xs else lhd ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1))),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 6, template_var 0))
           ))),
    ("Lazy_List_Chain.wfP_iff_no_infinite_down_chain_llist",
     "wfP ?r = (\<nexists>c. ~ lfinite c & chain ?r^--1 c)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("Lazy_List_Chain.inf_chain_ltl_chain",
     "[| chain ?R ?xs; ~ lfinite ?xs |] ==> chain ?R (ltl ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lazy_List_Chain.lfinite_chain_imp_rtranclp_lhd_llast",
     "[| lfinite ?xs; chain ?R ?xs |] ==> ?R^** (lhd ?xs) (llast ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Lazy_List_Chain.inf_chain_ldropn_chain",
     "[| chain ?R ?xs; ~ lfinite ?xs |] ==> chain ?R (ldropn ?n ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lazy_List_Chain.emb_lset_mono",
     "[| emb ?xs ?ys; ?x : lset ?xs |] ==> ?x : lset ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Lazy_List_Chain.emb_Liminf_llist_infinite",
     "[| emb ?Xs ?Ys; ~ lfinite ?Xs |]
      ==> Liminf_llist ?Ys <= Liminf_llist ?Xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Lazy_List_Chain.chain_ldropn",
     "[| chain ?R ?xs; enat ?n < llength ?xs |]
      ==> chain ?R (ldropn ?n ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lazy_List_Chain.full_chain_ldropn",
     "[| full_chain ?R ?xs; enat ?n < llength ?xs |]
      ==> full_chain ?R (ldropn ?n ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lazy_List_Chain.full_chain_iff_chain",
     "full_chain ?R ?xs =
      (chain ?R ?xs & (lfinite ?xs --> (ALL y. ~ ?R (llast ?xs) y)))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 2, t_empty))))),
    ("Lazy_List_Chain.tranclp_imp_exists_finite_chain_list",
     "?R^++ ?x ?y ==> EX xs. chain ?R (llist_of (?x # xs @ [?y]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lazy_List_Chain.infinite_chain_lnth_rel",
     "[| ~ lfinite ?c; chain ?r ?c |]
      ==> ?r (lnth ?c ?i) (lnth ?c (Suc ?i))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_var 1,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Lazy_List_Chain.pick",
     "?R^++ ?x ?y ==>
      chain ?R (llist_of (?x # ??.Lazy_List_Chain.pick ?R ?x ?y @ [?y]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 2),
                         template_var 1),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 0)))))
           ))),
    ("Lazy_List_Chain.lnth_prepend",
     "lnth (prepend ?xs ?ys) ?i =
      (if ?i < length ?xs then ?xs ! ?i else lnth ?ys (?i - length ?xs))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 2, template_var 2)))))),
    ("Lazy_List_Chain.wit_LCons2",
     "??.Lazy_List_Chain.wit ?R (LCons ?x (LCons ?y ?xs)) =
      LCons ?x
       (prepend (??.Lazy_List_Chain.pick ?R ?x ?y)
         (??.Lazy_List_Chain.wit ?R (LCons ?y ?xs)))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))))),
    ("Lazy_List_Chain.chain_inf_llist_if_infinite_chain_function",
     "ALL i. ?r (?f (Suc i)) (?f i) ==>
      ~ lfinite (inf_llist ?f) & chain ?r^--1 (inf_llist ?f)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Lazy_List_Chain.infinite_chain_function_iff_infinite_chain_llist",
     "(EX f. ALL i. ?r (f (Suc i)) (f i)) =
      (EX c. ~ lfinite c & chain ?r^--1 c)",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app (template_hole 5, t_empty))),
    ("Lazy_List_Chain.chain_lnth_rel",
     "[| chain ?R ?xs; enat (Suc ?j) < llength ?xs |]
      ==> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Lazy_List_Chain.emb_Ball_lset_antimono",
     "[| emb ?Xs ?Ys; ALL Y:lset ?Ys. ?x : Y |] ==> ALL X:lset ?Xs. ?x : X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             t_empty)
           ))),
    ("Lazy_List_Chain.full_chain_lnth_rel",
     "[| full_chain ?R ?xs; enat (Suc ?j) < llength ?xs |]
      ==> ?R (lnth ?xs ?j) (lnth ?xs (Suc ?j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 0)),
          template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 2, template_var 0)))
           ))),
    ("Lazy_List_Chain.chain_mono",
     "[| ALL x y. ?R x y --> ?R' x y; chain ?R ?xs |] ==> chain ?R' ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lazy_List_Chain.chain_lappend",
     "[| chain ?R ?xs; chain ?R ?ys; ?R (llast ?xs) (lhd ?ys) |]
      ==> chain ?R (lappend ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_var 2,
                template_app (template_hole 2, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lazy_List_Chain.chain_prepend",
     "[| chain ?R (llist_of ?zs); last ?zs = lhd ?xs; chain ?R ?xs |]
      ==> chain ?R (prepend ?zs (ltl ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Lazy_List_Chain.chain_nontrivE",
     "[| chain ?R (LCons ?x (LCons ?y ?xs));
         [| chain ?R (LCons ?y ?xs); ?R ?x ?y |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 4, template_var 3),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.full_chain_nontrivE",
     "[| full_chain ?R (LCons ?x (LCons ?y ?xs));
         [| full_chain ?R (LCons ?y ?xs); ?R ?x ?y |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 4, template_var 3),
                   template_var 2)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.chain_lmap",
     "[| ALL x y. ?R x y --> ?R' (?f x) (?f y); chain ?R ?xs |]
      ==> chain ?R' (lmap ?f ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Lazy_List_Chain.chain_tranclp_imp_exists_chain",
     "chain ?R^++ ?xs ==>
      EX ys.
         chain ?R ys &
         emb ?xs ys & lhd ys = lhd ?xs & llast ys = llast ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lazy_List_Chain.full_chain_tranclp_imp_exists_full_chain",
     "full_chain ?R^++ ?xs ==>
      EX ys.
         full_chain ?R ys &
         emb ?xs ys & lhd ys = lhd ?xs & llast ys = llast ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lazy_List_Chain.lfinite_less_induct",
     "[| lfinite ?xs;
         !!xs. [| lfinite xs; !!zs. llength zs < llength xs ==> ?P zs |]
               ==> ?P xs |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Lazy_List_Chain.lnth_rel_chain",
     "[| ~ lnull ?xs;
         ALL j.
            enat (j + 1) < llength ?xs -->
            ?R (lnth ?xs j) (lnth ?xs (j + 1)) |]
      ==> chain ?R ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 9, template_var 1))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lazy_List_Chain.emb_LConsE",
     "[| emb (LCons ?z ?zs) ?ys;
         !!ys zs. [| ?ys = prepend zs (LCons ?z ys); emb ?zs ys |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.chain_consE",
     "[| chain ?R (LCons ?x ?xs); ?xs = LNil ==> ?P;
         [| chain ?R ?xs; ?R ?x (lhd ?xs) |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 3, template_var 2),
                   template_app (template_hole 0, template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.full_chain_consE",
     "[| full_chain ?R (LCons ?x ?xs);
         [| ?xs = LNil; ALL y. ~ ?R ?x y |] ==> ?P;
         [| full_chain ?R ?xs; ?R ?x (lhd ?xs) |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 3)],
          template_implication
           ([template_predicate (template_app (template_hole 2, t_empty))],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 1)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_var 3, template_var 2),
                   template_app (template_hole 0, template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.emb_Liminf_llist_mono_aux",
     "[| emb ?Xs ?Ys; ~ lfinite ?Xs; ~ lfinite ?Ys;
         ALL j>=?i. ?x : lnth ?Ys j |]
      ==> ALL j>=?i. ?x : lnth ?Xs j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 2))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Lazy_List_Chain.lfinite_prepend_induct",
     "[| lfinite ?xs; ?P LNil;
         !!xs. [| lfinite xs;
                  !!zs. EX ys. xs = prepend ys zs & ys ~= [] ==> ?P zs |]
               ==> ?P xs |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_var 0, template_hole 8)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Lazy_List_Chain.emb_LNil2E",
     "[| emb ?xs LNil; ?xs = LNil ==> ?P;
         !!xs ys x zs.
            [| ?xs = LCons x xs; LNil = prepend zs (LCons x ys);
               emb xs ys |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)
            ),
        template_implication
         ([template_equation (template_var 1, template_hole 6)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Lazy_List_Chain.chain_prepend_coinduct",
     "[| ?X ?x;
         !!x. ?X x ==>
              (EX z. x = LCons z LNil) |
              (EX y xs zs.
                  x = LCons y (prepend zs xs) &
                  (?X xs | chain ?R xs) &
                  chain ?R (llist_of (y # zs @ [lhd xs]))) |]
      ==> chain ?R ?x",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0), template_var 1)
           ))),
    ("Lazy_List_Chain.emb_prepend_coinduct",
     "[| ?X ?x1.0 ?x2.0;
         !!x1 x2.
            ?X x1 x2 ==>
            (EX xs. x1 = LNil & x2 = xs & lfinite xs) |
            (EX xs ys x zs.
                x1 = LCons x xs &
                x2 = prepend zs (LCons x ys) &
                (prepend_cong1 (?X xs) ys | emb xs ys)) |]
      ==> emb ?x1.0 ?x2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 1), template_var 0)
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
