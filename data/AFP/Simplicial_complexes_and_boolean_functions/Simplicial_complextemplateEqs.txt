   [("Simplicial_complex.card_ceros_count_UNIV",
     "card (ceros_of_boolean_input ?a) + count_true ?a = dim_vec ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Simplicial_complex.Pow_singleton", "Pow {?a} = {{}, {?a}}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_hole 0)))),
    ("Simplicial_complex.ceros_of_boolean_input_complementary",
     "ceros_of_boolean_input ?v = {x. x < dim_vec ?v} - {x. ?v $ x}",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 3, t_empty)))),
    ("Simplicial_complex.card_complementary",
     "card (ceros_of_boolean_input ?v) +
      card {x. x < dim_vec ?v & ?v $ x = True} =
      dim_vec ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0))),
         template_app
          (template_hole 8, template_app (template_hole 6, t_empty))),
       template_app (template_hole 3, template_var 0))),
    ("Simplicial_complex.Pow_pair",
     "Pow {?a, ?b} = {{}, {?a}, {?b}, {?a, ?b}}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_hole 0)))))),
    ("Simplicial_complex.UNIV_disjoint",
     "{x. x < dim_vec ?a & ?a $ x = True} Int
      {x. x < dim_vec ?a & ?a $ x = False} =
      {}",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, t_empty)),
         template_app (template_hole 8, t_empty)),
       template_hole 0)),
    ("Simplicial_complex.UNIV_union",
     "{x. x < dim_vec ?a & ?a $ x = True} Un
      {x. x < dim_vec ?a & ?a $ x = False} =
      {x. x < dim_vec ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app (template_hole 7, t_empty)),
       template_app (template_hole 7, t_empty))),
    ("Simplicial_complex.card_UNIV_union",
     "card {x. x < dim_vec ?a & ?a $ x = True} +
      card {x. x < dim_vec ?a & ?a $ x = False} =
      card {x. x < dim_vec ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8, template_app (template_hole 7, t_empty))),
         template_app
          (template_hole 8, template_app (template_hole 7, t_empty))),
       template_app
        (template_hole 8, template_app (template_hole 7, t_empty))))]
