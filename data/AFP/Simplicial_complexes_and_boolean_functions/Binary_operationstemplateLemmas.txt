   [("Binary_operations.set_fst_simp",
     "?y ~= {} ==> set_fst (?x \<times> ?y) = ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)),
         template_var 0))),
    ("Binary_operations.eq_inter_and",
     "simplicial_complex_induced_by_monotone_boolean_function ?n
       (bool_fun_and ?n ?f ?g) =
      simplicial_complex_induced_by_monotone_boolean_function ?n ?f Int
      simplicial_complex_induced_by_monotone_boolean_function ?n ?g",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Binary_operations.eq_union_or",
     "simplicial_complex_induced_by_monotone_boolean_function ?n
       (bool_fun_or ?n ?f ?g) =
      simplicial_complex_induced_by_monotone_boolean_function ?n ?f Un
      simplicial_complex_induced_by_monotone_boolean_function ?n ?g",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Binary_operations.simplicial_complex_ast_implies_fst_true",
     "?\<gamma>
      : simplicial_complex_induced_by_monotone_boolean_function_ast ?nn
         (bool_fun_ast ?nn ?f) ==>
      fst ?f
       (simplicial_complex.bool_vec_from_simplice (fst ?nn)
         (fst ?\<gamma>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Binary_operations.simplicial_complex_ast_implies_snd_true",
     "?\<gamma>
      : simplicial_complex_induced_by_monotone_boolean_function_ast ?nn
         (bool_fun_ast ?nn ?f) ==>
      snd ?f
       (simplicial_complex.bool_vec_from_simplice (snd ?nn)
         (snd ?\<gamma>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Binary_operations.eq_ast",
     "simplicial_complex_induced_by_monotone_boolean_function_ast (?n, ?m)
       (bool_fun_ast (?n, ?m) ?f) =
      set_ast
       (simplicial_complex_induced_by_monotone_boolean_function ?n (fst ?f))
       (simplicial_complex_induced_by_monotone_boolean_function ?m
         (snd ?f))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Binary_operations.snd_es_simplice",
     "?a : simplicial_complex_induced_by_monotone_boolean_function_ast ?n
            ?f ==>
      EX x y. ?f (x, y) & ceros_of_boolean_input y = snd ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Binary_operations.fst_es_simplice",
     "?a : simplicial_complex_induced_by_monotone_boolean_function_ast ?n
            ?f ==>
      EX x y. ?f (x, y) & ceros_of_boolean_input x = fst ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty))))]
