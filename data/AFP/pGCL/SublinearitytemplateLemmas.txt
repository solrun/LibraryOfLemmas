   [("Sublinearity.sublinear_wp_Apply", "sublinear (wp (Apply ?f))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Sublinearity.sublinear_wp_Embed",
     "sublinear ?t ==> sublinear (wp (Embed ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Sublinearity.sublinear_wp_Bind",
     "(!!s. sublinear (wp (?a (?f s)))) ==> sublinear (wp (Bind ?f ?a))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Sublinearity.sublinear_iterates",
     "[| healthy (wp ?body); sublinear (wp ?body) |]
      ==> sublinear (iterates ?body ?G ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Sublinearity.sublinear_wp_repeat",
     "[| sublinear (wp ?p); healthy (wp ?p) |]
      ==> sublinear (wp (repeat ?n ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Sublinearity.sublinear_wp_DC",
     "[| sublinear (wp ?x); sublinear (wp ?y) |]
      ==> sublinear (wp (?x \<Sqinter> ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Sublinearity.sublinear_wp_PC",
     "[| sublinear (wp ?x); sublinear (wp ?y); unitary ?P |]
      ==> sublinear (wp (?x \<^bsub>?P\<^esub>\<oplus> ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)))
           ))),
    ("Sublinearity.sublinear_wp_Seq",
     "[| sublinear (wp ?x); sublinear (wp ?y); healthy (wp ?x);
         healthy (wp ?y) |]
      ==> sublinear (wp (?x ;; ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Sublinearity.sub_distrib_wp_loop",
     "[| sub_distrib (wp ?body); healthy (wp ?body);
         nearly_healthy (wlp ?body) |]
      ==> sub_distrib
           (wp (\<mu>x.
                   ?body ;;
                   x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_hole 8, template_app (template_hole 4, t_empty)))
           ))),
    ("Sublinearity.sub_add_wp_loop",
     "[| sublinear (wp ?body); bd_cts (wp ?body); healthy (wp ?body) |]
      ==> sub_add
           (wp (\<mu>x.
                   ?body ;;
                   x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 8, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 8, template_app (template_hole 4, t_empty)))
           ))),
    ("Sublinearity.sublinear_wp_loop",
     "[| healthy (wp ?body); nearly_healthy (wlp ?body);
         sublinear (wp ?body); bd_cts (wp ?body) |]
      ==> sublinear
           (wp (\<mu>x.
                   ?body ;;
                   x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 9, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 9, template_app (template_hole 4, t_empty)))
           ))),
    ("Sublinearity.sublinear_wp_SetDC",
     "[| !!s a. a : ?S s ==> sublinear (wp (?p a));
         !!s a. a : ?S s ==> healthy (wp (?p a)); !!s. ?S s ~= {} |]
      ==> sublinear (wp (SetDC ?p ?S))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Sublinearity.sublinear_wp_SetPC",
     "[| !!s a. a : supp (?P s) ==> sublinear (wp (?p a));
         !!s. sum (?P s) (supp (?P s)) <= 1; !!s a. 0 <= ?P s a;
         !!s. finite (supp (?P s)) |]
      ==> sublinear (wp (SetPC ?p ?P))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           )))]
