   [("Loops.wlp_invD",
     "wlp_inv ?G ?body ?I ==>
      \<guillemotleft> ?G \<guillemotright> ?s * ?I ?s <= wlp ?body ?I ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Loops.wlp_invI",
     "(!!s. \<guillemotleft> ?G \<guillemotright> s * ?I s
            <= wlp ?body ?I s) ==>
      wlp_inv ?G ?body ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Loops.wp_invI",
     "(!!s. \<guillemotleft> ?G \<guillemotright> s * ?I s
            <= wp ?body ?I s) ==>
      wp_inv ?G ?body ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Loops.wp_inv_stdD",
     "[| wp_inv ?G ?body \<guillemotleft> ?I \<guillemotright>;
         healthy (wp ?body) |]
      ==> \<guillemotleft> ?G \<guillemotright> &&
          \<guillemotleft> ?I \<guillemotright> \<tturnstile> wp ?body
                         \<guillemotleft> ?I \<guillemotright>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 2)),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 4, template_var 0))))),
    ("Loops.wp_loop_nguard",
     "[| healthy (wp ?body); sound ?P; ~ ?G ?s |]
      ==> wp (\<mu>x.
                 ?body ;;
                 x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
           ?P ?s =
          ?P ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8, template_app (template_hole 4, t_empty)),
             template_var 2),
           template_var 0),
         template_app (template_var 2, template_var 0)))),
    ("Loops.wlp_Loop",
     "[| well_def ?body; unitary ?I; wlp_inv ?G ?body ?I |]
      ==> ?I \<tturnstile> wlp (\<mu>x.
                                   ?body ;;
                                   x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
                            (%s. \<guillemotleft> \<N> ?G \<guillemotright>
                                  s *
                                 ?I s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 0),
                template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           t_empty)))),
    ("Loops.wp_loop_guard",
     "[| healthy (wp ?body); sound ?P; ?G ?s |]
      ==> wp (\<mu>x.
                 ?body ;;
                 x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
           ?P ?s =
          wp (?body ;;
              (\<mu>x.
                  ?body ;;
                  x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))
           ?P ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7, template_app (template_hole 4, t_empty)),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 4, t_empty))),
             template_var 2),
           template_var 0)))),
    ("Loops.wp_Loop",
     "[| well_def ?body; wlp_inv ?G ?body ?I; unitary ?I |]
      ==> ?I &&
          wp (\<mu>x.
                 ?body ;;
                 x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
           (%s. 1) \<tturnstile> wp (\<mu>x.
  ?body ;;
  x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
                                  (%s.
\<guillemotleft> \<N> ?G \<guillemotright> s * ?I s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 1),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 9, template_var 0),
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             t_empty)),
         template_app
          (template_app
            (template_hole 8, template_app (template_hole 7, t_empty)),
           t_empty)))),
    ("Loops.wp_loop_unfold",
     "[| sound ?P; healthy (wp ?body) |]
      ==> wp (\<mu>x.
                 ?body ;;
                 x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
           ?P =
          (%s. \<guillemotleft> \<N> ?G \<guillemotright> s * ?P s +
               \<guillemotleft> ?G \<guillemotright> s *
               wp ?body
                (wp (\<mu>x.
                        ?body ;;
                        x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
                  ?P)
                s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9, template_app (template_hole 7, t_empty)),
           template_var 2),
         t_empty)))]
