   [("Healthiness.healthy_wp_Apply", "healthy (wp (Apply ?f))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Healthiness.nearly_healthy_wlp_Apply",
     "nearly_healthy (wlp (Apply ?f))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Healthiness.healthy_wp_Embed",
     "healthy ?t ==> healthy (wp (Embed ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Healthiness.nearly_healthy_wlp_Embed",
     "nearly_healthy ?t ==> nearly_healthy (wlp (Embed ?t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Healthiness.healthy_wp_repeat",
     "healthy (wp ?a) ==> healthy (wp (repeat ?n ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.nearly_healthy_wlp_repeat",
     "nearly_healthy (wlp ?a) ==> nearly_healthy (wlp (repeat ?n ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.healthy_wp_Bind",
     "(!!s. healthy (wp (?p (?f s)))) ==> healthy (wp (Bind ?f ?p))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.nearly_healthy_wlp_Bind",
     "(!!s. nearly_healthy (wlp (?p (?f s)))) ==>
      nearly_healthy (wlp (Bind ?f ?p))",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.healthy_wp_AC",
     "[| healthy (wp ?f); healthy (wp ?g) |]
      ==> healthy (wp (?f \<Squnion> ?g))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Healthiness.healthy_wp_DC",
     "[| healthy (wp ?f); healthy (wp ?g) |]
      ==> healthy (wp (?f \<Sqinter> ?g))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Healthiness.healthy_wp_Seq",
     "[| healthy (wp ?t); healthy (wp ?u) |] ==> healthy (wp (?t ;; ?u))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Healthiness.nearly_healthy_wlp_AC",
     "[| nearly_healthy (wlp ?f); nearly_healthy (wlp ?g) |]
      ==> nearly_healthy (wlp (?f \<Squnion> ?g))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Healthiness.nearly_healthy_wlp_DC",
     "[| nearly_healthy (wlp ?f); nearly_healthy (wlp ?g) |]
      ==> nearly_healthy (wlp (?f \<Sqinter> ?g))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Healthiness.nearly_healthy_wlp_Seq",
     "[| nearly_healthy (wlp ?t); nearly_healthy (wlp ?u) |]
      ==> nearly_healthy (wlp (?t ;; ?u))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Healthiness.healthy_wp_loop",
     "healthy (wp ?body) ==>
      healthy
       (wp (\<mu>x.
               ?body ;;
               x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5, template_app (template_hole 4, t_empty)))
           ))),
    ("Healthiness.nearly_healthy_wlp_loop",
     "nearly_healthy (wlp ?body) ==>
      nearly_healthy
       (wlp (\<mu>x.
                ?body ;;
                x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5, template_app (template_hole 4, t_empty)))
           ))),
    ("Healthiness.healthy_wp_PC",
     "[| healthy (wp ?f); healthy (wp ?g); unitary ?P |]
      ==> healthy (wp (?f \<^bsub>?P\<^esub>\<oplus> ?g))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.nearly_healthy_wlp_PC",
     "[| nearly_healthy (wlp ?f); nearly_healthy (wlp ?g); unitary ?P |]
      ==> nearly_healthy (wlp (?f \<^bsub>?P\<^esub>\<oplus> ?g))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.wp_loop_sound",
     "[| sound ?P; healthy (wp ?body) |]
      ==> sound
           (wp (\<mu>x.
                   ?body ;;
                   x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
             ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_var 2))
           ))),
    ("Healthiness.lfp_loop_sound",
     "[| healthy (wp ?body); sound ?P |]
      ==> sound
           (lfp_exp
             (%Q s. \<guillemotleft> ?G \<guillemotright> s * wp ?body Q s +
                    \<guillemotleft> \<N> ?G \<guillemotright> s * ?P s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))
           ))),
    ("Healthiness.healthy_wp_SetDC",
     "[| !!x s. x : ?S s ==> healthy (wp (?prog x)); !!s. EX x. x : ?S s |]
      ==> healthy (wp (SetDC ?prog ?S))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.nearly_healthy_wlp_SetDC",
     "[| !!x s. x : ?S s ==> nearly_healthy (wlp (?prog x));
         !!s. EX x. x : ?S s |]
      ==> nearly_healthy (wlp (SetDC ?prog ?S))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.wp_loop_step_sound",
     "[| healthy (wp ?body); !!P. sound P ==> sound (?t P); sound ?P |]
      ==> sound
           (wp (?body ;;
                Embed
                 ?t \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
             ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app (template_hole 2, template_var 2))),
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Healthiness.wlp_loop_step_unitary",
     "[| nearly_healthy (wlp ?body); !!P. unitary P ==> unitary (?t P);
         unitary ?P |]
      ==> unitary
           (wlp (?body ;;
                 Embed
                  ?t \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
             ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app (template_hole 2, template_var 2))),
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Healthiness.lfp_loop_fp",
     "[| healthy (wp ?body); sound ?P |]
      ==> %s. \<guillemotleft> ?G \<guillemotright> s *
              wp ?body (%s. bound_of ?P) s +
              \<guillemotleft> \<N> ?G \<guillemotright> s *
              ?P s \<tturnstile> %s. bound_of ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_inequation (less_equals, t_empty, t_empty))),
    ("Healthiness.wp_Loop1",
     "[| sound ?P; healthy (wp ?body) |]
      ==> wp (\<mu>x.
                 ?body ;;
                 x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
           ?P =
          lfp_exp
           (%Q s. \<guillemotleft> ?G \<guillemotright> s * wp ?body Q s +
                  \<guillemotleft> \<N> ?G \<guillemotright> s * ?P s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10, template_app (template_hole 8, t_empty)),
           template_var 2),
         template_app (template_hole 3, t_empty)))),
    ("Healthiness.wlp_Loop1",
     "[| unitary ?P; nearly_healthy (wlp ?body) |]
      ==> wlp (\<mu>x.
                  ?body ;;
                  x \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip)
           ?P =
          gfp_exp
           (%Q s. \<guillemotleft> ?G \<guillemotright> s * wlp ?body Q s +
                  \<guillemotleft> \<N> ?G \<guillemotright> s * ?P s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10, template_app (template_hole 8, t_empty)),
           template_var 2),
         template_app (template_hole 3, t_empty)))),
    ("Healthiness.healthy_wp_SetPC",
     "[| !!a s. a : supp (?p s) ==> healthy (wp (?f a)); !!s. sound (?p s);
         !!s. sum (?p s) (supp (?p s)) <= 1 |]
      ==> healthy (wp (SetPC ?f ?p))",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.nearly_healthy_wlp_SetPC",
     "[| !!a s. a : supp (?p s) ==> nearly_healthy (wlp (?f a));
         !!s. sound (?p s); !!s. sum (?p s) (supp (?p s)) <= 1 |]
      ==> nearly_healthy (wlp (SetPC ?f ?p))",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Healthiness.wp_loop_step_mono",
     "[| healthy (wp ?body); le_trans ?t ?u; !!P. sound P ==> sound (?t P);
         !!P. sound P ==> sound (?u P) |]
      ==> le_trans
           (wp (?body ;;
                Embed
                 ?t \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))
           (wp (?body ;;
                Embed
                 ?u \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app (template_hole 2, template_var 2))),
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0))),
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app (template_hole 2, template_var 1))),
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)))
           ))),
    ("Healthiness.wlp_loop_step_mono",
     "[| nearly_healthy (wlp ?body); le_utrans ?t ?u;
         !!P. unitary P ==> unitary (?t P);
         !!P. unitary P ==> unitary (?u P) |]
      ==> le_utrans
           (wlp (?body ;;
                 Embed
                  ?t \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))
           (wlp (?body ;;
                 Embed
                  ?u \<^bsub>\<guillemotleft> ?G \<guillemotright>\<^esub>\<oplus> Skip))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_app (template_hole 2, template_var 2))),
                     template_app (template_hole 1, template_var 0)),
                   template_hole 0))),
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app (template_hole 2, template_var 1))),
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)))
           ))),
    ("Healthiness.lfp_loop_greatest",
     "[| !!R. [| %s. \<guillemotleft> ?G \<guillemotright> s *
                     wp ?body R s +
                     \<guillemotleft> \<N> ?G \<guillemotright> s *
                     ?P s \<tturnstile> R;
                 sound R |]
              ==> ?Q \<tturnstile> R;
         healthy (wp ?body); sound ?P; sound ?Q |]
      ==> ?Q \<tturnstile> lfp_exp
                            (%Q s. \<guillemotleft> ?G \<guillemotright> s *
                                   wp ?body Q s +
                                   \<guillemotleft> \<N>
               ?G \<guillemotright>
                                    s *
                                   ?P s)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, t_empty))))]
