   [("Diagram.dgr_demonic_mono", "dmono (dgr_demonic ?Q)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Diagram.dmono_mono", "dmono ?D ==> mono (?D ?ij)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 0, template_app (template_var 1, template_var 0))
           ))),
    ("Diagram.mono_pt", "dmono ?D ==> mono (pt ?D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Diagram.mono_mono_dgr", "dmono ?D ==> mono_mono (dgr ?D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Diagram.mono_step", "dmono ?D ==> mono (step ?D)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Diagram.grd_dgr",
     "grd (step ?D) ?i = \<Squnion>{P. EX j. P = grd (?D (?i, j))}",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Diagram.grd_dgr_set",
     "grd (step ?D) ?i = \<Union> {P. EX j. P = grd (?D (?i, j))}",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Diagram.not_grd_dgr2",
     "(?a ~: grd (step ?D) ?i) = (ALL j. ?a ~: grd (?D (?i, j)))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 0))),
       template_app (template_hole 2, t_empty))),
    ("Diagram.not_grd_dgr",
     "(?a : - grd (step ?D) ?i) = (ALL j. ?a ~: grd (?D (?i, j)))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_var 0))),
       template_app (template_hole 3, t_empty))),
    ("Diagram.hoare_step",
     "(ALL i j. \<Turnstile> ?P i{| ?D (i, j) |}?Q j) =
      \<Turnstile> ?P{| step ?D |}?Q",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Diagram.hoare_diagram",
     "[| dmono ?D;
         ALL w i j. \<Turnstile> ?X w i{| ?D (i, j) |}Sup_less ?X w j |]
      ==> \<Turnstile> \<Squnion>range
                                  ?X{| pt
  ?D |}(\<Squnion>range ?X \<sqinter> - grd (step ?D))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5))),
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5))),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)))))
           )))]
