   [("Hoare.post_top", "post_fun ?p ?p = \<top>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Hoare.assert_Sup", "{. \<Squnion>?X .} = \<Squnion>(assert ` ?X)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Hoare.Sup_less_assert",
     "Sup_less (%w. {. ?p w .}) ?w = {. Sup_less ?p ?w .}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Hoare.hoare_assume",
     "\<Turnstile> ?P{| [. ?R .] |}?Q = (?P \<sqinter> ?R <= ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Hoare.assert_Sup_range",
     "{. \<Squnion>range ?p .} = \<Squnion>range (assert o ?p)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 6),
               template_var 0)),
           template_hole 3)))),
    ("Hoare.Sup_less_comp",
     "Sup_less ?P ?w o ?S = Sup_less (%w. ?P w o ?S) ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Hoare.hoare_Sup",
     "(ALL p:?P. \<Turnstile> p{| ?S |}?q) =
      \<Turnstile> \<Squnion>?P{| ?S |}?q",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Hoare.Sup_range_comp", "\<Squnion>range ?p o ?S = (SUP w. ?p w o ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_hole 2)))),
    ("Hoare.hoare_demonic",
     "\<Turnstile> ?P{| [: ?R :] |}?Q = (ALL s. s : ?P --> ?R s <= ?Q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Hoare.hoare_choice",
     "\<Turnstile> ?p{| ?S \<sqinter> ?T |}?q =
      (\<Turnstile> ?p{| ?S |}?q & \<Turnstile> ?p{| ?T |}?q)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1),
           template_var 0))))]
