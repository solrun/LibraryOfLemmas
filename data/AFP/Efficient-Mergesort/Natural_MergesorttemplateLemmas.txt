   [("Natural_Mergesort.ascP_Cons", "ascP ((#) ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Natural_Mergesort.sorted_nmsort", "sorted (nmsort ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Natural_Mergesort.mset_nmsort", "mset (nmsort ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Natural_Mergesort.C_merge_adj'",
     "C_merge_adj ?xss <= length (concat ?xss)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Natural_Mergesort.length_runs", "length (runs ?xs) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Natural_Mergesort.C_asc", "C_asc ?a ?ys <= length ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Natural_Mergesort.C_desc", "C_desc ?a ?ys <= length ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Natural_Mergesort.length_concat_runs",
     "length (concat (runs ?xs)) = length ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("Natural_Mergesort.C_runs", "C_runs ?xs <= length ?xs - 1",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Natural_Mergesort.length_concat_merge_adj",
     "length (concat (merge_adj ?xss)) = length (concat ?xss)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)))),
    ("Natural_Mergesort.sorted_runs", "Ball (set (runs ?xs)) sorted",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty)
         )),
    ("Natural_Mergesort.mset_runs", "mset_mset (runs ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))),
       template_app (template_hole 2, template_var 0))),
    ("Natural_Mergesort.ascP_comp_Cons", "ascP ?f ==> ascP (?f o (#) ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Natural_Mergesort.length_desc",
     "length (desc ?a ?xs ?ys) <= 1 + length ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Natural_Mergesort.runs_ne", "?xs ~= [] ==> runs ?xs ~= []",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Natural_Mergesort.length_concat_desc",
     "length (concat (desc ?a ?xs ?ys)) = 1 + length ?xs + length ?ys",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 4, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Natural_Mergesort.length_asc",
     "ascP ?f ==> length (asc ?a ?f ?ys) <= 1 + length ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Natural_Mergesort.ascP_simp", "ascP ?f ==> ?f [?x] = ?f [] @ [?x]",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 1, template_hole 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Natural_Mergesort.C_merge_all'",
     "int (C_merge_all ?xss)
      <= int (length (concat ?xss)) *
         \<lceil>log 2 (real (length ?xss))\<rceil>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 11,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)))),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("Natural_Mergesort.mset_desc",
     "mset_mset (desc ?x ?xs ?ys) = {#?x#} + mset ?xs + mset ?ys",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_app (template_hole 5, template_var 1))),
         template_app (template_hole 5, template_var 0)))),
    ("Natural_Mergesort.length_concat_asc",
     "ascP ?f ==>
      length (concat (asc ?a ?f ?ys)) = 1 + length (?f []) + length ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 5,
                 template_app (template_var 2, template_hole 0)))),
           template_app (template_hole 5, template_var 0))))),
    ("Natural_Mergesort.log2_mono",
     "[| 0 < ?x; ?x <= ?y |] ==> log 2 ?x <= log 2 ?y",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Natural_Mergesort.mset_asc",
     "ascP ?f ==>
      mset_mset (asc ?x ?f ?ys) = {#?x#} + mset (?f []) + mset ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_app
                (template_hole 6,
                 template_app (template_var 2, template_hole 0)))),
           template_app (template_hole 6, template_var 0))))),
    ("Natural_Mergesort.C_nmsort",
     "length ?xs = ?n ==>
      int (C_nmsort ?xs)
      <= int ?n + int ?n * \<lceil>log 2 (real ?n)\<rceil>",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 1), template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 9, template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 9, template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_app (template_hole 0, template_var 0)))))))),
    ("Natural_Mergesort.sorted_desc",
     "[| sorted ?xs; ALL x:set ?xs. ?a <= x |]
      ==> Ball (set (desc ?a ?xs ?ys)) sorted",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2),
                   template_var 0))),
             t_empty)
           ))),
    ("Natural_Mergesort.sorted_asc",
     "[| ascP ?f; sorted (?f []); ALL x:set (?f []). x <= ?a |]
      ==> Ball (set (asc ?a ?f ?ys)) sorted",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app (template_var 2, template_hole 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_var 2, template_hole 5))),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2),
                   template_var 0))),
             t_empty)
           )))]
