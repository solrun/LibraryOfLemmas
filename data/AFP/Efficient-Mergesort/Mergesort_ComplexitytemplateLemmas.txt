   [("Mergesort_Complexity.c_merge_pairs",
     "c_merge_pairs ?key ?xss <= length (concat ?xss)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Mergesort_Complexity.c_asc", "c_asc ?key ?x ?ys <= length ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Mergesort_Complexity.c_desc", "c_desc ?key ?x ?ys <= length ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Mergesort_Complexity.desc_ne", "desc ?key ?a ?xs ?ys ~= []",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("Mergesort_Complexity.length_concat_sequences",
     "length (concat (sequences ?key ?xs)) = length ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app (template_hole 2, template_var 0))),
    ("Mergesort_Complexity.c_sequences",
     "c_sequences ?key ?xs <= length ?xs - 1",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Mergesort_Complexity.c_merge",
     "c_merge ?key ?xs ?ys <= length ?xs + length ?ys",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Mergesort_Complexity.asc_ne", "ascP ?f ==> asc ?key ?a ?f ?ys ~= []",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0),
             template_hole 0)
           ))),
    ("Mergesort_Complexity.sequences_ne",
     "?xs ~= [] ==> sequences ?key ?xs ~= []",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("Mergesort_Complexity.length_concat_desc",
     "length (concat (desc ?key ?a ?xs ?ys)) = 1 + length ?xs + length ?ys",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 4, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Mergesort_Complexity.c_merge_all",
     "int (c_merge_all ?key ?xss)
      <= int (length (concat ?xss)) *
         \<lceil>log 2 (real (length ?xss))\<rceil>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 11,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)))),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("Mergesort_Complexity.length_concat_asc",
     "ascP ?f ==>
      length (concat (asc ?key ?a ?f ?ys)) =
      1 + length (?f []) + length ?ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 3))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1),
                 template_var 3),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_hole 5,
                 template_app (template_var 3, template_hole 0)))),
           template_app (template_hole 5, template_var 0))))),
    ("Mergesort_Complexity.log2_mono",
     "[| 0 < ?x; ?x <= ?y |] ==> log 2 ?x <= log 2 ?y",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Mergesort_Complexity.c_msort",
     "length ?xs = ?n ==>
      int (c_msort ?key ?xs)
      <= int ?n + int ?n * \<lceil>log 2 (real ?n)\<rceil>",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2), template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 9, template_var 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 9, template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_app (template_hole 0, template_var 1))))))))]
