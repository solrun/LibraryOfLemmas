Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.MiscMoreTemplates" via "Draft.Misc")
Loading theory "HOL-Library.Cancellation" (required by "Draft.MiscMoreTemplates" via "Draft.Misc" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.MiscMoreTemplates" via "Draft.Misc")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.128s elapsed time, 0.499s cpu time, 0.045s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
structure Eisbach_Rule_Insts: sig end
### theory "HOL-Library.Infinite_Set"
### 0.315s elapsed time, 1.231s cpu time, 0.112s GC time
Loading theory "HOL-Library.Option_ord" (required by "Draft.MiscMoreTemplates" via "Draft.Misc")
instantiation
  option :: (preorder) preorder
  less_eq_option == less_eq :: 'a option => 'a option => bool
  less_option == less :: 'a option => 'a option => bool
Found termination order: "size_list size <*mlex*> {}"
instantiation
  option :: (order) order_bot
  bot_option == bot :: 'a option
instantiation
  option :: (order_top) order_top
  top_option == top :: 'a option
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
instantiation
  option :: (inf) inf
  inf_option == inf :: 'a option => 'a option => 'a option
instantiation
  option :: (sup) sup
  sup_option == sup :: 'a option => 'a option => 'a option
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
instantiation
  option :: (complete_lattice) complete_lattice
  Inf_option == Inf :: 'a option set => 'a option
  Sup_option == Sup :: 'a option set => 'a option
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Library.Nat_Bijection"
### 0.339s elapsed time, 1.327s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Eisbach.Eisbach"
### 0.495s elapsed time, 1.937s cpu time, 0.162s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.503s elapsed time, 1.975s cpu time, 0.162s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.MiscMoreTemplates" via "Draft.Misc")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Option_ord"
### 0.303s elapsed time, 1.216s cpu time, 0.138s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
### theory "HOL-Library.Set_Algebras"
### 0.230s elapsed time, 0.946s cpu time, 0.088s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  flat :: "'a list stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.148s elapsed time, 4.347s cpu time, 0.945s GC time
\<Sqinter> (Sup ` ?A) = \<Squnion> (Inf ` {f ` ?A |f. ALL Y:?A. f Y : Y})
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
### theory "HOL-Library.BigO"
### 1.090s elapsed time, 3.892s cpu time, 0.839s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.113s elapsed time, 6.307s cpu time, 1.168s GC time
Loading theory "Draft.Templates" (required by "Draft.MiscMoreTemplates" via "Draft.ExtrEqs")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MiscMoreTemplates")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.552s elapsed time, 1.161s cpu time, 0.138s GC time
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.264s elapsed time, 8.416s cpu time, 1.458s GC time
Loading theory "HOL-ex.Quicksort" (required by "Draft.MiscMoreTemplates" via "Draft.Misc")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "length <*mlex*> {}"
### theory "HOL-ex.Quicksort"
### 0.595s elapsed time, 1.282s cpu time, 0.862s GC time
Loading theory "Draft.Misc" (required by "Draft.MiscMoreTemplates")
(0 < length ?xs) = (?xs ~= [])
locale Assoc
  fixes f :: "'a => 'a => 'a"
  assumes "Assoc f"
locale AC
  fixes f :: "'a => 'a => 'a"
  assumes "AC f"
locale su_rel_fun
  fixes F :: "('a * 'b) set"
    and f :: "'a => 'b"
  assumes "su_rel_fun F f"
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
### Ignoring duplicate rewrite rule:
### dom (%x. Some (?f1 x)) == UNIV
consts
  filter_rev_aux :: "'a list => ('a => bool) => 'a list => 'a list"
### Missing patterns in function definition:
### !!a v va. zipf a (v # va) [] = undefined
### !!a v va. zipf a [] (v # va) = undefined
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
### Code generator: dropping subsumed code equation
### quicksort (?x # ?xs) ==
### quicksort (filter (%y. y < ?x) ?xs) @
### [?x] @ quicksort (filter ((<=) ?x) ?xs)
### Code generator: dropping subsumed code equation
### quicksort [] == []
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. length (snd (snd p))) <*mlex*>
   (%p. length (fst (snd p))) <*mlex*> {}"
"merge"
  :: "'a"
Found termination order:
  "(%p. length (snd p)) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
Found termination order: "{}"
consts
  the_default :: "'a => 'a option => 'a"
class ccpo = Sup + order +
  assumes
    "ccpo_Sup_upper":
      "!!A x.
          [| Complete_Partial_Order.chain (<=) A; x : A |] ==> x <= Sup A"
  assumes
    "ccpo_Sup_least":
      "!!A z.
          [| Complete_Partial_Order.chain (<=) A; !!x. x : A ==> x <= z |]
          ==> Sup A <= z"
### theory "Draft.Misc"
### 3.081s elapsed time, 4.276s cpu time, 1.619s GC time
Loading theory "Draft.MiscMoreTemplates"
val templateLemmas =
   [("Misc.CNV_I", "CNV ?x ?x",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Misc.finite_atLeastAtMost_integer", "finite {?l..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Misc.finite_atLeastZeroLessThan_integer", "finite {0..<?u}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Misc.finite_atLeastLessThan_integer", "finite {?l..<?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Misc.finite_greaterThanAtMost_integer", "finite {?l<..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Misc.finite_greaterThanLessThan_integer", "finite {?l<..<?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Misc.inj_on_fst_map_to_set", "inj_on fst (map_to_set ?m)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Misc.trancl_sub", "?R <= ?R^+",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Misc.r_le_rtrancl", "?S <= ?S^*",
     template_inequation
      (less_equals, template_var 0,
       template_app (template_hole 0, template_var 0))),
    ("Misc.curry_uncurry_id", "curry (uncurry ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.restrict_map_UNIV", "?f |` UNIV = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Misc.map_to_set_inverse", "set_to_map (map_to_set ?m) = ?m",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.uncurry_curry_id", "uncurry (curry ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.list_collect_set_simps", "list_collect_set ?f [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Misc.rel_restrict_empty", "rel_restrict ?R {} = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_simps", "mergesort_by_rel ?R [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Misc.sorted_mergesort_by_rel", "sorted (mergesort_by_rel (<=) ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_hole 1),
             template_var 0))
         )),
    ("Misc.le_map_restrict", "?m |` ?X <= ?m",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("Misc.rel_restrict_sub", "rel_restrict ?R ?A <= ?R",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("Misc.restrict_map_self", "?m |` dom ?m = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.map_mmupd_empty", "map_mmupd ?m {} ?v = ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 1)),
    ("Misc.the_dflt_None_set", "the_default {} (dflt_None_set ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.op_conc_empty_img_id", "(@) [] ` ?L = ?L",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Misc.rel_of_empty", "rel_of Map.empty ?P = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Misc.finite_Field_eq_finite", "finite (Field ?R) = finite ?R",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Misc.foldr_Cons", "foldr (#) ?xs [] = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_merge_simps",
     "mergesort_by_rel_merge ?R [] ?ys = ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_merge_simps",
     "mergesort_by_rel_merge ?R ?xs [] = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Misc.slice_Nil", "slice ?begin ?end [] = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Misc.slice_eq_bounds_empty", "slice ?i ?i ?xs = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Misc.some_opt_sym_eq_trivial", "Eps_Opt ((=) ?x) = Some ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Misc.sorted_quicksort_by_rel",
     "sorted (quicksort_by_rel (<=) [] ?xs)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 2),
               template_hole 0),
             template_var 0))
         )),
    ("Misc.fst_in_Field", "fst ` ?R <= Field ?R",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Misc.snd_in_Field", "snd ` ?R <= Field ?R",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Misc.inj_Pair", "inj_on (%x. (x, ?c x)) ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Misc.inj_Pair", "inj_on (%x. (?c x, x)) ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Misc.card_map_to_set", "card (map_to_set ?m) = card (dom ?m)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.length_remdups_card", "length (remdups ?l) = card (set ?l)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.map_to_set_dom", "dom ?m = fst ` map_to_set ?m",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.map_to_set_ran", "ran ?m = snd ` map_to_set ?m",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.set_to_map_dom", "dom (set_to_map ?S) = fst ` ?S",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Misc.set_mergesort_by_rel", "set (mergesort_by_rel ?R ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Misc.dom_const'", "dom (%x. Some (?f x)) = UNIV",
     template_equation
      (template_app (template_hole 2, t_empty), template_hole 0)),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x []) = {}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Misc.converse_add_simps", "(?r^+)^-1 = (?r^-1)^+",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Misc.finite_map_to_set", "finite (map_to_set ?m) = finite (dom ?m)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.rev_butlast_is_tl_rev", "rev (butlast ?l) = tl (rev ?l)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Misc.slice_complete", "slice 0 (length ?xs) ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_permutes",
     "mset (mergesort_by_rel ?R ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Misc.set_to_map_ran", "ran (set_to_map ?S) <= snd ` ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Misc.Image_subset_snd_image", "?A `` ?B <= snd ` ?A",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 1))),
    ("Misc.trancl_Image_in_Range", "?R^+ `` ?V <= Range ?R",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Misc.rtrancl_sub_insert_rtrancl", "?R^* <= (insert ?x ?R)^*",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.trancl_sub_insert_trancl", "?R^+ <= (insert ?x ?R)^+",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.brk_rel_wf", "wf ?R ==> wf (brk_rel ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Misc.single_valued_below_Id", "?R <= Id ==> single_valued ?R",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Misc.restrict_map_inv", "?f |` (- dom ?f) = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       t_empty)),
    ("Misc.inter_compl_diff_conv", "?A Int - ?B = ?A - ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.list_collect_set_simps", "list_collect_set ?f [?a] = ?f ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app (template_var 1, template_var 0))),
    ("Misc.nat_geq_1_eq_neqz", "(1 <= ?x) = (?x ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.Eps_Opt_eq_None", "(Eps_Opt ?P = None) = (~ Ex ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.laz_eq", "list_all_zip (=) ?a ?b = (?a = ?b)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1),
             template_var 0)
           ),
       template_equation (template_var 1, template_var 0))),
    ("Misc.below_Id_inv", "(?R^-1 <= Id) = (?R <= Id)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("Misc.filter_rev_alt", "filter_rev ?P ?l = filter ?P (rev ?l)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.revg_fun", "revg ?a ?b = rev ?a @ ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.some_opt_eq_trivial", "Eps_Opt (%y. y = ?x) = Some ?x",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Misc.ran_map_of", "ran (map_of ?xs) <= snd ` set ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.R_subset_Field", "?R <= Field ?R \<times> Field ?R",
     template_inequation
      (less_equals, template_var 0,
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Misc.cset_fin_intros", "finite ?F ==> finite (?h ` ?F)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Misc.finite_rel_restrict",
     "finite ?R ==> finite (rel_restrict ?R ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Misc.single_valued_inter1",
     "single_valued ?R ==> single_valued (?R Int ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Misc.single_valued_inter2",
     "single_valued ?R ==> single_valued (?S Int ?R)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Misc.map_dom_ran_finite", "finite (dom ?M) ==> finite (ran ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Misc.CNV_eqD", "CNV ?x ?y ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Misc.distinct_mapI", "distinct (map ?f ?l) ==> distinct ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Misc.acyclic_union", "acyclic (?A Un ?B) ==> acyclic ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Misc.acyclic_union", "acyclic (?A Un ?B) ==> acyclic ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Misc.do_uncurry", "?f ?a ?b = uncurry ?f (?a, ?b)",
     template_equation
      (template_app
        (template_app (template_var 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.do_curry", "?f (?a, ?b) = curry ?f ?a ?b",
     template_equation
      (template_app
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Misc.uncurry_apply", "uncurry ?f (?a, ?b) = ?f ?a ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("Misc.ran_is_image", "ran ?M = (the o ?M) ` dom ?M",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.list_collect_set_as_map",
     "list_collect_set ?f ?l = \<Union> (set (map ?f ?l))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Misc.atLeastPlusOneAtMost_greaterThanAtMost_integer",
     "{?l + 1..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.atLeastLessThanPlusOne_atLeastAtMost_integer",
     "{?l..<?u + 1} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.atLeastPlusOneLessThan_greaterThanLessThan_integer",
     "{?l + 1..<?u} = {?l<..<?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.bijective_alt",
     "bijective ?R = (single_valued ?R & single_valued (?R^-1))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Misc.map_to_set_empty_iff", "({} = map_to_set ?m) = (?m = Map.empty)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, t_empty))),
    ("Misc.map_to_set_empty_iff", "(map_to_set ?m = {}) = (?m = Map.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, t_empty))),
    ("Misc.imp_mp_iff", "(?a & (?a --> ?b)) = (?a & ?b)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Misc.imp_mp_iff", "((?a --> ?b) & ?a) = (?a & ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Misc.set_to_map_empty_iff", "(Map.empty = set_to_map ?S) = (?S = {})",
     template_bimplication
      (template_equation
        (t_empty, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Misc.set_to_map_empty_iff", "(set_to_map ?S = Map.empty) = (?S = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), t_empty),
       template_equation (template_var 0, template_hole 0))),
    ("Misc.card_eq_UNIV2", "(card UNIV = card ?S) = (?S = UNIV)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 1))),
    ("Misc.card_eq_UNIV", "(card ?S = card UNIV) = (?S = UNIV)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_equation (template_var 0, template_hole 1))),
    ("Misc.upt_0_eq_Nil_conv", "([0..<?j] = []) = (?j = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_equation (template_var 0, template_hole 2))),
    ("Misc.min_less_self_conv", "(min ?a ?b < ?a) = (?b < ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("Misc.min_less_self_conv", "(min ?a ?b < ?b) = (?a < ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Misc.zero_comp_diff_simps", "((0::?'a) < ?a - ?b) = (?b < ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("Misc.int_of_integer_less_iff",
     "(int_of_integer ?x < int_of_integer ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.zero_comp_diff_simps", "((0::?'a) <= ?a - ?b) = (?b <= ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("Misc.card_ge_UNIV", "(card UNIV <= card ?S) = (?S = UNIV)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_hole 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Misc.ex_b_b_and_simp", "(EX b. b & ?Q b) = ?Q True",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("Misc.mergesort_by_rel_simps", "mergesort_by_rel ?R [?x] = [?x]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Misc.le_map_mmupd_not_dom",
     "?m \<subseteq>\<^sub>m map_mmupd ?m (?K - dom ?m) ?v",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 2))),
             template_var 0))
         )),
    ("Misc.Domain_rel_restrict",
     "Domain (rel_restrict ?R ?A) <= Domain ?R - ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Misc.Field_rel_restrict",
     "Field (rel_restrict ?R ?A) <= Field ?R - ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Misc.rtrancl_Image_in_Field", "?R^* `` ?V <= Field ?R Un ?V",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.Range_rel_restrict",
     "Range (rel_restrict ?R ?A) <= Range ?R - ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Misc.rel_restrict_trancl_sub",
     "(rel_restrict ?A ?R)^+ <= rel_restrict (?A^+) ?R",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Misc.rtrancl_mono_rightI", "?S <= ?S' ==> ?S <= ?S'^*",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Misc.memb_imp_not_empty", "?x : ?S ==> ?S ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.Eps_Opt_eq_Some_implies", "Eps_Opt ?P = Some ?x ==> ?P ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Misc.distinct_finite_set", "finite {ys. set ys = ?x & distinct ys}",
     template_predicate
      (
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))
         )),
    ("Misc.if_not_swap",
     "(if ~ ?c then ?a else ?b) = (if ?c then ?b else ?a)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 1))),
    ("Misc.set_oo_map_alt",
     "(set \<circ>\<circ> map) ?f = (%l. ?f ` set l)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       t_empty)),
    ("Misc.fn_fst_conv", "(%x. ?f (fst x)) = (%(a, uu_). ?f a)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Misc.fn_snd_conv", "(%x. ?f (snd x)) = (%(uu_, b). ?f b)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Misc.foldl_length", "foldl (%i x. Suc i) 0 ?l = length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_hole 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Misc.foldr_length", "foldr (%x. Suc) ?l 0 = length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Misc.pair_vimage_is_Image", "Pair ?u -` ?E = ?E `` {?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Misc.set_union_code", "set ?xs Un set ?ys = set (?xs @ ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.set_quicksort_by_rel",
     "set (quicksort_by_rel ?R ?sl ?xs) = set (?xs @ ?sl)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.dom_mmupd", "dom (map_mmupd ?m ?K ?v) = dom ?m Un ?K",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("Misc.nth_image_indices", "(!) ?l ` {0..<length ?l} = set ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Misc.rel_restrict_compl",
     "rel_restrict ?R ?A Int rel_restrict ?R (- ?A) = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("Misc.converse_add_simps", "(?r Int ?s)^-1 = ?r^-1 Int ?s^-1",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.converse_add_simps", "(?r Un ?s)^-1 = ?r^-1 Un ?s^-1",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.converse_add_simps", "(?A \<times> ?B)^-1 = ?B \<times> ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Misc.subset_Collect_conv", "(?S <= Collect ?P) = (ALL x:?S. ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Misc.length_ge_1_conv", "(Suc 0 <= length ?l) = (?l ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4)),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.ex_b_not_b_and_simp", "(EX b. ~ b & ?Q b) = ?Q False",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("Misc.take_butlast_conv", "take (length ?l - Suc 0) ?l = butlast ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Misc.map_fst_mk_snd", "map fst (map (%x. (x, ?k)) ?l) = ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_var 0)),
    ("Misc.map_snd_mk_fst", "map snd (map (Pair ?k) ?l) = ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_var 0)),
    ("Misc.butlast_upt", "butlast [?m..<?n] = [?m..<?n - 1]",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.quicksort_by_rel_permutes",
     "mset (quicksort_by_rel ?R ?sl ?xs) = mset (?xs @ ?sl)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.finite_wf_eq_wf_converse", "finite ?R ==> wf (?R^-1) = wf ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Misc.trans_rtrancl_eq_reflcl", "trans ?A ==> ?A^* = ?A^=",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.set_to_map_inverse",
     "inj_on fst ?S ==> map_to_set (set_to_map ?S) = ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Misc.sorted_filter'", "sorted ?l ==> sorted (filter ?P ?l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Misc.mset_le_incr_right1", "?a <=# ?b ==> ?a <=# ?b + ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Misc.mset_le_incr_right2", "?a <=# ?b ==> ?a <=# ?c + ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Misc.min_simps", "?a < ?b ==> min ?a ?b = ?a",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Misc.min_simps", "?b < ?a ==> min ?a ?b = ?b",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Misc.le_map_dom_mono", "?m <= ?m' ==> dom ?m <= dom ?m'",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.subset_minus_empty", "?A <= ?B ==> ?A - ?B = {}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Misc.set_simps", "?A <= ?B ==> ?A Un ?B = ?B",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Misc.set_simps", "?B <= ?A ==> ?A Un ?B = ?A",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Misc.len_greater_imp_nonempty", "?x < length ?l ==> ?l ~= []",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.mset_le_decr_left1", "?a + ?c <=# ?b ==> ?a <=# ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("Misc.mset_le_decr_left2", "?c + ?a <=# ?b ==> ?a <=# ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Misc.mset_le_add_mset_decr_left1",
     "add_mset ?c ?a <=# ?b ==> ?a <=# ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Misc.IdD", "(?a, ?b) : Id ==> ?a = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Misc.find_SomeD", "find ?P ?xs = Some ?x ==> ?P ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("Misc.foldl_foldl_conv_concat",
     "foldl (foldl ?f) ?a ?xs = foldl ?f ?a (concat ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.map_upd_eq_restrict", "?m(?x := None) = ?m |` (- {?x})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Misc.map_add_ac",
     "?m1.0 ++ (?m2.0 ++ ?m3.0) = ?m1.0 ++ ?m2.0 ++ ?m3.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Misc.foldl_un_empty_eq",
     "foldl (Un) ?i ?ww = ?i Un foldl (Un) {} ?ww",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Misc.trancl_Image_unfold_right", "?E^+ `` ?S = ?E `` ?E^* `` ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Misc.trancl_Image_unfold_left", "?E^+ `` ?S = ?E^* `` ?E `` ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Misc.set_diff_diff_left", "?A - ?B - ?C = ?A - (?B Un ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.set_mergesort_by_rel_merge",
     "set (mergesort_by_rel_merge ?R ?xs ?ys) = set ?xs Un set ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.trancl_image_by_rtrancl", "?E^+ `` ?Vi Un ?Vi = ?E^* `` ?Vi",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x [?a]) = ?f (?x ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_var 2, template_app (template_var 1, template_var 0)))),
    ("Misc.rel_restrict_union",
     "rel_restrict ?R (?A Un ?B) = rel_restrict (rel_restrict ?R ?A) ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Misc.Sigma_UNIV_cancel", "?A \<times> ?X - ?A \<times> UNIV = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)),
       template_hole 0)),
    ("Misc.same_fst_trancl",
     "(same_fst ?P ?R)^+ = same_fst ?P (%x. (?R x)^+)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Misc.disjoint_alt_simp1", "(?A - ?B = ?A) = (?A Int ?B = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 1),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Misc.ex_Melem_conv", "(EX x. x :# ?A) = (?A ~= {#})",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.mset_empty_count", "(ALL p. count ?M p = 0) = (?M = {#})",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Misc.foldl_conc_empty_eq", "foldl (@) ?i ?ww = ?i @ foldl (@) [] ?ww",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Misc.filter_rev_aux_alt",
     "filter_rev_aux ?a ?P ?l = filter ?P (rev ?l) @ ?a",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 2))),
    ("Misc.quicksort_by_rel_remove_acc",
     "quicksort_by_rel ?R ?sl ?xs = quicksort_by_rel ?R [] ?xs @ ?sl",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 0),
             template_var 0)),
         template_var 1))),
    ("Misc.butlast_update'",
     "(butlast ?l)[?i := ?x] = butlast (?l[?i := ?x])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Misc.concat_filter_neq_Nil",
     "concat (filter (%ys. ys ~= []) ?xs) = concat ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Misc.mset_mergesort_by_rel_merge",
     "mset (mergesort_by_rel_merge ?R ?xs ?ys) = mset ?xs + mset ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.rtrancl_image_unfold_right", "?E `` ?E^* `` ?V <= ?E^* `` ?V",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.distinct_butlast_swap",
     "distinct ?pq ==> distinct (butlast (?pq[?i := last ?pq]))",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("Misc.the_dflt_None_nonempty",
     "?S ~= {} ==> dflt_None_set ?S = Some ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.last_in_set", "?l ~= [] ==> last ?l : set ?l",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Misc.laz_len", "list_all_zip ?P ?a ?b ==> length ?a = length ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.in_set_tlD", "?x : set (tl ?xs) ==> ?x : set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Misc.wf_no_path", "Domain ?R Int Range ?R = {} ==> wf ?R",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0)),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Misc.foldl_length_aux", "foldl (%i x. Suc i) ?a ?l = ?a + length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.foldr_length_aux", "foldr (%x. Suc) ?l ?a = ?a + length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Misc.foldl_set", "foldl (Un) {} ?l = \<Union> {x. x : set ?l}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_hole 4),
         template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Misc.list_collect_set_simps",
     "list_collect_set ?f (?a # ?l) = ?f ?a Un list_collect_set ?f ?l",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Misc.trancl_single", "{(?a, ?b)}^+ = {(?a, ?b)}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Misc.disjoint_alt_simp3", "(?A - ?B < ?A) = (?A Int ?B ~= {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Misc.nat_in_between_eq", "(?a <= ?b & ?b < Suc ?a) = (?b = ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 1)))
            )],
       template_equation (template_var 0, template_var 1))),
    ("Misc.replicate_Suc_conv_snoc",
     "replicate (Suc ?n) ?x = replicate ?n ?x @ [?x]",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.comp_cong_right", "?x = ?y ==> ?f o ?x = ?f o ?y",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.comp_cong_left", "?x = ?y ==> ?x o ?f = ?y o ?f",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.mset_le_subtract", "?A <=# ?B ==> ?A - ?C <=# ?B - ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Misc.min_Suc_gt", "?a < ?b ==> min ?b (Suc ?a) = Suc ?a",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("Misc.min_Suc_gt", "?a < ?b ==> min (Suc ?a) ?b = Suc ?a",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Misc.map_add_first_le", "?m <= ?m' ==> ?m ++ ?n <= ?m' ++ ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.rel_restrict_mono2",
     "?R <= ?S ==> rel_restrict ?A ?S <= rel_restrict ?A ?R",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Misc.rel_restrict_mono",
     "?A <= ?B ==> rel_restrict ?A ?R <= rel_restrict ?B ?R",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.remove_subset", "?x : ?S ==> ?S - {?x} < ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Misc.Suc_to_right", "Suc ?n = ?m ==> ?n = ?m - Suc 0",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_var 0)],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 2, template_hole 0))))),
    ("Misc.map_to_set_map_of",
     "distinct (map fst ?l) ==> map_to_set (map_of ?l) = set ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.map_of_rev_distinct",
     "distinct (map fst ?m) ==> map_of (rev ?m) = map_of ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Misc.distinct_map_fst_filterI",
     "distinct (map fst ?xs) ==> distinct (map fst (filter ?P ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Misc.hd_butlast", "1 < length ?xs ==> hd (butlast ?xs) = hd ?xs",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Misc.in_rtrancl_insert", "?x : ?R^* ==> ?x : (insert ?r ?R)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Misc.mset_le_add_mset_decr_left2",
     "add_mset ?c ?a <=# ?b ==> {#?c#} <=# ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Misc.img_fst", "(?a, ?b) : ?S ==> ?a : fst ` ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Misc.img_snd", "(?a, ?b) : ?S ==> ?b : snd ` ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Misc.find_SomeD", "find ?P ?xs = Some ?x ==> ?x : set ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Misc.list_collect_set_simps",
     "list_collect_set ?f (?l @ ?l') =
      list_collect_set ?f ?l Un list_collect_set ?f ?l'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Misc.fun_neq_ext_iff", "(?m ~= ?m') = (EX x. ?m x ~= ?m' x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Misc.disjoint_alt_simp2", "(?A - ?B ~= ?A) = (?A Int ?B ~= {})",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 1)
           ),
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Misc.nat_in_between_eq", "(?a < ?b & ?b <= Suc ?a) = (?b = Suc ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 1)))
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("Misc.take_update", "take ?n (?l[?i := ?x]) = (take ?n ?l)[?i := ?x]",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Misc.map_fst_mk_fst",
     "map fst (map (Pair ?k) ?l) = replicate (length ?l) ?k",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Misc.map_snd_mk_snd",
     "map snd (map (%x. (x, ?k)) ?l) = replicate (length ?l) ?k",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Misc.map_zip1",
     "map (%x. (x, ?k)) ?l = zip ?l (replicate (length ?l) ?k)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Misc.map_zip2",
     "map (Pair ?k) ?l = zip (replicate (length ?l) ?k) ?l",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_var 0))),
    ("Misc.mmupd_in_upd", "?k : ?K ==> map_mmupd ?m ?K ?v ?k = Some ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.some_elem", "?S ~= {} ==> (SOME x. x : ?S) : ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1, template_app (template_hole 0, t_empty)),
             template_var 0)
           ))),
    ("Misc.butlast_rev_tl",
     "?xs ~= [] ==> butlast (rev ?xs) = rev (tl ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Misc.remove1_tl", "?xs ~= [] ==> remove1 (hd ?xs) ?xs = tl ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.set_minus_singleton_eq", "?x ~: ?X ==> ?X - {?x} = ?X",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Misc.list_decomp_1", "length ?l = 1 ==> EX a. ?l = [a]",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Misc.map_add_left_None", "?f ?k = None ==> (?f ++ ?g) ?k = ?g ?k",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Misc.map_add_find_left", "?g ?k = None ==> (?f ++ ?g) ?k = ?f ?k",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_app (template_var 0, template_var 1)))),
    ("Misc.for_in_RI", "?x : Domain ?R ==> (?x, fun_of_rel ?R ?x) : ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_var 0)
           ))),
    ("Misc.tl_last", "tl ?xs ~= [] ==> last ?xs = last (tl ?xs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("Misc.inv_on_f_range", "?y : ?f ` ?A ==> inv_on ?f ?A ?y : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 0)
           ))),
    ("Misc.rel_restrict_Int_empty",
     "?A Int Field ?R = {} ==> rel_restrict ?R ?A = ?R",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Misc.rel_restrict_notR", "(?x, ?y) : rel_restrict ?A ?R ==> ?x ~: ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)
               )
           ))),
    ("Misc.rel_restrict_notR", "(?x, ?y) : rel_restrict ?A ?R ==> ?y ~: ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)
               )
           ))),
    ("Misc.cyclic_subset", "[| ~ acyclic ?R; ?R <= ?S |] ==> ~ acyclic ?S",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_negation
        (
           template_predicate
            (template_app (template_hole 1, template_var 0))
           ))),
    ("Misc.map_of_concat",
     "map_of (concat ?xss) = foldr (%xs f. f ++ map_of xs) ?xss Map.empty",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         t_empty))),
    ("Misc.image_add_integer_atLeastLessThan",
     "(%x. x + ?l) ` {0..<?u - ?l} = {?l..<?u}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Misc.fun_comp_eq_conv",
     "(?f o ?g = ?fg) = (ALL x. ?f (?g x) = ?fg x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Misc.restrict_map_eq",
     "((?m |` ?A) ?k = None) = (?k ~: dom ?m Int ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1))))),
    ("Misc.lists_of_len_fin2",
     "finite ?P ==> finite (lists ?P Int {l. ?n = length l})",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Misc.lists_of_len_fin1",
     "finite ?P ==> finite (lists ?P Int {l. length l = ?n})",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Misc.finite_if_eq_beyond_finite",
     "finite ?S ==> finite {s. s - ?S = ?s' - ?S}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))
           ))),
    ("Misc.distinct_finite_subset",
     "finite ?x ==> finite {ys. set ys <= ?x & distinct ys}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 5, template_app (template_hole 4, t_empty))
           ))),
    ("Misc.inj_map_inv_f", "inj ?f ==> map (inv ?f) (map ?f ?l) = ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 4),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Misc.image_atLeastZeroLessThan_integer",
     "0 <= ?u ==> {0..<?u} = of_nat ` {..<nat_of_integer ?u}",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 6), template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Misc.mmupd_notin_upd", "?k ~: ?K ==> map_mmupd ?m ?K ?v ?k = ?m ?k",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("Misc.ran_distinct",
     "distinct (map fst ?al) ==> ran (map_of ?al) = snd ` set ?al",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Misc.map_of_None_filterD",
     "map_of ?xs ?x = None ==> map_of (filter ?P ?xs) ?x = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_hole 1))),
    ("Misc.mset_union_subset", "?A + ?B <=# ?C ==> ?A <=# ?C & ?B <=# ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))
           ))),
    ("Misc.f_inv_on_f", "?y : ?f ` ?A ==> ?f (inv_on ?f ?A ?y) = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_var 2))),
    ("Misc.dom_ran_disj_comp",
     "Domain ?R Int Range ?R = {} ==> ?R O ?R = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0)),
            template_app (template_hole 4, template_var 0)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Misc.rel_restrict_lift",
     "(?x, ?y) : rel_restrict ?E ?R ==> (?x, ?y) : ?E",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)
           ))),
    ("Misc.rel_restrict_trancl_notR",
     "(?v, ?w) : (rel_restrict ?E ?R)^+ ==> ?v ~: ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)
               )
           ))),
    ("Misc.rel_restrict_trancl_notR",
     "(?v, ?w) : (rel_restrict ?E ?R)^+ ==> ?w ~: ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)
               )
           ))),
    ("Misc.fstE", "[| ?x = (?a, ?b); ?P (fst ?x) |] ==> ?P ?a",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_var 0,
              template_app (template_hole 0, template_var 3))
            )],
       template_predicate (template_app (template_var 0, template_var 2)))),
    ("Misc.sndE", "[| ?x = (?a, ?b); ?P (snd ?x) |] ==> ?P ?b",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_var 0,
              template_app (template_hole 0, template_var 3))
            )],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Misc.mergesort_remdups_correct",
     "distinct (mergesort_remdups ?l) &
      sorted (mergesort_remdups ?l) & set (mergesort_remdups ?l) = set ?l",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_var 0))),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Misc.map_update_eta_repair",
     "dom (%x. if x = ?k then Some ?v else ?m x) = insert ?k (dom ?m)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 4, template_var 0)))),
    ("Misc.Union_take_drop_id",
     "\<Union> (set (drop ?n ?l)) Un \<Union> (set (take ?n ?l)) =
      \<Union> (set ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)))),
    ("Misc.ran_nth_set_encoding_conv",
     "ran (%i. if i < length ?l then Some (?l ! i) else None) = set ?l",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Misc.All_prod_contract",
     "(ALL a b. ?P a b) = (ALL z. ?P (fst z) (snd z))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Misc.Ex_prod_contract",
     "(EX a b. ?P a b) = (EX z. ?P (fst z) (snd z))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Misc.card_doubleton_eq_2_iff", "(card {?a, ?b} = 2) = (?a ~= ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 5))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Misc.not_Some_eq2", "(ALL x y. ?v ~= Some (x, y)) = (?v = None)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Misc.map_by_foldl", "foldl (%l x. l @ [?f x]) [] ?l = map ?f ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.count_mset_set_finite_iff",
     "finite ?S ==> count (mset_set ?S) ?a = (if ?a : ?S then 1 else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_hole 1),
           template_hole 0)))),
    ("Misc.drop_upd_irrelevant",
     "?m < ?n ==> drop ?n (?l[?m := ?x]) = drop ?n ?l",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Misc.some_insert_self",
     "?S ~= {} ==> insert (SOME x. x : ?S) ?S = ?S",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0),
         template_var 0))),
    ("Misc.nth_tl", "?xs ~= [] ==> tl ?xs ! ?n = ?xs ! Suc ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Misc.nth_append_first",
     "?i < length ?l ==> (?l @ ?l') ! ?i = ?l ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Misc.zipf_zip",
     "length ?l1.0 = length ?l2.0 ==>
      zipf Pair ?l1.0 ?l2.0 = zip ?l1.0 ?l2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.drop_eq_ConsD",
     "drop ?n ?xs = ?x # ?xs' ==> drop (Suc ?n) ?xs = ?xs'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 3)),
           template_var 2),
         template_var 0))),
    ("Misc.rtrancl_mono_mp", "[| ?U <= ?V; ?x : ?U^* |] ==> ?x : ?V^*",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Misc.trancl_mono_mp", "[| ?U <= ?V; ?x : ?U^+ |] ==> ?x : ?V^+",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Misc.finite_Image_subset",
     "[| finite (?A `` ?B); ?C <= ?A |] ==> finite (?C `` ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("Misc.finite_UNION_then_finite",
     "[| finite (\<Union> (?B ` ?A)); ?a : ?A |] ==> finite (?B ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_var 2, template_var 0))
           ))),
    ("Misc.pairself_image_cart",
     "pairself ?f ` (?A \<times> ?B) = ?f ` ?A \<times> ?f ` ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         t_empty))),
    ("Misc.pair_set_inverse", "{(a, b). ?P a b}^-1 = {(b, a). ?P a b}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))),
       template_app
        (template_hole 1, template_app (template_hole 0, t_empty)))),
    ("Misc.neq_Nil_rev_conv", "(?l ~= []) = (EX xs x. ?l = xs @ [x])",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_app (template_hole 3, t_empty))),
    ("Misc.mset_contains_eq", "(?m :# ?M) = ({#?m#} + (?M - {#?m#}) = ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0))),
    ("Misc.list_all_zip_map2",
     "list_all_zip ?P ?as (map ?f ?bs) =
      list_all_zip (%a b. ?P a (?f b)) ?as ?bs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 2),
         template_var 0))),
    ("Misc.list_all_zip_map1",
     "list_all_zip ?P (map ?f ?as) ?bs =
      list_all_zip (%a. ?P (?f a)) ?as ?bs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0))),
    ("Misc.filter_conv_foldr",
     "filter ?P ?xs = foldr (%x xs. if ?P x then x # xs else xs) ?xs []",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_hole 0))),
    ("Misc.map_add_upt'",
     "map (%i. i + ?ofs) [?a..<?b] = [?a + ?ofs..<?b + ?ofs]",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Misc.range_prod",
     "range ?f <= range (fst o ?f) \<times> range (snd o ?f)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 8, template_var 0), template_hole 7),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 0)),
             template_hole 7)),
         t_empty))),
    ("Misc.wf_bounded_supset",
     "finite ?S ==> wf {(Q', Q). Q < Q' & Q' <= ?S}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty)))
           ))),
    ("Misc.upt_append", "?i < ?j ==> [0..<?i] @ [?i..<?j] = [0..<?j]",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Misc.image_update", "?x ~: ?A ==> ?f(?x := ?n) ` ?A = ?f ` ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Misc.map_of_map_to_set",
     "distinct (map fst ?l) ==>
      (map_of ?l = ?m) = (set ?l = map_to_set ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Misc.mset_diff_cancel1elem", "?a ~:# ?B ==> {#?a#} - ?B = {#?a#}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Misc.mset_le_subtract_right",
     "?A + ?B <=# ?X ==> ?A <=# ?X - ?B & ?B <=# ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Misc.mset_le_subtract_left",
     "?A + ?B <=# ?X ==> ?B <=# ?X - ?A & ?A <=# ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Misc.mset_le_add_mset",
     "add_mset ?x ?B <=# ?C ==> {#?x#} <=# ?C & ?B <=# ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 0)),
                 template_var 0)),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))
           ))),
    ("Misc.set_zip_cart",
     "?x : set (zip ?l ?l') ==> ?x : set ?l \<times> set ?l'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               t_empty))
           ))),
    ("Misc.map_add_ac",
     "dom ?m1.0 Int dom ?m2.0 = {} ==> ?m1.0 ++ ?m2.0 = ?m2.0 ++ ?m1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.list_tail_coinc",
     "?n1.0 # ?r1.0 = ?n2.0 # ?r2.0 ==> ?n1.0 = ?n2.0 & ?r1.0 = ?r2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Misc.mset_map_id", "(!!x. ?f (?g x) = x) ==> ?f `# ?g `# ?X = ?X",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Misc.finite_Collect",
     "[| finite ?S; inj ?f |] ==> finite {a. ?f a : ?S}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Misc.distinct_hd_tl",
     "[| distinct ?xs; ?x = hd ?xs |] ==> ?x ~: set (tl ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 4, template_var 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)))
               )
           ))),
    ("Misc.distinct_length_le",
     "[| distinct ?ys; set ?ys = set ?xs |] ==> length ?ys <= length ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.sorted_hd_last",
     "[| sorted ?l; ?l ~= [] |] ==> hd ?l <= last ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.nz_le_conv_less", "[| 0 < ?k; ?k <= ?m |] ==> ?k - Suc 0 < ?m",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_hole 3)),
         template_var 0))),
    ("Misc.inj_on_map_the",
     "[| ?D <= dom ?m; inj_on ?m ?D |] ==> inj_on (the o ?m) ?D",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_var 1)
           ))),
    ("Misc.SPLIT_ACCORDINGE",
     "[| length ?m = length ?l; ??.Misc.SPLIT_ACCORDING ?m ?l ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Misc.restrict_map_upd",
     "(?f |` ?S)(?k |-> ?v) = ?f(?k |-> ?v) |` insert ?k ?S",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x (?a # ?l)) =
      ?f (?x ?a) Un list_collect_set ?f (map ?x ?l)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_var 3,
             template_app (template_var 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Misc.restrict_map_eq",
     "((?m |` ?A) ?k = Some ?v) = (?m ?k = Some ?v & ?k : ?A)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("Misc.rel_restrict_Sigma_sub",
     "rel_restrict ((?A \<times> ?A)^+) ?R
      <= ((?A - ?R) \<times> (?A - ?R))^+",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1), t_empty))),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           t_empty)))),
    ("Misc.set_to_map_simp",
     "inj_on fst ?S ==> (set_to_map ?S ?k = Some ?v) = ((?k, ?v) : ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Misc.count_ne_remove",
     "?x ~= ?t ==> count ?S ?x = count (?S - {#?t#}) ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_var 2)))),
    ("Misc.rev_split_conv", "?l ~= [] ==> rev (tl ?l) @ [hd ?l] = rev ?l",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_hole 5)),
         template_app (template_hole 3, template_var 0)))),
    ("Misc.quicksort_by_rel_remove_acc_guared",
     "?sl ~= [] ==>
      quicksort_by_rel ?R ?sl ?xs = quicksort_by_rel ?R [] ?xs @ ?sl",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 2),
               template_var 0)),
           template_var 2)))),
    ("Misc.map_restrict_insert_none_simp",
     "?m ?x = None ==> ?m |` (- insert ?x ?s) = ?m |` (- ?s)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 0))))),
    ("Misc.take_minus_one_conv_butlast",
     "?n <= length ?l ==> take (?n - Suc 0) ?l = butlast (take ?n ?l)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Misc.size_diff_se", "?t :# ?S ==> size ?S = size (?S - {#?t#}) + 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)))),
           template_hole 0)))),
    ("Misc.nth_update_invalid",
     "~ ?i < length ?l ==> ?l[?j := ?x] ! ?i = ?l ! ?i",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_than, template_var 3,
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 3)))),
    ("Misc.map_consI", "?w = map ?f ?ww ==> ?f ?a # ?w = map ?f (?a # ?ww)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Misc.length_dropWhile_takeWhile",
     "?x < length (dropWhile ?P ?xs) ==>
      ?x + length (takeWhile ?P ?xs) < length ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 3, template_var 0)))),
    ("Misc.Image_empty_trancl_Image_empty",
     "?R `` {?v} = {} ==> ?R^+ `` {?v} = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 1))),
    ("Misc.mset_union_subset_s",
     "{#?a#} + ?B <=# ?C ==> ?a :# ?C & ?B <=# ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_hole 3)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0))
           ))),
    ("Misc.inv_on_f_f",
     "[| inj_on ?f ?A; ?x : ?A |] ==> inv_on ?f ?A (?f ?x) = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app (template_var 2, template_var 0)),
         template_var 0))),
    ("Misc.map_leD",
     "[| ?m1.0 \<subseteq>\<^sub>m ?m2.0; ?m1.0 ?k = Some ?v |]
      ==> ?m2.0 ?k = Some ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 3, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.set_notEmptyE", "[| ?S ~= {}; !!x. x : ?S ==> ?P |] ==> ?P",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.butlast_subset",
     "[| ?xs ~= []; set ?xs <= ?A |] ==> set (butlast ?xs) <= ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.tl_subset",
     "[| ?xs ~= []; set ?xs <= ?A |] ==> set (tl ?xs) <= ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.mset_size1elem", "[| size ?P <= 1; ?q :# ?P |] ==> ?P = {#?q#}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.iffI2", "[| ?P ==> ?Q; ~ ?P ==> ~ ?Q |] ==> ?P = ?Q",
     template_implication
      ([template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation (template_predicate (template_var 1))],
          template_negation (template_predicate (template_var 0)))],
       template_equation (template_var 1, template_var 0))),
    ("Misc.fst_image_mp", "[| fst ` ?A <= ?B; (?x, ?y) : ?A |] ==> ?x : ?B",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("Misc.snd_image_mp", "[| snd ` ?A <= ?B; (?x, ?y) : ?A |] ==> ?y : ?B",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 3),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Misc.ex1_eqI", "[| EX! x. ?P x; ?P ?a; ?P ?b |] ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_var 2, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Misc.cset_fin_simps", "{?f x |x. ?P x} = ?f ` {x. ?P x}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)))),
    ("Misc.butlast_eq_cons_conv",
     "(butlast ?l = ?x # ?xs) = (EX xl. ?l = ?x # ?xs @ [xl])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Misc.all_set_conv_nth",
     "(ALL x:set ?l. ?P x) = (ALL i<length ?l. ?P (?l ! i))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         t_empty),
       template_app (template_hole 4, t_empty))),
    ("Misc.drop_take_drop_unsplit",
     "?i <= ?j ==> drop ?i (take ?j ?l) @ drop ?j ?l = drop ?i ?l",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Misc.drop_last_conv",
     "?l ~= [] ==> drop (length ?l - Suc 0) ?l = [last ?l]",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_app (template_hole 3, template_hole 2))),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_hole 7)))),
    ("Misc.map_nth_upt_drop_take_conv",
     "?N <= length ?l ==> map ((!) ?l) [?M..<?N] = drop ?M (take ?N ?l)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Misc.union_diff_assoc",
     "?C - ?B = {#} ==> ?A + ?B - ?C = ?A + (?B - ?C)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Misc.mset_le_subtract_add_mset_right",
     "add_mset ?x ?B <=# ?X ==> {#?x#} <=# ?X - ?B & ?B <=# ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))
           ))),
    ("Misc.map_eq_nth_eq",
     "map ?f ?l = map ?f ?l' ==> ?f (?l ! ?i) = ?f (?l' ! ?i)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 1))],
       template_equation
        (template_app
          (template_var 3,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_var 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Misc.rel_restrict_trancl_mem",
     "(?a, ?b) : (rel_restrict ?A ?R)^+ ==>
      (?a, ?b) : rel_restrict (?A^+) ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1)),
               template_var 0))
           ))),
    ("Misc.filter_eq_snocD",
     "filter ?P ?l = ?l' @ [?x] ==> ?x : set ?l & ?P ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 2))),
             template_app (template_var 3, template_var 0))
           ))),
    ("Misc.mset_le_addE",
     "[| ?xs <=# ?ys; !!zs. ?ys = ?xs + zs ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rtrancl_reachable_induct",
     "[| ?I <= ?INV; ?E `` ?INV <= ?INV |] ==> ?E^* `` ?I <= ?INV",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 0), template_var 1),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2),
         template_var 1))),
    ("Misc.last_filter",
     "[| ?xs ~= []; ?P (last ?xs) |] ==> last (filter ?P ?xs) = last ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 1)))),
    ("Misc.in_prod_fst_sndI",
     "[| fst ?x : ?A; snd ?x : ?B |] ==> ?x : ?A \<times> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("Misc.not_hd_in_tl",
     "[| ?x ~= hd ?xs; ?x : set ?xs |] ==> ?x : set (tl ?xs)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Misc.ord_eq_le_eq_trans",
     "[| ?a = ?b; ?b <= ?c; ?c = ?d |] ==> ?a <= ?d",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_equation (template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 3, template_var 0))),
    ("Misc.nested_case_prod_simp",
     "(case ?x of (a, b) => ?f a b) ?y = (case ?x of (a, b) => ?f a b ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Misc.set_map_filter",
     "set (List.map_filter ?g ?xs) =
      {y. EX x. x : set ?xs & ?g x = Some y}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Misc.rtrancl_apply_insert",
     "?R^* `` insert ?x ?S = insert ?x (?R^* `` (?S Un ?R `` {?x}))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0))))))),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x (?l @ ?l')) =
      list_collect_set ?f (map ?x ?l) Un list_collect_set ?f (map ?x ?l')",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Misc.SPLIT_ACCORDING_simp",
     "??.Misc.SPLIT_ACCORDING ?m (?x # ?l') =
      (EX y m'. ?m = y # m' & ??.Misc.SPLIT_ACCORDING m' ?l')",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Misc.map_sum_Inl_conv",
     "(map_sum ?fl ?fr ?s = Inl ?y) = (EX x. ?s = Inl x & ?y = ?fl x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Misc.map_sum_Inr_conv",
     "(map_sum ?fl ?fr ?s = Inr ?y) = (EX x. ?s = Inr x & ?y = ?fr x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Misc.list_decomp_2", "length ?l = 2 ==> EX a b. ?l = [a, b]",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Misc.drop_takeWhile",
     "?i <= length (takeWhile ?P ?l) ==>
      drop ?i (takeWhile ?P ?l) = takeWhile ?P (drop ?i ?l)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Misc.rtrancl_mapI",
     "(?a, ?b) : ?E^* ==> (?f ?a, ?f ?b) : (pairself ?f ` ?E)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_var 0, template_var 3)),
                 template_app (template_var 0, template_var 2))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))
           ))),
    ("Misc.ran_add",
     "dom ?f Int dom ?g = {} ==> ran (?f ++ ?g) = ran ?f Un ran ?g",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Misc.Image_empty_rtrancl_Image_id",
     "?R `` {?v} = {} ==> ?R^* `` {?v} = {?v}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)))),
    ("Misc.Restr_rtrancl_mono",
     "(?v, ?w) : (Restr ?E ?U)^* ==> (?v, ?w) : ?E^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 0, template_var 0),
                    t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Misc.Restr_trancl_mono",
     "(?v, ?w) : (Restr ?E ?U)^+ ==> (?v, ?w) : ?E^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 0, template_var 0),
                    t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Misc.acyclic_insert_cyclic",
     "[| acyclic ?g; ~ acyclic (insert (?x, ?y) ?g) |] ==> (?y, ?x) : ?g^*",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_var 1),
                        template_var 0)),
                    template_var 2))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Misc.cyclicE", "[| ~ acyclic ?g; !!x. (x, x) : ?g^+ ==> ?P |] ==> ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mlex_bound", "[| ?a < ?A; ?b < ?N |] ==> ?a * ?N + ?b < ?A * ?N",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Misc.reachable_mono",
     "[| ?R <= ?R'; ?X <= ?X' |] ==> ?R^* `` ?X <= ?R'^* `` ?X'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Misc.nat_of_integer_less_iff",
     "[| 0 <= ?x; 0 <= ?y |]
      ==> (nat_of_integer ?x < nat_of_integer ?y) = (?x < ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1),
        template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.refl_on_reflcl_Image",
     "[| refl_on ?B ?A; ?C <= ?B |] ==> ?A^= `` ?C = ?A `` ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Misc.finite_set_image",
     "[| finite (set ` ?A); !!xs. xs : ?A ==> distinct xs |] ==> finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Misc.nempty_dom",
     "[| ?e ~= Map.empty; !!m. m : dom ?e ==> ?P |] ==> ?P",
     template_implication
      ([template_negation (template_equation (template_var 1, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.restrict_map_subset_eq",
     "[| ?m |` ?R = ?m'; ?R' <= ?R |] ==> ?m |` ?R' = ?m' |` ?R'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 1),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Misc.mset_left_cancel_union",
     "[| ?a :# ?A + ?B; ?a ~:# ?A |] ==> ?a :# ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Misc.mset_right_cancel_union",
     "[| ?a :# ?A + ?B; ?a ~:# ?B |] ==> ?a :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Misc.boolfun_cases_helper",
     "?g = (%x. False) | ?g = (%x. x) | ?g = (%x. True) | ?g = Not",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0), t_empty)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0), t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   t_empty)),
               template_app
                (template_app (template_hole 3, template_var 0), t_empty))))
         )),
    ("Misc.nth_list_update'",
     "?l[?i := ?x] ! ?j =
      (if ?i = ?j & ?i < length ?l then ?x else ?l ! ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app (template_hole 0, template_var 3)))),
               template_var 1),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_var 0))
           ))),
    ("Misc.list_collect_set_alt",
     "list_collect_set ?f ?l = \<Union> {?f (?l ! i) |i. i < length ?l}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Misc.laz_weak_Pa",
     "list_all_zip (%a b. ?P a) ?A ?B =
      (length ?A = length ?B & (ALL a:set ?A. ?P a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               t_empty))
           ))),
    ("Misc.laz_weak_Pb",
     "list_all_zip (%a. ?P) ?A ?B =
      (length ?A = length ?B & (ALL b:set ?B. ?P b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               t_empty))
           ))),
    ("Misc.map_prod_fun_zip",
     "map2 (%x y. (?f x, ?g y)) ?xs ?ys = zip (map ?f ?xs) (map ?g ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Misc.map_mmupd_update_less",
     "?K <= ?K' ==>
      map_mmupd ?m (?K - dom ?m) ?v \<subseteq>\<^sub>m
      map_mmupd ?m (?K' - dom ?m) ?v",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app (template_hole 0, template_var 1))),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_hole 0, template_var 1))),
               template_var 0))
           ))),
    ("Misc.insert_swap_set_eq",
     "?i < length ?l ==>
      insert (?l ! ?i) (set (?l[?i := ?x])) = insert ?x (set ?l)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 1, template_var 1))))),
    ("Misc.mset_le_subtract_add_mset_left",
     "add_mset ?x ?B <=# ?X ==> ?B <=# ?X - {#?x#} & {#?x#} <=# ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_hole 0)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 0)),
               template_var 0))
           ))),
    ("Misc.rtrancl_Image_advance_ss",
     "(?u, ?v) : ?E ==> ?E^* `` {?v} <= ?E^* `` {?u}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Misc.trancl_Image_advance_ss",
     "(?u, ?v) : ?E ==> ?E^+ `` {?v} <= ?E^+ `` {?u}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Misc.homo_rel_restrict_mono",
     "?R <= ?B \<times> ?B ==>
      rel_restrict ?R ?A <= (?B - ?A) \<times> (?B - ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1), t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           t_empty)))),
    ("Misc.upt_merge",
     "?i <= ?j & ?j <= ?k ==> [?i..<?j] @ [?j..<?k] = [?i..<?k]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Misc.map_add_left_comm",
     "dom ?A Int dom ?B = {} ==> ?A ++ (?B ++ ?C) = ?B ++ (?A ++ ?C)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2)),
            template_app (template_hole 3, template_var 1)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Misc.disjointI",
     "(!!x. [| x : ?a; x : ?b |] ==> False) ==> ?a Int ?b = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Misc.card_insert_disjoint'",
     "[| finite ?A; ?x ~: ?A |] ==> card (insert ?x ?A) - Suc 0 = card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1))),
           template_app (template_hole 1, template_hole 0)),
         template_app (template_hole 3, template_var 1)))),
    ("Misc.slice_head",
     "[| ?from < ?to; ?to <= length ?xs |]
      ==> hd (slice ?from ?to ?xs) = ?xs ! ?from",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Misc.slice_len",
     "[| ?from <= ?to; ?to <= length ?xs |]
      ==> length (slice ?from ?to ?xs) = ?to - ?from",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Misc.Suc_n_minus_m_eq",
     "[| ?m <= ?n; 1 < ?m |] ==> Suc (?n - ?m) = ?n - (?m - 1)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 3))))),
    ("Misc.Suc_diff",
     "[| ?m <= ?n; 1 <= ?m |] ==> Suc (?n - ?m) = ?n - (?m - 1)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 3))))),
    ("Misc.inj_on_map_inv_f",
     "[| set ?l <= ?A; inj_on ?f ?A |]
      ==> map (inv_on ?f ?A) (map ?f ?l) = ?l",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 2))),
    ("Misc.in_fst_imageE",
     "[| ?x : fst ` ?S; !!y. (?x, y) : ?S ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.in_snd_imageE",
     "[| ?y : snd ` ?S; !!x. (x, ?y) : ?S ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.finite_range_prod",
     "[| finite (range (fst o ?f)); finite (range (snd o ?f)) |]
      ==> finite (range ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 0)),
                template_hole 6))
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 0)),
                template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 6))
           ))),
    ("Misc.mset_right_cancel_elem",
     "[| ?a :# ?A + {#?b#}; ?a ~= ?b |] ==> ?a :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2))))
            ),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 5, template_var 1))
           ))),
    ("Misc.mset_left_cancel_elem",
     "[| ?a :# {#?b#} + ?A; ?a ~= ?b |] ==> ?a :# ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_hole 2)),
                  template_var 0)))
            ),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 5, template_var 0))
           ))),
    ("Misc.finite_reachable_restrictedI",
     "[| finite ?Q; ?I <= ?Q; Range ?E <= ?Q |] ==> finite (?E^* `` ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Misc.card_1_singletonI",
     "[| finite ?S; card ?S = 1; ?x : ?S |] ==> ?S = {?x}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 1), template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.list_e_eq_lel",
     "([?e] = ?l1.0 @ ?e' # ?l2.0) = (?l1.0 = [] & ?e' = ?e & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 3), template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 3)))
           ))),
    ("Misc.list_e_eq_lel",
     "(?l1.0 @ ?e' # ?l2.0 = [?e]) = (?l1.0 = [] & ?e' = ?e & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 2)))
           ))),
    ("Misc.filter_upt_take_conv",
     "filter (%i. ?P (take ?m ?l ! i)) [?n..<?m] =
      filter (%i. ?P (?l ! i)) [?n..<?m]",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Misc.insert_minus_eq",
     "?x ~= ?y ==> insert ?x ?A - {?y} = insert ?x (?A - {?y})",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)))))),
    ("Misc.in_hd_or_tl_conv",
     "?l ~= [] ==> (?x = hd ?l | ?x : set (tl ?l)) = (?x : set ?l)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1))))),
    ("Misc.map_update_eta_repair",
     "?m ?k = None ==>
      ran (%x. if x = ?k then Some ?v else ?m x) = insert ?v (ran ?m)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_var 1), template_hole 6)],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 4, template_var 2))))),
    ("Misc.take_update_last",
     "?n < length ?list ==>
      (take (Suc ?n) ?list)[?n := ?x] = take ?n ?list @ [?x]",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2)),
                 template_var 1)),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Misc.diff_union_single_convs",
     "?a :# ?J ==> ?I + ?J - {#?a#} = ?I + (?J - {#?a#})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0)))))),
    ("Misc.diff_union_single_conv2",
     "?a :# ?J ==> ?J + ?I - {#?a#} = ?J - {#?a#} + ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))),
           template_var 0)))),
    ("Misc.mset_union_diff_comm",
     "?t :# ?S ==> ?T + (?S - {#?t#}) = ?T + ?S - {#?t#}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("Misc.Field_not_elem",
     "?v ~: Field ?R ==> ALL (x, y):?R. x ~= ?v & y ~= ?v",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, t_empty))
           ))),
    ("Misc.map_leI",
     "(!!x v. ?m1.0 x = Some v ==> ?m2.0 x = Some v) ==>
      ?m1.0 \<subseteq>\<^sub>m ?m2.0",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Misc.mlex_snd_decrI",
     "[| ?a = ?a'; ?b < ?b' |] ==> ?a * ?N + ?b < ?a' * ?N + ?b'",
     template_implication
      ([template_equation (template_var 4, template_var 3),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 1)))),
    ("Misc.sorted_append_bigger",
     "[| sorted ?xs; ALL x:set ?xs. x <= ?y |] ==> sorted (?xs @ [?y])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Misc.mlex_leI",
     "[| ?a <= ?a'; ?b <= ?b' |] ==> ?a * ?N + ?b <= ?a' * ?N + ?b'",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 1)))),
    ("Misc.inter_eq_subsetI",
     "[| ?S <= ?S'; ?A Int ?S' = ?B Int ?S' |] ==> ?A Int ?S = ?B Int ?S",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Misc.neq_NilE",
     "[| ?l ~= []; !!x xs. ?l = x # xs ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rtrancl_image_advance",
     "[| ?q : ?R^* `` ?Q0.0; (?q, ?x) : ?R |] ==> ?x : ?R^* `` ?Q0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1))
           ))),
    ("Misc.Union_sum",
     "\<Union> (range ?f) = (UN l. ?f (Inl l)) Un (UN r. ?f (Inr r))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, t_empty), template_hole 7)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 5, t_empty), template_hole 3))),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0))))),
    ("Misc.length_Suc_rev_conv",
     "(length ?xs = Suc ?n) = (EX ys y. ?xs = ys @ [y] & length ys = ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Misc.less_length_takeWhile_conv",
     "(?i < length (takeWhile ?P ?l)) =
      (?i < length ?l & (ALL j<=?i. ?P (?l ! j)))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app (template_hole 6, template_var 0))),
         template_app (template_hole 3, t_empty)))),
    ("Misc.snoc_eq_iff_butlast'",
     "(?ys = ?xs @ [?x]) = (?ys ~= [] & butlast ?ys = ?xs & last ?ys = ?x)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 5))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 2, template_var 2)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("Misc.in_set_image_conv_nth",
     "(?f ?x : ?f ` set ?l) = (EX i<length ?l. ?f (?l ! i) = ?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_var 2, template_var 1)),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_app (template_hole 6, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("Misc.laz_conj",
     "list_all_zip (%x y. ?P x y & ?Q x y) ?a ?b =
      (list_all_zip ?P ?a ?b & list_all_zip ?Q ?a ?b)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Misc.partition_rev_filter_conv",
     "partition_rev ?P (?yes, ?no) ?xs =
      (rev (filter ?P ?xs) @ ?yes, rev (filter (Not o ?P) ?xs) @ ?no)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0))),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 3)),
                 template_var 0))),
           template_var 1)))),
    ("Misc.foldr_snd_zip",
     "length ?ys <= length ?xs ==>
      foldr (%(x, y). ?f y) (zip ?xs ?ys) ?b = foldr ?f ?ys ?b",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Misc.set_to_map_insert",
     "fst ?kv ~: fst ` ?S ==>
      set_to_map (insert ?kv ?S) = set_to_map ?S(fst ?kv |-> snd ?kv)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 1)),
                  template_app
                   (template_app (template_hole 6, template_hole 7),
                    template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 0)),
             template_app (template_hole 7, template_var 1)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("Misc.last_take_nth_conv",
     "[| ?n <= length ?l; ?n ~= 0 |] ==> last (take ?n ?l) = ?l ! (?n - 1)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Misc.rtrancl_image_advance_rtrancl",
     "[| ?q : ?R^* `` ?Q0.0; (?q, ?x) : ?R^* |] ==> ?x : ?R^* `` ?Q0.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0)),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 1))
           ))),
    ("Misc.Image_absorb_rtrancl",
     "[| trans ?A; refl_on ?B ?A; ?C <= ?B |] ==> ?A^* `` ?C = ?A `` ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Misc.disjE1",
     "[| ?P | ?Q; ?P ==> ?R; [| ~ ?P; ?Q |] ==> ?R |] ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_var 2)],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation (template_predicate (template_var 2))],
          template_implication
           ([template_predicate (template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.disjE2",
     "[| ?P | ?Q; [| ?P; ~ ?Q |] ==> ?R; ?Q ==> ?R |] ==> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_var 2)],
          template_implication
           ([template_negation (template_predicate (template_var 1))],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate (template_var 1)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Misc.disjoint_mono",
     "[| ?a <= ?a'; ?b <= ?b'; ?a' Int ?b' = {} |] ==> ?a Int ?b = {}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 0),
          template_hole 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_hole 0))),
    ("Misc.fst_foldl",
     "fst (foldl (%(a, b) x. (?f a x, ?g a b x)) (?a, ?b) ?xs) =
      foldl ?f ?a ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 4), template_var 2),
         template_var 0))),
    ("Misc.set_drop_conv",
     "set (drop ?n ?l) = {?l ! i |i. ?n <= i & i < length ?l}",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Misc.SPLIT_ACCORDING_simp",
     "??.Misc.SPLIT_ACCORDING ?m (?l1.0 @ ?l2.0) =
      (EX m1 m2.
          ?m = m1 @ m2 &
          ??.Misc.SPLIT_ACCORDING m1 ?l1.0 &
          ??.Misc.SPLIT_ACCORDING m2 ?l2.0)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Misc.in_set_drop_conv_nth",
     "(?x : set (drop ?n ?l)) = (EX i>=?n. i < length ?l & ?x = ?l ! i)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_app (template_hole 6, t_empty))),
    ("Misc.list_se_match",
     "?l1.0 ~= [] ==> (?l1.0 @ ?l2.0 = [?a]) = (?l1.0 = [?a] & ?l2.0 = [])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 4)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 4))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 4))
             )))),
    ("Misc.list_se_match",
     "?l1.0 ~= [] ==> ([?a] = ?l1.0 @ ?l2.0) = (?l1.0 = [?a] & ?l2.0 = [])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 4),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 4))),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))
             )))),
    ("Misc.list_se_match",
     "?l2.0 ~= [] ==> (?l1.0 @ ?l2.0 = [?a]) = (?l1.0 = [] & ?l2.0 = [?a])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 4)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4)),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 4)))
             )))),
    ("Misc.list_se_match",
     "?l2.0 ~= [] ==> ([?a] = ?l1.0 @ ?l2.0) = (?l1.0 = [] & ?l2.0 = [?a])",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 4),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4)),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 4)))
             )))),
    ("Misc.Eps_Opt_eq_Some",
     "(!!x'. [| ?P ?x; ?P x' |] ==> x' = ?x) ==>
      (Eps_Opt ?P = Some ?x) = ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Misc.exists_leI",
     "(ALL n'<?n. ~ ?P n' ==> ?P ?n) ==> EX n'<=?n. ?P n'",
     template_implication
      ([template_implication
         ([template_predicate (template_app (template_hole 6, t_empty))],
          template_predicate
           (template_app (template_var 0, template_var 1)))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Misc.nat_compl_induct",
     "[| ?P 0; !!n. ALL nn<=n. ?P nn ==> ?P (Suc n) |] ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Misc.neq_Nil_revE",
     "[| ?l ~= []; !!ll e. ?l = ll @ [e] ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.le_some_optE",
     "[| Some ?m <= ?x; !!m'. [| ?x = Some m'; ?m <= m' |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mset_le_mono_add_single",
     "[| ?a :# ?ys; ?b :# ?ws |] ==> {#?a#} + {#?b#} <=# ?ys + ?ws",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("Misc.in_set_list_format",
     "[| ?e : set ?l; !!l1 l2. ?l = l1 @ ?e # l2 ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.list_rest_coinc",
     "[| length ?s2.0 <= length ?s1.0; ?s1.0 @ ?r1.0 = ?s2.0 @ ?r2.0 |]
      ==> EX r1p. ?r2.0 = r1p @ ?r1.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 0))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Misc.hd_last_singletonI",
     "[| ?xs ~= []; hd ?xs = last ?xs; distinct ?xs |] ==> ?xs = [hd ?xs]",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 0),
          template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_hole 5)))),
    ("Misc.Union_plus",
     "\<Union> (?f ` (?A <+> ?B)) =
      (UN a:?A. ?f (Inl a)) Un (UN b:?B. ?f (Inr b))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, t_empty), template_var 1))),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Misc.mset_mergesort_by_rel_split",
     "mset (fst (mergesort_by_rel_split (?xs1.0, ?xs2.0) ?xs)) +
      mset (snd (mergesort_by_rel_split (?xs1.0, ?xs2.0) ?xs)) =
      mset ?xs + mset ?xs1.0 + mset ?xs2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app (template_hole 4, template_var 2))),
         template_app (template_hole 4, template_var 1)))),
    ("Misc.foldl_snd_zip",
     "length ?ys <= length ?xs ==>
      foldl (%b (x, y). ?f b y) ?b (zip ?xs ?ys) = foldl ?f ?b ?ys",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3)))),
    ("Misc.nat_compl_induct'",
     "[| ?P 0; !!n. (!!nn. nn <= n ==> ?P nn) ==> ?P (Suc n) |] ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Misc.finite_reachable_advance",
     "[| finite (?E^* `` {?v0.0}); (?v0.0, ?v) : ?E^* |]
      ==> finite (?E^* `` {?v})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 2)),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_app (template_hole 4, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 2)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))
           ))),
    ("Misc.map_to_set_upd",
     "map_to_set (?m(?k |-> ?v)) =
      insert (?k, ?v) (map_to_set ?m - {(?k, v') |v'. True})",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1),
           template_app (template_hole 8, template_var 0))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 10, template_var 2)),
           template_app (template_hole 4, t_empty))))),
    ("Misc.list_all_zip_alt",
     "list_all_zip ?P ?as ?bs =
      (length ?as = length ?bs &
       (ALL i<length ?as. ?P (?as ! i) (?bs ! i)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 1)),
                 template_app (template_hole 5, template_var 0))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Misc.map_of_distinct_upd",
     "?x ~: set (map fst ?xs) ==>
      [?x |-> ?y] ++ map_of ?xs = map_of ?xs(?x |-> ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, t_empty), template_var 2),
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 1)),
             template_var 2),
           template_app (template_hole 1, template_var 0))))),
    ("Misc.map_consI",
     "?w @ ?l = map ?f ?ww @ ?l ==>
      ?f ?a # ?w @ ?l = map ?f (?a # ?ww) @ ?l",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1))),
           template_var 3)))),
    ("Misc.map_upd_eq",
     "(?i < length ?l ==> ?f (?l ! ?i) = ?f ?x) ==>
      map ?f (?l[?i := ?x]) = map ?f ?l",
     template_implication
      ([template_implication
         ([template_inequation
            (less_than, template_var 3,
             template_app (template_hole 5, template_var 2))],
          template_equation
           (template_app
             (template_var 1,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 3)),
            template_app (template_var 1, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Misc.map_distinct_upd_conv",
     "[| ?i < length ?l; distinct ?l |]
      ==> (map ?f ?l)[?i := ?x] = map (?f(?l ! ?i := ?x)) ?l",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_var 0)),
           template_var 2)))),
    ("Misc.butlast_eq_consE",
     "[| butlast ?l = ?x # ?xs; !!xl. ?l = ?x # ?xs @ [xl] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.wf_min",
     "[| wf ?R; ?R ~= {}; !!m. m : Domain ?R - Range ?R ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.tl_obtain_elem",
     "[| ?xs ~= []; tl ?xs = []; !!e. ?xs = [e] ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_hole 3),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.distinct_map_fstD",
     "[| distinct (map fst ?xs); (?x, ?y) : set ?xs; (?x, ?z) : set ?xs |]
      ==> ?y = ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 0)),
              template_app (template_hole 1, template_var 3))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Misc.mlex_fst_decrI",
     "[| ?a < ?a'; ?b < ?N; ?b' < ?N |] ==> ?a * ?N + ?b < ?a' * ?N + ?b'",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Misc.map_add_distinct_le",
     "[| ?m <= ?m'; ?n <= ?n'; dom ?m' Int dom ?n' = {} |]
      ==> ?m ++ ?n <= ?m' ++ ?n'",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2)),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Misc.wf_max",
     "[| wf (?R^-1); ?R ~= {}; !!m. m : Range ?R - Domain ?R ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rel_restrictI",
     "[| ?x ~: ?R; ?y ~: ?R; (?x, ?y) : ?E |]
      ==> (?x, ?y) : rel_restrict ?E ?R",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Misc.mset_le_single_cases",
     "[| ?M <=# {#?a#}; ?M = {#} ==> ?P; ?M = {#?a#} ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Misc.cset_fin_simps",
     "{a. EX b. ?f a b : ?S} = fst ` {p |p. ?f (fst p) (snd p) : ?S}",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, t_empty)))),
    ("Misc.fs_contract",
     "fst ` {p |p. ?f (fst p) (snd p) : ?S} = {a. EX b. ?f a b : ?S}",
     template_equation
      (template_app
        (template_app (template_hole 9, template_hole 8),
         template_app (template_hole 7, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("Misc.eq_f_restr_conv",
     "(?s <= dom (?f ?A) & ?A = ?f ?A |` (- ?s)) =
      (?A \<subseteq>\<^sub>m ?f ?A & ?s = dom (?f ?A) - dom ?A)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_hole 6,
                   template_app (template_var 1, template_var 0)))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_var 1, template_var 0)),
                 template_app (template_hole 3, template_var 2))))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_var 1, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 6,
                     template_app (template_var 1, template_var 0))),
                 template_app (template_hole 6, template_var 0))))
           ))),
    ("Misc.in_set_upd_eq_aux",
     "?i < length ?l ==>
      (?x : set (?l[?i := ?y])) =
      (?x = ?y | (ALL y. ?x : set (?l[?i := y])))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 3),
                    template_var 0)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app (template_hole 0, t_empty))
             )))),
    ("Misc.map_of_Some_split",
     "map_of ?xs ?k = Some ?v ==>
      EX ys zs. ?xs = ys @ (?k, ?v) # zs & map_of ys ?k = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 2), template_var 1),
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Misc.distinct_match",
     "distinct (?al @ ?e # ?bl) ==>
      (?al @ ?e # ?bl = ?al' @ ?e # ?bl') = (?al = ?al' & ?bl = ?bl')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0))),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 1)),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))
             )))),
    ("Misc.lists_image_witness",
     "[| ?x : lists (?f ` ?Q);
         !!xo. [| xo : lists ?Q; ?x = map ?f xo |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rtrancl_restrictI",
     "[| (?u, ?v) : (?E - UNIV \<times> ?R)^*; ?u ~: ?R |]
      ==> (?u, ?v) : (rel_restrict ?E ?R)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    t_empty))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Misc.mset_un_cases",
     "[| ?a :# ?A + ?B; ?a :# ?A ==> ?P; ?a :# ?B ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 2))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app (template_hole 1, template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Misc.distinct_sorted_mono",
     "[| sorted ?l; distinct ?l; ?i < ?j; ?j < length ?l |]
      ==> ?l ! ?i < ?l ! ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Misc.pairself_image_eq",
     "pairself ?f ` {(a, b). ?P a b} = {(?f a, ?f b) |a b. ?P a b}",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))),
       template_app (template_hole 4, t_empty))),
    ("Misc.foldl_list_update",
     "?n < length ?xs ==>
      foldl ?f ?a (?xs[?n := ?x]) =
      foldl ?f (?f (foldl ?f ?a (take ?n ?xs)) ?x) (drop (Suc ?n) ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 6, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_var 2,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1),
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)),
             template_var 3))))),
    ("Misc.eq_f_restr_ss_eq",
     "?s <= dom (?f ?A) ==>
      (?A = ?f ?A |` (- ?s)) =
      (?A \<subseteq>\<^sub>m ?f ?A & ?s = dom (?f ?A) - dom ?A)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 8,
            template_app (template_var 1, template_var 0)))],
       template_bimplication
        (template_equation
          (template_var 0,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_var 1, template_var 0)),
             template_app (template_hole 4, template_var 2))),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_var 1, template_var 0))),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_hole 8,
                       template_app (template_var 1, template_var 0))),
                   template_app (template_hole 8, template_var 0))))
             )))),
    ("Misc.finite_imp_inj_to_nat_seg'",
     "[| finite ?A;
         !!f n. [| f ` ?A = {i. i < n}; inj_on f ?A |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.INFM_nat_inductI",
     "[| ?P 0; !!i. ?P i ==> EX j>i. ?P j & ?Q j |] ==> INFM i. ?Q i",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Misc.lazI",
     "[| length ?a = length ?b;
         !!i. i < length ?b ==> ?P (?a ! i) (?b ! i) |]
      ==> list_all_zip ?P ?a ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Misc.mset_size2elem",
     "[| size ?P <= 2; {#?q#} + {#?q'#} <=# ?P |]
      ==> ?P = {#?q#} + {#?q'#}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_hole 1)),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 1))),
              template_var 2)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Misc.mset_size_le1_cases",
     "[| size ?M <= Suc 0; ?M = {#} ==> ?P; !!m. ?M = {#m#} ==> ?P |]
      ==> ?P",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4)),
        template_implication
         ([template_equation (template_var 1, template_hole 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.map_of_Some_filter_not_in",
     "[| map_of ?xs ?k = Some ?v; ~ ?P (?k, ?v); distinct (map fst ?xs) |]
      ==> map_of (filter ?P ?xs) ?k = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3), template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_var 0,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_var 2),
         template_hole 0))),
    ("Misc.distinct_map_eq",
     "[| distinct (map ?f ?l); ?f ?x = ?f ?y; ?x : set ?l; ?y : set ?l |]
      ==> ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app (template_var 3, template_var 1),
          template_app (template_var 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Misc.append_eq_map_conv",
     "(?fl @ ?fl' = map ?f ?ls) =
      (EX l l'. ?ls = l @ l' & map ?f l = ?fl & map ?f l' = ?fl')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Misc.map_eq_append_conv",
     "(map ?f ?ls = ?fl @ ?fl') =
      (EX l l'. ?ls = l @ l' & map ?f l = ?fl & map ?f l' = ?fl')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Misc.list_ee_eq_leel",
     "([?e1.0, ?e2.0] = ?l1.0 @ ?e1' # ?e2' # ?l2.0) =
      (?l1.0 = [] & ?e1.0 = ?e1' & ?e2.0 = ?e2' & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 5),
           template_app
            (template_app (template_hole 4, template_var 4),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 3))))
           ))),
    ("Misc.list_ee_eq_leel",
     "(?l1.0 @ ?e1' # ?e2' # ?l2.0 = [?e1.0, ?e2.0]) =
      (?l1.0 = [] & ?e1.0 = ?e1' & ?e2.0 = ?e2' & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 5),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 2))))
           ))),
    ("Misc.mergesort_by_rel_simps",
     "mergesort_by_rel ?R (?x1.0 # ?x2.0 # ?xs) =
      (let (xs1, xs2) = mergesort_by_rel_split ([?x1.0], [?x2.0]) ?xs
       in mergesort_by_rel_merge ?R (mergesort_by_rel ?R xs1)
           (mergesort_by_rel ?R xs2))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 3),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 2))),
             template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Misc.mergesort_by_rel_merge_simps",
     "mergesort_by_rel_merge ?R (?x # ?xs) (?y # ?ys) =
      (if ?R ?x ?y then ?x # mergesort_by_rel_merge ?R ?xs (?y # ?ys)
       else ?y # mergesort_by_rel_merge ?R (?x # ?xs) ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_var 4, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("Misc.cset_fin_intros",
     "(!!x y. [| x : ?A; y : ?A; ?f x = ?f y |] ==> x = y) ==>
      inj_on ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Misc.pair_list_split",
     "(!!l1 l2.
          [| ?l = zip l1 l2; length l1 = length l2; length ?l = length l2 |]
          ==> ?P) ==>
      ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.length_compl_induct",
     "[| ?P [];
         !!e l. (!!ll. length ll <= length l ==> ?P ll) ==> ?P (e # l) |]
      ==> ?P ?l",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Misc.zip_eq_zip_same_len",
     "[| length ?a = length ?b; length ?a' = length ?b' |]
      ==> (zip ?a ?b = zip ?a' ?b') = (?a = ?a' & ?b = ?b')",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))
             )))),
    ("Misc.iffExI",
     "[| !!x. ?P x ==> ?Q x; !!x. ?Q x ==> ?P x |]
      ==> (EX x. ?P x) = (EX x. ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Misc.map_card_eq_iff",
     "[| finite (dom ?M); card (dom ?M) = card (ran ?M); ?x : dom ?M |]
      ==> (?M ?x = ?M ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2))
            ),
        template_equation
         (template_app
           (template_hole 6,
            template_app (template_hole 8, template_var 2)),
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 2))),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 8, template_var 2))
            )],
       template_bimplication
        (template_equation
          (template_app (template_var 2, template_var 1),
           template_app (template_var 2, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Misc.upt_eq_lel_conv",
     "([?l..<?h] = ?is1.0 @ ?i # ?is2.0) =
      (?is1.0 = [?l..<?i] & ?is2.0 = [Suc ?i..<?h] & ?l <= ?i & ?i < ?h)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 2, template_var 1)),
                     template_var 3))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3))))
           ))),
    ("Misc.mset_union_2_elem",
     "{#?a, ?b#} = add_mset ?c ?M ==>
      {#?a#} = ?M & ?b = ?c | ?a = ?c & {#?b#} = ?M",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3),
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_hole 3)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)),
                 template_var 0)))
           ))),
    ("Misc.slice_prepend",
     "[| ?i <= ?k; ?k <= length ?xs |]
      ==> let p = length ?ys
          in slice ?i ?k ?xs = slice (?i + p) (?k + p) (?ys @ ?xs)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("Misc.map_of_distinct_lookup",
     "[| ?x ~: set (map fst ?xs); ?x ~: set (map fst ?ys) |]
      ==> map_of (?xs @ (?x, ?y) # ?ys) ?x = Some ?y",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 0)),
                 template_var 1))),
           template_var 3),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.slice_nth",
     "[| ?from < ?to; ?to <= length ?xs; ?i < ?to - ?from |]
      ==> slice ?from ?to ?xs ! ?i = ?xs ! (?from + ?i)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Misc.zip_inj",
     "[| length ?a = length ?b; length ?a' = length ?b';
         zip ?a ?b = zip ?a' ?b' |]
      ==> ?a = ?a' & ?b = ?b'",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2)),
        template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Misc.slice_Cons",
     "slice ?begin ?end (?x # ?xs) =
      (if ?begin = 0 & 0 < ?end then ?x # slice ?begin (?end - 1) ?xs
       else slice (?begin - 1) (?end - 1) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 2, template_hole 3),
                     template_var 2))),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 8, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0)),
                   template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_hole 0)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0)),
               template_var 0))
           ))),
    ("Misc.butlast_upd_last_eq",
     "2 <= length ?l ==>
      (butlast ?l)[length ?l - 2 := ?x] = take (length ?l - 2) ?l @ [?x]",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_hole 9)),
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 8, template_var 1)),
               template_app
                (template_hole 11,
                 template_app (template_hole 10, template_hole 9)))),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 8, template_var 1)),
                   template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_hole 9)))),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Misc.length_compl_rev_induct",
     "[| ?P [];
         !!l e. (!!ll. length ll <= length l ==> ?P ll) ==> ?P (l @ [e]) |]
      ==> ?P ?l",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 6)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Misc.trancl_restrict_reachable",
     "[| (?u, ?v) : ?E^+; ?E `` ?S <= ?S; ?u : ?S |]
      ==> (?u, ?v) : (Restr ?E ?S)^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app (template_hole 5, template_var 1))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   t_empty))))
           ))),
    ("Misc.eq_or_mem_image_simp",
     "{?f l |l. l = ?a | l : ?B} = insert (?f ?a) {?f l |l. l : ?B}",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app (template_hole 7, t_empty)))),
    ("Misc.in_set_upd_eq",
     "?i < length ?l ==>
      (?x : set (?l[?i := ?y])) =
      (?x = ?y | ?x : set ?l & (ALL y. ?x : set (?l[?i := y])))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 3),
                    template_var 0)))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_app (template_hole 5, template_var 2))),
                 template_app (template_hole 0, t_empty)))
             )))),
    ("Misc.mset_le_distrib",
     "[| ?X <=# ?A + ?B;
         !!Xa Xb. [| ?X = Xa + Xb; Xa <=# ?A; Xb <=# ?B |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.bex2I",
     "[| (?a, ?b) : ?S; (?a, ?b) : ?S ==> ?P ?a ?b |]
      ==> EX a b. (a, b) : ?S & ?P a b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_var 1)
               )],
          template_predicate
           (
              template_app
               (template_app (template_var 0, template_var 3),
                template_var 2)
              ))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Misc.rtrancl_restrictI_aux",
     "[| (?u, ?v) : (?E - UNIV \<times> ?R)^*; ?u ~: ?R |]
      ==> (?u, ?v) : (rel_restrict ?E ?R)^* & ?v ~: ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    t_empty))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0)
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_var 2)),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)))
           ))),
    ("Misc.list_induct_first2",
     "[| ?P []; !!x. ?P [x]; !!x1 x2 xs. ?P xs ==> ?P (x1 # x2 # xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Misc.distinct_sorted_strict_mono_iff",
     "[| distinct ?l; sorted ?l; ?i < length ?l; ?j < length ?l |]
      ==> (?l ! ?i < ?l ! ?j) = (?i < ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("Misc.distinct_sorted_mono_iff",
     "[| distinct ?l; sorted ?l; ?i < length ?l; ?j < length ?l |]
      ==> (?l ! ?i <= ?l ! ?j) = (?i <= ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.distinct_idx",
     "[| distinct (map ?f ?l); ?i < length ?l; ?j < length ?l;
         ?f (?l ! ?i) = ?f (?l ! ?j) |]
      ==> ?i = ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app
           (template_var 3,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)),
          template_app
           (template_var 3,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)))],
       template_equation (template_var 1, template_var 0))),
    ("Misc.eq_len_takeWhile_conv",
     "(?i = length (takeWhile ?P ?l)) =
      (?i <= length ?l &
       (ALL j<?i. ?P (?l ! j)) & (?i < length ?l --> ~ ?P (?l ! ?i)))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 8, template_var 0))),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 4, t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 8, template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)))))))),
    ("Misc.Un_set_drop_extend",
     "[| Suc 0 <= ?j; ?j < length ?l |]
      ==> ?l ! (?j - Suc 0) Un \<Union> (set (drop ?j ?l)) =
          \<Union> (set (drop (?j - Suc 0) ?l))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_hole 9),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 10, template_hole 9)))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app (template_hole 10, template_hole 9))),
               template_var 0)))))),
    ("Misc.in_set_upd_cases",
     "[| ?x : set (?l[?i := ?y]); [| ?i < length ?l; ?x = ?y |] ==> ?thesis;
         ?x : set ?l ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_inequation
            (less_than, template_var 2,
             template_app (template_hole 1, template_var 3))],
          template_implication
           ([template_equation (template_var 4, template_var 1)],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_app (template_hole 4, template_var 3))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Misc.upt_eq_append_conv",
     "?i <= ?j ==>
      ([?i..<?j] = ?xs @ ?ys) =
      (EX k>=?i. k <= ?j & [?i..<k] = ?xs & [k..<?j] = ?ys)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Misc.map_of_distinct_upd4",
     "[| ?x ~: set (map fst ?xs); ?x ~: set (map fst ?ys) |]
      ==> map_of (?xs @ ?ys) = (map_of (?xs @ (?x, ?y) # ?ys))(?x := None)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 0)),
                     template_var 1)))),
             template_var 3),
           template_hole 0)))),
    ("Misc.filter_upt_last",
     "[| filter (%k. ?P (?l ! k)) [0..<length ?l] = ?js @ [?j]; ?j < ?i;
         ?i < length ?l |]
      ==> ~ ?P (?l ! ?i)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, t_empty),
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app (template_hole 5, template_var 3))),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_app
             (template_app (template_hole 3, template_var 1),
              template_hole 2))),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_var 4,
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_var 0))
               )
           ))),
    ("Misc.upt_filter_extend",
     "[| ?u <= ?u'; ALL i. ?u <= i & i < ?u' --> ~ ?P i |]
      ==> filter ?P [0..<?u] = filter ?P [0..<?u']",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1))))),
    ("Misc.set_image_eq_pointwiseI",
     "[| length ?l = length ?l';
         !!i. i < length ?l ==> ?f (?l ! i) = ?f (?l' ! i) |]
      ==> ?f ` set ?l = ?f ` set ?l'",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Misc.map_of_distinct_upd2",
     "[| ?x ~: set (map fst ?xs); ?x ~: set (map fst ?ys) |]
      ==> map_of (?xs @ (?x, ?y) # ?ys) = map_of (?xs @ ?ys)(?x |-> ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 2)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0)),
               template_var 1))),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1))),
             template_var 3),
           template_app (template_hole 0, template_var 0))))),
    ("Misc.rel_restrict_tranclI",
     "[| (?x, ?y) : ?E^+; ?x ~: ?R; ?y ~: ?R; ?E `` ?R <= ?R |]
      ==> (?x, ?y) : (rel_restrict ?E ?R)^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app (template_hole 5, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0)
                )
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Misc.not_distinct_split_distinct",
     "[| ~ distinct ?xs;
         !!y ys zs.
            [| distinct ys; y : set ys; ?xs = ys @ [y] @ zs |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 8, template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.merge_correct",
     "[| distinct ?l1.0 & sorted ?l1.0; distinct ?l2.0 & sorted ?l2.0 |]
      ==> distinct (merge ?l1.0 ?l2.0) &
          sorted (merge ?l1.0 ?l2.0) &
          set (merge ?l1.0 ?l2.0) = set ?l1.0 Un set ?l2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0)))))
           ))),
    ("Misc.map_eq_consE",
     "[| map ?f ?ls = ?fa # ?fl;
         !!a l. [| ?ls = a # l; ?f a = ?fa; map ?f l = ?fl |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.append_eq_mapE",
     "[| ?fl @ ?fl' = map ?f ?ls;
         !!l l'.
            [| ?ls = l @ l'; map ?f l = ?fl; map ?f l' = ?fl' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.map_eq_appendE",
     "[| map ?f ?ls = ?fl @ ?fl';
         !!l l'.
            [| ?ls = l @ l'; map ?f l = ?fl; map ?f l' = ?fl' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mset_map_split_orig",
     "[| ?f `# ?P = ?M1.0 + ?M2.0;
         !!P1 P2.
            [| ?P = P1 + P2; ?f `# P1 = ?M1.0; ?f `# P2 = ?M2.0 |] ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mset_map_split_orig_le",
     "[| ?f `# ?P <=# ?M1.0 + ?M2.0;
         !!P1 P2.
            [| ?P = P1 + P2; ?f `# P1 <=# ?M1.0; ?f `# P2 <=# ?M2.0 |]
            ==> ?Q |]
      ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.obtain_list_from_elements",
     "[| ALL i<?n. EX li. ?P li i;
         !!l. [| length l = ?n; ALL i<?n. ?P (l ! i) i |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.boolfun_cases",
     "[| ?g = (%x. False) ==> ?P; ?g = (%x. x) ==> ?P;
         ?g = (%x. True) ==> ?P; ?g = Not ==> ?P |]
      ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, t_empty)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation (template_var 1, t_empty)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation (template_var 1, t_empty)],
          template_predicate (template_var 0)),
        template_implication
         ([template_equation (template_var 1, t_empty)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Misc.map_of_distinct_upd3",
     "[| ?x ~: set (map fst ?xs); ?x ~: set (map fst ?ys) |]
      ==> map_of (?xs @ (?x, ?y) # ?ys) = map_of (?xs @ (?x, ?y') # ?ys)(?x 
          |-> ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 3)))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 2)))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 0)),
                     template_var 2)))),
             template_var 4),
           template_app (template_hole 0, template_var 1))))),
    ("Misc.sorted_wrt_mergesort_by_rel",
     "[| !!x y. ?R x y | ?R y x; !!x y z. [| ?R x y; ?R y z |] ==> ?R x z |]
      ==> sorted_wrt ?R (mergesort_by_rel ?R ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Misc.filter_nth_ex_nth",
     "?n < length (filter ?P ?xs) ==>
      EX m>=?n.
         m < length ?xs &
         filter ?P ?xs ! ?n = ?xs ! m &
         filter ?P (take m ?xs) = take ?n (filter ?P ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Misc.list_take_induct_tl2",
     "[| length ?xs = length ?ys;
         ALL n<length ?xs. ?P (?ys ! n) (?xs ! n) |]
      ==> ALL n<length (tl ?xs). ?P (tl ?ys ! n) (tl ?xs ! n)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Misc.sorted_wrt_quicksort_by_rel",
     "[| !!x y. ?R x y | ?R y x; !!x y z. [| ?R x y; ?R y z |] ==> ?R x z |]
      ==> sorted_wrt ?R (quicksort_by_rel ?R [] ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0),
               template_var 0))
           ))),
    ("Misc.map_mmupdE",
     "[| map_mmupd ?m ?K ?v ?k = Some ?x;
         [| ?k ~: ?K; ?m ?k = Some ?x |] ==> ?thesis;
         [| ?k : ?K; ?x = ?v |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 4)
                   )
               )],
          template_implication
           ([template_equation
              (template_app (template_var 5, template_var 2),
               template_app (template_hole 3, template_var 1))],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 4)
               )],
          template_implication
           ([template_equation (template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.mergesort_by_rel_split_length",
     "length (fst (mergesort_by_rel_split (?xs1.0, ?xs2.0) ?xs)) =
      length ?xs1.0 + length ?xs div 2 + length ?xs mod 2 &
      length (snd (mergesort_by_rel_split (?xs1.0, ?xs2.0) ?xs)) =
      length ?xs2.0 + length ?xs div 2",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_var 2),
                           template_var 1)),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 10, template_var 2)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 10, template_var 0)),
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3, template_hole 2))))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 10, template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))))),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_var 2),
                         template_var 1)),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 10, template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 10, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))))))
         )),
    ("Misc.foldl_rule_aux",
     "[| ?I ?\<sigma>0.0 ?l0.0;
         !!l1 l2 x \<sigma>.
            [| ?l0.0 = l1 @ x # l2; ?I \<sigma> (x # l2) |]
            ==> ?I (?f \<sigma> x) l2 |]
      ==> ?I (foldl ?f ?\<sigma>0.0 ?l0.0) []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_hole 0)
           ))),
    ("Misc.converse_rtranclE'",
     "[| (?u, ?v) : ?R^*; ?u = ?v ==> ?thesis;
         !!vh. [| ?u ~= vh; (?u, vh) : ?R; (vh, ?v) : ?R^* |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app (template_hole 3, template_var 1))
            ),
        template_implication
         ([template_equation (template_var 3, template_var 2)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.trancl_over_edgeE",
     "[| (?u, ?w) : (insert (?v1.0, ?v2.0) ?E)^+;
         (?u, ?w) : ?E^+ ==> ?thesis;
         [| (?u, ?v1.0) : ?E^*; (?v2.0, ?w) : ?E^* |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4)),
                 template_app (template_hole 2, template_var 1))
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 3)),
                 template_app (template_hole 0, template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 4)),
                   template_app (template_hole 0, template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.nth_step_trancl",
     "[| !!n. n < length ?xs - 1 ==> (?xs ! Suc n, ?xs ! n) : ?R;
         ?n < length ?xs; ?m < ?n |]
      ==> (?xs ! ?n, ?xs ! ?m) : ?R^+",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 3)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0))),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Misc.prop_match",
     "[| list_all ?P ?al; ~ ?P ?e; ~ ?P ?e'; list_all ?P ?bl |]
      ==> (?al @ ?e # ?bl = ?al' @ ?e' # ?bl') =
          (?al = ?al' & ?e = ?e' & ?bl = ?bl')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_var 5)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 6, template_var 4))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 6, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_var 2)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 0)))
             )))),
    ("Misc.E_closed_restr_reach_cases",
     "[| (?u, ?v) : ?E^*; ?E `` ?R <= ?R; ?v : ?R ==> ?thesis;
         [| ?u ~: ?R; (?u, ?v) : (rel_restrict ?E ?R)^* |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app (template_hole 5, template_var 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_var 1),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 1)
                   )
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 4),
                       template_var 3)),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.list_2pre_induct",
     "[| ?P [] []; !!e w1' w2. ?P w1' w2 ==> ?P (e # w1') w2;
         !!e w1 w2'. ?P w1 w2' ==> ?P w1 (e # w2') |]
      ==> ?P ?w1.0 ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_hole 7),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Misc.list_append_eq_Cons_cases",
     "[| ?ys @ ?zs = ?x # ?xs; [| ?ys = []; ?zs = ?x # ?xs |] ==> ?P;
         !!ys'. [| ?ys = ?x # ys'; ys' @ ?zs = ?xs |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_hole 1)],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.list_Cons_eq_append_cases",
     "[| ?x # ?xs = ?ys @ ?zs; [| ?ys = []; ?zs = ?x # ?xs |] ==> ?P;
         !!ys'. [| ?ys = ?x # ys'; ys' @ ?zs = ?xs |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 2, template_hole 1)],
          template_implication
           ([template_equation
              (template_var 1,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3))],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.prop_matchD",
     "[| ?al @ ?e # ?bl = ?al' @ ?e' # ?bl'; list_all ?P ?al; ~ ?P ?e;
         ~ ?P ?e'; list_all ?P ?bl |]
      ==> ?al = ?al' & ?e = ?e' & ?bl = ?bl'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 6),
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 6)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 5))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 6, template_var 6),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 1)))
           ))),
    ("Misc.laz_swap_ex",
     "[| list_all_zip (%a b. EX c. ?P a b c) ?A ?B;
         !!C. [| list_all_zip (%a c. EX b. ?P a b c) ?A C;
                 list_all_zip (%b c. EX a. ?P a b c) ?B C |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rtrancl_last_touch",
     "[| (?q, ?q') : ?R^*; ?q : ?S;
         !!qt. [| qt : ?S; (?q, qt) : ?R^*;
                  (qt, ?q') : (?R - UNIV \<times> ?S)^* |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.trancl_union_outside",
     "[| (?v, ?w) : (?E Un ?U)^+; (?v, ?w) ~: ?E^+ |]
      ==> EX x y.
             (?v, x) : (?E Un ?U)^* & (x, y) : ?U & (y, ?w) : (?E Un ?U)^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_var 2)),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Misc.some_theI",
     "[| EX a b. ?P a b;
         !!b1 b2. [| EX a. ?P a b1; EX a. ?P a b2 |] ==> b1 = b2 |]
      ==> ?P (SOME a. EX b. ?P a b) (THE b. EX a. ?P a b)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 0, template_app (template_hole 1, t_empty)),
             template_app (template_hole 0, t_empty))
           ))),
    ("Misc.list_all2_induct",
     "[| list_all2 ?P ?l ?l'; ?Q [] [];
         !!x x' ls ls'.
            [| ?P x x'; list_all2 ?P ls ls'; ?Q ls ls' |]
            ==> ?Q (x # ls) (x' # ls') |]
      ==> ?Q ?l ?l'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 7),
              template_hole 6)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Misc.sorted_wrt_mergesort_by_rel_merge",
     "[| !!x y. ?R x y | ?R y x; !!x y z. [| ?R x y; ?R y z |] ==> ?R x z |]
      ==> sorted_wrt ?R (mergesort_by_rel_merge ?R ?xs ?ys) =
          (sorted_wrt ?R ?xs & sorted_wrt ?R ?ys)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Misc.foldl_A1_eq",
     "[| !!e. ?f ?n e = e; !!e. ?f e ?n = e;
         !!a b c. ?f a (?f b c) = ?f (?f a b) c |]
      ==> foldl ?f ?i ?ww = ?f ?i (foldl ?f ?n ?ww)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_var 3, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0))))),
    ("Misc.rtrancl_last_visit_node",
     "(?s, ?s') : ?R^* ==>
      ?s ~= ?sh & (?s, ?s') : (?R Int UNIV \<times> - {?sh})^* |
      (?s, ?sh) : ?R^* & (?sh, ?s') : (?R Int UNIV \<times> - {?sh})^*",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app (template_hole 10, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 3),
                       template_var 2)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         t_empty)))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 3),
                       template_var 0)),
                   template_app (template_hole 10, template_var 1))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, template_var 0),
                     template_var 2)),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       t_empty))))))
           ))),
    ("Misc.mset_distrib",
     "[| ?A + ?B = ?M + ?N;
         !!Am An Bm Bn.
            [| ?A = Am + An; ?B = Bm + Bn; ?M = Am + Bm; ?N = An + Bn |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.distinct_foldl_invar",
     "[| distinct ?S; ?I (set ?S) ?\<sigma>0.0;
         !!x it \<sigma>.
            [| x : it; it <= set ?S; ?I it \<sigma> |]
            ==> ?I (it - {x}) (?f \<sigma> x) |]
      ==> ?I {} (foldl ?f ?\<sigma>0.0 ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_var 2,
                template_app (template_hole 9, template_var 3)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1),
               template_var 3))
           ))),
    ("Misc.foldl_rule",
     "[| ?I ?\<sigma>0.0 [] ?l0.0;
         !!l1 l2 x \<sigma>.
            [| ?l0.0 = l1 @ x # l2; ?I \<sigma> l1 (x # l2) |]
            ==> ?I (?f \<sigma> x) (l1 @ [x]) l2 |]
      ==> ?I (foldl ?f ?\<sigma>0.0 ?l0.0) ?l0.0 []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 3, template_var 2),
                template_hole 7),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_var 3,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2),
                   template_var 1)),
               template_var 1),
             template_hole 7)
           ))),
    ("Misc.mset_un_single_un_cases",
     "[| add_mset ?a ?A = ?B + ?C;
         [| ?a :# ?B; ?A = ?B - {#?a#} + ?C |] ==> ?P;
         [| ?a :# ?C; ?A = ?B + (?C - {#?a#}) |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 2))
               )],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_hole 0))),
                 template_var 1))],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app (template_hole 2, template_var 1))
               )],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_hole 0))))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.foldl_rule_aux_P",
     "[| ?I ?\<sigma>0.0 ?l0.0;
         !!l1 l2 x \<sigma>.
            [| ?l0.0 = l1 @ x # l2; ?I \<sigma> (x # l2) |]
            ==> ?I (?f \<sigma> x) l2;
         !!\<sigma>. ?I \<sigma> [] ==> ?P \<sigma> |]
      ==> ?P (foldl ?f ?\<sigma>0.0 ?l0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3), template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2))
           ))),
    ("Misc.merge_list_correct",
     "[| !!l. l : set ?ls ==> distinct l & sorted l;
         !!l. l : set ?as ==> distinct l & sorted l |]
      ==> distinct (merge_list ?as ?ls) &
          sorted (merge_list ?as ?ls) &
          set (merge_list ?as ?ls) = set (concat (?as @ ?ls))",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_var 1))),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 1))))))
           ))),
    ("Misc.trancl_multi_insert",
     "[| (?a, ?b) : (?r Un ?X \<times> {?m})^+; (?a, ?b) : ?r^+ ==> ?P;
         !!x. [| x : ?X; (?a, x) : ?r^*; (?m, ?b) : ?r^* |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    t_empty))))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 5),
                     template_var 4)),
                 template_app (template_hole 7, template_var 3))
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.trancl_multi_insert2",
     "[| (?a, ?b) : (?r Un {?m} \<times> ?X)^+; (?a, ?b) : ?r^+ ==> ?P;
         !!x. [| x : ?X; (?a, ?m) : ?r^*; (x, ?b) : ?r^* |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_hole 3)),
                    t_empty))))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 5),
                     template_var 4)),
                 template_app (template_hole 7, template_var 3))
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rtrancl_last_visit'",
     "[| (?q, ?q') : ?R^*; (?q, ?q') : (?R - UNIV \<times> ?S)^* ==> ?P;
         !!qt. [| qt : ?S; (?q, qt) : ?R^*;
                  (qt, ?q') : (?R - UNIV \<times> ?S)^* |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app (template_hole 5, template_var 2))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 4),
                     template_var 3)),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       t_empty))))
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rtrancl_last_visit",
     "[| (?q, ?q') : ?R^*; (?q, ?q') : (?R - UNIV \<times> ?S)^* ==> ?P;
         !!qt. [| qt : ?S; (?q, qt) : ?R^+;
                  (qt, ?q') : (?R - UNIV \<times> ?S)^* |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_app (template_hole 6, template_var 2))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 4),
                     template_var 3)),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       t_empty))))
               )],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.distinct_concat'",
     "[| distinct (filter (%ys. ys ~= []) ?xs);
         !!ys. ys : set ?xs ==> distinct ys;
         !!ys zs.
            [| ys : set ?xs; zs : set ?xs; ys ~= zs |]
            ==> set ys Int set zs = {} |]
      ==> distinct (concat ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, t_empty), template_var 0))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Misc.Un_interval",
     "[| ?b1.0 <= ?b2.0; ?b2.0 <= ?b3.0 |]
      ==> {?f i |i. ?b1.0 <= i & i < ?b2.0} Un
          {?f i |i. ?b2.0 <= i & i < ?b3.0} =
          {?f i |i. ?b1.0 <= i & i < ?b3.0}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty)),
         template_app (template_hole 4, t_empty)))),
    ("Misc.foldl_rule_P",
     "[| ?I ?\<sigma>0.0 [] ?l0.0;
         !!l1 l2 x \<sigma>.
            [| ?l0.0 = l1 @ x # l2; ?I \<sigma> l1 (x # l2) |]
            ==> ?I (?f \<sigma> x) (l1 @ [x]) l2;
         !!\<sigma>. ?I \<sigma> ?l0.0 [] ==> ?P \<sigma> |]
      ==> ?P (foldl ?f ?\<sigma>0.0 ?l0.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_var 4, template_var 3),
                template_hole 7),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3),
               template_var 2))
           ))),
    ("Misc.rev_induct2'",
     "[| ?P [] []; !!x xs. ?P (xs @ [x]) []; !!y ys. ?P [] (ys @ [y]);
         !!x xs y ys. ?P xs ys ==> ?P (xs @ [x]) (ys @ [y]) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 2, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Misc.mset_single_cases2'",
     "[| add_mset ?s ?c = add_mset ?r' ?c'; [| ?s = ?r'; ?c = ?c' |] ==> ?P;
         !!cc. [| ?c' = cc + {#?s#}; ?c = cc + {#?r'#}; ?c' - {#?s#} = cc;
                  ?c - {#?r'#} = cc |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mset_single_cases'",
     "[| add_mset ?s ?c = add_mset ?r' ?c'; [| ?s = ?r'; ?c = ?c' |] ==> ?P;
         !!cc. [| ?c' = {#?s#} + cc; ?c = {#?r'#} + cc; ?c' - {#?s#} = cc;
                  ?c - {#?r'#} = cc |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mset_single_cases",
     "[| add_mset ?s ?c = add_mset ?r' ?c'; [| ?s = ?r'; ?c = ?c' |] ==> ?P;
         [| ?c' = {#?s#} + (?c' - {#?s#}); ?c = {#?r'#} + (?c - {#?r'#});
            ?c - {#?r'#} = ?c' - {#?s#} |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_hole 1))))],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 1))))],
            template_implication
             ([template_equation
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 1)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_hole 1)))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Misc.mset_single_cases2",
     "[| add_mset ?s ?c = add_mset ?r' ?c'; [| ?s = ?r'; ?c = ?c' |] ==> ?P;
         [| ?c' = ?c' - {#?s#} + {#?s#}; ?c = ?c - {#?r'#} + {#?r'#};
            ?c - {#?r'#} = ?c' - {#?s#} |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_hole 0))),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_hole 0)))],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_hole 0))),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 0)))],
            template_implication
             ([template_equation
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 0)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_hole 0)))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Misc.mset_unplusm_dist_cases2",
     "[| ?B + ?C = {#?s#} + ?A;
         [| ?B = {#?s#} + (?B - {#?s#}); ?A = ?B - {#?s#} + ?C |] ==> ?P;
         [| ?C = {#?s#} + (?C - {#?s#}); ?A = ?B + (?C - {#?s#}) |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1)),
            template_var 1)),
        template_implication
         ([template_equation
            (template_var 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1))))],
          template_implication
           ([template_equation
              (template_var 1,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_hole 1))),
                 template_var 3))],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_var 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1))))],
          template_implication
           ([template_equation
              (template_var 1,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_hole 1))))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.mset_unplusm_dist_cases",
     "[| {#?s#} + ?A = ?B + ?C;
         [| ?B = {#?s#} + (?B - {#?s#}); ?A = ?B - {#?s#} + ?C |] ==> ?P;
         [| ?C = {#?s#} + (?C - {#?s#}); ?A = ?B + (?C - {#?s#}) |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 4),
                template_hole 1)),
            template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation
            (template_var 2,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_hole 1))))],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_var 4),
                       template_hole 1))),
                 template_var 1))],
            template_predicate (template_var 0))),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_hole 1))))],
          template_implication
           ([template_equation
              (template_var 3,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_hole 1))))],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.sorted_in_between",
     "[| 0 <= ?i; ?i < ?j; ?j < length ?l; sorted ?l; ?l ! ?i <= ?x;
         ?x < ?l ! ?j;
         !!k. [| ?i <= k; k < ?j; ?l ! k <= ?x; ?x < ?l ! (k + 1) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 4),
        template_inequation (less_than, template_var 4, template_var 3),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 4),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.mset_2dist2_cases",
     "[| {#?a#} + {#?b#} <=# ?A + ?B; {#?a#} + {#?b#} <=# ?A ==> ?P;
         {#?a#} + {#?b#} <=# ?B ==> ?P; [| ?a :# ?A; ?b :# ?B |] ==> ?P;
         [| ?a :# ?B; ?b :# ?A |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_hole 2)),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_hole 2))),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_hole 2)),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_hole 2))),
                 template_var 2)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 4),
                         template_hole 2)),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_hole 2))),
                 template_var 1)
               )],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app (template_hole 0, template_var 2))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_var 1))
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app (template_hole 0, template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app (template_hole 0, template_var 2))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Misc.mergesort_by_rel_merge_induct",
     "[| !!xs. ?P xs []; !!ys. ?P [] ys;
         !!x xs y ys. [| ?R x y; ?P xs (y # ys) |] ==> ?P (x # xs) (y # ys);
         !!x xs y ys.
            [| ~ ?R x y; ?P (x # xs) ys |] ==> ?P (x # xs) (y # ys) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 3, template_var 1), template_var 0)
           ))),
    ("Misc.list_match_lel_lel",
     "[| ?c1.0 @ ?qs # ?c2.0 = ?c1' @ ?qs' # ?c2';
         !!c21'.
            [| ?c1.0 = ?c1' @ ?qs' # c21'; ?c2' = c21' @ ?qs # ?c2.0 |]
            ==> ?thesis;
         [| ?c1' = ?c1.0; ?qs' = ?qs; ?c2' = ?c2.0 |] ==> ?thesis;
         !!c21.
            [| ?c1' = ?c1.0 @ ?qs # c21; ?c2.0 = c21 @ ?qs' # ?c2' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 6),
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 4)),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1))),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_implication
         ([template_equation (template_var 3, template_var 6)],
          template_implication
           ([template_equation (template_var 2, template_var 5)],
            template_implication
             ([template_equation (template_var 1, template_var 4)],
              template_predicate (template_var 0)))),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.xy_in_set_cases",
     "[| ?x : set ?l; ?y : set ?l;
         !!l1 l2. [| ?x = ?y; ?l = l1 @ ?y # l2 |] ==> ?P;
         !!l1 l2 l3. [| ?x ~= ?y; ?l = l1 @ ?x # l2 @ ?y # l3 |] ==> ?P;
         !!l1 l2 l3. [| ?x ~= ?y; ?l = l1 @ ?y # l2 @ ?x # l3 |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Misc.rev_nonempty_induct2'",
     "[| ?xs ~= []; ?ys ~= []; !!x y. ?P [x] [y];
         !!x xs y. xs ~= [] ==> ?P (xs @ [x]) [y];
         !!x y ys. ys ~= [] ==> ?P [x] (ys @ [y]);
         !!x xs y ys.
            [| ?P xs ys; xs ~= []; ys ~= [] |]
            ==> ?P (xs @ [x]) (ys @ [y]) |]
      ==> ?P ?xs ?ys",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.MiscMoreTemplates"
### 0.580s elapsed time, 0.833s cpu time, 0.148s GC time
val it = (): unit
