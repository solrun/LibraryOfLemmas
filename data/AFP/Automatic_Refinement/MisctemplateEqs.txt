   [("Misc.curry_uncurry_id", "curry (uncurry ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.restrict_map_UNIV", "?f |` UNIV = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Misc.map_to_set_inverse", "set_to_map (map_to_set ?m) = ?m",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.uncurry_curry_id", "uncurry (curry ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.list_collect_set_simps", "list_collect_set ?f [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Misc.rel_restrict_empty", "rel_restrict ?R {} = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_simps", "mergesort_by_rel ?R [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Misc.restrict_map_self", "?m |` dom ?m = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.map_mmupd_empty", "map_mmupd ?m {} ?v = ?m",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 1)),
    ("Misc.the_dflt_None_set", "the_default {} (dflt_None_set ?x) = ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Misc.op_conc_empty_img_id", "(@) [] ` ?L = ?L",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Misc.rel_of_empty", "rel_of Map.empty ?P = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_hole 0)),
    ("Misc.finite_Field_eq_finite", "finite (Field ?R) = finite ?R",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Misc.foldr_Cons", "foldr (#) ?xs [] = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_merge_simps",
     "mergesort_by_rel_merge ?R [] ?ys = ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_merge_simps",
     "mergesort_by_rel_merge ?R ?xs [] = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Misc.slice_Nil", "slice ?begin ?end [] = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Misc.slice_eq_bounds_empty", "slice ?i ?i ?xs = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Misc.some_opt_sym_eq_trivial", "Eps_Opt ((=) ?x) = Some ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Misc.card_map_to_set", "card (map_to_set ?m) = card (dom ?m)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.length_remdups_card", "length (remdups ?l) = card (set ?l)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.map_to_set_dom", "dom ?m = fst ` map_to_set ?m",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.map_to_set_ran", "ran ?m = snd ` map_to_set ?m",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.set_to_map_dom", "dom (set_to_map ?S) = fst ` ?S",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Misc.set_mergesort_by_rel", "set (mergesort_by_rel ?R ?xs) = set ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Misc.dom_const'", "dom (%x. Some (?f x)) = UNIV",
     template_equation
      (template_app (template_hole 2, t_empty), template_hole 0)),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x []) = {}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Misc.converse_add_simps", "(?r^+)^-1 = (?r^-1)^+",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Misc.finite_map_to_set", "finite (map_to_set ?m) = finite (dom ?m)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.rev_butlast_is_tl_rev", "rev (butlast ?l) = tl (rev ?l)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Misc.slice_complete", "slice 0 (length ?xs) ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Misc.mergesort_by_rel_permutes",
     "mset (mergesort_by_rel ?R ?xs) = mset ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Misc.restrict_map_inv", "?f |` (- dom ?f) = Map.empty",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       t_empty)),
    ("Misc.inter_compl_diff_conv", "?A Int - ?B = ?A - ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.list_collect_set_simps", "list_collect_set ?f [?a] = ?f ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app (template_var 1, template_var 0))),
    ("Misc.nat_geq_1_eq_neqz", "(1 <= ?x) = (?x ~= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.Eps_Opt_eq_None", "(Eps_Opt ?P = None) = (~ Ex ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Misc.laz_eq", "list_all_zip (=) ?a ?b = (?a = ?b)",
     template_bimplication
      (template_dunno, template_equation (template_var 1, template_var 0))),
    ("Misc.below_Id_inv", "(?R^-1 <= Id) = (?R <= Id)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("Misc.filter_rev_alt", "filter_rev ?P ?l = filter ?P (rev ?l)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.revg_fun", "revg ?a ?b = rev ?a @ ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.some_opt_eq_trivial", "Eps_Opt (%y. y = ?x) = Some ?x",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Misc.do_uncurry", "?f ?a ?b = uncurry ?f (?a, ?b)",
     template_equation
      (template_app
        (template_app (template_var 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.do_curry", "?f (?a, ?b) = curry ?f ?a ?b",
     template_equation
      (template_app
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Misc.uncurry_apply", "uncurry ?f (?a, ?b) = ?f ?a ?b",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_var 2, template_var 1), template_var 0))),
    ("Misc.ran_is_image", "ran ?M = (the o ?M) ` dom ?M",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.list_collect_set_as_map",
     "list_collect_set ?f ?l = \<Union> (set (map ?f ?l))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Misc.atLeastPlusOneAtMost_greaterThanAtMost_integer",
     "{?l + 1..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.atLeastLessThanPlusOne_atLeastAtMost_integer",
     "{?l..<?u + 1} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.atLeastPlusOneLessThan_greaterThanLessThan_integer",
     "{?l + 1..<?u} = {?l<..<?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.bijective_alt",
     "bijective ?R = (single_valued ?R & single_valued (?R^-1))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Misc.map_to_set_empty_iff", "({} = map_to_set ?m) = (?m = Map.empty)",
     template_bimplication
      (template_equation
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, t_empty))),
    ("Misc.map_to_set_empty_iff", "(map_to_set ?m = {}) = (?m = Map.empty)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, t_empty))),
    ("Misc.imp_mp_iff", "(?a & (?a --> ?b)) = (?a & ?b)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Misc.imp_mp_iff", "((?a --> ?b) & ?a) = (?a & ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Misc.set_to_map_empty_iff", "(Map.empty = set_to_map ?S) = (?S = {})",
     template_bimplication
      (template_equation
        (t_empty, template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 0))),
    ("Misc.set_to_map_empty_iff", "(set_to_map ?S = Map.empty) = (?S = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), t_empty),
       template_equation (template_var 0, template_hole 0))),
    ("Misc.card_eq_UNIV2", "(card UNIV = card ?S) = (?S = UNIV)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 2, template_var 0)),
       template_equation (template_var 0, template_hole 1))),
    ("Misc.card_eq_UNIV", "(card ?S = card UNIV) = (?S = UNIV)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_equation (template_var 0, template_hole 1))),
    ("Misc.upt_0_eq_Nil_conv", "([0..<?j] = []) = (?j = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_hole 1),
       template_equation (template_var 0, template_hole 2))),
    ("Misc.min_less_self_conv", "(min ?a ?b < ?a) = (?b < ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("Misc.min_less_self_conv", "(min ?a ?b < ?b) = (?a < ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Misc.zero_comp_diff_simps", "((0::?'a) < ?a - ?b) = (?b < ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("Misc.int_of_integer_less_iff",
     "(int_of_integer ?x < int_of_integer ?y) = (?x < ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.zero_comp_diff_simps", "((0::?'a) <= ?a - ?b) = (?b <= ?a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("Misc.card_ge_UNIV", "(card UNIV <= card ?S) = (?S = UNIV)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_hole 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Misc.ex_b_b_and_simp", "(EX b. b & ?Q b) = ?Q True",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("Misc.mergesort_by_rel_simps", "mergesort_by_rel ?R [?x] = [?x]",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Misc.if_not_swap",
     "(if ~ ?c then ?a else ?b) = (if ?c then ?b else ?a)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_var 1))),
    ("Misc.set_oo_map_alt",
     "(set \<circ>\<circ> map) ?f = (%l. ?f ` set l)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       t_empty)),
    ("Misc.fn_fst_conv", "(%x. ?f (fst x)) = (%(a, uu_). ?f a)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Misc.fn_snd_conv", "(%x. ?f (snd x)) = (%(uu_, b). ?f b)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Misc.foldl_length", "foldl (%i x. Suc i) 0 ?l = length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_hole 1),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Misc.foldr_length", "foldr (%x. Suc) ?l 0 = length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Misc.pair_vimage_is_Image", "Pair ?u -` ?E = ?E `` {?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Misc.set_union_code", "set ?xs Un set ?ys = set (?xs @ ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.set_quicksort_by_rel",
     "set (quicksort_by_rel ?R ?sl ?xs) = set (?xs @ ?sl)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.dom_mmupd", "dom (map_mmupd ?m ?K ?v) = dom ?m Un ?K",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_var 1))),
    ("Misc.nth_image_indices", "(!) ?l ` {0..<length ?l} = set ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Misc.rel_restrict_compl",
     "rel_restrict ?R ?A Int rel_restrict ?R (- ?A) = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("Misc.converse_add_simps", "(?r Int ?s)^-1 = ?r^-1 Int ?s^-1",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.converse_add_simps", "(?r Un ?s)^-1 = ?r^-1 Un ?s^-1",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.converse_add_simps", "(?A \<times> ?B)^-1 = ?B \<times> ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Misc.subset_Collect_conv", "(?S <= Collect ?P) = (ALL x:?S. ?P x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Misc.length_ge_1_conv", "(Suc 0 <= length ?l) = (?l ~= [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4)),
              template_app (template_hole 3, template_var 0))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.ex_b_not_b_and_simp", "(EX b. ~ b & ?Q b) = ?Q False",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_var 0, template_hole 0))),
    ("Misc.take_butlast_conv", "take (length ?l - Suc 0) ?l = butlast ?l",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_hole 1))),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Misc.map_fst_mk_snd", "map fst (map (%x. (x, ?k)) ?l) = ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_var 0)),
    ("Misc.map_snd_mk_fst", "map snd (map (Pair ?k) ?l) = ?l",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_var 0)),
    ("Misc.butlast_upt", "butlast [?m..<?n] = [?m..<?n - 1]",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.quicksort_by_rel_permutes",
     "mset (quicksort_by_rel ?R ?sl ?xs) = mset (?xs @ ?sl)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Misc.foldl_foldl_conv_concat",
     "foldl (foldl ?f) ?a ?xs = foldl ?f ?a (concat ?xs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.map_upd_eq_restrict", "?m(?x := None) = ?m |` (- {?x})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Misc.map_add_ac",
     "?m1.0 ++ (?m2.0 ++ ?m3.0) = ?m1.0 ++ ?m2.0 ++ ?m3.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Misc.foldl_un_empty_eq",
     "foldl (Un) ?i ?ww = ?i Un foldl (Un) {} ?ww",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Misc.trancl_Image_unfold_right", "?E^+ `` ?S = ?E `` ?E^* `` ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Misc.trancl_Image_unfold_left", "?E^+ `` ?S = ?E^* `` ?E `` ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Misc.set_diff_diff_left", "?A - ?B - ?C = ?A - (?B Un ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Misc.set_mergesort_by_rel_merge",
     "set (mergesort_by_rel_merge ?R ?xs ?ys) = set ?xs Un set ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.trancl_image_by_rtrancl", "?E^+ `` ?Vi Un ?Vi = ?E^* `` ?Vi",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x [?a]) = ?f (?x ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_var 2, template_app (template_var 1, template_var 0)))),
    ("Misc.rel_restrict_union",
     "rel_restrict ?R (?A Un ?B) = rel_restrict (rel_restrict ?R ?A) ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Misc.Sigma_UNIV_cancel", "?A \<times> ?X - ?A \<times> UNIV = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)),
       template_hole 0)),
    ("Misc.same_fst_trancl",
     "(same_fst ?P ?R)^+ = same_fst ?P (%x. (?R x)^+)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("Misc.disjoint_alt_simp1", "(?A - ?B = ?A) = (?A Int ?B = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 1),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Misc.ex_Melem_conv", "(EX x. x :# ?A) = (?A ~= {#})",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Misc.mset_empty_count", "(ALL p. count ?M p = 0) = (?M = {#})",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Misc.foldl_conc_empty_eq", "foldl (@) ?i ?ww = ?i @ foldl (@) [] ?ww",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0),
           template_var 0)))),
    ("Misc.filter_rev_aux_alt",
     "filter_rev_aux ?a ?P ?l = filter ?P (rev ?l) @ ?a",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 2))),
    ("Misc.quicksort_by_rel_remove_acc",
     "quicksort_by_rel ?R ?sl ?xs = quicksort_by_rel ?R [] ?xs @ ?sl",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_hole 0),
             template_var 0)),
         template_var 1))),
    ("Misc.butlast_update'",
     "(butlast ?l)[?i := ?x] = butlast (?l[?i := ?x])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Misc.concat_filter_neq_Nil",
     "concat (filter (%ys. ys ~= []) ?xs) = concat ?xs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Misc.mset_mergesort_by_rel_merge",
     "mset (mergesort_by_rel_merge ?R ?xs ?ys) = mset ?xs + mset ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Misc.foldl_length_aux", "foldl (%i x. Suc i) ?a ?l = ?a + length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Misc.foldr_length_aux", "foldr (%x. Suc) ?l ?a = ?a + length ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Misc.foldl_set", "foldl (Un) {} ?l = \<Union> {x. x : set ?l}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_hole 4),
         template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Misc.list_collect_set_simps",
     "list_collect_set ?f (?a # ?l) = ?f ?a Un list_collect_set ?f ?l",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Misc.trancl_single", "{(?a, ?b)}^+ = {(?a, ?b)}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Misc.disjoint_alt_simp3", "(?A - ?B < ?A) = (?A Int ?B ~= {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Misc.nat_in_between_eq", "(?a <= ?b & ?b < Suc ?a) = (?b = ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 1)))
            )],
       template_equation (template_var 0, template_var 1))),
    ("Misc.replicate_Suc_conv_snoc",
     "replicate (Suc ?n) ?x = replicate ?n ?x @ [?x]",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Misc.list_collect_set_simps",
     "list_collect_set ?f (?l @ ?l') =
      list_collect_set ?f ?l Un list_collect_set ?f ?l'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Misc.fun_neq_ext_iff", "(?m ~= ?m') = (EX x. ?m x ~= ?m' x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Misc.disjoint_alt_simp2", "(?A - ?B ~= ?A) = (?A Int ?B ~= {})",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0),
             template_var 1)
           ),
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Misc.nat_in_between_eq", "(?a < ?b & ?b <= Suc ?a) = (?b = Suc ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app (template_hole 1, template_var 1)))
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("Misc.take_update", "take ?n (?l[?i := ?x]) = (take ?n ?l)[?i := ?x]",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Misc.map_fst_mk_fst",
     "map fst (map (Pair ?k) ?l) = replicate (length ?l) ?k",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Misc.map_snd_mk_snd",
     "map snd (map (%x. (x, ?k)) ?l) = replicate (length ?l) ?k",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Misc.map_zip1",
     "map (%x. (x, ?k)) ?l = zip ?l (replicate (length ?l) ?k)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Misc.map_zip2",
     "map (Pair ?k) ?l = zip (replicate (length ?l) ?k) ?l",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_var 0))),
    ("Misc.map_of_concat",
     "map_of (concat ?xss) = foldr (%xs f. f ++ map_of xs) ?xss Map.empty",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         t_empty))),
    ("Misc.image_add_integer_atLeastLessThan",
     "(%x. x + ?l) ` {0..<?u - ?l} = {?l..<?u}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Misc.fun_comp_eq_conv",
     "(?f o ?g = ?fg) = (ALL x. ?f (?g x) = ?fg x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Misc.restrict_map_eq",
     "((?m |` ?A) ?k = None) = (?k ~: dom ?m Int ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1))))),
    ("Misc.map_update_eta_repair",
     "dom (%x. if x = ?k then Some ?v else ?m x) = insert ?k (dom ?m)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 4, template_var 0)))),
    ("Misc.Union_take_drop_id",
     "\<Union> (set (drop ?n ?l)) Un \<Union> (set (take ?n ?l)) =
      \<Union> (set ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)))),
    ("Misc.ran_nth_set_encoding_conv",
     "ran (%i. if i < length ?l then Some (?l ! i) else None) = set ?l",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Misc.All_prod_contract",
     "(ALL a b. ?P a b) = (ALL z. ?P (fst z) (snd z))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Misc.Ex_prod_contract",
     "(EX a b. ?P a b) = (EX z. ?P (fst z) (snd z))",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Misc.card_doubleton_eq_2_iff", "(card {?a, ?b} = 2) = (?a ~= ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 5))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Misc.not_Some_eq2", "(ALL x y. ?v ~= Some (x, y)) = (?v = None)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 0, template_hole 0))),
    ("Misc.map_by_foldl", "foldl (%l x. l @ [?f x]) [] ?l = map ?f ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, t_empty), template_hole 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Misc.pairself_image_cart",
     "pairself ?f ` (?A \<times> ?B) = ?f ` ?A \<times> ?f ` ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         t_empty))),
    ("Misc.pair_set_inverse", "{(a, b). ?P a b}^-1 = {(b, a). ?P a b}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))),
       template_app
        (template_hole 1, template_app (template_hole 0, t_empty)))),
    ("Misc.neq_Nil_rev_conv", "(?l ~= []) = (EX xs x. ?l = xs @ [x])",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_hole 4)),
       template_app (template_hole 3, t_empty))),
    ("Misc.mset_contains_eq", "(?m :# ?M) = ({#?m#} + (?M - {#?m#}) = ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0))),
    ("Misc.list_all_zip_map2",
     "list_all_zip ?P ?as (map ?f ?bs) =
      list_all_zip (%a b. ?P a (?f b)) ?as ?bs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 2),
         template_var 0))),
    ("Misc.list_all_zip_map1",
     "list_all_zip ?P (map ?f ?as) ?bs =
      list_all_zip (%a. ?P (?f a)) ?as ?bs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0))),
    ("Misc.filter_conv_foldr",
     "filter ?P ?xs = foldr (%x xs. if ?P x then x # xs else xs) ?xs []",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 0),
         template_hole 0))),
    ("Misc.map_add_upt'",
     "map (%i. i + ?ofs) [?a..<?b] = [?a + ?ofs..<?b + ?ofs]",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Misc.restrict_map_upd",
     "(?f |` ?S)(?k |-> ?v) = ?f(?k |-> ?v) |` insert ?k ?S",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x (?a # ?l)) =
      ?f (?x ?a) Un list_collect_set ?f (map ?x ?l)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_var 3,
             template_app (template_var 2, template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Misc.restrict_map_eq",
     "((?m |` ?A) ?k = Some ?v) = (?m ?k = Some ?v & ?k : ?A)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_dunno)),
    ("Misc.cset_fin_simps", "{?f x |x. ?P x} = ?f ` {x. ?P x}",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, t_empty)))),
    ("Misc.butlast_eq_cons_conv",
     "(butlast ?l = ?x # ?xs) = (EX xl. ?l = ?x # ?xs @ [xl])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Misc.all_set_conv_nth",
     "(ALL x:set ?l. ?P x) = (ALL i<length ?l. ?P (?l ! i))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         t_empty),
       template_app (template_hole 4, t_empty))),
    ("Misc.nested_case_prod_simp",
     "(case ?x of (a, b) => ?f a b) ?y = (case ?x of (a, b) => ?f a b ?y)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 1))),
    ("Misc.set_map_filter",
     "set (List.map_filter ?g ?xs) =
      {y. EX x. x : set ?xs & ?g x = Some y}",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Misc.rtrancl_apply_insert",
     "?R^* `` insert ?x ?S = insert ?x (?R^* `` (?S Un ?R `` {?x}))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0))))))),
    ("Misc.list_collect_set_map_simps",
     "list_collect_set ?f (map ?x (?l @ ?l')) =
      list_collect_set ?f (map ?x ?l) Un list_collect_set ?f (map ?x ?l')",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Misc.SPLIT_ACCORDING_simp",
     "??.Misc.SPLIT_ACCORDING ?m (?x # ?l') =
      (EX y m'. ?m = y # m' & ??.Misc.SPLIT_ACCORDING m' ?l')",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Misc.map_sum_Inl_conv",
     "(map_sum ?fl ?fr ?s = Inl ?y) = (EX x. ?s = Inl x & ?y = ?fl x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Misc.map_sum_Inr_conv",
     "(map_sum ?fl ?fr ?s = Inr ?y) = (EX x. ?s = Inr x & ?y = ?fr x)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Misc.nth_list_update'",
     "?l[?i := ?x] ! ?j =
      (if ?i = ?j & ?i < length ?l then ?x else ?l ! ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("Misc.list_collect_set_alt",
     "list_collect_set ?f ?l = \<Union> {?f (?l ! i) |i. i < length ?l}",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6, template_app (template_hole 5, t_empty)))),
    ("Misc.laz_weak_Pa",
     "list_all_zip (%a b. ?P a) ?A ?B =
      (length ?A = length ?B & (ALL a:set ?A. ?P a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Misc.laz_weak_Pb",
     "list_all_zip (%a. ?P) ?A ?B =
      (length ?A = length ?B & (ALL b:set ?B. ?P b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Misc.map_prod_fun_zip",
     "map2 (%x y. (?f x, ?g y)) ?xs ?ys = zip (map ?f ?xs) (map ?g ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Misc.list_e_eq_lel",
     "([?e] = ?l1.0 @ ?e' # ?l2.0) = (?l1.0 = [] & ?e' = ?e & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 3), template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_dunno)),
    ("Misc.list_e_eq_lel",
     "(?l1.0 @ ?e' # ?l2.0 = [?e]) = (?l1.0 = [] & ?e' = ?e & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_dunno)),
    ("Misc.filter_upt_take_conv",
     "filter (%i. ?P (take ?m ?l ! i)) [?n..<?m] =
      filter (%i. ?P (?l ! i)) [?n..<?m]",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Misc.Union_sum",
     "\<Union> (range ?f) = (UN l. ?f (Inl l)) Un (UN r. ?f (Inr r))",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, t_empty), template_hole 7)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 5, t_empty), template_hole 3))),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0))))),
    ("Misc.length_Suc_rev_conv",
     "(length ?xs = Suc ?n) = (EX ys y. ?xs = ys @ [y] & length ys = ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 1)),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Misc.less_length_takeWhile_conv",
     "(?i < length (takeWhile ?P ?l)) =
      (?i < length ?l & (ALL j<=?i. ?P (?l ! j)))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app (template_hole 6, template_var 0))),
         template_app (template_hole 3, t_empty)))),
    ("Misc.snoc_eq_iff_butlast'",
     "(?ys = ?xs @ [?x]) = (?ys ~= [] & butlast ?ys = ?xs & last ?ys = ?x)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 5))),
       template_dunno)),
    ("Misc.in_set_image_conv_nth",
     "(?f ?x : ?f ` set ?l) = (EX i<length ?l. ?f (?l ! i) = ?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_var 2, template_var 1)),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_app (template_hole 6, template_var 0))),
       template_app (template_hole 5, t_empty))),
    ("Misc.laz_conj",
     "list_all_zip (%x y. ?P x y & ?Q x y) ?a ?b =
      (list_all_zip ?P ?a ?b & list_all_zip ?Q ?a ?b)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Misc.partition_rev_filter_conv",
     "partition_rev ?P (?yes, ?no) ?xs =
      (rev (filter ?P ?xs) @ ?yes, rev (filter (Not o ?P) ?xs) @ ?no)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 0))),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 3)),
                 template_var 0))),
           template_var 1)))),
    ("Misc.fst_foldl",
     "fst (foldl (%(a, b) x. (?f a x, ?g a b x)) (?a, ?b) ?xs) =
      foldl ?f ?a ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_hole 3, template_app (template_hole 2, t_empty)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 4), template_var 2),
         template_var 0))),
    ("Misc.set_drop_conv",
     "set (drop ?n ?l) = {?l ! i |i. ?n <= i & i < length ?l}",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Misc.SPLIT_ACCORDING_simp",
     "??.Misc.SPLIT_ACCORDING ?m (?l1.0 @ ?l2.0) =
      (EX m1 m2.
          ?m = m1 @ m2 &
          ??.Misc.SPLIT_ACCORDING m1 ?l1.0 &
          ??.Misc.SPLIT_ACCORDING m2 ?l2.0)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Misc.in_set_drop_conv_nth",
     "(?x : set (drop ?n ?l)) = (EX i>=?n. i < length ?l & ?x = ?l ! i)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_app (template_hole 6, t_empty))),
    ("Misc.Union_plus",
     "\<Union> (?f ` (?A <+> ?B)) =
      (UN a:?A. ?f (Inl a)) Un (UN b:?B. ?f (Inr b))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, t_empty), template_var 1))),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))))),
    ("Misc.mset_mergesort_by_rel_split",
     "mset (fst (mergesort_by_rel_split (?xs1.0, ?xs2.0) ?xs)) +
      mset (snd (mergesort_by_rel_split (?xs1.0, ?xs2.0) ?xs)) =
      mset ?xs + mset ?xs1.0 + mset ?xs2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app (template_hole 4, template_var 2))),
         template_app (template_hole 4, template_var 1)))),
    ("Misc.map_to_set_upd",
     "map_to_set (?m(?k |-> ?v)) =
      insert (?k, ?v) (map_to_set ?m - {(?k, v') |v'. True})",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_var 1),
           template_app (template_hole 8, template_var 0))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 10, template_var 2)),
           template_app (template_hole 4, t_empty))))),
    ("Misc.list_all_zip_alt",
     "list_all_zip ?P ?as ?bs =
      (length ?as = length ?bs &
       (ALL i<length ?as. ?P (?as ! i) (?bs ! i)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Misc.cset_fin_simps",
     "{a. EX b. ?f a b : ?S} = fst ` {p |p. ?f (fst p) (snd p) : ?S}",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app (template_hole 4, t_empty)))),
    ("Misc.fs_contract",
     "fst ` {p |p. ?f (fst p) (snd p) : ?S} = {a. EX b. ?f a b : ?S}",
     template_equation
      (template_app
        (template_app (template_hole 9, template_hole 8),
         template_app (template_hole 7, t_empty)),
       template_app (template_hole 1, t_empty))),
    ("Misc.eq_f_restr_conv",
     "(?s <= dom (?f ?A) & ?A = ?f ?A |` (- ?s)) =
      (?A \<subseteq>\<^sub>m ?f ?A & ?s = dom (?f ?A) - dom ?A)",
     template_bimplication (template_dunno, template_dunno)),
    ("Misc.pairself_image_eq",
     "pairself ?f ` {(a, b). ?P a b} = {(?f a, ?f b) |a b. ?P a b}",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))),
       template_app (template_hole 4, t_empty))),
    ("Misc.append_eq_map_conv",
     "(?fl @ ?fl' = map ?f ?ls) =
      (EX l l'. ?ls = l @ l' & map ?f l = ?fl & map ?f l' = ?fl')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Misc.map_eq_append_conv",
     "(map ?f ?ls = ?fl @ ?fl') =
      (EX l l'. ?ls = l @ l' & map ?f l = ?fl & map ?f l' = ?fl')",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Misc.list_ee_eq_leel",
     "([?e1.0, ?e2.0] = ?l1.0 @ ?e1' # ?e2' # ?l2.0) =
      (?l1.0 = [] & ?e1.0 = ?e1' & ?e2.0 = ?e2' & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 5),
           template_app
            (template_app (template_hole 4, template_var 4),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_dunno)),
    ("Misc.list_ee_eq_leel",
     "(?l1.0 @ ?e1' # ?e2' # ?l2.0 = [?e1.0, ?e2.0]) =
      (?l1.0 = [] & ?e1.0 = ?e1' & ?e2.0 = ?e2' & ?l2.0 = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 5),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_dunno)),
    ("Misc.mergesort_by_rel_simps",
     "mergesort_by_rel ?R (?x1.0 # ?x2.0 # ?xs) =
      (let (xs1, xs2) = mergesort_by_rel_split ([?x1.0], [?x2.0]) ?xs
       in mergesort_by_rel_merge ?R (mergesort_by_rel ?R xs1)
           (mergesort_by_rel ?R xs2))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 3),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 2))),
             template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("Misc.mergesort_by_rel_merge_simps",
     "mergesort_by_rel_merge ?R (?x # ?xs) (?y # ?ys) =
      (if ?R ?x ?y then ?x # mergesort_by_rel_merge ?R ?xs (?y # ?ys)
       else ?y # mergesort_by_rel_merge ?R (?x # ?xs) ?ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_var 4, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("Misc.upt_eq_lel_conv",
     "([?l..<?h] = ?is1.0 @ ?i # ?is2.0) =
      (?is1.0 = [?l..<?i] & ?is2.0 = [Suc ?i..<?h] & ?l <= ?i & ?i < ?h)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 4), template_var 3),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_dunno)),
    ("Misc.slice_Cons",
     "slice ?begin ?end (?x # ?xs) =
      (if ?begin = 0 & 0 < ?end then ?x # slice ?begin (?end - 1) ?xs
       else slice (?begin - 1) (?end - 1) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Misc.eq_or_mem_image_simp",
     "{?f l |l. l = ?a | l : ?B} = insert (?f ?a) {?f l |l. l : ?B}",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 2, template_var 1)),
         template_app (template_hole 7, t_empty)))),
    ("Misc.eq_len_takeWhile_conv",
     "(?i = length (takeWhile ?P ?l)) =
      (?i <= length ?l &
       (ALL j<?i. ?P (?l ! j)) & (?i < length ?l --> ~ ?P (?l ! ?i)))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 8, template_var 0))),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 4, t_empty)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 8, template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_var 1,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))))))))]
