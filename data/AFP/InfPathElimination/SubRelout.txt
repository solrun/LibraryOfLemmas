Loading theory "Draft.Graph" (required by "Draft.SubRelMoreTemplates" via "Draft.SubRel")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.618s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.246s elapsed time, 1.007s cpu time, 0.039s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.307s cpu time, 0.115s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
### theory "Draft.Graph"
### 0.553s elapsed time, 2.203s cpu time, 0.186s GC time
Loading theory "Draft.SubRel" (required by "Draft.SubRelMoreTemplates")
locale sub_rel
  fixes subs :: "(('v * nat) * 'v * nat) set"  (structure)
locale wf_sub_rel
  fixes subs :: "(('a * nat) * 'a * nat) set"  (structure)
  assumes "wf_sub_rel subs"
locale rgraph
  fixes g :: "('v, 'x) rgraph_scheme"  (structure)
locale sub_rel_of
  fixes g :: "('a * nat, 'b) rgraph_scheme"  (structure)
    and subs :: "(('a * nat) * 'a * nat) set"  (structure)
  assumes "sub_rel_of g subs"
locale wf_sub_rel_of
  fixes g :: "('a * nat, 'b) rgraph_scheme"  (structure)
    and subs :: "(('a * nat) * 'a * nat) set"  (structure)
  assumes "wf_sub_rel_of g subs"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.SubRel"
### 0.594s elapsed time, 2.194s cpu time, 0.699s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.992s elapsed time, 3.681s cpu time, 0.880s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.043s elapsed time, 3.654s cpu time, 0.805s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.892s elapsed time, 5.112s cpu time, 0.985s GC time
Loading theory "Draft.Templates" (required by "Draft.SubRelMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.047s elapsed time, 0.062s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SubRelMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.451s elapsed time, 0.501s cpu time, 0.062s GC time
Loading theory "Draft.SubRelMoreTemplates"
val templateLemmas =
   [("SubRel.fst_of_sp_is_vert",
     "SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs ==>
      ?v1.0 : Graph.vertices ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_hole 0, template_var 4))
           ))),
    ("SubRel.lst_of_sp_is_vert",
     "SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs ==>
      ?v2.0 : Graph.vertices ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 4))
           ))),
    ("SubRel.ces_Un",
     "SubRel.ces ?v1.0 ?es ?v2.0 ?subs1.0 ==>
      SubRel.ces ?v1.0 ?es ?v2.0 (?subs1.0 Un ?subs2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SubRel.subsumees_conv",
     "subsumees ?subs = {v. EX v'. (v, v') : ?subs}",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("SubRel.subsumers_conv",
     "subsumers ?subs = {v'. EX v. (v, v') : ?subs}",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("SubRel.cas_subset",
     "[| SubRel.ces ?v1.0 ?es ?v2.0 ?subs1.0; ?subs1.0 <= ?subs2.0 |]
      ==> SubRel.ces ?v1.0 ?es ?v2.0 ?subs2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("SubRel.acas_imp_dcas",
     "[| (?v1.0, ?v2.0) : ?subs; SubRel.ces ?v2.0 ?es ?v ?subs |]
      ==> SubRel.ces ?v1.0 ?es ?v ?subs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("SubRel.ces_append",
     "SubRel.ces ?v1.0 (?es1.0 @ ?es2.0) ?v2.0 ?subs =
      (EX v. SubRel.ces ?v1.0 ?es1.0 v ?subs &
             SubRel.ces v ?es2.0 ?v2.0 ?subs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("SubRel.sp_append_sub",
     "[| SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs; (?v2.0, ?v3.0) : ?subs |]
      ==> SubRel.subpath ?g ?v1.0 ?es ?v3.0 ?subs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("SubRel.sp_append",
     "SubRel.subpath ?g ?v1.0 (?es1.0 @ ?es2.0) ?v2.0 ?subs =
      (EX v. SubRel.subpath ?g ?v1.0 ?es1.0 v ?subs &
             SubRel.subpath ?g v ?es2.0 ?v2.0 ?subs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("SubRel.ces_append_one",
     "SubRel.ces ?v1.0 (?es @ [?e]) ?v2.0 ?subs =
      (SubRel.ces ?v1.0 ?es (src ?e) ?subs &
       SubRel.ces (src ?e) [?e] ?v2.0 ?subs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 3),
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 2)),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2)),
             template_var 1),
           template_var 0)))),
    ("SubRel.Nil_sp",
     "SubRel.subpath ?g ?v1.0 [] ?v2.0 ?subs =
      (sub_rel_of ?g ?subs &
       ?v1.0 : Graph.vertices ?g &
       (?v1.0 = ?v2.0 | (?v1.0, ?v2.0) : ?subs^+))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2),
                  template_hole 9),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app (template_hole 5, template_var 3))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("SubRel.sp_append_one",
     "SubRel.subpath ?g ?v1.0 (?es @ [?e]) ?v2.0 ?subs =
      (SubRel.subpath ?g ?v1.0 ?es (src ?e) ?subs &
       ?e : edges ?g & (tgt ?e = ?v2.0 | (tgt ?e, ?v2.0) : ?subs^+))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 13, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_app
                     (template_app (template_hole 11, template_var 2),
                      template_hole 10))),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 13, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_app (template_hole 8, template_var 2)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app (template_hole 6, template_var 5))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 2)),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 3, template_var 2)),
                       template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("SubRel.sp_from_de_empty",
     "[| ?v1.0 ~: subsumees ?subs; out_edges ?g ?v1.0 = {};
         SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs |]
      ==> ?es = []",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_app
                   (template_app (template_hole 12, t_empty),
                    template_var 3))
                )
            ),
        template_equation
         (template_app (template_hole 9, t_empty), template_hole 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 4),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("SubRel.sp_Cons",
     "SubRel.subpath ?g ?v1.0 (?e # ?es) ?v2.0 ?subs =
      (sub_rel_of ?g ?subs &
       (?v1.0 = src ?e | (?v1.0, src ?e) : ?subs^+) &
       ?e : edges ?g & SubRel.subpath ?g (tgt ?e) ?es ?v2.0 ?subs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 5),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 4),
                       template_app (template_hole 6, template_var 3))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_app (template_hole 6, template_var 3))),
                     template_app (template_hole 3, template_var 0)))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 1, template_var 5))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 12, template_var 5),
                         template_app (template_hole 0, template_var 3)),
                       template_var 2),
                     template_var 1),
                   template_var 0))))
           ))),
    ("SubRel.sp_one",
     "SubRel.subpath ?g ?v1.0 [?e] ?v2.0 ?subs =
      (sub_rel_of ?g ?subs &
       (?v1.0 = src ?e | (?v1.0, src ?e) : ?subs^+) &
       ?e : edges ?g & (tgt ?e = ?v2.0 | (tgt ?e, ?v2.0) : ?subs^+))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_hole 11)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_app (template_hole 6, template_var 2))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 3),
                         template_app (template_hole 6, template_var 2))),
                     template_app (template_hole 3, template_var 0)))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app (template_hole 1, template_var 4))),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 0, template_var 2)),
                       template_var 1)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 0, template_var 2)),
                         template_var 1)),
                     template_app (template_hole 3, template_var 0))))))
           ))),
    ("SubRel.sp_through_de_decomp",
     "[| tgt ?e ~: subsumees ?subs; out_edges ?g (tgt ?e) = {};
         SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs; ?e : set ?es |]
      ==> EX es'. ?es = es' @ [?e] & ?e ~: set es'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_var 5)),
                  template_app
                   (template_app (template_hole 16, t_empty),
                    template_var 4))
                )
            ),
        template_equation
         (template_app (template_hole 13, t_empty), template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate (template_app (template_hole 4, t_empty))))]:
   (string * thm * template) list
### theory "Draft.SubRelMoreTemplates"
### 0.270s elapsed time, 0.368s cpu time, 0.000s GC time
val it = (): unit
