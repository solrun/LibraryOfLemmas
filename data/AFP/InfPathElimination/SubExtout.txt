Loading theory "Draft.Graph" (required by "Draft.SubExtMoreTemplates" via "Draft.SubExt" via "Draft.SubRel")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.141s elapsed time, 0.579s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.250s elapsed time, 1.019s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.380s elapsed time, 1.523s cpu time, 0.122s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
### theory "Draft.Graph"
### 0.585s elapsed time, 2.335s cpu time, 0.200s GC time
Loading theory "Draft.SubRel" (required by "Draft.SubExtMoreTemplates" via "Draft.SubExt")
locale sub_rel
  fixes subs :: "(('v * nat) * 'v * nat) set"  (structure)
locale wf_sub_rel
  fixes subs :: "(('a * nat) * 'a * nat) set"  (structure)
  assumes "wf_sub_rel subs"
locale rgraph
  fixes g :: "('v, 'x) rgraph_scheme"  (structure)
locale sub_rel_of
  fixes g :: "('a * nat, 'b) rgraph_scheme"  (structure)
    and subs :: "(('a * nat) * 'a * nat) set"  (structure)
  assumes "sub_rel_of g subs"
consts
  left :: "'a tree => 'a tree"
locale wf_sub_rel_of
  fixes g :: "('a * nat, 'b) rgraph_scheme"  (structure)
    and subs :: "(('a * nat) * 'a * nat) set"  (structure)
  assumes "wf_sub_rel_of g subs"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.SubRel"
### 0.613s elapsed time, 2.259s cpu time, 0.694s GC time
Loading theory "Draft.SubExt" (required by "Draft.SubExtMoreTemplates")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.048s elapsed time, 3.964s cpu time, 0.897s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.141s elapsed time, 4.155s cpu time, 0.915s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.SubExt"
### 0.341s elapsed time, 1.125s cpu time, 0.143s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.934s elapsed time, 5.764s cpu time, 1.069s GC time
Loading theory "Draft.Templates" (required by "Draft.SubExtMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.122s cpu time, 0.048s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SubExtMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.433s elapsed time, 0.438s cpu time, 0.000s GC time
Loading theory "Draft.SubExtMoreTemplates"
val templateLemmas =
   [("SubExt.sp_in_extends",
     "[| extends ?g ?subs ?sub ?subs';
         SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs |]
      ==> SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app (template_hole 17, template_var 6)),
                    template_app (template_hole 16, template_var 6)))),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_hole 14,
                        template_app (template_hole 17, template_var 6))),
                    template_app
                     (template_hole 14,
                      template_app (template_hole 16, template_var 6)))),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app (template_hole 17, template_var 6)),
                      template_app (template_hole 12, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_hole 17, template_var 6)),
                          template_app
                           (template_app (template_hole 11, t_empty),
                            template_var 4)))),
                    template_app
                     (template_app
                       (template_hole 20,
                        template_app
                         (template_hole 19,
                          template_app
                           (template_app
                             (template_hole 13,
                              template_app
                               (template_hole 17, template_var 6)),
                            template_app
                             (template_app (template_hole 11, t_empty),
                              template_var 4)))),
                      template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_app
                             (template_hole 13,
                              template_app
                               (template_hole 16, template_var 6)),
                            template_app
                             (template_hole 12, template_var 5))),
                        template_app
                         (template_app
                           (template_hole 20,
                            template_app
                             (template_hole 19,
                              template_app
                               (template_app
                                 (template_hole 13,
                                  template_app
                                   (template_hole 16, template_var 6)),
                                template_app
                                 (template_app (template_hole 11, t_empty),
                                  template_var 4)))),
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_app
                                 (template_hole 10,
                                  template_app (template_hole 9, t_empty)),
                                template_hole 5)),
                            template_app
                             (template_app
                               (template_hole 4, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 3, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 2, template_var 6),
                                  template_hole 1)))))))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("SubExt.extends_and_sp_imp_not_using_sub",
     "[| extends ?g ?subs (?v, ?v') ?subs';
         SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs |]
      ==> ~ uses_sub ?v1.0 ?es ?v2.0 (?v, ?v')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_hole 21,
                  template_app
                   (template_app
                     (template_hole 20,
                      template_app
                       (template_hole 19,
                        template_app
                         (template_app (template_hole 18, template_var 7),
                          template_var 6))),
                    template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 18, template_var 7),
                        template_var 6))))),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_hole 15,
                        template_app
                         (template_hole 19,
                          template_app
                           (template_app (template_hole 18, template_var 7),
                            template_var 6)))),
                    template_app
                     (template_hole 15,
                      template_app
                       (template_hole 17,
                        template_app
                         (template_app (template_hole 18, template_var 7),
                          template_var 6))))),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 19,
                          template_app
                           (template_app (template_hole 18, template_var 7),
                            template_var 6))),
                      template_app (template_hole 13, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app
                       (template_hole 21,
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_hole 19,
                              template_app
                               (template_app
                                 (template_hole 18, template_var 7),
                                template_var 6))),
                          template_app
                           (template_app (template_hole 12, t_empty),
                            template_var 4)))),
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app
                         (template_hole 21,
                          template_app
                           (template_app
                             (template_hole 14,
                              template_app
                               (template_hole 19,
                                template_app
                                 (template_app
                                   (template_hole 18, template_var 7),
                                  template_var 6))),
                            template_app
                             (template_app (template_hole 12, t_empty),
                              template_var 4)))),
                      template_app
                       (template_app
                         (template_hole 22,
                          template_app
                           (template_app
                             (template_hole 14,
                              template_app
                               (template_hole 17,
                                template_app
                                 (template_app
                                   (template_hole 18, template_var 7),
                                  template_var 6))),
                            template_app
                             (template_hole 13, template_var 5))),
                        template_app
                         (template_app
                           (template_hole 22,
                            template_app
                             (template_hole 21,
                              template_app
                               (template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 17,
                                    template_app
                                     (template_app
 (template_hole 18, template_var 7),
template_var 6))),
                                template_app
                                 (template_app (template_hole 12, t_empty),
                                  template_var 4)))),
                          template_app
                           (template_app
                             (template_hole 22,
                              template_app
                               (template_app
                                 (template_hole 11,
                                  template_app (template_hole 10, t_empty)),
                                template_hole 6)),
                            template_app
                             (template_app
                               (template_hole 5, template_var 3),
                              template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 3,
                                    template_app
                                     (template_app
 (template_hole 18, template_var 7),
template_var 6)),
                                  template_hole 2)))))))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 4)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 0),
                 template_app
                  (template_app (template_hole 18, template_var 7),
                   template_var 6))
               )
           )))]:
   (string * thm * template) list
### theory "Draft.SubExtMoreTemplates"
### 0.294s elapsed time, 0.441s cpu time, 0.068s GC time
val it = (): unit
