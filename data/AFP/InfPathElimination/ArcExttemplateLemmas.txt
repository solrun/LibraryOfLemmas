   [("ArcExt.extends_is_tree",
     "[| is_tree ?g; extends ?g ?e ?g' |] ==> is_tree ?g'",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 7, template_var 2))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app (template_hole 5, template_var 1)),
                      template_app (template_hole 7, template_var 2)))),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app
                   (template_app (template_hole 3, t_empty),
                    template_var 2))))
            )],
       template_predicate
        (template_app (template_hole 11, template_var 0)))),
    ("ArcExt.sp_in_extends",
     "[| extends ?g ?e ?g'; Graph.subpath ?g ?v1.0 ?es ?v2.0 |]
      ==> Graph.subpath ?g' ?v1.0 ?es ?v2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 5)),
                  template_app (template_hole 8, template_var 4))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 6, template_var 5)),
                      template_app (template_hole 8, template_var 4)))),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, t_empty),
                    template_var 4))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ArcExt.extends_tgt_out_edges",
     "extends ?g ?e ?g' ==> out_edges ?g' (tgt ?e) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 2)),
                  template_app (template_hole 12, template_var 1))),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app (template_hole 10, template_var 2)),
                      template_app (template_hole 12, template_var 1)))),
                template_app
                 (template_app (template_hole 9, template_var 0),
                  template_app
                   (template_app (template_hole 8, t_empty),
                    template_var 1))))
            )],
       template_equation
        (template_app (template_hole 3, t_empty), template_hole 5))),
    ("ArcExt.sp_in_extends_w_subs",
     "[| extends ?g ?a ?g'; SubRel.subpath ?g ?v1.0 ?es ?v2.0 ?subs |]
      ==> SubRel.subpath ?g' ?v1.0 ?es ?v2.0 ?subs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 6)),
                  template_app (template_hole 8, template_var 5))),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 6, template_var 6)),
                      template_app (template_hole 8, template_var 5)))),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, t_empty),
                    template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           )))]
