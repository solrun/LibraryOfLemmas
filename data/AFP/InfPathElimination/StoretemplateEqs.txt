   [("Store.adapt_aexp_vars",
     "Aexp.vars (adapt_aexp ?e ?s) = (%v. symvar v ?s) ` Aexp.vars ?e",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Store.adapt_bexp_vars",
     "Bexp.vars (adapt_bexp ?e ?s) = (%v. symvar v ?s) ` Bexp.vars ?e",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Store.consistent_eq2",
     "consistent ?\<sigma> ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?store =
      (?\<sigma> =
       (%v. ?\<sigma>\<^sub>s\<^sub>y\<^sub>m (symvar v ?store)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 2, t_empty))),
    ("Store.consistent_eq1",
     "consistent ?\<sigma> ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?s =
      (ALL sv:symvars ?s.
          ?\<sigma>\<^sub>s\<^sub>y\<^sub>m sv = ?\<sigma> (fst sv))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty)))]
