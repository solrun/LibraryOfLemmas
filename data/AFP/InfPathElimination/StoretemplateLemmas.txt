   [("Store.symvars_of_adapt_aexp",
     "Aexp.vars (adapt_aexp ?e ?s) <= symvars ?s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.symvars_of_adapt_bexp",
     "Bexp.vars (adapt_bexp ?e ?s) <= symvars ?s",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Store.consistentI1",
     "consistent ?\<sigma> (%sv. ?\<sigma> (fst sv)) ?store",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1), t_empty),
           template_var 0)
         )),
    ("Store.consistentI2",
     "consistent (%v. ?\<sigma>\<^sub>s\<^sub>y\<^sub>m (symvar v ?store))
       ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?store",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 0)
         )),
    ("Store.finite_vars_imp_finite_adapt_a",
     "finite (Aexp.vars ?e) ==> finite (Aexp.vars (adapt_aexp ?e ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Store.finite_vars_imp_finite_adapt_b",
     "finite (Bexp.vars ?e) ==> finite (Bexp.vars (adapt_bexp ?e ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Store.adapt_aexp_vars",
     "Aexp.vars (adapt_aexp ?e ?s) = (%v. symvar v ?s) ` Aexp.vars ?e",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Store.adapt_bexp_vars",
     "Bexp.vars (adapt_bexp ?e ?s) = (%v. symvar v ?s) ` Bexp.vars ?e",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Store.consistent_eq2",
     "consistent ?\<sigma> ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?store =
      (?\<sigma> =
       (%v. ?\<sigma>\<^sub>s\<^sub>y\<^sub>m (symvar v ?store)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation (template_var 2, t_empty))),
    ("Store.adapt_aexp_is_subst",
     "consistent ?\<sigma> ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?s ==>
      adapt_aexp ?e ?s ?\<sigma>\<^sub>s\<^sub>y\<^sub>m = ?e ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 3)))),
    ("Store.adapt_bexp_is_subst",
     "consistent ?\<sigma> ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?s ==>
      adapt_bexp ?e ?s ?\<sigma>\<^sub>s\<^sub>y\<^sub>m = ?e ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 2),
         template_app (template_var 0, template_var 3)))),
    ("Store.symvar_var_imp_var",
     "?sv : Aexp.vars (adapt_aexp ?e ?s) ==> fst ?sv : Aexp.vars ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Store.symvar_var_imp_var2",
     "?sv : Bexp.vars (adapt_bexp ?e ?s) ==> fst ?sv : Bexp.vars ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Store.var_imp_symvar_var",
     "?v : Aexp.vars ?e ==> symvar ?v ?s : Aexp.vars (adapt_aexp ?e ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Store.var_imp_symvar_var2",
     "?v : Bexp.vars ?e ==> symvar ?v ?s : Bexp.vars (adapt_bexp ?e ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Store.consistent_eq1",
     "consistent ?\<sigma> ?\<sigma>\<^sub>s\<^sub>y\<^sub>m ?s =
      (ALL sv:symvars ?s.
          ?\<sigma>\<^sub>s\<^sub>y\<^sub>m sv = ?\<sigma> (fst sv))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         t_empty)))]
