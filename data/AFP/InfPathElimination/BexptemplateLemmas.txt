   [("Bexp.vars_of_conj",
     "Bexp.vars (%\<sigma>. ?e1.0 \<sigma> & ?e2.0 \<sigma>)
      <= Bexp.vars ?e1.0 Un Bexp.vars ?e2.0",
     template_inequation
      (less_equals, template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Bexp.vars_of_eq_a",
     "Bexp.vars (%\<sigma>. ?e1.0 \<sigma> = ?e2.0 \<sigma>)
      <= Aexp.vars ?e1.0 Un Aexp.vars ?e2.0",
     template_inequation
      (less_equals, template_app (template_hole 3, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Bexp.finite_conj",
     "[| finite ?E; ALL e:?E. finite (Bexp.vars e) |]
      ==> finite (Bexp.vars (conjunct ?E))",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Bexp.finite_vars_of_a_eq",
     "[| finite (Aexp.vars ?e1.0); finite (Aexp.vars ?e2.0) |]
      ==> finite (Bexp.vars (%\<sigma>. ?e1.0 \<sigma> = ?e2.0 \<sigma>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_hole 1, t_empty))
           )))]
