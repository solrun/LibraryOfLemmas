   [("DetMonadLemmas.unless_False", "unless False ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("DetMonadLemmas.when_True", "when1 True ?X = ?X",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("DetMonadLemmas.gets_to_return", "gets (%s. ?v) = return ?v",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 0, template_var 0))),
    ("DetMonadLemmas.unless_True", "unless True ?X = return ()",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("DetMonadLemmas.when_False", "when1 False ?X = return ()",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("DetMonadLemmas.unlessE_whenE", "unlessE ?P = whenE (~ ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("DetMonadLemmas.unless_when", "unless ?P = when1 (~ ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("DetMonadLemmas.assert_True", "assert True >>= ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("DetMonadLemmas.condition_false_triv", "condition (%_. False)
         ?A
         ?B =
       ?B",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_var 0)),
    ("DetMonadLemmas.condition_true_triv", "condition (%_. True)
        ?A
        ?B =
      ?A",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0),
       template_var 1)),
    ("DetMonadLemmas.liftE_handleE", "(liftE ?a <handle> ?b) = liftE ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("DetMonadLemmas.liftE_handleE'", "(liftE ?a <handle2> ?b) = liftE ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("DetMonadLemmas.whenE_False_bind", "whenE False ?g >>=E ?f = ?f ()",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_var 0),
       template_app (template_var 0, template_hole 0))),
    ("DetMonadLemmas.when_True_bind", "when1 True ?g >>= ?f = ?g >>= ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("DetMonadLemmas.whenE_True_bind", "whenE True ?g >>=E ?f = ?g >>=E ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("DetMonadLemmas.exec_gets", "(gets ?f >>= ?m) ?s = ?m (?f ?s) ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_var 1, template_app (template_var 2, template_var 0)),
         template_var 0))),
    ("DetMonadLemmas.nested_bind",
     "do y \<leftarrow> ?f;
         return (?g y)
      od >>=
      ?h =
      do y \<leftarrow> ?f;
         ?h (?g y)
      od",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         t_empty),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("DetMonadLemmas.in_gets",
     "((?r, ?s') = fst (gets ?f ?s)) = (?r = ?f ?s & ?s' = ?s)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_dunno)),
    ("DetMonadLemmas.condition_split",
     "?P (condition ?C
            ?a
            ?b
           ?s) =
      ((?C ?s --> ?P (?a ?s)) & (~ ?C ?s --> ?P (?b ?s)))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 0)),
             template_app
              (template_var 4,
               template_app (template_var 2, template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_var 3, template_var 0))),
           template_app
            (template_var 4,
             template_app (template_var 1, template_var 0)))))),
    ("DetMonadLemmas.condition_split_asm",
     "?P (condition ?C
            ?a
            ?b
           ?s) =
      (~ (?C ?s & ~ ?P (?a ?s) | ~ ?C ?s & ~ ?P (?b ?s)))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_var 4,
                   template_app (template_var 2, template_var 0))))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_var 3, template_var 0))),
             template_app
              (template_hole 2,
               template_app
                (template_var 4,
                 template_app (template_var 1, template_var 0))))))))]
