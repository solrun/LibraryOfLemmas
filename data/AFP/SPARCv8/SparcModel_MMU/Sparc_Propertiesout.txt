Loading theory "Draft.Lib" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_State" via "Draft.DetMonadLemmas" via "Draft.DetMonad")
Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "HOL-Eisbach.Eisbach_Tools")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
consts
  delete :: "'a => 'a list => 'a list"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  find :: "('a => bool) => 'a list => 'a option"
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
consts
  theRight :: "'a + 'b => 'b"
consts
  theLeft :: "'a + 'b => 'a"
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.511s cpu time, 0.031s GC time
Loading theory "HOL-Library.Phantom_Type" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Draft.WordDecl" via "HOL-Library.Word" via "HOL-Library.Type_Length" via "HOL-Library.Numeral_Type" via "HOL-Library.Cardinality")
### theory "Draft.Lib"
### 0.154s elapsed time, 0.602s cpu time, 0.031s GC time
Loading theory "Draft.DetMonad" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_State" via "Draft.DetMonadLemmas")
structure Eisbach_Rule_Insts: sig end
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.316s elapsed time, 1.235s cpu time, 0.100s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs")
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Eisbach.Eisbach"
### 0.428s elapsed time, 1.672s cpu time, 0.152s GC time
Loading theory "HOL-Eisbach.Eisbach_Tools" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction")
val try_map = fn: 'a Seq.seq -> 'a Seq.seq -> 'a Seq.seq
val uncurry_rule = fn: thm -> thm
val curry_rule = fn: thm -> thm
### theory "HOL-Eisbach.Eisbach_Tools"
### 0.029s elapsed time, 0.114s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
consts
  filterM ::
    "('a => 's => (bool * 's) * bool)
     => 'a list => 's => ('a list * 's) * bool"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.DetMonad"
### 0.445s elapsed time, 1.787s cpu time, 0.174s GC time
Loading theory "Draft.DetMonadLemmas" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_State")
### theory "HOL-Library.Phantom_Type"
### 0.489s elapsed time, 1.959s cpu time, 0.174s GC time
Loading theory "HOL-Library.Cardinality" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Draft.WordDecl" via "HOL-Library.Word" via "HOL-Library.Type_Length" via "HOL-Library.Numeral_Type")
### theory "HOL-Library.Set_Algebras"
### 0.180s elapsed time, 0.750s cpu time, 0.053s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### Additional type variable(s) in locale specification "CARD_1": 'a
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
class CARD_1 = type +
  assumes "CARD_1": "CARD('a) = 1"
  Proving monotonicity ...
### theory "Draft.DetMonadLemmas"
### 0.139s elapsed time, 0.546s cpu time, 0.057s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Additional type variable(s) in locale specification "card2": 'a
class card2 = finite +
  assumes "two_le_card": "2 <= CARD('a)"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
class finite_UNIV = type +
  fixes finite_UNIV :: "('a, bool) phantom"
  assumes "finite_UNIV": "finite_UNIV = Phantom('a) (finite UNIV)"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class card_UNIV = finite_UNIV +
  fixes card_UNIV :: "('a, nat) phantom"
  assumes "card_UNIV": "card_UNIV_class.card_UNIV = Phantom('a) CARD('a)"
instantiation
  nat :: card_UNIV
  card_UNIV_nat == card_UNIV_class.card_UNIV :: (nat, nat) phantom
  finite_UNIV_nat == finite_UNIV :: (nat, bool) phantom
instantiation
  int :: card_UNIV
  card_UNIV_int == card_UNIV_class.card_UNIV :: (int, nat) phantom
  finite_UNIV_int == finite_UNIV :: (int, bool) phantom
instantiation
  natural :: card_UNIV
  card_UNIV_natural == card_UNIV_class.card_UNIV :: (natural, nat) phantom
  finite_UNIV_natural == finite_UNIV :: (natural, bool) phantom
consts
  flat :: "'a list stream => 'a stream"
instantiation
  integer :: card_UNIV
  card_UNIV_integer == card_UNIV_class.card_UNIV :: (integer, nat) phantom
  finite_UNIV_integer == finite_UNIV :: (integer, bool) phantom
instantiation
  list :: (type) card_UNIV
  card_UNIV_list == card_UNIV_class.card_UNIV :: ('a list, nat) phantom
  finite_UNIV_list == finite_UNIV :: ('a list, bool) phantom
instantiation
  unit :: card_UNIV
  card_UNIV_unit == card_UNIV_class.card_UNIV :: (unit, nat) phantom
  finite_UNIV_unit == finite_UNIV :: (unit, bool) phantom
instantiation
  bool :: card_UNIV
  card_UNIV_bool == card_UNIV_class.card_UNIV :: (bool, nat) phantom
  finite_UNIV_bool == finite_UNIV :: (bool, bool) phantom
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
instantiation
  char :: card_UNIV
  card_UNIV_char == card_UNIV_class.card_UNIV :: (char, nat) phantom
  finite_UNIV_char == finite_UNIV :: (char, bool) phantom
instantiation
  prod :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_prod == finite_UNIV :: ('a * 'b, bool) phantom
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
instantiation
  prod :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_prod == card_UNIV_class.card_UNIV :: ('a * 'b, nat) phantom
instantiation
  sum :: (finite_UNIV, finite_UNIV) finite_UNIV
  finite_UNIV_sum == finite_UNIV :: ('a + 'b, bool) phantom
instantiation
  sum :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_sum == card_UNIV_class.card_UNIV :: ('a + 'b, nat) phantom
instantiation
  fun :: (finite_UNIV, card_UNIV) finite_UNIV
  finite_UNIV_fun == finite_UNIV :: ('a => 'b, bool) phantom
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
instantiation
  fun :: (card_UNIV, card_UNIV) card_UNIV
  card_UNIV_fun == card_UNIV_class.card_UNIV :: ('a => 'b, nat) phantom
instantiation
  option :: (finite_UNIV) finite_UNIV
  finite_UNIV_option == finite_UNIV :: ('a option, bool) phantom
instantiation
  option :: (card_UNIV) card_UNIV
  card_UNIV_option == card_UNIV_class.card_UNIV :: ('a option, nat) phantom
instantiation
  String.literal :: card_UNIV
  card_UNIV_literal == card_UNIV_class.card_UNIV ::
    (String.literal, nat) phantom
  finite_UNIV_literal == finite_UNIV :: (String.literal, bool) phantom
### theory "HOL-Library.Stream"
### 0.965s elapsed time, 3.723s cpu time, 0.694s GC time
instantiation
  set :: (finite_UNIV) finite_UNIV
  finite_UNIV_set == finite_UNIV :: ('a set, bool) phantom
instantiation
  set :: (card_UNIV) card_UNIV
  card_UNIV_set == card_UNIV_class.card_UNIV :: ('a set, nat) phantom
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  Enum.finite_1 :: card_UNIV
  card_UNIV_finite_1 == card_UNIV_class.card_UNIV ::
    (Enum.finite_1, nat) phantom
  finite_UNIV_finite_1 == finite_UNIV :: (Enum.finite_1, bool) phantom
instantiation
  Enum.finite_2 :: card_UNIV
  card_UNIV_finite_2 == card_UNIV_class.card_UNIV ::
    (Enum.finite_2, nat) phantom
  finite_UNIV_finite_2 == finite_UNIV :: (Enum.finite_2, bool) phantom
instantiation
  Enum.finite_3 :: card_UNIV
  card_UNIV_finite_3 == card_UNIV_class.card_UNIV ::
    (Enum.finite_3, nat) phantom
  finite_UNIV_finite_3 == finite_UNIV :: (Enum.finite_3, bool) phantom
instantiation
  Enum.finite_4 :: card_UNIV
  card_UNIV_finite_4 == card_UNIV_class.card_UNIV ::
    (Enum.finite_4, nat) phantom
  finite_UNIV_finite_4 == finite_UNIV :: (Enum.finite_4, bool) phantom
Found termination order: "size <*mlex*> {}"
instantiation
  Enum.finite_5 :: card_UNIV
  card_UNIV_finite_5 == card_UNIV_class.card_UNIV ::
    (Enum.finite_5, nat) phantom
  finite_UNIV_finite_5 == finite_UNIV :: (Enum.finite_5, bool) phantom
### theory "HOL-Library.Cardinality"
### 0.752s elapsed time, 2.782s cpu time, 0.589s GC time
Loading theory "HOL-Library.Numeral_Type" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Draft.WordDecl" via "HOL-Library.Word" via "HOL-Library.Type_Length")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  num1 :: CARD_1
instantiation
  num1 :: {comm_monoid_mult,numeral,comm_ring}
  uminus_num1 == uminus :: num1 => num1
  zero_num1 == zero_class.zero :: num1
  minus_num1 == minus :: num1 => num1 => num1
  plus_num1 == plus :: num1 => num1 => num1
  one_num1 == one_class.one :: num1
  times_num1 == times :: num1 => num1 => num1
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
instantiation
  num1 :: linorder
  less_eq_num1 == less_eq :: num1 => num1 => bool
  less_num1 == less :: num1 => num1 => bool
locale mod_type
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_type n Rep Abs"
Found termination order: "size <*mlex*> {}"
locale mod_ring
  fixes n :: "int"
    and Rep :: "'a => int"
    and Abs :: "int => 'a"
  assumes "mod_ring n Rep Abs"
### theory "HOL-Library.BigO"
### 0.819s elapsed time, 2.882s cpu time, 0.611s GC time
instantiation
  bit0 :: (finite) {minus,one,plus,times,uminus,zero}
  bit1 :: (finite) {minus,one,plus,times,uminus,zero}
  zero_bit0 == zero_class.zero :: 'a bit0
  uminus_bit0 == uminus :: 'a bit0 => 'a bit0
  times_bit0 == times :: 'a bit0 => 'a bit0 => 'a bit0
  plus_bit0 == plus :: 'a bit0 => 'a bit0 => 'a bit0
  one_bit0 == one_class.one :: 'a bit0
  minus_bit0 == minus :: 'a bit0 => 'a bit0 => 'a bit0
  zero_bit1 == zero_class.zero :: 'a bit1
  uminus_bit1 == uminus :: 'a bit1 => 'a bit1
  times_bit1 == times :: 'a bit1 => 'a bit1 => 'a bit1
  plus_bit1 == plus :: 'a bit1 => 'a bit1 => 'a bit1
  one_bit1 == one_class.one :: 'a bit1
  minus_bit1 == minus :: 'a bit1 => 'a bit1 => 'a bit1
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) linorder
  bit1 :: (finite) linorder
  less_eq_bit0 == less_eq :: 'a bit0 => 'a bit0 => bool
  less_bit0 == less :: 'a bit0 => 'a bit0 => bool
  less_eq_bit1 == less_eq :: 'a bit1 => 'a bit1 => bool
  less_bit1 == less :: 'a bit1 => 'a bit1 => bool
Found termination order: "size <*mlex*> {}"
instantiation
  num0 :: equal
  equal_num0 == equal_class.equal :: num0 => num0 => bool
Found termination order: "size <*mlex*> {}"
instantiation
  num1 :: equal
  equal_num1 == equal_class.equal :: num1 => num1 => bool
instantiation
  num1 :: enum
  enum_num1 == enum_class.enum :: num1 list
  enum_all_num1 == enum_class.enum_all :: (num1 => bool) => bool
  enum_ex_num1 == enum_class.enum_ex :: (num1 => bool) => bool
instantiation
  num0 :: card_UNIV
  num1 :: card_UNIV
  card_UNIV_num0 == card_UNIV_class.card_UNIV :: (num0, nat) phantom
  finite_UNIV_num0 == finite_UNIV :: (num0, bool) phantom
  card_UNIV_num1 == card_UNIV_class.card_UNIV :: (num1, nat) phantom
  finite_UNIV_num1 == finite_UNIV :: (num1, bool) phantom
Found termination order: "size <*mlex*> {}"
instantiation
  bit0 :: (finite) equal
  bit1 :: (finite) equal
  equal_bit0 == equal_class.equal :: 'a bit0 => 'a bit0 => bool
  equal_bit1 == equal_class.equal :: 'a bit1 => 'a bit1 => bool
instantiation
  bit0 :: (finite) enum
  enum_bit0 == enum_class.enum :: 'a bit0 list
  enum_all_bit0 == enum_class.enum_all :: ('a bit0 => bool) => bool
  enum_ex_bit0 == enum_class.enum_ex :: ('a bit0 => bool) => bool
Found termination order: "size <*mlex*> {}"
instantiation
  bit1 :: (finite) enum
  enum_bit1 == enum_class.enum :: 'a bit1 list
  enum_all_bit1 == enum_class.enum_all :: ('a bit1 => bool) => bool
  enum_ex_bit1 == enum_class.enum_ex :: ('a bit1 => bool) => bool
instantiation
  bit0 :: (finite) finite_UNIV
  bit1 :: (finite) finite_UNIV
  finite_UNIV_bit0 == finite_UNIV :: ('a bit0, bool) phantom
  finite_UNIV_bit1 == finite_UNIV :: ('a bit1, bool) phantom
instantiation
  bit0 :: ({card_UNIV,finite}) card_UNIV
  bit1 :: ({card_UNIV,finite}) card_UNIV
  card_UNIV_bit0 == card_UNIV_class.card_UNIV :: ('a bit0, nat) phantom
  card_UNIV_bit1 == card_UNIV_class.card_UNIV :: ('a bit1, nat) phantom
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Numeral_Type"
### 0.576s elapsed time, 1.426s cpu time, 0.217s GC time
Loading theory "HOL-Library.Type_Length" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Draft.WordDecl" via "HOL-Library.Word")
Found termination order: "size <*mlex*> {}"
class len0 = type +
  fixes len_of :: "'a itself => nat"
class len = len0 +
  assumes "len_gt_0": "0 < LENGTH('a)"
instantiation
  0 :: len0
  1 :: len0
  len_of_num0 == len_of :: 0 itself => nat
  len_of_num1 == len_of :: 1 itself => nat
instantiation
  bit0 :: (len0) len0
  bit1 :: (len0) len0
  len_of_bit0 == len_of :: 'a bit0 itself => nat
  len_of_bit1 == len_of :: 'a bit1 itself => nat
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  Enum.finite_1 :: len
  len_of_finite_1 == len_of :: Enum.finite_1 itself => nat
instantiation
  Enum.finite_2 :: len
  len_of_finite_2 == len_of :: Enum.finite_2 itself => nat
instantiation
  Enum.finite_3 :: len
  len_of_finite_3 == len_of :: Enum.finite_3 itself => nat
Found termination order: "size <*mlex*> {}"
class linordered_idom = ring_char_0 + idom_abs_sgn +
  linordered_ring_strict + linordered_semidom +
  linordered_semiring_1_strict + ordered_comm_ring + ordered_ring_abs +
  assumes
    "sgn_if":
      "!!x. sgn x =
            (if x = (0::'a) then 0::'a
             else if (0::'a) < x then 1::'a else - (1::'a))"
### theory "HOL-Library.Type_Length"
### 0.422s elapsed time, 0.899s cpu time, 0.100s GC time
Loading theory "HOL-Library.Word" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Draft.WordDecl")
Loading theory "Word_Lib.More_Arithmetic" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Word_Lib.Bit_Shifts_Infix_Syntax" via "Word_Lib.More_Word")
### theory "HOL-Library.Tree"
### 1.783s elapsed time, 5.185s cpu time, 0.906s GC time
Loading theory "Draft.Templates" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.ExtrEqs")
### theory "Word_Lib.More_Arithmetic"
### 0.056s elapsed time, 0.167s cpu time, 0.000s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.115s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Sparc_PropertiesMoreTemplates")
instantiation
  word :: (len) comm_ring_1
  uminus_word == uminus :: 'a word => 'a word
  one_word == one_class.one :: 'a word
  times_word == times :: 'a word => 'a word => 'a word
  zero_word == zero_class.zero :: 'a word
  minus_word == minus :: 'a word => 'a word => 'a word
  plus_word == plus :: 'a word => 'a word => 'a word
signature WORD_LIB =
  sig
    val dest_binT: typ -> int
    val dest_wordT: typ -> int
    val is_wordT: typ -> bool
    val mk_wordT: int -> typ
  end
structure Word_Lib: WORD_LIB
instantiation
  word :: (len) equal
  equal_word == equal_class.equal :: 'a word => 'a word => bool
class semiring_char_0 = semiring_1 +
  assumes "inj_of_nat": "inj of_nat"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.765s elapsed time, 1.869s cpu time, 0.859s GC time
instantiation
  word :: (len) linorder
  less_eq_word == less_eq :: 'a word => 'a word => bool
  less_word == less :: 'a word => 'a word => bool
instantiation
  word :: (len) enum
  enum_word == enum_class.enum :: 'a word list
  enum_all_word == enum_class.enum_all :: ('a word => bool) => bool
  enum_ex_word == enum_class.enum_ex :: ('a word => bool) => bool
instantiation
  word :: (len) semiring_modulo
  modulo_word == modulo :: 'a word => 'a word => 'a word
  divide_word == divide :: 'a word => 'a word => 'a word
instantiation
  word :: (len) semiring_bits
  bit_word == bit :: 'a word => nat => bool
instantiation
  word :: (len) ring_bit_operations
  not_word == not :: 'a word => 'a word
  and_word == and :: 'a word => 'a word => 'a word
  or_word == or :: 'a word => 'a word => 'a word
  xor_word == xor :: 'a word => 'a word => 'a word
  mask_word == mask :: nat => 'a word
  set_bit_word == set_bit :: nat => 'a word => 'a word
  unset_bit_word == unset_bit :: nat => 'a word => 'a word
  flip_bit_word == flip_bit :: nat => 'a word => 'a word
  push_bit_word == push_bit :: nat => 'a word => 'a word
  drop_bit_word == drop_bit :: nat => 'a word => 'a word
  take_bit_word == take_bit :: nat => 'a word => 'a word
class semiring_bits = semiring_parity +
  fixes bit :: "'a => nat => bool"
  assumes
    "bits_induct":
      "!!P a.
          [| !!a. a div (2::'a) = a ==> P a;
             !!a b.
                [| P a; (of_bool b + (2::'a) * a) div (2::'a) = a |]
                ==> P (of_bool b + (2::'a) * a) |]
          ==> P a"
  assumes "bits_div_0": "!!a. (0::'a) div a = (0::'a)"
    and "bits_div_by_1": "!!a. a div (1::'a) = a"
    and "bits_mod_div_trivial": "!!a b. a mod b div b = (0::'a)"
    and
    "even_succ_div_2":
      "!!a. even a ==> ((1::'a) + a) div (2::'a) = a div (2::'a)"
    and
    "even_mask_div_iff":
      "!!m n.
          even (((2::'a) ^ m - (1::'a)) div (2::'a) ^ n) =
          ((2::'a) ^ n = (0::'a) | m <= n)"
    and
    "exp_div_exp_eq":
      "!!m n.
          (2::'a) ^ m div (2::'a) ^ n =
          of_bool ((2::'a) ^ m ~= (0::'a) & n <= m) * (2::'a) ^ (m - n)"
    and
    "div_exp_eq":
      "!!a m n. a div (2::'a) ^ m div (2::'a) ^ n = a div (2::'a) ^ (m + n)"
    and
    "mod_exp_eq":
      "!!a m n. a mod (2::'a) ^ m mod (2::'a) ^ n = a mod (2::'a) ^ min m n"
    and
    "mult_exp_mod_exp_eq":
      "!!m n a.
          m <= n ==>
          a * (2::'a) ^ m mod (2::'a) ^ n =
          a mod (2::'a) ^ (n - m) * (2::'a) ^ m"
    and
    "div_exp_mod_exp_eq":
      "!!a n m.
          a div (2::'a) ^ n mod (2::'a) ^ m =
          a mod (2::'a) ^ (n + m) div (2::'a) ^ n"
    and
    "even_mult_exp_div_exp_iff":
      "!!a m n.
          even (a * (2::'a) ^ m div (2::'a) ^ n) =
          (n < m |
           (2::'a) ^ n = (0::'a) | m <= n & even (a div (2::'a) ^ (n - m)))"
  assumes "bit_iff_odd": "!!a n. bit a n = odd (a div (2::'a) ^ n)"
class semiring_bit_operations = semiring_bits +
  fixes "and" :: "'a => 'a => 'a"
    and or :: "'a => 'a => 'a"
    and xor :: "'a => 'a => 'a"
    and mask :: "nat => 'a"
    and set_bit :: "nat => 'a => 'a"
    and unset_bit :: "nat => 'a => 'a"
    and flip_bit :: "nat => 'a => 'a"
    and push_bit :: "nat => 'a => 'a"
    and drop_bit :: "nat => 'a => 'a"
    and take_bit :: "nat => 'a => 'a"
  assumes "bit_and_iff": "!!a b n. bit (and a b) n = (bit a n & bit b n)"
    and "bit_or_iff": "!!a b n. bit (or a b) n = (bit a n | bit b n)"
    and "bit_xor_iff": "!!a b n. bit (xor a b) n = (bit a n ~= bit b n)"
    and "mask_eq_exp_minus_1": "!!n. mask n = (2::'a) ^ n - (1::'a)"
    and "set_bit_eq_or": "!!n a. set_bit n a = or a (push_bit n (1::'a))"
    and
    "bit_unset_bit_iff":
      "!!m a n. bit (unset_bit m a) n = (bit a n & m ~= n)"
    and
    "flip_bit_eq_xor": "!!n a. flip_bit n a = xor a (push_bit n (1::'a))"
    and "push_bit_eq_mult": "!!n a. push_bit n a = a * (2::'a) ^ n"
    and "drop_bit_eq_div": "!!n a. drop_bit n a = a div (2::'a) ^ n"
    and "take_bit_eq_mod": "!!n a. take_bit n a = a mod (2::'a) ^ n"
class semiring_bit_operations = semiring_bits +
  fixes "and" :: "'a => 'a => 'a"
    and or :: "'a => 'a => 'a"
    and xor :: "'a => 'a => 'a"
    and mask :: "nat => 'a"
    and set_bit :: "nat => 'a => 'a"
    and unset_bit :: "nat => 'a => 'a"
    and flip_bit :: "nat => 'a => 'a"
    and push_bit :: "nat => 'a => 'a"
    and drop_bit :: "nat => 'a => 'a"
    and take_bit :: "nat => 'a => 'a"
  assumes "bit_and_iff": "!!a b n. bit (and a b) n = (bit a n & bit b n)"
    and "bit_or_iff": "!!a b n. bit (or a b) n = (bit a n | bit b n)"
    and "bit_xor_iff": "!!a b n. bit (xor a b) n = (bit a n ~= bit b n)"
    and "mask_eq_exp_minus_1": "!!n. mask n = (2::'a) ^ n - (1::'a)"
    and "set_bit_eq_or": "!!n a. set_bit n a = or a (push_bit n (1::'a))"
    and
    "bit_unset_bit_iff":
      "!!m a n. bit (unset_bit m a) n = (bit a n & m ~= n)"
    and
    "flip_bit_eq_xor": "!!n a. flip_bit n a = xor a (push_bit n (1::'a))"
    and "push_bit_eq_mult": "!!n a. push_bit n a = a * (2::'a) ^ n"
    and "drop_bit_eq_div": "!!n a. drop_bit n a = a div (2::'a) ^ n"
    and "take_bit_eq_mod": "!!n a. take_bit n a = a mod (2::'a) ^ n"
class ring_bit_operations = semiring_bit_operations + ring_parity +
  fixes not :: "'a => 'a"
  assumes
    "bit_not_iff_eq":
      "!!a n. bit (not a) n = ((2::'a) ^ n ~= (0::'a) & ~ bit a n)"
  assumes "minus_eq_not_minus_1": "!!a. - a = not (a - (1::'a))"
class unique_euclidean_semiring_numeral =
  unique_euclidean_semiring_with_nat + linordered_semidom +
  fixes divmod :: "num => num => 'a * 'a"
    and divmod_step :: "num => 'a * 'a => 'a * 'a"
  assumes
    "div_less": "!!a b. [| (0::'a) <= a; a < b |] ==> a div b = (0::'a)"
    and "mod_less": "!!a b. [| (0::'a) <= a; a < b |] ==> a mod b = a"
    and
    "div_positive": "!!b a. [| (0::'a) < b; b <= a |] ==> (0::'a) < a div b"
    and "mod_less_eq_dividend": "!!a b. (0::'a) <= a ==> a mod b <= a"
    and "pos_mod_bound": "!!b a. (0::'a) < b ==> a mod b < b"
    and "pos_mod_sign": "!!b a. (0::'a) < b ==> (0::'a) <= a mod b"
    and
    "mod_mult2_eq":
      "!!c a b.
          (0::'a) <= c ==> a mod (b * c) = b * (a div b mod c) + a mod b"
    and
    "div_mult2_eq":
      "!!c a b. (0::'a) <= c ==> a div (b * c) = a div b div c"
  assumes "discrete": "!!a b. (a < b) = (a + (1::'a) <= b)"
  assumes
    "divmod_def":
      "!!m n.
          divmod m n = (numeral m div numeral n, numeral m mod numeral n)"
    and
    "divmod_step_def":
      "!!l qr.
          divmod_step l qr =
          (let (q, r) = qr
           in if numeral l <= r then ((2::'a) * q + (1::'a), r - numeral l)
              else ((2::'a) * q, r))"
class linordered_semidom = linordered_comm_semiring_strict +
  linordered_nonzero_semiring + semidom +
  assumes "le_add_diff_inverse2": "!!b a. b <= a ==> a - b + b = a"
class ring_bit_operations = semiring_bit_operations + ring_parity +
  fixes not :: "'a => 'a"
  assumes
    "bit_not_iff_eq":
      "!!a n. bit (not a) n = ((2::'a) ^ n ~= (0::'a) & ~ bit a n)"
  assumes "minus_eq_not_minus_1": "!!a. - a = not (a - (1::'a))"
class semiring_bit_operations = semiring_bits +
  fixes "and" :: "'a => 'a => 'a"
    and or :: "'a => 'a => 'a"
    and xor :: "'a => 'a => 'a"
    and mask :: "nat => 'a"
    and set_bit :: "nat => 'a => 'a"
    and unset_bit :: "nat => 'a => 'a"
    and flip_bit :: "nat => 'a => 'a"
    and push_bit :: "nat => 'a => 'a"
    and drop_bit :: "nat => 'a => 'a"
    and take_bit :: "nat => 'a => 'a"
  assumes "bit_and_iff": "!!a b n. bit (and a b) n = (bit a n & bit b n)"
    and "bit_or_iff": "!!a b n. bit (or a b) n = (bit a n | bit b n)"
    and "bit_xor_iff": "!!a b n. bit (xor a b) n = (bit a n ~= bit b n)"
    and "mask_eq_exp_minus_1": "!!n. mask n = (2::'a) ^ n - (1::'a)"
    and "set_bit_eq_or": "!!n a. set_bit n a = or a (push_bit n (1::'a))"
    and
    "bit_unset_bit_iff":
      "!!m a n. bit (unset_bit m a) n = (bit a n & m ~= n)"
    and
    "flip_bit_eq_xor": "!!n a. flip_bit n a = xor a (push_bit n (1::'a))"
    and "push_bit_eq_mult": "!!n a. push_bit n a = a * (2::'a) ^ n"
    and "drop_bit_eq_div": "!!n a. drop_bit n a = a div (2::'a) ^ n"
    and "take_bit_eq_mod": "!!n a. take_bit n a = a mod (2::'a) ^ n"
class ring_bit_operations = semiring_bit_operations + ring_parity +
  fixes not :: "'a => 'a"
  assumes
    "bit_not_iff_eq":
      "!!a n. bit (not a) n = ((2::'a) ^ n ~= (0::'a) & ~ bit a n)"
  assumes "minus_eq_not_minus_1": "!!a. - a = not (a - (1::'a))"
instantiation
  word :: (len) size
  size_word == size :: 'a word => nat
### Partially applied constant "Word.word_sle" on left hand side of equation, in theorem:
### linorder.Min (\<le>s) (set (?x # ?xs)) == fold signed.min ?xs ?x
### Partially applied constant "Word.word_sle" on left hand side of equation, in theorem:
### linorder.Max (\<le>s) (set (?x # ?xs)) == fold signed.max ?xs ?x
### Partially applied constant "Word.word_sle" on left hand side of equation, in theorem:
### signed.sorted [] == True
### Partially applied constant "Word.word_sle" on left hand side of equation, in theorem:
### signed.sorted [?x] == True
### Partially applied constant "Word.word_sle" on left hand side of equation, in theorem:
### signed.sorted (?x # ?y # ?zs) == ?x \<le>s ?y & signed.sorted (?y # ?zs)
### Partially applied constant "Word.word_sle" on left hand side of equation, in theorem:
### signed.sorted_list_of_set (set ?xs) == signed.sort (remdups ?xs)
val unat_arith_simpset =
   Simpset
    ({depth = (0, ref false), prems = [], rules =
      Net {atoms =
           {("Int.Pos",
              Leaf
               [{elhs = "Int.Pos", extra = false, fo = true, lhs =
                 Const ("Int.Pos", "num => int"), name = "Int.Pos_def",
                 perm = false, thm = "Int.Pos == numeral"}]),
             ("Word.Word",
               Leaf
                [{elhs = "Word.Word", extra = false, fo = true, lhs =
                  Const ("Word.Word", "int => ?'a1 word"), name =
                  "Word.Word_eq_word_of_int", perm = false, thm =
                  "Word.Word == word_of_int"}]),
             ("Word.cast",
               Leaf
                [{elhs = "Word.cast", extra = false, fo = true, lhs =
                  Const ("Word.cast", "?'a1 word => ?'b1 word"), name =
                  "??.unknown", perm = false, thm = "Word.cast == ucast"}]),
             ("Word.of_int",
               Leaf
                [{elhs = "Word.of_int", extra = false, fo = true, lhs =
                  Const ("Word.of_int", "int => ?'a1 word"), name =
                  "??.unknown", perm = false, thm =
                  "Word.of_int == word_of_int"}]),
             ("Word.of_nat",
               Leaf
                [{elhs = "Word.of_nat", extra = false, fo = true, lhs =
                  Const ("Word.of_nat", "nat => ?'a1 word"), name =
                  "??.unknown", perm = false, thm =
                  "Word.of_nat == word_of_nat"}]),
             ("Word.the_int",
               Leaf
                [{elhs = "Word.the_int", extra = false, fo = true, lhs =
                  Const ("Word.the_int", "?'a1 word => int"), name =
                  "??.unknown", perm = false, thm =
                  "Word.the_int == uint"}]),
             ("Word.the_nat",
               Leaf
                [{elhs = "Word.the_nat", extra = false, fo = true, lhs =
                  Const ("Word.the_nat", "?'a1 word ... nat"), name =
                  "??.unknown", perm = false, thm =
                  "Word.the_nat == unat"}]),
             ("String.Literal'",
               Leaf
                [{elhs = "String.Literal'", extra = false, fo = true, lhs =
                  Const ("String.Literal'", "... ... ..."), name =
                  "String.Literal'_def", perm = false, thm =
                  "String.Literal' ... String.Literal"}]),
             ("Code_Numeral.Pos",
               Leaf
                [{elhs = "Code_Numeral.Pos", extra = false, fo = true, lhs =
                  Const ("Code_Numeral.Pos", "..."), name =
                  "Code_Numeral.Pos_def", perm = false, thm =
                  "... ... ..."}]),
             ("Word.signed_cast",
               Leaf
                [{elhs = "Word.signed_cast", extra = false, fo = true, lhs =
                  Const ("Word.signed_cast", "..."), name = "??.unknown",
                  ...}]),
             ("Word.the_signed_int",
               Leaf
                [{elhs = "...", extra = false, fo = true, lhs =
                  Const ("...", ...), ...}]),
             ("Groups.abs_class.abs",
               Leaf [{elhs = "...", extra = false, fo = true, ...}]),
             ("Groups.one_class.one",
               Leaf [{elhs = ..., extra = false, ...}, ...]),
             ("Groups.sgn_class.sgn", Leaf [...]),
             ("Code_Numeral.negative", ...), ...},
           comb =
           Net {atoms =
                {("Fun.id",
                   Net {atoms = {}, comb = Leaf [], var =
                        Leaf
                         [{elhs = "id ?y", extra = false, fo = true, lhs =
                           Const ("Fun.id", "?'a => ?'a") $
                             Var (("y", 0), "?'a"),
                           name = "Fun.id_apply", perm = false, thm =
                           "id ?y == ?y"}]}),
                  ("HOL.Ex",
                    Net {atoms = {}, comb =
                         Net {atoms =
                              {("HOL.eq",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "(?'d1 => bool) => bool") $ ..., ...}]})},
                              comb = Leaf [], var = Leaf []},
                         var =
                         Leaf
                          [{elhs = "Ex ?P1", extra = false, fo = true, lhs =
                            Const ("HOL.Ex", "(...) ... bool") $
                              Abs ("x", "1",
                                Var ((...), "1 => bool") $ ...),
                            name = "Numeral_Type.ex_1", perm = false, thm =
                            "EX x. ?P1 x == ?P1 1"},
                           {elhs = "Ex ?P1", extra = false, fo = true, lhs =
                            Const ("HOL.Ex", "... ... ...") $
                              Abs ("x", "...", ... $ ...),
                            name = "Product_Type.split_paired_Ex", perm =
                            false, thm =
                            "... x... ... ... == ... a b... ... ..."},
                           {elhs = "EX x y. ?p1 ... ......... ......",
                            extra = false, fo = true, lhs =
                            Const ("HOL.Ex", "...") $ Abs ("x", "...", ...),
                            name = "Product_Type.surj_pair", perm = false,
                            thm = "... ... ...... ... ... True"},
                           {elhs = "... x... ... ... ...", extra = false,
                            fo = false, lhs =
                            Const ("HOL.Ex", "...") $ Abs ("x", ..., ...),
                            name = "Set.ex_image_cong_iff_2", perm = false,
                            thm = "... ... ..."},
                           {elhs = "... ...... ...", extra = false, fo =
                            true, lhs =
                            Const ("...", ...) $ Abs ("...", "?'a1", ...),
                            name = "Set.ex_image_cong_iff_1", ...},
                           {elhs = "...", extra = false, fo = false, lhs =
                            Const ("...", "(?'d1 => bool) => bool") $ ...,
                            ...},
                           {elhs = "...", extra = false, fo = false, ...},
                           {elhs = ..., extra = false, ...}, ...]}),
                  ("HOL.All",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [{elhs = "All ?P1", extra = false, fo = true,
                            lhs =
                            Const ("HOL.All", "... ... ...") $
                              Abs ("i", "...", ... $ ...),
                            name = "Numeral_Type.forall_1", perm = false,
                            thm = "... i... ... ... == ?P1 ..."},
                           {elhs = "ALL y. ?x1 ... ... ...", extra = false,
                            fo = true, lhs =
                            Const ("HOL.All", "...") $
                              Abs ("y", "...", ...),
                            name = "Option.not_Some_eq", perm = false, thm =
                            "... ...... ... ... ... ... ..."},
                           {elhs = "All ?P1", extra = false, fo = true,
                            lhs =
                            Const ("HOL.All", "...") $ Abs ("x", ..., ...),
                            name = "Product_Type.split_paired_All", perm =
                            false, thm = "... ... ..."},
                           {elhs = "... ...... ...", extra = false, fo =
                            true, lhs =
                            Const ("...", ...) $ Abs ("...", "?'a1", ...),
                            name = "Set.all_not_in_conv", ...},
                           {elhs = "...", extra = false, fo = true, lhs =
                            Const ("...", "(?'d1 => bool) => bool") $ ...,
                            ...},
                           {elhs = "...", extra = false, fo = true, ...},
                           {elhs = ..., extra = false, ...}, ...]}),
                  ("HOL.Ex1",
                    Net {atoms = {}, comb =
                         Net {atoms =
                              {("HOL.eq",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf [{elhs = ..., extra = false, ...}]})},
                              comb = Leaf [], var = Leaf []},
                         var =
                         Leaf
                          [{elhs = "EX! x. x ... ?t1", extra = false, fo =
                            true, lhs =
                            Const ("HOL.Ex1", "...") $
                              Abs ("x", "...", ...),
                            name = "HOL.ex1_eq_1", perm = false, thm =
                            "... ...... ... ... True"}]}),
                  ("HOL.Not",
                    Net {atoms =
                         {("HOL.True",
                            Leaf
                             [{elhs = "... True", extra = false, fo = true,
                               lhs =
                               Const ("...", ...) $ Const ("...", "bool"),
                               name = "HOL.simp_thms_7", ...}]),
                           ("HOL.False",
                             Leaf
                              [{elhs = "... ...", extra = false, fo = true,
                                lhs = Const ("...", "bool => bool") $ ...,
                                ...}])},
                         comb =
                         Net {atoms =
                              {("HOL.Ex",
                                 Net {atoms = {}, comb = Leaf [...], var =
Leaf [...]}),
                                ("HOL.All",
                                  Net {atoms = {}, comb = ..., var = ...}),
                                ("HOL.Not", Net {atoms = {}, ...}),
                                ("Finite_Set.finite", ...)},
                              comb =
                              Net {atoms =
                                   {("HOL.eq", Net {atoms = {...}, ...}),
                                     ("Set.Bex", ...), ...},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []},
                         var = Leaf []}),
                  ("HOL.The",
                    Net {atoms = {}, comb =
                         Net {atoms =
                              {("HOL.eq",
                                 Net {atoms = {}, comb = ..., var = ...}),
                                ("Product_Type.prod.case_prod",
                                  Net {atoms = {}, ...})},
                              comb = Leaf [], var = Leaf []},
                         var =
                         Leaf
                          [{elhs = "... ...... ...", extra = false, fo =
                            true, lhs =
                            Const ("...", ...) $ Abs ("...", "?'a", ...),
                            name = "HOL.the_eq_trivial", ...}]}),
                  ("Int.Neg",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [{elhs = "...", extra = false, fo = true, lhs =
                            Const ("...", "num => int") $ ..., ...}]}),
                  ("Int.dup",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [{elhs = "...", extra = false, fo = true, ...}]}),
                  ("Int.nat",
                    Net {atoms =
                         {("Groups.one_class.one", Leaf [...]),
                           ("Groups.zero_class.zero", ...)},
                         comb = Net {atoms = {...}, comb = ..., var = ...},
                         var = Leaf [{elhs = ..., extra = false, ...}]}),
                  ("Map.dom",
                    Net {atoms = {}, comb = Net {atoms = {...}, ...}, var =
                         Leaf [...]}),
                  ("Map.ran", Net {atoms = {}, comb = ..., var = ...}),
                  ("Nat.Suc", Net {atoms = {...}, ...}), ("Num.inc", ...),
                  ...},
                comb =
                Net {atoms =
                     {("HOL.eq",
                        Net {atoms =
                             {("HOL.True",
                                Net {atoms =
                                     {("HOL.False",
  Leaf
   [{elhs = "...", extra = false, fo = true, lhs =
     Const ("...", "bool => bool => bool") $ ... $ ..., ...}])},
                                     comb = Leaf [], var =
                                     Leaf
[{elhs = "... ... ...", extra = false, fo = true, lhs =
  Const ("...", ...) $ Const ("...", "bool") $ ..., name =
  "HOL.simp_thms_11", ...}]}),
                               ("HOL.False",
                                 Net {atoms =
{("HOL.True", Leaf [{elhs = "...", extra = false, fo = true, ...}])}, comb =
Leaf [], var =
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "bool => bool => bool") $ ... $ ..., ...}]}),
                               ("Num.num.One",
                                 Net {atoms = {}, comb =
Net {atoms = {("Num.num.Bit0", ...), ...}, comb = Leaf [...], var =
     Leaf [...]},
var = Leaf []}),
                               ("Filter.at_bot",
                                 Net {atoms =
{("Orderings.bot_class.bot", Leaf [...])}, comb = Leaf [], var = Leaf []}),
                               ("Filter.at_top",
                                 Net {atoms =
{("Orderings.bot_class.bot", ...)}, comb = Leaf [...], var = Leaf [...]}),
                               ("List.list.Nil",
                                 Net {atoms = {}, comb = ..., var = ...}),
                               ("Filter.cofinite",
                                 Net {atoms = {...}, ...}),
                               ("Option.option.None", ...), ...},
                             comb =
                             Net {atoms =
                                  {("HOL.Not",
                                     Net
{atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Net {atoms = {...}, ...}, var = Leaf [...]}}),
                                    ("Int.nat",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {...}, comb = ..., var = ...}}),
                                    ("Map.dom",
Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {...}, ...}}),
                                    ("Nat.Suc",
Net {atoms = {...}, comb = ..., var = ...}),
                                    ("Set.Pow", Net {atoms = {}, ...}),
                                    ("List.rev", ...), ...},
                                  comb =
                                  Net {atoms =
 {("List.upt",
    Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}),
   ("List.zip", Net {atoms = {}, comb = ..., var = ...}),
   ("List.drop", Net {atoms = {}, ...}), ("List.take", ...), ...},
 comb =
 Net {atoms =
      {("Fun.fun_upd", Net {atoms = {}, ...}), ("Map.map_add", ...), ...},
      comb = Net {atoms = {...}, comb = ..., var = ...}, var = Leaf []},
 var = Leaf []},
                                  var = Leaf []},
                             var =
                             Net {atoms =
                                  {("HOL.True",
                                     Leaf
[{elhs = "... ... ...", extra = false, fo = true, lhs =
  Const ("...", ...) $ Var ((...), "bool") $ ..., name = "HOL.simp_thms_12",
  ...}]),
                                    ("HOL.False",
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "bool => bool => bool") $ ... $ ..., ...}]),
                                    ("Groups.one_class.one",
Leaf [{elhs = "...", extra = false, fo = true, ...}])},
                                  comb =
                                  Net {atoms =
 {("HOL.Not", Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}),
   ("Map.map_of", Net {atoms = {}, comb = ..., var = ...}),
   ("Groups.uminus_class.uminus", Net {atoms = {}, ...})},
 comb =
 Net {atoms =
      {("List.append", Net {atoms = {}, ...}), ("Map.map_add", ...), ...},
      comb = Leaf [], var = Leaf []},
 var = Leaf []},
                                  var =
                                  Leaf
                                   [{elhs = "?v1 ... ?w1", extra = false,
                                     fo = true, lhs =
                                     Const ("HOL.eq", "...") $
 Var (("...", 1), ...) $ Var ((...), "?'a1 word"),
                                     name = "local.unat_arith_simps_3",
                                     perm = false, thm = "... ... ..."},
                                    {elhs = "... ... ...", extra = false,
                                     fo = true, lhs =
                                     Const ("...", ...) $
 Var ((...), "?'a1") $ ...,
                                     name = "HOL.simp_thms_6", ...}]}}),
                       ("HOL.Let",
                         Net {atoms =
                              {("Groups.one_class.one",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "?'b1 => (?'b1 => ?'a) => ?'a") $ ... $ ..., ...}]}),
                                ("Groups.zero_class.zero",
                                  Net {atoms = {}, comb = Leaf [], var =
 Leaf [{elhs = "...", extra = false, fo = true, ...}]})},
                              comb =
                              Net {atoms =
                                   {("Nat.Suc",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {}, comb = ..., var = ...}}),
                                     ("Num.numeral_class.numeral",
 Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}),
                                     ("Groups.uminus_class.uminus",
 Net {atoms = {}, comb = ..., var = ...})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []}),
                       ("Int.sub",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf
                                    [{elhs = "...", extra = false, fo =
true, lhs = Const ("...", "num => num => int") $ ... $ ..., ...}]}}),
                       ("Num.pow",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms =
                                   {("Num.num.One",
Leaf [{elhs = ..., extra = false, ...}])},
                                   comb =
                                   Net {atoms =
  {("Num.num.Bit0", ...), ...}, comb = Leaf [...], var = Leaf [...]},
                                   var = Leaf []}}),
                       ("Set.Bex",
                         Net {atoms =
                              {("Orderings.bot_class.bot",
                                 Net {atoms = {}, comb = Leaf [...], var =
Leaf [...]}),
                                ("Orderings.top_class.top",
                                  Net {atoms = {}, comb = ..., var = ...})},
                              comb =
                              Net {atoms =
                                   {("Set.Collect", Net {atoms = {}, ...}),
                                     ("List.list.set", ...), ...},
                                   comb =
                                   Net {atoms = {...}, comb = ..., var =
  ...},
                                   var = Leaf []},
                              var =
                              Net {atoms = {}, comb =
                                   Net {atoms = {...}, comb = ..., var =
  ...},
                                   var =
                                   Leaf
                                    [{elhs = ..., extra = false, ...},
                                     ...]}}),
                       ("Fun.comp",
                         Net {atoms =
                              {("Fun.id",
                                 Net {atoms = {}, comb = ..., var = ...}),
                                ("Option.option.the",
                                  Net {atoms = {...}, ...}),
                                ("Product_Type.prod.fst", ...), ...},
                              comb =
                              Net {atoms = {("List.list.map", ...), ...},
                                   comb = Net {atoms = {...}, ...}, var =
                                   Leaf [...]},
                              var =
                              Net {atoms = {("Fun.id", ...)}, comb =
                                   Leaf [...], var = Leaf [...]}}),
                       ("GCD.bezw",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {...}, comb = ..., var = ...}}),
                       ("HOL.conj",
                         Net {atoms = {("HOL.True", ...), ...}, comb =
                              Net {atoms = {...}, ...}, var =
                              Net {atoms = {...}, ...}}),
                       ("HOL.disj",
                         Net {atoms = {...}, comb = ..., var = ...}),
                       ("List.nth", Net {atoms = {}, ...}),
                       ("List.upt", ...), ...},
                     comb =
                     Net {atoms =
                          {("HOL.If",
                             Net {atoms =
                                  {("HOL.True",
                                     Net
{atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}}),
                                    ("HOL.False",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {}, comb = ..., var = ...}})},
                                  comb =
                                  Net {atoms = {}, comb =
 Net {atoms = {("HOL.eq", Net {atoms = {}, ...})}, comb = Leaf [], var =
      Leaf []},
 var = Leaf []},
                                  var =
                                  Net {atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [], var =
      Leaf [{elhs = ..., extra = false, ...}]}}}),
                            ("Fun.comp",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}}}),
                            ("Fun.fcomp",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = ..., var = ...}}}),
                            ("List.foldl",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = Leaf [...], var =
  Net {atoms = {...}, ...}}}),
                            ("List.foldr",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = ..., var =
  ...}}),
                            ("Nat.compow",
                              Net {atoms =
                                   {("Groups.zero_class.zero", ...)}, comb =
                                   Leaf [...], var = Leaf [...]}),
                            ("Fun.fun_upd",
                              Net {atoms = {}, comb = ..., var = ...}),
                            ("Map.map_add", Net {atoms = {}, ...}),
                            ("Fun.bij_betw", ...), ...},
                          comb =
                          Net {atoms =
                               {("Fun.fun_upd",
                                  Net {atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [], var =
      Net {atoms = {}, comb = ..., var = ...}}}),
                                 ("Fun.map_fun",
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}}),
                                 ("Map.map_upds",
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = ..., var = ...}}),
                                 ("BNF_Def.rel_sum",
                                   Net {atoms = {}, comb = Leaf [...], var =
  Net {atoms = {}, ...}}),
                                 ("Fun.override_on",
                                   Net {atoms = {}, comb = ..., var = ...}),
                                 ("Num.num.rec_num", Net {atoms = {}, ...}),
                                 ("Num.num.case_num", ...), ...},
                               comb =
                               Net {atoms =
                                    {("Enum.finite_4.rec_finite_4",
 Net {atoms = {}, comb = Leaf [], var =
      Net {atoms = {}, comb = ..., var = ...}}),
("Enum.finite_4.case_finite_4",
  Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}})},
                                    comb =
                                    Net {atoms =
   {("Enum.finite_5.rec_finite_5", Net {atoms = {}, comb = ..., var = ...}),
     ("Enum.finite_5.case_finite_5", Net {atoms = {}, ...})},
   comb =
   Net {atoms = {}, comb = Net {atoms = {...}, ...}, var = Leaf [...]},
   var = Leaf []},
                                    var = Leaf []},
                               var = Leaf []},
                          var = Leaf []},
                     var = Leaf []},
                var = Leaf []},
           var =
           Leaf
            [{elhs = "%u. EX x y. u = (x, y) & ?P1 x y", extra = false, fo =
              false, lhs =
              Abs ("u", "?'a1 * ?'b1",
                Const ("HOL.Ex", "(?'a1 => bool) => bool") $
                  Abs ("x", "?'a1",
                    Const ("HOL.Ex", "...") $ Abs ("y", "...", ...))),
              name = "Product_Type.split_eta_SetCompr2", perm = false, thm =
              "%u. EX x y. u = (x, y) & ?P1 x y == %(x, y). ?P1 x y"},
             {elhs = "%u. EX x y. u = (x, y) & ?y (x, y)", extra = false,
              fo = true, lhs =
              Abs ("u", "?'a1 * ?'b1",
                Const ("HOL.Ex", "(?'a1 ... bool) => bool") $
                  Abs ("x", "?'a1",
                    Const ("HOL.Ex", "...") $ Abs ("y", ..., ...))),
              name = "Product_Type.split_eta_SetCompr", perm = false, thm =
              "%u. EX x y. u = (x, y) & ?y (x, y) == ?y"},
             {elhs = "%a. ?y ()", extra = false, fo = true, lhs =
              Abs ("", "unit",
                Var (("y", 0), "unit => ?'a1") $
                  Const ("Product_Type.Unity", "unit")),
              name = "Product_Type.unit_abs_eta_conv", perm = false, thm =
              "%a. ?y () == ?y"},
             {elhs = "%A f. Inf (f ` A)", extra = false, fo = true, lhs =
              Abs ("A", "?'a1 set",
                Abs ("f", "?'a1 => bool",
                  Const ("Complete_Lattices.Inf_class.Inf", "...") $
                    (Const ("...",
                            "(?'a1 => bool) => ?'a1 set => bool set") $
                      ... $ ...))),
              name = "Complete_Lattices.INF_bool_eq", perm = false, thm =
              "%A f. Inf (f ` A) == Ball"},
             {elhs = "%A f. Sup (f ` A)", extra = false, fo = true, lhs =
              Abs ("A", "?'a1 set",
                Abs ("f", "?'a1 ... bool",
                  Const ("...", ...) $ (... $ ... $ ...))),
              name = "Complete_Lattices.SUP_bool_eq", perm = false, thm =
              "%A f. Sup (f ... A) == Bex"}]}},
     {congs =
      ({((true, "HOL.If"),
          "?b == ?c ==> if ?b then ?x else ?y == if ?c then ?x else ?y"),
         ((true, "Set.Bex"),
           "[| ?A == ?B; !!x. x : ?B =simp=> ?P x == ?Q x |]
            ==> EX x:?A. ?P x == EX x:?B. ?Q x"),
         ((true, "Set.Ball"),
           "[| ?A == ?B; !!x. x : ?B =simp=> ?P x == ?Q x |]
            ==> ALL x:?A. ?P x == ALL x:?B. ?Q x"),
         ((true, "Set.image"),
           "[| ?M == ?N; !!x. x : ?N =simp=> ?f x == ?g x |]
            ==> ?f ` ?M == ?g ` ?N"),
         ((true, "HOL.implies"),
           "[| ?P == ?P'; ?P' ==> ?Q == ?Q' |]
            ==> ?P --> ?Q == ?P' --> ?Q'"),
         ((true, "HOL.NO_MATCH"),
           "NO_MATCH ?pat ?val == NO_MATCH ?pat ?val"),
         ((true, "HOL.ASSUMPTION"), "ASSUMPTION ?A == ASSUMPTION ?A"),
         ((true, "HOL.simp_implies"),
           "[| PROP ?P == PROP ?P'; PROP ?P' ==> PROP ?Q ... PROP ?Q' |]
            ==> (PROP ?P ... PROP ?Q) == (PROP ?P' ... PROP ?Q')"),
         ((true, "Nat.nat.case_nat"),
           "?M == ?M' ==>
            case ?M of ... ... ... | ... ... ... ==
            case ?M' of ... ... ... | ... ... ..."),
         ((true, "Num.num.case_num"),
           "?num ... ?num' ==>
            ... ... ... ... ... ... ... ... ...
            ... ... ... ... ... ... ... ..."),
         ((true, "List.successively"),
           "... ...... ... ... ==> ... ... ..."),
         ((true, "List.list.case_list"), "... ... ..."),
         ((true, "String.char.case_char"), "..."),
         ((true, "Sum_Type.sum.case_sum"), "..."),
         ((true, "Nitpick.word.case_word"), ...), ((true, "..."), ...),
         ...},
       [(true, "Power.power_class.power"),
        (true, "Phantom_Type.phantom.case_phantom"),
        (true, "Nitpick.word.case_word"),
        (true, "Nitpick.pair_box.case_pair_box"),
        (true, "Nitpick.fun_box.case_fun_box"),
        (true, "Record.tuple_isomorphism.case_tuple_isomorphism"),
        (true, "Extraction.sumbool.case_sumbool"),
        (true, "Quickcheck_Exhaustive.three_valued.case_three_valued"),
        (true, "Quickcheck_Exhaustive.unknown.case_unknown"),
        (true, "Quickcheck_Narrowing.cfun.case_cfun"),
        (true, "Quickcheck_Narrowing.ffun.case_ffun"),
        (true, "Quickcheck_Narrowing.property.case_property"),
        (true, "Quickcheck_Narrowing.narrowing_cons.case_narrowing_cons"),
        (true, "Quickcheck_Narrowing.narrowing_term.case_narrowing_term"),
        (true, "Quickcheck_Narrowing.narrowing_type.case_narrowing_type"),
        (true, "..."), ...]),
      loop_tacs =
      [("split asm HOL.If :: (HOL.bool, (_, (_, _)fun)fun)fun", fn),
       ("split asm Rings.zero_neq_one_class.of_bool :: (HOL.bool, _)fun",
        fn),
       ("split Rings.zero_neq_one_class.of_bool :: (HOL.bool, _)fun", fn),
       ("split HOL.If :: (HOL.bool, (_, (_, _)fun)fun)fun", fn)],
      mk_rews =
      {mk = fn, mk_cong = fn, mk_eq_True = fn, mk_sym = fn, reorient = fn},
      procs =
      Net {atoms = {}, comb =
           Net {atoms =
                {("HOL.Ex",
                   Net {atoms = {}, comb = Leaf [], var =
                        Leaf
                         [Proc
                           {lhs =
                            Const ("HOL.Ex", "(...) ... bool") $
                              Abs ("x", "?'a",
                                Var ((...), "?'a => bool") $ ...),
                            name = "HOL.defined_Ex", proc = fn, stamp =
                            Stamp 91198}]}),
                  ("HOL.All",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs =
                             Const ("HOL.All", "... ... ...") $
                               Abs ("x", "...", ... $ ...),
                             name = "HOL.defined_All", proc = fn, stamp =
                             Stamp 91244}]}),
                  ("HOL.Not",
                    Net {atoms = {}, comb =
                         Net {atoms = {}, comb =
                              Net {atoms =
                                   {("Orderings.ord_class.less",
Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []},
                         var = Leaf []}),
                  ("Nat.Suc",
                    Net {atoms = {}, comb =
                         Net {atoms = {}, comb =
                              Net {atoms =
                                   {("Groups.plus_class.plus",
Net {atoms = {}, comb = ..., var = ...})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []},
                         var = Leaf []}),
                  ("Pure.all",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs =
                             Const ("...", ...) $ Abs ("...", "?'a", ...),
                             name = "HOL.defined_all", proc = fn, stamp =
                             Stamp 91290}]}),
                  ("Set.Collect",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs =
                             Const ("...", "(?'a => bool) => ?'a set") $
                               ...,
                             name = "Product_Type.Collect_mem", proc = fn,
                             stamp = Stamp 616364},
                           Proc
                            {lhs = ... $ ..., name = "Set.defined_Collect",
                             proc = fn, stamp = Stamp 299868}]}),
                  ("List.list.set",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs = ... $ ..., name =
                             "List.list_to_set_comprehension", proc = fn,
                             stamp = Stamp 2625594}]}),
                  ("Product_Type.prod.case_prod",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf [Proc {lhs = ..., name = "...", ...}]})},
                comb =
                Net {atoms =
                     {("HOL.eq",
                        Net {atoms =
                             {("Groups.one_class.one",
                                Net {atoms = {}, comb = Leaf [], var =
                                     Leaf
[Proc
  {lhs = Const ("...", "?'a => ?'a => bool") $ ... $ ..., name =
   "Groups.reorient_one", proc = fn, stamp = Stamp 171260}]}),
                               ("Groups.zero_class.zero",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf
 [Proc
   {lhs = ... $ ... $ ..., name = "Groups.reorient_zero", proc = fn, stamp =
    Stamp 171216}]})},
                             comb =
                             Net {atoms =
                                  {("Nat.Suc",
                                     Net
{atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}}),
                                    ("Num.numeral_class.numeral",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {}, comb = ..., var = ...}}),
                                    ("Groups.uminus_class.uminus",
Net {atoms = {}, comb = Net {atoms = {...}, ...}, var =
     Net {atoms = {}, ...}})},
                                  comb =
                                  Net {atoms =
 {("Groups.plus_class.plus",
    Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}),
   ("Groups.minus_class.minus", Net {atoms = {}, comb = ..., var = ...}),
   ("Groups.times_class.times", Net {atoms = {}, ...})},
 comb = Leaf [], var = Leaf []},
                                  var = Leaf []},
                             var =
                             Net {atoms = {}, comb =
                                  Net {atoms =
 {("Nat.Suc", Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}),
   ("Groups.uminus_class.uminus", Net {atoms = {}, comb = ..., var = ...})},
 comb =
 Net {atoms =
      {("Groups.plus_class.plus", Net {atoms = {}, ...}),
        ("Groups.minus_class.minus", ...), ...},
      comb = Leaf [], var = Leaf []},
 var = Leaf []},
                                  var =
                                  Leaf
                                   [Proc
                                     {lhs =
Const ("...", ...) $ Var ((...), "?'a") $ ..., name = "record_eq", proc =
fn, stamp = Stamp 4153886},
                                    Proc
                                     {lhs =
Const ("...", "?'a list => ?'a list => bool") $ ... $ ..., name =
"List.list_neq", proc = fn, stamp = Stamp 2645062},
                                    Proc
                                     {lhs = ... $ ... $ ..., name =
"List.list_eq", proc = fn, stamp = Stamp 2633172},
                                    Proc {lhs = ..., name = "...", ...},
                                    Proc {lhs = ..., ...}, ...]}}),
                       ("HOL.Let",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf
                                    [Proc
{lhs = Const ("...", "?'a => (?'a => ?'b) => ?'b") $ ... $ ..., name =
 "HOL.let_simp", proc = fn, stamp = Stamp 91526}]}}),
                       ("Set.Bex",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf
                                    [Proc
{lhs = ... $ ... $ ..., name = "Set.defined_Bex", proc = fn, stamp =
 Stamp 303020}]}}),
                       ("Pure.imp",
                         Net {atoms = {}, comb =
                              Net {atoms =
                                   {("HOL.Trueprop",
Net {atoms = {...}, comb = ..., var = ...})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []}),
                       ("Set.Ball",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf [Proc {lhs = ..., ...}]}}),
                       ("HOL.NO_MATCH",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [...], var =
                                   Leaf [...]}}),
                       ("Rings.dvd_class.dvd",
                         Net {atoms = {}, comb =
                              Net {atoms = {}, comb = ..., var = ...}, var =
                              Net {atoms = {}, comb = ..., var = ...}}),
                       ("Groups.plus_class.plus",
                         Net {atoms = {}, comb = Leaf [...], var =
                              Net {atoms = {}, ...}}),
                       ("Lattices.inf_class.inf",
                         Net {atoms = {}, comb = ..., var = ...}),
                       ("Lattices.sup_class.sup", Net {atoms = {}, ...}),
                       ("Groups.minus_class.minus", ...), ...},
                     comb =
                     Net {atoms =
                          {("Fun.fun_upd",
                             Net {atoms = {}, comb =
                                  Net {atoms = {}, comb =
 Net {atoms = {}, comb = Net {atoms = {...}, comb = ..., var = ...}, var =
      Leaf []},
 var = Leaf []},
                                  var = Leaf []})},
                          comb = Leaf [], var = Leaf []},
                     var = Leaf []},
                var = Leaf []},
           var =
           Leaf
            [Proc
              {lhs = Var (("x", 0), "?'a"), name = "record", proc = fn,
               stamp = Stamp 4153844},
             Proc
              {lhs = Var (("x", 0), "?'a"), name = "record_upd", proc = fn,
               stamp = Stamp 4153854},
             Proc
              {lhs = Var (("x", 0), "unit"), name = "Product_Type.unit_eq",
               proc = fn, stamp = Stamp 562196}]},
      solvers =
      ([Solver {id = Stamp 1038750, name = "Rtranclp", solver = fn},
        Solver {id = Stamp 1038748, name = "Tranclp", solver = fn},
        Solver {id = Stamp 1038746, name = "Rtrancl", solver = fn},
        Solver {id = Stamp 1038744, name = "Trancl", solver = fn},
        Solver {id = Stamp 781564, name = "lin_arith", solver = fn},
        Solver {id = Stamp 132670, name = "Transitivity", solver = fn},
        Solver {id = Stamp 102528, name = "ASSUMPTION", solver = fn},
        Solver {id = Stamp 90936, name = "HOL unsafe", solver = fn}],
       [Solver {id = Stamp 90938, name = "HOL safe", solver = fn}]),
      subgoal_tac = fn, term_ord = fn}):
   simpset
val unat_arith_tacs = fn: Proof.context -> tactic list
val unat_arith_tac = fn: Proof.context -> int -> tactic
val uint_arith_simpset =
   Simpset
    ({depth = (0, ref false), prems = [], rules =
      Net {atoms =
           {("Int.Pos",
              Leaf
               [{elhs = "Int.Pos", extra = false, fo = true, lhs =
                 Const ("Int.Pos", "num => int"), name = "Int.Pos_def",
                 perm = false, thm = "Int.Pos == numeral"}]),
             ("Word.Word",
               Leaf
                [{elhs = "Word.Word", extra = false, fo = true, lhs =
                  Const ("Word.Word", "int => ?'a1 word"), name =
                  "Word.Word_eq_word_of_int", perm = false, thm =
                  "Word.Word == word_of_int"}]),
             ("Word.cast",
               Leaf
                [{elhs = "Word.cast", extra = false, fo = true, lhs =
                  Const ("Word.cast", "?'a1 word => ?'b1 word"), name =
                  "??.unknown", perm = false, thm = "Word.cast == ucast"}]),
             ("Word.of_int",
               Leaf
                [{elhs = "Word.of_int", extra = false, fo = true, lhs =
                  Const ("Word.of_int", "int => ?'a1 word"), name =
                  "??.unknown", perm = false, thm =
                  "Word.of_int == word_of_int"}]),
             ("Word.of_nat",
               Leaf
                [{elhs = "Word.of_nat", extra = false, fo = true, lhs =
                  Const ("Word.of_nat", "nat => ?'a1 word"), name =
                  "??.unknown", perm = false, thm =
                  "Word.of_nat == word_of_nat"}]),
             ("Word.the_int",
               Leaf
                [{elhs = "Word.the_int", extra = false, fo = true, lhs =
                  Const ("Word.the_int", "?'a1 word => int"), name =
                  "??.unknown", perm = false, thm =
                  "Word.the_int == uint"}]),
             ("Word.the_nat",
               Leaf
                [{elhs = "Word.the_nat", extra = false, fo = true, lhs =
                  Const ("Word.the_nat", "?'a1 word ... nat"), name =
                  "??.unknown", perm = false, thm =
                  "Word.the_nat == unat"}]),
             ("String.Literal'",
               Leaf
                [{elhs = "String.Literal'", extra = false, fo = true, lhs =
                  Const ("String.Literal'", "... ... ..."), name =
                  "String.Literal'_def", perm = false, thm =
                  "String.Literal' ... String.Literal"}]),
             ("Code_Numeral.Pos",
               Leaf
                [{elhs = "Code_Numeral.Pos", extra = false, fo = true, lhs =
                  Const ("Code_Numeral.Pos", "..."), name =
                  "Code_Numeral.Pos_def", perm = false, thm =
                  "... ... ..."}]),
             ("Word.signed_cast",
               Leaf
                [{elhs = "Word.signed_cast", extra = false, fo = true, lhs =
                  Const ("Word.signed_cast", "..."), name = "??.unknown",
                  ...}]),
             ("Word.the_signed_int",
               Leaf
                [{elhs = "...", extra = false, fo = true, lhs =
                  Const ("...", ...), ...}]),
             ("Groups.abs_class.abs",
               Leaf [{elhs = "...", extra = false, fo = true, ...}]),
             ("Groups.one_class.one",
               Leaf [{elhs = ..., extra = false, ...}, ...]),
             ("Groups.sgn_class.sgn", Leaf [...]),
             ("Code_Numeral.negative", ...), ...},
           comb =
           Net {atoms =
                {("Fun.id",
                   Net {atoms = {}, comb = Leaf [], var =
                        Leaf
                         [{elhs = "id ?y", extra = false, fo = true, lhs =
                           Const ("Fun.id", "?'a => ?'a") $
                             Var (("y", 0), "?'a"),
                           name = "Fun.id_apply", perm = false, thm =
                           "id ?y == ?y"}]}),
                  ("HOL.Ex",
                    Net {atoms = {}, comb =
                         Net {atoms =
                              {("HOL.eq",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "(?'d1 => bool) => bool") $ ..., ...}]})},
                              comb = Leaf [], var = Leaf []},
                         var =
                         Leaf
                          [{elhs = "Ex ?P1", extra = false, fo = true, lhs =
                            Const ("HOL.Ex", "(...) ... bool") $
                              Abs ("x", "1",
                                Var ((...), "1 => bool") $ ...),
                            name = "Numeral_Type.ex_1", perm = false, thm =
                            "EX x. ?P1 x == ?P1 1"},
                           {elhs = "Ex ?P1", extra = false, fo = true, lhs =
                            Const ("HOL.Ex", "... ... ...") $
                              Abs ("x", "...", ... $ ...),
                            name = "Product_Type.split_paired_Ex", perm =
                            false, thm =
                            "... x... ... ... == ... a b... ... ..."},
                           {elhs = "EX x y. ?p1 ... ......... ......",
                            extra = false, fo = true, lhs =
                            Const ("HOL.Ex", "...") $ Abs ("x", "...", ...),
                            name = "Product_Type.surj_pair", perm = false,
                            thm = "... ... ...... ... ... True"},
                           {elhs = "... x... ... ... ...", extra = false,
                            fo = false, lhs =
                            Const ("HOL.Ex", "...") $ Abs ("x", ..., ...),
                            name = "Set.ex_image_cong_iff_2", perm = false,
                            thm = "... ... ..."},
                           {elhs = "... ...... ...", extra = false, fo =
                            true, lhs =
                            Const ("...", ...) $ Abs ("...", "?'a1", ...),
                            name = "Set.ex_image_cong_iff_1", ...},
                           {elhs = "...", extra = false, fo = false, lhs =
                            Const ("...", "(?'d1 => bool) => bool") $ ...,
                            ...},
                           {elhs = "...", extra = false, fo = false, ...},
                           {elhs = ..., extra = false, ...}, ...]}),
                  ("HOL.All",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [{elhs = "All ?P1", extra = false, fo = true,
                            lhs =
                            Const ("HOL.All", "... ... ...") $
                              Abs ("i", "...", ... $ ...),
                            name = "Numeral_Type.forall_1", perm = false,
                            thm = "... i... ... ... == ?P1 ..."},
                           {elhs = "ALL y. ?x1 ... ... ...", extra = false,
                            fo = true, lhs =
                            Const ("HOL.All", "...") $
                              Abs ("y", "...", ...),
                            name = "Option.not_Some_eq", perm = false, thm =
                            "... ...... ... ... ... ... ..."},
                           {elhs = "All ?P1", extra = false, fo = true,
                            lhs =
                            Const ("HOL.All", "...") $ Abs ("x", ..., ...),
                            name = "Product_Type.split_paired_All", perm =
                            false, thm = "... ... ..."},
                           {elhs = "... ...... ...", extra = false, fo =
                            true, lhs =
                            Const ("...", ...) $ Abs ("...", "?'a1", ...),
                            name = "Set.all_not_in_conv", ...},
                           {elhs = "...", extra = false, fo = true, lhs =
                            Const ("...", "(?'d1 => bool) => bool") $ ...,
                            ...},
                           {elhs = "...", extra = false, fo = true, ...},
                           {elhs = ..., extra = false, ...}, ...]}),
                  ("HOL.Ex1",
                    Net {atoms = {}, comb =
                         Net {atoms =
                              {("HOL.eq",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf [{elhs = ..., extra = false, ...}]})},
                              comb = Leaf [], var = Leaf []},
                         var =
                         Leaf
                          [{elhs = "EX! x. x ... ?t1", extra = false, fo =
                            true, lhs =
                            Const ("HOL.Ex1", "...") $
                              Abs ("x", "...", ...),
                            name = "HOL.ex1_eq_1", perm = false, thm =
                            "... ...... ... ... True"}]}),
                  ("HOL.Not",
                    Net {atoms =
                         {("HOL.True",
                            Leaf
                             [{elhs = "... True", extra = false, fo = true,
                               lhs =
                               Const ("...", ...) $ Const ("...", "bool"),
                               name = "HOL.simp_thms_7", ...}]),
                           ("HOL.False",
                             Leaf
                              [{elhs = "... ...", extra = false, fo = true,
                                lhs = Const ("...", "bool => bool") $ ...,
                                ...}])},
                         comb =
                         Net {atoms =
                              {("HOL.Ex",
                                 Net {atoms = {}, comb = Leaf [...], var =
Leaf [...]}),
                                ("HOL.All",
                                  Net {atoms = {}, comb = ..., var = ...}),
                                ("HOL.Not", Net {atoms = {}, ...}),
                                ("Finite_Set.finite", ...)},
                              comb =
                              Net {atoms =
                                   {("HOL.eq", Net {atoms = {...}, ...}),
                                     ("Set.Bex", ...), ...},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []},
                         var = Leaf []}),
                  ("HOL.The",
                    Net {atoms = {}, comb =
                         Net {atoms =
                              {("HOL.eq",
                                 Net {atoms = {}, comb = ..., var = ...}),
                                ("Product_Type.prod.case_prod",
                                  Net {atoms = {}, ...})},
                              comb = Leaf [], var = Leaf []},
                         var =
                         Leaf
                          [{elhs = "... ...... ...", extra = false, fo =
                            true, lhs =
                            Const ("...", ...) $ Abs ("...", "?'a", ...),
                            name = "HOL.the_eq_trivial", ...}]}),
                  ("Int.Neg",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [{elhs = "...", extra = false, fo = true, lhs =
                            Const ("...", "num => int") $ ..., ...}]}),
                  ("Int.dup",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [{elhs = "...", extra = false, fo = true, ...}]}),
                  ("Int.nat",
                    Net {atoms =
                         {("Groups.one_class.one", Leaf [...]),
                           ("Groups.zero_class.zero", ...)},
                         comb = Net {atoms = {...}, comb = ..., var = ...},
                         var = Leaf [{elhs = ..., extra = false, ...}]}),
                  ("Map.dom",
                    Net {atoms = {}, comb = Net {atoms = {...}, ...}, var =
                         Leaf [...]}),
                  ("Map.ran", Net {atoms = {}, comb = ..., var = ...}),
                  ("Nat.Suc", Net {atoms = {...}, ...}), ("Num.inc", ...),
                  ...},
                comb =
                Net {atoms =
                     {("HOL.eq",
                        Net {atoms =
                             {("HOL.True",
                                Net {atoms =
                                     {("HOL.False",
  Leaf
   [{elhs = "...", extra = false, fo = true, lhs =
     Const ("...", "bool => bool => bool") $ ... $ ..., ...}])},
                                     comb = Leaf [], var =
                                     Leaf
[{elhs = "... ... ...", extra = false, fo = true, lhs =
  Const ("...", ...) $ Const ("...", "bool") $ ..., name =
  "HOL.simp_thms_11", ...}]}),
                               ("HOL.False",
                                 Net {atoms =
{("HOL.True", Leaf [{elhs = "...", extra = false, fo = true, ...}])}, comb =
Leaf [], var =
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "bool => bool => bool") $ ... $ ..., ...}]}),
                               ("Num.num.One",
                                 Net {atoms = {}, comb =
Net {atoms = {("Num.num.Bit0", ...), ...}, comb = Leaf [...], var =
     Leaf [...]},
var = Leaf []}),
                               ("Filter.at_bot",
                                 Net {atoms =
{("Orderings.bot_class.bot", Leaf [...])}, comb = Leaf [], var = Leaf []}),
                               ("Filter.at_top",
                                 Net {atoms =
{("Orderings.bot_class.bot", ...)}, comb = Leaf [...], var = Leaf [...]}),
                               ("List.list.Nil",
                                 Net {atoms = {}, comb = ..., var = ...}),
                               ("Filter.cofinite",
                                 Net {atoms = {...}, ...}),
                               ("Option.option.None", ...), ...},
                             comb =
                             Net {atoms =
                                  {("HOL.Not",
                                     Net
{atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Net {atoms = {...}, ...}, var = Leaf [...]}}),
                                    ("Int.nat",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {...}, comb = ..., var = ...}}),
                                    ("Map.dom",
Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {...}, ...}}),
                                    ("Nat.Suc",
Net {atoms = {...}, comb = ..., var = ...}),
                                    ("Set.Pow", Net {atoms = {}, ...}),
                                    ("List.rev", ...), ...},
                                  comb =
                                  Net {atoms =
 {("List.upt",
    Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}),
   ("List.zip", Net {atoms = {}, comb = ..., var = ...}),
   ("List.drop", Net {atoms = {}, ...}), ("List.take", ...), ...},
 comb =
 Net {atoms =
      {("Fun.fun_upd", Net {atoms = {}, ...}), ("Map.map_add", ...), ...},
      comb = Net {atoms = {...}, comb = ..., var = ...}, var = Leaf []},
 var = Leaf []},
                                  var = Leaf []},
                             var =
                             Net {atoms =
                                  {("HOL.True",
                                     Leaf
[{elhs = "... ... ...", extra = false, fo = true, lhs =
  Const ("...", ...) $ Var ((...), "bool") $ ..., name = "HOL.simp_thms_12",
  ...}]),
                                    ("HOL.False",
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "bool => bool => bool") $ ... $ ..., ...}]),
                                    ("Groups.one_class.one",
Leaf [{elhs = "...", extra = false, fo = true, ...}])},
                                  comb =
                                  Net {atoms =
 {("HOL.Not", Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}),
   ("Map.map_of", Net {atoms = {}, comb = ..., var = ...}),
   ("Groups.uminus_class.uminus", Net {atoms = {}, ...})},
 comb =
 Net {atoms =
      {("List.append", Net {atoms = {}, ...}), ("Map.map_add", ...), ...},
      comb = Leaf [], var = Leaf []},
 var = Leaf []},
                                  var =
                                  Leaf
                                   [{elhs = "?a1 ... ?b1", extra = false,
                                     fo = true, lhs =
                                     Const ("HOL.eq", "...") $
 Var (("...", 1), ...) $ Var ((...), "?'a1 word"),
                                     name = "local.uint_arith_simps_3",
                                     perm = false, thm = "... ... ..."},
                                    {elhs = "... ... ...", extra = false,
                                     fo = true, lhs =
                                     Const ("...", ...) $
 Var ((...), "?'a1") $ ...,
                                     name = "HOL.simp_thms_6", ...}]}}),
                       ("HOL.Let",
                         Net {atoms =
                              {("Groups.one_class.one",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf
 [{elhs = "...", extra = false, fo = true, lhs =
   Const ("...", "?'b1 => (?'b1 => ?'a) => ?'a") $ ... $ ..., ...}]}),
                                ("Groups.zero_class.zero",
                                  Net {atoms = {}, comb = Leaf [], var =
 Leaf [{elhs = "...", extra = false, fo = true, ...}]})},
                              comb =
                              Net {atoms =
                                   {("Nat.Suc",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {}, comb = ..., var = ...}}),
                                     ("Num.numeral_class.numeral",
 Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}),
                                     ("Groups.uminus_class.uminus",
 Net {atoms = {}, comb = ..., var = ...})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []}),
                       ("Int.sub",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf
                                    [{elhs = "...", extra = false, fo =
true, lhs = Const ("...", "num => num => int") $ ... $ ..., ...}]}}),
                       ("Num.pow",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms =
                                   {("Num.num.One",
Leaf [{elhs = ..., extra = false, ...}])},
                                   comb =
                                   Net {atoms =
  {("Num.num.Bit0", ...), ...}, comb = Leaf [...], var = Leaf [...]},
                                   var = Leaf []}}),
                       ("Set.Bex",
                         Net {atoms =
                              {("Orderings.bot_class.bot",
                                 Net {atoms = {}, comb = Leaf [...], var =
Leaf [...]}),
                                ("Orderings.top_class.top",
                                  Net {atoms = {}, comb = ..., var = ...})},
                              comb =
                              Net {atoms =
                                   {("Set.Collect", Net {atoms = {}, ...}),
                                     ("List.list.set", ...), ...},
                                   comb =
                                   Net {atoms = {...}, comb = ..., var =
  ...},
                                   var = Leaf []},
                              var =
                              Net {atoms = {}, comb =
                                   Net {atoms = {...}, comb = ..., var =
  ...},
                                   var =
                                   Leaf
                                    [{elhs = ..., extra = false, ...},
                                     ...]}}),
                       ("Fun.comp",
                         Net {atoms =
                              {("Fun.id",
                                 Net {atoms = {}, comb = ..., var = ...}),
                                ("Option.option.the",
                                  Net {atoms = {...}, ...}),
                                ("Product_Type.prod.fst", ...), ...},
                              comb =
                              Net {atoms = {("List.list.map", ...), ...},
                                   comb = Net {atoms = {...}, ...}, var =
                                   Leaf [...]},
                              var =
                              Net {atoms = {("Fun.id", ...)}, comb =
                                   Leaf [...], var = Leaf [...]}}),
                       ("GCD.bezw",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {...}, comb = ..., var = ...}}),
                       ("HOL.conj",
                         Net {atoms = {("HOL.True", ...), ...}, comb =
                              Net {atoms = {...}, ...}, var =
                              Net {atoms = {...}, ...}}),
                       ("HOL.disj",
                         Net {atoms = {...}, comb = ..., var = ...}),
                       ("List.nth", Net {atoms = {}, ...}),
                       ("List.upt", ...), ...},
                     comb =
                     Net {atoms =
                          {("HOL.If",
                             Net {atoms =
                                  {("HOL.True",
                                     Net
{atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}}),
                                    ("HOL.False",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {}, comb = ..., var = ...}})},
                                  comb =
                                  Net {atoms = {}, comb =
 Net {atoms = {("HOL.eq", Net {atoms = {}, ...})}, comb = Leaf [], var =
      Leaf []},
 var = Leaf []},
                                  var =
                                  Net {atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [], var =
      Leaf [{elhs = ..., extra = false, ...}]}}}),
                            ("Fun.comp",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}}}),
                            ("Fun.fcomp",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = ..., var = ...}}}),
                            ("List.foldl",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = Leaf [...], var =
  Net {atoms = {...}, ...}}}),
                            ("List.foldr",
                              Net {atoms = {}, comb = Leaf [], var =
                                   Net {atoms = {}, comb = ..., var =
  ...}}),
                            ("Nat.compow",
                              Net {atoms =
                                   {("Groups.zero_class.zero", ...)}, comb =
                                   Leaf [...], var = Leaf [...]}),
                            ("Fun.fun_upd",
                              Net {atoms = {}, comb = ..., var = ...}),
                            ("Map.map_add", Net {atoms = {}, ...}),
                            ("Fun.bij_betw", ...), ...},
                          comb =
                          Net {atoms =
                               {("Fun.fun_upd",
                                  Net {atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [], var =
      Net {atoms = {}, comb = ..., var = ...}}}),
                                 ("Fun.map_fun",
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}}),
                                 ("Map.map_upds",
                                   Net {atoms = {}, comb = Leaf [], var =
  Net {atoms = {}, comb = ..., var = ...}}),
                                 ("BNF_Def.rel_sum",
                                   Net {atoms = {}, comb = Leaf [...], var =
  Net {atoms = {}, ...}}),
                                 ("Fun.override_on",
                                   Net {atoms = {}, comb = ..., var = ...}),
                                 ("Num.num.rec_num", Net {atoms = {}, ...}),
                                 ("Num.num.case_num", ...), ...},
                               comb =
                               Net {atoms =
                                    {("Enum.finite_4.rec_finite_4",
 Net {atoms = {}, comb = Leaf [], var =
      Net {atoms = {}, comb = ..., var = ...}}),
("Enum.finite_4.case_finite_4",
  Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}})},
                                    comb =
                                    Net {atoms =
   {("Enum.finite_5.rec_finite_5", Net {atoms = {}, comb = ..., var = ...}),
     ("Enum.finite_5.case_finite_5", Net {atoms = {}, ...})},
   comb =
   Net {atoms = {}, comb = Net {atoms = {...}, ...}, var = Leaf [...]},
   var = Leaf []},
                                    var = Leaf []},
                               var = Leaf []},
                          var = Leaf []},
                     var = Leaf []},
                var = Leaf []},
           var =
           Leaf
            [{elhs = "%u. EX x y. u = (x, y) & ?P1 x y", extra = false, fo =
              false, lhs =
              Abs ("u", "?'a1 * ?'b1",
                Const ("HOL.Ex", "(?'a1 => bool) => bool") $
                  Abs ("x", "?'a1",
                    Const ("HOL.Ex", "...") $ Abs ("y", "...", ...))),
              name = "Product_Type.split_eta_SetCompr2", perm = false, thm =
              "%u. EX x y. u = (x, y) & ?P1 x y == %(x, y). ?P1 x y"},
             {elhs = "%u. EX x y. u = (x, y) & ?y (x, y)", extra = false,
              fo = true, lhs =
              Abs ("u", "?'a1 * ?'b1",
                Const ("HOL.Ex", "(?'a1 ... bool) => bool") $
                  Abs ("x", "?'a1",
                    Const ("HOL.Ex", "...") $ Abs ("y", ..., ...))),
              name = "Product_Type.split_eta_SetCompr", perm = false, thm =
              "%u. EX x y. u = (x, y) & ?y (x, y) == ?y"},
             {elhs = "%a. ?y ()", extra = false, fo = true, lhs =
              Abs ("", "unit",
                Var (("y", 0), "unit => ?'a1") $
                  Const ("Product_Type.Unity", "unit")),
              name = "Product_Type.unit_abs_eta_conv", perm = false, thm =
              "%a. ?y () == ?y"},
             {elhs = "%A f. Inf (f ` A)", extra = false, fo = true, lhs =
              Abs ("A", "?'a1 set",
                Abs ("f", "?'a1 => bool",
                  Const ("Complete_Lattices.Inf_class.Inf", "...") $
                    (Const ("...",
                            "(?'a1 => bool) => ?'a1 set => bool set") $
                      ... $ ...))),
              name = "Complete_Lattices.INF_bool_eq", perm = false, thm =
              "%A f. Inf (f ` A) == Ball"},
             {elhs = "%A f. Sup (f ` A)", extra = false, fo = true, lhs =
              Abs ("A", "?'a1 set",
                Abs ("f", "?'a1 ... bool",
                  Const ("...", ...) $ (... $ ... $ ...))),
              name = "Complete_Lattices.SUP_bool_eq", perm = false, thm =
              "%A f. Sup (f ... A) == Bex"}]}},
     {congs =
      ({((true, "HOL.If"),
          "?b == ?c ==> if ?b then ?x else ?y == if ?c then ?x else ?y"),
         ((true, "Set.Bex"),
           "[| ?A == ?B; !!x. x : ?B =simp=> ?P x == ?Q x |]
            ==> EX x:?A. ?P x == EX x:?B. ?Q x"),
         ((true, "Set.Ball"),
           "[| ?A == ?B; !!x. x : ?B =simp=> ?P x == ?Q x |]
            ==> ALL x:?A. ?P x == ALL x:?B. ?Q x"),
         ((true, "Set.image"),
           "[| ?M == ?N; !!x. x : ?N =simp=> ?f x == ?g x |]
            ==> ?f ` ?M == ?g ` ?N"),
         ((true, "HOL.implies"),
           "[| ?P == ?P'; ?P' ==> ?Q == ?Q' |]
            ==> ?P --> ?Q == ?P' --> ?Q'"),
         ((true, "HOL.NO_MATCH"),
           "NO_MATCH ?pat ?val == NO_MATCH ?pat ?val"),
         ((true, "HOL.ASSUMPTION"), "ASSUMPTION ?A == ASSUMPTION ?A"),
         ((true, "HOL.simp_implies"),
           "[| PROP ?P == PROP ?P'; PROP ?P' ==> PROP ?Q ... PROP ?Q' |]
            ==> (PROP ?P ... PROP ?Q) == (PROP ?P' ... PROP ?Q')"),
         ((true, "Nat.nat.case_nat"),
           "?M == ?M' ==>
            case ?M of ... ... ... | ... ... ... ==
            case ?M' of ... ... ... | ... ... ..."),
         ((true, "Num.num.case_num"),
           "?num ... ?num' ==>
            ... ... ... ... ... ... ... ... ...
            ... ... ... ... ... ... ... ..."),
         ((true, "List.successively"),
           "... ...... ... ... ==> ... ... ..."),
         ((true, "List.list.case_list"), "... ... ..."),
         ((true, "String.char.case_char"), "..."),
         ((true, "Sum_Type.sum.case_sum"), "..."),
         ((true, "Nitpick.word.case_word"), ...), ((true, "..."), ...),
         ...},
       [(true, "Power.power_class.power"),
        (true, "Phantom_Type.phantom.case_phantom"),
        (true, "Nitpick.word.case_word"),
        (true, "Nitpick.pair_box.case_pair_box"),
        (true, "Nitpick.fun_box.case_fun_box"),
        (true, "Record.tuple_isomorphism.case_tuple_isomorphism"),
        (true, "Extraction.sumbool.case_sumbool"),
        (true, "Quickcheck_Exhaustive.three_valued.case_three_valued"),
        (true, "Quickcheck_Exhaustive.unknown.case_unknown"),
        (true, "Quickcheck_Narrowing.cfun.case_cfun"),
        (true, "Quickcheck_Narrowing.ffun.case_ffun"),
        (true, "Quickcheck_Narrowing.property.case_property"),
        (true, "Quickcheck_Narrowing.narrowing_cons.case_narrowing_cons"),
        (true, "Quickcheck_Narrowing.narrowing_term.case_narrowing_term"),
        (true, "Quickcheck_Narrowing.narrowing_type.case_narrowing_type"),
        (true, "..."), ...]),
      loop_tacs =
      [("split asm HOL.If :: (HOL.bool, (_, (_, _)fun)fun)fun", fn),
       ("split asm Rings.zero_neq_one_class.of_bool :: (HOL.bool, _)fun",
        fn),
       ("split Rings.zero_neq_one_class.of_bool :: (HOL.bool, _)fun", fn),
       ("split HOL.If :: (HOL.bool, (_, (_, _)fun)fun)fun", fn)],
      mk_rews =
      {mk = fn, mk_cong = fn, mk_eq_True = fn, mk_sym = fn, reorient = fn},
      procs =
      Net {atoms = {}, comb =
           Net {atoms =
                {("HOL.Ex",
                   Net {atoms = {}, comb = Leaf [], var =
                        Leaf
                         [Proc
                           {lhs =
                            Const ("HOL.Ex", "(...) ... bool") $
                              Abs ("x", "?'a",
                                Var ((...), "?'a => bool") $ ...),
                            name = "HOL.defined_Ex", proc = fn, stamp =
                            Stamp 91198}]}),
                  ("HOL.All",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs =
                             Const ("HOL.All", "... ... ...") $
                               Abs ("x", "...", ... $ ...),
                             name = "HOL.defined_All", proc = fn, stamp =
                             Stamp 91244}]}),
                  ("HOL.Not",
                    Net {atoms = {}, comb =
                         Net {atoms = {}, comb =
                              Net {atoms =
                                   {("Orderings.ord_class.less",
Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []},
                         var = Leaf []}),
                  ("Nat.Suc",
                    Net {atoms = {}, comb =
                         Net {atoms = {}, comb =
                              Net {atoms =
                                   {("Groups.plus_class.plus",
Net {atoms = {}, comb = ..., var = ...})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []},
                         var = Leaf []}),
                  ("Pure.all",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs =
                             Const ("...", ...) $ Abs ("...", "?'a", ...),
                             name = "HOL.defined_all", proc = fn, stamp =
                             Stamp 91290}]}),
                  ("Set.Collect",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs =
                             Const ("...", "(?'a => bool) => ?'a set") $
                               ...,
                             name = "Product_Type.Collect_mem", proc = fn,
                             stamp = Stamp 616364},
                           Proc
                            {lhs = ... $ ..., name = "Set.defined_Collect",
                             proc = fn, stamp = Stamp 299868}]}),
                  ("List.list.set",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf
                          [Proc
                            {lhs = ... $ ..., name =
                             "List.list_to_set_comprehension", proc = fn,
                             stamp = Stamp 2625594}]}),
                  ("Product_Type.prod.case_prod",
                    Net {atoms = {}, comb = Leaf [], var =
                         Leaf [Proc {lhs = ..., name = "...", ...}]})},
                comb =
                Net {atoms =
                     {("HOL.eq",
                        Net {atoms =
                             {("Groups.one_class.one",
                                Net {atoms = {}, comb = Leaf [], var =
                                     Leaf
[Proc
  {lhs = Const ("...", "?'a => ?'a => bool") $ ... $ ..., name =
   "Groups.reorient_one", proc = fn, stamp = Stamp 171260}]}),
                               ("Groups.zero_class.zero",
                                 Net {atoms = {}, comb = Leaf [], var =
Leaf
 [Proc
   {lhs = ... $ ... $ ..., name = "Groups.reorient_zero", proc = fn, stamp =
    Stamp 171216}]})},
                             comb =
                             Net {atoms =
                                  {("Nat.Suc",
                                     Net
{atoms = {}, comb = Leaf [], var =
 Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}}),
                                    ("Num.numeral_class.numeral",
Net {atoms = {}, comb = Leaf [], var =
     Net {atoms = {}, comb = ..., var = ...}}),
                                    ("Groups.uminus_class.uminus",
Net {atoms = {}, comb = Net {atoms = {...}, ...}, var =
     Net {atoms = {}, ...}})},
                                  comb =
                                  Net {atoms =
 {("Groups.plus_class.plus",
    Net {atoms = {}, comb = Leaf [...], var = Net {atoms = {}, ...}}),
   ("Groups.minus_class.minus", Net {atoms = {}, comb = ..., var = ...}),
   ("Groups.times_class.times", Net {atoms = {}, ...})},
 comb = Leaf [], var = Leaf []},
                                  var = Leaf []},
                             var =
                             Net {atoms = {}, comb =
                                  Net {atoms =
 {("Nat.Suc", Net {atoms = {}, comb = Leaf [...], var = Leaf [...]}),
   ("Groups.uminus_class.uminus", Net {atoms = {}, comb = ..., var = ...})},
 comb =
 Net {atoms =
      {("Groups.plus_class.plus", Net {atoms = {}, ...}),
        ("Groups.minus_class.minus", ...), ...},
      comb = Leaf [], var = Leaf []},
 var = Leaf []},
                                  var =
                                  Leaf
                                   [Proc
                                     {lhs =
Const ("...", ...) $ Var ((...), "?'a") $ ..., name = "record_eq", proc =
fn, stamp = Stamp 4153886},
                                    Proc
                                     {lhs =
Const ("...", "?'a list => ?'a list => bool") $ ... $ ..., name =
"List.list_neq", proc = fn, stamp = Stamp 2645062},
                                    Proc
                                     {lhs = ... $ ... $ ..., name =
"List.list_eq", proc = fn, stamp = Stamp 2633172},
                                    Proc {lhs = ..., name = "...", ...},
                                    Proc {lhs = ..., ...}, ...]}}),
                       ("HOL.Let",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf
                                    [Proc
{lhs = Const ("...", "?'a => (?'a => ?'b) => ?'b") $ ... $ ..., name =
 "HOL.let_simp", proc = fn, stamp = Stamp 91526}]}}),
                       ("Set.Bex",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf
                                    [Proc
{lhs = ... $ ... $ ..., name = "Set.defined_Bex", proc = fn, stamp =
 Stamp 303020}]}}),
                       ("Pure.imp",
                         Net {atoms = {}, comb =
                              Net {atoms =
                                   {("HOL.Trueprop",
Net {atoms = {...}, comb = ..., var = ...})},
                                   comb = Leaf [], var = Leaf []},
                              var = Leaf []}),
                       ("Set.Ball",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [], var =
                                   Leaf [Proc {lhs = ..., ...}]}}),
                       ("HOL.NO_MATCH",
                         Net {atoms = {}, comb = Leaf [], var =
                              Net {atoms = {}, comb = Leaf [...], var =
                                   Leaf [...]}}),
                       ("Rings.dvd_class.dvd",
                         Net {atoms = {}, comb =
                              Net {atoms = {}, comb = ..., var = ...}, var =
                              Net {atoms = {}, comb = ..., var = ...}}),
                       ("Groups.plus_class.plus",
                         Net {atoms = {}, comb = Leaf [...], var =
                              Net {atoms = {}, ...}}),
                       ("Lattices.inf_class.inf",
                         Net {atoms = {}, comb = ..., var = ...}),
                       ("Lattices.sup_class.sup", Net {atoms = {}, ...}),
                       ("Groups.minus_class.minus", ...), ...},
                     comb =
                     Net {atoms =
                          {("Fun.fun_upd",
                             Net {atoms = {}, comb =
                                  Net {atoms = {}, comb =
 Net {atoms = {}, comb = Net {atoms = {...}, comb = ..., var = ...}, var =
      Leaf []},
 var = Leaf []},
                                  var = Leaf []})},
                          comb = Leaf [], var = Leaf []},
                     var = Leaf []},
                var = Leaf []},
           var =
           Leaf
            [Proc
              {lhs = Var (("x", 0), "?'a"), name = "record", proc = fn,
               stamp = Stamp 4153844},
             Proc
              {lhs = Var (("x", 0), "?'a"), name = "record_upd", proc = fn,
               stamp = Stamp 4153854},
             Proc
              {lhs = Var (("x", 0), "unit"), name = "Product_Type.unit_eq",
               proc = fn, stamp = Stamp 562196}]},
      solvers =
      ([Solver {id = Stamp 1038750, name = "Rtranclp", solver = fn},
        Solver {id = Stamp 1038748, name = "Tranclp", solver = fn},
        Solver {id = Stamp 1038746, name = "Rtrancl", solver = fn},
        Solver {id = Stamp 1038744, name = "Trancl", solver = fn},
        Solver {id = Stamp 781564, name = "lin_arith", solver = fn},
        Solver {id = Stamp 132670, name = "Transitivity", solver = fn},
        Solver {id = Stamp 102528, name = "ASSUMPTION", solver = fn},
        Solver {id = Stamp 90936, name = "HOL unsafe", solver = fn}],
       [Solver {id = Stamp 90938, name = "HOL safe", solver = fn}]),
      subgoal_tac = fn, term_ord = fn}):
   simpset
val uint_arith_tacs = fn: Proof.context -> tactic list
val uint_arith_tac = fn: Proof.context -> int -> tactic
locale word_rotate
signature SMT_WORD =
  sig
    val add_word_shift': term * string -> Context.generic -> Context.generic
  end
structure SMT_Word: SMT_WORD
### theory "HOL-Library.Word"
### 4.651s elapsed time, 6.688s cpu time, 2.078s GC time
Loading theory "Draft.WordDecl" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types")
Loading theory "Word_Lib.More_Divides" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Word_Lib.Bit_Shifts_Infix_Syntax" via "Word_Lib.More_Word")
instantiation
  word_length1 :: len0
  len_of_word_length1 == len_of :: word_length1 itself => nat
instantiation
  word_length1 :: len
instantiation
  word_length2 :: len0
  len_of_word_length2 == len_of :: word_length2 itself => nat
instantiation
  word_length2 :: len
instantiation
  word_length3 :: len0
  len_of_word_length3 == len_of :: word_length3 itself => nat
instantiation
  word_length3 :: len
instantiation
  word_length4 :: len0
  len_of_word_length4 == len_of :: word_length4 itself => nat
instantiation
  word_length4 :: len
instantiation
  word_length5 :: len0
  len_of_word_length5 == len_of :: word_length5 itself => nat
instantiation
  word_length5 :: len
instantiation
  word_length6 :: len0
  len_of_word_length6 == len_of :: word_length6 itself => nat
instantiation
  word_length6 :: len
instantiation
  word_length7 :: len0
  len_of_word_length7 == len_of :: word_length7 itself => nat
instantiation
  word_length7 :: len
instantiation
  word_length8 :: len0
  len_of_word_length8 == len_of :: word_length8 itself => nat
instantiation
  word_length8 :: len
instantiation
  word_length9 :: len0
  len_of_word_length9 == len_of :: word_length9 itself => nat
instantiation
  word_length9 :: len
instantiation
  word_length10 :: len0
  len_of_word_length10 == len_of :: word_length10 itself => nat
### theory "Word_Lib.More_Divides"
### 0.132s elapsed time, 0.317s cpu time, 0.000s GC time
Loading theory "Word_Lib.More_Word" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types" via "Word_Lib.Bit_Shifts_Infix_Syntax")
instantiation
  word_length10 :: len
instantiation
  word_length12 :: len0
  len_of_word_length12 == len_of :: word_length12 itself => nat
instantiation
  word_length12 :: len
instantiation
  word_length13 :: len0
  len_of_word_length13 == len_of :: word_length13 itself => nat
instantiation
  word_length13 :: len
instantiation
  word_length16 :: len0
  len_of_word_length16 == len_of :: word_length16 itself => nat
instantiation
  word_length16 :: len
instantiation
  word_length18 :: len0
  len_of_word_length18 == len_of :: word_length18 itself => nat
instantiation
  word_length18 :: len
instantiation
  word_length20 :: len0
  len_of_word_length20 == len_of :: word_length20 itself => nat
instantiation
  word_length20 :: len
instantiation
  word_length22 :: len0
  len_of_word_length22 == len_of :: word_length22 itself => nat
instantiation
  word_length22 :: len
instantiation
  word_length24 :: len0
  len_of_word_length24 == len_of :: word_length24 itself => nat
instantiation
  word_length24 :: len
instantiation
  word_length30 :: len0
  len_of_word_length30 == len_of :: word_length30 itself => nat
instantiation
  word_length30 :: len
instantiation
  word_length31 :: len0
  len_of_word_length31 == len_of :: word_length31 itself => nat
instantiation
  word_length31 :: len
instantiation
  word_length32 :: len0
  len_of_word_length32 == len_of :: word_length32 itself => nat
instantiation
  word_length32 :: len
instantiation
  word_length33 :: len0
  len_of_word_length33 == len_of :: word_length33 itself => nat
instantiation
  word_length33 :: len
instantiation
  word_length36 :: len0
  len_of_word_length36 == len_of :: word_length36 itself => nat
instantiation
  word_length36 :: len
instantiation
  word_length64 :: len0
  len_of_word_length64 == len_of :: word_length64 itself => nat
instantiation
  word_length64 :: len
### theory "Draft.WordDecl"
### 0.294s elapsed time, 0.689s cpu time, 0.089s GC time
### theory "Word_Lib.More_Word"
### 0.918s elapsed time, 1.153s cpu time, 0.134s GC time
Loading theory "Word_Lib.Bit_Shifts_Infix_Syntax" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_Types")
class semiring_bit_operations = semiring_bits +
  fixes "and" :: "'a => 'a => 'a"
    and or :: "'a => 'a => 'a"
    and xor :: "'a => 'a => 'a"
    and mask :: "nat => 'a"
    and set_bit :: "nat => 'a => 'a"
    and unset_bit :: "nat => 'a => 'a"
    and flip_bit :: "nat => 'a => 'a"
    and push_bit :: "nat => 'a => 'a"
    and drop_bit :: "nat => 'a => 'a"
    and take_bit :: "nat => 'a => 'a"
  assumes "bit_and_iff": "!!a b n. bit (and a b) n = (bit a n & bit b n)"
    and "bit_or_iff": "!!a b n. bit (or a b) n = (bit a n | bit b n)"
    and "bit_xor_iff": "!!a b n. bit (xor a b) n = (bit a n ~= bit b n)"
    and "mask_eq_exp_minus_1": "!!n. mask n = (2::'a) ^ n - (1::'a)"
    and "set_bit_eq_or": "!!n a. set_bit n a = or a (push_bit n (1::'a))"
    and
    "bit_unset_bit_iff":
      "!!m a n. bit (unset_bit m a) n = (bit a n & m ~= n)"
    and
    "flip_bit_eq_xor": "!!n a. flip_bit n a = xor a (push_bit n (1::'a))"
    and "push_bit_eq_mult": "!!n a. push_bit n a = a * (2::'a) ^ n"
    and "drop_bit_eq_div": "!!n a. drop_bit n a = a div (2::'a) ^ n"
    and "take_bit_eq_mod": "!!n a. take_bit n a = a mod (2::'a) ^ n"
class semiring_bit_operations = semiring_bits +
  fixes "and" :: "'a => 'a => 'a"
    and or :: "'a => 'a => 'a"
    and xor :: "'a => 'a => 'a"
    and mask :: "nat => 'a"
    and set_bit :: "nat => 'a => 'a"
    and unset_bit :: "nat => 'a => 'a"
    and flip_bit :: "nat => 'a => 'a"
    and push_bit :: "nat => 'a => 'a"
    and drop_bit :: "nat => 'a => 'a"
    and take_bit :: "nat => 'a => 'a"
  assumes "bit_and_iff": "!!a b n. bit (and a b) n = (bit a n & bit b n)"
    and "bit_or_iff": "!!a b n. bit (or a b) n = (bit a n | bit b n)"
    and "bit_xor_iff": "!!a b n. bit (xor a b) n = (bit a n ~= bit b n)"
    and "mask_eq_exp_minus_1": "!!n. mask n = (2::'a) ^ n - (1::'a)"
    and "set_bit_eq_or": "!!n a. set_bit n a = or a (push_bit n (1::'a))"
    and
    "bit_unset_bit_iff":
      "!!m a n. bit (unset_bit m a) n = (bit a n & m ~= n)"
    and
    "flip_bit_eq_xor": "!!n a. flip_bit n a = xor a (push_bit n (1::'a))"
    and "push_bit_eq_mult": "!!n a. push_bit n a = a * (2::'a) ^ n"
    and "drop_bit_eq_div": "!!n a. drop_bit n a = a div (2::'a) ^ n"
    and "take_bit_eq_mod": "!!n a. take_bit n a = a mod (2::'a) ^ n"
class ring_bit_operations = semiring_bit_operations + ring_parity +
  fixes not :: "'a => 'a"
  assumes
    "bit_not_iff_eq":
      "!!a n. bit (not a) n = ((2::'a) ^ n ~= (0::'a) & ~ bit a n)"
  assumes "minus_eq_not_minus_1": "!!a. - a = not (a - (1::'a))"
class ring_bit_operations = semiring_bit_operations + ring_parity +
  fixes not :: "'a => 'a"
  assumes
    "bit_not_iff_eq":
      "!!a n. bit (not a) n = ((2::'a) ^ n ~= (0::'a) & ~ bit a n)"
  assumes "minus_eq_not_minus_1": "!!a. - a = not (a - (1::'a))"
### theory "Word_Lib.Bit_Shifts_Infix_Syntax"
### 0.733s elapsed time, 0.800s cpu time, 0.089s GC time
Loading theory "Draft.RegistersOps" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_State" via "Draft.MMU")
Loading theory "Draft.Sparc_Types" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction")
### theory "Draft.RegistersOps"
### 0.203s elapsed time, 0.429s cpu time, 0.053s GC time
instantiation
  MMU_register :: enum
  enum_MMU_register == enum_class.enum :: MMU_register list
  enum_all_MMU_register == enum_class.enum_all ::
    (MMU_register => bool) => bool
  enum_ex_MMU_register == enum_class.enum_ex ::
    (MMU_register => bool) => bool
### theory "Draft.Sparc_Types"
### 15.096s elapsed time, 17.623s cpu time, 3.218s GC time
Loading theory "Draft.MMU" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction" via "Draft.Sparc_State")
### theory "Draft.MMU"
### 0.736s elapsed time, 0.844s cpu time, 0.079s GC time
Loading theory "Draft.Sparc_State" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution" via "Draft.Sparc_Instruction")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
consts
  delayed_pool_minus ::
    "(int * word32 * CPU_register) list
     => (int * word32 * CPU_register) list"
consts
  delayed_pool_rm_written ::
    "(int * word32 * CPU_register) list
     => (int * word32 * CPU_register) list"
Found termination order: "size_list (%p. size (snd (snd p))) <*mlex*> {}"
consts
  delayed_write_all ::
    "(int * word32 * CPU_register) list => 'a sparc_state => 'a sparc_state"
consts
  delayed_pool_rm_list ::
    "(int * word32 * CPU_register) list => 'a sparc_state => 'a sparc_state"
### theory "Draft.Sparc_State"
### 1.782s elapsed time, 1.978s cpu time, 0.257s GC time
Loading theory "Draft.Sparc_Instruction" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties" via "Draft.Sparc_Execution")
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_w5 :: "inst_operand => word5"
### No equation for constructor "W5"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_w30 :: "inst_operand => word30"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_w22 :: "inst_operand => word22"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_cond :: "inst_operand => word4"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_flag :: "inst_operand => word1"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_asi :: "inst_operand => word8"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Opf"
### No equation for constructor "Imm7"
consts
  get_operand_simm13 :: "inst_operand => word13"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Imm7"
consts
  get_operand_opf :: "inst_operand => word9"
### No equation for constructor "W5"
### No equation for constructor "W30"
### No equation for constructor "W22"
### No equation for constructor "Cond"
### No equation for constructor "Flag"
### No equation for constructor "Asi"
### No equation for constructor "Simm13"
### No equation for constructor "Opf"
consts
  get_operand_imm7 :: "inst_operand => word7"
### theory "Draft.Sparc_Instruction"
### 2.314s elapsed time, 2.481s cpu time, 0.230s GC time
Loading theory "Draft.Sparc_Execution" (required by "Draft.Sparc_PropertiesMoreTemplates" via "Draft.Sparc_Properties")
consts
  sum :: "nat => nat"
### Additional type variable(s) in specification of "seq_exec_rel": 'a
### Additional type variable(s) in specification of "seq_exec_dom": 'a
### theory "Draft.Sparc_Execution"
### 0.281s elapsed time, 0.281s cpu time, 0.000s GC time
Loading theory "Draft.Sparc_Properties" (required by "Draft.Sparc_PropertiesMoreTemplates")
### theory "Draft.Sparc_Properties"
### 1.561s elapsed time, 1.716s cpu time, 0.216s GC time
Loading theory "Draft.Sparc_PropertiesMoreTemplates"
val templateLemmas =
   [("Sparc_Properties.emp_trap_set_err_mode",
     "err_mode_val ?s = err_mode_val (emp_trap_set ?s)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.raise_trap_result", "snd (raise_trap ?t ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.set_annul_result", "snd (set_annul ?b ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.exe_trap_st_pc_result",
     "snd (exe_trap_st_pc () ?s) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.exe_trap_wr_pc_result",
     "snd (exe_trap_wr_pc () ?s) = False",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.execute_instr_sub1_result",
     "snd (execute_instr_sub1 ?i ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.write_cpu_result",
     "snd (write_cpu ?w ?r ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.div_write_new_val_result",
     "snd (div_write_new_val ?i ?result ?temp_V ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.load_sub1_result",
     "snd (load_sub1 ?i ?rd ?s_val ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.store_sub1_result",
     "snd (store_sub1 ?instr ?rd ?s_val ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.low_equal_com",
     "low_equal ?s1.0 ?s2.0 ==> low_equal ?s2.0 ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Sparc_Properties.write_cpu_tt_err_mode",
     "err_mode_val ?s = err_mode_val (snd (fst (write_cpu_tt ?w ?s)))",
     template_equation
      (template_app (template_hole 3, template_var 1),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Sparc_Properties.div_result",
     "snd (div_comp ?instr ?rs1.0 ?rd ?operand2.0 ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.user_accessible_mod_cache",
     "user_accessible (?s(| cache := ?new_cache |)) ?pa =
      user_accessible ?s ?pa",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Sparc_Properties.user_accessible_mod_cpu_reg",
     "user_accessible (?s(| cpu_reg := ?new_cpu_reg |)) ?pa =
      user_accessible ?s ?pa",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Sparc_Properties.user_accessible_mod_trap",
     "user_accessible (?s(| traps := ?new_traps |)) ?pa =
      user_accessible ?s ?pa",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Sparc_Properties.user_accessible_mod_user_reg",
     "user_accessible (?s(| user_reg := ?new_user_reg |)) ?pa =
      user_accessible ?s ?pa",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Sparc_Properties.load_sub2_result",
     "snd (load_sub2 ?address ?asi ?rd ?curr_win ?word0.0 ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.load_sub3_result",
     "snd (load_sub3 ?instr ?curr_win ?rd ?asi ?address ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.store_sub2_result",
     "snd (store_sub2 ?instr ?curr_win ?rd ?asi ?address ?s) = False",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Sparc_Properties.no_error",
     "good_context ?s ==> snd (execute_instruction () ?s) = False",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.user_reg_low_equal",
     "low_equal ?s1.0 ?s2.0 ==> user_reg ?s1.0 = user_reg ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.sys_reg_low_equal",
     "low_equal ?s1.0 ?s2.0 ==> sys_reg ?s1.0 = sys_reg ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.traps_low_equal",
     "low_equal ?s1.0 ?s2.0 ==> traps ?s1.0 = traps ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.exe_mode_low_equal",
     "low_equal ?s1.0 ?s2.0 ==> exe_mode_val ?s1.0 = exe_mode_val ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.mmu_low_equal",
     "low_equal ?s1.0 ?s2.0 ==> mmu ?s1.0 = mmu ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.state_var_low_equal",
     "low_equal ?s1.0 ?s2.0 ==> state_var ?s1.0 = state_var ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.ucast_0", "get_S ?w = 0 ==> get_S ?w = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 0), template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Sparc_Properties.take_bit_5_mod_NWINDOWS_eq",
     "take_bit 5 (?k mod NWINDOWS) = ?k mod NWINDOWS",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Sparc_Properties.mem_val_mod_cache",
     "mem_val_alt ?asi ?a ?s =
      mem_val_alt ?asi ?a (?s(| cache := ?new_cache |))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Sparc_Properties.load_word_mem_mod_cache",
     "load_word_mem ?s ?addr ?asi =
      load_word_mem (?s(| cache := ?new_cache |)) ?addr ?asi",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, t_empty), template_var 3)),
           template_var 2),
         template_var 1))),
    ("Sparc_Properties.mem_val_w32_mod_cache",
     "mem_val_w32 ?asi ?a ?s =
      mem_val_w32 ?asi ?a (?s(| cache := ?new_cache |))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Sparc_Properties.branch_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      branch_instr_sub1 ?instr_name ?s1.0 =
      branch_instr_sub1 ?instr_name ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Sparc_Properties.get_operand2_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      get_operand2 ?op_list ?s1.0 = get_operand2 ?op_list ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Sparc_Properties.cpu_reg_val_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      cpu_reg_val ?cr ?s1.0 = cpu_reg_val ?cr ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Sparc_Properties.select_trap_result1",
     "reset_trap_val ?s = True ==> snd (select_trap () ?s) = False",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.user_accessible_annul",
     "user_accessible
       (?s(| state_var := ?new_state_var, cpu_reg := ?new_cpu_reg |)) ?pa =
      user_accessible ?s ?pa",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, t_empty), template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Sparc_Properties.single_step",
     "good_context ?s ==>
      NEXT ?s = Some (snd (fst (execute_instruction () ?s)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("Sparc_Properties.call_instr_result",
     "fst ?i = call_type CALL ==> snd (call_instr ?i ?s) = False",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.jmpl_instr_result",
     "fst ?i = ctrl_type JMPL ==> snd (jmpl_instr ?i ?s) = False",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.flush_instr_result",
     "fst ?i = load_store_type FLUSH ==> snd (flush_instr ?i ?s) = False",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.nop_instr_result",
     "fst ?i = nop_type NOP ==> snd (nop_instr ?i ?s) = False",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.sethi_instr_result",
     "fst ?i = sethi_type SETHI ==> snd (sethi_instr ?i ?s) = False",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.cpu_reg_mod_mem",
     "fst (memory_read ?asi ?addr ?s) =
      fst (memory_read ?asi ?addr (?s(| cpu_reg := ?new_cpu_reg |)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Sparc_Properties.state_var_mod_mem",
     "fst (memory_read ?asi ?addr ?s) =
      fst (memory_read ?asi ?addr (?s(| state_var := ?new_state_var |)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Sparc_Properties.insert_trap_mem",
     "fst (memory_read ?asi ?addr ?s) =
      fst (memory_read ?asi ?addr (?s(| traps := ?new_traps |)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Sparc_Properties.user_reg_mod_mem",
     "fst (memory_read ?asi ?addr ?s) =
      fst (memory_read ?asi ?addr (?s(| user_reg := ?new_user_reg |)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Sparc_Properties.s_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      get_S (cpu_reg_val PSR ?s1.0) = get_S (cpu_reg_val PSR ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Sparc_Properties.user_reg_val_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      user_reg_val ?win ?ur ?s1.0 = user_reg_val ?win ?ur ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Sparc_Properties.exec_ss2",
     "snd (execute_instruction () ?s) = False ==>
      snd (execute_instruction () ?s) = False",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)),
          template_hole 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.SEQ_suc",
     "SEQ ?n ?s = Some ?t ==> SEQ (Suc ?n) ?s = NEXT ?t",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sparc_Properties.get_curr_win_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      fst (fst (get_curr_win () ?s1.0)) =
      fst (fst (get_curr_win () ?s2.0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Sparc_Properties.mem_equal_mod_cache",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_equal (?s1.0(| cache := ?new_cache1.0 |))
       (?s2.0(| cache := ?new_cache2.0 |)) ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_var 2)
           ))),
    ("Sparc_Properties.mem_equal_mod_cpu_reg",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_equal (?s1.0(| cpu_reg := ?new_cpu1.0 |))
       (?s2.0(| cpu_reg := ?cpu_reg2.0 |)) ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_var 2)
           ))),
    ("Sparc_Properties.mem_equal_mod_trap",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_equal (?s1.0(| traps := ?new_traps1.0 |))
       (?s2.0(| traps := ?traps2.0 |)) ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_var 2)
           ))),
    ("Sparc_Properties.mem_equal_mod_user_reg",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_equal (?s1.0(| user_reg := ?new_user_reg1.0 |))
       (?s2.0(| user_reg := ?user_reg2.0 |)) ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)),
             template_var 2)
           ))),
    ("Sparc_Properties.annul_mem",
     "fst (memory_read ?asi ?addr ?s) =
      fst (memory_read ?asi ?addr
            (?s(| state_var := ?new_state_var,
                  cpu_reg := ?new_cpu_reg |)))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_var 2)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, t_empty),
               template_var 2)))))),
    ("Sparc_Properties.select_trap_monad",
     "snd (select_trap () ?s) = False ==>
      err_mode_val ?s = err_mode_val (snd (fst (select_trap () ?s)))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 0)),
          template_hole 3)],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 0))))))),
    ("Sparc_Properties.next_match",
     "snd (execute_instruction () ?s) = False ==>
      NEXT ?s = Some (snd (fst (execute_instruction () ?s)))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)),
          template_hole 5)],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 0))))))),
    ("Sparc_Properties.fetch_instr_result_3",
     "EX e. fetch_instruction ?s' = Inl e ==>
      \<nexists>v. fetch_instruction ?s' = Inr v",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (template_predicate (template_app (template_hole 1, t_empty))))),
    ("Sparc_Properties.decode_instr_result_2",
     "EX e. decode_instruction ?v1.0 = Inl e ==>
      \<nexists>v2. decode_instruction ?v1.0 = Inr v2",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (template_predicate (template_app (template_hole 1, t_empty))))),
    ("Sparc_Properties.fetch_instr_result_2",
     "EX v. fetch_instruction ?s' = Inr v ==>
      \<nexists>e. fetch_instruction ?s' = Inl e",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_negation
        (template_predicate (template_app (template_hole 1, t_empty))))),
    ("Sparc_Properties.fetch_instr_result_1",
     "\<nexists>e. fetch_instruction ?s' = Inl e ==>
      EX v. fetch_instruction ?s' = Inr v",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Sparc_Properties.decode_instr_result_4",
     "\<nexists>e. decode_instruction ?v1.0 = Inl e ==>
      EX v2. decode_instruction ?v1.0 = Inr v2",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Sparc_Properties.decode_instr_result_1",
     "\<nexists>v2. decode_instruction ?v1.0 = Inr v2 ==>
      EX e. decode_instruction ?v1.0 = Inl e",
     template_implication
      ([template_negation
         (template_predicate (template_app (template_hole 5, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Sparc_Properties.get_curr_win3_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      traps (snd (fst (get_curr_win () ?s1.0))) =
      traps (snd (fst (get_curr_win () ?s2.0)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))))))),
    ("Sparc_Properties.st_data0_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      st_data0 ?instr ?curr_win ?rd ?addr ?s1.0 =
      st_data0 ?instr ?curr_win ?rd ?addr ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 5),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 4)))),
    ("Sparc_Properties.virt_to_phys_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      virt_to_phys ?addr (mmu ?s1.0) (mem ?s1.0) =
      virt_to_phys ?addr (mmu ?s2.0) (mem ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1))))),
    ("Sparc_Properties.save_restore_instr_result",
     "fst ?i : {ctrl_type SAVE, ctrl_type RESTORE} ==>
      snd (save_restore_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 5)),
                  template_hole 4)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.decode_instr_result_3",
     "?x = decode_instruction ?v1.0 &
      ?y = decode_instruction ?v2.0 & ?v1.0 = ?v2.0 ==>
      ?x = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app (template_hole 1, template_var 2))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_app (template_hole 1, template_var 0))),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 0)))
            )],
       template_equation (template_var 3, template_var 1))),
    ("Sparc_Properties.ucast_s", "get_S ?w = 0 ==> and ?w 128 = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2, template_hole 1))))))))),
         template_hole 0))),
    ("Sparc_Properties.emp_trap_set_privilege",
     "?s' = emp_trap_set ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app (template_hole 5, template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_hole 0))),
    ("Sparc_Properties.ucast_s2", "and ?w 128 = 0 ==> get_S ?w = 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 0),
            template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5, template_hole 4))))))))),
          template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Sparc_Properties.exec_ss1",
     "EX s'. execute_instruction () ?s = (s', False) ==>
      EX s''. execute_instruction () ?s = (s'', False)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Sparc_Properties.user_accessible_8",
     "mmu_readable (get_acc_flag (snd ?p)) 8 ==>
      mmu_readable (get_acc_flag (snd ?p)) 10",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 0))),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 2, template_hole 1)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0))),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_hole 1)))))
           ))),
    ("Sparc_Properties.select_trap_result2",
     "~ (reset_trap_val ?s = False & get_ET (cpu_reg_val PSR ?s) = 0) ==>
      snd (select_trap () ?s) = False",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 0)),
                      template_hole 8)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 5, template_hole 4),
                          template_var 0))),
                    template_hole 3))
                )
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_hole 8))),
    ("Sparc_Properties.execute_trap_result",
     "~ (reset_trap_val ?s = False & get_ET (cpu_reg_val PSR ?s) = 0) ==>
      snd (execute_trap () ?s) = False",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 0)),
                      template_hole 8)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 5, template_hole 4),
                          template_var 0))),
                    template_hole 3))
                )
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_hole 8))),
    ("Sparc_Properties.dispatch_instr_result",
     "supported_instruction (fst ?i) = True & fst ?i ~= ctrl_type RETT ==>
      snd (dispatch_instruction ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_var 1))),
                  template_hole 7)),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 8, template_var 1)),
                  template_app (template_hole 4, template_hole 3))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.store_barrier_pending_mod_privilege",
     "?s' = store_barrier_pending_mod ?b ?s &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.store_barrier_pending_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = store_barrier_pending_mod False ?s1.0 &
      ?t2.0 = store_barrier_pending_mod False ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 3))),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_app
                   (template_app (template_hole 1, template_hole 0),
                    template_var 2))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), template_var 0)
           ))),
    ("Sparc_Properties.non_exe_mode_equal",
     "exe_mode_val ?s = False & get_trap_set ?s = {} & Some ?t = NEXT ?s ==>
      ?t = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_hole 7)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 1)),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 0)),
                  template_app (template_hole 1, template_var 1))))
            )],
       template_equation (template_var 0, template_var 1))),
    ("Sparc_Properties.flush_cache_all_privilege",
     "[| get_S (cpu_reg_val PSR ?s) = 0; ?s' = flush_cache_all ?s |]
      ==> get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)),
          template_hole 2),
        template_equation
         (template_var 0, template_app (template_hole 0, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_hole 2))),
    ("Sparc_Properties.flush_data_cache_privilege",
     "[| get_S (cpu_reg_val PSR ?s) = 0; ?s' = flush_data_cache ?s |]
      ==> get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)),
          template_hole 2),
        template_equation
         (template_var 0, template_app (template_hole 0, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_hole 2))),
    ("Sparc_Properties.flush_instr_cache_privilege",
     "[| get_S (cpu_reg_val PSR ?s) = 0; ?s' = flush_instr_cache ?s |]
      ==> get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 1)),
          template_hole 2),
        template_equation
         (template_var 0, template_app (template_hole 0, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_hole 2))),
    ("Sparc_Properties.cpu_reg_mod_y_privilege",
     "?s' = cpu_reg_mod ?w Y ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_var 1),
                      template_hole 5),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.sys_reg_mod_privilege",
     "?s' = sys_reg_mod ?w ?r ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3)),
         template_hole 0))),
    ("Sparc_Properties.add_instr_result",
     "fst ?i : {arith_type ADD, arith_type ADDcc, arith_type ADDX} ==>
      snd (add_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7)),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 5)),
                    template_hole 4))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.sub_instr_result",
     "fst ?i : {arith_type SUB, arith_type SUBcc, arith_type SUBX} ==>
      snd (sub_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7)),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 5)),
                    template_hole 4))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.div_instr_result",
     "fst ?i : {arith_type UDIV, arith_type UDIVcc, arith_type SDIV} ==>
      snd (div_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7)),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 5)),
                    template_hole 4))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.mul_instr_result",
     "fst ?i : {arith_type UMUL, arith_type SMUL, arith_type SMULcc} ==>
      snd (mul_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7)),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 5)),
                    template_hole 4))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.shift_instr_result",
     "fst ?i : {shift_type SLL, shift_type SRL, shift_type SRA} ==>
      snd (shift_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7)),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 5)),
                    template_hole 4))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.good_context_2",
     "good_context ?s &
      fetch_instruction (delayed_pool_write ?s) = Inr ?v1.0 &
      (\<nexists>v2. decode_instruction ?v1.0 = Inr v2) ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_var 1))),
                    template_app (template_hole 6, template_var 0))),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, t_empty))))
            )],
       template_predicate (template_hole 0))),
    ("Sparc_Properties.memory_read_8_mod_cache",
     "fst (memory_read 8 ?addr ?s) =
      fst (memory_read 8 ?addr (?s(| cache := ?new_cache |)))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 2, template_hole 1))))),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 2, template_hole 1))))),
             template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Sparc_Properties.memory_read_10_mod_cache",
     "fst (memory_read 10 ?addr ?s) =
      fst (memory_read 10 ?addr (?s(| cache := ?new_cache |)))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 3, template_hole 1))))),
             template_var 2),
           template_var 1)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 3, template_hole 1))))),
             template_var 2),
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Sparc_Properties.get_s_get_curr_win",
     "low_equal ?s1.0 ?s2.0 ==>
      get_S (cpu_reg_val PSR (snd (fst (get_curr_win () ?s1.0)))) =
      get_S (cpu_reg_val PSR (snd (fst (get_curr_win () ?s2.0))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1))))),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0)))))))),
    ("Sparc_Properties.get_addr2_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      get_addr (snd ?instr) (snd (fst (get_curr_win () ?s1.0))) =
      get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1))))))),
    ("Sparc_Properties.load_word_mem_8_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      load_word_mem ?s1.0 ?address 8 = load_word_mem ?s2.0 ?address 8",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app (template_hole 1, template_hole 0))))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("Sparc_Properties.load_word_mem_10_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      load_word_mem ?s1.0 ?address 10 = load_word_mem ?s2.0 ?address 10",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 2, template_hole 0))))),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 2, template_hole 0)))))))),
    ("Sparc_Properties.mem_equal_annul",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_equal
       (?s1.0(| state_var := ?new_state_var, cpu_reg := ?new_cpu_reg |))
       (?s2.0
        (| state_var := ?new_state_var2.0, cpu_reg := ?new_cpu_reg2.0 |))
       ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 6),
                template_var 5),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_app
                    (template_app (template_hole 0, t_empty),
                     template_var 6))),
               template_app
                (template_app (template_hole 1, t_empty),
                 template_app
                  (template_app (template_hole 0, t_empty),
                   template_var 5))),
             template_var 4)
           ))),
    ("Sparc_Properties.raise_trap_privilege",
     "get_S (cpu_reg_val PSR ?s) = 0 &
      ?s' = snd (fst (raise_trap ?t ?s)) ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_var 2))),
                  template_hole 4)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 0),
                      template_var 2)))))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_hole 4))),
    ("Sparc_Properties.memory_read_privilege",
     "?s' = snd (memory_read ?asi ?addr ?s) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 2),
                        template_var 1),
                      template_var 0)))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3)),
         template_hole 0))),
    ("Sparc_Properties.set_annul_privilege",
     "?s' = snd (fst (set_annul ?b ?s)) & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.set_reset_trap_privilege",
     "?s' = snd (fst (set_reset_trap ?b ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.write_cpu_tt_privilege",
     "?s' = snd (fst (write_cpu_tt ?w ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.cpu_reg_mod_asr_privilege",
     "?s' = cpu_reg_mod ?w (ASR ?r) ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_var 2),
                      template_app (template_hole 5, template_var 1)),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3)),
         template_hole 0))),
    ("Sparc_Properties.mem_mod_privilege",
     "?s' = mem_mod ?a1.0 ?a2.0 ?v ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.get_curr_win_privilege",
     "?s' = snd (fst (get_curr_win () ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_hole 0))),
    ("Sparc_Properties.add_instr_privilege",
     "?s' = snd (fst (add_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.branch_instr_privilege",
     "?s' = snd (fst (branch_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.call_instr_privilege",
     "?s' = snd (fst (call_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.div_instr_privilege",
     "?s' = snd (fst (div_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.flush_instr_privilege",
     "?s' = snd (fst (flush_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.jmpl_instr_privilege",
     "?s' = snd (fst (jmpl_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.load_instr_privilege",
     "?s' = snd (fst (load_instr ?i ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.logical_instr_privilege",
     "?s' = snd (fst (logical_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.mul_instr_privilege",
     "?s' = snd (fst (mul_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.nop_instr_privilege",
     "?s' = snd (fst (nop_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.read_state_reg_instr_privilege",
     "?s' = snd (fst (read_state_reg_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.save_restore_instr_privilege",
     "?s' = snd (fst (save_restore_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.sethi_instr_privilege",
     "?s' = snd (fst (sethi_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.shift_instr_privilege",
     "?s' = snd (fst (shift_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.store_instr_privilege",
     "?s' = snd (fst (store_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.sub_instr_privilege",
     "?s' = snd (fst (sub_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.write_state_reg_instr_privilege",
     "?s' = snd (fst (write_state_reg_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.global_reg_mod_privilege",
     "?s' = global_reg_mod ?w1.0 ?n ?w2.0 ?s &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.in_reg_mod_privilege",
     "?s' = in_reg_mod ?a ?w ?r ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.out_reg_mod_privilege",
     "?s' = out_reg_mod ?a ?w ?r ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.user_reg_mod_privilege",
     "?s' = user_reg_mod ?d ?w ?r ?s & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.cpu_reg_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = cpu_reg_mod ?w ?cr ?s1.0 &
      ?t2.0 = cpu_reg_mod ?w ?cr ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app
                     (template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1),
                      template_var 5))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1),
                    template_var 4))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 0)
           ))),
    ("Sparc_Properties.dcache_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = dcache_mod ?c ?v ?s1.0 & ?t2.0 = dcache_mod ?c ?v ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_app
                     (template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1),
                      template_var 5))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1),
                    template_var 4))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3), template_var 0)
           ))),
    ("Sparc_Properties.state_var2_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = ?s1.0(| state_var := ?new_state_var |) &
      ?t2.0 = ?s2.0(| state_var := ?new_state_var |) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app
                     (template_app (template_hole 0, t_empty),
                      template_var 4))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 0, t_empty),
                    template_var 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.mod_trap_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = ?s1.0(| traps := ?new_traps |) &
      ?t2.0 = ?s2.0(| traps := ?new_traps |) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app
                     (template_app (template_hole 0, t_empty),
                      template_var 4))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 0, t_empty),
                    template_var 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.user_reg_state_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = ?s1.0(| user_reg := ?new_user_reg |) &
      ?t2.0 = ?s2.0(| user_reg := ?new_user_reg |) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app
                     (template_app (template_hole 0, t_empty),
                      template_var 4))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app (template_hole 0, t_empty),
                    template_var 3))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.mem_val_w32_8_mem_equal",
     "mem_equal ?s1.0 ?s2.0 ?a ==>
      mem_val_w32 8 ?a ?s1.0 = mem_val_w32 8 ?a ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 1, template_hole 0))))),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 1, template_hole 0))))),
             template_var 0),
           template_var 1)))),
    ("Sparc_Properties.mem_val_w32_10_mem_equal",
     "mem_equal ?s1.0 ?s2.0 ?a ==>
      mem_val_w32 10 ?a ?s1.0 = mem_val_w32 10 ?a ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_hole 0))))),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_hole 0))))),
             template_var 0),
           template_var 1)))),
    ("Sparc_Properties.write_cpu_pc_privilege",
     "?s' = snd (fst (write_cpu ?w PC ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 6, template_var 1),
                          template_hole 5),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.write_cpu_y_privilege",
     "?s' = snd (fst (write_cpu ?w Y ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 6, template_var 1),
                          template_hole 5),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.write_cpu_npc_privilege",
     "?s' = snd (fst (write_cpu ?w nPC ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app (template_hole 6, template_var 1),
                          template_hole 5),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.mem_mod_w32_privilege",
     "?s' = mem_mod_w32 ?a1.0 ?a2.0 ?b ?d ?s &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 4),
                          template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 5)),
         template_hole 0))),
    ("Sparc_Properties.logical_instr_sub1_privilege",
     "?s' = snd (fst (logical_instr_sub1 ?instr_name ?result ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app (template_hole 5, template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3)),
         template_hole 0))),
    ("Sparc_Properties.mul_instr_sub1_privilege",
     "?s' = snd (fst (mul_instr_sub1 ?instr_name ?result ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app (template_hole 5, template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 3)),
         template_hole 0))),
    ("Sparc_Properties.add_data_cache_privilege",
     "[| ?s' = add_data_cache ?s ?addr ?y ?m;
         get_S (cpu_reg_val PSR ?s) = 0 |]
      ==> get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 3)),
          template_hole 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.add_instr_cache_privilege",
     "[| ?s' = add_instr_cache ?s ?addr ?y ?m;
         get_S (cpu_reg_val PSR ?s) = 0 |]
      ==> get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 3)),
          template_hole 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.empty_delayed_pool_write_privilege",
     "get_delayed_pool ?s = [] &
      get_S (cpu_reg_val PSR ?s) = 0 & ?s' = delayed_pool_write ?s ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_hole 7)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 1))),
                    template_hole 2)),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app (template_hole 0, template_var 1))))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_hole 2))),
    ("Sparc_Properties.store_word_mem_privilege",
     "store_word_mem ?s ?addr ?data ?byte_mask ?asi = Some ?s' &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 6, template_var 5),
                            template_var 4),
                          template_var 3),
                        template_var 2),
                      template_var 1)),
                  template_app (template_hole 5, template_var 0))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 5))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.div_write_new_val_privilege",
     "?s' = snd (fst (div_write_new_val ?i ?result ?temp_V ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 5, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.load_sub1_privilege",
     "?s' = snd (fst (load_sub1 ?instr ?rd ?s_val ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 5, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.save_retore_sub1_privilege",
     "?s' = snd (fst (save_retore_sub1 ?result ?new_cwp ?rd ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 5, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.store_sub1_privilege",
     "?s' = snd (fst (store_sub1 ?instr ?rd ?s_val ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 5, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.write_reg_privilege",
     "?s' = snd (fst (write_reg ?w1.0 ?w2.0 ?w3.0 ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 5, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 4)),
         template_hole 0))),
    ("Sparc_Properties.read_state_reg_instr_result",
     "fst ?i
      : {sreg_type RDY, sreg_type RDPSR, sreg_type RDWIM,
         sreg_type RDTBR} ==>
      snd (read_state_reg_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_hole 8)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 7)),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_hole 6)),
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_hole 5)),
                      template_hole 4)))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.write_state_reg_instr_result",
     "fst ?i
      : {sreg_type WRY, sreg_type WRPSR, sreg_type WRWIM,
         sreg_type WRTBR} ==>
      snd (write_state_reg_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 1)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_hole 8)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_hole 7)),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_hole 6)),
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_hole 5)),
                      template_hole 4)))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.add_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (add_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (add_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.branch_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (branch_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (branch_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.call_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (call_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (call_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.div_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (div_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (div_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.flush_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (flush_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (flush_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.jmpl_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (jmpl_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (jmpl_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.logical_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (logical_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (logical_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.mul_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (mul_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (mul_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.nop_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (nop_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (nop_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.save_restore_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (save_restore_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (save_restore_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.sethi_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (sethi_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (sethi_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.shift_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (shift_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (shift_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.sub_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (sub_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (sub_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 0, template_var 1),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 1),
                        template_var 3))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.set_annul_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (set_annul True ?s1.0)) &
      ?t2.0 = snd (fst (set_annul True ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app
                         (template_app (template_hole 1, template_hole 0),
                          template_var 3))))),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app
                   (template_hole 3,
                    template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_hole 0),
                        template_var 2))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), template_var 0)
           ))),
    ("Sparc_Properties.add_data_cache_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = add_data_cache ?s1.0 ?address ?w ?bm &
      ?t2.0 = add_data_cache ?s2.0 ?address ?w ?bm ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 6),
                          template_var 3),
                        template_var 2),
                      template_var 1))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 5),
                        template_var 3),
                      template_var 2),
                    template_var 1))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.global_reg_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = global_reg_mod ?w ?n ?rd ?s1.0 &
      ?t2.0 = global_reg_mod ?w ?n ?rd ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.in_reg_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = in_reg_mod ?w ?curr_win ?rd ?s1.0 &
      ?t2.0 = in_reg_mod ?w ?curr_win ?rd ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.out_reg_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = out_reg_mod ?w ?curr_win ?rd ?s1.0 &
      ?t2.0 = out_reg_mod ?w ?curr_win ?rd ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.user_reg_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = user_reg_mod ?w ?curr_win ?rd ?s1.0 &
      ?t2.0 = user_reg_mod ?w ?curr_win ?rd ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 0, template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.read_dcache_mod_state",
     "read_data_cache ?s ?addr =
      read_data_cache
       (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
             dwrite := ?new_dwrite, state_var := ?new_state_var,
             traps := ?new_traps, undef := ?new_undef |))
       ?addr",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 7), template_var 6),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_app
                    (template_app (template_hole 1, t_empty),
                     template_app
                      (template_app (template_hole 0, t_empty),
                       template_var 7))))))),
         template_var 6))),
    ("Sparc_Properties.read_icache_mod_state",
     "read_instr_cache ?s ?addr =
      read_instr_cache
       (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
             dwrite := ?new_dwrite, state_var := ?new_state_var,
             traps := ?new_traps, undef := ?new_undef |))
       ?addr",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 7), template_var 6),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_app
                    (template_app (template_hole 1, t_empty),
                     template_app
                      (template_app (template_hole 0, t_empty),
                       template_var 7))))))),
         template_var 6))),
    ("Sparc_Properties.add_instr_sub1_privilege",
     "?s' =
      snd (fst (add_instr_sub1 ?instr_name ?result ?rs1_val ?operand2.0
                 ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 5)),
         template_hole 0))),
    ("Sparc_Properties.div_comp_privilege",
     "?s' = snd (fst (div_comp ?instr ?rs1.0 ?rd ?operand2.0 ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 5)),
         template_hole 0))),
    ("Sparc_Properties.sub_instr_sub1_privilege",
     "?s' =
      snd (fst (sub_instr_sub1 ?instr_name ?result ?rs1_val ?operand2.0
                 ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 5, template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 5)),
         template_hole 0))),
    ("Sparc_Properties.load_sub2_privilege",
     "?s' = snd (fst (load_sub2 ?addr ?asi ?r ?win ?w ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 6),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_var 5),
                                template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 6)),
         template_hole 0))),
    ("Sparc_Properties.load_sub3_privilege",
     "?s' = snd (fst (load_sub3 ?instr ?curr_win ?rd ?asi ?address ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 6),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_var 5),
                                template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 6)),
         template_hole 0))),
    ("Sparc_Properties.store_sub2_privilege",
     "?s' = snd (fst (store_sub2 ?instr ?curr_win ?rd ?asi ?address ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 6),
                  template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_var 5),
                                template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 6)),
         template_hole 0))),
    ("Sparc_Properties.logical_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (logical_instr_sub1 ?instr_name ?result ?s1.0)) &
      ?t2.0 = snd (fst (logical_instr_sub1 ?instr_name ?result ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1),
                          template_var 5))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app (template_hole 0, template_var 2),
                          template_var 1),
                        template_var 4))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3), template_var 0)
           ))),
    ("Sparc_Properties.mul_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (mul_instr_sub1 ?instr_name ?result ?s1.0)) &
      ?t2.0 = snd (fst (mul_instr_sub1 ?instr_name ?result ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1),
                          template_var 5))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app (template_hole 0, template_var 2),
                          template_var 1),
                        template_var 4))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3), template_var 0)
           ))),
    ("Sparc_Properties.write_cpu_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (write_cpu ?w ?cr ?s1.0)) &
      ?t2.0 = snd (fst (write_cpu ?w ?cr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app (template_hole 0, template_var 2),
                            template_var 1),
                          template_var 5))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app (template_hole 0, template_var 2),
                          template_var 1),
                        template_var 4))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3), template_var 0)
           ))),
    ("Sparc_Properties.get_curr_win2_low_equal",
     "[| low_equal ?s1.0 ?s2.0; ?t1.0 = snd (fst (get_curr_win () ?s1.0));
         ?t2.0 = snd (fst (get_curr_win () ?s2.0)) |]
      ==> low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 3)))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 2))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), template_var 0)
           ))),
    ("Sparc_Properties.mem_val_mod_state",
     "mem_val_alt ?asi ?a ?s =
      mem_val_alt ?asi ?a
       (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
             dwrite := ?new_dwrite, state_var := ?new_state_var,
             traps := ?new_traps, undef := ?new_undef |))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 8), template_var 7),
         template_var 6),
       template_app
        (template_app
          (template_app (template_hole 6, template_var 8), template_var 7),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_app
                    (template_app (template_hole 0, t_empty),
                     template_var 6))))))))),
    ("Sparc_Properties.load_word_mem_mod_state",
     "load_word_mem ?s ?addr ?asi =
      load_word_mem
       (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
             dwrite := ?new_dwrite, state_var := ?new_state_var,
             traps := ?new_traps, undef := ?new_undef |))
       ?addr ?asi",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 8), template_var 7),
         template_var 6),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app
                  (template_app (template_hole 3, t_empty),
                   template_app
                    (template_app (template_hole 2, t_empty),
                     template_app
                      (template_app (template_hole 1, t_empty),
                       template_app
                        (template_app (template_hole 0, t_empty),
                         template_var 8))))))),
           template_var 7),
         template_var 6))),
    ("Sparc_Properties.mem_val_w32_mod_state",
     "mem_val_w32 ?asi ?a ?s =
      mem_val_w32 ?asi ?a
       (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
             dwrite := ?new_dwrite, state_var := ?new_state_var,
             traps := ?new_traps, undef := ?new_undef |))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 8), template_var 7),
         template_var 6),
       template_app
        (template_app
          (template_app (template_hole 6, template_var 8), template_var 7),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_app
                    (template_app (template_hole 0, t_empty),
                     template_var 6))))))))),
    ("Sparc_Properties.write_cpu_PSR_CWP_privilege",
     "?s' =
      snd (fst (write_cpu (update_CWP ?cwp_val (cpu_reg_val PSR ?s)) PSR
                 ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 6,
                            template_app
                             (template_app
                               (template_hole 5, template_var 1),
                              template_app
                               (template_app
                                 (template_hole 4, template_hole 3),
                                template_var 0))),
                          template_hole 3),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 2)),
         template_hole 0))),
    ("Sparc_Properties.store_instr_result",
     "fst ?i
      : {load_store_type STB, load_store_type STH, load_store_type ST,
         load_store_type STA, load_store_type STD} ==>
      snd (store_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 1)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_hole 8)),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 10, template_hole 7)),
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app (template_hole 10, template_hole 6)),
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app (template_hole 10, template_hole 5)),
                        template_hole 4))))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.good_context_1",
     "good_context ?s &
      ?s' = ?s &
      get_trap_set ?s' ~= {} &
      reset_trap_val ?s' = False & get_ET (cpu_reg_val PSR ?s') = 0 ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 1)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 12, template_var 0),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_hole 11,
                      template_app
                       (template_app
                         (template_hole 10,
                          template_app (template_hole 9, template_var 0)),
                        template_hole 8))),
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app (template_hole 6, template_var 0)),
                        template_hole 5)),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 2, template_hole 1),
                            template_var 0))),
                      template_hole 0)))))
            )],
       template_predicate (template_hole 5))),
    ("Sparc_Properties.read_mem_pc_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      fst (memory_read 8 (cpu_reg_val PC ?s1.0) ?s1.0) =
      fst (memory_read 8 (cpu_reg_val PC ?s2.0) ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 3, template_hole 2))))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 1)),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 3, template_hole 2))))),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_var 0))))),
    ("Sparc_Properties.memory_write_asi_privilege",
     "?r = memory_write_asi ?asi ?addr ?byte_mask ?data ?s &
      ?r = Some ?s' & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app (template_hole 5, template_var 0))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 1))),
                  template_hole 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.memory_write_privilege",
     "?r = memory_write ?asi ?addr ?byte_mask ?data ?s &
      ?r = Some ?s' & get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_app (template_hole 5, template_var 0))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 1))),
                  template_hole 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.div_write_new_val_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (div_write_new_val ?i ?result ?temp_V ?s1.0)) &
      ?t2.0 = snd (fst (div_write_new_val ?i ?result ?temp_V ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 6))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 0, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 5))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.save_restore_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (save_retore_sub1 ?result ?new_cwp ?rd ?s1.0)) &
      ?t2.0 = snd (fst (save_retore_sub1 ?result ?new_cwp ?rd ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 6))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 0, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 5))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.write_reg_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (write_reg ?w ?curr_win ?rd ?s1.0)) &
      ?t2.0 = snd (fst (write_reg ?w ?curr_win ?rd ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 6))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 0, template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 5))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.mem_read_mod_state",
     "fst (memory_read ?asi ?addr ?s) =
      fst (memory_read ?asi ?addr
            (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                  dwrite := ?new_dwrite, state_var := ?new_state_var,
                  traps := ?new_traps, undef := ?new_undef |)))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 8),
             template_var 7),
           template_var 6)),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 8),
             template_var 7),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_app
                    (template_app (template_hole 1, t_empty),
                     template_app
                      (template_app (template_hole 0, t_empty),
                       template_var 6)))))))))),
    ("Sparc_Properties.dispath_instr_privilege",
     "snd (dispatch_instruction ?instr ?s) = False &
      ?s' = snd (fst (dispatch_instruction ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_var 1))),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 9, template_var 2),
                          template_var 1))))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 1))),
                  template_hole 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.execute_instr_sub1_privilege",
     "snd (execute_instr_sub1 ?i ?s) = False &
      ?s' = snd (fst (execute_instr_sub1 ?i ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 2),
                        template_var 1))),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 9, template_var 2),
                          template_var 1))))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 1))),
                  template_hole 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.rett_instr_privilege",
     "snd (rett_instr ?i ?s) = False &
      ?s' = snd (fst (rett_instr ?instr ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 3),
                        template_var 2))),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 7, template_var 1),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 9, template_var 0),
                          template_var 2))))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 2))),
                  template_hole 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_hole 0))),
    ("Sparc_Properties.write_cpu_PSR_icc_privilege",
     "?s' =
      snd (fst (write_cpu
                 (update_PSR_icc ?n_val ?z_val ?v_val ?c_val
                   (cpu_reg_val PSR ?s))
                 PSR ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 5),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 6,
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 5, template_var 4),
                                    template_var 3),
                                  template_var 2),
                                template_var 1),
                              template_app
                               (template_app
                                 (template_hole 4, template_hole 3),
                                template_var 0))),
                          template_hole 3),
                        template_var 0))))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 0))),
                template_hole 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 5)),
         template_hole 0))),
    ("Sparc_Properties.add_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (add_instr_sub1 ?instr_name ?result ?rs1_val ?operand2.0
                 ?s1.0)) &
      ?t2.0 =
      snd (fst (add_instr_sub1 ?instr_name ?result ?rs1_val ?operand2.0
                 ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 0, template_var 4),
                                template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 7))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 5), template_var 0)
           ))),
    ("Sparc_Properties.div_comp_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (div_comp ?instr ?rs1.0 ?rd ?operand2.0 ?s1.0)) &
      ?t2.0 = snd (fst (div_comp ?instr ?rs1.0 ?rd ?operand2.0 ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 0, template_var 4),
                                template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 7))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 5), template_var 0)
           ))),
    ("Sparc_Properties.sub_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (sub_instr_sub1 ?instr_name ?result ?rs1_val ?operand2.0
                 ?s1.0)) &
      ?t2.0 =
      snd (fst (sub_instr_sub1 ?instr_name ?result ?rs1_val ?operand2.0
                 ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 0, template_var 4),
                                template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 7))))),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 1,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 0, template_var 4),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 5), template_var 0)
           ))),
    ("Sparc_Properties.dispatch_fail",
     "snd (execute_instruction () ?s) = False &
      get_trap_set ?s = {} &
      exe_mode_val ?s &
      fetch_instruction (delayed_pool_write ?s) = Inr ?v &
      decode_instruction ?v = Inl ?e ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_hole 14,
                      template_app
                       (template_app (template_hole 13, template_hole 12),
                        template_var 2))),
                  template_hole 11)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_var 2)),
                    template_hole 8)),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 7, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 4, template_var 2))),
                        template_app (template_hole 3, template_var 1))),
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app (template_hole 1, template_var 1)),
                      template_app (template_hole 0, template_var 0))))))
            )],
       template_predicate (template_hole 11))),
    ("Sparc_Properties.memory_write_low_equal_none",
     "[| low_equal ?s1.0 ?s2.0;
         memory_write 10 ?addr ?bm ?data ?s1.0 = None |]
      ==> memory_write 10 ?addr ?bm ?data ?s2.0 = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 3, template_hole 1))))),
                  template_var 2),
                template_var 1),
              template_var 0),
            template_var 4),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 3, template_hole 1))))),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_hole 0))),
    ("Sparc_Properties.memory_write_low_equal_none2",
     "[| low_equal ?s1.0 ?s2.0;
         memory_write 10 ?addr ?bm ?data ?s2.0 = None |]
      ==> memory_write 10 ?addr ?bm ?data ?s1.0 = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 3, template_hole 1))))),
                  template_var 2),
                template_var 1),
              template_var 0),
            template_var 3),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 3, template_hole 1))))),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 4),
         template_hole 0))),
    ("Sparc_Properties.memory_write_asi_low_equal_none",
     "[| low_equal ?s1.0 ?s2.0;
         memory_write_asi 10 ?addr ?bm ?data ?s1.0 = None |]
      ==> memory_write_asi 10 ?addr ?bm ?data ?s2.0 = None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 3, template_hole 1))))),
                  template_var 2),
                template_var 1),
              template_var 0),
            template_var 4),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 3, template_hole 1))))),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 3),
         template_hole 0))),
    ("Sparc_Properties.mem_read_low_equal",
     "low_equal ?s1.0 ?s2.0 & ?asi : {8, 10} ==>
      fst (memory_read ?asi ?address ?s1.0) =
      fst (memory_read ?asi ?address ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_hole 7,
                      template_app
                       (template_hole 6,
                        template_app
                         (template_hole 6,
                          template_app
                           (template_hole 6, template_hole 5))))),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_hole 6,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 6, template_hole 5))))),
                    template_hole 3))))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2))))),
    ("Sparc_Properties.mem_read2_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (memory_read 10 ?address ?s1.0) &
      ?t2.0 = snd (memory_read 10 ?address ?s2.0) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 1),
                        template_var 4)))),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_hole 3,
                            template_app
                             (template_hole 2,
                              template_app
                               (template_hole 1,
                                template_app
                                 (template_hole 2, template_hole 0))))),
                        template_var 1),
                      template_var 3)))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.mem_mod_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = mem_mod 10 ?addr ?val ?s1.0 &
      ?t2.0 = mem_mod 10 ?addr ?val ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 2),
                        template_var 1),
                      template_var 5))),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_hole 3,
                            template_app
                             (template_hole 2,
                              template_app
                               (template_hole 1,
                                template_app
                                 (template_hole 2, template_hole 0))))),
                        template_var 2),
                      template_var 1),
                    template_var 4))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3), template_var 0)
           ))),
    ("Sparc_Properties.load_instr_result",
     "fst ?i
      : {load_store_type LDSB, load_store_type LDUB, load_store_type LDUBA,
         load_store_type LDUH, load_store_type LD, load_store_type LDA,
         load_store_type LDD} ==>
      snd (load_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 1)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_hole 11)),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 10)),
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app (template_hole 12, template_hole 9)),
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app (template_hole 12, template_hole 8)),
                      template_app
                       (template_app
                         (template_hole 13,
                          template_app (template_hole 12, template_hole 7)),
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_hole 12, template_hole 6)),
                          template_app
                           (template_app
                             (template_hole 13,
                              template_app
                               (template_hole 12, template_hole 5)),
                            template_hole 4))))))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.good_context_3",
     "good_context ?s &
      ?s'' = delayed_pool_write ?s &
      fetch_instruction ?s'' = Inr ?v1.0 &
      decode_instruction ?v1.0 = Inr ?v2.0 &
      annul_val ?s'' = False & supported_instruction (fst ?v2.0) = False ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 3)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_app (template_hole 11, template_var 3))),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 2)),
                      template_app (template_hole 8, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app (template_hole 6, template_var 1)),
                        template_app (template_hole 5, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app (template_hole 3, template_var 2)),
                          template_hole 2)),
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_hole 0, template_var 0))),
                        template_hole 2))))))
            )],
       template_predicate (template_hole 2))),
    ("Sparc_Properties.memory_write_low_equal2",
     "low_equal ?s1.0 ?s2.0 &
      Some ?t1.0 = memory_write 10 ?addr ?bm ?data ?s1.0 ==>
      EX t2. Some t2 = memory_write 10 ?addr ?bm ?data ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 3)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 3, template_hole 1))))),
                        template_var 2),
                      template_var 1),
                    template_var 0),
                  template_var 5)))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Sparc_Properties.mem_mod_w32_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = mem_mod_w32 10 ?a ?bm ?data ?s1.0 &
      ?t2.0 = mem_mod_w32 10 ?a ?bm ?data ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 1,
                                    template_app
                                     (template_hole 2, template_hole 0))))),
                            template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.get_curr_win_traps_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      low_equal
       (snd (fst (get_curr_win () ?s1.0))
        (| traps :=
             insert ?some_trap
              (traps (snd (fst (get_curr_win () ?s1.0)))) |))
       (snd (fst (get_curr_win () ?s2.0))
        (| traps :=
             insert ?some_trap
              (traps (snd (fst (get_curr_win () ?s2.0)))) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2))))),
             template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1)))))
           ))),
    ("Sparc_Properties.execute_instr_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ~ snd (execute_instr_sub1 ?instr ?s1.0) &
      ~ snd (execute_instr_sub1 ?instr ?s2.0) &
      ?t1.0 = snd (fst (execute_instr_sub1 ?instr ?s1.0)) &
      ?t2.0 = snd (fst (execute_instr_sub1 ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 4)))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_var 3)))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 2, template_var 1),
                        template_app
                         (template_hole 1,
                          template_app
                           (template_hole 0,
                            template_app
                             (template_app
                               (template_hole 3, template_var 2),
                              template_var 4))))),
                    template_app
                     (template_app (template_hole 2, template_var 0),
                      template_app
                       (template_hole 1,
                        template_app
                         (template_hole 0,
                          template_app
                           (template_app (template_hole 3, template_var 2),
                            template_var 3))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1), template_var 0)
           ))),
    ("Sparc_Properties.memory_write_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      Some ?t1.0 = memory_write 10 ?addr ?bm ?data ?s1.0 &
      Some ?t2.0 = memory_write 10 ?addr ?bm ?data ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 4)),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 1,
                                    template_app
                                     (template_hole 2, template_hole 0))))),
                            template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.memory_write_asi_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      Some ?t1.0 = memory_write_asi 10 ?addr ?bm ?data ?s1.0 &
      Some ?t2.0 = memory_write_asi 10 ?addr ?bm ?data ?s2.0 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 4)),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 4,
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 1,
                                    template_app
                                     (template_hole 2, template_hole 0))))),
                            template_var 3),
                          template_var 2),
                        template_var 1),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 3),
                        template_var 2),
                      template_var 1),
                    template_var 5))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.store_word_mem_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      Some ?t1.0 = store_word_mem ?s1.0 ?addr ?data ?bm 10 &
      Some ?t2.0 = store_word_mem ?s2.0 ?addr ?data ?bm 10 ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_var 4)),
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 4, template_var 6),
                            template_var 3),
                          template_var 2),
                        template_var 1),
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_hole 2, template_hole 0))))))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 0)),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 4, template_var 5),
                          template_var 3),
                        template_var 2),
                      template_var 1),
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app
                         (template_hole 1,
                          template_app
                           (template_hole 2, template_hole 0))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 4), template_var 0)
           ))),
    ("Sparc_Properties.s_0_word", "get_S (and ?w 4294967167) = 0",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 3,
 template_app
  (template_hole 3,
   template_app
    (template_hole 3,
     template_app
      (template_hole 3,
       template_app
        (template_hole 3,
         template_app
          (template_hole 3,
           template_app
            (template_hole 3,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_hole
1)))))))))))))))))))))))))))))))))),
       template_hole 0)),
    ("Sparc_Properties.read_state_reg_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      get_S (cpu_reg_val PSR ?s1.0) = 0 &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      ?t1.0 = snd (fst (read_state_reg_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (read_state_reg_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_hole 5),
                          template_var 4))),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 6, template_hole 5),
                            template_var 3))),
                      template_hole 4)),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_app
                               (template_hole 0, template_var 1),
                              template_var 4))))),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_app
                       (template_hole 2,
                        template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 1),
                            template_var 3))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.write_state_reg_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      get_S (cpu_reg_val PSR ?s1.0) = 0 &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      ?t1.0 = snd (fst (write_state_reg_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (write_state_reg_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_hole 5),
                          template_var 4))),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 6, template_hole 5),
                            template_var 3))),
                      template_hole 4)),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_app
                               (template_hole 0, template_var 1),
                              template_var 4))))),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_app
                       (template_hole 2,
                        template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 0, template_var 1),
                            template_var 3))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 2), template_var 0)
           ))),
    ("Sparc_Properties.safe_privilege",
     "get_delayed_pool ?s = [] &
      get_trap_set ?s = {} &
      snd (execute_instruction () ?s) = False &
      ?s' = snd (fst (execute_instruction () ?s)) &
      get_S (cpu_reg_val PSR ?s) = 0 ==>
      get_S (cpu_reg_val PSR ?s') = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_var 1)),
                  template_hole 16)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_var 1)),
                    template_hole 13)),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_hole 11,
                          template_app
                           (template_app
                             (template_hole 10, template_hole 9),
                            template_var 1))),
                      template_hole 8)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_app
                         (template_hole 6,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_app
                               (template_hole 10, template_hole 9),
                              template_var 1))))),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_hole 3,
                          template_app
                           (template_app (template_hole 2, template_hole 1),
                            template_var 1))),
                      template_hole 0)))))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.logical_instr_result",
     "fst ?i
      : {logic_type ANDs, logic_type ANDcc, logic_type ANDN,
         logic_type ANDNcc, logic_type ORs, logic_type ORcc, logic_type ORN,
         logic_type XORs, logic_type XNOR} ==>
      snd (logical_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 1)),
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, template_hole 13)),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 12)),
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_hole 11)),
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app (template_hole 14, template_hole 10)),
                      template_app
                       (template_app
                         (template_hole 15,
                          template_app (template_hole 14, template_hole 9)),
                        template_app
                         (template_app
                           (template_hole 15,
                            template_app
                             (template_hole 14, template_hole 8)),
                          template_app
                           (template_app
                             (template_hole 15,
                              template_app
                               (template_hole 14, template_hole 7)),
                            template_app
                             (template_app
                               (template_hole 15,
                                template_app
                                 (template_hole 14, template_hole 6)),
                              template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14, template_hole 5)),
                                template_hole 4))))))))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.store_word_mem_low_equal_none",
     "[| low_equal ?s1.0 ?s2.0;
         store_word_mem (add_data_cache ?s1.0 ?addr ?data ?bm) ?addr ?data
          ?bm 10 =
         None |]
      ==> store_word_mem (add_data_cache ?s2.0 ?addr ?data ?bm) ?addr ?data
           ?bm 10 =
          None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 4),
                          template_var 2),
                        template_var 1),
                      template_var 0)),
                  template_var 2),
                template_var 1),
              template_var 0),
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app (template_hole 3, template_hole 1))))),
          template_hole 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_hole 1))))),
         template_hole 0))),
    ("Sparc_Properties.ld_asi_user",
     "fst ?instr = load_store_type LDSB |
      fst ?instr = load_store_type LDUB |
      fst ?instr = load_store_type LDUH |
      fst ?instr = load_store_type LD | fst ?instr = load_store_type LDD ==>
      ld_asi ?instr 0 = 10",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 0)),
                  template_app (template_hole 12, template_hole 11))),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app (template_hole 13, template_var 0)),
                    template_app (template_hole 12, template_hole 10))),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app (template_hole 13, template_var 0)),
                      template_app (template_hole 12, template_hole 9))),
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app (template_hole 13, template_var 0)),
                        template_app (template_hole 12, template_hole 8))),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app (template_hole 13, template_var 0)),
                      template_app (template_hole 12, template_hole 7))))))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0), template_hole 4),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 2, template_hole 0))))))),
    ("Sparc_Properties.load_sub2_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (load_sub2 ?address 10 ?rd ?curr_win ?w ?s1.0)) &
      ?t2.0 = snd (fst (load_sub2 ?address 10 ?rd ?curr_win ?w ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 2,
template_app
 (template_hole 1, template_app (template_hole 2, template_hole 0))))),
                                template_var 3),
                              template_var 2),
                            template_var 1),
                          template_var 7))))),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_hole 3,
                                  template_app
                                   (template_hole 2,
                                    template_app
                                     (template_hole 1,
template_app (template_hole 2, template_hole 0))))),
                              template_var 3),
                            template_var 2),
                          template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 5), template_var 0)
           ))),
    ("Sparc_Properties.load_sub3_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (load_sub3 ?instr ?curr_win ?rd 10 ?address ?s1.0)) &
      ?t2.0 =
      snd (fst (load_sub3 ?instr ?curr_win ?rd 10 ?address ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_var 3),
                                template_var 2),
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 1,
                                    template_app
                                     (template_hole 2, template_hole 0))))),
                            template_var 1),
                          template_var 7))))),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_var 3),
                              template_var 2),
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 5), template_var 0)
           ))),
    ("Sparc_Properties.store_sub2_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = snd (fst (store_sub2 ?instr ?curr_win ?rd 10 ?addr ?s1.0)) &
      ?t2.0 = snd (fst (store_sub2 ?instr ?curr_win ?rd 10 ?addr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_var 3),
                                template_var 2),
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 1,
                                    template_app
                                     (template_hole 2, template_hole 0))))),
                            template_var 1),
                          template_var 7))))),
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_var 3),
                              template_var 2),
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 2, template_hole 0))))),
                          template_var 1),
                        template_var 6))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 5), template_var 0)
           ))),
    ("Sparc_Properties.mem_read_delayed_write_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      get_delayed_pool ?s1.0 = [] & get_delayed_pool ?s2.0 = [] ==>
      fst (memory_read 8 (cpu_reg_val PC (delayed_pool_write ?s1.0))
            (delayed_pool_write ?s1.0)) =
      fst (memory_read 8 (cpu_reg_val PC (delayed_pool_write ?s2.0))
            (delayed_pool_write ?s2.0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 10, template_var 1)),
                    template_hole 9)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 0)),
                  template_hole 9)))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 4, template_hole 3))))),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 4, template_hole 3))))),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 0, template_var 0)))))),
    ("Sparc_Properties.get_WIM_bit_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      get_WIM_bit
       (nat ((uint (fst (fst (get_curr_win () ?s1.0))) - 1) mod NWINDOWS))
       (cpu_reg_val WIM (snd (fst (get_curr_win () ?s1.0)))) =
      get_WIM_bit
       (nat ((uint (fst (fst (get_curr_win () ?s2.0))) - 1) mod NWINDOWS))
       (cpu_reg_val WIM (snd (fst (get_curr_win () ?s2.0))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_var 1))))),
                     template_hole 4)),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 1))))),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_var 0))))),
                     template_hole 4)),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 0)))))))),
    ("Sparc_Properties.get_WIM_bit_low_equal2",
     "low_equal ?s1.0 ?s2.0 ==>
      get_WIM_bit
       (nat ((uint (fst (fst (get_curr_win () ?s1.0))) + 1) mod NWINDOWS))
       (cpu_reg_val WIM (snd (fst (get_curr_win () ?s1.0)))) =
      get_WIM_bit
       (nat ((uint (fst (fst (get_curr_win () ?s2.0))) + 1) mod NWINDOWS))
       (cpu_reg_val WIM (snd (fst (get_curr_win () ?s2.0))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_var 1))))),
                     template_hole 4)),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 1))))),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_var 0))))),
                     template_hole 4)),
                 template_hole 3))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 0)))))))),
    ("Sparc_Properties.or_and_s",
     "and ?w1.0 128 = 0 & and ?w2.0 128 = 0 ==>
      and (or ?w1.0 ?w2.0) 128 = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 3,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 3,
                                  template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 3,
template_hole 2)))))))))),
                  template_hole 1)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 0),
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 3,
                          template_app
                           (template_hole 3,
                            template_app
                             (template_hole 3,
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 3,
                                  template_app
                                   (template_hole 3,
                                    template_hole 2)))))))))),
                template_hole 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3, template_hole 2))))))))),
         template_hole 1))),
    ("Sparc_Properties.is_accessible",
     "[| low_equal ?s1.0 ?s2.0;
         virt_to_phys ?addra (mmu ?s1.0) (mem ?s1.0) = Some (?a, ?b);
         virt_to_phys ?addra (mmu ?s2.0) (mem ?s2.0) = Some (?a, ?b);
         mmu_readable (get_acc_flag ?b) 10 |]
      ==> mem_equal ?s1.0 ?s2.0 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 4)),
            template_app (template_hole 9, template_var 4)),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 3)),
            template_app (template_hole 9, template_var 3)),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 3, template_hole 1)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1)
           ))),
    ("Sparc_Properties.ptd_lookup_unchanged_1",
     "ptd_lookup ?va ?ptp (mem ?s1.0) 1 =
      ptd_lookup ?va ?ptp
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None)))
       1",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app (template_hole 9, template_var 2)),
         template_hole 8),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 5, template_hole 3))))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 9, template_var 2),
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 5, template_hole 3)))))),
                       template_var 1),
                     template_app (template_hole 1, template_var 0)))),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 5, template_hole 3))))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 5, template_hole 3)))))),
                 template_var 1),
               template_hole 0))),
         template_hole 8))),
    ("Sparc_Properties.virt_to_phys_unchanged2",
     "virt_to_phys ?va (mmu ?s2.0) (mem ?s2.0) =
      virt_to_phys ?va (mmu ?s2.0)
       ((mem ?s2.0)
        (10 := mem ?s2.0 10(?addr |-> ?val),
         11 := (mem ?s2.0 11)(?addr := None)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 3),
           template_app (template_hole 9, template_var 2)),
         template_app (template_hole 8, template_var 2)),
       template_app
        (template_app
          (template_app (template_hole 10, template_var 3),
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_var 2)),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 5, template_hole 3))))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 8, template_var 2),
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 5, template_hole 3)))))),
                     template_var 1),
                   template_app (template_hole 1, template_var 0)))),
             template_app
              (template_hole 6,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 5, template_hole 3))))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 5, template_hole 3)))))),
               template_var 1),
             template_hole 0))))),
    ("Sparc_Properties.mem_val_alt_mod2",
     "mem_val_alt 10 ?addr
       (?s(| mem := (mem ?s)
               (10 := mem ?s 10(?addr |-> ?val),
                11 := (mem ?s 11)(?addr := None)) |)) =
      Some ?val",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 8, template_hole 6))))),
           template_var 2),
         template_app
          (template_app (template_hole 5, t_empty), template_var 1)),
       template_app (template_hole 1, template_var 0))),
    ("Sparc_Properties.non_interference_induct_case_sub1",
     "EX t1.
         Some t1 = SEQ ?n ?s1.0 &
         (EX t2. Some t2 = SEQ ?n ?s2.0 & NIA t1 t2) ==>
      EX t1.
         Some t1 = SEQ ?n ?s1.0 &
         (EX t2. Some t2 = SEQ ?n ?s2.0 & NIA t1 t2 & NIC t1 t2)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Sparc_Properties.update_PSR_CWP_1",
     "?w' = and ?w 4294967264 & get_S ?w = 0 ==> get_S ?w' = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app
     (template_hole 4,
      template_app
       (template_hole 4,
        template_app
         (template_hole 4,
          template_app
           (template_hole 4,
            template_app
             (template_hole 4,
              template_app
               (template_hole 4,
                template_app
                 (template_hole 4,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app
     (template_hole 4,
      template_app
       (template_hole 4, template_hole 3))))))))))))))))))))))))))))))))))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 0)),
                template_hole 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Sparc_Properties.update_PSR_icc_1",
     "?w' = and ?w 4279238655 & get_S ?w = 0 ==> get_S ?w' = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 5,
                                    template_app
                                     (template_hole 5,
template_app
 (template_hole 5,
  template_app
   (template_hole 5,
    template_app
     (template_hole 5,
      template_app
       (template_hole 5,
        template_app
         (template_hole 5,
          template_app
           (template_hole 5,
            template_app
             (template_hole 5,
              template_app
               (template_hole 5,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 5,
                                    template_app
                                     (template_hole 5,
template_app
 (template_hole 5,
  template_app
   (template_hole 5,
    template_app
     (template_hole 5,
      template_app
       (template_hole 5, template_hole 3))))))))))))))))))))))))))))))))))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app (template_hole 1, template_var 0)),
                template_hole 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("Sparc_Properties.ptd_lookup_unchanged_2",
     "ptd_lookup ?va ?ptp (mem ?s1.0) 2 =
      ptd_lookup ?va ?ptp
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None)))
       2",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 7, template_hole 6))))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 9, template_var 2),
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 7, template_hole 6)))))),
                       template_var 1),
                     template_app (template_hole 1, template_var 0)))),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 7, template_hole 6))))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 7, template_hole 6)))))),
                 template_var 1),
               template_hole 0))),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))))),
    ("Sparc_Properties.ptd_lookup_unchanged_3",
     "ptd_lookup ?va ?ptp (mem ?s1.0) 3 =
      ptd_lookup ?va ?ptp
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None)))
       3",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 3, template_hole 6))))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 9, template_var 2),
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 3, template_hole 6)))))),
                       template_var 1),
                     template_app (template_hole 1, template_var 0)))),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 3, template_hole 6))))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 3, template_hole 6)))))),
                 template_var 1),
               template_hole 0))),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))))),
    ("Sparc_Properties.rett_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ~ snd (rett_instr ?instr ?s1.0) &
      ~ snd (rett_instr ?instr ?s2.0) &
      get_S (cpu_reg_val PSR ?s1.0) = 0 &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      ?t1.0 = snd (fst (rett_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (rett_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, template_var 2),
                        template_var 4)))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 8, template_var 2),
                          template_var 3)))),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_hole 6,
                            template_app
                             (template_app
                               (template_hole 5, template_hole 4),
                              template_var 4))),
                        template_hole 3)),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6,
                              template_app
                               (template_app
                                 (template_hole 5, template_hole 4),
                                template_var 3))),
                          template_hole 3)),
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app (template_hole 2, template_var 1),
                            template_app
                             (template_hole 1,
                              template_app
                               (template_hole 0,
                                template_app
                                 (template_app
                                   (template_hole 8, template_var 2),
                                  template_var 4))))),
                        template_app
                         (template_app (template_hole 2, template_var 0),
                          template_app
                           (template_hole 1,
                            template_app
                             (template_hole 0,
                              template_app
                               (template_app
                                 (template_hole 8, template_var 2),
                                template_var 3))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 1),
             template_var 0)
           ))),
    ("Sparc_Properties.dispath_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      get_S (cpu_reg_val PSR ?s1.0) = 0 &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      ~ snd (dispatch_instruction ?instr ?s1.0) &
      ~ snd (dispatch_instruction ?instr ?s2.0) &
      ?t1.0 = snd (fst (dispatch_instruction ?instr ?s1.0)) &
      ?t2.0 = snd (fst (dispatch_instruction ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 4))),
                    template_hole 6)),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_app (template_hole 8, template_hole 7),
                            template_var 3))),
                      template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 3, template_var 2),
                            template_var 4)))),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_app
                               (template_hole 3, template_var 2),
                              template_var 3)))),
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app (template_hole 2, template_var 1),
                            template_app
                             (template_hole 1,
                              template_app
                               (template_hole 0,
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 2),
                                  template_var 4))))),
                        template_app
                         (template_app (template_hole 2, template_var 0),
                          template_app
                           (template_hole 1,
                            template_app
                             (template_hole 0,
                              template_app
                               (template_app
                                 (template_hole 3, template_var 2),
                                template_var 3))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 1),
             template_var 0)
           ))),
    ("Sparc_Properties.branch_instr_result",
     "fst ?i
      : {bicc_type BE, bicc_type BNE, bicc_type BGU, bicc_type BLE,
         bicc_type BL, bicc_type BGE, bicc_type BNEG, bicc_type BG,
         bicc_type BCS, bicc_type BLEU, bicc_type BCC, bicc_type BA,
         bicc_type BN} ==>
      snd (branch_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 1)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app (template_hole 18, template_hole 17)),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app (template_hole 18, template_hole 16)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app (template_hole 18, template_hole 15)),
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app (template_hole 18, template_hole 14)),
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app
                           (template_hole 18, template_hole 13)),
                        template_app
                         (template_app
                           (template_hole 19,
                            template_app
                             (template_hole 18, template_hole 12)),
                          template_app
                           (template_app
                             (template_hole 19,
                              template_app
                               (template_hole 18, template_hole 11)),
                            template_app
                             (template_app
                               (template_hole 19,
                                template_app
                                 (template_hole 18, template_hole 10)),
                              template_app
                               (template_app
                                 (template_hole 19,
                                  template_app
                                   (template_hole 18, template_hole 9)),
                                template_app
                                 (template_app
                                   (template_hole 19,
                                    template_app
                                     (template_hole 18, template_hole 8)),
                                  template_app
                                   (template_app
                                     (template_hole 19,
template_app (template_hole 18, template_hole 7)),
                                    template_app
                                     (template_app
 (template_hole 19, template_app (template_hole 18, template_hole 6)),
template_app
 (template_app
   (template_hole 19, template_app (template_hole 18, template_hole 5)),
  template_hole 4))))))))))))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.mem_context_val_9_unchanged",
     "mem_context_val 9 ?addr1.0 (mem ?s1.0) =
      mem_context_val 9 ?addr1.0
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 6, template_hole 5))))),
           template_var 3),
         template_app (template_hole 4, template_var 2)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 6, template_hole 5))))),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_var 2)),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_hole 5))))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6, template_hole 5)))))),
                     template_var 1),
                   template_app (template_hole 1, template_var 0)))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_hole 5)))))),
               template_var 1),
             template_hole 0))))),
    ("Sparc_Properties.mem_context_val_w32_9_unchanged",
     "mem_context_val_w32 9 ?addr1.0 (mem ?s1.0) =
      mem_context_val_w32 9 ?addr1.0
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 6, template_hole 5))))),
           template_var 3),
         template_app (template_hole 4, template_var 2)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 6, template_hole 5))))),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_var 2)),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_hole 5))))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6, template_hole 5)))))),
                     template_var 1),
                   template_app (template_hole 1, template_var 0)))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_hole 5)))))),
               template_var 1),
             template_hole 0))))),
    ("Sparc_Properties.ptd_lookup_unchanged_4",
     "ptd_lookup ?va ?ptp (mem ?s1.0) 4 =
      ptd_lookup ?va ?ptp
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None)))
       4",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 7, template_hole 6)))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 10, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 9, template_var 2)),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 7, template_hole 6))))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 9, template_var 2),
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 7, template_hole 6)))))),
                       template_var 1),
                     template_app (template_hole 1, template_var 0)))),
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 7, template_hole 6))))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 7, template_hole 6)))))),
                 template_var 1),
               template_hole 0))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app (template_hole 7, template_hole 6)))))),
    ("Sparc_Properties.mod_state_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = ?s1.0
      (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
         dwrite := ?new_dwrite, state_var := ?new_state_var,
         traps := ?new_traps, undef := ?new_undef |) &
      ?t2.0 = ?s2.0
      (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
         dwrite := ?new_dwrite, state_var := ?new_state_var,
         traps := ?new_traps, undef := ?new_undef |) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_app
                     (template_app (template_hole 5, t_empty),
                      template_app
                       (template_app (template_hole 4, t_empty),
                        template_app
                         (template_app (template_hole 3, t_empty),
                          template_app
                           (template_app (template_hole 2, t_empty),
                            template_app
                             (template_app (template_hole 1, t_empty),
                              template_app
                               (template_app (template_hole 0, t_empty),
                                template_var 9)))))))),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 5, t_empty),
                    template_app
                     (template_app (template_hole 4, t_empty),
                      template_app
                       (template_app (template_hole 3, t_empty),
                        template_app
                         (template_app (template_hole 2, t_empty),
                          template_app
                           (template_app (template_hole 1, t_empty),
                            template_app
                             (template_app (template_hole 0, t_empty),
                              template_var 8)))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 7), template_var 0)
           ))),
    ("Sparc_Properties.store_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      (fst ?instr = load_store_type STB |
       fst ?instr = load_store_type STH |
       fst ?instr = load_store_type ST | fst ?instr = load_store_type STD) &
      ?t1.0 = snd (fst (store_sub1 ?instr ?rd 0 ?s1.0)) &
      ?t2.0 = snd (fst (store_sub1 ?instr ?rd 0 ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_hole 11,
                          template_app (template_hole 10, template_var 3)),
                        template_app (template_hole 9, template_hole 8))),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_hole 10, template_var 3)),
                          template_app (template_hole 9, template_hole 7))),
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app
                           (template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10, template_var 3)),
                            template_app
                             (template_hole 9, template_hole 6))),
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_hole 10, template_var 3)),
                          template_app
                           (template_hole 9, template_hole 5)))))),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 1),
                              template_hole 0),
                            template_var 5))))),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 1),
                            template_hole 0),
                          template_var 4)))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 13, template_var 2),
             template_var 0)
           ))),
    ("Sparc_Properties.good_context_4",
     "good_context ?s &
      ?s'' = delayed_pool_write ?s &
      fetch_instruction ?s'' = Inr ?v1.0 &
      decode_instruction ?v1.0 = Inr ?v2.0 &
      annul_val ?s'' = False &
      supported_instruction (fst ?v2.0) = True &
      fst ?v2.0 = ctrl_type RETT &
      get_ET (cpu_reg_val PSR ?s'') ~= 1 &
      get_S (cpu_reg_val PSR ?s'') = 0 ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app (template_hole 25, template_var 3)),
              template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_app (template_hole 24, template_var 2),
                    template_app (template_hole 23, template_var 3))),
                template_app
                 (template_app
                   (template_hole 26,
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app (template_hole 21, template_var 2)),
                      template_app (template_hole 20, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 26,
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app (template_hole 18, template_var 1)),
                        template_app (template_hole 17, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15, template_var 2)),
                          template_hole 14)),
                      template_app
                       (template_app
                         (template_hole 26,
                          template_app
                           (template_app
                             (template_hole 16,
                              template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12, template_var 0))),
                            template_hole 11)),
                        template_app
                         (template_app
                           (template_hole 26,
                            template_app
                             (template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 12, template_var 0)),
                              template_app
                               (template_hole 9, template_hole 8))),
                          template_app
                           (template_app
                             (template_hole 26,
                              template_app
                               (template_hole 7,
                                template_app
                                 (template_app
                                   (template_hole 6,
                                    template_app
                                     (template_hole 5,
template_app
 (template_app (template_hole 4, template_hole 3), template_var 2))),
                                  template_hole 2))),
                            template_app
                             (template_app
                               (template_hole 6,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_app
                                     (template_hole 4, template_hole 3),
                                    template_var 2))),
                              template_hole 0)))))))))
            )],
       template_predicate (template_hole 14))),
    ("Sparc_Properties.dispatch_instr_result_rett",
     "fst ?i = ctrl_type RETT &
      get_ET (cpu_reg_val PSR ?s) ~= 1 &
      get_S (cpu_reg_val PSR ?s) ~= 0 &
      get_WIM_bit
       (nat ((uint (get_CWP (cpu_reg_val PSR ?s)) + 1) mod NWINDOWS))
       (cpu_reg_val WIM ?s) =
      0 &
      and (get_addr (snd ?i) ?s) 3 = 0 ==>
      snd (dispatch_instruction ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app
                   (template_hole 32,
                    template_app (template_hole 31, template_var 1)),
                  template_app (template_hole 30, template_hole 29))),
              template_app
               (template_app
                 (template_hole 33,
                  template_app
                   (template_hole 28,
                    template_app
                     (template_app
                       (template_hole 27,
                        template_app
                         (template_hole 26,
                          template_app
                           (template_app
                             (template_hole 25, template_hole 24),
                            template_var 0))),
                      template_hole 23))),
                template_app
                 (template_app
                   (template_hole 33,
                    template_app
                     (template_hole 28,
                      template_app
                       (template_app
                         (template_hole 27,
                          template_app
                           (template_hole 22,
                            template_app
                             (template_app
                               (template_hole 25, template_hole 24),
                              template_var 0))),
                        template_hole 21))),
                  template_app
                   (template_app
                     (template_hole 33,
                      template_app
                       (template_app
                         (template_hole 27,
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_hole 19,
                                template_app
                                 (template_app
                                   (template_hole 18,
                                    template_app
                                     (template_app
 (template_hole 17,
  template_app
   (template_hole 16,
    template_app
     (template_hole 15,
      template_app
       (template_app (template_hole 25, template_hole 24),
        template_var 0)))),
template_hole 14)),
                                  template_hole 13))),
                            template_app
                             (template_app
                               (template_hole 25, template_hole 12),
                              template_var 0))),
                        template_hole 21)),
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8, template_var 1)),
                              template_var 0)),
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6, template_hole 5)))),
                      template_hole 4)))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.rett_instr_result",
     "fst ?i = ctrl_type RETT &
      get_ET (cpu_reg_val PSR ?s) ~= 1 &
      get_S (cpu_reg_val PSR ?s) ~= 0 &
      get_WIM_bit
       (nat ((uint (get_CWP (cpu_reg_val PSR ?s)) + 1) mod NWINDOWS))
       (cpu_reg_val WIM ?s) =
      0 &
      and (get_addr (snd ?i) ?s) 3 = 0 ==>
      snd (rett_instr ?i ?s) = False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app
                   (template_hole 32,
                    template_app (template_hole 31, template_var 1)),
                  template_app (template_hole 30, template_hole 29))),
              template_app
               (template_app
                 (template_hole 33,
                  template_app
                   (template_hole 28,
                    template_app
                     (template_app
                       (template_hole 27,
                        template_app
                         (template_hole 26,
                          template_app
                           (template_app
                             (template_hole 25, template_hole 24),
                            template_var 0))),
                      template_hole 23))),
                template_app
                 (template_app
                   (template_hole 33,
                    template_app
                     (template_hole 28,
                      template_app
                       (template_app
                         (template_hole 27,
                          template_app
                           (template_hole 22,
                            template_app
                             (template_app
                               (template_hole 25, template_hole 24),
                              template_var 0))),
                        template_hole 21))),
                  template_app
                   (template_app
                     (template_hole 33,
                      template_app
                       (template_app
                         (template_hole 27,
                          template_app
                           (template_app
                             (template_hole 20,
                              template_app
                               (template_hole 19,
                                template_app
                                 (template_app
                                   (template_hole 18,
                                    template_app
                                     (template_app
 (template_hole 17,
  template_app
   (template_hole 16,
    template_app
     (template_hole 15,
      template_app
       (template_app (template_hole 25, template_hole 24),
        template_var 0)))),
template_hole 14)),
                                  template_hole 13))),
                            template_app
                             (template_app
                               (template_hole 25, template_hole 12),
                              template_var 0))),
                        template_hole 21)),
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8, template_var 1)),
                              template_var 0)),
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6, template_hole 5)))),
                      template_hole 4)))))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Sparc_Properties.load_sub1_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      (fst ?instr = load_store_type LDSB |
       fst ?instr = load_store_type LDUB |
       fst ?instr = load_store_type LDUH |
       fst ?instr = load_store_type LD | fst ?instr = load_store_type LDD) &
      ?t1.0 = snd (fst (load_sub1 ?instr ?rd 0 ?s1.0)) &
      ?t2.0 = snd (fst (load_sub1 ?instr ?rd 0 ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_hole 13,
                      template_app
                       (template_app
                         (template_hole 12,
                          template_app (template_hole 11, template_var 3)),
                        template_app (template_hole 10, template_hole 9))),
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app
                         (template_app
                           (template_hole 12,
                            template_app
                             (template_hole 11, template_var 3)),
                          template_app
                           (template_hole 10, template_hole 8))),
                      template_app
                       (template_app
                         (template_hole 13,
                          template_app
                           (template_app
                             (template_hole 12,
                              template_app
                               (template_hole 11, template_var 3)),
                            template_app
                             (template_hole 10, template_hole 7))),
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12,
                                template_app
                                 (template_hole 11, template_var 3)),
                              template_app
                               (template_hole 10, template_hole 6))),
                          template_app
                           (template_app
                             (template_hole 12,
                              template_app
                               (template_hole 11, template_var 3)),
                            template_app
                             (template_hole 10, template_hole 5))))))),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 1, template_var 3),
                                template_var 1),
                              template_hole 0),
                            template_var 5))))),
                  template_app
                   (template_app (template_hole 4, template_var 0),
                    template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 1, template_var 3),
                              template_var 1),
                            template_hole 0),
                          template_var 4)))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 14, template_var 2),
             template_var 0)
           ))),
    ("Sparc_Properties.mem_val_alt_mod",
     "?addr1.0 ~= ?addr2.0 ==>
      mem_val_alt 10 ?addr1.0 ?s =
      mem_val_alt 10 ?addr1.0
       (?s(| mem := (mem ?s)
               (10 := mem ?s 10(?addr2.0 |-> ?val),
                11 := (mem ?s 11)(?addr2.0 := None)) |))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_hole 6))))),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_hole 6))))),
             template_var 3),
           template_app
            (template_app (template_hole 5, t_empty), template_var 1))))),
    ("Sparc_Properties.and_or_s",
     "get_S ?w1.0 = 0 & and ?w2.0 128 = 0 ==>
      get_S (or (and ?w1.0 4279238655) ?w2.0) = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 4,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_hole 3)))))))))),
                template_hole 2))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0, template_hole 3)))))))))))))))))))))))))))))))))),
             template_var 0)),
         template_hole 8))),
    ("Sparc_Properties.store_sub2_low_equal_sub1",
     "low_equal ?s1.0 ?s2.0 &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s1.0 =
      Some ?y &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s2.0 =
      Some ?ya ==>
      low_equal (?y(| traps := insert data_access_exception (traps ?y) |))
       (?ya(| traps := insert data_access_exception (traps ?ya) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 11,
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9,
                                    template_app
                                     (template_hole 8,
template_app (template_hole 9, template_hole 7))))),
                              template_var 5),
                            template_app
                             (template_app
                               (template_hole 6, template_var 4),
                              template_var 5)),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 5, template_var 4),
                                  template_var 3),
                                template_var 2),
                              template_var 5),
                            template_var 6)),
                        template_var 7)),
                    template_app (template_hole 4, template_var 1))),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8,
                                    template_app
                                     (template_hole 9, template_hole 7))))),
                            template_var 5),
                          template_app
                           (template_app (template_hole 6, template_var 4),
                            template_var 5)),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 5, template_var 4),
                                template_var 3),
                              template_var 2),
                            template_var 5),
                          template_var 6)),
                      template_var 6)),
                  template_app (template_hole 4, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 3, t_empty), template_var 1)),
             template_app
              (template_app (template_hole 3, t_empty), template_var 0))
           ))),
    ("Sparc_Properties.branch_instr_low_equal_sub2",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (set_annul True
                 (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0 + 4) nPC
                             (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0) PC
   ?s1.0)))))))) &
      ?t2.0 =
      snd (fst (set_annul True
                 (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0 + 4) nPC
                             (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0) PC
   ?s2.0)))))))) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_app
                     (template_hole 11,
                      template_app
                       (template_hole 10,
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_app
                           (template_hole 11,
                            template_app
                             (template_hole 10,
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 7,
                                    template_app
                                     (template_app
 (template_hole 6,
  template_app
   (template_app (template_hole 5, template_hole 4), template_var 2)),
template_app
 (template_hole 3,
  template_app
   (template_hole 2, template_app (template_hole 2, template_hole 1))))),
                                  template_hole 4),
                                template_app
                                 (template_hole 11,
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_app
 (template_app
   (template_hole 7,
    template_app
     (template_app (template_hole 5, template_hole 4), template_var 2)),
  template_hole 0),
template_var 3))))))))))),
                template_app
                 (template_app (template_hole 12, template_var 0),
                  template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_hole 8),
                        template_app
                         (template_hole 11,
                          template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_app
                                     (template_hole 6,
template_app
 (template_app (template_hole 5, template_hole 4), template_var 2)),
                                    template_app
                                     (template_hole 3,
template_app
 (template_hole 2, template_app (template_hole 2, template_hole 1))))),
                                template_hole 4),
                              template_app
                               (template_hole 11,
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_app
                                     (template_app
 (template_hole 7,
  template_app
   (template_app (template_hole 5, template_hole 4), template_var 2)),
template_hole 0),
                                    template_var 2))))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 13, template_var 1),
             template_var 0)
           ))),
    ("Sparc_Properties.get_addr_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      ucast (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s1.0)))) =
      ucast (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0)))) &
      ucast (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s1.0)))) =
      ucast (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0)))) &
      ucast (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s1.0)))) =
      ucast (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 0)),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_var 2)))))),
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 0)),
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 1))))))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 8, template_var 0)),
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_hole 4),
                               template_var 2)))))),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 0)),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_var 1))))))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 0)),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5, template_hole 4),
                             template_var 2)))))),
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 0)),
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 1))))))))
           ))),
    ("Sparc_Properties.store_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      (fst ?instr = load_store_type STB |
       fst ?instr = load_store_type STH |
       fst ?instr = load_store_type ST |
       fst ?instr = load_store_type STA |
       fst ?instr = load_store_type STD) &
      get_S (cpu_reg_val PSR ?s1.0) = 0 &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      ?t1.0 = snd (fst (store_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (store_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 15, template_var 2)),
                        template_app (template_hole 14, template_hole 13))),
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15, template_var 2)),
                          template_app
                           (template_hole 14, template_hole 12))),
                      template_app
                       (template_app
                         (template_hole 17,
                          template_app
                           (template_app
                             (template_hole 16,
                              template_app
                               (template_hole 15, template_var 2)),
                            template_app
                             (template_hole 14, template_hole 11))),
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_app
                               (template_hole 16,
                                template_app
                                 (template_hole 15, template_var 2)),
                              template_app
                               (template_hole 14, template_hole 10))),
                          template_app
                           (template_app
                             (template_hole 16,
                              template_app
                               (template_hole 15, template_var 2)),
                            template_app
                             (template_hole 14, template_hole 9))))))),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 6, template_hole 5),
                            template_var 4))),
                      template_hole 4)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 6, template_hole 5),
                              template_var 3))),
                        template_hole 4)),
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app (template_hole 3, template_var 1),
                          template_app
                           (template_hole 2,
                            template_app
                             (template_hole 1,
                              template_app
                               (template_app
                                 (template_hole 0, template_var 2),
                                template_var 4))))),
                      template_app
                       (template_app (template_hole 3, template_var 0),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_app
                               (template_hole 0, template_var 2),
                              template_var 3)))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 18, template_var 1),
             template_var 0)
           ))),
    ("Sparc_Properties.branch_instr_low_equal_sub0",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (write_cpu
                 (cpu_reg_val PC ?s2.0 +
                  sign_ext24
                   (ucast (get_operand_w22 (snd ?instr ! Suc 0)) << 2))
                 nPC
                 (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0) PC
                             ?s1.0))))) &
      ?t2.0 =
      snd (fst (write_cpu
                 (cpu_reg_val PC ?s2.0 +
                  sign_ext24
                   (ucast (get_operand_w22 (snd ?instr ! Suc 0)) << 2))
                 nPC
                 (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0) PC
                             ?s2.0))))) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 18, template_var 2),
                    template_app
                     (template_hole 17,
                      template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 15,
                              template_app
                               (template_app
                                 (template_hole 14,
                                  template_app
                                   (template_app
                                     (template_hole 13, template_hole 12),
                                    template_var 3)),
                                template_app
                                 (template_hole 11,
                                  template_app
                                   (template_app
                                     (template_hole 10,
template_app
 (template_hole 9,
  template_app
   (template_hole 8,
    template_app
     (template_app
       (template_hole 7, template_app (template_hole 6, template_var 1)),
      template_app (template_hole 5, template_hole 4))))),
                                    template_app
                                     (template_hole 3,
template_app (template_hole 2, template_hole 1)))))),
                            template_hole 0),
                          template_app
                           (template_hole 17,
                            template_app
                             (template_hole 16,
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 15,
                                    template_app
                                     (template_app
 (template_hole 13, template_hole 0),
template_var 3)),
                                  template_hole 12),
                                template_var 4)))))))),
                template_app
                 (template_app (template_hole 18, template_var 0),
                  template_app
                   (template_hole 17,
                    template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 15,
                            template_app
                             (template_app
                               (template_hole 14,
                                template_app
                                 (template_app
                                   (template_hole 13, template_hole 12),
                                  template_var 3)),
                              template_app
                               (template_hole 11,
                                template_app
                                 (template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 9,
template_app
 (template_hole 8,
  template_app
   (template_app
     (template_hole 7, template_app (template_hole 6, template_var 1)),
    template_app (template_hole 5, template_hole 4))))),
                                  template_app
                                   (template_hole 3,
                                    template_app
                                     (template_hole 2,
template_hole 1)))))),
                          template_hole 0),
                        template_app
                         (template_hole 17,
                          template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_app
                                     (template_hole 13, template_hole 0),
                                    template_var 3)),
                                template_hole 12),
                              template_var 3)))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 19, template_var 2),
             template_var 0)
           ))),
    ("Sparc_Properties.load_word_mem_select_10",
     "fst (case load_word_mem ?s1.0 ?addra 10 of None => (None, ?s1.0)
           | Some w => (Some w, add_data_cache ?s1.0 ?addra w 15)) =
      fst (case load_word_mem ?s2.0 ?addra 10 of None => (None, ?s2.0)
           | Some w => (Some w, add_data_cache ?s2.0 ?addra w 15)) ==>
      load_word_mem ?s1.0 ?addra 10 = load_word_mem ?s2.0 ?addra 10",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_var 2)),
                t_empty),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 5, template_hole 8))))))),
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_hole 13),
                    template_var 0)),
                t_empty),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 5, template_hole 8))))))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 9,
                 template_app (template_hole 5, template_hole 8))))),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 9,
                 template_app (template_hole 5, template_hole 8)))))))),
    ("Sparc_Properties.load_word_mem_select_8",
     "fst (case load_word_mem ?s1.0 ?addra 8 of None => (None, ?s1.0)
           | Some w => (Some w, add_instr_cache ?s1.0 ?addra w 15)) =
      fst (case load_word_mem ?s2.0 ?addra 8 of None => (None, ?s2.0)
           | Some w => (Some w, add_instr_cache ?s2.0 ?addra w 15)) ==>
      load_word_mem ?s1.0 ?addra 8 = load_word_mem ?s2.0 ?addra 8",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_var 2)),
                t_empty),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 5, template_hole 8))))))),
          template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_hole 13),
                    template_var 0)),
                t_empty),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 1),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_hole 5,
                      template_app
                       (template_hole 5, template_hole 8))))))))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 8))))),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 8)))))))),
    ("Sparc_Properties.good_context_5",
     "good_context ?s &
      ?s'' = delayed_pool_write ?s &
      fetch_instruction ?s'' = Inr ?v1.0 &
      decode_instruction ?v1.0 = Inr ?v2.0 &
      annul_val ?s'' = False &
      supported_instruction (fst ?v2.0) = True &
      fst ?v2.0 = ctrl_type RETT &
      get_ET (cpu_reg_val PSR ?s'') ~= 1 &
      get_S (cpu_reg_val PSR ?s'') ~= 0 &
      get_WIM_bit
       (nat ((uint (get_CWP (cpu_reg_val PSR ?s'')) + 1) mod NWINDOWS))
       (cpu_reg_val WIM ?s'') ~=
      0 ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app (template_hole 34, template_var 3)),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_app (template_hole 33, template_var 2),
                    template_app (template_hole 32, template_var 3))),
                template_app
                 (template_app
                   (template_hole 35,
                    template_app
                     (template_app
                       (template_hole 31,
                        template_app (template_hole 30, template_var 2)),
                      template_app (template_hole 29, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app
                       (template_app
                         (template_hole 28,
                          template_app (template_hole 27, template_var 1)),
                        template_app (template_hole 26, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 35,
                        template_app
                         (template_app
                           (template_hole 25,
                            template_app
                             (template_hole 24, template_var 2)),
                          template_hole 23)),
                      template_app
                       (template_app
                         (template_hole 35,
                          template_app
                           (template_app
                             (template_hole 25,
                              template_app
                               (template_hole 22,
                                template_app
                                 (template_hole 21, template_var 0))),
                            template_hole 20)),
                        template_app
                         (template_app
                           (template_hole 35,
                            template_app
                             (template_app
                               (template_hole 19,
                                template_app
                                 (template_hole 21, template_var 0)),
                              template_app
                               (template_hole 18, template_hole 17))),
                          template_app
                           (template_app
                             (template_hole 35,
                              template_app
                               (template_hole 16,
                                template_app
                                 (template_app
                                   (template_hole 15,
                                    template_app
                                     (template_hole 14,
template_app
 (template_app (template_hole 13, template_hole 12), template_var 2))),
                                  template_hole 11))),
                            template_app
                             (template_app
                               (template_hole 35,
                                template_app
                                 (template_hole 16,
                                  template_app
                                   (template_app
                                     (template_hole 15,
template_app
 (template_hole 10,
  template_app
   (template_app (template_hole 13, template_hole 12), template_var 2))),
                                    template_hole 9))),
                              template_app
                               (template_hole 16,
                                template_app
                                 (template_app
                                   (template_hole 15,
                                    template_app
                                     (template_app
 (template_hole 8,
  template_app
   (template_hole 7,
    template_app
     (template_app
       (template_hole 6,
        template_app
         (template_app
           (template_hole 5,
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_var 2)))),
          template_hole 2)),
      template_hole 1))),
template_app
 (template_app (template_hole 13, template_hole 0), template_var 2))),
                                  template_hole 9)))))))))))
            )],
       template_predicate (template_hole 23))),
    ("Sparc_Properties.and_or_or_s",
     "get_S ?w1.0 = 0 & and ?w2.0 128 = 0 & and ?w3.0 128 = 0 ==>
      get_S (or (or (and ?w1.0 4279238655) ?w2.0) ?w3.0) = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 2)),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 1),
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app (template_hole 4, template_hole 3)))))))))),
                    template_hole 2)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 0),
                      template_app
                       (template_hole 5,
                        template_app
                         (template_hole 4,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_hole 3)))))))))),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0, template_hole 3)))))))))))))))))))))))))))))))))),
                 template_var 1)),
             template_var 0)),
         template_hole 8))),
    ("Sparc_Properties.non_interference_step",
     "get_S (cpu_reg_val PSR ?s1.0) = 0 &
      good_context ?s1.0 &
      get_delayed_pool ?s1.0 = [] &
      get_trap_set ?s1.0 = {} &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      get_delayed_pool ?s2.0 = [] &
      get_trap_set ?s2.0 = {} &
      good_context ?s2.0 & low_equal ?s1.0 ?s2.0 ==>
      EX t1 t2.
         Some t1 = NEXT ?s1.0 &
         Some t2 = NEXT ?s2.0 &
         get_S (cpu_reg_val PSR t1) = 0 &
         get_S (cpu_reg_val PSR t2) = 0 & low_equal t1 t2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_hole 13),
                        template_var 1))),
                  template_hole 12)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 11, template_var 1)),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 1)),
                      template_hole 8)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app (template_hole 6, template_var 1)),
                        template_hole 5)),
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15,
                              template_app
                               (template_app
                                 (template_hole 14, template_hole 13),
                                template_var 0))),
                          template_hole 12)),
                      template_app
                       (template_app
                         (template_hole 17,
                          template_app
                           (template_app
                             (template_hole 10,
                              template_app
                               (template_hole 9, template_var 0)),
                            template_hole 8)),
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 6, template_var 0)),
                              template_hole 5)),
                          template_app
                           (template_app
                             (template_hole 17,
                              template_app
                               (template_hole 11, template_var 0)),
                            template_app
                             (template_app
                               (template_hole 4, template_var 1),
                              template_var 0)))))))))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Sparc_Properties.branch_instr_low_equal_sub1",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (set_annul True
                 (snd (fst (write_cpu
                             (cpu_reg_val PC ?s2.0 +
                              sign_ext24
                               (ucast
                                 (get_operand_w22 (snd ?instr ! Suc 0)) <<
                                2))
                             nPC
                             (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0) PC
   ?s1.0)))))))) &
      ?t2.0 =
      snd (fst (set_annul True
                 (snd (fst (write_cpu
                             (cpu_reg_val PC ?s2.0 +
                              sign_ext24
                               (ucast
                                 (get_operand_w22 (snd ?instr ! Suc 0)) <<
                                2))
                             nPC
                             (snd (fst (write_cpu (cpu_reg_val nPC ?s2.0) PC
   ?s2.0)))))))) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 20, template_var 2),
                    template_app
                     (template_hole 19,
                      template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_hole 16),
                          template_app
                           (template_hole 19,
                            template_app
                             (template_hole 18,
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 15,
                                    template_app
                                     (template_app
 (template_hole 14,
  template_app
   (template_app (template_hole 13, template_hole 12), template_var 3)),
template_app
 (template_hole 11,
  template_app
   (template_app
     (template_hole 10,
      template_app
       (template_hole 9,
        template_app
         (template_hole 8,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 5, template_hole 4))))),
    template_app
     (template_hole 3, template_app (template_hole 2, template_hole 1)))))),
                                  template_hole 0),
                                template_app
                                 (template_hole 19,
                                  template_app
                                   (template_hole 18,
                                    template_app
                                     (template_app
 (template_app
   (template_hole 15,
    template_app
     (template_app (template_hole 13, template_hole 0), template_var 3)),
  template_hole 12),
template_var 4))))))))))),
                template_app
                 (template_app (template_hole 20, template_var 0),
                  template_app
                   (template_hole 19,
                    template_app
                     (template_hole 18,
                      template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_app
                         (template_hole 19,
                          template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_app
                                     (template_hole 14,
template_app
 (template_app (template_hole 13, template_hole 12), template_var 3)),
                                    template_app
                                     (template_hole 11,
template_app
 (template_app
   (template_hole 10,
    template_app
     (template_hole 9,
      template_app
       (template_hole 8,
        template_app
         (template_app
           (template_hole 7,
            template_app (template_hole 6, template_var 1)),
          template_app (template_hole 5, template_hole 4))))),
  template_app
   (template_hole 3, template_app (template_hole 2, template_hole 1)))))),
                                template_hole 0),
                              template_app
                               (template_hole 19,
                                template_app
                                 (template_hole 18,
                                  template_app
                                   (template_app
                                     (template_app
 (template_hole 15,
  template_app
   (template_app (template_hole 13, template_hole 0), template_var 3)),
template_hole 12),
                                    template_var 3))))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 21, template_var 2),
             template_var 0)
           ))),
    ("Sparc_Properties.load_instr_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      (fst ?instr = load_store_type LDSB |
       fst ?instr = load_store_type LDUB |
       fst ?instr = load_store_type LDUBA |
       fst ?instr = load_store_type LDUH |
       fst ?instr = load_store_type LD |
       fst ?instr = load_store_type LDA |
       fst ?instr = load_store_type LDD) &
      get_S (cpu_reg_val PSR ?s1.0) = 0 &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      ?t1.0 = snd (fst (load_instr ?instr ?s1.0)) &
      ?t2.0 = snd (fst (load_instr ?instr ?s2.0)) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app
                         (template_hole 18,
                          template_app (template_hole 17, template_var 2)),
                        template_app (template_hole 16, template_hole 15))),
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_hole 17, template_var 2)),
                          template_app
                           (template_hole 16, template_hole 14))),
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app
                           (template_app
                             (template_hole 18,
                              template_app
                               (template_hole 17, template_var 2)),
                            template_app
                             (template_hole 16, template_hole 13))),
                        template_app
                         (template_app
                           (template_hole 19,
                            template_app
                             (template_app
                               (template_hole 18,
                                template_app
                                 (template_hole 17, template_var 2)),
                              template_app
                               (template_hole 16, template_hole 12))),
                          template_app
                           (template_app
                             (template_hole 19,
                              template_app
                               (template_app
                                 (template_hole 18,
                                  template_app
                                   (template_hole 17, template_var 2)),
                                template_app
                                 (template_hole 16, template_hole 11))),
                            template_app
                             (template_app
                               (template_hole 19,
                                template_app
                                 (template_app
                                   (template_hole 18,
                                    template_app
                                     (template_hole 17, template_var 2)),
                                  template_app
                                   (template_hole 16, template_hole 10))),
                              template_app
                               (template_app
                                 (template_hole 18,
                                  template_app
                                   (template_hole 17, template_var 2)),
                                template_app
                                 (template_hole 16,
                                  template_hole 9))))))))),
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 6, template_hole 5),
                            template_var 4))),
                      template_hole 4)),
                  template_app
                   (template_app
                     (template_hole 21,
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 6, template_hole 5),
                              template_var 3))),
                        template_hole 4)),
                    template_app
                     (template_app
                       (template_hole 21,
                        template_app
                         (template_app (template_hole 3, template_var 1),
                          template_app
                           (template_hole 2,
                            template_app
                             (template_hole 1,
                              template_app
                               (template_app
                                 (template_hole 0, template_var 2),
                                template_var 4))))),
                      template_app
                       (template_app (template_hole 3, template_var 0),
                        template_app
                         (template_hole 2,
                          template_app
                           (template_hole 1,
                            template_app
                             (template_app
                               (template_hole 0, template_var 2),
                              template_var 3)))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 20, template_var 1),
             template_var 0)
           ))),
    ("Sparc_Properties.read_dcache2_mod_state",
     "fst (case read_data_cache ?s ?addr of None => (None, ?s)
           | Some w => (Some w, ?s)) =
      fst (case read_data_cache
                 (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                       dwrite := ?new_dwrite, state_var := ?new_state_var,
                       traps := ?new_traps, undef := ?new_undef |))
                 ?addr of
           None =>
             (None, ?s
              (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                 dwrite := ?new_dwrite, state_var := ?new_state_var,
                 traps := ?new_traps, undef := ?new_undef |))
           | Some w =>
               (Some w, ?s
                (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                   dwrite := ?new_dwrite, state_var := ?new_state_var,
                   traps := ?new_traps, undef := ?new_undef |)))",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 7)),
             t_empty),
           template_app
            (template_app (template_hole 6, template_var 7),
             template_var 6))),
       template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_app
                            (template_app (template_hole 0, t_empty),
                             template_var 7)))))))),
             t_empty),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 4, t_empty),
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_app
                        (template_app (template_hole 1, t_empty),
                         template_app
                          (template_app (template_hole 0, t_empty),
                           template_var 7))))))),
             template_var 6))))),
    ("Sparc_Properties.read_icache2_mod_state",
     "fst (case read_instr_cache ?s ?addr of None => (None, ?s)
           | Some w => (Some w, ?s)) =
      fst (case read_instr_cache
                 (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                       dwrite := ?new_dwrite, state_var := ?new_state_var,
                       traps := ?new_traps, undef := ?new_undef |))
                 ?addr of
           None =>
             (None, ?s
              (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                 dwrite := ?new_dwrite, state_var := ?new_state_var,
                 traps := ?new_traps, undef := ?new_undef |))
           | Some w =>
               (Some w, ?s
                (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                   dwrite := ?new_dwrite, state_var := ?new_state_var,
                   traps := ?new_traps, undef := ?new_undef |)))",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 7)),
             t_empty),
           template_app
            (template_app (template_hole 6, template_var 7),
             template_var 6))),
       template_app
        (template_hole 11,
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_app
                            (template_app (template_hole 0, t_empty),
                             template_var 7)))))))),
             t_empty),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 4, t_empty),
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_app
                      (template_app (template_hole 2, t_empty),
                       template_app
                        (template_app (template_hole 1, t_empty),
                         template_app
                          (template_app (template_hole 0, t_empty),
                           template_var 7))))))),
             template_var 6))))),
    ("Sparc_Properties.mem_equal_unchanged",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_equal
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |))
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))
       ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, t_empty),
                   template_var 4)),
               template_app
                (template_app (template_hole 9, t_empty), template_var 3)),
             template_var 2)
           ))),
    ("Sparc_Properties.good_context_6",
     "good_context ?s &
      ?s'' = delayed_pool_write ?s &
      fetch_instruction ?s'' = Inr ?v1.0 &
      decode_instruction ?v1.0 = Inr ?v2.0 &
      annul_val ?s'' = False &
      supported_instruction (fst ?v2.0) = True &
      fst ?v2.0 = ctrl_type RETT &
      get_ET (cpu_reg_val PSR ?s'') ~= 1 &
      get_S (cpu_reg_val PSR ?s'') ~= 0 &
      get_WIM_bit
       (nat ((uint (get_CWP (cpu_reg_val PSR ?s'')) + 1) mod NWINDOWS))
       (cpu_reg_val WIM ?s'') =
      0 &
      and (get_addr (snd ?v2.0) ?s'') 3 ~= 0 ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 43,
                template_app (template_hole 42, template_var 3)),
              template_app
               (template_app
                 (template_hole 43,
                  template_app
                   (template_app (template_hole 41, template_var 2),
                    template_app (template_hole 40, template_var 3))),
                template_app
                 (template_app
                   (template_hole 43,
                    template_app
                     (template_app
                       (template_hole 39,
                        template_app (template_hole 38, template_var 2)),
                      template_app (template_hole 37, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 43,
                      template_app
                       (template_app
                         (template_hole 36,
                          template_app (template_hole 35, template_var 1)),
                        template_app (template_hole 34, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 43,
                        template_app
                         (template_app
                           (template_hole 33,
                            template_app
                             (template_hole 32, template_var 2)),
                          template_hole 31)),
                      template_app
                       (template_app
                         (template_hole 43,
                          template_app
                           (template_app
                             (template_hole 33,
                              template_app
                               (template_hole 30,
                                template_app
                                 (template_hole 29, template_var 0))),
                            template_hole 28)),
                        template_app
                         (template_app
                           (template_hole 43,
                            template_app
                             (template_app
                               (template_hole 27,
                                template_app
                                 (template_hole 29, template_var 0)),
                              template_app
                               (template_hole 26, template_hole 25))),
                          template_app
                           (template_app
                             (template_hole 43,
                              template_app
                               (template_hole 24,
                                template_app
                                 (template_app
                                   (template_hole 23,
                                    template_app
                                     (template_hole 22,
template_app
 (template_app (template_hole 21, template_hole 20), template_var 2))),
                                  template_hole 19))),
                            template_app
                             (template_app
                               (template_hole 43,
                                template_app
                                 (template_hole 24,
                                  template_app
                                   (template_app
                                     (template_hole 23,
template_app
 (template_hole 18,
  template_app
   (template_app (template_hole 21, template_hole 20), template_var 2))),
                                    template_hole 17))),
                              template_app
                               (template_app
                                 (template_hole 43,
                                  template_app
                                   (template_app
                                     (template_hole 23,
template_app
 (template_app
   (template_hole 16,
    template_app
     (template_hole 15,
      template_app
       (template_app
         (template_hole 14,
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 21, template_hole 20),
                    template_var 2)))),
            template_hole 10)),
        template_hole 9))),
  template_app
   (template_app (template_hole 21, template_hole 8), template_var 2))),
                                    template_hole 17)),
                                template_app
                                 (template_hole 24,
                                  template_app
                                   (template_app
                                     (template_hole 7,
template_app
 (template_app
   (template_hole 6,
    template_app
     (template_app
       (template_hole 5, template_app (template_hole 4, template_var 0)),
      template_var 2)),
  template_app
   (template_hole 3, template_app (template_hole 2, template_hole 1)))),
                                    template_hole 0))))))))))))
            )],
       template_predicate (template_hole 31))),
    ("Sparc_Properties.virt_to_phys_unchanged_low_equal",
     "low_equal ?s1.0 ?s2.0 ==>
      ALL va.
         virt_to_phys va (mmu ?s2.0)
          ((mem ?s1.0)
           (10 := mem ?s1.0 10(?addr |-> ?val),
            11 := (mem ?s1.0 11)(?addr := None))) =
         virt_to_phys va (mmu ?s2.0)
          ((mem ?s2.0)
           (10 := mem ?s2.0 10(?addr |-> ?val),
            11 := (mem ?s2.0 11)(?addr := None)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Sparc_Properties.non_interference",
     "get_S (cpu_reg_val PSR ?s1.0) = 0 &
      good_context ?s1.0 &
      get_delayed_pool ?s1.0 = [] &
      get_trap_set ?s1.0 = {} &
      get_S (cpu_reg_val PSR ?s2.0) = 0 &
      get_delayed_pool ?s2.0 = [] &
      get_trap_set ?s2.0 = {} &
      good_context ?s2.0 &
      user_seq_exe ?n ?s1.0 &
      user_seq_exe ?n ?s2.0 & low_equal ?s1.0 ?s2.0 ==>
      EX t1 t2.
         Some t1 = SEQ ?n ?s1.0 &
         Some t2 = SEQ ?n ?s2.0 &
         get_S (cpu_reg_val PSR t1) = 0 &
         get_S (cpu_reg_val PSR t2) = 0 & low_equal t1 t2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 2))),
                  template_hole 13)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 12, template_var 2)),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app (template_hole 10, template_var 2)),
                      template_hole 9)),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app (template_hole 7, template_var 2)),
                        template_hole 6)),
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app
                           (template_hole 17,
                            template_app
                             (template_hole 16,
                              template_app
                               (template_app
                                 (template_hole 15, template_hole 14),
                                template_var 1))),
                          template_hole 13)),
                      template_app
                       (template_app
                         (template_hole 18,
                          template_app
                           (template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10, template_var 1)),
                            template_hole 9)),
                        template_app
                         (template_app
                           (template_hole 18,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 7, template_var 1)),
                              template_hole 6)),
                          template_app
                           (template_app
                             (template_hole 18,
                              template_app
                               (template_hole 12, template_var 1)),
                            template_app
                             (template_app
                               (template_hole 18,
                                template_app
                                 (template_app
                                   (template_hole 5, template_var 0),
                                  template_var 2)),
                              template_app
                               (template_app
                                 (template_hole 18,
                                  template_app
                                   (template_app
                                     (template_hole 5, template_var 0),
                                    template_var 1)),
                                template_app
                                 (template_app
                                   (template_hole 4, template_var 2),
                                  template_var 1)))))))))))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Sparc_Properties.state_mem_mod_1011_low_equal",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 = ?s1.0
      (| mem := (mem ?s1.0)
           (10 := mem ?s1.0 10(?addr |-> ?val),
            11 := (mem ?s1.0 11)(?addr := None)) |) &
      ?t2.0 = ?s2.0
      (| mem := (mem ?s2.0)
           (10 := mem ?s2.0 10(?addr |-> ?val),
            11 := (mem ?s2.0 11)(?addr := None)) |) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_app
                     (template_app (template_hole 9, t_empty),
                      template_var 5))),
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_app
                   (template_app (template_hole 9, t_empty),
                    template_var 4))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 11, template_var 3),
             template_var 0)
           ))),
    ("Sparc_Properties.and_or_or_or_s",
     "get_S ?w1.0 = 0 &
      and ?w2.0 128 = 0 & and ?w3.0 128 = 0 & and ?w4.0 128 = 0 ==>
      get_S (or (or (or (and ?w1.0 4279238655) ?w2.0) ?w3.0) ?w4.0) = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 3)),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 2),
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app (template_hole 4, template_hole 3)))))))))),
                    template_hole 2)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_var 1),
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4, template_app (template_hole 4, template_hole 3)))))))))),
                      template_hole 2)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 0),
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app (template_hole 4, template_hole 3)))))))))),
                    template_hole 2))))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 6, template_var 3),
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_hole 3)))))))))))))))))))))))))))))))))),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_hole 8))),
    ("Sparc_Properties.mem_val_w32_8_unchanged",
     "mem_equal ?s1.0 ?s2.0 ?a ==>
      mem_val_w32 8 ?a
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_w32 8 ?a
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 8, template_hole 7))))),
             template_var 2),
           template_app
            (template_app (template_hole 6, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 8, template_hole 7))))),
             template_var 2),
           template_app
            (template_app (template_hole 6, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_w32_10_unchanged",
     "mem_equal ?s1.0 ?s2.0 ?a ==>
      mem_val_w32 10 ?a
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_w32 10 ?a
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_hole 6))))),
             template_var 2),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 8, template_hole 6))))),
             template_var 2),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.virt_to_phys_unchanged",
     "ALL va.
         virt_to_phys va (mmu ?s2.0) (mem ?s1.0) =
         virt_to_phys va (mmu ?s2.0) (mem ?s2.0) ==>
      ALL va.
         virt_to_phys va (mmu ?s2.0)
          ((mem ?s1.0)
           (10 := mem ?s1.0 10(?addr |-> ?val),
            11 := (mem ?s1.0 11)(?addr := None))) =
         virt_to_phys va (mmu ?s2.0)
          ((mem ?s2.0)
           (10 := mem ?s2.0 10(?addr |-> ?val),
            11 := (mem ?s2.0 11)(?addr := None)))",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Sparc_Properties.load_word_mem2_mod_state",
     "fst (case load_word_mem ?s ?addr ?asi of None => (None, ?s)
           | Some w => (Some w, add_data_cache ?s ?addr w 15)) =
      fst (case load_word_mem
                 (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                       dwrite := ?new_dwrite, state_var := ?new_state_var,
                       traps := ?new_traps, undef := ?new_undef |))
                 ?addr ?asi of
           None =>
             (None, ?s
              (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                 dwrite := ?new_dwrite, state_var := ?new_state_var,
                 traps := ?new_traps, undef := ?new_undef |))
           | Some w =>
               (Some w,
                add_data_cache
                 (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                       dwrite := ?new_dwrite, state_var := ?new_state_var,
                       traps := ?new_traps, undef := ?new_undef |))
                 ?addr w 15))",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_var 8)),
             t_empty),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 8),
               template_var 7),
             template_var 6))),
       template_app
        (template_hole 15,
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_app
                            (template_app (template_hole 0, t_empty),
                             template_var 8)))))))),
             t_empty),
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_app
                            (template_app (template_hole 0, t_empty),
                             template_var 8))))))),
               template_var 7),
             template_var 6))))),
    ("Sparc_Properties.load_word_mem3_mod_state",
     "fst (case load_word_mem ?s ?addr ?asi of None => (None, ?s)
           | Some w => (Some w, add_instr_cache ?s ?addr w 15)) =
      fst (case load_word_mem
                 (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                       dwrite := ?new_dwrite, state_var := ?new_state_var,
                       traps := ?new_traps, undef := ?new_undef |))
                 ?addr ?asi of
           None =>
             (None, ?s
              (| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                 dwrite := ?new_dwrite, state_var := ?new_state_var,
                 traps := ?new_traps, undef := ?new_undef |))
           | Some w =>
               (Some w,
                add_instr_cache
                 (?s(| cpu_reg := ?new_cpu_reg, user_reg := ?new_user_reg,
                       dwrite := ?new_dwrite, state_var := ?new_state_var,
                       traps := ?new_traps, undef := ?new_undef |))
                 ?addr w 15))",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_var 8)),
             t_empty),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 8),
               template_var 7),
             template_var 6))),
       template_app
        (template_hole 15,
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_hole 12),
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_app
                            (template_app (template_hole 0, t_empty),
                             template_var 8)))))))),
             t_empty),
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app
                    (template_app (template_hole 4, t_empty),
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app
                        (template_app (template_hole 2, t_empty),
                         template_app
                          (template_app (template_hole 1, t_empty),
                           template_app
                            (template_app (template_hole 0, t_empty),
                             template_var 8))))))),
               template_var 7),
             template_var 6))))),
    ("Sparc_Properties.mem_val_alt_8_mem_equal_0",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 4, template_hole 3))))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_hole 3)))))))))))))))))))))))))))))))))))))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 4, template_hole 3))))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_hole 3)))))))))))))))))))))))))))))))))))))),
           template_var 1)))),
    ("Sparc_Properties.mem_val_alt_10_mem_equal_0",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_hole 2))))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 3,
 template_app
  (template_hole 3,
   template_app
    (template_hole 3,
     template_app
      (template_hole 3,
       template_app
        (template_hole 3,
         template_app
          (template_hole 3,
           template_app
            (template_hole 3,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 3,
 template_app
  (template_hole 3,
   template_app
    (template_hole 3,
     template_app
      (template_hole 3,
       template_app
        (template_hole 3,
         template_app
          (template_hole 3,
           template_hole 2)))))))))))))))))))))))))))))))))))))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 4, template_hole 2))))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 3,
 template_app
  (template_hole 3,
   template_app
    (template_hole 3,
     template_app
      (template_hole 3,
       template_app
        (template_hole 3,
         template_app
          (template_hole 3,
           template_app
            (template_hole 3,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 3,
 template_app
  (template_hole 3,
   template_app
    (template_hole 3,
     template_app
      (template_hole 3,
       template_app
        (template_hole 3,
         template_app
          (template_hole 3,
           template_hole 2)))))))))))))))))))))))))))))))))))))),
           template_var 1)))),
    ("Sparc_Properties.non_interference_induct_case_sub2",
     "(user_seq_exe ?n ?s1.0 & user_seq_exe ?n ?s2.0 -->
       (EX t1.
           Some t1 = SEQ ?n ?s1.0 &
           (EX t2.
               Some t2 = SEQ ?n ?s2.0 &
               get_S (cpu_reg_val PSR t1) = 0 &
               get_S (cpu_reg_val PSR t2) = 0 & low_equal t1 t2))) &
      user_seq_exe (Suc ?n) ?s1.0 & user_seq_exe (Suc ?n) ?s2.0 ==>
      EX t1.
         Some t1 = (case SEQ ?n ?s1.0 of None => None | Some x => NEXT x) &
         (EX t2.
             Some t2 =
             (case SEQ ?n ?s2.0 of None => None | Some x => NEXT x) &
             get_S (cpu_reg_val PSR t1) = 0 &
             get_S (cpu_reg_val PSR t2) = 0 & low_equal t1 t2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app (template_hole 14, template_var 2),
                          template_var 1)),
                      template_app
                       (template_app (template_hole 14, template_var 2),
                        template_var 0))),
                  template_app (template_hole 13, t_empty))),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app (template_hole 3, template_var 2)),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 3, template_var 2)),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Sparc_Properties.mem_val_alt_8_mem_equal_1",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732 + 1) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732 + 1) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 6, template_hole 5))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_hole 5)))))))))))))))))))))))))))))))))))))),
               template_hole 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 6, template_hole 5))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1,
                                   template_app
                                    (template_hole 1,
                                     template_app
(template_hole 1,
 template_app
  (template_hole 1,
   template_app
    (template_hole 1,
     template_app
      (template_hole 1,
       template_app
        (template_hole 1,
         template_app
          (template_hole 1,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_hole 5)))))))))))))))))))))))))))))))))))))),
               template_hole 0)),
           template_var 1)))),
    ("Sparc_Properties.mem_val_alt_10_mem_equal_1",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732 + 1) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732 + 1) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 6, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_hole 4)))))))))))))))))))))))))))))))))))))),
               template_hole 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 6, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_hole 4)))))))))))))))))))))))))))))))))))))),
               template_hole 0)),
           template_var 1)))),
    ("Sparc_Properties.store_sub2_low_equal_sub2",
     "low_equal ?s1.0 ?s2.0 &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s1.0 =
      Some ?y &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s2.0 =
      Some ?ya &
      memory_write 10 (?addr + 4) 15 (user_reg_val ?curr_win (or ?rd 1) ?y)
       ?y =
      None &
      memory_write 10 (?addr + 4) 15 (user_reg_val ?curr_win (or ?rd 1) ?ya)
       ?ya =
      Some ?yb ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 15,
                                template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12,
template_app (template_hole 13, template_hole 11))))),
                              template_var 6),
                            template_app
                             (template_app
                               (template_hole 10, template_var 5),
                              template_var 6)),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 9, template_var 5),
                                  template_var 4),
                                template_var 3),
                              template_var 6),
                            template_var 7)),
                        template_var 8)),
                    template_app (template_hole 8, template_var 2))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14,
                                    template_app
                                     (template_hole 13,
template_app
 (template_hole 12, template_app (template_hole 13, template_hole 11))))),
                                template_var 6),
                              template_app
                               (template_app
                                 (template_hole 10, template_var 5),
                                template_var 6)),
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 9, template_var 5),
                                    template_var 4),
                                  template_var 3),
                                template_var 6),
                              template_var 7)),
                          template_var 7)),
                      template_app (template_hole 8, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 15,
                                    template_app
                                     (template_hole 14,
template_app
 (template_hole 13,
  template_app
   (template_hole 12, template_app (template_hole 13, template_hole 11))))),
                                  template_app
                                   (template_app
                                     (template_hole 7, template_var 6),
                                    template_app
                                     (template_hole 6,
template_app
 (template_hole 13, template_app (template_hole 13, template_hole 11))))),
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_hole 12,
template_app (template_hole 12, template_hole 11))))),
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 3, template_var 3),
                                    template_hole 2)),
                                template_var 2)),
                            template_var 2)),
                        template_hole 1)),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14,
                                    template_app
                                     (template_hole 13,
template_app
 (template_hole 12, template_app (template_hole 13, template_hole 11))))),
                                template_app
                                 (template_app
                                   (template_hole 7, template_var 6),
                                  template_app
                                   (template_hole 6,
                                    template_app
                                     (template_hole 13,
template_app (template_hole 13, template_hole 11))))),
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_hole 12,
template_hole 11))))),
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 3),
                                  template_hole 2)),
                              template_var 1)),
                          template_var 1)),
                      template_app (template_hole 8, template_var 0))))))
            )],
       template_predicate (template_hole 0))),
    ("Sparc_Properties.store_sub2_low_equal_sub3",
     "low_equal ?s1.0 ?s2.0 &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s1.0 =
      Some ?y &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s2.0 =
      Some ?ya &
      memory_write 10 (?addr + 4) 15 (user_reg_val ?curr_win (or ?rd 1) ?y)
       ?y =
      Some ?yb &
      memory_write 10 (?addr + 4) 15 (user_reg_val ?curr_win (or ?rd 1) ?ya)
       ?ya =
      None ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 15,
                                template_app
                                 (template_hole 14,
                                  template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12,
template_app (template_hole 13, template_hole 11))))),
                              template_var 6),
                            template_app
                             (template_app
                               (template_hole 10, template_var 5),
                              template_var 6)),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 9, template_var 5),
                                  template_var 4),
                                template_var 3),
                              template_var 6),
                            template_var 7)),
                        template_var 8)),
                    template_app (template_hole 8, template_var 2))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14,
                                    template_app
                                     (template_hole 13,
template_app
 (template_hole 12, template_app (template_hole 13, template_hole 11))))),
                                template_var 6),
                              template_app
                               (template_app
                                 (template_hole 10, template_var 5),
                                template_var 6)),
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 9, template_var 5),
                                    template_var 4),
                                  template_var 3),
                                template_var 6),
                              template_var 7)),
                          template_var 7)),
                      template_app (template_hole 8, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_hole 16,
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 15,
                                    template_app
                                     (template_hole 14,
template_app
 (template_hole 13,
  template_app
   (template_hole 12, template_app (template_hole 13, template_hole 11))))),
                                  template_app
                                   (template_app
                                     (template_hole 7, template_var 6),
                                    template_app
                                     (template_hole 6,
template_app
 (template_hole 13, template_app (template_hole 13, template_hole 11))))),
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_hole 12,
template_app (template_hole 12, template_hole 11))))),
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 4, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 3, template_var 3),
                                    template_hole 2)),
                                template_var 2)),
                            template_var 2)),
                        template_app (template_hole 8, template_var 0))),
                    template_app
                     (template_app
                       (template_hole 16,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14,
                                    template_app
                                     (template_hole 13,
template_app
 (template_hole 12, template_app (template_hole 13, template_hole 11))))),
                                template_app
                                 (template_app
                                   (template_hole 7, template_var 6),
                                  template_app
                                   (template_hole 6,
                                    template_app
                                     (template_hole 13,
template_app (template_hole 13, template_hole 11))))),
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_hole 12,
template_hole 11))))),
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 4, template_var 4),
                                template_app
                                 (template_app
                                   (template_hole 3, template_var 3),
                                  template_hole 2)),
                              template_var 1)),
                          template_var 1)),
                      template_hole 1)))))
            )],
       template_predicate (template_hole 0))),
    ("Sparc_Properties.store_sub2_low_equal_sub4",
     "low_equal ?s1.0 ?s2.0 &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s1.0 =
      Some ?y &
      memory_write 10 ?addr (st_byte_mask ?instr ?addr)
       (st_data0 ?instr ?curr_win ?rd ?addr ?s2.0) ?s2.0 =
      Some ?ya &
      memory_write 10 (?addr + 4) 15 (user_reg_val ?curr_win (or ?rd 1) ?y)
       ?y =
      Some ?yb &
      memory_write 10 (?addr + 4) 15 (user_reg_val ?curr_win (or ?rd 1) ?ya)
       ?ya =
      Some ?yc ==>
      low_equal ?yb ?yc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11,
                                    template_app
                                     (template_hole 10,
template_app (template_hole 11, template_hole 9))))),
                              template_var 7),
                            template_app
                             (template_app
                               (template_hole 8, template_var 6),
                              template_var 7)),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 7, template_var 6),
                                  template_var 5),
                                template_var 4),
                              template_var 7),
                            template_var 8)),
                        template_var 9)),
                    template_app (template_hole 6, template_var 3))),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 13,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_hole 11,
template_app
 (template_hole 10, template_app (template_hole 11, template_hole 9))))),
                                template_var 7),
                              template_app
                               (template_app
                                 (template_hole 8, template_var 6),
                                template_var 7)),
                            template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_app
                                     (template_hole 7, template_var 6),
                                    template_var 5),
                                  template_var 4),
                                template_var 7),
                              template_var 8)),
                          template_var 8)),
                      template_app (template_hole 6, template_var 2))),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_app
                                   (template_hole 13,
                                    template_app
                                     (template_hole 12,
template_app
 (template_hole 11,
  template_app
   (template_hole 10, template_app (template_hole 11, template_hole 9))))),
                                  template_app
                                   (template_app
                                     (template_hole 5, template_var 7),
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 11, template_app (template_hole 11, template_hole 9))))),
                                template_app
                                 (template_hole 3,
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 10,
template_app (template_hole 10, template_hole 9))))),
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 2, template_var 5),
                                  template_app
                                   (template_app
                                     (template_hole 1, template_var 4),
                                    template_hole 0)),
                                template_var 3)),
                            template_var 3)),
                        template_app (template_hole 6, template_var 1))),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 13,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_hole 11,
template_app
 (template_hole 10, template_app (template_hole 11, template_hole 9))))),
                                template_app
                                 (template_app
                                   (template_hole 5, template_var 7),
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 11,
template_app (template_hole 11, template_hole 9))))),
                              template_app
                               (template_hole 3,
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 10,
                                    template_app
                                     (template_hole 10,
template_hole 9))))),
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 2, template_var 5),
                                template_app
                                 (template_app
                                   (template_hole 1, template_var 4),
                                  template_hole 0)),
                              template_var 2)),
                          template_var 2)),
                      template_app (template_hole 6, template_var 0))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 15, template_var 1),
             template_var 0)
           ))),
    ("Sparc_Properties.mem_val_alt_8_mem_equal_2",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732 + 2) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732 + 2) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_hole 4)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 1,
                 template_app (template_hole 5, template_hole 4)))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_hole 4)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 1,
                 template_app (template_hole 5, template_hole 4)))),
           template_var 1)))),
    ("Sparc_Properties.mem_val_alt_8_mem_equal_3",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732 + 3) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732 + 3) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_hole 4)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 4)))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_hole 4)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 4)))),
           template_var 1)))),
    ("Sparc_Properties.mem_val_alt_10_mem_equal_2",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732 + 2) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732 + 2) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 5, template_hole 3))))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_hole 3)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 0,
                 template_app (template_hole 5, template_hole 3)))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 5, template_hole 3))))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_hole 3)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 0,
                 template_app (template_hole 5, template_hole 3)))),
           template_var 1)))),
    ("Sparc_Properties.mem_val_alt_10_mem_equal_3",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732 + 3) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732 + 3) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 5, template_hole 3))))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_hole 3)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_hole 3)))),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 5, template_hole 3))))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 4,
     template_app
      (template_hole 4,
       template_app
        (template_hole 4,
         template_app
          (template_hole 4,
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_hole 3)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_hole 3)))),
           template_var 1)))),
    ("Sparc_Properties.and_or_or_or_or_s",
     "get_S ?w1.0 = 0 &
      and ?w2.0 128 = 0 &
      and ?w3.0 128 = 0 & and ?w4.0 128 = 0 & and ?w5.0 128 = 0 ==>
      get_S
       (or (or (or (or (and ?w1.0 4279238655) ?w2.0) ?w3.0) ?w4.0) ?w5.0) =
      0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 4)),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 3),
                        template_app
                         (template_hole 5,
                          template_app
                           (template_hole 4,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app (template_hole 4, template_hole 3)))))))))),
                    template_hole 2)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_var 2),
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4, template_app (template_hole 4, template_hole 3)))))))))),
                      template_hole 2)),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 6, template_var 1),
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4,
  template_app
   (template_hole 4,
    template_app (template_hole 4, template_hole 3)))))))))),
                        template_hole 2)),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 6, template_var 0),
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 4,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4,
template_app
 (template_hole 4, template_app (template_hole 4, template_hole 3)))))))))),
                      template_hole 2)))))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 6, template_var 4),
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0,
 template_app
  (template_hole 0,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app
                  (template_hole 0,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 0,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 0,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 4,
 template_app
  (template_hole 4,
   template_app
    (template_hole 0,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_hole 3)))))))))))))))))))))))))))))))))),
                         template_var 3)),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_hole 8))),
    ("Sparc_Properties.state_mem_mod_1011_low_equal_sub1",
     "(ALL va.
          virt_to_phys va (mmu ?s2.0) (mem ?s1.0) =
          virt_to_phys va (mmu ?s2.0) (mem ?s2.0)) &
      (ALL pa.
          (EX va b.
              virt_to_phys va (mmu ?s2.0) (mem ?s2.0) = Some (pa, b) &
              mmu_readable (get_acc_flag b) 10) -->
          mem_equal ?s1.0 ?s2.0 pa) &
      mmu ?s1.0 = mmu ?s2.0 &
      virt_to_phys ?va (mmu ?s2.0)
       ((mem ?s1.0)
        (10 := mem ?s1.0 10(?addr |-> ?val),
         11 := (mem ?s1.0 11)(?addr := None))) =
      Some (?pa, ?b) &
      mmu_readable (get_acc_flag ?b) 10 ==>
      mem_equal ?s1.0 ?s2.0 ?pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23, template_app (template_hole 22, t_empty)),
              template_app
               (template_app
                 (template_hole 23,
                  template_app (template_hole 17, t_empty)),
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app (template_hole 19, template_var 5)),
                      template_app (template_hole 19, template_var 6))),
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app
                         (template_hole 21,
                          template_app
                           (template_app
                             (template_app
                               (template_hole 20, template_var 4),
                              template_app
                               (template_hole 19, template_var 6)),
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 3,
                                  template_app
                                   (template_app
                                     (template_app
 (template_hole 3, template_app (template_hole 18, template_var 5)),
template_app
 (template_hole 9,
  template_app
   (template_hole 8,
    template_app
     (template_hole 7, template_app (template_hole 8, template_hole 6))))),
                                    template_app
                                     (template_app
 (template_app
   (template_hole 2,
    template_app
     (template_app (template_hole 18, template_var 5),
      template_app
       (template_hole 9,
        template_app
         (template_hole 8,
          template_app
           (template_hole 7,
            template_app (template_hole 8, template_hole 6)))))),
  template_var 3),
template_app (template_hole 1, template_var 2)))),
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 7,
                                    template_app
                                     (template_hole 7,
template_app (template_hole 8, template_hole 6))))),
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 2,
                                    template_app
                                     (template_app
 (template_hole 18, template_var 5),
template_app
 (template_hole 9,
  template_app
   (template_hole 7,
    template_app
     (template_hole 7, template_app (template_hole 8, template_hole 6)))))),
                                  template_var 3),
                                template_hole 0)))),
                        template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 1),
                            template_var 0)))),
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app (template_hole 10, template_var 0)),
                      template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 8, template_hole 6)))))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 5),
               template_var 6),
             template_var 1)
           ))),
    ("Sparc_Properties.load_word_mem_8_unchanged",
     "low_equal ?s1.0 ?s2.0 &
      load_word_mem ?s1.0 ?addra 8 = load_word_mem ?s2.0 ?addra 8 ==>
      load_word_mem
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |))
       ?addra 8 =
      load_word_mem
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))
       ?addra 8",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 2),
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8, template_hole 7)))))),
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 8, template_hole 7)))))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 6, t_empty), template_var 4)),
             template_var 2),
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app (template_hole 8, template_hole 7))))),
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 6, t_empty), template_var 3)),
             template_var 2),
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app (template_hole 8, template_hole 7)))))))),
    ("Sparc_Properties.load_word_mem_10_unchanged",
     "low_equal ?s1.0 ?s2.0 &
      load_word_mem ?s1.0 ?addra 10 = load_word_mem ?s2.0 ?addra 10 ==>
      load_word_mem
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |))
       ?addra 10 =
      load_word_mem
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))
       ?addra 10",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 2),
                    template_app
                     (template_hole 9,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 8, template_hole 6)))))),
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2),
                  template_app
                   (template_hole 9,
                    template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app
                         (template_hole 8, template_hole 6)))))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 5, t_empty), template_var 4)),
             template_var 2),
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 8, template_hole 6))))),
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 5, t_empty), template_var 3)),
             template_var 2),
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 8, template_hole 6)))))))),
    ("Sparc_Properties.memory_read_8_unchanged",
     "low_equal ?s1.0 ?s2.0 &
      fst (memory_read 8 ?addra ?s1.0) =
      fst (memory_read 8 ?addra ?s2.0) ==>
      fst (memory_read 8 ?addra
            (?s1.0
             (| mem := (mem ?s1.0)
                  (10 := mem ?s1.0 10(?addr |-> ?val),
                   11 := (mem ?s1.0 11)(?addr := None)) |))) =
      fst (memory_read 8 ?addra
            (?s2.0
             (| mem := (mem ?s2.0)
                  (10 := mem ?s2.0 10(?addr |-> ?val),
                   11 := (mem ?s2.0 11)(?addr := None)) |)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 10,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 8, template_hole 7))))),
                        template_var 2),
                      template_var 4))),
                template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 8, template_hole 7))))),
                      template_var 2),
                    template_var 3))))
            )],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 8, template_hole 7))))),
               template_var 2),
             template_app
              (template_app (template_hole 6, t_empty), template_var 4))),
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 8, template_hole 7))))),
               template_var 2),
             template_app
              (template_app (template_hole 6, t_empty),
               template_var 3)))))),
    ("Sparc_Properties.memory_read_10_unchanged",
     "low_equal ?s1.0 ?s2.0 &
      fst (memory_read 10 ?addra ?s1.0) =
      fst (memory_read 10 ?addra ?s2.0) ==>
      fst (memory_read 10 ?addra
            (?s1.0
             (| mem := (mem ?s1.0)
                  (10 := mem ?s1.0 10(?addr |-> ?val),
                   11 := (mem ?s1.0 11)(?addr := None)) |))) =
      fst (memory_read 10 ?addra
            (?s2.0
             (| mem := (mem ?s2.0)
                  (10 := mem ?s2.0 10(?addr |-> ?val),
                   11 := (mem ?s2.0 11)(?addr := None)) |)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 10,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 8, template_hole 6))))),
                        template_var 2),
                      template_var 4))),
                template_app
                 (template_hole 11,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 8, template_hole 6))))),
                      template_var 2),
                    template_var 3))))
            )],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 8, template_hole 6))))),
               template_var 2),
             template_app
              (template_app (template_hole 5, t_empty), template_var 4))),
         template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 8, template_hole 6))))),
               template_var 2),
             template_app
              (template_app (template_hole 5, t_empty),
               template_var 3)))))),
    ("Sparc_Properties.good_context_all",
     "good_context ?s & ?s'' = delayed_pool_write ?s ==>
      (get_trap_set ?s = {} |
       reset_trap_val ?s ~= False | get_ET (cpu_reg_val PSR ?s) ~= 0) &
      ((EX e. fetch_instruction ?s'' = Inl e) |
       (EX v1 v2.
           fetch_instruction ?s'' = Inr v1 &
           decode_instruction v1 = Inr v2 &
           (annul_val ?s'' = True |
            annul_val ?s'' = False &
            (ALL v1' v2'.
                fetch_instruction ?s'' = Inr v1' &
                decode_instruction v1' = Inr v2' -->
                supported_instruction (fst v2') = True) &
            (fst v2 ~= ctrl_type RETT |
             fst v2 = ctrl_type RETT &
             (get_ET (cpu_reg_val PSR ?s'') = 1 |
              get_ET (cpu_reg_val PSR ?s'') ~= 1 &
              get_S (cpu_reg_val PSR ?s'') ~= 0 &
              get_WIM_bit
               (nat ((uint (get_CWP (cpu_reg_val PSR ?s'')) + 1) mod
                     NWINDOWS))
               (cpu_reg_val WIM ?s'') =
              0 &
              and (get_addr (snd v2) ?s'') 3 = 0)))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 55,
                template_app (template_hole 54, template_var 1)),
              template_app
               (template_app (template_hole 53, template_var 0),
                template_app (template_hole 52, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 55,
               template_app
                (template_app
                  (template_hole 51,
                   template_app
                    (template_app
                      (template_hole 50,
                       template_app (template_hole 49, template_var 1)),
                     template_hole 48)),
                 template_app
                  (template_app
                    (template_hole 51,
                     template_app
                      (template_hole 47,
                       template_app
                        (template_app
                          (template_hole 46,
                           template_app (template_hole 45, template_var 1)),
                         template_hole 44))),
                   template_app
                    (template_hole 47,
                     template_app
                      (template_app
                        (template_hole 43,
                         template_app
                          (template_hole 42,
                           template_app
                            (template_app
                              (template_hole 41, template_hole 40),
                             template_var 1))),
                       template_hole 39))))),
             template_app
              (template_app
                (template_hole 51,
                 template_app (template_hole 38, t_empty)),
               template_app (template_hole 34, t_empty)))
           ))),
    ("Sparc_Properties.jmpl_instr_low_equal_sub2",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (write_cpu
                 (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0))))
                 nPC
                 (snd (fst (write_cpu
                             (cpu_reg_val nPC
                               (snd (fst
(write_reg
  (user_reg_val (fst (fst (get_curr_win () ?s2.0))) 0
    (snd (fst (get_curr_win () ?s1.0))))
  (fst (fst (get_curr_win () ?s2.0))) 0
  (snd (fst (get_curr_win () ?s1.0)))))))
                             PC (snd (fst
 (write_reg
   (user_reg_val (fst (fst (get_curr_win () ?s2.0))) 0
     (snd (fst (get_curr_win () ?s1.0))))
   (fst (fst (get_curr_win () ?s2.0))) 0
   (snd (fst (get_curr_win () ?s1.0))))))))))) &
      ?t2.0 =
      snd (fst (write_cpu
                 (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0))))
                 nPC
                 (snd (fst (write_cpu
                             (cpu_reg_val nPC
                               (snd (fst
(write_reg
  (user_reg_val (fst (fst (get_curr_win () ?s2.0))) 0
    (snd (fst (get_curr_win () ?s2.0))))
  (fst (fst (get_curr_win () ?s2.0))) 0
  (snd (fst (get_curr_win () ?s2.0)))))))
                             PC (snd (fst
 (write_reg
   (user_reg_val (fst (fst (get_curr_win () ?s2.0))) 0
     (snd (fst (get_curr_win () ?s2.0))))
   (fst (fst (get_curr_win () ?s2.0))) 0
   (snd (fst (get_curr_win () ?s2.0))))))))))) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 16, template_var 2),
                    template_app
                     (template_hole 15,
                      template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 13,
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app
                                   (template_hole 11, template_var 1)),
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9,
                                    template_app
                                     (template_app
 (template_hole 8, template_hole 7),
template_var 3))))),
                            template_hole 6),
                          template_app
                           (template_hole 15,
                            template_app
                             (template_hole 14,
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 13,
                                    template_app
                                     (template_app
 (template_hole 5, template_hole 6),
template_app
 (template_hole 15,
  template_app
   (template_hole 14,
    template_app
     (template_app
       (template_app
         (template_app
           (template_hole 4,
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 3)))),
                template_hole 1),
              template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 4))))),
          template_app
           (template_hole 2,
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 3)))),
        template_hole 1),
      template_app
       (template_hole 10,
        template_app
         (template_hole 9,
          template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 4)))))))),
                                  template_hole 0),
                                template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14,
                                    template_app
                                     (template_app
 (template_app
   (template_app
     (template_hole 4,
      template_app
       (template_app
         (template_app
           (template_hole 3,
            template_app
             (template_hole 2,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 3)))),
          template_hole 1),
        template_app
         (template_hole 10,
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 4))))),
    template_app
     (template_hole 2,
      template_app
       (template_hole 9,
        template_app
         (template_app (template_hole 8, template_hole 7),
          template_var 3)))),
  template_hole 1),
template_app
 (template_hole 10,
  template_app
   (template_hole 9,
    template_app
     (template_app (template_hole 8, template_hole 7),
      template_var 4)))))))))))))),
                template_app
                 (template_app (template_hole 16, template_var 0),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12,
                                template_app
                                 (template_hole 11, template_var 1)),
                              template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_app
                                     (template_hole 8, template_hole 7),
                                    template_var 3))))),
                          template_hole 6),
                        template_app
                         (template_hole 15,
                          template_app
                           (template_hole 14,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 13,
                                  template_app
                                   (template_app
                                     (template_hole 5, template_hole 6),
                                    template_app
                                     (template_hole 15,
template_app
 (template_hole 14,
  template_app
   (template_app
     (template_app
       (template_app
         (template_hole 4,
          template_app
           (template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 3)))),
              template_hole 1),
            template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 3))))),
        template_app
         (template_hole 2,
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 3)))),
      template_hole 1),
    template_app
     (template_hole 10,
      template_app
       (template_hole 9,
        template_app
         (template_app (template_hole 8, template_hole 7),
          template_var 3)))))))),
                                template_hole 0),
                              template_app
                               (template_hole 15,
                                template_app
                                 (template_hole 14,
                                  template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_hole 4,
    template_app
     (template_app
       (template_app
         (template_hole 3,
          template_app
           (template_hole 2,
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_var 3)))),
        template_hole 1),
      template_app
       (template_hole 10,
        template_app
         (template_hole 9,
          template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 3))))),
  template_app
   (template_hole 2,
    template_app
     (template_hole 9,
      template_app
       (template_app (template_hole 8, template_hole 7), template_var 3)))),
template_hole 1),
                                    template_app
                                     (template_hole 10,
template_app
 (template_hole 9,
  template_app
   (template_app (template_hole 8, template_hole 7),
    template_var 3)))))))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 17, template_var 2),
             template_var 0)
           ))),
    ("Sparc_Properties.jmpl_instr_low_equal_sub1",
     "low_equal ?s1.0 ?s2.0 &
      ?t1.0 =
      snd (fst (write_cpu
                 (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0))))
                 nPC
                 (snd (fst (write_cpu
                             (cpu_reg_val nPC
                               (snd (fst
(write_reg (cpu_reg_val PC (snd (fst (get_curr_win () ?s1.0))))
  (fst (fst (get_curr_win () ?s2.0))) (get_operand_w5 (snd ?instr ! 3))
  (snd (fst (get_curr_win () ?s1.0)))))))
                             PC (snd (fst
 (write_reg (cpu_reg_val PC (snd (fst (get_curr_win () ?s1.0))))
   (fst (fst (get_curr_win () ?s2.0))) (get_operand_w5 (snd ?instr ! 3))
   (snd (fst (get_curr_win () ?s1.0))))))))))) &
      ?t2.0 =
      snd (fst (write_cpu
                 (get_addr (snd ?instr) (snd (fst (get_curr_win () ?s2.0))))
                 nPC
                 (snd (fst (write_cpu
                             (cpu_reg_val nPC
                               (snd (fst
(write_reg (cpu_reg_val PC (snd (fst (get_curr_win () ?s2.0))))
  (fst (fst (get_curr_win () ?s2.0))) (get_operand_w5 (snd ?instr ! 3))
  (snd (fst (get_curr_win () ?s2.0)))))))
                             PC (snd (fst
 (write_reg (cpu_reg_val PC (snd (fst (get_curr_win () ?s2.0))))
   (fst (fst (get_curr_win () ?s2.0))) (get_operand_w5 (snd ?instr ! 3))
   (snd (fst (get_curr_win () ?s2.0))))))))))) ==>
      low_equal ?t1.0 ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 19, template_var 2),
                    template_app
                     (template_hole 18,
                      template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 16,
                              template_app
                               (template_app
                                 (template_hole 15,
                                  template_app
                                   (template_hole 14, template_var 1)),
                                template_app
                                 (template_hole 13,
                                  template_app
                                   (template_hole 12,
                                    template_app
                                     (template_app
 (template_hole 11, template_hole 10),
template_var 3))))),
                            template_hole 9),
                          template_app
                           (template_hole 18,
                            template_app
                             (template_hole 17,
                              template_app
                               (template_app
                                 (template_app
                                   (template_hole 16,
                                    template_app
                                     (template_app
 (template_hole 8, template_hole 9),
template_app
 (template_hole 18,
  template_app
   (template_hole 17,
    template_app
     (template_app
       (template_app
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 8, template_hole 6),
              template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_hole 10),
                    template_var 4))))),
          template_app
           (template_hole 5,
            template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_var 3)))),
        template_app
         (template_hole 4,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 14, template_var 1)),
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_hole 0))))),
      template_app
       (template_hole 13,
        template_app
         (template_hole 12,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 4)))))))),
                                  template_hole 6),
                                template_app
                                 (template_hole 18,
                                  template_app
                                   (template_hole 17,
                                    template_app
                                     (template_app
 (template_app
   (template_app
     (template_hole 7,
      template_app
       (template_app (template_hole 8, template_hole 6),
        template_app
         (template_hole 13,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 4))))),
    template_app
     (template_hole 5,
      template_app
       (template_hole 12,
        template_app
         (template_app (template_hole 11, template_hole 10),
          template_var 3)))),
  template_app
   (template_hole 4,
    template_app
     (template_app
       (template_hole 3, template_app (template_hole 14, template_var 1)),
      template_app
       (template_hole 2,
        template_app (template_hole 1, template_hole 0))))),
template_app
 (template_hole 13,
  template_app
   (template_hole 12,
    template_app
     (template_app (template_hole 11, template_hole 10),
      template_var 4)))))))))))))),
                template_app
                 (template_app (template_hole 19, template_var 0),
                  template_app
                   (template_hole 18,
                    template_app
                     (template_hole 17,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_app
                               (template_hole 15,
                                template_app
                                 (template_hole 14, template_var 1)),
                              template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12,
                                  template_app
                                   (template_app
                                     (template_hole 11, template_hole 10),
                                    template_var 3))))),
                          template_hole 9),
                        template_app
                         (template_hole 18,
                          template_app
                           (template_hole 17,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 16,
                                  template_app
                                   (template_app
                                     (template_hole 8, template_hole 9),
                                    template_app
                                     (template_hole 18,
template_app
 (template_hole 17,
  template_app
   (template_app
     (template_app
       (template_app
         (template_hole 7,
          template_app
           (template_app (template_hole 8, template_hole 6),
            template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 3))))),
        template_app
         (template_hole 5,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_hole 10),
              template_var 3)))),
      template_app
       (template_hole 4,
        template_app
         (template_app
           (template_hole 3,
            template_app (template_hole 14, template_var 1)),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_hole 0))))),
    template_app
     (template_hole 13,
      template_app
       (template_hole 12,
        template_app
         (template_app (template_hole 11, template_hole 10),
          template_var 3)))))))),
                                template_hole 6),
                              template_app
                               (template_hole 18,
                                template_app
                                 (template_hole 17,
                                  template_app
                                   (template_app
                                     (template_app
 (template_app
   (template_hole 7,
    template_app
     (template_app (template_hole 8, template_hole 6),
      template_app
       (template_hole 13,
        template_app
         (template_hole 12,
          template_app
           (template_app (template_hole 11, template_hole 10),
            template_var 3))))),
  template_app
   (template_hole 5,
    template_app
     (template_hole 12,
      template_app
       (template_app (template_hole 11, template_hole 10),
        template_var 3)))),
template_app
 (template_hole 4,
  template_app
   (template_app
     (template_hole 3, template_app (template_hole 14, template_var 1)),
    template_app
     (template_hole 2, template_app (template_hole 1, template_hole 0))))),
                                    template_app
                                     (template_hole 13,
template_app
 (template_hole 12,
  template_app
   (template_app (template_hole 11, template_hole 10),
    template_var 3)))))))))))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 20, template_var 2),
             template_var 0)
           ))),
    ("Sparc_Properties.virt_to_phys_unchanged2_sub1",
     "(case mem_context_val_w32 (word_of_int 9)
             (ucast (or (?v1.0 >> 11 << 11) (and ?v2.0 511 << 2)))
             (mem ?s2.0) of
       None => None
       | Some lvl1_page_table =>
           ptd_lookup ?va lvl1_page_table (mem ?s2.0) 1) =
      (case mem_context_val_w32 (word_of_int 9)
             (ucast (or (?v1.0 >> 11 << 11) (and ?v2.0 511 << 2)))
             ((mem ?s2.0)
              (10 := mem ?s2.0 10(?addr |-> ?val),
               11 := (mem ?s2.0 11)(?addr := None))) of
       None => None
       | Some lvl1_page_table =>
           ptd_lookup ?va lvl1_page_table
            ((mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)))
            1)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 22, template_hole 21), t_empty),
         template_app
          (template_app
            (template_app
              (template_hole 17,
               template_app
                (template_hole 16,
                 template_app
                  (template_hole 15,
                   template_app
                    (template_hole 14,
                     template_app
                      (template_hole 13,
                       template_app
                        (template_hole 13, template_hole 12)))))),
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 3),
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 13, template_hole 12)))))),
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 14,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13, template_hole 12)))))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 14,
                                 template_app
                                  (template_hole 14,
                                   template_app
                                    (template_hole 14,
                                     template_app
(template_hole 14,
 template_app (template_hole 14, template_hole 12))))))))))),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 13, template_hole 12)))))),
           template_app (template_hole 19, template_var 4))),
       template_app
        (template_app
          (template_app (template_hole 22, template_hole 21), t_empty),
         template_app
          (template_app
            (template_app
              (template_hole 17,
               template_app
                (template_hole 16,
                 template_app
                  (template_hole 15,
                   template_app
                    (template_hole 14,
                     template_app
                      (template_hole 13,
                       template_app
                        (template_hole 13, template_hole 12)))))),
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 3),
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 13, template_hole 12)))))),
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 14,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13, template_hole 12)))))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 14,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 14,
                                 template_app
                                  (template_hole 14,
                                   template_app
                                    (template_hole 14,
                                     template_app
(template_hole 14,
 template_app (template_hole 14, template_hole 12))))))))))),
                   template_app
                    (template_hole 7,
                     template_app (template_hole 13, template_hole 12)))))),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 19, template_var 4)),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 13,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13, template_hole 12))))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 19, template_var 4),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 13,
                               template_app
                                (template_hole 14,
                                 template_app
                                  (template_hole 13, template_hole 12)))))),
                       template_var 1),
                     template_app (template_hole 1, template_var 0)))),
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 14,
                   template_app
                    (template_hole 14,
                     template_app (template_hole 13, template_hole 12))))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 19, template_var 4),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 14,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13, template_hole 12)))))),
                 template_var 1),
               template_hole 0)))))),
    ("Sparc_Properties.mem_val_alt_8_unchanged0",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 10, template_hole 9))))),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_hole 9)))))))))))))))))))))))))))))))))))))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 10, template_hole 9))))),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_hole 9)))))))))))))))))))))))))))))))))))))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_10_unchanged0",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app (template_hole 10, template_hole 8))))),
             template_app
              (template_app (template_hole 7, template_var 2),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 9,
     template_app
      (template_hole 9,
       template_app
        (template_hole 9,
         template_app
          (template_hole 9,
           template_app
            (template_hole 9,
             template_app
              (template_hole 9,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 9,
     template_app
      (template_hole 9,
       template_app
        (template_hole 9,
         template_app
          (template_hole 9,
           template_hole 8)))))))))))))))))))))))))))))))))))))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app (template_hole 10, template_hole 8))))),
             template_app
              (template_app (template_hole 7, template_var 2),
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 9,
     template_app
      (template_hole 9,
       template_app
        (template_hole 9,
         template_app
          (template_hole 9,
           template_app
            (template_hole 9,
             template_app
              (template_hole 9,
               template_app
                (template_hole 9,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_hole 9,
 template_app
  (template_hole 9,
   template_app
    (template_hole 9,
     template_app
      (template_hole 9,
       template_app
        (template_hole 9,
         template_app
          (template_hole 9,
           template_hole 8)))))))))))))))))))))))))))))))))))))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_8_unchanged1",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732 + 1)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732 + 1)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 12, template_hole 11))))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 12,
                       template_app
                        (template_hole 12,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 7,
                                   template_app
                                    (template_hole 7,
                                     template_app
(template_hole 7,
 template_app
  (template_hole 7,
   template_app
    (template_hole 7,
     template_app
      (template_hole 7,
       template_app
        (template_hole 7,
         template_app
          (template_hole 7,
           template_app
            (template_hole 7,
             template_app
              (template_hole 7,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 7,
                                   template_app
                                    (template_hole 7,
                                     template_app
(template_hole 7,
 template_app
  (template_hole 7,
   template_app
    (template_hole 7,
     template_app
      (template_hole 7,
       template_app
        (template_hole 7,
         template_app
          (template_hole 7,
           template_app
            (template_hole 7,
             template_app
              (template_hole 7,
               template_hole 11)))))))))))))))))))))))))))))))))))))),
               template_hole 6)),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 12, template_hole 11))))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 12,
                       template_app
                        (template_hole 12,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 7,
                                   template_app
                                    (template_hole 7,
                                     template_app
(template_hole 7,
 template_app
  (template_hole 7,
   template_app
    (template_hole 7,
     template_app
      (template_hole 7,
       template_app
        (template_hole 7,
         template_app
          (template_hole 7,
           template_app
            (template_hole 7,
             template_app
              (template_hole 7,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 7,
                                   template_app
                                    (template_hole 7,
                                     template_app
(template_hole 7,
 template_app
  (template_hole 7,
   template_app
    (template_hole 7,
     template_app
      (template_hole 7,
       template_app
        (template_hole 7,
         template_app
          (template_hole 7,
           template_app
            (template_hole 7,
             template_app
              (template_hole 7,
               template_hole 11)))))))))))))))))))))))))))))))))))))),
               template_hole 6)),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_10_unchanged1",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732 + 1)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732 + 1)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 12, template_hole 10))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 12,
                       template_app
                        (template_hole 12,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_hole 10)))))))))))))))))))))))))))))))))))))),
               template_hole 6)),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 12, template_hole 10))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 12,
                       template_app
                        (template_hole 12,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_hole 10)))))))))))))))))))))))))))))))))))))),
               template_hole 6)),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_8_unchanged2",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732 + 2)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732 + 2)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 11, template_hole 10))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_hole 10)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 7,
                 template_app (template_hole 11, template_hole 10)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 11, template_hole 10))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_hole 10)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 7,
                 template_app (template_hole 11, template_hole 10)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_8_unchanged3",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732 + 3)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732 + 3)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 11, template_hole 10))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_hole 10)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 10)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 11, template_hole 10))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 6,
   template_app
    (template_hole 6,
     template_app
      (template_hole 6,
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_hole 10)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 7,
                 template_app (template_hole 6, template_hole 10)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_10_unchanged2",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732 + 2)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732 + 2)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 11, template_hole 9))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_hole 9)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 6,
                 template_app (template_hole 11, template_hole 9)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 11, template_hole 9))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_hole 9)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 6,
                 template_app (template_hole 11, template_hole 9)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.mem_val_alt_10_unchanged3",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732 + 3)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732 + 3)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 11, template_hole 9))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_hole 9)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 6,
                 template_app (template_hole 10, template_hole 9)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 4)),
         template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_hole 12,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 11, template_hole 9))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_app
                (template_hole 10,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10,
 template_app
  (template_hole 10,
   template_app
    (template_hole 10,
     template_app
      (template_hole 10,
       template_app
        (template_hole 10,
         template_app
          (template_hole 10,
           template_app
            (template_hole 10,
             template_app
              (template_hole 10,
               template_hole 9)))))))))))))))))))))))))))))))))))))),
               template_app
                (template_hole 6,
                 template_app (template_hole 10, template_hole 9)))),
           template_app
            (template_app (template_hole 5, t_empty), template_var 3))))),
    ("Sparc_Properties.non_interference_induct_case",
     "((ALL i t.
           i <= ?n & SEQ i ?s1.0 = Some t -->
           good_context t & get_delayed_pool t = [] & get_trap_set t = {}) &
       (ALL i t.
           i <= ?n & SEQ i ?s2.0 = Some t -->
           good_context t &
           get_delayed_pool t = [] & get_trap_set t = {}) -->
       (EX t1.
           Some t1 = SEQ ?n ?s1.0 &
           (EX t2.
               Some t2 = SEQ ?n ?s2.0 &
               get_S (cpu_reg_val PSR t1) = 0 &
               get_S (cpu_reg_val PSR t2) = 0 & low_equal t1 t2))) &
      (ALL i t.
          i <= Suc ?n & SEQ i ?s1.0 = Some t -->
          good_context t & get_delayed_pool t = [] & get_trap_set t = {}) &
      (ALL i t.
          i <= Suc ?n & SEQ i ?s2.0 = Some t -->
          good_context t &
          get_delayed_pool t = [] & get_trap_set t = {}) ==>
      EX t1.
         Some t1 = (case SEQ ?n ?s1.0 of None => None | Some x => NEXT x) &
         (EX t2.
             Some t2 =
             (case SEQ ?n ?s2.0 of None => None | Some x => NEXT x) &
             get_S (cpu_reg_val PSR t1) = 0 &
             get_S (cpu_reg_val PSR t2) = 0 & low_equal t1 t2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_hole 25,
                        template_app (template_hole 23, t_empty)),
                      template_app (template_hole 23, t_empty))),
                  template_app (template_hole 10, t_empty))),
              template_app
               (template_app
                 (template_hole 25,
                  template_app (template_hole 23, t_empty)),
                template_app (template_hole 23, t_empty)))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Sparc_Properties.supported_instr_set",
     "supported_instruction ?i = True ==>
      ?i : {load_store_type LDSB, load_store_type LDUB,
            load_store_type LDUBA, load_store_type LDUH, load_store_type LD,
            load_store_type LDA, load_store_type LDD, load_store_type STB,
            load_store_type STH, load_store_type ST, load_store_type STA,
            load_store_type STD, sethi_type SETHI, nop_type NOP,
            logic_type ANDs, logic_type ANDcc, logic_type ANDN,
            logic_type ANDNcc, logic_type ORs, logic_type ORcc,
            logic_type ORN, logic_type XORs, logic_type XNOR,
            shift_type SLL, shift_type SRL, shift_type SRA, arith_type ADD,
            arith_type ADDcc, arith_type ADDX, arith_type SUB,
            arith_type SUBcc, arith_type SUBX, arith_type UMUL,
            arith_type SMUL, arith_type SMULcc, arith_type UDIV,
            arith_type UDIVcc, arith_type SDIV, ctrl_type SAVE,
            ctrl_type RESTORE, call_type CALL, ctrl_type JMPL,
            ctrl_type RETT, sreg_type RDY, sreg_type RDPSR, sreg_type RDWIM,
            sreg_type RDTBR, sreg_type WRY, sreg_type WRPSR,
            sreg_type WRWIM, sreg_type WRTBR, load_store_type FLUSH,
            bicc_type BE, bicc_type BNE, bicc_type BGU, bicc_type BLE,
            bicc_type BL, bicc_type BGE, bicc_type BNEG, bicc_type BG,
            bicc_type BCS, bicc_type BLEU, bicc_type BCC, bicc_type BA,
            bicc_type BN}",
     template_implication
      ([template_equation
         (template_app (template_hole 79, template_var 0),
          template_hole 78)],
       template_predicate
        (
           template_app
            (template_app (template_hole 77, template_var 0),
             template_app
              (template_app
                (template_hole 76,
                 template_app (template_hole 75, template_hole 74)),
               template_app
                (template_app
                  (template_hole 76,
                   template_app (template_hole 75, template_hole 73)),
                 template_app
                  (template_app
                    (template_hole 76,
                     template_app (template_hole 75, template_hole 72)),
                   template_app
                    (template_app
                      (template_hole 76,
                       template_app (template_hole 75, template_hole 71)),
                     template_app
                      (template_app
                        (template_hole 76,
                         template_app (template_hole 75, template_hole 70)),
                       template_app
                        (template_app
                          (template_hole 76,
                           template_app
                            (template_hole 75, template_hole 69)),
                         template_app
                          (template_app
                            (template_hole 76,
                             template_app
                              (template_hole 75, template_hole 68)),
                           template_app
                            (template_app
                              (template_hole 76,
                               template_app
                                (template_hole 75, template_hole 67)),
                             template_app
                              (template_app
                                (template_hole 76,
                                 template_app
                                  (template_hole 75, template_hole 66)),
                               template_app
                                (template_app
                                  (template_hole 76,
                                   template_app
                                    (template_hole 75, template_hole 65)),
                                 template_app
                                  (template_app
                                    (template_hole 76,
                                     template_app
(template_hole 75, template_hole 64)),
                                   template_app
                                    (template_app
(template_hole 76, template_app (template_hole 75, template_hole 63)),
                                     template_app
(template_app
  (template_hole 76, template_app (template_hole 62, template_hole 61)),
 template_app
  (template_app
    (template_hole 76, template_app (template_hole 60, template_hole 59)),
   template_app
    (template_app
      (template_hole 76, template_app (template_hole 58, template_hole 57)),
     template_app
      (template_app
        (template_hole 76,
         template_app (template_hole 58, template_hole 56)),
       template_app
        (template_app
          (template_hole 76,
           template_app (template_hole 58, template_hole 55)),
         template_app
          (template_app
            (template_hole 76,
             template_app (template_hole 58, template_hole 54)),
           template_app
            (template_app
              (template_hole 76,
               template_app (template_hole 58, template_hole 53)),
             template_app
              (template_app
                (template_hole 76,
                 template_app (template_hole 58, template_hole 52)),
               template_app
                (template_app
                  (template_hole 76,
                   template_app (template_hole 58, template_hole 51)),
                 template_app
                  (template_app
                    (template_hole 76,
                     template_app (template_hole 58, template_hole 50)),
                   template_app
                    (template_app
                      (template_hole 76,
                       template_app (template_hole 58, template_hole 49)),
                     template_app
                      (template_app
                        (template_hole 76,
                         template_app (template_hole 48, template_hole 47)),
                       template_app
                        (template_app
                          (template_hole 76,
                           template_app
                            (template_hole 48, template_hole 46)),
                         template_app
                          (template_app
                            (template_hole 76,
                             template_app
                              (template_hole 48, template_hole 45)),
                           template_app
                            (template_app
                              (template_hole 76,
                               template_app
                                (template_hole 44, template_hole 43)),
                             template_app
                              (template_app
                                (template_hole 76,
                                 template_app
                                  (template_hole 44, template_hole 42)),
                               template_app
                                (template_app
                                  (template_hole 76,
                                   template_app
                                    (template_hole 44, template_hole 41)),
                                 template_app
                                  (template_app
                                    (template_hole 76,
                                     template_app
(template_hole 44, template_hole 40)),
                                   template_app
                                    (template_app
(template_hole 76, template_app (template_hole 44, template_hole 39)),
                                     template_app
(template_app
  (template_hole 76, template_app (template_hole 44, template_hole 38)),
 template_app
  (template_app
    (template_hole 76, template_app (template_hole 44, template_hole 37)),
   template_app
    (template_app
      (template_hole 76, template_app (template_hole 44, template_hole 36)),
     template_app
      (template_app
        (template_hole 76,
         template_app (template_hole 44, template_hole 35)),
       template_app
        (template_app
          (template_hole 76,
           template_app (template_hole 44, template_hole 34)),
         template_app
          (template_app
            (template_hole 76,
             template_app (template_hole 44, template_hole 33)),
           template_app
            (template_app
              (template_hole 76,
               template_app (template_hole 44, template_hole 32)),
             template_app
              (template_app
                (template_hole 76,
                 template_app (template_hole 31, template_hole 30)),
               template_app
                (template_app
                  (template_hole 76,
                   template_app (template_hole 31, template_hole 29)),
                 template_app
                  (template_app
                    (template_hole 76,
                     template_app (template_hole 28, template_hole 27)),
                   template_app
                    (template_app
                      (template_hole 76,
                       template_app (template_hole 31, template_hole 26)),
                     template_app
                      (template_app
                        (template_hole 76,
                         template_app (template_hole 31, template_hole 25)),
                       template_app
                        (template_app
                          (template_hole 76,
                           template_app
                            (template_hole 24, template_hole 23)),
                         template_app
                          (template_app
                            (template_hole 76,
                             template_app
                              (template_hole 24, template_hole 22)),
                           template_app
                            (template_app
                              (template_hole 76,
                               template_app
                                (template_hole 24, template_hole 21)),
                             template_app
                              (template_app
                                (template_hole 76,
                                 template_app
                                  (template_hole 24, template_hole 20)),
                               template_app
                                (template_app
                                  (template_hole 76,
                                   template_app
                                    (template_hole 24, template_hole 19)),
                                 template_app
                                  (template_app
                                    (template_hole 76,
                                     template_app
(template_hole 24, template_hole 18)),
                                   template_app
                                    (template_app
(template_hole 76, template_app (template_hole 24, template_hole 17)),
                                     template_app
(template_app
  (template_hole 76, template_app (template_hole 24, template_hole 16)),
 template_app
  (template_app
    (template_hole 76, template_app (template_hole 75, template_hole 15)),
   template_app
    (template_app
      (template_hole 76, template_app (template_hole 14, template_hole 13)),
     template_app
      (template_app
        (template_hole 76,
         template_app (template_hole 14, template_hole 12)),
       template_app
        (template_app
          (template_hole 76,
           template_app (template_hole 14, template_hole 11)),
         template_app
          (template_app
            (template_hole 76,
             template_app (template_hole 14, template_hole 10)),
           template_app
            (template_app
              (template_hole 76,
               template_app (template_hole 14, template_hole 9)),
             template_app
              (template_app
                (template_hole 76,
                 template_app (template_hole 14, template_hole 8)),
               template_app
                (template_app
                  (template_hole 76,
                   template_app (template_hole 14, template_hole 7)),
                 template_app
                  (template_app
                    (template_hole 76,
                     template_app (template_hole 14, template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 76,
                       template_app (template_hole 14, template_hole 5)),
                     template_app
                      (template_app
                        (template_hole 76,
                         template_app (template_hole 14, template_hole 4)),
                       template_app
                        (template_app
                          (template_hole 76,
                           template_app
                            (template_hole 14, template_hole 3)),
                         template_app
                          (template_app
                            (template_hole 76,
                             template_app
                              (template_hole 14, template_hole 2)),
                           template_app
                            (template_app
                              (template_hole 76,
                               template_app
                                (template_hole 14, template_hole 1)),
                             template_hole
                              0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
           ))),
    ("Sparc_Properties.virt_to_phys_unchanged_sub1",
     "(let context_table_entry = or (?v1.0 >> 11 << 11) (and ?v2.0 511 << 2)
       in Let (mem_context_val_w32 (word_of_int 9)
                (ucast context_table_entry) (mem ?s1.0))
           (case_option None
             (%lvl1_page_table.
                 ptd_lookup ?va lvl1_page_table (mem ?s1.0) 1))) =
      (let context_table_entry = or (?v1.0 >> 11 << 11) (and ?v2.0 511 << 2)
       in Let (mem_context_val_w32 (word_of_int 9)
                (ucast context_table_entry) (mem ?s2.0))
           (case_option None
             (%lvl1_page_table.
                 ptd_lookup ?va lvl1_page_table (mem ?s2.0) 1))) ==>
      (let context_table_entry = or (?v1.0 >> 11 << 11) (and ?v2.0 511 << 2)
       in Let (mem_context_val_w32 (word_of_int 9)
                (ucast context_table_entry)
                ((mem ?s1.0)
                 (10 := mem ?s1.0 10(?addr |-> ?val),
                  11 := (mem ?s1.0 11)(?addr := None))))
           (case_option None
             (%lvl1_page_table.
                 ptd_lookup ?va lvl1_page_table
                  ((mem ?s1.0)
                   (10 := mem ?s1.0 10(?addr |-> ?val),
                    11 := (mem ?s1.0 11)(?addr := None)))
                  1))) =
      (let context_table_entry = or (?v1.0 >> 11 << 11) (and ?v2.0 511 << 2)
       in Let (mem_context_val_w32 (word_of_int 9)
                (ucast context_table_entry)
                ((mem ?s2.0)
                 (10 := mem ?s2.0 10(?addr |-> ?val),
                  11 := (mem ?s2.0 11)(?addr := None))))
           (case_option None
             (%lvl1_page_table.
                 ptd_lookup ?va lvl1_page_table
                  ((mem ?s2.0)
                   (10 := mem ?s2.0 10(?addr |-> ?val),
                    11 := (mem ?s2.0 11)(?addr := None)))
                  1)))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 22, template_var 6),
                        template_app
                         (template_hole 21,
                          template_app
                           (template_hole 20,
                            template_app
                             (template_hole 20,
                              template_app
                               (template_hole 19, template_hole 18)))))),
                    template_app
                     (template_hole 21,
                      template_app
                       (template_hole 20,
                        template_app
                         (template_hole 20,
                          template_app
                           (template_hole 19, template_hole 18)))))),
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 17, template_var 5),
                      template_app
                       (template_hole 16,
                        template_app
                         (template_hole 20,
                          template_app
                           (template_hole 20,
                            template_app
                             (template_hole 20,
                              template_app
                               (template_hole 20,
                                template_app
                                 (template_hole 20,
                                  template_app
                                   (template_hole 20,
                                    template_app
                                     (template_hole 20,
template_app (template_hole 20, template_hole 18))))))))))),
                  template_app
                   (template_hole 21,
                    template_app (template_hole 19, template_hole 18))))),
            t_empty),
          template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 22, template_var 6),
                        template_app
                         (template_hole 21,
                          template_app
                           (template_hole 20,
                            template_app
                             (template_hole 20,
                              template_app
                               (template_hole 19, template_hole 18)))))),
                    template_app
                     (template_hole 21,
                      template_app
                       (template_hole 20,
                        template_app
                         (template_hole 20,
                          template_app
                           (template_hole 19, template_hole 18)))))),
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 17, template_var 5),
                      template_app
                       (template_hole 16,
                        template_app
                         (template_hole 20,
                          template_app
                           (template_hole 20,
                            template_app
                             (template_hole 20,
                              template_app
                               (template_hole 20,
                                template_app
                                 (template_hole 20,
                                  template_app
                                   (template_hole 20,
                                    template_app
                                     (template_hole 20,
template_app (template_hole 20, template_hole 18))))))))))),
                  template_app
                   (template_hole 21,
                    template_app (template_hole 19, template_hole 18))))),
            t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 25,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 22, template_var 6),
                       template_app
                        (template_hole 21,
                         template_app
                          (template_hole 20,
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 19, template_hole 18)))))),
                   template_app
                    (template_hole 21,
                     template_app
                      (template_hole 20,
                       template_app
                        (template_hole 20,
                         template_app
                          (template_hole 19, template_hole 18)))))),
               template_app
                (template_app
                  (template_hole 23,
                   template_app
                    (template_app (template_hole 17, template_var 5),
                     template_app
                      (template_hole 16,
                       template_app
                        (template_hole 20,
                         template_app
                          (template_hole 20,
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 20,
                               template_app
                                (template_hole 20,
                                 template_app
                                  (template_hole 20,
                                   template_app
                                    (template_hole 20,
                                     template_app
(template_hole 20, template_hole 18))))))))))),
                 template_app
                  (template_hole 21,
                   template_app (template_hole 19, template_hole 18))))),
           t_empty),
         template_app
          (template_app
            (template_hole 25,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 22, template_var 6),
                       template_app
                        (template_hole 21,
                         template_app
                          (template_hole 20,
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 19, template_hole 18)))))),
                   template_app
                    (template_hole 21,
                     template_app
                      (template_hole 20,
                       template_app
                        (template_hole 20,
                         template_app
                          (template_hole 19, template_hole 18)))))),
               template_app
                (template_app
                  (template_hole 23,
                   template_app
                    (template_app (template_hole 17, template_var 5),
                     template_app
                      (template_hole 16,
                       template_app
                        (template_hole 20,
                         template_app
                          (template_hole 20,
                           template_app
                            (template_hole 20,
                             template_app
                              (template_hole 20,
                               template_app
                                (template_hole 20,
                                 template_app
                                  (template_hole 20,
                                   template_app
                                    (template_hole 20,
                                     template_app
(template_hole 20, template_hole 18))))))))))),
                 template_app
                  (template_hole 21,
                   template_app (template_hole 19, template_hole 18))))),
           t_empty)))),
    ("Sparc_Properties.mem_val_alt_8_mem_equal",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732) ?s2.0 &
      mem_val_alt 8 (and ?pa 68719476732 + 1) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732 + 1) ?s2.0 &
      mem_val_alt 8 (and ?pa 68719476732 + 2) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732 + 2) ?s2.0 &
      mem_val_alt 8 (and ?pa 68719476732 + 3) ?s1.0 =
      mem_val_alt 8 (and ?pa 68719476732 + 3) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6, template_hole 5))))),
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_hole 5)))))))))))))))))))))))))))))))))))))),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6, template_hole 5))))),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_hole 5)))))))))))))))))))))))))))))))))))))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6, template_hole 5))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 4, template_var 0),
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_hole
                            5)))))))))))))))))))))))))))))))))))))),
                           template_hole 0)),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6, template_hole 5))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 4, template_var 0),
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_hole
                          5)))))))))))))))))))))))))))))))))))))),
                         template_hole 0)),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6, template_hole 5))))),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 4, template_var 0),
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_hole
                              5)))))))))))))))))))))))))))))))))))))),
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 6, template_hole 5)))),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6, template_hole 5))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 4, template_var 0),
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_hole
                            5)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 6, template_hole 5)))),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6, template_hole 5))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 4, template_var 0),
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_hole
                            5)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_hole 5)))),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6, template_hole 5))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 4, template_var 0),
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2,
     template_app
      (template_hole 2,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 2,
                         template_hole
                          5)))))))))))))))))))))))))))))))))))))),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 5)))),
                     template_var 1)))))
           ))),
    ("Sparc_Properties.mem_val_alt_10_mem_equal",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732) ?s2.0 &
      mem_val_alt 10 (and ?pa 68719476732 + 1) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732 + 1) ?s2.0 &
      mem_val_alt 10 (and ?pa 68719476732 + 2) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732 + 2) ?s2.0 &
      mem_val_alt 10 (and ?pa 68719476732 + 3) ?s1.0 =
      mem_val_alt 10 (and ?pa 68719476732 + 3) ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 6, template_hole 4))))),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_hole 4)))))))))))))))))))))))))))))))))))))),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 6, template_hole 4))))),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 6,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_hole 4)))))))))))))))))))))))))))))))))))))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 6, template_hole 4))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 3, template_var 0),
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_hole
                            4)))))))))))))))))))))))))))))))))))))),
                           template_hole 0)),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 6, template_hole 4))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 3, template_var 0),
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_hole
                          4)))))))))))))))))))))))))))))))))))))),
                         template_hole 0)),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 6, template_hole 4))))),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 3, template_var 0),
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 6,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_hole
                              4)))))))))))))))))))))))))))))))))))))),
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 6, template_hole 4)))),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 6, template_hole 4))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 3, template_var 0),
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_hole
                            4)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 6, template_hole 4)))),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 6, template_hole 4))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 3, template_var 0),
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 6,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_hole
                            4)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 2,
                             template_app
                              (template_hole 5, template_hole 4)))),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 6, template_hole 4))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 3, template_var 0),
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 5,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 5,
                                     template_app
(template_hole 5,
 template_app
  (template_hole 5,
   template_app
    (template_hole 5,
     template_app
      (template_hole 5,
       template_app
        (template_hole 5,
         template_app
          (template_hole 5,
           template_app
            (template_hole 5,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 5,
                         template_hole
                          4)))))))))))))))))))))))))))))))))))))),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 5, template_hole 4)))),
                     template_var 1)))))
           ))),
    ("Sparc_Properties.mem_val_alt_8_unchanged",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 8 (and ?pa 68719476732)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |)) &
      mem_val_alt 8 (and ?pa 68719476732 + 1)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732 + 1)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |)) &
      mem_val_alt 8 (and ?pa 68719476732 + 2)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732 + 2)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |)) &
      mem_val_alt 8 (and ?pa 68719476732 + 3)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 8 (and ?pa 68719476732 + 3)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12, template_hole 11))))),
                       template_app
                        (template_app (template_hole 10, template_var 2),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_hole 11)))))))))))))))))))))))))))))))))))))),
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_var 4))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_hole 13,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12, template_hole 11))))),
                     template_app
                      (template_app (template_hole 10, template_var 2),
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_hole 11)))))))))))))))))))))))))))))))))))))),
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_var 3)))),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12, template_hole 11))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 10, template_var 2),
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_hole
                            11)))))))))))))))))))))))))))))))))))))),
                           template_hole 0)),
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_var 4))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12, template_hole 11))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_hole 10, template_var 2),
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_hole
                          11)))))))))))))))))))))))))))))))))))))),
                         template_hole 0)),
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_var 3)))),
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_hole 13,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_hole 11))))),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 10, template_var 2),
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 12,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_hole
                              11)))))))))))))))))))))))))))))))))))))),
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 12, template_hole 11)))),
                         template_app
                          (template_app (template_hole 7, t_empty),
                           template_var 4))),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12, template_hole 11))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 10, template_var 2),
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_hole
                            11)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 12, template_hole 11)))),
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_var 3)))),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12, template_hole 11))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 10, template_var 2),
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_hole
                            11)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8, template_hole 11)))),
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_var 4))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 12, template_hole 11))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_hole 10, template_var 2),
                             template_app
                              (template_hole 9,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 8,
                                     template_app
(template_hole 8,
 template_app
  (template_hole 8,
   template_app
    (template_hole 8,
     template_app
      (template_hole 8,
       template_app
        (template_hole 8,
         template_app
          (template_hole 8,
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 8,
                         template_hole
                          11)))))))))))))))))))))))))))))))))))))),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_hole 11)))),
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_var 3))))))
           ))),
    ("Sparc_Properties.mem_val_alt_10_unchanged",
     "mem_equal ?s1.0 ?s2.0 ?pa ==>
      mem_val_alt 10 (and ?pa 68719476732)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |)) &
      mem_val_alt 10 (and ?pa 68719476732 + 1)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732 + 1)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |)) &
      mem_val_alt 10 (and ?pa 68719476732 + 2)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732 + 2)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |)) &
      mem_val_alt 10 (and ?pa 68719476732 + 3)
       (?s1.0
        (| mem := (mem ?s1.0)
             (10 := mem ?s1.0 10(?addr |-> ?val),
              11 := (mem ?s1.0 11)(?addr := None)) |)) =
      mem_val_alt 10 (and ?pa 68719476732 + 3)
       (?s2.0
        (| mem := (mem ?s2.0)
             (10 := mem ?s2.0 10(?addr |-> ?val),
              11 := (mem ?s2.0 11)(?addr := None)) |))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 12, template_hole 10))))),
                       template_app
                        (template_app (template_hole 9, template_var 2),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_hole 10)))))))))))))))))))))))))))))))))))))),
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_var 4))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_hole 13,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 12, template_hole 10))))),
                     template_app
                      (template_app (template_hole 9, template_var 2),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 12,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_hole 10)))))))))))))))))))))))))))))))))))))),
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_var 3)))),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 12, template_hole 10))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 9, template_var 2),
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_hole
                            10)))))))))))))))))))))))))))))))))))))),
                           template_hole 0)),
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_var 4))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 12, template_hole 10))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 9, template_var 2),
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_hole
                          10)))))))))))))))))))))))))))))))))))))),
                         template_hole 0)),
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_var 3)))),
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_hole 13,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 12,
                                     template_hole 10))))),
                           template_app
                            (template_app
                              (template_hole 1,
                               template_app
                                (template_app
                                  (template_hole 9, template_var 2),
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 12,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_hole
                              10)))))))))))))))))))))))))))))))))))))),
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 12, template_hole 10)))),
                         template_app
                          (template_app (template_hole 7, t_empty),
                           template_var 4))),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 12, template_hole 10))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 9, template_var 2),
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_hole
                            10)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 12, template_hole 10)))),
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_var 3)))),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 12, template_hole 10))))),
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 9, template_var 2),
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_hole
                            10)))))))))))))))))))))))))))))))))))))),
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 11, template_hole 10)))),
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_var 4))),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 12, template_hole 10))))),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 9, template_var 2),
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 11,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 11,
 template_app
  (template_hole 11,
   template_app
    (template_hole 11,
     template_app
      (template_hole 11,
       template_app
        (template_hole 11,
         template_app
          (template_hole 11,
           template_app
            (template_hole 11,
             template_app
              (template_hole 11,
               template_app
                (template_hole 11,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_hole 11,
                       template_app
                        (template_hole 11,
                         template_hole
                          10)))))))))))))))))))))))))))))))))))))),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 11, template_hole 10)))),
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_var 3))))))
           )))]:
   (string * thm * template) list
### theory "Draft.Sparc_PropertiesMoreTemplates"
### 1.020s elapsed time, 1.146s cpu time, 0.083s GC time
val it = (): unit
