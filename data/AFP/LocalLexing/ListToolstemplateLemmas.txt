   [("ListTools.is_first_cons", "is_first ?x (?y # ?ys) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation (template_var 2, template_var 1))),
    ("ListTools.is_proper_suffix_length_cmp",
     "is_proper_suffix ?a ?b ==> length ?a < length ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ListTools.is_prefix_eq_proper_prefix",
     "is_prefix ?a ?b = (?a = ?b | is_proper_prefix ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ListTools.is_suffix_eq_proper_suffix",
     "is_suffix ?a ?b = (?a = ?b | is_proper_suffix ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ListTools.is_proper_prefix_eq_prefix",
     "is_proper_prefix ?a ?b = (?a ~= ?b & is_prefix ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ListTools.is_proper_suffix_eq_suffix",
     "is_proper_suffix ?a ?b = (?a ~= ?b & is_suffix ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ListTools.is_prefix_unsplit",
     "is_prefix ?u ?a ==> ?u @ drop (length ?u) ?a = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_var 0))),
    ("ListTools.le_take_same",
     "[| ?i <= ?j; take ?j ?a = take ?j ?b |] ==> take ?i ?a = take ?i ?b",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("ListTools.split_list_at",
     "?k < length ?D ==> ?D = take ?k ?D @ [?D ! ?k] @ drop (Suc ?k) ?D",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 1)),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 0)))))),
    ("ListTools.take_eq_take_append",
     "[| ?i <= ?j; ?j <= length ?a |]
      ==> EX u. take ?j ?a = take ?i ?a @ u",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("ListTools.list_all_pos_neg_ex",
     "[| list_all ?P ?D; ~ list_all ?Q ?D |]
      ==> EX k<length ?D. ?P (?D ! k) & ~ ?Q (?D ! k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)
                )
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("ListTools.is_first_drop_length",
     "[| ?k <= length ?a; length ?u < ?k; ?v = ?X # ?w;
         take ?k ?a = take ?k (?u @ ?v) |]
      ==> is_first ?X (drop (length ?u) ?a)",
     template_implication
      ([template_inequation
         (less_equals, template_var 5,
          template_app (template_hole 7, template_var 4)),
        template_inequation
         (less_than, template_app (template_hole 7, template_var 3),
          template_var 5),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 3, template_var 5),
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 7, template_var 3)),
               template_var 4))
           )))]
