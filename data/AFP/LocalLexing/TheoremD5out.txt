Loading theory "Draft.CFG" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.LocalLexingLemmas" via "Draft.LocalLexing")
Loading theory "Draft.ListTools" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.Validity" via "Draft.Derivations")
Loading theory "Draft.InductRules" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.Validity" via "Draft.Derivations")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
locale CFG
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
  assumes "CFG \<NN> \<TT> \<RR> \<SS>"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.InductRules"
### 0.047s elapsed time, 0.221s cpu time, 0.000s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.ListTools"
### 0.102s elapsed time, 0.429s cpu time, 0.035s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "Draft.CFG"
### 0.110s elapsed time, 0.459s cpu time, 0.035s GC time
Loading theory "Draft.LocalLexing" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.LocalLexingLemmas")
### theory "HOL-Library.Function_Algebras"
### 0.118s elapsed time, 0.494s cpu time, 0.035s GC time
Loading theory "Draft.Derivations" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.Validity")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list (%p. length (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.834s cpu time, 0.079s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
locale CFG
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
  assumes "CFG \<NN> \<TT> \<RR> \<SS>"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.325s elapsed time, 1.275s cpu time, 0.114s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs")
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
locale CFG
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
  assumes "CFG \<NN> \<TT> \<RR> \<SS>"
locale CFG
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
  assumes "CFG \<NN> \<TT> \<RR> \<SS>"
Found termination order:
  "(%p. size_list (%p. length (snd (snd p))) (fst (snd p))) <*mlex*> {}"
Found termination order:
  "case_sum (%p. size (fst p)) (case_sum size (%p. size (fst p))) <*mlex*>
   case_sum (%x. 0) (case_sum (%x. Suc 0) (%x. 0)) <*mlex*>
   case_sum (%p. size (snd p)) (case_sum size (%p. size (snd p))) <*mlex*>
   case_sum (%x. Suc 0) (%x. 0) <*mlex*> {}"
### theory "Draft.LocalLexing"
### 0.685s elapsed time, 2.704s cpu time, 0.279s GC time
Loading theory "Draft.LLEarleyParsing" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.Validity")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order:
  "(%p. size_list (%p. length (snd (snd p))) (fst (snd p))) <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "Draft.Derivations"
### 0.777s elapsed time, 3.064s cpu time, 0.279s GC time
Loading theory "Draft.Limit" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2" via "Draft.LocalLexingLemmas")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  flat :: "'a list stream => 'a stream"
### theory "Draft.Limit"
### 0.396s elapsed time, 1.417s cpu time, 0.550s GC time
Loading theory "Draft.LocalLexingLemmas" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2")
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.LocalLexingLemmas"
### 0.170s elapsed time, 0.669s cpu time, 0.091s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Stream"
### 1.103s elapsed time, 4.199s cpu time, 0.841s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order:
  "case_sum (%p. size (fst p)) (case_sum size (%p. size (fst p))) <*mlex*>
   case_sum (%x. 0) (case_sum (%x. Suc 0) (%x. 0)) <*mlex*>
   case_sum (%p. size (snd p)) (case_sum size (%p. size (snd p))) <*mlex*>
   case_sum (%x. Suc 0) (%x. 0) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.LLEarleyParsing"
### 0.959s elapsed time, 3.409s cpu time, 0.707s GC time
Loading theory "Draft.Validity" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4" via "Draft.TheoremD2")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Validity"
### 0.313s elapsed time, 0.963s cpu time, 0.113s GC time
Loading theory "Draft.TheoremD2" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5" via "Draft.TheoremD4")
### theory "HOL-Library.BigO"
### 0.759s elapsed time, 2.331s cpu time, 0.240s GC time
Found termination order: "size <*mlex*> {}"
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
### theory "HOL-Library.Tree"
### 2.091s elapsed time, 7.158s cpu time, 1.137s GC time
Loading theory "Draft.Templates" (required by "Draft.TheoremD5MoreTemplates" via "Draft.ExtrEqs")
Found termination order: "length <*mlex*> {}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.114s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.TheoremD5MoreTemplates")
### theory "Draft.TheoremD2"
### 0.440s elapsed time, 1.089s cpu time, 0.117s GC time
Loading theory "Draft.TheoremD4" (required by "Draft.TheoremD5MoreTemplates" via "Draft.TheoremD5")
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
### theory "Draft.TheoremD4"
### 0.171s elapsed time, 0.368s cpu time, 0.059s GC time
Loading theory "Draft.TheoremD5" (required by "Draft.TheoremD5MoreTemplates")
locale LocalLexing
  fixes \<NN> :: "symbol set"
    and \<TT> :: "symbol set"
    and \<RR> :: "(symbol * symbol list) set"
    and \<SS> :: "symbol"
    and Lex :: "symbol => character list => nat => nat set"
    and
    Sel ::
      "(symbol * character list) set
       => (symbol * character list) set => (symbol * character list) set"
    and Doc :: "character list"
  assumes "LocalLexing \<NN> \<TT> \<RR> \<SS> Lex Sel"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.549s elapsed time, 1.157s cpu time, 0.135s GC time
### theory "Draft.TheoremD5"
### 0.361s elapsed time, 0.714s cpu time, 0.075s GC time
Loading theory "Draft.TheoremD5MoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.TheoremD5MoreTemplates"
### 0.299s elapsed time, 0.472s cpu time, 0.067s GC time
val it = (): unit
