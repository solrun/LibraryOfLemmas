   [("Challenge1_short.grow1_correct",
     "[| gap_invar ?gb1;
         SPEC
          (%gb'. gap_invar gb' &
                 gap_\<alpha> gb' = gap_\<alpha> ?gb1 &
                 (0 < ?K1 --> can_insert gb'))
         <= SPEC ?Postcond |]
      ==> grow1 ?K1 ?gb1 <= SPEC ?Postcond",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 9, template_app (template_hole 8, t_empty)),
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_var 0)))))]
