   [("VTcomp.blit_len",
     "?si + ?len <= length ?src & ?di + ?len <= length ?dst ==>
      length (op_list_blit ?src ?si ?dst ?di ?len) = length ?dst",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3)),
                  template_app (template_hole 2, template_var 2))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 3)),
                template_app (template_hole 2, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 0),
               template_var 1),
             template_var 3)),
         template_app (template_hole 2, template_var 0)))),
    ("VTcomp.array_blit_hnr_mop",
     "(uncurry2
        (uncurry2
          (%src si dst di len.
              blit src si dst di len >>= (%_. return dst))),
       uncurry2 (uncurry2 mop_list_blit))
      : (array_assn ?A)\<^sup>k *\<^sub>a nat_assn\<^sup>k *\<^sub>a
        (array_assn ?A)\<^sup>d *\<^sub>a
        nat_assn\<^sup>k *\<^sub>a
        nat_assn\<^sup>k \<rightarrow>\<^sub>a array_assn ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 25,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_hole 23,
                   template_app
                    (template_hole 22,
                     template_app
                      (template_hole 21,
                       template_app (template_hole 20, t_empty))))),
               template_app
                (template_hole 16,
                 template_app
                  (template_hole 15,
                   template_app
                    (template_hole 14,
                     template_app (template_hole 13, template_hole 12)))))),
           template_app
            (template_app
              (template_app (template_hole 11, t_empty),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_hole 4, template_var 0)),
                                 template_hole 10)),
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2, template_hole 1)),
                               template_hole 10))),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_hole 4, template_var 0)),
                           template_hole 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_hole 1)),
                       template_hole 10))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)),
                   template_hole 10))),
             template_app (template_hole 4, template_var 0)))
         )),
    ("VTcomp.efor_rule",
     "[| ?lb <= ?ub; ?I ?lb ?\<sigma>0.0;
         !!i \<sigma>.
            [| ?lb <= i; i < ?ub; ?I i \<sigma> |]
            ==> ?f i \<sigma> <= ESPEC ?E (?I (i + 1));
         !!\<sigma>. ?I ?ub \<sigma> ==> ?P \<sigma> |]
      ==> efor ?lb ?ub ?f ?\<sigma>0.0 <= ESPEC ?E ?P",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 6), template_var 3)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5),
             template_var 2),
           template_var 3),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("VTcomp.array_blit_hnr",
     "(uncurry2
        (uncurry2
          (%src si dst di len.
              blit src si dst di len >>= (%_. return dst))),
       uncurry2
        (uncurry2
          (%x1 x2. RETURN \<circ>\<circ>\<circ> op_list_blit x1 x2)))
      : [pre_list_blit]\<^sub>a (array_assn ?A)\<^sup>k *\<^sub>a
                                nat_assn\<^sup>k *\<^sub>a
                                (array_assn ?A)\<^sup>d *\<^sub>a
                                nat_assn\<^sup>k *\<^sub>a
                                nat_assn\<^sup>k \<rightarrow> array_assn
                          ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 28,
             template_app
              (template_app
                (template_hole 27,
                 template_app
                  (template_hole 26,
                   template_app
                    (template_hole 25,
                     template_app
                      (template_hole 24,
                       template_app (template_hole 23, t_empty))))),
               template_app
                (template_hole 19,
                 template_app
                  (template_hole 18,
                   template_app
                    (template_hole 17,
                     template_app (template_hole 16, t_empty)))))),
           template_app
            (template_app
              (template_app (template_hole 12, template_hole 11),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 5, template_var 0)),
                                 template_hole 4)),
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2, template_hole 1)),
                               template_hole 4))),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_var 0)),
                           template_hole 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_hole 1)),
                       template_hole 4))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)),
                   template_hole 4))),
             template_app (template_hole 5, template_var 0)))
         )),
    ("VTcomp.nfoldli_upt_rule",
     "[| ?lb <= ?ub; ?I ?lb ?\<sigma>0.0;
         !!i \<sigma>.
            [| ?lb <= i; i < ?ub; ?I i \<sigma>; ?c \<sigma> |]
            ==> ?f i \<sigma> <= SPEC (?I (i + 1));
         !!i \<sigma>.
            [| ?lb <= i; i <= ?ub; ?I i \<sigma>; ~ ?c \<sigma> |]
            ==> ?P \<sigma>;
         !!\<sigma>. [| ?I ?ub \<sigma>; ?c \<sigma> |] ==> ?P \<sigma> |]
      ==> nfoldli [?lb..<?ub] ?c ?f ?\<sigma>0.0 <= SPEC ?P",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 6), template_var 3)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 5)),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0)))))]
