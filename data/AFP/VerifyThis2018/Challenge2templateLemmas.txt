   [("Challenge2.valid_line_just_B", "valid (replicate ?n B)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Challenge2.valid_valid_line", "valid ?l = valid_line ?l",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Challenge2.valid_eq_valid'", "valid' ?l = valid ?l",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Challenge2.valid_valid'", "valid ?l ==> valid' ?l",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Challenge2.valid'_valid", "valid' ?l ==> valid ?l",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Challenge2.valid_prepend_B_iff", "valid (B # ?xs) = valid ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Challenge2.valid_line_prepend_B_iff",
     "valid_line (B # ?xs) = valid_line ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Challenge2.valid_line_prepend_B",
     "valid_line ?xs ==> valid_line (B # ?xs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Challenge2.valid_line_drop_B",
     "valid_line (B # ?xs) ==> valid_line ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 2, template_var 0)))),
    ("Challenge2.finite_valid_length",
     "finite {l. length l = ?n & valid l}",
     template_predicate
      (
         template_app
          (template_hole 5, template_app (template_hole 4, t_empty))
         )),
    ("Challenge2.valid_red", "3 <= ?n ==> valid (replicate ?n R)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Challenge2.valid_line_aux", "{l. length l = ?n & valid l} ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 5, t_empty), template_hole 0)
         )),
    ("Challenge2.valid_lineI",
     "(!!i. i < length ?l ==> valid_point ?l i) ==> valid_line ?l",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Challenge2.icount_correct",
     "2 < ?M ==> icount ?M <= SPEC (%r. r = lcount ?M)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6)),
          template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Challenge2.valid_drop_B",
     "[| valid_point (B # ?xs) ?i; 0 < ?i |] ==> valid_point ?xs (?i - 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Challenge2.valid_B_first",
     "[| valid_point ?xs ?i; ?i < length ?xs |]
      ==> valid_point (B # ?xs) (?i + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Challenge2.icount_impl_correct",
     "2 < ?M ==> <emp> icount_impl ?M <%r. \<up> (r = lcount ?M)>\<^sub>t",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_hole 8)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_hole 6),
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("Challenge2.replicate_iff",
     "(ALL i<length ?l. ?l ! i = R) = (EX n. ?l = replicate n R)",
     template_equation
      (template_app (template_hole 9, t_empty),
       template_app (template_hole 2, t_empty))),
    ("Challenge2.replicate_unequal_aux",
     "?x < ?y ==> replicate ?x R @ B # ?l ~= replicate ?y R @ B # ?l'",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_hole 2)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_hole 2)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Challenge2.replicate_Cons_eq",
     "(replicate ?n ?x = ?y # ?ys) =
      (EX n'. ?n = Suc n' & ?x = ?y & replicate n' ?x = ?ys)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Challenge2.replicate_iff2",
     "?n < length ?l ==>
      (ALL i<?n. ?l ! i = R) = (EX l'. ?l = replicate ?n R @ l')",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app (template_hole 8, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("Challenge2.lcrec",
     "3 < ?n ==>
      lcount ?n =
      lcount (?n - 1) + 1 + (SUM i = 3..<?n. lcount (?n - i - 1))",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_hole 7)),
          template_var 0)],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7))),
               template_var 0)))))),
    ("Challenge2.sum_spec",
     "[| ?l1 <= ?u1; !!i. [| ?l1 <= i; i < ?u1 |] ==> ?\<Phi>1 i;
         SPEC (%r. r = sum ?f1 {?l1..<?u1}) <= SPEC ?Postcond |]
      ==> sum_prog ?\<Phi>1 ?l1 ?u1 ?f1 <= SPEC ?Postcond",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)),
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 4),
             template_var 3),
           template_var 1),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_var 0))))),
    ("Challenge2.valid_split",
     "valid ?l =
      (?l = [] |
       ?l ! 0 = B & valid (tl ?l) |
       3 <= length ?l & (ALL i<length ?l. ?l ! i = R) |
       (EX j<length ?l.
           3 <= j &
           (ALL i<j. ?l ! i = R) & ?l ! j = B & valid (drop (j + 1) ?l)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 21,
               template_app
                (template_app (template_hole 20, template_var 0),
                 template_hole 19)),
             template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app (template_hole 16, template_var 0),
                           template_hole 15)),
                       template_hole 14)),
                   template_app
                    (template_hole 22,
                     template_app (template_hole 13, template_var 0)))),
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_hole 9))),
                         template_app (template_hole 8, template_var 0))),
                     template_app (template_hole 7, t_empty))),
                 template_app (template_hole 3, t_empty))))
           ))),
    ("Challenge2.valid_line_split",
     "valid_line ?l =
      (?l = [] |
       ?l ! 0 = B & valid_line (tl ?l) |
       3 <= length ?l & (ALL i<length ?l. ?l ! i = R) |
       (EX j<length ?l.
           3 <= j &
           (ALL i<j. ?l ! i = R) &
           ?l ! j = B & valid_line (drop (j + 1) ?l)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 21,
               template_app
                (template_app (template_hole 20, template_var 0),
                 template_hole 19)),
             template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app (template_hole 16, template_var 0),
                           template_hole 15)),
                       template_hole 14)),
                   template_app
                    (template_hole 22,
                     template_app (template_hole 13, template_var 0)))),
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_hole 9))),
                         template_app (template_hole 8, template_var 0))),
                     template_app (template_hole 7, t_empty))),
                 template_app (template_hole 3, t_empty))))
           ))),
    ("Challenge2.valid_line_cases",
     "valid_line ?l ==>
      ?l = [] |
      ?l ! 0 = B & valid_line (tl ?l) |
      3 <= length ?l & (ALL i<length ?l. ?l ! i = R) |
      (EX j<length ?l.
          3 <= j &
          (ALL i<j. ?l ! i = R) &
          ?l ! j = B & valid_line (drop (j + 1) ?l))",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 21,
               template_app
                (template_app (template_hole 20, template_var 0),
                 template_hole 19)),
             template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app (template_hole 16, template_var 0),
                           template_hole 15)),
                       template_hole 14)),
                   template_app
                    (template_hole 22,
                     template_app (template_hole 13, template_var 0)))),
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_hole 9))),
                         template_app (template_hole 8, template_var 0))),
                     template_app (template_hole 7, t_empty))),
                 template_app (template_hole 3, t_empty))))
           ))),
    ("Challenge2.cases_valid_line",
     "?l = [] |
      ?l ! 0 = B & valid_line (tl ?l) |
      3 <= length ?l & (ALL i<length ?l. ?l ! i = R) |
      (EX j<length ?l.
          3 <= j &
          (ALL i<j. ?l ! i = R) &
          ?l ! j = B & valid_line (drop (j + 1) ?l)) ==>
      valid_line ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 0),
                  template_hole 20)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app
                         (template_hole 18,
                          template_app
                           (template_app (template_hole 17, template_var 0),
                            template_hole 16)),
                        template_hole 15)),
                    template_app
                     (template_hole 14,
                      template_app (template_hole 13, template_var 0)))),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 12,
                            template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10, template_hole 9))),
                          template_app (template_hole 8, template_var 0))),
                      template_app (template_hole 7, t_empty))),
                  template_app (template_hole 3, t_empty))))
            )],
       template_predicate
        (template_app (template_hole 14, template_var 0))))]
