   [("Treap_Sort_and_BSTs.bst_of_list_trees",
     "set ?ys <= ?A ==> bst_of_list ?ys : trees ?A",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Treap_Sort_and_BSTs.insort_wrt_sort_key",
     "set ?xs <= ?A ==>
      insort_wrt (linorder_from_keys ?A ?f) ?xs = sort_key ?f ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Treap_Sort_and_BSTs.treap_of_bst_of_list",
     "inj_on ?p (set ?zs) ==>
      map_tree fst (treap_of (set (map (%x. (x, ?p x)) ?zs))) =
      bst_of_list (sort_key ?p ?zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, t_empty),
                 template_var 0)))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Treap_Sort_and_BSTs.treap_of_bst_of_list''",
     "inj_on ?p (set ?zs) ==>
      map_tree fst (treap_of ((%x. (x, ?p x)) ` set ?zs)) =
      bst_of_list (sort_key ?p ?zs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 8, template_var 0)))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Treap_Sort_and_BSTs.insort_wrt_insort_key",
     "[| ?a : ?A; set ?xs <= ?A |]
      ==> insert_wrt (linorder_from_keys ?A ?f) ?a ?xs =
          insort_key ?f ?a ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_var 1)))),
    ("Treap_Sort_and_BSTs.insort_key_conv_rec_list",
     "insort_key ?f ?x ?xs =
      rec_list [?x]
       (%y ys zs. if ?f ?x <= ?f y then ?x # y # ys else y # zs) ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           t_empty),
         template_var 0))),
    ("Treap_Sort_and_BSTs.sort_key_arg_min_on",
     "[| ?zs ~= []; inj_on ?p (set ?zs) |]
      ==> sort_key ?p ?zs =
          (let z = arg_min_on ?p (set ?zs)
           in z # sort_key ?p (remove1 z ?zs))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 5, template_var 1))),
           t_empty)))),
    ("Treap_Sort_and_BSTs.fst_snd_arg_min_on",
     "[| finite ?B; inj_on ?p ?B; ?B ~= {} |]
      ==> fst (arg_min_on snd ((%x. (x, ?p x)) ` ?B)) = arg_min_on ?p ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, t_empty), template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Treap_Sort_and_BSTs.arg_min_on_image_finite",
     "[| inj_on ?f (?g ` ?B); finite ?B; ?B ~= {} |]
      ==> arg_min_on ?f (?g ` ?B) = ?g (arg_min_on (?f o ?g) ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Treap_Sort_and_BSTs.treap_of_bst_of_list'",
     "[| ?ys = map (%x. (x, ?p x)) ?xs; inj_on ?p (set ?xs);
         ?xs' = sort_key ?p ?xs |]
      ==> map_tree fst (treap_of (set ?ys)) = bst_of_list ?xs'",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 11, t_empty), template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 6, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 3))),
         template_app (template_hole 0, template_var 0)))),
    ("Treap_Sort_and_BSTs.fold_ins_bst_of_list",
     "[| distinct ?zs; inj_on ?p (set ?zs) |]
      ==> map_tree fst
           (foldl (%t (x, p). ins x p t) \<langle>\<rangle>
             (map (%x. (x, ?p x)) ?zs)) =
          bst_of_list (sort_key ?p ?zs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8),
           template_app
            (template_app
              (template_app (template_hole 7, t_empty), template_hole 4),
             template_app
              (template_app (template_hole 3, t_empty), template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)))))]
