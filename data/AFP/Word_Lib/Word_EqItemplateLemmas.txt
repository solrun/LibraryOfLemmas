   [("Word_EqI.word_eqI_simps", "size ?w = LENGTH(?'a)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Word_EqI.word_eqI_simps", "is_down ?c = (LENGTH(?'b) <= LENGTH(?'a))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app (template_hole 1, template_hole 0)))),
    ("Word_EqI.word_eqI_simps", "is_up ?c = (LENGTH(?'a) <= LENGTH(?'b))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app (template_hole 1, template_hole 0)))),
    ("Word_EqI.word_eqI_folds", "?a * (2::?'a) ^ ?n = push_bit ?n ?a",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Word_EqI.word_eqI_folds", "?a div (2::?'a) ^ ?n = drop_bit ?n ?a",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Word_EqI.word_eqI_folds", "?a mod (2::?'a) ^ ?n = take_bit ?n ?a",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Word_EqI.word_eqI_simps", "(?x = ?y) = (ALL n. bit ?x n = bit ?y n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Word_EqI.word_eqI_simps",
     "bit (ucast ?w) ?n = (bit ?w ?n & ?n < LENGTH(?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Word_EqI.word_eqI_simps", "(or ?a ?b = 0) = (?a = 0 & ?b = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Word_EqI.test_bit_lenD", "bit ?x ?n ==> ?n < LENGTH(?'a) & bit ?x ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_hole 0))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))
           ))),
    ("Word_EqI.word_eqI_simps", "is_aligned ?p ?m = (ALL n<?m. ~ bit ?p n)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Word_EqI.word_eqI_simps",
     "bit (not (mask ?n)) ?m = (?n <= ?m & ?m < LENGTH(?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Word_EqI.le_mask_high_bits_len",
     "(?w <= mask ?n) = (ALL i:{?n..<LENGTH(?'a)}. ~ bit ?w i)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_hole 2))),
         t_empty))),
    ("Word_EqI.neg_mask_le_high_bits_len",
     "(not (mask ?n) <= ?w) = (ALL i:{?n..<LENGTH(?'a)}. bit ?w i)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_hole 1))),
         t_empty))),
    ("Word_EqI.word_eqI_rules",
     "(!!n. possible_bit TYPE(?'a) n ==> bit ?a n = bit ?b n) ==> ?a = ?b",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Word_EqI.word_eqI_rules",
     "(!!n. n < LENGTH(?'a) ==> bit ?u n = bit ?v n) ==> ?u = ?v",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Word_EqI.word_eqI_simps",
     "(?p < 2 ^ ?n) =
      (?n < LENGTH(?'a) & (ALL n'>=?n. n' < LENGTH(?'a) --> ~ bit ?p n'))",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 1),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app (template_hole 10, template_hole 9))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app (template_hole 6, template_hole 5))),
         template_app (template_hole 4, t_empty))))]
