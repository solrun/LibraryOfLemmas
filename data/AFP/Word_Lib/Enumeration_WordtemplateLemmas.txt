   [("Enumeration_Word.leq_maxBound", "?x <= maxBound",
     template_inequation (less_equals, template_var 0, template_hole 0)),
    ("Enumeration_Word.distinct_enum_upto", "distinct [0 .e. ?b]",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Enumeration_Word.distinct_enum_upto'", "distinct [?a .e. ?b]",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Enumeration_Word.fromEnum_unat", "fromEnum ?x = unat ?x",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Enumeration_Word.upto_enum_set_conv2", "set [?a .e. ?b] = {?a..?b}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Enumeration_Word.remdups_enum_upto",
     "remdups [?s .e. ?e] = [?s .e. ?e]",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Enumeration_Word.drop_upto_enum",
     "drop (unat ?n) [0 .e. ?m] = [?n .e. ?m]",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Enumeration_Word.length_upto_enum",
     "length [?a .e. ?b] = Suc (unat ?b) - unat ?a",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("Enumeration_Word.card_enum_upto",
     "card (set [?s .e. ?e]) = Suc (unat ?e) - unat ?s",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 0, template_var 1)))),
    ("Enumeration_Word.upto_enum_word",
     "[?x .e. ?y] = map word_of_nat [unat ?x..<Suc (unat ?y)]",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))))),
    ("Enumeration_Word.upto_enum_set_conv",
     "set [?a .e. ?b] = {x. ?a <= x & x <= ?b}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Enumeration_Word.toEnum_of_nat",
     "?n < 2 ^ LENGTH(?'a) ==> toEnum ?n = word_of_nat ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5))),
            template_app (template_hole 4, template_hole 3)))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Enumeration_Word.length_upto_enum_cases",
     "length [?a .e. ?b] =
      (if ?a <= ?b then Suc (unat ?b) - unat ?a else 0)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_app (template_hole 1, template_var 1))),
         template_hole 0))),
    ("Enumeration_Word.word_upto_Cons_eq",
     "?x < ?y ==> [?x .e. ?y] = ?x # [?x + 1 .e. ?y]",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0))))),
    ("Enumeration_Word.upto_enum_red'",
     "1 <= ?X ==> [0 .e. ?X - 1] = map word_of_nat [0..<unat ?X]",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 9)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Enumeration_Word.upto_enum_len_less",
     "[| ?n <= length [?a , ?b .e. ?c]; ?n ~= 0 |] ==> ?a <= ?c",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0))),
        template_negation
         (template_equation (template_var 3, template_hole 1))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Enumeration_Word.length_upto_enum_step",
     "?x <= ?z ==>
      length [?x , ?y .e. ?z] = unat ((?z - ?x) div (?y - ?x)) + 1",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2)))),
           template_hole 0)))),
    ("Enumeration_Word.length_upto_enum_less_one",
     "[| ?a <= ?b; ?b ~= 0 |] ==> length [?a .e. ?b - 1] = unat (?b - ?a)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Enumeration_Word.length_upto_enum_one",
     "[| ?x < ?y; ?z < ?y; ?x <= ?z |] ==> [?x , ?y .e. ?z] = [?x]",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("Enumeration_Word.upto_enum_red2",
     "?sz < LENGTH(?'a) ==>
      [0 .e. 2 ^ ?sz - 1] = map word_of_nat [0..<2 ^ ?sz]",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app (template_hole 16, template_hole 15))],
       template_equation
        (template_app
          (template_app (template_hole 13, template_hole 12),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 7))),
                 template_var 0)),
             template_hole 6)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_hole 7))),
               template_var 0)))))),
    ("Enumeration_Word.length_interval",
     "[| set ?xs = {x. ?a <= x & x <= ?b}; distinct ?xs |]
      ==> length ?xs = Suc (unat ?b) - unat ?a",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, t_empty)),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_app (template_hole 0, template_var 1))))),
    ("Enumeration_Word.upto_enum_less",
     "[| ?x : set [?a .e. 2 ^ ?n - 1]; ?n < LENGTH(?'a) |] ==> ?x < 2 ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6, template_hole 5))),
                        template_var 0)),
                    template_hole 4))))
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_hole 1))],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_var 0)))),
    ("Enumeration_Word.enum_word_div",
     "EX xs ys.
         enum = xs @ [?v] @ ys &
         (ALL x:set xs. x < ?v) & (ALL y:set ys. ?v < y)",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("Enumeration_Word.map_length_unfold_one",
     "[| Suc (unat ?x) < 2 ^ LENGTH(?'a); ?a < ?x |]
      ==> map ?f [?a .e. ?x] = ?f ?a # map ?f [?a + 1 .e. ?x]",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 14,
            template_app (template_hole 13, template_var 2)),
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_hole 9))),
            template_app (template_hole 8, template_hole 7))),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 0, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               template_var 2)))))),
    ("Enumeration_Word.upto_enum_step_red",
     "[| ?sz < LENGTH(?'a); ?us <= ?sz |]
      ==> [0 , 2 ^ ?us .e. 2 ^ ?sz - 1] =
          map (%x. word_of_nat x * 2 ^ ?us) [0..<2 ^ (?sz - ?us)]",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 19, template_hole 18)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 15, template_hole 14),
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_hole 10))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_hole 12,
                     template_app (template_hole 11, template_hole 10))),
                 template_var 1)),
             template_hole 8)),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 11, template_hole 10))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))))))]
