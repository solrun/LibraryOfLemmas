   [("More_Divides.pos_mod_sign2", "0 <= ?a mod 2",
     template_inequation
      (less_equals, template_hole 4,
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("More_Divides.div_mult_le", "?a div ?b * ?b <= ?a",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 1)),
    ("More_Divides.nat_minus_mod", "(?n - ?n mod ?m) mod ?m = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_var 0),
       template_hole 0)),
    ("More_Divides.pos_mod_bound2", "?a mod 2 < 2",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("More_Divides.m2pths", "(0::?'a) < ?b ==> (0::?'a) <= ?a mod ?b",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("More_Divides.nat_mod_eq'", "?a < ?n ==> ?a mod ?n = ?a",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("More_Divides.int_mod_le", "0 <= ?m ==> ?m mod ?k <= ?m",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("More_Divides.zmde", "?b * (?a div ?b) = ?a - ?a mod ?b",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("More_Divides.rdmods", "- ?a mod ?b = - (?a mod ?b) mod ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0))),
    ("More_Divides.push_mods'", "- (?a mod ?b) mod ?b = - ?a mod ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("More_Divides.mod_div_equality_div_eq",
     "?a div ?b * ?b = ?a - ?a mod ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("More_Divides.rdmods", "(?a - ?b) mod ?c = (?a - ?b mod ?c) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0))),
    ("More_Divides.rdmods", "(?a - ?b) mod ?c = (?a mod ?c - ?b) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_var 0))),
    ("More_Divides.rdmods", "(?a + ?b) mod ?c = (?a + ?b mod ?c) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0))),
    ("More_Divides.rdmods", "(?a + ?b) mod ?c = (?a mod ?c + ?b) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_var 0))),
    ("More_Divides.rdmods", "?a * ?b mod ?c = ?a * (?b mod ?c) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 0))),
    ("More_Divides.rdmods", "?a * ?b mod ?c = ?a mod ?c * ?b mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_var 0))),
    ("More_Divides.z1pdiv2", "(2 * ?b + 1) div 2 = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0)),
             template_hole 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_var 0)),
    ("More_Divides.one_mod_exp_eq_one", "1 mod (2 * 2 ^ ?n) = 1",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0))),
       template_hole 5)),
    ("More_Divides.z1pmod2", "(2 * ?b + 1) mod 2 = 1",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0)),
             template_hole 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("More_Divides.nat_minus_mod_plus_right",
     "(?n + ?x - ?n mod ?m) mod ?m = ?x mod ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("More_Divides.mod_exp_less_eq_exp", "?a mod 2 ^ ?n < 2 ^ ?n",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("More_Divides.int_div_same_is_1",
     "0 < ?a ==> (?a div ?b = ?a) = (?b = 1)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 1),
         template_equation (template_var 0, template_hole 0)))),
    ("More_Divides.nat_mod_lem", "0 < ?n ==> (?b < ?n) = (?b mod ?n = ?b)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1)
              )],
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 0)))),
    ("More_Divides.mod_nat_sub", "?x < ?z ==> (?x - ?y) mod ?z = ?x - ?y",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("More_Divides.int_mod_le'", "0 <= ?b - ?n ==> ?b mod ?n <= ?b - ?n",
     template_implication
      ([template_inequation
         (less_equals, template_hole 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("More_Divides.nmod2", "?n mod 2 = 0 | ?n mod 2 = 1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_hole 0))
         )),
    ("More_Divides.push_mods'",
     "(?a mod ?c - ?b mod ?c) mod ?c = (?a - ?b) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("More_Divides.push_mods'",
     "(?a mod ?c + ?b mod ?c) mod ?c = (?a + ?b) mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("More_Divides.push_mods'",
     "?a mod ?c * (?b mod ?c) mod ?c = ?a * ?b mod ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_var 1),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("More_Divides.zdiv_le_dividend",
     "[| 0 <= ?a; 0 < ?b |] ==> ?a div ?b <= ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("More_Divides.int_mod_eq'",
     "[| 0 <= ?k; ?k < ?l |] ==> ?k mod ?l = ?k",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("More_Divides.m1mod2k", "- 1 mod 2 ^ ?n = 2 ^ ?n - 1",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app (template_hole 6, template_hole 5)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0)),
         template_hole 5))),
    ("More_Divides.mod_2_neq_1_eq_eq_0", "(?k mod 2 ~= 1) = (?k mod 2 = 0)",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_hole 1)
           ),
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_hole 0))),
    ("More_Divides.int_div_minus_is_minus1",
     "?a < 0 ==> (?a div ?b = - ?a) = (?b = - 1)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 5)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_equation
          (template_var 0,
           template_app (template_hole 1, template_hole 0))))),
    ("More_Divides.td_gal_lt",
     "0 < ?c ==> (?a < ?b * ?c) = (?a div ?c < ?b)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("More_Divides.td_gal",
     "0 < ?c ==> (?b * ?c <= ?a) = (?b <= ?a div ?c)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("More_Divides.int_mod_ge'",
     "[| ?b < 0; 0 < ?n |] ==> ?b + ?n <= ?b mod ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 3),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("More_Divides.nat_div_eq_Suc_0_iff",
     "(?n div ?m = Suc 0) = (?m <= ?n & ?n < 2 * ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0)),
         template_app (template_hole 8, template_hole 7)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 0))))),
    ("More_Divides.int_mod_lem",
     "0 < ?n ==> (0 <= ?b & ?b < ?n) = (?b mod ?n = ?b)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_hole 5),
                    template_var 0)),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1))
              )],
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1),
           template_var 0)))),
    ("More_Divides.zmod_helper",
     "?n mod ?m = ?k ==> (?n + ?a) mod ?m = (?k + ?a) mod ?m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("More_Divides.two_pow_div_gt_le",
     "?v < 2 ^ ?n div 2 ^ ?m ==> ?m <= ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_hole 1))),
                template_var 1)),
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_hole 1))),
              template_var 0)))],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("More_Divides.mod_plus_right",
     "((?a + ?x) mod ?m = (?b + ?x) mod ?m) = (?a mod ?m = ?b mod ?m)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)),
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("More_Divides.zdiv_mult_self",
     "?m ~= 0 ==> (?a + ?m * ?n) div ?m = ?a div ?m + ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("More_Divides.diff_mod_le",
     "[| ?a < ?d; ?b dvd ?d |] ==> ?a - ?a mod ?b <= ?d - ?b",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("More_Divides.nat_mod_eq",
     "[| ?b < ?n; ?a mod ?n = ?b mod ?n |] ==> ?a mod ?n = ?b",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("More_Divides.mod_power_lem",
     "1 < ?a ==> ?a ^ ?n mod ?a ^ ?m = (if ?m <= ?n then 0 else ?a ^ ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1))))),
    ("More_Divides.mod_lemma",
     "[| 0 < ?c; ?r < ?b |] ==> ?b * (?q mod ?c) + ?r < ?b * ?c",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 3),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3))),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 3)))),
    ("More_Divides.nonneg_mod_div",
     "[| 0 <= ?a; 0 <= ?b |] ==> 0 <= ?a mod ?b & 0 <= ?a div ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("More_Divides.axxdiv2",
     "(1 + ?x + ?x) div 2 = ?x & (0 + ?x + ?x) div 2 = ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 0)),
                       template_var 0)),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_hole 0),
                         template_var 0)),
                     template_var 0)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_var 0))
         )),
    ("More_Divides.axxmod2",
     "(1 + ?x + ?x) mod 2 = 1 & (0 + ?x + ?x) mod 2 = 0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 5, template_hole 4),
                           template_var 0)),
                       template_var 0)),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)))),
               template_hole 4)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_hole 0),
                         template_var 0)),
                     template_var 0)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_hole 0))
         )),
    ("More_Divides.mod_mod_power",
     "?k mod 2 ^ ?m mod 2 ^ ?n = ?k mod 2 ^ min ?m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("More_Divides.int_div_sub_1",
     "1 <= ?m ==>
      (?n - 1) div ?m = (if ?m dvd ?n then ?n div ?m - 1 else ?n div ?m)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 5)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_hole 5)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))))),
    ("More_Divides.power_sub",
     "[| ?n <= ?m; 0 < ?a |] ==> ?a ^ (?m - ?n) = ?a ^ ?m div ?a ^ ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("More_Divides.m1mod22k", "- 1 mod (2 * 2 ^ ?n) = 2 * 2 ^ ?n - 1",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_var 0))),
         template_hole 6))),
    ("More_Divides.power_minus_is_div",
     "?b <= ?a ==> 2 ^ (?a - ?b) = 2 ^ ?a div 2 ^ ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_var 1))))),
    ("More_Divides.int_mod_eq",
     "[| 0 <= ?b; ?b < ?n; ?a mod ?n = ?b mod ?n |] ==> ?a mod ?n = ?b",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 2),
        template_inequation (less_than, template_var 2, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 0), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 2))),
    ("More_Divides.less_two_pow_divD",
     "?x < 2 ^ ?n div 2 ^ ?m ==> ?m <= ?n & ?x < 2 ^ (?n - ?m)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_hole 3))),
                template_var 1)),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("More_Divides.power_mod_div",
     "?x mod 2 ^ ?n div 2 ^ ?m = ?x div 2 ^ ?m mod 2 ^ (?n - ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("More_Divides.less_two_pow_divI",
     "[| ?x < 2 ^ (?n - ?m); ?m <= ?n |] ==> ?x < 2 ^ ?n div 2 ^ ?m",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3))),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0))),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3))),
               template_var 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_var 0))))),
    ("More_Divides.mod_nat_add",
     "[| ?x < ?z; ?y < ?z |]
      ==> (?x + ?y) mod ?z =
          (if ?x + ?y < ?z then ?x + ?y else ?x + ?y - ?z)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_var 1))))),
    ("More_Divides.eme1p",
     "[| even ?n; even ?d; 0 <= ?d |] ==> (1 + ?n) mod ?d = 1 + ?n mod ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_var 0)
            ),
        template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("More_Divides.emep1",
     "[| even ?n; even ?d; 0 <= ?d |] ==> (?n + 1) mod ?d = ?n mod ?d + 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_hole 6))),
              template_var 0)
            ),
        template_inequation (less_equals, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("More_Divides.p1mod22k'",
     "(1 + 2 * ?b) mod (2 * 2 ^ ?n) = 1 + 2 * (?b mod 2 ^ ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 0))),
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0)))))),
    ("More_Divides.p1mod22k",
     "(2 * ?b + 1) mod (2 * 2 ^ ?n) = 2 * (?b mod 2 ^ ?n) + 1",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))),
                 template_var 1)),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))),
                 template_var 0)))),
         template_hole 1))),
    ("More_Divides.sb_dec_lem'",
     "2 ^ ?k <= ?a ==> (?a + 2 ^ ?k) mod (2 * 2 ^ ?k) <= - (2 ^ ?k) + ?a",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 1),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 1))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_var 0)))),
    ("More_Divides.sb_dec_lem",
     "0 <= - (2 ^ ?k) + ?a ==>
      (?a + 2 ^ ?k) mod (2 * 2 ^ ?k) <= - (2 ^ ?k) + ?a",
     template_implication
      ([template_inequation
         (less_equals, template_hole 8,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_hole 2))),
                  template_var 1))),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))),
                 template_var 1))),
           template_var 0)))),
    ("More_Divides.sb_inc_lem'",
     "?a < - (2 ^ ?k) ==>
      ?a + 2 ^ ?k + 2 ^ Suc ?k <= (?a + 2 ^ ?k) mod 2 ^ Suc ?k",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_var 0)))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app (template_hole 1, template_var 0)))))),
    ("More_Divides.sb_inc_lem",
     "?a + 2 ^ ?k < 0 ==>
      ?a + 2 ^ ?k + 2 ^ Suc ?k <= (?a + 2 ^ ?k) mod 2 ^ Suc ?k",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_var 0)),
          template_hole 3)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_app (template_hole 1, template_var 0))))))]
