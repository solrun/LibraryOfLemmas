   [("Signed_Words.scast_nop", "scast ?w = ?w",
     template_equation
      (template_app (template_hole 0, template_var 0), template_var 0)),
    ("Signed_Words.len_signed", "len_of ?x = LENGTH(?'a)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Signed_Words.scast_scast_id", "scast (scast ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Signed_Words.scast_ucast_id", "scast (ucast ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Signed_Words.scast_scast_id", "scast (scast ?y) = ?y",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Signed_Words.ucast_scast_id", "ucast (scast ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Signed_Words.scast_nop2", "scast (word_of_int ?x) = word_of_int ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Signed_Words.scast_of_nat", "scast (word_of_nat ?x) = word_of_nat ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Signed_Words.scast_nop1", "scast (word_of_int ?x) = word_of_int ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Signed_Words.scast_ucast_norm", "(?b = ucast ?a) = (?a = scast ?b)",
     template_bimplication
      (template_equation
        (template_var 1, template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Signed_Words.scast_ucast_norm", "(ucast ?a = ?b) = (?a = scast ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Signed_Words.scast_eq_scast_id", "(scast ?a = scast ?b) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Signed_Words.ucast_eq_ucast_id", "(ucast ?a = ucast ?b) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Signed_Words.zero_sle_ucast_up",
     "~ is_down ucast ==> 0 \<le>s ucast ?b",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Signed_Words.scast_2_power", "scast (2 ^ ?x) = 2 ^ ?x",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 3, template_hole 2))),
         template_var 0))),
    ("Signed_Words.zero_sle_ucast",
     "(0 \<le>s ucast ?b) = (uint ?b < 2 ^ (LENGTH(?'a) - 1))",
     template_equation
      (template_app
        (template_app (template_hole 12, template_hole 11),
         template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_hole 0))))),
    ("Signed_Words.nth_w2p_scast",
     "bit (scast (2 ^ ?n)) ?m = bit (2 ^ ?n) ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 3, template_hole 2))),
             template_var 1)),
         template_var 0))),
    ("Signed_Words.word_le_ucast_sless",
     "[| ?x <= ?y; ?y ~= - 1; LENGTH(?'a) < LENGTH(?'b) |]
      ==> ucast ?x <s ucast (?y + 1)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 9, template_hole 8))
            ),
        template_inequation
         (less_than, template_app (template_hole 6, template_hole 5),
          template_app (template_hole 4, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 8)))
           )))]
