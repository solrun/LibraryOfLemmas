   [("Reversed_Bit_Lists.bl_to_bin_ge0", "0 <= bl_to_bin ?bs",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Reversed_Bit_Lists.bl_not_Nil", "to_bl ?x ~= []",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Reversed_Bit_Lists.sign_bl_bin", "bin_sign (bl_to_bin ?bs) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Reversed_Bit_Lists.rotate_eqs", "rotate 0 ?t = ?t",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Reversed_Bit_Lists.rotate1_lr", "rotate1 (rotater1 ?l) = ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Reversed_Bit_Lists.bl_of_nth_simps", "bl_of_nth 0 ?f = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Reversed_Bit_Lists.rotater_0", "rotater 0 ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Reversed_Bit_Lists.rotate1_rl", "rotater1 (rotate1 ?l) = ?l",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Reversed_Bit_Lists.bin_to_bl_0", "bin_to_bl 0 ?bs = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Reversed_Bit_Lists.rbl_Nils", "rbl_add [] ?x = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Reversed_Bit_Lists.rbl_Nils", "rbl_mult [] ?x = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Reversed_Bit_Lists.word_rotl_eqs", "word_rotl 0 ?w = ?w",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Reversed_Bit_Lists.word_rotr_eqs", "word_rotr 0 ?w = ?w",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Reversed_Bit_Lists.length_bl_gt_0", "0 < length (to_bl ?x)",
     template_inequation
      (less_than, template_hole 2,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.bl_pad_to_prefix",
     "prefix ?bl (bl_pad_to ?bl ?sz)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Reversed_Bit_Lists.length_bl_neq_0", "length (to_bl ?x) ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Reversed_Bit_Lists.to_bl_bin", "bl_to_bin (to_bl ?w) = uint ?w",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Reversed_Bit_Lists.bl_to_bin_rep_False",
     "bl_to_bin (replicate ?n False) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Reversed_Bit_Lists.word_size_bl", "size ?w = length (to_bl ?w)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.size_rbl_pred",
     "length (rbl_pred ?bl) = length ?bl",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Reversed_Bit_Lists.size_rbl_succ",
     "length (rbl_succ ?bl) = length ?bl",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Reversed_Bit_Lists.length_to_bl_eq",
     "length (to_bl ?w) = LENGTH(?'a)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Reversed_Bit_Lists.word_bl_Rep'", "length (to_bl ?x) = LENGTH(?'a)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Reversed_Bit_Lists.length_bl_of_nth", "length (bl_of_nth ?n ?f) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Reversed_Bit_Lists.len_bin_to_bl", "length (bin_to_bl ?n ?w) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Reversed_Bit_Lists.word_lsb_last", "lsb ?w = last (to_bl ?w)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.word_msb_alt", "msb ?w = hd (to_bl ?w)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.ucast_bl", "ucast ?w = of_bl (to_bl ?w)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.of_bl_0", "of_bl (replicate ?n False) = 0",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Reversed_Bit_Lists.of_bl_max", "of_bl ?xs <= mask (length ?xs)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.sign_bl_bin'",
     "bin_sign (bl_to_bin_aux ?bs ?w) = bin_sign ?w",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Reversed_Bit_Lists.bl_to_bin_False",
     "bl_to_bin (False # ?bl) = bl_to_bin ?bl",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Reversed_Bit_Lists.length_rotater",
     "length (rotater ?n ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Reversed_Bit_Lists.size_rbl_add",
     "length (rbl_add ?bl ?cl) = length ?bl",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Reversed_Bit_Lists.size_rbl_mult",
     "length (rbl_mult ?bl ?cl) = length ?bl",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Reversed_Bit_Lists.length_takefill",
     "length (takefill ?fill ?n ?l) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("Reversed_Bit_Lists.rotater1_rev'",
     "rotater1 (rev ?xs) = rev (rotate1 ?xs)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.rotate_rl", "rotate ?k (rotater ?k ?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Reversed_Bit_Lists.rotate_lr", "rotater ?k (rotate ?k ?xs) = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Reversed_Bit_Lists.takefill_same",
     "takefill ?fill (length ?xs) ?xs = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_var 0)),
    ("Reversed_Bit_Lists.bin_to_bl_zero",
     "bin_to_bl ?n 0 = replicate ?n False",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Reversed_Bit_Lists.to_bl_word_rev",
     "to_bl (word_reverse ?w) = rev (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Reversed_Bit_Lists.blrs0", "to_bl (word_rotl 0 ?w) = to_bl ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Reversed_Bit_Lists.brrs0", "to_bl (word_rotr 0 ?w) = to_bl ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Reversed_Bit_Lists.bl_bin_bl",
     "bin_to_bl (length ?bs) (bl_to_bin ?bs) = ?bs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Reversed_Bit_Lists.mask_bl", "mask ?n = of_bl (replicate ?n True)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Reversed_Bit_Lists.shiftr1_bl",
     "shiftr1 ?w = of_bl (butlast (to_bl ?w))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.word_reverse_eq_of_bl_rev_to_bl",
     "word_reverse ?w = of_bl (rev (to_bl ?w))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.of_bl_False", "of_bl (False # ?xs) = of_bl ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Reversed_Bit_Lists.of_bl_append_same", "of_bl (?X @ to_bl ?w) = ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Reversed_Bit_Lists.shiftr_slice", "?w >> ?n = slice ?n ?w",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Reversed_Bit_Lists.bin_bl_bin",
     "bl_to_bin (bin_to_bl ?n ?w) = take_bit ?n ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Reversed_Bit_Lists.trunc_bl2bin_len",
     "take_bit (length ?bl) (bl_to_bin ?bl) = bl_to_bin ?bl",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Reversed_Bit_Lists.bl_of_nth_nth",
     "bl_of_nth (length ?xs) ((!) (rev ?xs)) = ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Reversed_Bit_Lists.uint_bl",
     "to_bl ?w = bin_to_bl (size ?w) (uint ?w)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_eq",
     "to_bl ?w = bin_to_bl LENGTH(?'a) (uint ?w)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.bl_word_not",
     "to_bl (not ?w) = map Not (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_of_bin",
     "to_bl (word_of_int ?bin) = bin_to_bl LENGTH(?'a) ?bin",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0))),
    ("Reversed_Bit_Lists.bin_to_bl_minus1",
     "bin_to_bl ?n (- 1) = replicate ?n True",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app (template_hole 3, template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Reversed_Bit_Lists.word_rcat_bl",
     "word_rcat ?wl = of_bl (concat (map to_bl ?wl))",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.bl_to_bin_append",
     "bl_to_bin (?bs @ ?cs) = bl_to_bin_aux ?cs (bl_to_bin ?bs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 2, template_var 1)))),
    ("Reversed_Bit_Lists.bl_to_bin_rep_F",
     "bl_to_bin (replicate ?n False @ ?bl) = bl_to_bin ?bl",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Reversed_Bit_Lists.uint_bl_bin",
     "bl_to_bin (bin_to_bl LENGTH(?'a) (uint ?x)) = uint ?x",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Reversed_Bit_Lists.rrs0", "(rotater 0 ?z = ?y) = (?y = ?z)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_equation (template_var 0, template_var 1))),
    ("Reversed_Bit_Lists.rotater_rev",
     "rotater ?n ?ys = rev (rotate ?n (rev ?ys))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 1, template_var 0))))),
    ("Reversed_Bit_Lists.rotater_rev'",
     "rotater ?n (rev ?xs) = rev (rotate ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.rotater_Suc",
     "rotater (Suc ?n) ?xs = rotater1 (rotater ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.rotater1_map",
     "rotater1 (map ?f ?xs) = map ?f (rotater1 ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_numeral",
     "to_bl (numeral ?bin) = bin_to_bl LENGTH(?'a) (numeral ?bin)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.bl_shiftr1'",
     "to_bl (shiftr1 ?w) = butlast (False # to_bl ?w)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 4, template_var 0))))),
    ("Reversed_Bit_Lists.bl_shiftr1",
     "to_bl (shiftr1 ?w) = False # butlast (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("Reversed_Bit_Lists.to_bl_rotl",
     "to_bl (word_rotl ?n ?w) = rotate ?n (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_rotr",
     "to_bl (word_rotr ?n ?w) = rotater ?n (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Reversed_Bit_Lists.no_of_bl",
     "numeral ?bin = of_bl (bin_to_bl LENGTH(?'a) (numeral ?bin))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.word_rotl_eq",
     "word_rotl ?n ?w = of_bl (rotate ?n (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.word_rotr_eq",
     "word_rotr ?n ?w = of_bl (rotater ?n (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.of_bl_rep_False",
     "of_bl (replicate ?n False @ ?bs) = of_bl ?bs",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Reversed_Bit_Lists.bl_to_bin_lt2p", "bl_to_bin ?bs < 2 ^ length ?bs",
     template_inequation
      (less_than, template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.bin_rcat_bl",
     "bin_rcat ?n ?wl = bl_to_bin (concat (map (bin_to_bl ?n) ?wl))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Reversed_Bit_Lists.butlast_rest_bl2bin",
     "bl_to_bin (butlast ?bl) = bl_to_bin ?bl div 2",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Reversed_Bit_Lists.bl_to_bin_aux_alt",
     "bl_to_bin_aux ?bs ?w = concat_bit (length ?bs) (bl_to_bin ?bs) ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("Reversed_Bit_Lists.bin_rest_bl_to_bin",
     "bl_to_bin ?bs div 2 = bl_to_bin (butlast ?bs)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_hole 4, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.len_bin_to_bl_aux",
     "length (bin_to_bl_aux ?n ?w ?bs) = ?n + length ?bs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app (template_hole 2, template_var 0)))),
    ("Reversed_Bit_Lists.eq_zero_set_bl",
     "(?w = 0) = (True ~: set (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 0), template_hole 5),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.hd_to_bl_iff",
     "hd (to_bl ?w) = bit ?w (LENGTH(?'a) - 1)",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_hole 0)))),
    ("Reversed_Bit_Lists.hd_bl_sign_sint",
     "hd (to_bl ?w) = (bin_sign (sint ?w) = - 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Reversed_Bit_Lists.rotate_eqs",
     "rotate ?n ?xs = rotate (?n mod length ?xs) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Reversed_Bit_Lists.rotater_eqs",
     "rotater (?n mod length ?z) ?z = rotater ?n ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Reversed_Bit_Lists.rotate1_rl'", "rotater1 (?l @ [?a]) = ?a # ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_app (template_hole 1, template_var 0), template_var 1))),
    ("Reversed_Bit_Lists.takefill_replicate",
     "takefill ?fill ?n (replicate ?m ?fill) = replicate ?n ?fill",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 2))),
    ("Reversed_Bit_Lists.to_bl_revcast",
     "to_bl (revcast ?w) = takefill False LENGTH(?'a) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_hole 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.rbl_word_not",
     "rev (to_bl (not ?x)) = map Not (rev (to_bl ?x))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))))),
    ("Reversed_Bit_Lists.bin_to_bl_zero_aux",
     "bin_to_bl_aux ?n 0 ?bl = replicate ?n False @ ?bl",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1), template_hole 3),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_alt",
     "bin_to_bl_aux ?n ?w ?bs = bin_to_bl ?n ?w @ ?bs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Reversed_Bit_Lists.bl_not_bin",
     "map Not (bin_to_bl ?n ?w) = bin_to_bl ?n (not ?w)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.take_bin2bl_lem1",
     "take ?m (bin_to_bl_aux ?m ?w ?bs) = bin_to_bl ?m ?w",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Reversed_Bit_Lists.of_bl_eq",
     "of_bl ?bs = horner_sum of_bool 2 (rev ?bs)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.shiftl1_bl",
     "shiftl1 ?w = of_bl (to_bl ?w @ [False])",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Reversed_Bit_Lists.word_1_and_bl", "and 1 ?x = of_bl [bit ?x 0]",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5), template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0)))),
    ("Reversed_Bit_Lists.word_and_1_bl", "and ?x 1 = of_bl [bit ?x 0]",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 0), template_hole 5),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1)),
           template_hole 0)))),
    ("Reversed_Bit_Lists.of_bl_rev_eq",
     "of_bl (rev ?bs) = horner_sum of_bool 2 ?bs",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Reversed_Bit_Lists.shiftl1_of_bl",
     "shiftl1 (of_bl ?bl) = of_bl (?bl @ [False])",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Reversed_Bit_Lists.word_cat_bl",
     "word_cat ?a ?b = of_bl (to_bl ?a @ to_bl ?b)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.word_rotl_eqs",
     "word_rotl ?n ?w = word_rotl (?n mod LENGTH(?'a)) ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Reversed_Bit_Lists.word_rotr_eqs",
     "word_rotr (?n mod LENGTH(?'a)) ?w = word_rotr ?n ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_hole 0))),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0))),
    ("Reversed_Bit_Lists.revcast_eq_of_bl",
     "revcast ?w = of_bl (takefill False LENGTH(?'b) (to_bl ?w))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_hole 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.slice1_eq_of_bl",
     "slice1 ?n ?w = of_bl (takefill False ?n (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.unat_of_bl_length",
     "unat (of_bl ?xs) < 2 ^ length ?xs",
     template_inequation
      (less_than,
       template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.length_drop_mask",
     "length (dropWhile Not (to_bl (and ?w (mask ?n)))) <= ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0))))),
       template_var 0)),
    ("Reversed_Bit_Lists.ucast_down_bl",
     "is_down ucast ==> ucast (of_bl ?bl) = of_bl ?bl",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.abl_cong", "?x = ?y ==> of_bl ?x = of_bl ?y",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.foldl_eq_foldr",
     "foldl (+) ?x ?xs = foldr (+) (?x # ?xs) (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Reversed_Bit_Lists.bin_bl_bin'",
     "bl_to_bin (bin_to_bl_aux ?n ?w ?bs) =
      bl_to_bin_aux ?bs (take_bit ?n ?w)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.bl_to_bin_aux_append",
     "bl_to_bin_aux (?bs @ ?cs) ?w =
      bl_to_bin_aux ?cs (bl_to_bin_aux ?bs ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.size_rcat_lem",
     "length (concat (map to_bl ?wl)) = length ?wl * LENGTH(?'a)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Reversed_Bit_Lists.sclem",
     "length (concat (map (bin_to_bl ?n) ?xs)) = length ?xs * ?n",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Reversed_Bit_Lists.word_eq_rbl_eq",
     "(?x = ?y) = (rev (to_bl ?x) = rev (to_bl ?y))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.rotate_gal'",
     "(?ys = rotater ?n ?xs) = (?xs = rotate ?n ?ys)",
     template_bimplication
      (template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Reversed_Bit_Lists.rotate_gal",
     "(rotater ?n ?xs = ?ys) = (rotate ?n ?ys = ?xs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Reversed_Bit_Lists.bl_of_nth_simps",
     "bl_of_nth (Suc ?n) ?f = ?f ?n # bl_of_nth ?n ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.rotate_eqs",
     "rotate (?m + ?n) ?xs = rotate ?m (rotate ?n ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.rotater_map",
     "rotater ?n (map ?f ?xs) = map ?f (rotater ?n ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.rotater_add",
     "rotater (?m + ?n) ?z = rotater ?n (rotater ?m ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_eq_rev",
     "to_bl ?w = map (bit ?w) (rev [0..<LENGTH(?'a)])",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_hole 0)))))),
    ("Reversed_Bit_Lists.to_bl_unfold",
     "to_bl ?w = rev (map (bit ?w) [0..<LENGTH(?'a)])",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_hole 0)))))),
    ("Reversed_Bit_Lists.rev_to_bl_eq",
     "rev (to_bl ?w) = map (bit ?w) [0..<LENGTH(?'a)]",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_hole 0))))),
    ("Reversed_Bit_Lists.word_rev_tf",
     "to_bl (of_bl ?bl) = rev (takefill False LENGTH(?'a) (rev ?bl))",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_hole 0)),
           template_app (template_hole 4, template_var 0))))),
    ("Reversed_Bit_Lists.bl_shiftl1",
     "to_bl (shiftl1 ?w) = tl (to_bl ?w) @ [False]",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 6, template_var 0))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Reversed_Bit_Lists.bl_shiftl1'",
     "to_bl (shiftl1 ?w) = tl (to_bl ?w @ [False])",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 6, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Reversed_Bit_Lists.bl_sshiftr1",
     "to_bl (sshiftr1 ?w) = hd (to_bl ?w) # butlast (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("Reversed_Bit_Lists.bl_bin_bl_rtf",
     "bin_to_bl ?n (bl_to_bin ?bl) = rev (takefill False ?n (rev ?bl))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1),
           template_app (template_hole 2, template_var 0))))),
    ("Reversed_Bit_Lists.takefill_bintrunc",
     "takefill False ?n ?bl = rev (bin_to_bl ?n (bl_to_bin (rev ?bl)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 3), template_var 1),
         template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)))))),
    ("Reversed_Bit_Lists.to_bl_neg_numeral",
     "to_bl (- numeral ?bin) = bin_to_bl LENGTH(?'a) (- numeral ?bin)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.drop_bin2bl",
     "drop ?m (bin_to_bl ?n ?bin) = bin_to_bl (?n - ?m) ?bin",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Reversed_Bit_Lists.bin_to_bl_minus1_aux",
     "bin_to_bl_aux ?n (- 1) ?bl = replicate ?n True @ ?bl",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 4, template_hole 3)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Reversed_Bit_Lists.map_bits_rev_to_bl",
     "map (bit ?x) [0..<size ?x] = rev (to_bl ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.shiftl_bl",
     "?w << ?n = of_bl (to_bl ?w @ replicate ?n False)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Reversed_Bit_Lists.shiftl_of_bl",
     "of_bl ?bl << ?n = of_bl (?bl @ replicate ?n False)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Reversed_Bit_Lists.word_rotl_eqs",
     "word_rotl (?m + ?n) ?w = word_rotl ?m (word_rotl ?n ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.word_rotr_eqs",
     "word_rotr (?m + ?n) ?w = word_rotr ?n (word_rotr ?m ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.bl_to_bin_lt2p_drop",
     "bl_to_bin ?bs < 2 ^ length (dropWhile Not ?bs)",
     template_inequation
      (less_than, template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.trunc_bl2bin",
     "take_bit ?m (bl_to_bin ?bl) = bl_to_bin (drop (length ?bl - ?m) ?bl)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1)),
           template_var 0)))),
    ("Reversed_Bit_Lists.bl_to_bin_app_cat",
     "bl_to_bin (?bsa @ ?bs) =
      concat_bit (length ?bs) (bl_to_bin ?bs) (bl_to_bin ?bsa)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 3, template_var 0)),
         template_app (template_hole 3, template_var 1)))),
    ("Reversed_Bit_Lists.bl2bin_drop",
     "bl_to_bin (drop ?k ?bl) = take_bit (length ?bl - ?k) (bl_to_bin ?bl)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Reversed_Bit_Lists.bl_to_bin_app_cat_alt",
     "concat_bit ?n ?w (bl_to_bin ?cs) = bl_to_bin (?cs @ bin_to_bl ?n ?w)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Reversed_Bit_Lists.size_rcat_lem'",
     "length (concat (map to_bl ?wl)) = length ?wl * size (hd ?wl)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.bin_last_last",
     "odd ?w = last (bin_to_bl (Suc ?n) ?w)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))),
           template_var 1)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1)))),
    ("Reversed_Bit_Lists.takefill_Suc_Nil",
     "takefill ?fill (Suc ?n) [] = ?fill # takefill ?fill ?n []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0),
           template_hole 1)))),
    ("Reversed_Bit_Lists.rrs1",
     "rotater (?n mod length (rotater ?n ?z)) ?z = rotater ?n ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Reversed_Bit_Lists.rbl_pred",
     "rbl_pred (rev (bin_to_bl ?n ?bin)) = rev (bin_to_bl ?n (?bin - 1))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Reversed_Bit_Lists.rbl_succ",
     "rbl_succ (rev (bin_to_bl ?n ?bin)) = rev (bin_to_bl ?n (?bin + 1))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Reversed_Bit_Lists.slice_take'",
     "slice ?n ?w = of_bl (take (size ?w - ?n) (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.slice_take",
     "slice ?n ?w = of_bl (take (LENGTH(?'b) - ?n) (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.of_bl_drop_eq_take_bit",
     "of_bl (drop ?n ?xs) = take_bit (length ?xs - ?n) (of_bl ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Reversed_Bit_Lists.bl_to_bin_ge2p_aux",
     "?w * 2 ^ length ?bs <= bl_to_bin_aux ?bs ?w",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Reversed_Bit_Lists.restrict_to_left",
     "?x = ?y ==> (?x = ?z) = (?y = ?z)",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_bimplication
        (template_equation (template_var 2, template_var 0),
         template_equation (template_var 1, template_var 0)))),
    ("Reversed_Bit_Lists.takefill_same'",
     "?l = length ?xs ==> takefill ?fill ?l ?xs = ?xs",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2),
           template_var 1),
         template_var 1))),
    ("Reversed_Bit_Lists.bl_pad_to_length",
     "length ?bl <= ?sz ==> length (bl_pad_to ?bl ?sz) = ?sz",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Reversed_Bit_Lists.mask_lem",
     "bl_to_bin (True # replicate ?n False) =
      bl_to_bin (replicate ?n True) + 1",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 4))),
         template_hole 0))),
    ("Reversed_Bit_Lists.bl_sbin_sign",
     "hd (bin_to_bl (Suc ?n) ?w) =
      (bin_sign (signed_take_bit ?n ?w) = - 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Reversed_Bit_Lists.takefill_numeral_Nil",
     "takefill ?fill (numeral ?k) [] =
      ?fill # takefill ?fill (pred_numeral ?k) []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 0)),
           template_hole 2)))),
    ("Reversed_Bit_Lists.blrs0",
     "to_bl (word_rotl ?n ?w) =
      rotate (?n mod length (to_bl ?w)) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 0)))),
         template_app (template_hole 4, template_var 0)))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_append",
     "bin_to_bl_aux ?n ?w ?bs @ ?cs = bin_to_bl_aux ?n ?w (?bs @ ?cs)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.map_bit_interval_eq",
     "map (bit ?w) [0..<?n] = takefill False ?n (rev (to_bl ?w))",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 3, template_hole 2), template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Reversed_Bit_Lists.blrs0",
     "to_bl (word_rotl (?m + ?n) ?w) = rotate ?m (rotate ?n (to_bl ?w))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 3, template_var 0))))),
    ("Reversed_Bit_Lists.brrs0",
     "to_bl (word_rotr (?m + ?n) ?w) = rotater ?n (rotater ?m (to_bl ?w))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 3, template_var 0))))),
    ("Reversed_Bit_Lists.bl_bin_bl'",
     "bin_to_bl (?n + length ?bs) (bl_to_bin_aux ?bs ?w) =
      bin_to_bl_aux ?n ?w ?bs",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Reversed_Bit_Lists.brrs0",
     "to_bl (word_rotr (?n mod length (to_bl ?w)) ?w) =
      rotater ?n (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0)))),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 4, template_var 0)))),
    ("Reversed_Bit_Lists.of_bl_drop",
     "of_bl (drop ?n ?xs) = and (of_bl ?xs) (mask (length ?xs - ?n))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("Reversed_Bit_Lists.of_drop_to_bl",
     "of_bl (drop ?n (to_bl ?x)) = and ?x (mask (size ?x - ?n))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))))),
    ("Reversed_Bit_Lists.uint_of_bl_is_bl_to_bin",
     "length ?l <= LENGTH(?'a) ==> uint (of_bl ?l) = bl_to_bin ?l",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.rotate_eqs",
     "?n mod length ?xs = 0 ==> rotate ?n ?xs = ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Reversed_Bit_Lists.rotater_eqs",
     "?n mod length ?z = 0 ==> rotater ?n ?z = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Reversed_Bit_Lists.word_rotl_eqs",
     "?n mod LENGTH(?'a) = 0 ==> word_rotl ?n ?w = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_hole 3)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Reversed_Bit_Lists.word_rotr_eqs",
     "?n mod LENGTH(?'a) = 0 ==> word_rotr ?n ?w = ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_hole 3)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Reversed_Bit_Lists.is_aligned_replicateI",
     "to_bl ?p = ?addr @ replicate ?n False ==> is_aligned ?p ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Reversed_Bit_Lists.bl_to_bin_aux_app_cat",
     "bl_to_bin_aux (?bsa @ ?bs) ?w =
      concat_bit (length ?bs) (bl_to_bin ?bs) (bl_to_bin_aux ?bsa ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.test_bit_bl",
     "bit ?w ?n = (rev (to_bl ?w) ! ?n & ?n < size ?w)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Reversed_Bit_Lists.bin_nth_of_bl",
     "bit (bl_to_bin ?bl) ?n = (?n < length ?bl & rev ?bl ! ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Reversed_Bit_Lists.rrs0",
     "(rotater ?n ?z = ?xs) = (rotater (?n mod length ?xs) ?z = ?xs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0))),
           template_var 1),
         template_var 0))),
    ("Reversed_Bit_Lists.bl_sbin_sign_aux",
     "hd (bin_to_bl_aux (Suc ?n) ?w ?bs) =
      (bin_sign (signed_take_bit ?n ?w) = - 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_hole 0)))),
    ("Reversed_Bit_Lists.takefill_Suc_Cons",
     "takefill ?fill (Suc ?n) (?x21.0 # ?x22.0) =
      ?x21.0 # takefill ?fill ?n ?x22.0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.butlast_rest_bin",
     "butlast (bin_to_bl ?n ?w) = bin_to_bl (?n - 1) (?w div 2)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Reversed_Bit_Lists.drop_shiftr",
     "drop ?n (to_bl (?w >> ?n)) = take (size ?w - ?n) (to_bl ?w)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Reversed_Bit_Lists.drop_sshiftr",
     "drop ?n (to_bl (?w >>> ?n)) = take (size ?w - ?n) (to_bl ?w)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("Reversed_Bit_Lists.bl_not_aux_bin",
     "map Not (bin_to_bl_aux ?n ?w ?cs) =
      bin_to_bl_aux ?n (not ?w) (map Not ?cs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_double_eq",
     "to_bl (2 * ?w) = tl (to_bl ?w) @ [False]",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 0))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("Reversed_Bit_Lists.of_bl_True",
     "of_bl (True # ?xs) = 2 ^ length ?xs + of_bl ?xs",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 8, template_var 0)))),
    ("Reversed_Bit_Lists.slice1_no_bin",
     "slice1 ?n (numeral ?w) =
      of_bl (takefill False ?n (bin_to_bl LENGTH(?'b) (numeral ?w)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.bl_to_bin_lt2p_aux",
     "bl_to_bin_aux ?bs ?w < (?w + 1) * 2 ^ length ?bs",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 5)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 1))))),
    ("Reversed_Bit_Lists.nth_bl_of_nth",
     "?m < ?n ==> rev (bl_of_nth ?n ?f) ! ?m = ?f ?m",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Reversed_Bit_Lists.bin_to_bl_trunc",
     "?n <= ?m ==> bin_to_bl ?n (take_bit ?m ?w) = bin_to_bl ?n ?w",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.word_pred_rbl",
     "to_bl ?w = ?bl ==> to_bl (word_pred ?w) = rev (rbl_pred (rev ?bl))",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))))),
    ("Reversed_Bit_Lists.word_succ_rbl",
     "to_bl ?w = ?bl ==> to_bl (word_succ ?w) = rev (rbl_succ (rev ?bl))",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))))),
    ("Reversed_Bit_Lists.sshiftr_clamp",
     "LENGTH(?'a) <= ?n ==> ?x >>> ?n = ?x >>> LENGTH(?'a)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_hole 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_hole 2))))),
    ("Reversed_Bit_Lists.rtb_rbl_ariths",
     "rev (to_bl ?w) = ?ys ==> rev (to_bl (word_pred ?w)) = rbl_pred ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.rtb_rbl_ariths",
     "rev (to_bl ?w) = ?ys ==> rev (to_bl (word_succ ?w)) = rbl_succ ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.shiftr1_bl_of",
     "length ?bl <= LENGTH(?'a) ==>
      shiftr1 (of_bl ?bl) = of_bl (butlast ?bl)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.ucast_of_bl_up",
     "length ?bl <= size (of_bl ?bl) ==> ucast (of_bl ?bl) = of_bl ?bl",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_var 0)))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.is_aligned_to_bl",
     "is_aligned ?w ?n = (True ~: set (drop (size ?w - ?n) (to_bl ?w)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_var 0)),
               template_app (template_hole 0, template_var 1))))))),
    ("Reversed_Bit_Lists.bin_last_bl_to_bin",
     "odd (bl_to_bin ?bs) = (?bs ~= [] & last ?bs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_hole 5))),
                template_app (template_hole 4, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Reversed_Bit_Lists.rrs0",
     "(rotater (?m + ?n) ?z = ?xs) = (?xs = rotater ?n (rotater ?m ?z))",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1))))),
    ("Reversed_Bit_Lists.takefill_alt",
     "takefill ?fill ?n ?l = take ?n ?l @ replicate (?n - length ?l) ?fill",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_var 2)))),
    ("Reversed_Bit_Lists.takefill_numeral_Cons",
     "takefill ?fill (numeral ?k) (?x # ?xs) =
      ?x # takefill ?fill (pred_numeral ?k) ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Reversed_Bit_Lists.drop_takefill",
     "drop ?k (takefill ?fill (?m + ?k) ?w) =
      takefill ?fill ?m (drop ?k ?w)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Reversed_Bit_Lists.butlast_bin_rest",
     "butlast ?bl = bin_to_bl (length ?bl - Suc 0) (bl_to_bin ?bl div 2)",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)),
             template_app (template_hole 6, template_hole 5))),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Reversed_Bit_Lists.bin_to_bl_cat",
     "bin_to_bl (?nv + ?nw) (concat_bit ?nw ?w ?v) =
      bin_to_bl_aux ?nv ?v (bin_to_bl ?nw ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.bin_nth_bl",
     "?n < ?m ==> bit ?w ?n = rev (bin_to_bl ?m ?w) ! ?n",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_var 2)))),
    ("Reversed_Bit_Lists.butlast_map",
     "?xs ~= [] ==> butlast (map ?f ?xs) = map ?f (butlast ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Reversed_Bit_Lists.nth_rev_to_bl",
     "?n < LENGTH(?'a) ==> rev (to_bl ?w) ! ?n = bit ?w ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Reversed_Bit_Lists.hd_sshiftr",
     "?n <= size ?w ==> hd (to_bl (?w >>> ?n)) = hd (to_bl ?w)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))))),
    ("Reversed_Bit_Lists.uint_of_bl_is_bl_to_bin_drop",
     "length (dropWhile Not ?l) <= LENGTH(?'a) ==>
      uint (of_bl ?l) = bl_to_bin ?l",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Reversed_Bit_Lists.rrs1",
     "?n mod length (rotater ?n ?z) = 0 ==> rotater ?n ?z = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1),
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_var 0))),
    ("Reversed_Bit_Lists.bl_to_bin_aux_cat",
     "bl_to_bin_aux ?bs (concat_bit ?nv ?v ?w) =
      concat_bit (?nv + length ?bs) (bl_to_bin_aux ?bs ?v) ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 3))),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_var 0))),
    ("Reversed_Bit_Lists.to_bl_use_of_bl",
     "(to_bl ?w = ?bl) = (?w = of_bl ?bl & length ?bl = length (to_bl ?w))",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 5, template_var 1))))
           ))),
    ("Reversed_Bit_Lists.takefill_append",
     "takefill ?fill (?m + length ?xs) (?xs @ ?w) =
      ?xs @ takefill ?fill ?m ?w",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.bl_shiftl",
     "to_bl (?w << ?n) =
      drop ?n (to_bl ?w) @ replicate (min (size ?w) ?n) False",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("Reversed_Bit_Lists.slice1_tf_tf'",
     "to_bl (slice1 ?n ?w) =
      rev (takefill False LENGTH(?'a)
            (rev (takefill False ?n (to_bl ?w))))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_hole 1)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1),
               template_app (template_hole 0, template_var 0))))))),
    ("Reversed_Bit_Lists.take_bin2bl_lem",
     "take ?m (bin_to_bl_aux (?m + ?n) ?w ?bs) =
      take ?m (bin_to_bl (?m + ?n) ?w)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1)))),
    ("Reversed_Bit_Lists.bin_to_bl_cat_app",
     "bin_to_bl (?n + ?nw) (concat_bit ?nw ?wa ?w) =
      bin_to_bl ?n ?w @ bin_to_bl ?nw ?wa",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.rbl_add",
     "rbl_add (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl ?n ?binb)) =
      rev (bin_to_bl ?n (?bina + ?binb))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Reversed_Bit_Lists.rbl_mult",
     "rbl_mult (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl ?n ?binb)) =
      rev (bin_to_bl ?n (?bina * ?binb))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Reversed_Bit_Lists.slice1_tf_tf",
     "slice1 ?n ?w =
      of_bl
       (rev (takefill False LENGTH(?'a)
              (rev (takefill False ?n (to_bl ?w)))))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app (template_hole 2, template_hole 1)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 1),
                 template_app (template_hole 0, template_var 0)))))))),
    ("Reversed_Bit_Lists.take_takefill",
     "?m <= ?n ==> take ?m (takefill ?fill ?n ?w) = takefill ?fill ?m ?w",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Reversed_Bit_Lists.last_bin_last",
     "0 < length ?xs ==> last ?xs = odd (bl_to_bin ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.take_shiftr",
     "?n <= size ?w ==> take ?n (to_bl (?w >> ?n)) = replicate ?n False",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Reversed_Bit_Lists.of_bl_length",
     "length ?xs < LENGTH(?'a) ==> of_bl ?xs < 2 ^ length ?xs",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 0),
          template_app (template_hole 7, template_hole 6))],
       template_inequation
        (less_than, template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_app (template_hole 8, template_var 0))))),
    ("Reversed_Bit_Lists.rbl_add_app2",
     "length ?bla <= length ?blb ==>
      rbl_add ?bla (?blb @ ?blc) = rbl_add ?bla ?blb",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.rbl_mult_app2",
     "length ?bla <= length ?blb ==>
      rbl_mult ?bla (?blb @ ?blc) = rbl_mult ?bla ?blb",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.of_bl_drop'",
     "?lend = length ?bl - LENGTH(?'a) ==>
      of_bl (drop ?lend ?bl) = of_bl ?bl",
     template_implication
      ([template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 0)),
            template_app (template_hole 4, template_hole 3)))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Reversed_Bit_Lists.blrs0",
     "?n mod length (to_bl ?w) = 0 ==> to_bl (word_rotl ?n ?w) = to_bl ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Reversed_Bit_Lists.brrs0",
     "?n mod length (to_bl ?w) = 0 ==> to_bl (word_rotr ?n ?w) = to_bl ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_mask",
     "to_bl (mask ?n) =
      replicate (LENGTH(?'a) - ?n) False @
      replicate (min LENGTH(?'a) ?n) True",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_hole 3)),
               template_var 0)),
           template_hole 0)))),
    ("Reversed_Bit_Lists.bl_word_and",
     "to_bl (and ?v ?w) = map2 (&) (to_bl ?v) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 5, template_var 0))))),
    ("Reversed_Bit_Lists.bl_word_or",
     "to_bl (or ?v ?w) = map2 (|) (to_bl ?v) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 5, template_var 0))))),
    ("Reversed_Bit_Lists.bin_to_bl_bintr",
     "bin_to_bl ?n (take_bit ?m ?bin) =
      replicate (?n - ?m) False @ bin_to_bl (min ?n ?m) ?bin",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Reversed_Bit_Lists.drop_bin2bl_aux",
     "drop ?m (bin_to_bl_aux ?n ?bin ?bs) =
      bin_to_bl_aux (?n - ?m) ?bin (drop (?m - ?n) ?bs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_cat",
     "bin_to_bl_aux (?nv + ?nw) (concat_bit ?nw ?w ?v) ?bs =
      bin_to_bl_aux ?nv ?v (bin_to_bl_aux ?nw ?w ?bs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 4), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.of_bl_append",
     "of_bl (?xs @ ?ys) = of_bl ?xs * 2 ^ length ?ys + of_bl ?ys",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 8, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 8, template_var 0)))),
    ("Reversed_Bit_Lists.of_bl_Cons",
     "of_bl (?x # ?xs) = of_bool ?x * 2 ^ length ?xs + of_bl ?xs",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_app (template_hole 0, template_var 0)))),
         template_app (template_hole 9, template_var 0)))),
    ("Reversed_Bit_Lists.slice_no_bin",
     "slice ?n (numeral ?w) =
      of_bl
       (takefill False (LENGTH(?'b) - ?n)
         (bin_to_bl LENGTH(?'b) (numeral ?w)))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1),
         template_app (template_hole 8, template_var 0)),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_hole 2)),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.takefill_minus",
     "0 < ?n ==> takefill ?fill (Suc (?n - 1)) ?w = takefill ?fill ?n ?w",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0))),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.nth_bin_to_bl",
     "?n < ?m ==> bin_to_bl ?m ?w ! ?n = bit ?w (?m - Suc ?n)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2)))))),
    ("Reversed_Bit_Lists.takefill_le",
     "?m <= ?n ==> takefill ?x ?m (takefill ?x ?n ?l) = takefill ?x ?m ?l",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Reversed_Bit_Lists.last_bin_last'",
     "0 < length ?xs ==> last ?xs = odd (bl_to_bin_aux ?xs ?w)",
     template_implication
      ([template_inequation
         (less_than, template_hole 9,
          template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Reversed_Bit_Lists.rotater1_zip",
     "length ?xs = length ?ys ==>
      rotater1 (zip ?xs ?ys) = zip (rotater1 ?xs) (rotater1 ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.sshiftr1_bl_of",
     "length ?bl = LENGTH(?'a) ==>
      sshiftr1 (of_bl ?bl) = of_bl (hd ?bl # butlast ?bl)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 0),
          template_app (template_hole 7, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.rbl_add_take2",
     "length ?bla <= length ?blb ==>
      rbl_add ?bla (take (length ?bla) ?blb) = rbl_add ?bla ?blb",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.rbl_mult_take2",
     "length ?bla <= length ?blb ==>
      rbl_mult ?bla (take (length ?bla) ?blb) = rbl_mult ?bla ?blb",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.rrs0",
     "?n mod length ?y = 0 ==> (rotater ?n ?z = ?y) = (?y = ?z)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app (template_hole 4, template_var 1)),
          template_hole 3)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_equation (template_var 1, template_var 0)))),
    ("Reversed_Bit_Lists.scast_down_drop",
     "source_size scast = target_size scast + ?n ==>
      to_bl (scast ?w) = drop ?n (to_bl ?w)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_hole 6),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 6)),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.ucast_down_drop",
     "source_size ucast = target_size ucast + ?n ==>
      to_bl (ucast ?w) = drop ?n (to_bl ?w)",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_hole 6),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 6)),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.sshiftr_clamp_pos",
     "[| LENGTH(?'a) <= ?n; 0 <= sint ?x |] ==> ?x >>> ?n = 0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_hole 6),
          template_var 1),
        template_inequation
         (less_equals, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Reversed_Bit_Lists.bl_to_bin_inj",
     "[| bl_to_bin ?bs = bl_to_bin ?cs; length ?bs = length ?cs |]
      ==> ?bs = ?cs",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Reversed_Bit_Lists.bin_nth_uint'",
     "bit (uint ?w) ?n =
      (rev (bin_to_bl (size ?w) (uint ?w)) ! ?n & ?n < size ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 6, template_var 1)))),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 1, template_var 1))))),
    ("Reversed_Bit_Lists.bin_nth_uint",
     "bit (uint ?w) ?n =
      (rev (bin_to_bl LENGTH(?'a) (uint ?w)) ! ?n & ?n < LENGTH(?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)),
                   template_app (template_hole 7, template_var 1)))),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_hole 1))))),
    ("Reversed_Bit_Lists.bl_bin_bl_rep_drop",
     "bin_to_bl ?n (bl_to_bin ?bl) =
      replicate (?n - length ?bl) False @ drop (length ?bl - ?n) ?bl",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_var 1)),
           template_var 0)))),
    ("Reversed_Bit_Lists.bl_word_xor",
     "to_bl (xor ?v ?w) = map2 (~=) (to_bl ?v) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 6, template_var 1)),
           template_app (template_hole 6, template_var 0))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_cat_app",
     "bin_to_bl_aux (?n + ?nw) (concat_bit ?nw ?wa ?w) ?bs =
      bin_to_bl ?n ?w @ bin_to_bl_aux ?nw ?wa ?bs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.word_cat_bl_no_bin",
     "word_cat (numeral ?a) (numeral ?b) =
      of_bl
       (bin_to_bl LENGTH(?'aa) (numeral ?a) @
        bin_to_bl LENGTH(?'b) (numeral ?b))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 1)),
         template_app (template_hole 8, template_var 0)),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)),
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 1, template_hole 0)),
             template_app (template_hole 2, template_var 0)))))),
    ("Reversed_Bit_Lists.takefill_minus_simps",
     "0 < ?n ==> takefill ?fill ?n [] = ?fill # takefill ?fill (?n - 1) []",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1),
           template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_hole 3))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_one_minus_simp",
     "0 < ?n ==>
      bin_to_bl_aux ?n 1 ?bl = bin_to_bl_aux (?n - 1) 0 (True # ?bl)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_hole 5),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3)),
             template_hole 2),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_zero_minus_simp",
     "0 < ?n ==>
      bin_to_bl_aux ?n 0 ?bl = bin_to_bl_aux (?n - 1) 0 (False # ?bl)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_hole 4),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.butlast_rest_bl2bin_aux",
     "?bl ~= [] ==>
      bl_to_bin_aux (butlast ?bl) ?w = bl_to_bin_aux ?bl ?w div 2",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Reversed_Bit_Lists.to_bl_nth",
     "?n < size ?w ==> to_bl ?w ! ?n = bit ?w (size ?w - Suc ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 6, template_var 0)),
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.nth_to_bl",
     "?n < LENGTH(?'a) ==> to_bl ?w ! ?n = bit ?w (LENGTH(?'a) - Suc ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 7, template_hole 6)),
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.bl_of_nth_nth_le",
     "?n <= length ?xs ==>
      bl_of_nth ?n ((!) (rev ?xs)) = drop (length ?xs - ?n) ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 6, template_var 0)),
               template_var 1)),
           template_var 0)))),
    ("Reversed_Bit_Lists.take_sshiftr",
     "?n <= size ?w ==>
      take ?n (to_bl (?w >>> ?n)) = replicate ?n (hd (to_bl ?w))",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)))))),
    ("Reversed_Bit_Lists.of_bl_take_to_bl_eq_drop_bit",
     "?n <= LENGTH(?'a) ==>
      of_bl (take ?n (to_bl ?w)) = drop_bit (LENGTH(?'a) - ?n) ?w",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 7, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 7, template_hole 6)),
               template_var 1)),
           template_var 0)))),
    ("Reversed_Bit_Lists.bin_to_bl_drop_bit",
     "?k = ?m + ?n ==>
      bin_to_bl ?m (drop_bit ?n ?c) = take ?m (bin_to_bl ?k ?c)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0))))),
    ("Reversed_Bit_Lists.take_takefill'",
     "?n = ?k + ?m ==>
      take ?k (takefill ?fill ?n ?w) = takefill ?fill ?k ?w",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Reversed_Bit_Lists.rotate_eq_mod",
     "?m mod length ?xs = ?n mod length ?xs ==>
      rotate ?m ?xs = rotate ?n ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2),
            template_app (template_hole 2, template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app (template_hole 2, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Reversed_Bit_Lists.rotater_eqs",
     "?m mod length ?z = ?n mod length ?z ==>
      rotater ?n ?z = rotater ?m ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2),
            template_app (template_hole 2, template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app (template_hole 2, template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.word_rotr_eqs",
     "?m mod LENGTH(?'a) = ?n mod LENGTH(?'a) ==>
      word_rotr ?n ?w = word_rotr ?m ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2),
            template_app (template_hole 3, template_hole 2)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_hole 2)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.word_rotl_eqs",
     "?n mod LENGTH(?'a) = ?na mod LENGTH(?'a) ==>
      word_rotl ?n ?w = word_rotl ?na ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2),
            template_app (template_hole 3, template_hole 2)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_hole 2)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.sshiftr_clamp_neg",
     "[| LENGTH(?'a) <= ?n; sint ?x < 0 |] ==> ?x >>> ?n = - 1",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 8, template_hole 7),
          template_var 1),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 0),
          template_hole 4)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app (template_hole 1, template_hole 0)))),
    ("Reversed_Bit_Lists.trunc_bl2bin_aux",
     "take_bit ?m (bl_to_bin_aux ?bl ?w) =
      bl_to_bin_aux (drop (length ?bl - ?m) ?bl)
       (take_bit (?m - length ?bl) ?w)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 1))),
           template_var 0)))),
    ("Reversed_Bit_Lists.test_bit_of_bl",
     "bit (of_bl ?bl) ?n =
      (rev ?bl ! ?n & ?n < LENGTH(?'a) & ?n < length ?bl)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.bit_of_bl_iff",
     "bit (of_bl ?bs) ?n =
      (rev ?bs ! ?n & ?n < LENGTH(?'a) & ?n < length ?bs)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.word_rep_drop",
     "to_bl (of_bl ?bl) =
      replicate (LENGTH(?'a) - length ?bl) False @
      drop (length ?bl - LENGTH(?'a)) ?bl",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)),
                 template_app (template_hole 2, template_var 0))),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 4, template_hole 3))),
           template_var 0)))),
    ("Reversed_Bit_Lists.rbbl_Cons",
     "?b # rev (bin_to_bl ?n ?x) =
      rev (bin_to_bl (Suc ?n) (of_bool ?b + 2 * ?x))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 2),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0))),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 0)))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_bintr",
     "bin_to_bl_aux ?n (take_bit ?m ?bin) ?bl =
      replicate (?n - ?m) False @ bin_to_bl_aux (min ?n ?m) ?bin ?bl",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_hole 1)),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.drop_rev_takefill",
     "length ?xs <= ?n ==>
      drop (?n - length ?xs) (rev (takefill False ?n (rev ?xs))) = ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 6, template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0),
               template_app (template_hole 2, template_var 1)))),
         template_var 1))),
    ("Reversed_Bit_Lists.takefill_le'",
     "?n = ?m + ?k ==>
      takefill ?x ?m (takefill ?x ?n ?l) = takefill ?x ?m ?l",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0)))),
    ("Reversed_Bit_Lists.shiftr_bl_of",
     "length ?bl <= LENGTH(?'a) ==>
      of_bl ?bl >> ?n = of_bl (take (length ?bl - ?n) ?bl)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 7, template_var 1)),
                 template_var 0)),
             template_var 1))))),
    ("Reversed_Bit_Lists.ucast_up_app",
     "source_size ucast + ?n = target_size ucast ==>
      to_bl (ucast ?w) = replicate ?n False @ to_bl ?w",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_hole 7)),
            template_var 1),
          template_app (template_hole 6, template_hole 7))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 7, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.atd_lem",
     "[| take ?n ?xs = ?t; drop ?n ?xs = ?d |] ==> ?xs = ?t @ ?d",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_var 0)],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.to_bl_ucast",
     "to_bl (ucast ?w) =
      replicate (LENGTH(?'a) - LENGTH(?'b)) False @
      drop (LENGTH(?'b) - LENGTH(?'a)) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 11, template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)),
                 template_app (template_hole 4, template_hole 3))),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 4, template_hole 3)),
               template_app (template_hole 6, template_hole 5))),
           template_app (template_hole 0, template_var 0))))),
    ("Reversed_Bit_Lists.bl_word_rotl_dt",
     "to_bl (word_rotl ?n ?w) =
      drop (?n mod LENGTH(?'a)) (to_bl ?w) @
      take (?n mod LENGTH(?'a)) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 7, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 7, template_var 0))))),
    ("Reversed_Bit_Lists.rbl_word_and",
     "rev (to_bl (and ?x ?y)) = map2 (&) (rev (to_bl ?x)) (rev (to_bl ?y))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1))),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)))))),
    ("Reversed_Bit_Lists.rbl_word_or",
     "rev (to_bl (or ?x ?y)) = map2 (|) (rev (to_bl ?x)) (rev (to_bl ?y))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1))),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0)))))),
    ("Reversed_Bit_Lists.bin_to_bl_or",
     "bin_to_bl ?n (or ?a ?b) =
      map2 (|) (bin_to_bl ?n ?a) (bin_to_bl ?n ?b)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0))))),
    ("Reversed_Bit_Lists.bl_and_mask",
     "to_bl (and ?w (mask ?n)) =
      replicate (LENGTH(?'a) - ?n) False @
      drop (LENGTH(?'a) - ?n) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1),
           template_app (template_hole 7, template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)),
                 template_var 0)),
             template_hole 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_var 0)),
           template_app (template_hole 9, template_var 1))))),
    ("Reversed_Bit_Lists.rbl_mult_Suc",
     "rbl_mult (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl (Suc ?n) ?binb)) =
      rbl_mult (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl ?n ?binb))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Reversed_Bit_Lists.bl_and_bin",
     "map2 (&) (bin_to_bl ?n ?v) (bin_to_bl ?n ?w) =
      bin_to_bl ?n (and ?v ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.bl_or_bin",
     "map2 (|) (bin_to_bl ?n ?v) (bin_to_bl ?n ?w) =
      bin_to_bl ?n (or ?v ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.word_rotl_dt",
     "word_rotl ?n ?w =
      of_bl
       (drop (?n mod LENGTH(?'a)) (to_bl ?w) @
        take (?n mod LENGTH(?'a)) (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_app (template_hole 3, template_hole 2))),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 3, template_hole 2))),
             template_app (template_hole 1, template_var 0)))))),
    ("Reversed_Bit_Lists.takefill_minus_simps",
     "0 < ?n ==>
      takefill ?fill ?n (?x21.0 # ?x22.0) =
      ?x21.0 # takefill ?fill (?n - 1) ?x22.0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_hole 0)),
             template_var 0))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_minus1_minus_simp",
     "0 < ?n ==>
      bin_to_bl_aux ?n (- 1) ?bl =
      bin_to_bl_aux (?n - 1) (- 1) (True # ?bl)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 1),
             template_app (template_hole 5, template_hole 4)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app (template_hole 5, template_hole 4)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.map_replicate_True",
     "?n = length ?xs ==> map2 (&) ?xs (replicate ?n True) = ?xs",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("Reversed_Bit_Lists.rbl_mult_gt1",
     "length ?bl <= ?m ==>
      rbl_mult ?bl (rev (bin_to_bl ?m ?binb)) =
      rbl_mult ?bl (rev (bin_to_bl (length ?bl) ?binb))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 2)),
               template_var 0)))))),
    ("Reversed_Bit_Lists.bin_split_take",
     "bin_split ?n ?c = (?a, ?b) ==>
      bin_to_bl ?m ?a = take ?m (bin_to_bl (?m + ?n) ?c)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4)),
             template_var 3))))),
    ("Reversed_Bit_Lists.bin_exhaust",
     "(!!x b. ?bin = of_bool b + 2 * x ==> ?Q) ==> ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Reversed_Bit_Lists.of_bl_length_less",
     "[| length ?x = ?k; ?k < LENGTH(?'a) |] ==> of_bl ?x < 2 ^ ?k",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1), template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_hole 6))],
       template_inequation
        (less_than, template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_var 0)))),
    ("Reversed_Bit_Lists.rbl_word_xor",
     "rev (to_bl (xor ?x ?y)) =
      map2 (~=) (rev (to_bl ?x)) (rev (to_bl ?y))",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1))),
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)))))),
    ("Reversed_Bit_Lists.bl_xor_bin",
     "map2 (~=) (bin_to_bl ?n ?v) (bin_to_bl ?n ?w) =
      bin_to_bl ?n (xor ?v ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Reversed_Bit_Lists.bshiftr1_bl",
     "to_bl (or (?w div 2) (push_bit (LENGTH(?'a) - Suc 0) (of_bool ?b))) =
      ?b # butlast (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_var 1),
               template_app
                (template_hole 11,
                 template_app (template_hole 10, template_hole 9)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)),
                 template_app (template_hole 4, template_hole 3))),
             template_app (template_hole 2, template_var 0)))),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 0,
           template_app (template_hole 14, template_var 1))))),
    ("Reversed_Bit_Lists.bshiftr1_eq",
     "or (?w div 2) (push_bit (LENGTH(?'a) - Suc 0) (of_bool ?b)) =
      of_bl (?b # butlast (to_bl ?w))",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 14, template_var 1),
             template_app
              (template_hole 13,
               template_app (template_hole 12, template_hole 11)))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7)),
               template_app (template_hole 6, template_hole 5))),
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_Bit0_minus_simp",
     "0 < ?n ==>
      bin_to_bl_aux ?n (numeral (num.Bit0 ?w)) ?bl =
      bin_to_bl_aux (?n - 1) (numeral ?w) (False # ?bl)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2)),
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.bin_to_bl_aux_Bit1_minus_simp",
     "0 < ?n ==>
      bin_to_bl_aux ?n (numeral (num.Bit1 ?w)) ?bl =
      bin_to_bl_aux (?n - 1) (numeral ?w) (True # ?bl)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 2)),
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Reversed_Bit_Lists.nth_takefill",
     "?m < ?n ==>
      takefill ?fill ?n ?l ! ?m =
      (if ?m < length ?l then ?l ! ?m else ?fill)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 3)),
           template_var 1)))),
    ("Reversed_Bit_Lists.rbl_add_long",
     "?n <= ?m ==>
      rbl_add (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl ?m ?binb)) =
      rev (bin_to_bl ?n (?bina + ?binb))",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Reversed_Bit_Lists.sd1",
     "LENGTH(?'a) + ?k = ?n ==>
      to_bl (slice1 ?n ?w) =
      takefill False LENGTH(?'a) (drop ?k (to_bl ?w))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_hole 7)),
            template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 8, template_hole 7)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.bl_of_nth_inj",
     "(!!k. k < ?n ==> ?f k = ?g k) ==> bl_of_nth ?n ?f = bl_of_nth ?n ?g",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.word_split_bl_eq",
     "word_split ?c =
      (of_bl (take (LENGTH(?'a) - LENGTH(?'d)) (to_bl ?c)),
       of_bl (drop (LENGTH(?'a) - LENGTH(?'d)) (to_bl ?c)))",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5)),
                   template_app (template_hole 4, template_hole 3))),
               template_app (template_hole 2, template_var 0)))),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5)),
                 template_app (template_hole 4, template_hole 3))),
             template_app (template_hole 2, template_var 0)))))),
    ("Reversed_Bit_Lists.map_replicate_False",
     "?n = length ?xs ==>
      map2 (&) ?xs (replicate ?n False) = replicate ?n False",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Reversed_Bit_Lists.nth_rotater1",
     "?n < length ?xs ==>
      rotater1 ?xs ! ?n = ?xs ! ((?n + (length ?xs - 1)) mod length ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 7, template_var 0)),
                   template_hole 0))),
             template_app (template_hole 7, template_var 0)))))),
    ("Reversed_Bit_Lists.bl_shiftr",
     "?n <= size ?w ==>
      to_bl (?w >> ?n) =
      replicate ?n False @ take (size ?w - ?n) (to_bl ?w)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_var 0)),
                 template_var 1)),
             template_app (template_hole 6, template_var 0)))))),
    ("Reversed_Bit_Lists.slice1_down_alt",
     "LENGTH(?'a) <= ?n ==>
      to_bl (slice1 ?n ?w) =
      takefill False LENGTH(?'a) (drop (?n - LENGTH(?'a)) (to_bl ?w))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_hole 8),
          template_var 1)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 9, template_hole 8)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 9, template_hole 8))),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.rrs0",
     "?m mod length ?xs = ?n mod length ?xs ==>
      (rotater ?m ?z = ?xs) = (rotater ?n ?z = ?xs)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3),
            template_app (template_hole 3, template_var 2)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_app (template_hole 3, template_var 2)))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2),
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2)))),
    ("Reversed_Bit_Lists.brrs0",
     "?m mod length (to_bl ?w) = ?n mod length (to_bl ?w) ==>
      to_bl (word_rotr ?n ?w) = rotater ?m (to_bl ?w)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 3, template_var 1))))),
    ("Reversed_Bit_Lists.blrs0",
     "?n mod length (to_bl ?w) = ?na mod length (to_bl ?w) ==>
      to_bl (word_rotl ?n ?w) = rotate ?na (to_bl ?w)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1))))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 1))))),
    ("Reversed_Bit_Lists.rrs1",
     "?m mod length (rotater ?m ?z) = ?n mod length (rotater ?m ?z) ==>
      rotater ?n ?z = rotater ?m ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Reversed_Bit_Lists.is_aligned_drop",
     "[| is_aligned ?w ?n; ?n <= LENGTH(?'a) |]
      ==> drop (LENGTH(?'a) - ?n) (to_bl ?w) = replicate ?n False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 7, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 7, template_hole 6)),
               template_var 0)),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Reversed_Bit_Lists.ucast_short_ucast_long_ingoreLeadingZero",
     "[| length (dropWhile Not (to_bl ?w)) <= LENGTH(?'s);
         LENGTH(?'s) <= LENGTH(?'l) |]
      ==> ucast (ucast ?w) = ?w",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app (template_hole 7, template_var 0))),
          template_app (template_hole 6, template_hole 5)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_hole 5),
          template_app (template_hole 4, template_hole 3))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Reversed_Bit_Lists.rotater_drop_take",
     "rotater ?n ?xs =
      drop (length ?xs - ?n mod length ?xs) ?xs @
      take (length ?xs - ?n mod length ?xs) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 2, template_var 0)))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 2, template_var 0)))),
           template_var 0)))),
    ("Reversed_Bit_Lists.su1",
     "LENGTH(?'a) = ?n + ?k ==>
      to_bl (slice1 ?n ?w) =
      takefill False LENGTH(?'a) (replicate ?k False @ to_bl ?w)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_hole 9),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 10, template_hole 9)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 3)),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.word_add_rbl",
     "[| to_bl ?v = ?vbl; to_bl ?w = ?wbl |]
      ==> to_bl (?v + ?w) = rev (rbl_add (rev ?vbl) (rev ?wbl))",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3), template_var 2),
        template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 1, template_var 0)))))),
    ("Reversed_Bit_Lists.word_mult_rbl",
     "[| to_bl ?v = ?vbl; to_bl ?w = ?wbl |]
      ==> to_bl (?v * ?w) = rev (rbl_mult (rev ?vbl) (rev ?wbl))",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3), template_var 2),
        template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 1, template_var 0)))))),
    ("Reversed_Bit_Lists.rtb_rbl_ariths",
     "[| rev (to_bl ?v) = ?ys; rev (to_bl ?w) = ?xs |]
      ==> rev (to_bl (?v + ?w)) = rbl_add ?ys ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 3)),
          template_var 2),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.rtb_rbl_ariths",
     "[| rev (to_bl ?v) = ?ys; rev (to_bl ?w) = ?xs |]
      ==> rev (to_bl (?v * ?w)) = rbl_mult ?ys ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 3)),
          template_var 2),
        template_equation
         (template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Reversed_Bit_Lists.rbl_mult_gt",
     "?n < ?m ==>
      rbl_mult (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl ?m ?binb)) =
      rbl_mult (rev (bin_to_bl ?n ?bina)) (rev (bin_to_bl ?n ?binb))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)))))),
    ("Reversed_Bit_Lists.take_rest_power_bin",
     "?m <= ?n ==>
      take ?m (bin_to_bl ?n ?w) =
      bin_to_bl ?m (((%w. w div 2) ^^ (?n - ?m)) ?w)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 2),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 2)),
               t_empty),
             template_var 0))))),
    ("Reversed_Bit_Lists.slice1_up_alts",
     "?k <= LENGTH(?'a) ==>
      to_bl (slice1 (LENGTH(?'a) - ?k) ?w) =
      takefill False LENGTH(?'a) (replicate ?k False @ to_bl ?w)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 10, template_hole 9))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 10, template_hole 9)),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 10, template_hole 9)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 3)),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.bl_sshiftr",
     "?n <= size ?w ==>
      to_bl (?w >>> ?n) =
      replicate ?n (hd (to_bl ?w)) @ take (size ?w - ?n) (to_bl ?w)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_hole 6, template_var 0)))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_var 0)),
                 template_var 1)),
             template_app (template_hole 6, template_var 0)))))),
    ("Reversed_Bit_Lists.slice1_up_alts",
     "?n <= LENGTH(?'a) ==>
      to_bl (slice1 ?n ?w) =
      takefill False LENGTH(?'a)
       (replicate (LENGTH(?'a) - ?n) False @ to_bl ?w)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 10, template_hole 9))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 10, template_hole 9)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 10, template_hole 9)),
                     template_var 1)),
                 template_hole 4)),
             template_app (template_hole 0, template_var 0)))))),
    ("Reversed_Bit_Lists.sshiftr_bl_of",
     "length ?bl = LENGTH(?'a) ==>
      of_bl ?bl >>> ?n =
      of_bl (replicate ?n (hd ?bl) @ take (length ?bl - ?n) ?bl)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 9, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 10, template_var 1)),
                   template_var 0)),
               template_var 1)))))),
    ("Reversed_Bit_Lists.bl_cast_long_short_long_ingoreLeadingZero_generic",
     "[| length (dropWhile Not (to_bl ?w)) <= LENGTH(?'s);
         LENGTH(?'s) <= LENGTH(?'l) |]
      ==> of_bl (to_bl (of_bl (to_bl ?w))) = ?w",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_app (template_hole 8, template_var 0))),
          template_app (template_hole 7, template_hole 6)),
        template_inequation
         (less_equals, template_app (template_hole 7, template_hole 6),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 8, template_var 0)))),
         template_var 0))),
    ("Reversed_Bit_Lists.bin_cat_foldl_lem",
     "foldl (%u k. concat_bit ?n k u) ?x ?xs =
      concat_bit (length ?xs * ?n) (foldl (%u k. concat_bit ?n k u) ?y ?xs)
       ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 2),
         template_var 1),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_var 0),
             template_var 1)),
         template_var 2))),
    ("Reversed_Bit_Lists.bshiftr1_numeral",
     "or (numeral ?w div 2) (push_bit (LENGTH(?'a) - Suc 0) (of_bool ?b)) =
      of_bl (?b # butlast (bin_to_bl LENGTH(?'a) (numeral ?w)))",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 15,
               template_app (template_hole 14, template_var 1)),
             template_app
              (template_hole 14,
               template_app (template_hole 13, template_hole 12)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_hole 8)),
               template_app (template_hole 7, template_hole 6))),
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 9, template_hole 8)),
               template_app (template_hole 0, template_var 1))))))),
    ("Reversed_Bit_Lists.bl_word_roti_dt'",
     "?n = nat (- ?i mod int (size ?w)) ==>
      to_bl (word_roti ?i ?w) = drop ?n (to_bl ?w) @ take ?n (to_bl ?w)",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)))))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 4, template_var 0)))))),
    ("Reversed_Bit_Lists.bl_word_roti_dt",
     "?n = nat (- ?i mod int LENGTH(?'a)) ==>
      to_bl (word_roti ?i ?w) = drop ?n (to_bl ?w) @ take ?n (to_bl ?w)",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6)))))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app (template_hole 4, template_var 0)))))),
    ("Reversed_Bit_Lists.word_roti_dt",
     "?n = nat (- ?i mod int LENGTH(?'a)) ==>
      word_roti ?i ?w = of_bl (drop ?n (to_bl ?w) @ take ?n (to_bl ?w))",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 1)),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_hole 7)))))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 1, template_var 0))))))),
    ("Reversed_Bit_Lists.is_aligned_replicate",
     "[| is_aligned ?w ?n; ?n <= LENGTH(?'a) |]
      ==> to_bl ?w =
          take (LENGTH(?'a) - ?n) (to_bl ?w) @ replicate ?n False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 8, template_hole 7))],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 8, template_hole 7)),
                   template_var 0)),
               template_app (template_hole 5, template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Reversed_Bit_Lists.bin_split_take1",
     "[| ?k = ?m + ?n; bin_split ?n ?c = (?a, ?b) |]
      ==> bin_to_bl ?m ?a = take ?m (bin_to_bl ?k ?c)",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 6, template_var 4),
            template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2))))),
    ("Reversed_Bit_Lists.horner_sum_of_bool_2_concat",
     "horner_sum of_bool 2
       (concat (map (%x. map (bit x) [0..<LENGTH(?'a)]) ?ws)) =
      horner_sum uint (2 ^ LENGTH(?'a)) ?ws",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 15, template_hole 14),
           template_app
            (template_hole 13,
             template_app (template_hole 12, template_hole 11))),
         template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, t_empty), template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 13,
                 template_app (template_hole 12, template_hole 11))),
             template_app (template_hole 4, template_hole 3))),
         template_var 0))),
    ("Reversed_Bit_Lists.bl_word_rotr_dt",
     "to_bl (word_rotr ?n ?w) =
      drop (LENGTH(?'a) - ?n mod LENGTH(?'a)) (to_bl ?w) @
      take (LENGTH(?'a) - ?n mod LENGTH(?'a)) (to_bl ?w)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 3, template_hole 2)))),
             template_app (template_hole 8, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 3, template_hole 2)))),
           template_app (template_hole 8, template_var 0))))),
    ("Reversed_Bit_Lists.word_rotr_dt",
     "word_rotr ?n ?w =
      of_bl
       (drop (LENGTH(?'a) - ?n mod LENGTH(?'a)) (to_bl ?w) @
        take (LENGTH(?'a) - ?n mod LENGTH(?'a)) (to_bl ?w))",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app (template_hole 4, template_hole 3)))),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 4, template_hole 3)))),
             template_app (template_hole 1, template_var 0)))))),
    ("Reversed_Bit_Lists.nth_rotater",
     "?n < length ?xs ==>
      rotater ?m ?xs ! ?n =
      ?xs ! ((?n + (length ?xs - ?m mod length ?xs)) mod length ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 6, template_var 1)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app (template_hole 6, template_var 1))))),
             template_app (template_hole 6, template_var 1)))))),
    ("Reversed_Bit_Lists.to_bl_2p",
     "?n < LENGTH(?'a) ==>
      to_bl (2 ^ ?n) =
      replicate (LENGTH(?'a) - Suc ?n) False @ True # replicate ?n False",
     template_implication
      ([template_inequation
         (less_than, template_var 0,
          template_app (template_hole 14, template_hole 13))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 14, template_hole 13)),
                   template_app (template_hole 3, template_var 0))),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 2)))))),
    ("Reversed_Bit_Lists.of_bl_length2",
     "length ?xs + ?c < LENGTH(?'a) ==>
      of_bl ?xs * 2 ^ ?c < 2 ^ (length ?xs + ?c)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1)),
            template_var 0),
          template_app (template_hole 8, template_hole 7))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))),
           template_app
            (template_app
              (template_hole 10,
               template_app (template_hole 9, template_var 1)),
             template_var 0))))),
    ("Reversed_Bit_Lists.less_is_drop_replicate",
     "?x < 2 ^ ?n ==>
      to_bl ?x =
      replicate (LENGTH(?'a) - ?n) False @
      drop (LENGTH(?'a) - ?n) (to_bl ?x)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_hole 9))),
            template_var 0))],
       template_equation
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)),
                   template_var 0)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)),
                 template_var 0)),
             template_app (template_hole 7, template_var 1)))))),
    ("Reversed_Bit_Lists.bin_nth_of_bl_aux",
     "bit (bl_to_bin_aux ?bl ?w) ?n =
      (?n < length ?bl & rev ?bl ! ?n |
       length ?bl <= ?n & bit ?w (?n - length ?bl))",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 4, template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 2)),
               template_var 0)),
           template_app
            (template_app (template_hole 9, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 4, template_var 2))))))),
    ("Reversed_Bit_Lists.word_rotl_dt_no_bin'",
     "word_rotl ?n (numeral ?w) =
      of_bl
       (drop (?n mod LENGTH(?'a)) (bin_to_bl LENGTH(?'a) (numeral ?w)) @
        take (?n mod LENGTH(?'a)) (bin_to_bl LENGTH(?'a) (numeral ?w)))",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 1),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 4, template_hole 3))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 4, template_hole 3)),
                 template_app (template_hole 1, template_var 0)))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_hole 3)),
               template_app (template_hole 1, template_var 0))))))),
    ("Reversed_Bit_Lists.take_sshiftr'",
     "?n <= size ?w ==>
      hd (to_bl (?w >>> ?n)) = hd (to_bl ?w) &
      take ?n (to_bl (?w >>> ?n)) = replicate ?n (hd (to_bl ?w))",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 1)))),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_var 1)))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)))))
           ))),
    ("Reversed_Bit_Lists.word_split_bl_no_bin",
     "word_split (numeral ?c) =
      (of_bl
        (take (LENGTH(?'a) - LENGTH(?'d))
          (bin_to_bl LENGTH(?'a) (numeral ?c))),
       of_bl
        (drop (LENGTH(?'a) - LENGTH(?'d))
          (bin_to_bl LENGTH(?'a) (numeral ?c))))",
     template_equation
      (template_app
        (template_hole 13, template_app (template_hole 12, template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6)),
                   template_app (template_hole 5, template_hole 4))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 7, template_hole 6)),
                 template_app (template_hole 2, template_var 0))))),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_hole 6)),
                 template_app (template_hole 5, template_hole 4))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 7, template_hole 6)),
               template_app (template_hole 2, template_var 0))))))),
    ("Reversed_Bit_Lists.sshiftr1_bl_of'",
     "LENGTH(?'a) <= length ?bl ==>
      sshiftr1 (of_bl ?bl) =
      of_bl
       (hd (drop (length ?bl - LENGTH(?'a)) ?bl) #
        butlast (drop (length ?bl - LENGTH(?'a)) ?bl))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_hole 9),
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 8, template_var 0)),
                       template_app (template_hole 10, template_hole 9))),
                   template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 8, template_var 0)),
                     template_app (template_hole 10, template_hole 9))),
                 template_var 0))))))),
    ("Reversed_Bit_Lists.tf_rev",
     "?n + ?k = ?m + length ?bl ==>
      takefill ?x ?m (rev (takefill ?y ?n ?bl)) =
      rev (takefill ?y ?m (rev (takefill ?x ?k (rev ?bl))))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_app (template_hole 3, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 5),
               template_var 2))),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 4),
                 template_app (template_hole 0, template_var 2)))))))),
    ("Reversed_Bit_Lists.of_bl_mult_and_not_mask_eq",
     "[| is_aligned ?a ?n; length ?b + ?m <= ?n |]
      ==> and (?a + of_bl ?b * 2 ^ ?m) (not (mask ?n)) = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 1)),
            template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_var 0)))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))),
         template_var 3))),
    ("Reversed_Bit_Lists.is_aligned_replicateD",
     "[| is_aligned ?w ?n; ?n <= LENGTH(?'a) |]
      ==> EX xs.
             to_bl ?w = xs @ replicate ?n False & length xs = size ?w - ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 12, template_hole 11))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Reversed_Bit_Lists.slice1_down_alt'",
     "[| ?sl = slice1 ?n ?w; ?fs = size ?sl; ?fs + ?k = ?n |]
      ==> to_bl ?sl = takefill False ?fs (drop ?k (to_bl ?w))",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 9, template_var 3),
            template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 7, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 0),
          template_var 3)],
       template_equation
        (template_app (template_hole 4, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Reversed_Bit_Lists.rotate_inv_eq",
     "rotater ?k (rotate ?k ?xs) = ?xs &
      rotate ?k (rotater ?k ?xs) = ?xs &
      rotater ?k (rotate ?k ?xs) = ?xs & rotate ?k (rotater ?k ?xs) = ?xs",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0))),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0))),
                 template_var 0))))
         )),
    ("Reversed_Bit_Lists.rotate1_map2",
     "length ?xs = length ?ys ==>
      rotate1 (map2 ?f ?xs ?ys) = map2 ?f (rotate1 ?xs) (rotate1 ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.rotater1_map2",
     "length ?xs = length ?ys ==>
      rotater1 (map2 ?f ?xs ?ys) = map2 ?f (rotater1 ?xs) (rotater1 ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1)))))),
    ("Reversed_Bit_Lists.nth_bin_to_bl_aux",
     "?n < ?m + length ?bl ==>
      bin_to_bl_aux ?m ?w ?bl ! ?n =
      (if ?n < ?m then bit ?w (?m - 1 - ?n) else ?bl ! (?n - ?m))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app (template_hole 7, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0),
               template_var 1)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_hole 0)),
                 template_var 3))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)))))),
    ("Reversed_Bit_Lists.word_split_bl",
     "?std = size ?c - size ?b ==>
      (?a = of_bl (take ?std (to_bl ?c)) &
       ?b = of_bl (drop ?std (to_bl ?c))) =
      (word_split ?c = (?a, ?b))",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 2)),
            template_app (template_hole 12, template_var 1)))],
       template_bimplication
        (template_predicate
          (
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 3),
                       template_app (template_hole 6, template_var 2))))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app (template_hole 6, template_var 2)))))
             ),
         template_equation
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Reversed_Bit_Lists.nth_rcat_lem",
     "?n < length ?wl * LENGTH(?'a) ==>
      rev (concat (map to_bl ?wl)) ! ?n =
      rev (to_bl (rev ?wl ! (?n div LENGTH(?'a)))) ! (?n mod LENGTH(?'a))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 0)),
            template_app (template_hole 11, template_hole 10)))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0)))),
           template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app (template_hole 11, template_hole 10)))))),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 11, template_hole 10)))))),
    ("Reversed_Bit_Lists.bl_and_aux_bin",
     "map2 (&) (bin_to_bl_aux ?n ?v ?bs) (bin_to_bl_aux ?n ?w ?cs) =
      bin_to_bl_aux ?n (and ?v ?w) (map2 (&) ?bs ?cs)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Reversed_Bit_Lists.bl_or_aux_bin",
     "map2 (|) (bin_to_bl_aux ?n ?v ?bs) (bin_to_bl_aux ?n ?w ?cs) =
      bin_to_bl_aux ?n (or ?v ?w) (map2 (|) ?bs ?cs)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Reversed_Bit_Lists.word_split_bl'",
     "[| ?std = size ?c - size ?b; word_split ?c = (?a, ?b) |]
      ==> ?a = of_bl (take ?std (to_bl ?c)) &
          ?b = of_bl (drop ?std (to_bl ?c))",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 2)),
            template_app (template_hole 11, template_var 1))),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_app (template_hole 8, template_var 0),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_app (template_hole 3, template_var 2))))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_app (template_hole 3, template_var 2)))))
           ))),
    ("Reversed_Bit_Lists.slice1_up_alt'",
     "[| ?sl = slice1 ?n ?w; ?fs = size ?sl; ?fs = ?n + ?k |]
      ==> to_bl ?sl = takefill False ?fs (replicate ?k False @ to_bl ?w)",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 10, template_var 3),
            template_var 2)),
        template_equation
         (template_var 1, template_app (template_hole 8, template_var 4)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 3)),
             template_app (template_hole 0, template_var 2)))))),
    ("Reversed_Bit_Lists.word_rotr_dt_no_bin'",
     "word_rotr ?n (numeral ?w) =
      of_bl
       (drop (LENGTH(?'a) - ?n mod LENGTH(?'a))
         (bin_to_bl LENGTH(?'a) (numeral ?w)) @
        take (LENGTH(?'a) - ?n mod LENGTH(?'a))
         (bin_to_bl LENGTH(?'a) (numeral ?w)))",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1),
         template_app (template_hole 10, template_var 0)),
       template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4)),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app (template_hole 5, template_hole 4)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 5, template_hole 4)),
                 template_app (template_hole 1, template_var 0)))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4)),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app (template_hole 5, template_hole 4)))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 5, template_hole 4)),
               template_app (template_hole 1, template_var 0))))))),
    ("Reversed_Bit_Lists.bl_xor_aux_bin",
     "map2 (~=) (bin_to_bl_aux ?n ?v ?bs) (bin_to_bl_aux ?n ?w ?cs) =
      bin_to_bl_aux ?n (xor ?v ?w) (map2 (~=) ?bs ?cs)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Reversed_Bit_Lists.rotate_map2",
     "length ?xs = length ?ys ==>
      rotate ?n (map2 ?f ?xs ?ys) =
      map2 ?f (rotate ?n ?xs) (rotate ?n ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("Reversed_Bit_Lists.rotater_map2",
     "length ?xs = length ?ys ==>
      rotater ?n (map2 ?f ?xs ?ys) =
      map2 ?f (rotater ?n ?xs) (rotater ?n ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2))),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)))))),
    ("Reversed_Bit_Lists.is_aligned_add_conv",
     "[| is_aligned ?w ?n; ?off < 2 ^ ?n |]
      ==> to_bl (?w + ?off) =
          take (LENGTH(?'a) - ?n) (to_bl ?w) @
          drop (LENGTH(?'a) - ?n) (to_bl ?off)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 11,
                template_app (template_hole 10, template_hole 9))),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1)),
                   template_var 1)),
               template_app (template_hole 7, template_var 2))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)),
                 template_var 1)),
             template_app (template_hole 7, template_var 0)))))),
    ("Reversed_Bit_Lists.but_last_zip",
     "[| length ?xs = length ?ys; ?xs ~= [] |]
      ==> last (zip ?xs ?ys) = (last ?xs, last ?ys) &
          butlast (zip ?xs ?ys) = zip (butlast ?xs) (butlast ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 1),
          template_app (template_hole 14, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 11))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 1)),
                   template_app (template_hole 4, template_var 0)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Reversed_Bit_Lists.rbl_mult_split",
     "?P (rbl_mult (?y # ?ys) ?xs) =
      (ALL ws.
          length ws = Suc (length ?ys) -->
          ws = False # rbl_mult ?ys ?xs -->
          (?y --> ?P (rbl_add ws ?xs)) & (~ ?y --> ?P ws))",
     template_equation
      (template_app
        (template_var 3,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 9, t_empty))),
    ("Reversed_Bit_Lists.xor_2p_to_bl",
     "to_bl (xor ?x (2 ^ ?n)) =
      (if ?n < LENGTH(?'a)
       then take (LENGTH(?'a) - Suc ?n) (to_bl ?x) @
            (~ rev (to_bl ?x) ! ?n) # drop (LENGTH(?'a) - ?n) (to_bl ?x)
       else to_bl ?x)",
     template_equation
      (template_app
        (template_hole 18,
         template_app
          (template_app (template_hole 17, template_var 1),
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_hole 15,
                 template_app (template_hole 14, template_hole 13))),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 11, template_var 0),
               template_app (template_hole 10, template_hole 9))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 10, template_hole 9)),
                     template_app (template_hole 5, template_var 0))),
                 template_app (template_hole 18, template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 18, template_var 1))),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 10, template_hole 9)),
                     template_var 0)),
                 template_app (template_hole 18, template_var 1))))),
         template_app (template_hole 18, template_var 1)))),
    ("Reversed_Bit_Lists.lth",
     "length ?xsa = length ?xs ==>
      rotate1 (map2 ?f (rotate ?na ?xsa) (rotate ?n ?xs)) =
      map2 ?f (rotate1 (rotate ?na ?xsa)) (rotate1 (rotate ?n ?xs))",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4),
          template_app (template_hole 9, template_var 3))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 4)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3)))),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 4))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3))))))),
    ("Reversed_Bit_Lists.lrth",
     "length ?xsa = length ?xs ==>
      rotater1 (map2 ?f (rotater ?na ?xsa) (rotater ?n ?xs)) =
      map2 ?f (rotater1 (rotater ?na ?xsa)) (rotater1 (rotater ?n ?xs))",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4),
          template_app (template_hole 9, template_var 3))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 4)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3)))),
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 4))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3))))))),
    ("Reversed_Bit_Lists.bin_to_bl_of_bl_eq",
     "[| is_aligned ?a ?n; length ?b + ?c <= ?n;
         length ?b + ?c < LENGTH(?'a) |]
      ==> bin_to_bl (length ?b) (uint (?a + of_bl ?b * 2 ^ ?c >> ?c)) = ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 1)),
            template_var 0),
          template_var 2),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 1)),
            template_var 0),
          template_app (template_hole 12, template_hole 11))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 14, template_var 1)),
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 1)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_hole 0))),
                       template_var 0)))),
               template_var 0))),
         template_var 1))),
    ("Reversed_Bit_Lists.but_last_map2",
     "[| length ?xs = length ?ys; ?xs ~= [] |]
      ==> last (map2 ?f ?xs ?ys) = ?f (last ?xs) (last ?ys) &
          butlast (map2 ?f ?xs ?ys) = map2 ?f (butlast ?xs) (butlast ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 2),
          template_app (template_hole 15, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 12))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 0)),
                       template_app
                        (template_app (template_hole 6, template_var 2),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_var 0,
                     template_app (template_hole 5, template_var 2)),
                   template_app (template_hole 4, template_var 1)))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 0)),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 1)))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 1, template_var 2)),
                   template_app (template_hole 0, template_var 1)))))
           ))),
    ("Reversed_Bit_Lists.rotate_inv_plus",
     "?k = ?m + ?n ==>
      rotater ?k (rotate ?n ?xs) = rotater ?m ?xs &
      rotate ?k (rotater ?n ?xs) = rotate ?m ?xs &
      rotater ?n (rotate ?k ?xs) = rotate ?m ?xs &
      rotate ?n (rotater ?k ?xs) = rotater ?m ?xs",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_var 0))),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 0))),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)))))
           ))),
    ("Reversed_Bit_Lists.rbl_add_split",
     "?P (rbl_add (?y # ?ys) (?x # ?xs)) =
      (ALL ws.
          length ws = length ?ys -->
          ws = rbl_add ?ys ?xs -->
          (?y -->
           (?x --> ?P (False # rbl_succ ws)) & (~ ?x --> ?P (True # ws))) &
          (~ ?y --> ?P (?x # ws)))",
     template_equation
      (template_app
        (template_var 4,
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0))),
       template_app (template_hole 9, t_empty))),
    ("Reversed_Bit_Lists.rotate_inv_rel",
     "?n <= ?k ==>
      rotater ?k (rotate ?n ?xs) = rotater (?k - ?n) ?xs &
      rotate ?k (rotater ?n ?xs) = rotate (?k - ?n) ?xs &
      rotater ?n (rotate ?k ?xs) = rotate (?k - ?n) ?xs &
      rotate ?n (rotater ?k ?xs) = rotater (?k - ?n) ?xs",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2)),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_var 0))),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 2)),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0))),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 2)),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 2)),
                     template_var 0)))))
           ))),
    ("Reversed_Bit_Lists.aligned_bl_add_size",
     "[| ?n <= size ?x; drop (size ?x - ?n) (to_bl ?x) = replicate ?n False;
         take (size ?x - ?n) (to_bl ?y) = replicate (size ?x - ?n) False |]
      ==> to_bl (?x + ?y) =
          take (size ?x - ?n) (to_bl ?x) @ drop (size ?x - ?n) (to_bl ?y)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_var 1)),
                template_var 2)),
            template_app (template_hole 5, template_var 1)),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_hole 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_var 1)),
                template_var 2)),
            template_app (template_hole 5, template_var 0)),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_var 1)),
                template_var 2)),
            template_hole 3))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 9, template_var 1)),
                   template_var 2)),
               template_app (template_hole 5, template_var 1))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 9, template_var 1)),
                 template_var 2)),
             template_app (template_hole 5, template_var 0))))))]
