Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Lambda_ZTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Lambda_ZTemplates" via "Draft.ExtrEqs")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Lambda_ZTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Lambda_ZTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.154s elapsed time, 0.626s cpu time, 0.057s GC time
Loading theory "Draft.Z" (required by "Draft.Lambda_ZTemplates" via "Draft.Lambda_Z")
locale z_property
  fixes bullet :: "'a => 'a"  (\<open>_\<^sup>\<bullet>\<close> [1000])
    and R :: "('a * 'a) set"
  assumes "z_property bullet R"
### theory "HOL-Library.Set_Algebras"
### 0.196s elapsed time, 0.796s cpu time, 0.057s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Lambda_ZTemplates" via "Draft.ExtrEqs")
locale angle_property
  fixes bullet :: "'a => 'a"  (\<open>_\<^sup>\<bullet>\<close> [1000])
    and R :: "('a * 'a) set"
    and R\<^sub>d :: "('a * 'a) set"
  assumes "angle_property bullet R R\<^sub>d"
### theory "Draft.Z"
### 0.080s elapsed time, 0.321s cpu time, 0.000s GC time
Loading theory "Draft.Lambda_Z" (required by "Draft.Lambda_ZTemplates")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.884s elapsed time, 3.492s cpu time, 0.407s GC time
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.810s elapsed time, 3.070s cpu time, 0.350s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.085s elapsed time, 6.293s cpu time, 1.052s GC time
Loading theory "Draft.Templates" (required by "Draft.Lambda_ZTemplates" via "Draft.ExtrEqs")
val graph_aux_tac = fn: Proof.context -> int -> tactic
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.177s cpu time, 0.037s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Lambda_ZTemplates")
Proofs for inductive predicate(s) "Betap"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.542s elapsed time, 1.125s cpu time, 0.079s GC time
### theory "Draft.Lambda_Z"
### 2.646s elapsed time, 6.824s cpu time, 1.111s GC time
Loading theory "Draft.Lambda_ZTemplates"
val templateLemmas =
   [("Lambda_Z.self",
     "?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?t\<^sup>\<bullet>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Lambda_Z.Var_BetaD",
     "Var ?x \<rightarrow>\<^sub>\<beta> ?t ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 1)),
                  template_var 0)),
              template_hole 1)
            )],
       template_predicate (template_hole 0))),
    ("Lambda_Z.fresh_atom_bullet",
     "atom ?x \<sharp> ?t ==> atom ?x \<sharp> ?t\<^sup>\<bullet>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lambda_Z.fresh_subst_id",
     "atom ?x \<sharp> ?t ==> subst ?x ?s ?t = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 1),
         template_var 1))),
    ("Lambda_Z.Var_BetasD",
     "Var ?x \<rightarrow>\<^sub>\<beta>\<^sup>* ?t ==> ?t = Var ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_equation
        (template_var 0, template_app (template_hole 3, template_var 1)))),
    ("Lambda_Z.bullet_App",
     "(App ?s\<^sup>\<bullet> ?t\<^sup>\<bullet>,
       (App ?s ?t)\<^sup>\<bullet>)
      : {\<rightarrow>\<^sub>\<beta>}^=",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_var 0)))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))
         )),
    ("Lambda_Z.rhs",
     "subst ?x ?s\<^sup>\<bullet>
       ?t\<^sup>\<bullet> \<rightarrow>\<^sub>\<beta>\<^sup>*
      (subst ?x ?s ?t)\<^sup>\<bullet>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app (template_hole 2, template_var 1)),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1),
                   template_var 0)))),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Lambda_Z.Beta_eqvt",
     "?x1.0 \<rightarrow>\<^sub>\<beta> ?x2.0 ==>
      ?p \<bullet> ?x1.0 \<rightarrow>\<^sub>\<beta> ?p \<bullet> ?x2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_hole 1)
           ))),
    ("Lambda_Z.Beta_fresh",
     "[| ?s \<rightarrow>\<^sub>\<beta> ?t; atom ?x \<sharp> ?s |]
      ==> atom ?x \<sharp> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_hole 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Lambda_Z.subst_Beta",
     "?t \<rightarrow>\<^sub>\<beta> ?t' ==>
      subst ?x ?s ?t \<rightarrow>\<^sub>\<beta> subst ?x ?s ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0),
                   template_var 2))),
             template_hole 1)
           ))),
    ("Lambda_Z.Abs_Betas",
     "?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?t ==>
      Abs ?x ?s \<rightarrow>\<^sub>\<beta>\<^sup>* Abs ?x ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("Lambda_Z.Betas_fresh",
     "[| ?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?t; atom ?x \<sharp> ?s |]
      ==> atom ?x \<sharp> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Lambda_Z.Beta_in_subst",
     "?s \<rightarrow>\<^sub>\<beta> ?s' ==>
      subst ?x ?s ?t \<rightarrow>\<^sub>\<beta>\<^sup>* subst ?x ?s' ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 3),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 2),
                   template_var 0))),
             template_app (template_hole 0, template_hole 2))
           ))),
    ("Lambda_Z.Abs_BetaD",
     "Abs ?x ?s \<rightarrow>\<^sub>\<beta> ?t ==>
      EX u. ?t = Abs ?x u & ?s \<rightarrow>\<^sub>\<beta> u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)),
                  template_var 0)),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lambda_Z.lambda_Z",
     "?s \<rightarrow>\<^sub>\<beta> ?t ==>
      ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?s\<^sup>\<bullet> &
      ?s\<^sup>\<bullet> \<rightarrow>\<^sub>\<beta>\<^sup>*
      ?t\<^sup>\<bullet>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app (template_hole 1, template_var 1))),
                 template_app (template_hole 0, template_hole 3))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, template_hole 3)))
           ))),
    ("Lambda_Z.fresh_subst",
     "[| atom ?z \<sharp> ?s; ?z = ?y | atom ?z \<sharp> ?t |]
      ==> atom ?z \<sharp> subst ?y ?s ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Lambda_Z.app_beta_Betas",
     "[| ?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?s';
         ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?t' |]
      ==> app_beta ?s ?t \<rightarrow>\<^sub>\<beta>\<^sup>*
          app_beta ?s' ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("Lambda_Z.App_Betas",
     "[| ?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?t;
         ?u \<rightarrow>\<^sub>\<beta>\<^sup>* ?v |]
      ==> App ?s ?u \<rightarrow>\<^sub>\<beta>\<^sup>* App ?t ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("Lambda_Z.subst_Betas",
     "[| ?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?s';
         ?t \<rightarrow>\<^sub>\<beta>\<^sup>* ?t' |]
      ==> subst ?x ?s ?t \<rightarrow>\<^sub>\<beta>\<^sup>*
          subst ?x ?s' ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app (template_hole 2, template_hole 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 4),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 1))),
             template_app (template_hole 2, template_hole 1))
           ))),
    ("Lambda_Z.Abs_BetaE",
     "[| Abs ?x ?s \<rightarrow>\<^sub>\<beta> ?t;
         !!u. [| ?t = Abs ?x u; ?s \<rightarrow>\<^sub>\<beta> u |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_hole 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Lambda_Z.subst_subst",
     "[| ?x ~= ?y; atom ?x \<sharp> ?u |]
      ==> subst ?y ?u (subst ?x ?s ?t) =
          subst ?x (subst ?y ?u ?s) (subst ?y ?u ?t)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 4)),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0))))),
    ("Lambda_Z.Abs_BetasE",
     "[| Abs ?x ?s \<rightarrow>\<^sub>\<beta>\<^sup>* ?t;
         !!u. [| ?t = Abs ?x u; ?s \<rightarrow>\<^sub>\<beta>\<^sup>* u |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app (template_hole 3, template_hole 2))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Lambda_Z.app_beta_exhaust",
     "[| !!x s'. [| atom x \<sharp> ?c; ?s = Abs x s' |] ==> ?thesis;
         (!!t. app_beta ?s t = App ?s t) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_implication
         ([template_predicate (template_app (template_hole 7, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Lambda_Z.atom_name_sort",
     "sort_of (atom ?a) = Sort ''Lambda_Z.name'' []",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_hole 3),
                           template_hole 2),
                         template_hole 2),
                       template_hole 3),
                     template_hole 3),
                   template_hole 2),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 4, template_hole 2),
                               template_hole 3),
                             template_hole 3),
                           template_hole 3),
                         template_hole 3),
                       template_hole 2),
                     template_hole 2),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 4, template_hole 2),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_hole 3),
                         template_hole 2),
                       template_hole 2),
                     template_hole 3)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 4, template_hole 3),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 3),
                           template_hole 2),
                         template_hole 2),
                       template_hole 3)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 4, template_hole 3),
                                     template_hole 3),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 3),
                             template_hole 2),
                           template_hole 2),
                         template_hole 3)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_hole 4, template_hole 2), template_hole 3),
                                     template_hole 3),
                                   template_hole 3),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 2),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 4, template_hole 2), template_hole 2),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 2),
                                 template_hole 3),
                               template_hole 2),
                             template_hole 3)),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app (template_hole 4, template_hole 3), template_hole 2),
   template_hole 3),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 2),
                               template_hole 3)),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app (template_hole 4, template_hole 3), template_hole 2),
     template_hole 2),
   template_hole 2),
 template_hole 3),
                                     template_hole 2),
                                   template_hole 3),
                                 template_hole 3)),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app (template_hole 4, template_hole 3), template_hole 2),
       template_hole 2),
     template_hole 2),
   template_hole 3),
 template_hole 2),
                                     template_hole 2),
                                   template_hole 3)),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app (template_hole 4, template_hole 2),
           template_hole 3),
         template_hole 3),
       template_hole 3),
     template_hole 3),
   template_hole 2),
 template_hole 2),
                                     template_hole 3)),
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 2),
             template_hole 3),
           template_hole 2),
         template_hole 2),
       template_hole 3),
     template_hole 2),
   template_hole 2),
 template_hole 3)),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app
    (template_app
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_hole 2),
               template_hole 3),
             template_hole 2),
           template_hole 3),
         template_hole 3),
       template_hole 2),
     template_hole 2),
   template_hole 3)),
                                     template_hole 1)))))))))))))),
         template_hole 0))),
    ("Lambda_Z.Beta_strong_induct",
     "[| ?x1.0 \<rightarrow>\<^sub>\<beta> ?x2.0;
         !!x t s c.
            [| {atom x} \<sharp>* c; atom x \<sharp> t |]
            ==> ?P c (App (Abs x s) t) (subst x t s);
         !!s t u c.
            [| s \<rightarrow>\<^sub>\<beta> t; !!c. ?P c s t |]
            ==> ?P c (App s u) (App t u);
         !!s t u c.
            [| s \<rightarrow>\<^sub>\<beta> t; !!c. ?P c s t |]
            ==> ?P c (App u s) (App u t);
         !!s t x c.
            [| {atom x} \<sharp>* c; s \<rightarrow>\<^sub>\<beta> t;
               !!c. ?P c s t |]
            ==> ?P c (Abs x s) (Abs x t) |]
      ==> ?P ?c ?x1.0 ?x2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_hole 11)
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 1, template_var 0),
               template_var 3),
             template_var 2)
           )))]:
   (string * thm * template) list
### theory "Draft.Lambda_ZTemplates"
### 0.531s elapsed time, 0.714s cpu time, 0.065s GC time
val it = (): unit
