   [("Set_Interval.finite_atLeastZeroLessThan_int", "finite {0..<?u}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Limits.Zfun_zero", "Zfun (%x. 0::?'b) ?F",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)
         )),
    ("Zorn.well_order_on", "EX r. well_order_on ?A r",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Nat.Suc_Rep_not_Zero_Rep", "Suc_Rep ?x ~= Zero_Rep",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Nat.Zero_not_Suc", "0 ~= Suc ?m",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Nat.Suc_not_Zero", "Suc ?m ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Transitive_Closure.ntrancl_Zero", "ntrancl 0 ?R = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Zorn.refl_on_init_seg_of", "?r initial_segment_of ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0)),
           template_hole 0)
         )),
    ("Set_Interval.card_atLeastZeroLessThan_int", "card {0..<?u} = nat ?u",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Nat.Zero_neq_Suc", "0 = Suc ?m ==> ?R",
     template_implication
      ([template_equation
         (template_hole 1, template_app (template_hole 0, template_var 1))],
       template_predicate (template_var 0))),
    ("Nat.Suc_neq_Zero", "Suc ?m = 0 ==> ?R",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1), template_hole 0)],
       template_predicate (template_var 0))),
    ("Regular_Exp.le_rexp_Zero",
     "Regular_Exp.le_rexp ?r Zero ==> ?r = Zero",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Zorn.chainsD2", "?c : chains ?S ==> ?c <= ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Zorn.mono_Chains", "?r <= ?s ==> Chains ?r <= Chains ?s",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Limits.Zfun_minus", "Zfun ?f ?F ==> Zfun (%x. - ?f x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("Zorn.Chains_relation_of",
     "?C : Chains (relation_of ?P ?A) ==> ?C <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Limits.Zfun_norm_iff", "Zfun (%x. norm (?f x)) ?F = Zfun ?f ?F",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_var 0),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Limits.Zfun_mult_right", "Zfun ?f ?F ==> Zfun (%x. ?a * ?f x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Limits.Zfun_mult_left", "Zfun ?f ?F ==> Zfun (%x. ?f x * ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Limits.tendsto_Zfun_iff",
     "(?f \<longlongrightarrow> ?a) ?F = Zfun (%x. ?f x - ?a) ?F",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("Set_Interval.image_atLeastZeroLessThan_int",
     "0 <= ?u ==> {0..<?u} = int ` {..<nat ?u}",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 6), template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Zorn.chain_subset_antisym_Union",
     "[| chain\<^sub>\<subseteq> ?R; ALL r:?R. antisym r |]
      ==> antisym (\<Union> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Zorn.chain_subset_trans_Union",
     "[| chain\<^sub>\<subseteq> ?R; ALL r:?R. trans r |]
      ==> trans (\<Union> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Zorn.Chains_subset",
     "Chains ?r <= {C. pred_on.chain UNIV (%x y. (x, y) : ?r) C}",
     template_inequation
      (less_equals, template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Zorn.initial_segment_of_Diff",
     "?p initial_segment_of ?q ==> ?p - ?s initial_segment_of ?q - ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_hole 1)
           ))),
    ("Zorn.wf_Union_wf_init_segs",
     "[| ?R : Chains init_seg_of; ALL r:?R. wf r |] ==> wf (\<Union> ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_hole 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Zorn.Chains_init_seg_of_Union",
     "[| ?R : Chains init_seg_of; ?r : ?R |]
      ==> ?r initial_segment_of \<Union> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))),
             template_hole 4)
           ))),
    ("Zorn.antisym_init_seg_of",
     "[| ?r initial_segment_of ?s; ?s initial_segment_of ?r |] ==> ?r = ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 1)),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Limits.Zfun_diff",
     "[| Zfun ?f ?F; Zfun ?g ?F |] ==> Zfun (%x. ?f x - ?g x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Limits.Zfun_add",
     "[| Zfun ?f ?F; Zfun ?g ?F |] ==> Zfun (%x. ?f x + ?g x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Limits.ZfunD",
     "[| Zfun ?f ?F; 0 < ?r |]
      ==> \<forall>\<^sub>F x in ?F. norm (?f x) < ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Limits.Zfun_mult",
     "[| Zfun ?f ?F; Zfun ?g ?F |] ==> Zfun (%x. ?f x * ?g x) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 1)
           ))),
    ("Limits.Zfun_ssubst",
     "[| \<forall>\<^sub>F x in ?F. ?f x = ?g x; Zfun ?g ?F |]
      ==> Zfun ?f ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Zorn.chain_subset_Total_Union",
     "[| chain\<^sub>\<subseteq> ?R; ALL r:?R. Total r |]
      ==> Total (\<Union> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Limits.Zfun_le",
     "[| Zfun ?g ?F; ALL x. norm (?f x) <= norm (?g x) |] ==> Zfun ?f ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Zorn.trans_init_seg_of",
     "[| ?r initial_segment_of ?s; ?s initial_segment_of ?t |]
      ==> ?r initial_segment_of ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_hole 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Zorn.Chains_subset'",
     "refl ?r ==>
      {C. pred_on.chain UNIV (%x y. (x, y) : ?r) C} <= Chains ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Limits.ZfunI",
     "(!!r. 0 < r ==> \<forall>\<^sub>F x in ?F. norm (?f x) < r) ==>
      Zfun ?f ?F",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Zorn.pairwise_chain_Union",
     "[| !!S. S : ?\<C> ==> pairwise ?R S; chain\<^sub>\<subseteq> ?\<C> |]
      ==> pairwise ?R (\<Union> ?\<C>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Zorn.Inter_in_chain",
     "[| finite ?\<B>; ?\<B> ~= {}; subset.chain ?\<A> ?\<B> |]
      ==> \<Inter> ?\<B> : ?\<B>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Zorn.Union_in_chain",
     "[| finite ?\<B>; ?\<B> ~= {}; subset.chain ?\<A> ?\<B> |]
      ==> \<Union> ?\<B> : ?\<B>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Zorn.subset_maxchain_max",
     "[| subset.maxchain ?A ?C; ?X : ?A; \<Union> ?C <= ?X |]
      ==> \<Union> ?C = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_equation
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Zorn.Chains_inits_DiffI",
     "?R : Chains init_seg_of ==> {r - ?s |r. r : ?R} : Chains init_seg_of",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 5, t_empty)),
             template_app (template_hole 7, template_hole 6))
           ))),
    ("Zorn.Zorn_Lemma",
     "ALL C:chains ?A. \<Union> C : ?A ==>
      EX M:?A. ALL X:?A. M <= X --> X = M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("Zorn.chainsD",
     "[| ?c : chains ?S; ?x : ?c; ?y : ?c |] ==> ?x <= ?y | ?y <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Limits.Zfun_imp_Zfun",
     "[| Zfun ?f ?F;
         \<forall>\<^sub>F x in ?F. norm (?g x) <= norm (?f x) * ?K |]
      ==> Zfun ?g ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)
           ))),
    ("Zorn.subset_chain_insert",
     "subset.chain ?\<A> (insert ?B ?\<B>) =
      (?B : ?\<A> &
       (ALL X:?\<B>. X <= ?B | ?B <= X) & subset.chain ?\<A> ?\<B>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 0), t_empty)),
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_hole 6),
             template_var 0))))),
    ("Zorn.subset_Zorn'",
     "(!!C. subset.chain ?A C ==> \<Union> C : ?A) ==>
      EX M:?A. ALL X:?A. M <= X --> X = M",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("Zorn.chains_extend",
     "[| ?c : chains ?S; ?z : ?S; ALL x:?c. x <= ?z |]
      ==> {?z} Un ?c : chains ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)),
                 template_var 2)),
             template_app (template_hole 6, template_var 1))
           ))),
    ("Zorn.Zorn_Lemma2",
     "ALL C:chains ?A. EX U:?A. ALL X:C. X <= U ==>
      EX M:?A. ALL X:?A. M <= X --> X = M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("Zorn.subset_Zorn",
     "(!!C. subset.chain ?A C ==> EX U:?A. ALL X:C. X <= U) ==>
      EX M:?A. ALL X:?A. M <= X --> X = M",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("Zorn.chain_mono",
     "[| !!x y. [| x : ?A; y : ?A; ?P x y |] ==> ?Q x y;
         pred_on.chain ?A ?P ?C |]
      ==> pred_on.chain ?A ?Q ?C",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Zorn.finite_subset_Union_chain",
     "[| finite ?A; ?A <= \<Union> ?\<B>; ?\<B> ~= {};
         subset.chain ?\<A> ?\<B>;
         !!B. [| B : ?\<B>; ?A <= B |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Zorn.subset_Zorn_nonempty",
     "[| ?\<A> ~= {};
         !!\<C>.
            [| \<C> ~= {}; subset.chain ?\<A> \<C> |]
            ==> \<Union> \<C> : ?\<A> |]
      ==> EX M:?\<A>. ALL X:?\<A>. M <= X --> X = M",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 10)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("Zorn.predicate_Zorn",
     "[| partial_order_on ?A (relation_of ?P ?A);
         !!C. C : Chains (relation_of ?P ?A) ==> EX u:?A. ALL a:C. ?P a u |]
      ==> EX m:?A. ALL a:?A. ?P m a --> a = m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Zorn.Zorns_po_lemma",
     "[| Partial_order ?r;
         !!C. C : Chains ?r ==> EX u:Field ?r. ALL a:C. (a, u) : ?r |]
      ==> EX m:Field ?r. ALL a:Field ?r. (m, a) : ?r --> a = m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 0)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 9, template_var 0)),
             t_empty)
           ))),
    ("Zorn.dependent_wf_choice",
     "[| wf ?R;
         !!f g x r.
            (!!z. (z, x) : ?R ==> f z = g z) ==> ?P f x r = ?P g x r;
         !!x f. (!!y. (y, x) : ?R ==> ?P f y (f y)) ==> EX r. ?P f x r |]
      ==> EX f. ALL x. ?P f x (f x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty))))]
