Loading theory "Draft.TESL" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.Hygge_Theory" via "Draft.Corecursive_Prop" via "Draft.SymbolicPrimitive" via "Draft.Run")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.139s elapsed time, 0.568s cpu time, 0.055s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.891s cpu time, 0.055s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.335s elapsed time, 1.336s cpu time, 0.147s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.002s elapsed time, 3.796s cpu time, 0.885s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.076s elapsed time, 3.922s cpu time, 0.838s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.989s elapsed time, 6.247s cpu time, 1.165s GC time
Loading theory "Draft.Templates" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.113s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Hygge_TheoryMoreTemplates")
Found termination order: "{}"
instantiation
  tag_const :: (field) field
  inverse_tag_const == inverse :: 'a tag_const => 'a tag_const
  divide_tag_const == divide :: 'a tag_const => 'a tag_const => 'a tag_const
  uminus_tag_const == uminus :: 'a tag_const => 'a tag_const
  minus_tag_const == minus :: 'a tag_const => 'a tag_const => 'a tag_const
  one_tag_const == one_class.one :: 'a tag_const
  times_tag_const == times :: 'a tag_const => 'a tag_const => 'a tag_const
  zero_tag_const == zero_class.zero :: 'a tag_const
  plus_tag_const == plus :: 'a tag_const => 'a tag_const => 'a tag_const
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
instantiation
  tag_const :: (order) order
  less_eq_tag_const == less_eq :: 'a tag_const => 'a tag_const => bool
  less_tag_const == less :: 'a tag_const => 'a tag_const => bool
Proofs for inductive predicate(s) "less_eq_tag_const"
  Proving monotonicity ...
instantiation
  tag_const :: (linorder) linorder
### theory "Draft.TESL"
### 2.484s elapsed time, 7.560s cpu time, 1.266s GC time
Loading theory "Draft.Run" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.Hygge_Theory" via "Draft.Corecursive_Prop" via "Draft.SymbolicPrimitive")
Found termination order: "(%p. size (time (time p))) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Run"
### 0.182s elapsed time, 0.375s cpu time, 0.000s GC time
Loading theory "Draft.Denotational" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.Hygge_Theory" via "Draft.Corecursive_Prop")
Loading theory "Draft.SymbolicPrimitive" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.Hygge_Theory" via "Draft.Corecursive_Prop")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.580s elapsed time, 1.300s cpu time, 0.106s GC time
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Denotational"
### 0.406s elapsed time, 0.975s cpu time, 0.138s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
Proofs for inductive predicate(s) "context_independency"
  Proving monotonicity ...
### theory "Draft.SymbolicPrimitive"
### 2.153s elapsed time, 2.895s cpu time, 0.344s GC time
Loading theory "Draft.Operational" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.Hygge_Theory" via "Draft.Corecursive_Prop")
Proofs for inductive predicate(s) "operational_semantics_intro"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operational_semantics_elim"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operational_semantics_step"
  Proving monotonicity ...
### theory "Draft.Operational"
### 0.254s elapsed time, 0.299s cpu time, 0.046s GC time
Loading theory "Draft.Corecursive_Prop" (required by "Draft.Hygge_TheoryMoreTemplates" via "Draft.Hygge_Theory")
Found termination order: "{}"
Found termination order: "(%p. size_list size (hamlet p)) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Corecursive_Prop"
### 0.507s elapsed time, 0.601s cpu time, 0.075s GC time
Loading theory "Draft.Hygge_Theory" (required by "Draft.Hygge_TheoryMoreTemplates")
consts
  measure_interpretation :: "'\<tau> TESL_atomic list => nat"
Found termination order: "{}"
### theory "Draft.Hygge_Theory"
### 0.141s elapsed time, 0.141s cpu time, 0.000s GC time
Loading theory "Draft.Hygge_TheoryMoreTemplates"
val templateLemmas =
   [("Hygge_Theory.sound_reduction'",
     "?\<S>\<^sub>1 \<hookrightarrow> ?\<S>\<^sub>2 ==>
      \<lbrakk> ?\<S>\<^sub>2 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g
      <= \<lbrakk> ?\<S>\<^sub>1 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Hygge_Theory.solve_start",
     "\<lbrakk>\<lbrakk> ?\<Psi> \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L =
      \<lbrakk> [], 0 \<turnstile> ?\<Psi> \<triangleright> [] \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Hygge_Theory.elimation_rules_strictly_decreasing_meas'",
     "?\<S>\<^sub>1 \<hookrightarrow>\<^sub>e ?\<S>\<^sub>2 ==>
      (?\<S>\<^sub>2, ?\<S>\<^sub>1)
      : measure \<mu>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Hygge_Theory.sound_reduction_generalized",
     "?\<S>\<^sub>1 \<hookrightarrow>\<^bsup>?k\<^esup> ?\<S>\<^sub>2 ==>
      \<lbrakk> ?\<S>\<^sub>2 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g
      <= \<lbrakk> ?\<S>\<^sub>1 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Hygge_Theory.complete_direct_successors'",
     "\<lbrakk> ?\<S> \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g
      <= \<Union>
          (HeronConf_interpretation `
           \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<S>)",
     template_inequation
      (less_equals, template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 1, t_empty))))),
    ("Hygge_Theory.branch_existence",
     "?\<rho>
      : \<lbrakk> ?\<S>\<^sub>1 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g ==>
      EX \<S>\<^sub>2.
         ?\<S>\<^sub>1 \<hookrightarrow> \<S>\<^sub>2 &
         ?\<rho>
         : \<lbrakk> \<S>\<^sub>2 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Hygge_Theory.branch_existence'",
     "?\<rho>
      : \<lbrakk> ?\<S>\<^sub>1 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g ==>
      EX \<S>\<^sub>2.
         ?\<S>\<^sub>1 \<hookrightarrow>\<^bsup>?k\<^esup> \<S>\<^sub>2 &
         ?\<rho>
         : \<lbrakk> \<S>\<^sub>2 \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Hygge_Theory.soundness",
     "[], 0 \<turnstile> ?\<Psi> \<triangleright> [] \<hookrightarrow>\<^bsup>?k\<^esup> ?\<S> ==>
      \<lbrakk> ?\<S> \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g
      <= \<lbrakk>\<lbrakk> ?\<Psi> \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9),
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_hole 3)))),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Hygge_Theory.elimation_rules_strictly_decreasing",
     "?\<Gamma>\<^sub>1, ?n\<^sub>1 \<turnstile> ?\<Psi>\<^sub>1 \<triangleright> ?\<Phi>\<^sub>1 \<hookrightarrow>\<^sub>e ?\<Gamma>\<^sub>2, ?n\<^sub>2 \<turnstile> ?\<Psi>\<^sub>2 \<triangleright> ?\<Phi>\<^sub>2 ==>
      \<mu> ?\<Psi>\<^sub>2 < \<mu> ?\<Psi>\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 7),
                  template_app
                   (template_app (template_hole 3, template_var 6),
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)))),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 5)))),
    ("Hygge_Theory.elimation_rules_strictly_decreasing_meas",
     "?\<Gamma>\<^sub>1, ?n\<^sub>1 \<turnstile> ?\<Psi>\<^sub>1 \<triangleright> ?\<Phi>\<^sub>1 \<hookrightarrow>\<^sub>e ?\<Gamma>\<^sub>2, ?n\<^sub>2 \<turnstile> ?\<Psi>\<^sub>2 \<triangleright> ?\<Phi>\<^sub>2 ==>
      (?\<Psi>\<^sub>2, ?\<Psi>\<^sub>1) : measure \<mu>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4)))),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 5)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Hygge_Theory.completeness",
     "?\<rho>
      : \<lbrakk>\<lbrakk> ?\<Psi> \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L ==>
      EX \<S>.
         [], 0 \<turnstile> ?\<Psi> \<triangleright> [] \<hookrightarrow>\<^bsup>?k\<^esup> \<S> &
         ?\<rho>
         : \<lbrakk> \<S> \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app (template_hole 11, template_var 1))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Hygge_Theory.complete_direct_successors",
     "\<lbrakk> ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi> \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g
      <= \<Union>
          (HeronConf_interpretation `
           \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi>)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 1, t_empty))))),
    ("Hygge_Theory.sound_reduction",
     "?\<Gamma>\<^sub>1, ?n\<^sub>1 \<turnstile> ?\<Psi>\<^sub>1 \<triangleright> ?\<Phi>\<^sub>1 \<hookrightarrow> ?\<Gamma>\<^sub>2, ?n\<^sub>2 \<turnstile> ?\<Psi>\<^sub>2 \<triangleright> ?\<Phi>\<^sub>2 ==>
      \<lbrakk>\<lbrakk> ?\<Gamma>\<^sub>2 \<rbrakk>\<rbrakk>\<^sub>p\<^sub>r\<^sub>i\<^sub>m Int
      \<lbrakk>\<lbrakk> ?\<Psi>\<^sub>2 \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L\<^bsup>\<ge> ?n\<^sub>2\<^esup> Int
      \<lbrakk>\<lbrakk> ?\<Phi>\<^sub>2 \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L\<^bsup>\<ge> Suc
                              ?n\<^sub>2\<^esup>
      <= \<lbrakk>\<lbrakk> ?\<Gamma>\<^sub>1 \<rbrakk>\<rbrakk>\<^sub>p\<^sub>r\<^sub>i\<^sub>m Int
         \<lbrakk>\<lbrakk> ?\<Psi>\<^sub>1 \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L\<^bsup>\<ge> ?n\<^sub>1\<^esup> Int
         \<lbrakk>\<lbrakk> ?\<Phi>\<^sub>1 \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L\<^bsup>\<ge> Suc
                                 ?n\<^sub>1\<^esup>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_app
                   (template_app (template_hole 6, template_var 6),
                    template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4)))),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_var 0))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 7)),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 6))),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app (template_hole 0, template_var 6)))))),
    ("Hygge_Theory.progress",
     "?\<rho>
      : \<lbrakk>\<lbrakk> ?\<Psi> \<rbrakk>\<rbrakk>\<^sub>T\<^sub>E\<^sub>S\<^sub>L ==>
      EX k \<Gamma>\<^sub>k \<Psi>\<^sub>k \<Phi>\<^sub>k.
         [], 0 \<turnstile> ?\<Psi> \<triangleright> [] \<hookrightarrow>\<^bsup>k\<^esup> \<Gamma>\<^sub>k, ?n \<turnstile> \<Psi>\<^sub>k \<triangleright> \<Phi>\<^sub>k &
         ?\<rho>
         : \<lbrakk> \<Gamma>\<^sub>k, ?n \<turnstile> \<Psi>\<^sub>k \<triangleright> \<Phi>\<^sub>k \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app (template_hole 13, template_var 1))
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Hygge_Theory.instant_index_increase",
     "?\<rho>
      : \<lbrakk> ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi> \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g ==>
      EX \<Gamma>\<^sub>k \<Psi>\<^sub>k \<Phi>\<^sub>k k.
         ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi> \<hookrightarrow>\<^bsup>k\<^esup> \<Gamma>\<^sub>k, Suc
         ?n \<turnstile> \<Psi>\<^sub>k \<triangleright> \<Phi>\<^sub>k &
         ?\<rho>
         : \<lbrakk> \<Gamma>\<^sub>k, Suc
  ?n \<turnstile> \<Psi>\<^sub>k \<triangleright> \<Phi>\<^sub>k \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_var 0)))))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Hygge_Theory.instant_index_increase_generalized",
     "[| ?n < ?n\<^sub>k;
         ?\<rho>
         : \<lbrakk> ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi> \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g |]
      ==> EX \<Gamma>\<^sub>k \<Psi>\<^sub>k \<Phi>\<^sub>k k.
             ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi> \<hookrightarrow>\<^bsup>k\<^esup> \<Gamma>\<^sub>k, ?n\<^sub>k \<turnstile> \<Psi>\<^sub>k \<triangleright> \<Phi>\<^sub>k &
             ?\<rho>
             : \<lbrakk> \<Gamma>\<^sub>k, ?n\<^sub>k \<turnstile> \<Psi>\<^sub>k \<triangleright> \<Phi>\<^sub>k \<rbrakk>\<^sub>c\<^sub>o\<^sub>n\<^sub>f\<^sub>i\<^sub>g",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_var 0)))))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Hygge_Theory.step_elim",
     "[| ?\<S>\<^sub>1 \<hookrightarrow> ?\<S>\<^sub>2;
         !!\<Gamma>\<^sub>1 n\<^sub>1 \<Psi>\<^sub>1 \<Phi>\<^sub>1
            \<Gamma>\<^sub>2 n\<^sub>2 \<Psi>\<^sub>2 \<Phi>\<^sub>2.
            [| ?\<S>\<^sub>1 =
               \<Gamma>\<^sub>1, n\<^sub>1 \<turnstile> \<Psi>\<^sub>1 \<triangleright> \<Phi>\<^sub>1;
               ?\<S>\<^sub>2 =
               \<Gamma>\<^sub>2, n\<^sub>2 \<turnstile> \<Psi>\<^sub>2 \<triangleright> \<Phi>\<^sub>2;
               \<Gamma>\<^sub>1, n\<^sub>1 \<turnstile> \<Psi>\<^sub>1 \<triangleright> \<Phi>\<^sub>1 \<hookrightarrow>\<^sub>i \<Gamma>\<^sub>2, n\<^sub>2 \<turnstile> \<Psi>\<^sub>2 \<triangleright> \<Phi>\<^sub>2 |]
            ==> ?P;
         !!\<Gamma>\<^sub>1 n\<^sub>1 \<Psi>\<^sub>1 \<Phi>\<^sub>1
            \<Gamma>\<^sub>2 n\<^sub>2 \<Psi>\<^sub>2 \<Phi>\<^sub>2.
            [| ?\<S>\<^sub>1 =
               \<Gamma>\<^sub>1, n\<^sub>1 \<turnstile> \<Psi>\<^sub>1 \<triangleright> \<Phi>\<^sub>1;
               ?\<S>\<^sub>2 =
               \<Gamma>\<^sub>2, n\<^sub>2 \<turnstile> \<Psi>\<^sub>2 \<triangleright> \<Phi>\<^sub>2;
               \<Gamma>\<^sub>1, n\<^sub>1 \<turnstile> \<Psi>\<^sub>1 \<triangleright> \<Phi>\<^sub>1 \<hookrightarrow>\<^sub>e \<Gamma>\<^sub>2, n\<^sub>2 \<turnstile> \<Psi>\<^sub>2 \<triangleright> \<Phi>\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Hygge_TheoryMoreTemplates"
### 0.703s elapsed time, 1.599s cpu time, 1.049s GC time
val it = (): unit
