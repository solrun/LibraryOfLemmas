Loading theory "Draft.TESL" (required by "Draft.OperationalMoreTemplates" via "Draft.Operational" via "Draft.SymbolicPrimitive" via "Draft.Run")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.154s elapsed time, 0.635s cpu time, 0.042s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.201s elapsed time, 0.831s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.397s elapsed time, 1.590s cpu time, 0.114s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.BigO"
### 0.942s elapsed time, 3.564s cpu time, 0.901s GC time
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.057s elapsed time, 3.748s cpu time, 0.941s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 1.995s elapsed time, 6.190s cpu time, 1.187s GC time
Loading theory "Draft.Templates" (required by "Draft.OperationalMoreTemplates" via "Draft.ExtrEqs")
instantiation
  tag_const :: (field) field
  inverse_tag_const == inverse :: 'a tag_const => 'a tag_const
  divide_tag_const == divide :: 'a tag_const => 'a tag_const => 'a tag_const
  uminus_tag_const == uminus :: 'a tag_const => 'a tag_const
  minus_tag_const == minus :: 'a tag_const => 'a tag_const => 'a tag_const
  one_tag_const == one_class.one :: 'a tag_const
  times_tag_const == times :: 'a tag_const => 'a tag_const => 'a tag_const
  zero_tag_const == zero_class.zero :: 'a tag_const
  plus_tag_const == plus :: 'a tag_const => 'a tag_const => 'a tag_const
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.053s elapsed time, 0.105s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OperationalMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
instantiation
  tag_const :: (order) order
  less_eq_tag_const == less_eq :: 'a tag_const => 'a tag_const => bool
  less_tag_const == less :: 'a tag_const => 'a tag_const => bool
Proofs for inductive predicate(s) "less_eq_tag_const"
  Proving monotonicity ...
instantiation
  tag_const :: (linorder) linorder
### theory "Draft.TESL"
### 2.441s elapsed time, 7.445s cpu time, 1.283s GC time
Loading theory "Draft.Run" (required by "Draft.OperationalMoreTemplates" via "Draft.Operational" via "Draft.SymbolicPrimitive")
Found termination order: "(%p. size (time (time p))) <*mlex*> {}"
Found termination order: "{}"
### theory "Draft.Run"
### 0.183s elapsed time, 0.380s cpu time, 0.000s GC time
Loading theory "Draft.SymbolicPrimitive" (required by "Draft.OperationalMoreTemplates" via "Draft.Operational")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.549s elapsed time, 1.162s cpu time, 0.116s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
Proofs for inductive predicate(s) "context_independency"
  Proving monotonicity ...
### theory "Draft.SymbolicPrimitive"
### 2.045s elapsed time, 2.401s cpu time, 0.302s GC time
Loading theory "Draft.Operational" (required by "Draft.OperationalMoreTemplates")
Proofs for inductive predicate(s) "operational_semantics_intro"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operational_semantics_elim"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operational_semantics_step"
  Proving monotonicity ...
### theory "Draft.Operational"
### 0.249s elapsed time, 0.291s cpu time, 0.044s GC time
Loading theory "Draft.OperationalMoreTemplates"
val templateLemmas =
   [("Operational.empty_spec_reductions",
     "[], 0 \<turnstile> [] \<triangleright> [] \<hookrightarrow>\<^bsup>?k\<^esup> [], ?k \<turnstile> [] \<triangleright> []",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_hole 0)))),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 0))))
         )),
    ("Operational.operational_semantics_trans_generalized",
     "[| ?\<C>\<^sub>1 \<hookrightarrow>\<^bsup>?n\<^esup> ?\<C>\<^sub>2;
         ?\<C>\<^sub>2 \<hookrightarrow>\<^bsup>?m\<^esup> ?\<C>\<^sub>3 |]
      ==> ?\<C>\<^sub>1 \<hookrightarrow>\<^bsup>?n +
           ?m\<^esup> ?\<C>\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_hole 1),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1)),
                 template_hole 1),
               template_var 3),
             template_var 0)
           ))),
    ("Operational.Cnext_solve_instant",
     "{?\<Gamma>, Suc ?n \<turnstile> ?\<Phi> \<triangleright> []}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> [] \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)))),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_tagrel",
     "{\<lfloor>\<tau>\<^sub>v\<^sub>a\<^sub>r
                 (?K\<^sub>1,
                  ?n), \<tau>\<^sub>v\<^sub>a\<^sub>r
                        (?K\<^sub>2, ?n)\<rfloor> \<in> ?R #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (time-relation \<lfloor>?K\<^sub>1, ?K\<^sub>2\<rfloor> \<in> ?R) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (time-relation \<lfloor>?K\<^sub>1, ?K\<^sub>2\<rfloor> \<in> ?R) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app (template_hole 7, template_var 6),
                             template_var 5))),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_var 4),
                           template_var 5))),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 5),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_app (template_hole 3, template_var 6),
                         template_var 4),
                       template_var 3)),
                   template_var 0))))),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_weakly_precedes",
     "{\<lceil>#\<^sup>\<le> ?K\<^sub>2
                ?n, #\<^sup>\<le> ?K\<^sub>1
                     ?n\<rceil> \<in> %(x, y). x <= y #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 weakly precedes
                      ?K\<^sub>2) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 weakly precedes
                                    ?K\<^sub>2) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 9, template_var 5),
                           template_var 4)),
                       template_app
                        (template_app (template_hole 9, template_var 3),
                         template_var 4)),
                     template_app (template_hole 8, t_empty))),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 4),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 5)),
                   template_var 0))))),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_strictly_precedes",
     "{\<lceil>#\<^sup>\<le> ?K\<^sub>2
                ?n, #\<^sup>< ?K\<^sub>1 ?n\<rceil> \<in> %(x, y). x <= y #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 strictly precedes
                      ?K\<^sub>2) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 strictly precedes
                                    ?K\<^sub>2) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app (template_hole 10, template_var 5),
                           template_var 4)),
                       template_app
                        (template_app (template_hole 9, template_var 3),
                         template_var 4)),
                     template_app (template_hole 8, t_empty))),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 4),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 5)),
                   template_var 0))))),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_sporadicon",
     "{?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 sporadic ?\<tau> on ?K\<^sub>2) #
                     ?\<Phi>,
       ?K\<^sub>1 \<Up> ?n #
       ?K\<^sub>2 \<Down> ?n @ ?\<tau> #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 sporadic ?\<tau> on ?K\<^sub>2) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 6),
             template_app
              (template_app (template_hole 9, template_var 5),
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_var 3),
                         template_var 2),
                       template_var 1)),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_var 5)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 1),
                           template_var 5),
                         template_var 2)),
                     template_var 6))),
               template_app
                (template_app (template_hole 9, template_var 5),
                 template_app
                  (template_app (template_hole 8, template_var 4),
                   template_var 0)))),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_implies",
     "{?K\<^sub>1 \<not>\<Up> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 implies
                      ?K\<^sub>2) #
                     ?\<Phi>,
       ?K\<^sub>1 \<Up> ?n #
       ?K\<^sub>2 \<Up> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 implies
                      ?K\<^sub>2) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 implies
                                    ?K\<^sub>2) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 5),
                     template_var 4)),
                 template_var 3)),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 1)),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 4)),
                     template_var 3))),
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 5),
                         template_var 1)),
                     template_var 0))))),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_implies_not",
     "{?K\<^sub>1 \<not>\<Up> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 implies not
                      ?K\<^sub>2) #
                     ?\<Phi>,
       ?K\<^sub>1 \<Up> ?n #
       ?K\<^sub>2 \<not>\<Up> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 implies not
                      ?K\<^sub>2) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 implies not
                                    ?K\<^sub>2) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 5),
                     template_var 4)),
                 template_var 3)),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 1)),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 1),
                         template_var 4)),
                     template_var 3))),
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 5),
                         template_var 1)),
                     template_var 0))))),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_kills",
     "{?K\<^sub>1 \<not>\<Up> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 kills
                      ?K\<^sub>2) #
                     ?\<Phi>,
       ?K\<^sub>1 \<Up> ?n #
       ?K\<^sub>2 \<not>\<Up> \<ge> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 kills
                      ?K\<^sub>2) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 kills
                                    ?K\<^sub>2) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 5),
                     template_var 4)),
                 template_var 3)),
             template_app
              (template_app (template_hole 8, template_var 4),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 5),
                       template_var 1)),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 4, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 4)),
                     template_var 3))),
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 5, template_var 5),
                         template_var 1)),
                     template_var 0))))),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Operational.Cnext_solve_timedelayed",
     "{?K\<^sub>1 \<not>\<Up> ?n #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 time-delayed by ?\<delta>\<tau> on ?K\<^sub>2 implies ?K\<^sub>3) #
                     ?\<Phi>,
       ?K\<^sub>1 \<Up> ?n #
       ?K\<^sub>2 @ ?n \<oplus> ?\<delta>\<tau> \<Rightarrow> ?K\<^sub>3 #
       ?\<Gamma>, ?n \<turnstile> ?\<Psi> \<triangleright> (?K\<^sub>1 time-delayed by ?\<delta>\<tau> on ?K\<^sub>2 implies ?K\<^sub>3) #
                     ?\<Phi>}
      <= \<C>\<^sub>n\<^sub>e\<^sub>x\<^sub>t ?\<Gamma>, ?n \<turnstile> (?K\<^sub>1 time-delayed by ?\<delta>\<tau> on ?K\<^sub>2 implies ?K\<^sub>3) #
                                   ?\<Psi> \<triangleright> ?\<Phi>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 7),
                     template_var 6)),
                 template_var 5)),
             template_app
              (template_app (template_hole 8, template_var 6),
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 5, template_var 7),
                           template_var 3),
                         template_var 2),
                       template_var 1)),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 4, template_var 7),
                       template_var 6)),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 3, template_var 2),
                             template_var 6),
                           template_var 3),
                         template_var 1)),
                     template_var 5))),
               template_app
                (template_app (template_hole 8, template_var 6),
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 5, template_var 7),
                             template_var 3),
                           template_var 2),
                         template_var 1)),
                     template_var 0))))),
           template_hole 2)),
       template_app (template_hole 1, t_empty)))]:
   (string * thm * template) list
### theory "Draft.OperationalMoreTemplates"
### 0.402s elapsed time, 0.557s cpu time, 0.044s GC time
val it = (): unit
