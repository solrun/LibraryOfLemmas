   [("Sophomores_Dream.norm_summable_imp_summable_on",
     "summable (%n. norm (?f n)) ==> ?f summable_on UNIV",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Sophomores_Dream.integrable_on_Icc_iff_Ioo",
     "(?f integrable_on {?a..?b}) = (?f integrable_on {?a<..<?b})",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sophomores_Dream.has_integral_Icc_iff_Ioo",
     "(?f has_integral ?I) {?a..?b} = (?f has_integral ?I) {?a<..<?b}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sophomores_Dream.norm_summable_imp_has_sum",
     "[| summable (%n. norm (?f n)); ?f sums ?S |] ==> has_sum ?f UNIV ?S",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Sophomores_Dream.summable_comparison_test_bigo",
     "[| summable (%n. norm (?g n)); ?f : O(?g) |] ==> summable ?f",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 1))
            )],
       template_predicate
        (template_app (template_hole 4, template_var 0)))),
    ("Sophomores_Dream.x_log_x_within_01_le",
     "?x : {0..1} ==> ?x * ln ?x : {- exp (- 1)..0}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 1, template_hole 4)))),
               template_hole 5))
           ))),
    ("Sophomores_Dream.integrable_cong",
     "(!!x. x : ?A ==> ?f x = ?g x) ==>
      (?f integrable_on ?A) = (?g integrable_on ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Sophomores_Dream.has_integral_cmul_iff'",
     "?c ~= 0 ==>
      ((%x. ?c *\<^sub>R ?f x) has_integral ?I) ?A =
      (?f has_integral ?I /\<^sub>R ?c) ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 1)),
           template_var 0)))),
    ("Sophomores_Dream.sophomores_dream_aux_integral",
     "((%x. (x * ln x) ^ ?n) has_integral
       (- 1) ^ ?n * fact ?n / real ((?n + 1) ^ (?n + 1)))
       {0<..<1}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 13, t_empty),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app (template_hole 8, template_hole 7)),
                       template_var 0)),
                   template_app (template_hole 6, template_var 0))),
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2)),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2))))),
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_hole 7))
         ))]
