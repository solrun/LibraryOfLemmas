   [("Contrib.Part_id", "Part ?A (%x. x) = ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), t_empty),
       template_var 0)),
    ("Contrib.map_some_list", "map the (map Some ?L) = ?L",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_var 0)),
    ("Contrib.insert_union", "?A Un insert ?a ?B = insert ?a ?A Un ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Contrib.dom_map_upd", "dom (?m(?a |-> ?b)) = insert ?a (dom ?m)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 2)))),
    ("Contrib.Ex1_one_point", "(EX! x. ?P x & x = ?a) = ?P ?a",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app (template_var 1, template_var 0))),
    ("Contrib.Part_Int", "Part (?A Int ?B) ?h = Part ?A ?h Int Part ?B ?h",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Contrib.basic_monos",
     "(if ?P then ?Q else ?R) = ((?P --> ?Q) & (~ ?P --> ?R))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Contrib.insert_or", "{s. s = ?t1.0 | ?P s} = insert ?t1.0 {s. ?P s}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, t_empty)))),
    ("Contrib.Part_Collect",
     "Part (?A Int {x. ?P x}) ?h = Part ?A ?h Int {x. ?P x}",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app (template_hole 0, t_empty)))),
    ("Contrib.Ex1_one_point2",
     "(EX! x. ?P x & ?Q x & x = ?a) = (?P ?a & ?Q ?a)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 2, template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Contrib.Collect_subset", "{x. x <= ?A & ?P x} = {x: Pow ?A. ?P x}",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app (template_hole 4, t_empty))),
    ("Contrib.Part_UNIV_Inl_comp",
     "(Part UNIV (Inl o ?f) = Part UNIV (Inl o ?g)) =
      (Part UNIV ?f = Part UNIV ?g)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8),
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_hole 8),
           template_app
            (template_app (template_hole 4, template_hole 6),
             template_var 0))),
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_app
          (template_app (template_hole 0, template_hole 1),
           template_var 0)))),
    ("Contrib.Int_expand",
     "{(S, S'). ?P S S' & ?Q S S'} =
      {(S, S'). ?P S S'} Int {(S, S'). ?Q S S'}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty)))))]
