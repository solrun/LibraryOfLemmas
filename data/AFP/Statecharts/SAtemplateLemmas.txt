   [("SA.finite_States", "finite (States ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SA.finite_Delta", "finite (Delta ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SA.neq_States", "States ?SA ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("SA.InitState_States", "InitState ?A : States ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SA.EX_State_SA", "EX S. S : States ?SA",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("SA.Label_Delta_subset", "Label (Delta ?SA) <= Labels ?SA",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SA.SeqAuto_select",
     "SeqAuto (States ?SA) (InitState ?SA) (Labels ?SA) (Delta ?SA)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("SA.Delta_source_States", "?T : Delta ?A ==> source ?T : States ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SA.Delta_target_States", "?T : Delta ?A ==> target ?T : States ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SA.Target_SAs_Delta_States",
     "Target (\<Union> (Delta ` ?SAs ?HA)) <= \<Union> (States ` ?SAs ?HA)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_var 1, template_var 0)))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_var 1, template_var 0))))),
    ("SA.Rep_seqauto_select",
     "(States ?SA, InitState ?SA, Labels ?SA, Delta ?SA) : seqauto",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app (template_hole 1, template_var 0))))),
           template_hole 0)
         )),
    ("SA.SA_States_disjunct", "States ?A Int States ?A' = {} ==> ?A' ~= ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_negation
        (template_equation (template_var 0, template_var 1)))),
    ("SA.Rep_seqauto_tuple",
     "Rep_seqauto ?SA = (States ?SA, InitState ?SA, Labels ?SA, Delta ?SA)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)))))),
    ("SA.States_Int_not_mem",
     "\<Union> (States ` ?F) Int States ?SA = {} ==> ?SA ~: ?F",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 1))),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("SA.SA_States_disjunct2",
     "[| States ?A Int ?C = {}; States ?B <= ?C |] ==> ?B ~= ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_var 1),
          template_hole 3),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_var 1)],
       template_negation
        (template_equation (template_var 0, template_var 2)))),
    ("SA.SA_States_disjunct3",
     "[| ?C Int States ?A = {}; States ?B <= ?C |]
      ==> States ?A Int States ?B = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2),
            template_app (template_hole 3, template_var 1)),
          template_hole 2),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 0),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_hole 2)))]
