Loading theory "Draft.Kripke" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke")
Loading theory "Draft.Contrib" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update" via "Draft.Data" via "Draft.DataSpace")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.118s elapsed time, 0.495s cpu time, 0.035s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.Contrib"
### 0.177s elapsed time, 0.733s cpu time, 0.035s GC time
Loading theory "Draft.DataSpace" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update" via "Draft.Data")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.DataSpace"
### 0.123s elapsed time, 0.476s cpu time, 0.100s GC time
Loading theory "Draft.Data" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update")
### theory "HOL-Library.Nat_Bijection"
### 0.320s elapsed time, 1.288s cpu time, 0.135s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.834s cpu time, 0.100s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.Data"
### 0.217s elapsed time, 0.852s cpu time, 0.114s GC time
Loading theory "Draft.Update" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr")
Proofs for inductive predicate(s) "FoldSet"
  Proving monotonicity ...
### theory "Draft.Update"
### 0.184s elapsed time, 0.725s cpu time, 0.104s GC time
Loading theory "Draft.Expr" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.116s elapsed time, 4.235s cpu time, 0.993s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
consts
  eval_expr :: "'s set * 'e set => ('s, 'e) expr => bool"
consts
  eval_ctl :: "('s, 'a) kripke => 's => ('s, 'a) ctl => bool"
consts
  ExprEvents :: "('s, 'e) expr => 'e set"
### theory "Draft.Kripke"
### 1.990s elapsed time, 7.710s cpu time, 1.313s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.838s elapsed time, 3.043s cpu time, 0.355s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.421s elapsed time, 8.543s cpu time, 2.178s GC time
Loading theory "Draft.Templates" (required by "Draft.HAKripkeMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.104s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.HAKripkeMoreTemplates")
### theory "Draft.Expr"
### 2.264s elapsed time, 7.517s cpu time, 1.961s GC time
Loading theory "Draft.SA" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA")
### theory "Draft.SA"
### 0.165s elapsed time, 0.361s cpu time, 0.058s GC time
Loading theory "Draft.HA" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke" via "Draft.HASem")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.564s elapsed time, 1.196s cpu time, 0.132s GC time
### theory "Draft.HA"
### 0.545s elapsed time, 0.857s cpu time, 0.143s GC time
Loading theory "Draft.HASem" (required by "Draft.HAKripkeMoreTemplates" via "Draft.HAKripke")
Proofs for inductive predicate(s) "ReachStatip"
  Proving monotonicity ...
### theory "Draft.HASem"
### 0.597s elapsed time, 0.653s cpu time, 0.075s GC time
Loading theory "Draft.HAKripke" (required by "Draft.HAKripkeMoreTemplates")
### theory "Draft.HAKripke"
### 0.435s elapsed time, 1.107s cpu time, 0.921s GC time
Loading theory "Draft.HAKripkeMoreTemplates"
val templateLemmas =
   [("HAKripke.AtomTRUE_EvalCTLHA", "?a |=H= Atom TRUE",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))
         )),
    ("HAKripke.AtomFalse_EvalCTLHA", "~ ?a |=H= Atom FALSE",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_hole 0))
             )
         )),
    ("HAKripke.LabelFun_LabelFunSem",
     "LabelFun (HA2Kripke ?a) = LabelFunSem ?a",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("HAKripke.StepRel_StepRelSem",
     "StepRel (HA2Kripke ?a) = StepRelSem ?a",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("HAKripke.TRUE_LabelFunSem", "TRUE : the (LabelFunSem (HA ?ST) ?ST)",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 0)))
         )),
    ("HAKripke.FALSE_LabelFunSem",
     "FALSE ~: the (LabelFunSem (HA ?ST) ?ST)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0)),
                   template_var 0)))
             )
         )),
    ("HAKripke.InitStatuses_InitStatus",
     "InitStatuses (HA2Kripke ?a) = {InitStatus ?a}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("HAKripke.HAInitValue_EvalCTLHA",
     "?a |=H= Atom (VAL ?P) = ?P (HAInitValue ?a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("HAKripke.Statuses_StatusesOfHA",
     "Statuses (HA2Kripke ?a) = {ST. HA ST = ?a}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("HAKripke.Events_InitStatus_EvalCTLHA",
     "?a |=H= Atom (EN ?S) = (?S : Events (InitStatus ?a))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("HAKripke.Conf_InitStatus_EvalCTLHA",
     "?a |=H= Atom (IN ?S) = (?S : Conf (InitStatus ?a))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("HAKripke.Value_LabelFunSem",
     "(VAL ?P : the (LabelFunSem (HA ?ST) ?ST)) = ?P (Value ?ST)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_var 0))),
       template_app
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("HAKripke.Events_LabelFunSem",
     "(EN ?S : the (LabelFunSem (HA ?ST) ?ST)) = (?S : Events ?ST)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HAKripke.Conf_LabelFunSem",
     "(IN ?S : the (LabelFunSem (HA ?ST) ?ST)) = (?S : Conf ?ST)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HAKripke.Kripke_HA",
     "Kripke {ST. HA ST = ?a} {InitStatus ?a} (StepRelSem ?a)
       (LabelFunSem ?a)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         ))]:
   (string * thm * template) list
### theory "Draft.HAKripkeMoreTemplates"
### 0.374s elapsed time, 0.543s cpu time, 0.050s GC time
val it = (): unit
