Loading theory "Draft.Contrib" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update" via "Draft.Data" via "Draft.DataSpace")
Loading theory "Draft.Kripke" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.139s elapsed time, 0.575s cpu time, 0.035s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "Draft.Contrib"
### 0.182s elapsed time, 0.750s cpu time, 0.035s GC time
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Loading theory "Draft.DataSpace" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update" via "Draft.Data")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.DataSpace"
### 0.122s elapsed time, 0.473s cpu time, 0.084s GC time
Loading theory "Draft.Data" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update")
### theory "HOL-Library.Set_Algebras"
### 0.225s elapsed time, 0.886s cpu time, 0.084s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.379s elapsed time, 1.516s cpu time, 0.119s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Data"
### 0.193s elapsed time, 0.757s cpu time, 0.079s GC time
Loading theory "Draft.Update" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr")
Proofs for inductive predicate(s) "FoldSet"
  Proving monotonicity ...
### theory "Draft.Update"
### 0.177s elapsed time, 0.703s cpu time, 0.093s GC time
Loading theory "Draft.Expr" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA" via "Draft.SA")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.083s elapsed time, 4.119s cpu time, 0.891s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  eval_expr :: "'s set * 'e set => ('s, 'e) expr => bool"
consts
  ExprEvents :: "('s, 'e) expr => 'e set"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  eval_ctl :: "('s, 'a) kripke => 's => ('s, 'a) ctl => bool"
### theory "Draft.Kripke"
### 2.088s elapsed time, 8.101s cpu time, 1.247s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.842s elapsed time, 3.115s cpu time, 0.332s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.418s elapsed time, 8.587s cpu time, 2.053s GC time
Loading theory "Draft.Templates" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.059s elapsed time, 0.122s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CarAudioSystemMoreTemplates")
### theory "Draft.Expr"
### 2.256s elapsed time, 7.668s cpu time, 1.881s GC time
Loading theory "Draft.SA" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem" via "Draft.HA")
### theory "Draft.SA"
### 0.168s elapsed time, 0.371s cpu time, 0.063s GC time
Loading theory "Draft.HA" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke" via "Draft.HASem")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.568s elapsed time, 1.213s cpu time, 0.148s GC time
### theory "Draft.HA"
### 0.557s elapsed time, 0.945s cpu time, 0.152s GC time
Loading theory "Draft.HAOps" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem")
Loading theory "Draft.HASem" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem" via "Draft.HAKripke")
Proofs for inductive predicate(s) "ReachStatip"
  Proving monotonicity ...
val AddSA_SAs_IFF =
   "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA; SAs ?HA = ?X |]
    ==> SAs (?HA [++] (?S, ?SA)) = insert ?SA ?X":
   thm
val AddSA_Events_IFF =
   "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
       HAEvents ?HA = ?HAE; SAEvents ?SA = ?SAE; ?HAE Un ?SAE = ?X |]
    ==> HAEvents (?HA [++] (?S, ?SA)) = ?X":
   thm
val AddSA_CompFun_IFF =
   "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
       CompFun ?HA = ?HAG; (?HAG [f+] (?S, ?SA)) = ?X |]
    ==> CompFun (?HA [++] (?S, ?SA)) = ?X":
   thm
val AddSA_HAStates_IFF =
   "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
       HAStates ?HA = ?HAS; States ?SA = ?SAS; ?HAS Un ?SAS = ?X |]
    ==> HAStates (?HA [++] (?S, ?SA)) = ?X":
   thm
val PseudoHA_HAStates_IFF =
   "States ?SA = ?X ==> HAStates (PseudoHA ?SA ?D) = ?X": thm
val AddSA_HAInitValue_IFF =
   "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
       HAInitValue ?HA = ?X |]
    ==> HAInitValue (?HA [++] (?S, ?SA)) = ?X":
   thm
val AddSA_CompFun_ran_IFF =
   "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A;
       insert {}
        (insert (insert ?SA (the (CompFun ?A ?S)))
          (ran (CompFun ?A) - {the (CompFun ?A ?S)})) =
       ?X |]
    ==> ran (CompFun (?A [++] (?S, ?SA))) = ?X":
   thm
val AddSA_HARoot_IFF =
   "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
       HARoot ?HA = ?X |]
    ==> HARoot (?HA [++] (?S, ?SA)) = ?X":
   thm
val insert_inter =
   "[| ?a ~: ?A; ?A Int ?B = {} |] ==> ?A Int insert ?a ?B = {}": thm
val insert_notmem = "[| ?a ~= ?b; ?a ~: ?B |] ==> ?a ~: insert ?b ?B": thm
val PseudoHA_CompFun = "CompFun (PseudoHA ?SA ?D) = EmptyMap (States ?SA)":
   thm
val PseudoHA_Events = "HAEvents (PseudoHA ?SA ?D) = SAEvents ?SA": thm
val PseudoHA_SAs = "SAs (PseudoHA ?SA ?D) = {?SA}": thm
val PseudoHA_HARoot = "HARoot (PseudoHA ?SA ?D) = ?SA": thm
val PseudoHA_HAInitValue = "HAInitValue (PseudoHA ?SA ?D) = ?D": thm
val PseudoHA_CompFun_ran = "ran (CompFun (PseudoHA ?SA ?D)) = {{}}": thm
val Un_empty_right = "?A Un {} = ?A": thm
val insert_union = "?A Un insert ?a ?B = insert ?a ?A Un ?B": thm
val wellformed_tac = fn: Proof.context -> thm list -> int -> tactic
### theory "Draft.HAOps"
### 0.694s elapsed time, 1.826s cpu time, 1.045s GC time
### theory "Draft.HASem"
### 0.941s elapsed time, 2.098s cpu time, 1.081s GC time
Loading theory "Draft.HAKripke" (required by "Draft.CarAudioSystemMoreTemplates" via "Draft.CarAudioSystem")
### theory "Draft.HAKripke"
### 0.212s elapsed time, 0.218s cpu time, 0.000s GC time
Loading theory "Draft.CarAudioSystem" (required by "Draft.CarAudioSystemMoreTemplates")
### No equation for constructor "V1"
consts
  Sel0 :: "d => int"
### No equation for constructor "V0"
consts
  Sel1 :: "d => int"
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
### theory "Draft.CarAudioSystem"
### 2.050s elapsed time, 2.277s cpu time, 0.310s GC time
Loading theory "Draft.CarAudioSystemMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.CarAudioSystemMoreTemplates"
### 0.351s elapsed time, 0.484s cpu time, 0.000s GC time
val it = (): unit
