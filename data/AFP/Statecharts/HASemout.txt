Loading theory "Draft.Contrib" (required by "Draft.HASemMoreTemplates" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update" via "Draft.Data" via "Draft.DataSpace")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.125s elapsed time, 0.513s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.197s elapsed time, 0.800s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Contrib"
### 0.225s elapsed time, 0.918s cpu time, 0.041s GC time
Loading theory "Draft.DataSpace" (required by "Draft.HASemMoreTemplates" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update" via "Draft.Data")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.DataSpace"
### 0.107s elapsed time, 0.416s cpu time, 0.076s GC time
Loading theory "Draft.Data" (required by "Draft.HASemMoreTemplates" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr" via "Draft.Update")
### theory "HOL-Library.Nat_Bijection"
### 0.365s elapsed time, 1.459s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Data"
### 0.190s elapsed time, 0.755s cpu time, 0.071s GC time
Loading theory "Draft.Update" (required by "Draft.HASemMoreTemplates" via "Draft.HASem" via "Draft.HA" via "Draft.SA" via "Draft.Expr")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Proofs for inductive predicate(s) "FoldSet"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.Update"
### 0.175s elapsed time, 0.694s cpu time, 0.065s GC time
Loading theory "Draft.Expr" (required by "Draft.HASemMoreTemplates" via "Draft.HASem" via "Draft.HA" via "Draft.SA")
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.956s elapsed time, 3.609s cpu time, 0.858s GC time
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.090s elapsed time, 3.878s cpu time, 0.933s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  eval_expr :: "'s set * 'e set => ('s, 'e) expr => bool"
consts
  ExprEvents :: "('s, 'e) expr => 'e set"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.965s elapsed time, 6.178s cpu time, 1.145s GC time
Loading theory "Draft.Templates" (required by "Draft.HASemMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.076s elapsed time, 0.188s cpu time, 0.080s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.HASemMoreTemplates")
### theory "Draft.Expr"
### 2.052s elapsed time, 5.541s cpu time, 1.738s GC time
Loading theory "Draft.SA" (required by "Draft.HASemMoreTemplates" via "Draft.HASem" via "Draft.HA")
### theory "Draft.SA"
### 0.168s elapsed time, 0.359s cpu time, 0.039s GC time
Loading theory "Draft.HA" (required by "Draft.HASemMoreTemplates" via "Draft.HASem")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.761s elapsed time, 1.818s cpu time, 0.764s GC time
### theory "Draft.HA"
### 0.549s elapsed time, 0.597s cpu time, 0.067s GC time
Loading theory "Draft.HASem" (required by "Draft.HASemMoreTemplates")
Proofs for inductive predicate(s) "ReachStatip"
  Proving monotonicity ...
### theory "Draft.HASem"
### 0.614s elapsed time, 0.731s cpu time, 0.161s GC time
Loading theory "Draft.HASemMoreTemplates"
val templateLemmas =
   [("HASem.finite_HPT2", "finite (HPT ?ST)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("HASem.finite_ET", "finite (ET ?ST)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("HASem.HA_InitStatus", "HA (InitStatus ?A) = ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("HASem.RootState_Conf", "RootState ?ST : Conf ?ST",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("HASem.Conf_InitStatus_InitConf", "Conf (InitStatus ?A) = InitConf ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("HASem.Value_InitStatus_HAInitValue",
     "Value (InitStatus ?A) = HAInitValue ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("HASem.Conf_HAStates", "Conf ?ST <= HAStates (HA ?ST)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("HASem.Events_HAEvents_Status", "Events ?ST <= HAEvents (HA ?ST)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("HASem.IsConfSet_InitConf",
     "IsConfSet (SAs ?A) (CompFun ?A) (InitConf ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("HASem.RootState_HARootState",
     "RootState ?ST : States (HARoot (HA ?ST))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))
         )),
    ("HASem.finite_MaxNonConflict", "MaxNonConflict ?ST ?TS ==> finite ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("HASem.RootState_Range_ChiPlus",
     "RootState ?ST ~: Range (ChiPlus (HA ?ST))",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0))))
             )
         )),
    ("HASem.RootState_notmem_Range_ChiRel",
     "RootState ?ST ~: Range (ChiRel (HA ?ST))",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0))))
             )
         )),
    ("HASem.ReachStatip_ReachStati_eq",
     "ReachStatip ?A = (%x. x : ReachStati ?A)",
     template_equation
      (template_app (template_hole 2, template_var 0), t_empty)),
    ("HASem.HA_StepStatus_emptyTS", "HA (StepStatus ?ST {} ?U) = HA ?ST",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 1))),
    ("HASem.HAInitValue_Value_DataSpace_Status",
     "Data.DataSpace (HAInitValue (HA ?ST)) = Data.DataSpace (Value ?ST)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 3, template_app (template_hole 0, template_var 0)))),
    ("HASem.finite_HPT", "?TS : HPT ?ST ==> finite ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("HASem.IsConfSet_Status",
     "IsConfSet (SAs (HA ?ST)) (CompFun (HA ?ST)) (Conf ?ST)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 0, template_var 0))
         )),
    ("HASem.RootExSem_Status",
     "RootExSem (SAs (HA ?ST)) (CompFun (HA ?ST)) (Conf ?ST)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 0, template_var 0))
         )),
    ("HASem.Status_select",
     "Status (HA ?ST) (Conf ?ST) (Events ?ST) (Value ?ST)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("HASem.UniqueSucStates_Status",
     "UniqueSucStates (SAs (HA ?ST)) (CompFun (HA ?ST)) (Conf ?ST)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 0, template_var 0))
         )),
    ("HASem.RootState_notmem_ChiRel",
     "(?x, RootState ?ST) ~: ChiRel (HA ?ST)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))
             )
         )),
    ("HASem.finite_PUpdate",
     "?TS : HPT ?S ==> finite (Expr.PUpdate (Label ?TS))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("HASem.HPT_ETI", "?TS : HPT ?ST ==> ?TS <= ET ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("HASem.InitConf_status",
     "(?A, InitConf ?A, {}, HAInitValue ?A) : status",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 0),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 1, template_var 0))))),
           template_hole 0)
         )),
    ("HASem.ET_Source_Conf", "?TS <= ET ?ST ==> Source ?TS <= Conf ?ST",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HASem.Conf_HAStates2", "?S : Conf ?ST ==> ?S : HAStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("HASem.HPT_Source_Conf", "?TS : HPT ?ST ==> Source ?TS <= Conf ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("HASem.ET_Target_HAStates",
     "?TS <= ET ?ST ==> Target ?TS <= HAStates (HA ?ST)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("HASem.HPT_Target_HAStates",
     "?TS : HPT ?ST ==> Target ?TS <= HAStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("HASem.StepActEvent_HAEvents",
     "?TS : HPT ?ST ==> StepActEvent ?TS <= HAEvents (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("HASem.Rep_status_select",
     "(HA ?ST, Conf ?ST, Events ?ST, Value ?ST) : status",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app (template_hole 1, template_var 0))))),
           template_hole 0)
         )),
    ("HASem.Rep_status_tuple",
     "Rep_status ?ST = (HA ?ST, Conf ?ST, Events ?ST, Value ?ST)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)))))),
    ("HASem.status_empty_eventset",
     "(HA ?ST, Conf ?ST, {}, ?U !!! Value ?ST) : status",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app (template_hole 1, template_var 1)))))),
           template_hole 0)
         )),
    ("HASem.finite_Update",
     "finite ?TS ==>
      finite ((%F. Rep_pupdate F (Value ?ST)) ` Expr.PUpdate (Label ?TS))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("HASem.TS_EventSet",
     "?TS <= ET ?ST ==>
      \<Union> (Actevent (Label ?TS)) <= HAEvents (HA ?ST)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("HASem.Target_StepConf",
     "?S : Target ?TS ==> ?S : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("HASem.Conf_SA", "?S : Conf ?ST ==> EX A:SAs (HA ?ST). ?S : States A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             t_empty)
           ))),
    ("HASem.HPT_ResolveRacing_Some",
     "?TS : HPT ?S ==> (SOME u. u : ResolveRacing ?TS) : ResolveRacing ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("HASem.RootState_notmem_Chi",
     "?S : HAStates (HA ?ST) ==> RootState ?ST ~: Chi (HA ?ST) ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 3, template_var 0)),
                   template_var 1))
               )
           ))),
    ("HASem.StepConf_HAStates",
     "?TS : HPT ?ST ==>
      StepConf (HA ?ST) (Conf ?ST) ?TS <= HAStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("HASem.RootState_Range_ChiStar",
     "?x ~= RootState ?ST ==> (?x, RootState ?ST) ~: ChiStar (HA ?ST)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 4, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app (template_hole 4, template_var 0))),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("HASem.RootState_notmem_ChiRel2",
     "?S : States (HARoot (HA ?ST)) ==> (?x, ?S) ~: ChiRel (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1))))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_var 1)))
               )
           ))),
    ("HASem.ET_HADelta",
     "[| ?TS <= ET ?ST; ?t : ?TS |] ==> ?t : HADelta (HA ?ST)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("HASem.HPT_HADelta",
     "[| ?TS : HPT ?ST; ?t : ?TS |] ==> ?t : HADelta (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("HASem.RootState_Conf_StepConf",
     "RootState ?ST ~: Source ?TS ==>
      RootState ?ST : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("HASem.HPT_Source_HAStates",
     "[| ?TS : HPT ?ST; ?S : Source ?TS |] ==> ?S : HAStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("HASem.HPT_Target_HAStates2",
     "[| ?TS : HPT ?ST; ?S : Target ?TS |] ==> ?S : HAStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("HASem.StepStatus_empty",
     "Abs_status (HA ?ST, Conf ?ST, {}, ?U !!! Value ?ST) =
      StepStatus ?ST {} ?U",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 1)),
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app (template_hole 2, template_var 1)))))),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("HASem.Conf_ChiPlus",
     "(?T, ?S) : ChiPlus (HA ?ST) ==> ?S : Conf ?ST --> ?T : Conf ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("HASem.OneRootState_Conf",
     "[| ?S : States (HARoot (HA ?ST)); ?S : Conf ?ST |]
      ==> ?S = RootState ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("HASem.IsConfSet_StepConf",
     "?TS : HPT ?ST ==>
      IsConfSet (SAs (HA ?ST)) (CompFun (HA ?ST))
       (StepConf (HA ?ST) (Conf ?ST) ?TS)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("HASem.RootExSem_StepConf",
     "?TS : HPT ?ST ==>
      RootExSem (SAs (HA ?ST)) (CompFun (HA ?ST))
       (StepConf (HA ?ST) (Conf ?ST) ?TS)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("HASem.UniqueSucStates_StepConf",
     "?TS : HPT ?ST ==>
      UniqueSucStates (SAs (HA ?ST)) (CompFun (HA ?ST))
       (StepConf (HA ?ST) (Conf ?ST) ?TS)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 0)),
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("HASem.Conf_ChiRel",
     "[| (?S, ?T) : ChiRel (HA ?ST); ?T : Conf ?ST |] ==> ?S : Conf ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HASem.HPT_target_StepConf",
     "[| ?TS : HPT ?ST; ?T : ?TS |]
      ==> target ?T : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 1)),
               template_var 2))
           ))),
    ("HASem.HA_StepStatus_HPT_ResolveRacing",
     "[| ?TS : HPT ?ST; ?U : ResolveRacing ?TS |]
      ==> HA (StepStatus ?ST ?TS ?U) = HA ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("HASem.HPT_StepConf_HAStates",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS |]
      ==> ?S : HAStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 1)),
                  template_app (template_hole 1, template_var 1)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)))
           ))),
    ("HASem.RootState_Conf_StepConf2",
     "[| source ?T = RootState ?ST; ?T : ?TS |]
      ==> target ?T : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 1)),
               template_var 0))
           ))),
    ("HASem.HPT_Conf_Target_Source",
     "[| ?TS : HPT ?ST; ?S : Conf ?ST; ?S : Target ?TS |]
      ==> ?S : Source ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("HASem.StepStatus_expand",
     "Abs_status
       (HA ?ST, StepConf (HA ?ST) (Conf ?ST) ?TS, StepActEvent ?TS,
        ?U !!! Value ?ST) =
      StepStatus ?ST ?TS ?U",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 2)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 8, template_var 2)),
                   template_app (template_hole 5, template_var 2)),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 2)))))),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("HASem.HPT_target_StepConf2",
     "[| ?TS : HPT ?ST; (?S, ?L, ?T) : ?TS |]
      ==> ?T : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0))),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3)),
                 template_app (template_hole 0, template_var 3)),
               template_var 4))
           ))),
    ("HASem.OneRootState_Source",
     "[| ?TS : HPT ?ST; ?S : Source ?TS; ?S : States (HARoot (HA ?ST)) |]
      ==> ?S = RootState ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1))))
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("HASem.Conf_Ancestor",
     "[| ?S : Conf ?ST; ?A : the (CompFun (HA ?ST) ?S) |]
      ==> EX! T. T : States ?A & T : Conf ?ST",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1)),
                  template_var 2)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HASem.Target_ChiRel_HAInit_StepConf",
     "[| ?S : Target ?TS; (?S, ?T) : ChiRel ?A; ?T : HAInitStates ?A |]
      ==> ?T : StepConf ?A ?C ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 2)),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 3))
           ))),
    ("HASem.RootState_notmem_Target",
     "[| ?TS : HPT ?ST; ?S : States (HARoot (HA ?ST));
         RootState ?ST ~: Source ?TS |]
      ==> ?S ~: Target ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1))))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 2, template_var 1)),
                  template_app (template_hole 1, template_var 2))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app (template_hole 0, template_var 2))
               )
           ))),
    ("HASem.HPT_Source_Target",
     "[| ?TS : HPT ?ST; States ?SA Int Source ?TS = {};
         ?SA : SAs (HA ?ST) |]
      ==> States ?SA Int Target ?TS = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0)),
            template_app (template_hole 5, template_var 2)),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_app (template_hole 0, template_var 2)),
         template_hole 4))),
    ("HASem.ET_Source_Target",
     "[| ?SA : SAs (HA ?ST); ?TS <= ET ?ST;
         States ?SA Int Source ?TS = {} |]
      ==> States ?SA Int Target ?TS = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 1)))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 2)),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app (template_hole 0, template_var 0)),
         template_hole 1))),
    ("HASem.StepConf_Target_HAInitStates",
     "[| ?S : StepConf (HA ?ST) (Conf ?ST) ?TS; ?S ~: Target ?TS;
         ?S ~: Conf ?ST |]
      ==> ?S : HAInitStates (HA ?ST)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_app (template_hole 3, template_var 1)),
                template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 1, template_var 0))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1)))
           ))),
    ("HASem.ET_Delta",
     "[| ?TS <= ET ?ST; ?t : ?TS; source ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> ?t : Delta ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HASem.ET_Delta_target",
     "[| ?TS <= ET ?ST; ?t : ?TS; target ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> ?t : Delta ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HASem.HPT_Delta",
     "[| ?TS : HPT ?ST; ?t : ?TS; source ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> ?t : Delta ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HASem.HPT_Delta_target",
     "[| ?TS : HPT ?ST; ?t : ?TS; target ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> ?t : Delta ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("HASem.InitSucState_Target_StepConf",
     "[| ?TS : HPT ?ST; ?S : Target ?TS; ?A : the (CompFun (HA ?ST) ?S) |]
      ==> InitState ?A : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 2)),
                 template_app (template_hole 0, template_var 2)),
               template_var 3))
           ))),
    ("HASem.HPT_Conf_Target_Source_ChiPlus",
     "[| ?TS : HPT ?ST; ?S : Conf ?ST;
         ?S : ChiPlus (HA ?ST) `` Target ?TS |]
      ==> ?S : ChiStar (HA ?ST) `` Source ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 1))),
                template_app (template_hole 2, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 1))),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("HASem.ChiRel_ChiStar_notmem",
     "[| ?TS : HPT ?ST; (?S, ?T) : ChiRel (HA ?ST);
         ?S : ChiStar (HA ?ST) `` Source ?TS |]
      ==> ?T ~: Source ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 5, template_var 2))),
                template_app (template_hole 1, template_var 3)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 1, template_var 3))
               )
           ))),
    ("HASem.ET_source_target",
     "[| ?TS <= ET ?ST; ?t : ?TS; source ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> target ?t : States ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 4, template_var 0))
           ))),
    ("HASem.ET_target_source",
     "[| ?TS <= ET ?ST; ?t : ?TS; target ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> source ?t : States ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 4, template_var 0))
           ))),
    ("HASem.HPT_source_target",
     "[| ?TS : HPT ?ST; ?t : ?TS; source ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> target ?t : States ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 4, template_var 0))
           ))),
    ("HASem.HPT_target_source",
     "[| ?TS : HPT ?ST; ?t : ?TS; target ?t : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> source ?t : States ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 4, template_var 0))
           ))),
    ("HASem.Status_Step",
     "[| ?TS : HPT ?ST; ?U : ResolveRacing ?TS |]
      ==> (HA ?ST, StepConf (HA ?ST) (Conf ?ST) ?TS, StepActEvent ?TS,
           ?U !!! Value ?ST)
          : status",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app (template_hole 13, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 8, template_var 1)),
                         template_app (template_hole 5, template_var 1)),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_var 2)),
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_app (template_hole 1, template_var 1)))))),
             template_hole 0)
           ))),
    ("HASem.HPT_source_target2",
     "[| ?TS : HPT ?ST; (?s, ?l, ?t) : ?TS; ?s : States ?A;
         ?A : SAs (HA ?ST) |]
      ==> ?t : States ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app (template_hole 8, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 4)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 3, template_var 0))
           ))),
    ("HASem.OneState_HPT_Target_Source",
     "[| ?TS : HPT ?ST; ?S : States ?SA; ?SA : SAs (HA ?ST);
         States ?SA Int Source ?TS = {} |]
      ==> ?S ~: Target ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app (template_hole 11, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 9, template_var 0)),
            template_app (template_hole 3, template_var 3)),
          template_hole 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_app (template_hole 0, template_var 3))
               )
           ))),
    ("HASem.OneState_Conf",
     "[| ?S : Conf ?ST; ?T : Conf ?ST; ?S : States ?SA; ?T : States ?SA;
         ?SA : SAs (HA ?ST) |]
      ==> ?T = ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)))
            )],
       template_equation (template_var 1, template_var 3))),
    ("HASem.SucState_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?A : the (CompFun (HA ?ST) ?S) |]
      ==> EX x. x : States ?A & x : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 2)),
                  template_app (template_hole 6, template_var 2)),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 7, template_var 2)),
                  template_var 1)))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("HASem.OneTrans_HPT_SA",
     "[| ?TS : HPT ?ST; ?T : ?TS; source ?T : States ?SA; ?U : ?TS;
         source ?U : States ?SA; ?SA : SAs (HA ?ST) |]
      ==> ?T = ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)))
            )],
       template_equation (template_var 2, template_var 0))),
    ("HASem.OneTrans_HPT_SA2",
     "[| ?TS : HPT ?ST; ?T : ?TS; target ?T : States ?SA; ?U : ?TS;
         target ?U : States ?SA; ?SA : SAs (HA ?ST) |]
      ==> ?T = ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 2)),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)))
            )],
       template_equation (template_var 2, template_var 0))),
    ("HASem.OneState_HPT_SA",
     "[| ?TS : HPT ?ST; ?S : Source ?TS; ?T : Source ?TS; ?S : States ?SA;
         ?T : States ?SA; ?SA : SAs (HA ?ST) |]
      ==> ?S = ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)))
            )],
       template_equation (template_var 2, template_var 1))),
    ("HASem.OneState_HPT_Target",
     "[| ?TS : HPT ?ST; ?S : Target ?TS; ?T : Target ?TS; ?S : States ?SA;
         ?T : States ?SA; ?SA : SAs (HA ?ST) |]
      ==> ?S = ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)))
            )],
       template_equation (template_var 2, template_var 1))),
    ("HASem.ChiRel_ChiStar_Source_notmem",
     "[| ?TS : HPT ?ST; (?S, ?T) : ChiRel (HA ?ST); ?S : Conf ?ST;
         ?T ~: ChiStar (HA ?ST) `` Source ?TS |]
      ==> ?S ~: ChiStar (HA ?ST) `` Source ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_hole 1,
                        template_app (template_hole 6, template_var 2))),
                    template_app (template_hole 0, template_var 3)))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 6, template_var 2))),
                   template_app (template_hole 0, template_var 3)))
               )
           ))),
    ("HASem.HPT_SAStates_Target_Source",
     "[| ?TS : HPT ?ST; ?A : SAs (HA ?ST); ?S : States ?A; ?T : States ?A;
         ?S : Conf ?ST; ?T : Target ?TS |]
      ==> ?S : Source ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 2, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 1, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 4))
           ))),
    ("HASem.OneState_HPT_Target_ChiPlus",
     "[| ?TS : HPT ?ST; (?U, ?T) : ChiPlus (HA ?ST); ?S : Target ?TS;
         ?A : SAs (HA ?ST); ?S : States ?A; ?T : States ?A |]
      ==> ?U ~: Target ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 6, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 1, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app (template_hole 4, template_var 5))
               )
           ))),
    ("HASem.OneState_HPT_Target_ChiRel",
     "[| ?TS : HPT ?ST; (?U, ?T) : ChiRel (HA ?ST); ?U : Target ?TS;
         ?A : SAs (HA ?ST); ?T : States ?A; ?S : States ?A |]
      ==> ?S ~: Target ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app (template_hole 10, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_hole 2,
                template_app (template_hole 6, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 4, template_var 5))
               )
           ))),
    ("HASem.UniqueSucStates_Ancestor_StepConf",
     "[| ?TS : HPT ?ST; ?S : HAStates (HA ?ST);
         ?SA : the (CompFun (HA ?ST) ?S); ?T : States ?SA;
         ?T : StepConf (HA ?ST) (Conf ?ST) ?TS |]
      ==> ?S : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app (template_hole 9, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 6, template_var 3)),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 6, template_var 3)),
                  template_app (template_hole 0, template_var 3)),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 6, template_var 3)),
                 template_app (template_hole 0, template_var 3)),
               template_var 4))
           ))),
    ("HASem.InitSucState_StepConf",
     "[| ?TS : HPT ?ST; ?S ~: Target ?TS; ?A : the (CompFun (HA ?ST) ?S);
         ?S ~: Conf ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS |]
      ==> InitState ?A : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app (template_hole 7, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_var 1)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 3, template_var 2)),
                  template_app (template_hole 2, template_var 2)),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 0, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 2)),
                 template_app (template_hole 2, template_var 2)),
               template_var 3))
           ))),
    ("HASem.InitSucState_Conf_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?S ~: Target ?TS; ?A : the (CompFun (HA ?ST) ?S); ?S : Conf ?ST;
         ?S : ChiStar (HA ?ST) `` Source ?TS |]
      ==> InitState ?A : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app (template_hole 13, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 2)),
                  template_app (template_hole 9, template_var 2)),
                template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_app (template_hole 7, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 10, template_var 2)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 10, template_var 2))),
                template_app (template_hole 1, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app (template_hole 0, template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_var 2)),
                 template_app (template_hole 9, template_var 2)),
               template_var 3))
           ))),
    ("HASem.UniqueSucState_Target_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?A : SAs (HA ?ST); ?A : the (CompFun (HA ?ST) ?S); ?T : States ?A;
         ?U : States ?A; ?T : StepConf (HA ?ST) (Conf ?ST) ?TS; ?T ~= ?U |]
      ==> ?U ~: Target ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app (template_hole 12, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 4)),
                  template_app (template_hole 8, template_var 4)),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 6,
                template_app (template_hole 9, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 9, template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 4)),
                  template_app (template_hole 8, template_var 4)),
                template_var 5))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 11, template_var 0),
                 template_app (template_hole 0, template_var 5))
               )
           ))),
    ("HASem.SucState_Conf_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?S ~: Target ?TS; ?A : the (CompFun (HA ?ST) ?S); ?S : Conf ?ST;
         States ?A Int ChiStar (HA ?ST) `` Source ?TS = {} |]
      ==> EX x. x : States ?A & x : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2)),
                  template_app (template_hole 14, template_var 2)),
                template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 1),
                  template_app (template_hole 12, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 15, template_var 2)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app (template_hole 14, template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 15, template_var 2))),
              template_app (template_hole 3, template_var 3))),
          template_hole 2)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("HASem.UniqueSucStates_SAStates_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?A : SAs (HA ?ST); ?A : the (CompFun (HA ?ST) ?S); ?T : States ?A;
         ?U : States ?A; ?T : StepConf (HA ?ST) (Conf ?ST) ?TS; ?T ~= ?U |]
      ==> ?U ~: StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 5),
              template_app (template_hole 11, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 4)),
                  template_app (template_hole 7, template_var 4)),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app (template_hole 8, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 8, template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 4)),
                  template_app (template_hole 7, template_var 4)),
                template_var 5))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 0),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 4)),
                     template_app (template_hole 7, template_var 4)),
                   template_var 5))
               )
           ))),
    ("HASem.UniqueSucState_Conf_Source_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?A : SAs (HA ?ST); ?A : the (CompFun (HA ?ST) ?S); ?T : States ?A;
         ?U : States ?A; ?T : StepConf (HA ?ST) (Conf ?ST) ?TS; ?T ~= ?U;
         ?U : Conf ?ST |]
      ==> ?U : ChiStar (HA ?ST) `` Source ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_app (template_hole 14, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 4)),
                  template_app (template_hole 10, template_var 4)),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app (template_hole 11, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 11, template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 4)),
                  template_app (template_hole 10, template_var 4)),
                template_var 5))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 0),
              template_app (template_hole 10, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 13, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 11, template_var 4))),
               template_app (template_hole 0, template_var 5)))
           ))),
    ("HASem.SucState_Conf_Source_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?S ~: Target ?TS; ?A : the (CompFun (HA ?ST) ?S); ?S : Conf ?ST;
         States ?A Int ChiStar (HA ?ST) `` Source ?TS ~= {};
         ?S ~: ChiStar (HA ?ST) `` Source ?TS |]
      ==> EX x. x : States ?A & x : StepConf (HA ?ST) (Conf ?ST) ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2)),
                  template_app (template_hole 14, template_var 2)),
                template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 1),
                  template_app (template_hole 12, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 15, template_var 2)),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_app (template_hole 14, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app (template_hole 15, template_var 2))),
                  template_app (template_hole 3, template_var 3))),
              template_hole 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_var 1),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_hole 4,
                        template_app (template_hole 15, template_var 2))),
                    template_app (template_hole 3, template_var 3)))
                )
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("HASem.UniqueSucState_Target_ChiRel_StepConf",
     "[| ?TS : HPT ?ST; ?S : StepConf (HA ?ST) (Conf ?ST) ?TS;
         ?A : SAs (HA ?ST); ?A : the (CompFun (HA ?ST) ?S); ?T : States ?A;
         ?U : States ?A; ?T : StepConf (HA ?ST) (Conf ?ST) ?TS; ?T ~= ?U;
         (?V, ?U) : ChiRel (HA ?ST); ?U : HAInitStates (HA ?ST) |]
      ==> ?V ~: Target ?TS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 6),
              template_app (template_hole 16, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 5)),
                  template_app (template_hole 12, template_var 5)),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_hole 10,
                template_app (template_hole 13, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 13, template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2),
              template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 5)),
                  template_app (template_hole 12, template_var 5)),
                template_var 6))
            ),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 1)),
              template_app
               (template_hole 2,
                template_app (template_hole 13, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_hole 1,
                template_app (template_hole 13, template_var 5)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 15, template_var 0),
                 template_app (template_hole 0, template_var 6))
               )
           ))),
    ("HASem.UniqueSucState_Target_ChiPlus_StepConf",
     "[| ?TS : HPT ?ST; (?S, ?T) : ChiRel (HA ?ST);
         (?S, ?U) : ChiRel (HA ?ST); ?V : Target ?TS;
         (?V, ?W) : ChiRel (HA ?ST); ?T ~: ChiStar (HA ?ST) `` Source ?TS;
         (?W, ?U) : (Restr (ChiRel (HA ?ST)) (HAInitStates (HA ?ST)))^+;
         ?T : Conf ?ST; (?S, ?U) : ChiRel (HA ?ST) |]
      ==> ?T = ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 6),
              template_app (template_hole 16, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 2)),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 5)))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_hole 7,
                        template_app (template_hole 12, template_var 5))),
                    template_app (template_hole 6, template_var 6)))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 0),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_hole 13,
                      template_app (template_hole 12, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_hole 2,
                        template_app (template_hole 12, template_var 5))),
                    t_empty))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 1, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 2)),
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 5)))
            )],
       template_equation (template_var 3, template_var 2)))]:
   (string * thm * template) list
### theory "Draft.HASemMoreTemplates"
### 0.390s elapsed time, 0.556s cpu time, 0.065s GC time
val it = (): unit
