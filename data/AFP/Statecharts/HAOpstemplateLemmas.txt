   [("HAOps.EmptyMap_dom", "dom (EmptyMap ?S) = ?S",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("HAOps.PseudoHA_ChiRel", "ChiRel (PseudoHA ?A ?D) = {}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("HAOps.PseudoHA_HAInitValue", "HAInitValue (PseudoHA ?SA ?D) = ?D",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("HAOps.PseudoHA_HARoot", "HARoot (PseudoHA ?SA ?D) = ?SA",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("HAOps.EmptyMap_IsCompFun", "IsCompFun {?SA} (EmptyMap (States ?SA))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HAOps.EmptyMap_NoCycles", "NoCycles {?SA} (EmptyMap (States ?SA))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HAOps.EmptyMap_OneAncestor",
     "OneAncestor {?SA} (EmptyMap (States ?SA))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HAOps.EmptyMap_RootEx", "RootEx {?SA} (EmptyMap (States ?SA))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("HAOps.PseudoHA_HAInitState",
     "HAInitState (PseudoHA ?A ?D) = InitState ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("HAOps.PseudoHA_Events", "HAEvents (PseudoHA ?SA ?D) = SAEvents ?SA",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("HAOps.PseudoHA_HAStates", "HAStates (PseudoHA ?SA ?D) = States ?SA",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("HAOps.PseudoHA_CompFun",
     "CompFun (PseudoHA ?SA ?D) = EmptyMap (States ?SA)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("HAOps.PseudoHA_SAs", "SAs (PseudoHA ?SA ?D) = {?SA}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("HAOps.PseudoHA_HAInitStates",
     "HAInitStates (PseudoHA ?A ?D) = {InitState ?A}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("HAOps.PseudoHA_InitConf",
     "InitConf (PseudoHA ?A ?D) = {InitState ?A}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("HAOps.PseudoHA_CompFun_ran", "ran (CompFun (PseudoHA ?SA ?D)) = {{}}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("HAOps.EmptyMap_Root", "Root {?SA} (EmptyMap (States ?SA)) = ?SA",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("HAOps.EmptyMap_the", "?x : ?S ==> the (EmptyMap ?S ?x) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("HAOps.PseudoHA_HAStates_IFF",
     "States ?SA = ?X ==> HAStates (PseudoHA ?SA ?D) = ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("HAOps.EmptyMap_ran", "?S ~= {} ==> ran (EmptyMap ?S) = {{}}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("HAOps.PseudoHA_Chi",
     "?S : States ?A ==> Chi (PseudoHA ?A ?D) ?S = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_hole 0))),
    ("HAOps.FAddSA_States", "?S : States ?SA ==> (?A [f+] (?S, ?SA)) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("HAOps.EmptyMap_hierauto",
     "(?D, {?SA}, SAEvents ?SA, EmptyMap (States ?SA)) : hierauto",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0)))))),
           template_hole 0)
         )),
    ("HAOps.PseudoHA_CompFun_the",
     "?S : States ?A ==> the (CompFun (PseudoHA ?A ?D) ?S) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_hole 0))),
    ("HAOps.FAddSA_dom", "?S ~: dom ?A ==> (?A [f+] (?S, ?SA)) = ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("HAOps.FAddSA_States_dom",
     "?S : States ?SA ==> dom (?F [f+] (?S, ?SA)) = dom ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app (template_hole 2, template_var 0)))),
    ("HAOps.FAddSA_dom_dom",
     "?S ~: dom ?F ==> dom (?F [f+] (?S, ?SA)) = dom ?F",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app (template_hole 3, template_var 1)))),
    ("HAOps.FAddSA_States_neq",
     "[| ?S' ~: States ?SA; ?S ~= ?S' |]
      ==> (?A [f+] (?S, ?SA)) ?S' = ?A ?S'",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app (template_hole 4, template_var 2))
                )
            ),
        template_negation
         (template_equation (template_var 1, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 3),
         template_app (template_var 0, template_var 3)))),
    ("HAOps.EmptyMap_ran_override",
     "[| ?S ~= {}; ?S Int dom ?G = {} |]
      ==> ran (?G ++ EmptyMap ?S) = insert {} (ran ?G)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app (template_hole 6, template_var 0)),
          template_hole 8)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 4, template_var 0))))),
    ("HAOps.EmptyMap_Union_ran_override",
     "[| ?S ~= {}; ?S Int dom ?G = {} |]
      ==> \<Union> (ran (?G ++ EmptyMap ?S)) = \<Union> (ran ?G)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_app (template_hole 5, template_var 0)),
          template_hole 7)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1)))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("HAOps.AddSA_HAInitState",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> HAInitState (?A [++] (?S, ?SA)) = HAInitState ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 6, template_var 1)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app (template_hole 2, template_var 1)))),
    ("HAOps.AddSA_HAInitValue",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> HAInitValue (?HA [++] (?S, ?SA)) = HAInitValue ?HA",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 6, template_var 1)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app (template_hole 2, template_var 1)))),
    ("HAOps.AddSA_HARoot",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> HARoot (?HA [++] (?S, ?SA)) = HARoot ?HA",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 6, template_var 1)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app (template_hole 2, template_var 1)))),
    ("HAOps.FAddSA_dom_dom_States",
     "[| ?S : dom ?F; ?S ~: States ?SA |]
      ==> dom (?F [f+] (?S, ?SA)) = dom ?F Un States ?SA",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 6, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("HAOps.FAddSA_dom_insert",
     "[| ?S : dom ?A; ?S ~: States ?SA |]
      ==> (?A [f+] (?S, ?SA)) ?S = Some (insert ?SA (the (?A ?S)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_app (template_hole 6, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_var 1, template_var 2))))))),
    ("HAOps.AddSA_SAs",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> SAs (?HA [++] (?S, ?SA)) = insert ?SA (SAs ?HA)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 7, template_var 1)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 3, template_var 1))))),
    ("HAOps.AddSA_HAInitStates",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> HAInitStates (?A [++] (?S, ?SA)) =
          insert (InitState ?SA) (HAInitStates ?A)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 7, template_var 1)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 4, template_var 1))))),
    ("HAOps.AddSA_InitConf",
     "[| States ?SA Int HAStates ?A = {}; ?S : InitConf ?A |]
      ==> InitConf (?A [++] (?S, ?SA)) =
          insert (InitState ?SA) (InitConf ?A)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 7, template_var 1)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 4, template_var 1))))),
    ("HAOps.AddSA_HAStates",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> HAStates (?HA [++] (?S, ?SA)) = HAStates ?HA Un States ?SA",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2)),
            template_app (template_hole 5, template_var 1)),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 5, template_var 1)),
           template_app (template_hole 6, template_var 2))))),
    ("HAOps.AddSA_Events",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> HAEvents (?HA [++] (?S, ?SA)) = HAEvents ?HA Un SAEvents ?SA",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app (template_hole 8, template_var 1)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 1)),
           template_app (template_hole 0, template_var 2))))),
    ("HAOps.FAddSA_Union_ran",
     "[| ?S : dom ?G; States ?SA Int dom ?G = {} |]
      ==> \<Union> (ran (?G [f+] (?S, ?SA))) =
          insert ?SA (\<Union> (ran ?G))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0)),
            template_app (template_hole 10, template_var 1)),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)))))),
    ("HAOps.FAddSA_dom_insert_dom_disjunct",
     "[| ?S : dom ?G; States ?SA Int dom ?G = {} |]
      ==> (?G [f+] (?S, ?SA)) ?S = Some (insert ?SA (the (?G ?S)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0)),
            template_app (template_hole 10, template_var 1)),
          template_hole 6)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app (template_var 1, template_var 2))))))),
    ("HAOps.AddSA_CompFun",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> CompFun (?HA [++] (?S, ?SA)) = (CompFun ?HA [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 7, template_var 1)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2))))),
    ("HAOps.FAddSA_dom_emptyset",
     "[| ?S : dom ?A; ?S ~: States ?SA; ?S' : States ?SA |]
      ==> (?A [f+] (?S, ?SA)) ?S' = Some {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app (template_hole 7, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app (template_hole 5, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("HAOps.AddSA_Chi",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> Chi (?A [++] (?S, ?SA)) ?S = States ?SA Un Chi ?A ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 6, template_var 1)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2))),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 7, template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("HAOps.AddSA_HAInitValue_IFF",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
         HAInitValue ?HA = ?X |]
      ==> HAInitValue (?HA [++] (?S, ?SA)) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 6, template_var 2)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3))),
         template_var 0))),
    ("HAOps.AddSA_HARoot_IFF",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
         HARoot ?HA = ?X |]
      ==> HARoot (?HA [++] (?S, ?SA)) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 6, template_var 2)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3))),
         template_var 0))),
    ("HAOps.AddSA_CompFun_the",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> the (CompFun (?A [++] (?S, ?SA)) ?S) =
          insert ?SA (the (CompFun ?A ?S))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app (template_hole 8, template_var 1)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("HAOps.AddSA_Chi2",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A;
         ?T : States ?SA |]
      ==> Chi (?A [++] (?S, ?SA)) ?T = {}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 3)),
            template_app (template_hole 5, template_var 2)),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 6, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3))),
           template_var 0),
         template_hole 4))),
    ("HAOps.AddSA_CompFun_the2",
     "[| ?S' : States ?SA; States ?SA Int HAStates ?A = {};
         ?S : HAStates ?A |]
      ==> the (CompFun (?A [++] (?S, ?SA)) ?S') = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app (template_hole 10, template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 10, template_var 2)),
            template_app (template_hole 7, template_var 1)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_var 3)),
         template_hole 0))),
    ("HAOps.AddSA_InitConf2",
     "[| States ?SA Int HAStates ?A = {}; ?S ~: InitConf ?A;
         ?S : HAStates ?A |]
      ==> InitConf (?A [++] (?S, ?SA)) = InitConf ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 6, template_var 1)),
          template_hole 5),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app (template_hole 2, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app (template_hole 2, template_var 1)))),
    ("HAOps.AddSA_SAs_IFF",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
         SAs ?HA = ?X |]
      ==> SAs (?HA [++] (?S, ?SA)) = insert ?SA ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app (template_hole 7, template_var 2)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_equation
         (template_app (template_hole 3, template_var 2), template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3))),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("HAOps.AddSA_CompFun_PseudoHA_ran",
     "[| ?S : States ?RootSA; States ?RootSA Int States ?SA = {} |]
      ==> ran (CompFun (PseudoHA ?RootSA ?D [++] (?S, ?SA))) = {{}, {?SA}}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app (template_hole 13, template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 13, template_var 2)),
            template_app (template_hole 13, template_var 1)),
          template_hole 10)],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1)))),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 2)),
             template_hole 0))))),
    ("HAOps.FAddSA_HierAuto_insert",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA |]
      ==> HierAuto (HAInitValue ?HA) (insert ?SA (SAs ?HA))
           (HAEvents ?HA Un SAEvents ?SA) (CompFun ?HA [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 2)),
            template_app (template_hole 12, template_var 1)),
          template_hole 11),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 12, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1)),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_app (template_hole 6, template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("HAOps.FAddSA_IsCompFun",
     "[| States ?SA Int \<Union> (States ` ?F) = {};
         ?S : \<Union> (States ` ?F); IsCompFun ?F ?G |]
      ==> IsCompFun (insert ?SA ?F) (?G [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_hole 8),
                template_var 2))),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 8),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))
           ))),
    ("HAOps.AddSA_ChiRel",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> ChiRel (?A [++] (?S, ?SA)) =
          {(T, T'). T = ?S & T' : States ?SA} Un ChiRel ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 2)),
            template_app (template_hole 11, template_var 1)),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 11, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3, template_app (template_hole 2, t_empty))),
           template_app (template_hole 7, template_var 1))))),
    ("HAOps.AddSA_CompFun_PseudoHA_ran_IFF",
     "[| ?S : States ?RootSA; States ?RootSA Int States ?SA = {};
         {{}, {?SA}} = ?X |]
      ==> ran (CompFun (PseudoHA ?RootSA ?D [++] (?S, ?SA))) = ?X",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4),
              template_app (template_hole 13, template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 13, template_var 3)),
            template_app (template_hole 13, template_var 2)),
          template_hole 10),
        template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_hole 7)),
              template_hole 5)),
          template_var 1)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)))),
         template_var 1))),
    ("HAOps.EmptyMap_Union_ran_override2",
     "[| ?S ~= {}; ?S Int dom ?G1.0 = {}; dom ?G1.0 Int dom ?G2.0 = {} |]
      ==> \<Union> (ran (?G1.0 ++ EmptyMap ?S ++ ?G2.0)) =
          \<Union> (ran ?G1.0 Un ran ?G2.0)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_app (template_hole 6, template_var 1)),
          template_hole 8),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 6, template_var 0)),
          template_hole 8)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_app (template_hole 1, template_var 2))),
               template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 3, template_var 0)))))),
    ("HAOps.AddSA_CompFun_IFF",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
         CompFun ?HA = ?HAG; (?HAG [f+] (?S, ?SA)) = ?X |]
      ==> CompFun (?HA [++] (?S, ?SA)) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 4)),
            template_app (template_hole 7, template_var 3)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 7, template_var 3))
            ),
        template_equation
         (template_app (template_hole 3, template_var 3), template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1),
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 4)),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 4))),
         template_var 0))),
    ("HAOps.FAddSA_NoCycles",
     "[| States ?SA Int dom ?G = {}; ?S : dom ?G;
         dom ?G = \<Union> (States ` ?F); NoCycles ?F ?G |]
      ==> NoCycles (insert ?SA ?F) (?G [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 3)),
            template_app (template_hole 8, template_var 2)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 8, template_var 2))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 9),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))
           ))),
    ("HAOps.AddSA_CompFun_ran_not_mem",
     "[| States ?SA2.0 Int (HAStates ?A Un States ?SA1.0) = {};
         States ?SA1.0 Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> {?SA2.0} ~: ran (CompFun ?A [f+] (?S, ?SA1.0))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 3)),
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 2)),
              template_app (template_hole 12, template_var 1))),
          template_hole 9),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 1)),
            template_app (template_hole 10, template_var 2)),
          template_hole 9),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 10, template_var 2))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4)),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 2)),
                     template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 1))))
               )
           ))),
    ("HAOps.AddSA_Chi3",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A;
         ?T ~: States ?SA; ?T ~= ?S |]
      ==> Chi (?A [++] (?S, ?SA)) ?T = Chi ?A ?T",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 3)),
            template_app (template_hole 7, template_var 2)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 7, template_var 2))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app (template_hole 8, template_var 3))
                )
            ),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("HAOps.FAddSA_HierAuto",
     "[| States ?SA Int \<Union> (States ` ?F) = {};
         ?S : \<Union> (States ` ?F); HierAuto ?D ?F ?E ?G |]
      ==> HierAuto ?D (insert ?SA ?F) (?E Un SAEvents ?SA)
           (?G [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 5)),
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_hole 10),
                template_var 4))),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 10),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 5))),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 5)))
           ))),
    ("HAOps.AddSA_CompFun_the3",
     "[| ?S' ~: States ?SA; ?S ~= ?S'; States ?SA Int HAStates ?A = {};
         ?S : HAStates ?A |]
      ==> the (CompFun (?A [++] (?S, ?SA)) ?S') = the (CompFun ?A ?S')",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app (template_hole 10, template_var 2))
                )
            ),
        template_negation
         (template_equation (template_var 1, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 10, template_var 2)),
            template_app (template_hole 6, template_var 0)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))),
             template_var 3)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 3))))),
    ("HAOps.AddSA_CompFun_ran",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A |]
      ==> ran (CompFun (?A [++] (?S, ?SA))) =
          insert {}
           (insert (insert ?SA (the (CompFun ?A ?S)))
             (ran (CompFun ?A) - {the (CompFun ?A ?S)}))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 2)),
            template_app (template_hole 13, template_var 1)),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 13, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 2)))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_var 0))),
                 template_hole 0))))))),
    ("HAOps.FAddSA_Union_ran2",
     "[| ?S : dom ?G1.0; States ?SA Int dom ?G1.0 = {};
         dom ?G1.0 Int dom ?G2.0 = {} |]
      ==> \<Union> (ran ((?G1.0 [f+] (?S, ?SA)) ++ ?G2.0)) =
          insert ?SA (\<Union> (ran ?G1.0 Un ran ?G2.0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app (template_hole 12, template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1)),
            template_app (template_hole 12, template_var 2)),
          template_hole 8),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 12, template_var 2)),
            template_app (template_hole 12, template_var 0)),
          template_hole 8)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 1))),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 5, template_var 2)),
               template_app (template_hole 5, template_var 0))))))),
    ("HAOps.AddSA_InitConf_IFF",
     "[| InitConf ?A = ?Y; States ?SA Int HAStates ?A = {};
         ?S : HAStates ?A;
         (if ?S : ?Y then insert (InitState ?SA) ?Y else ?Y) = ?X |]
      ==> InitConf (?A [++] (?S, ?SA)) = ?X",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4), template_var 3),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 7, template_var 4)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 7, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 2)),
                template_var 3)),
            template_var 3),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))),
         template_var 0))),
    ("HAOps.AddSA_HAStates_IFF",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
         HAStates ?HA = ?HAS; States ?SA = ?SAS; ?HAS Un ?SAS = ?X |]
      ==> HAStates (?HA [++] (?S, ?SA)) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 5)),
            template_app (template_hole 5, template_var 4)),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 5, template_var 4))
            ),
        template_equation
         (template_app (template_hole 5, template_var 4), template_var 2),
        template_equation
         (template_app (template_hole 6, template_var 5), template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 5))),
         template_var 0))),
    ("HAOps.AddSA_Events_IFF",
     "[| States ?SA Int HAStates ?HA = {}; ?S : HAStates ?HA;
         HAEvents ?HA = ?HAE; SAEvents ?SA = ?SAE; ?HAE Un ?SAE = ?X |]
      ==> HAEvents (?HA [++] (?S, ?SA)) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 5)),
            template_app (template_hole 8, template_var 4)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 8, template_var 4))
            ),
        template_equation
         (template_app (template_hole 4, template_var 4), template_var 2),
        template_equation
         (template_app (template_hole 3, template_var 5), template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 5))),
         template_var 0))),
    ("HAOps.AddSA_CompFun_ran_IFF",
     "[| States ?SA Int HAStates ?A = {}; ?S : HAStates ?A;
         insert {}
          (insert (insert ?SA (the (CompFun ?A ?S)))
            (ran (CompFun ?A) - {the (CompFun ?A ?S)})) =
         ?X |]
      ==> ran (CompFun (?A [++] (?S, ?SA))) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 3)),
            template_app (template_hole 13, template_var 2)),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 13, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_hole 8),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_hole 3,
                    template_app (template_hole 5, template_var 2))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 2),
                        template_var 1))),
                  template_hole 2)))),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))),
         template_var 0))),
    ("HAOps.AddSA_CompFun_PseudoHA_ran2",
     "[| States ?SA1.0 Int States ?RootSA = {};
         States ?SA2.0 Int (States ?RootSA Un States ?SA1.0) = {};
         ?S : States ?RootSA |]
      ==> ran (CompFun
                (PseudoHA ?RootSA ?D [++] (?S, ?SA1.0) [++] (?S, ?SA2.0))) =
          {{}, {?SA2.0, ?SA1.0}}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 4)),
            template_app (template_hole 13, template_var 3)),
          template_hole 12),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 2)),
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 13, template_var 3)),
              template_app (template_hole 13, template_var 4))),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 13, template_var 3))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 4))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 2)))),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_hole 2))),
             template_hole 0))))),
    ("HAOps.FAddSA_RootEx",
     "[| \<Union> (ran ?G) = ?F - {Root ?F ?G};
         dom ?G = \<Union> (States ` ?F); dom ?G Int States ?SA = {};
         ?S : dom ?G; RootEx ?F ?G |]
      ==> RootEx (insert ?SA ?F) (?G [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 16,
            template_app (template_hole 15, template_var 3)),
          template_app
           (template_app (template_hole 14, template_var 2),
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 3)),
              template_hole 11))),
        template_equation
         (template_app (template_hole 9, template_var 3),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2))),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 9, template_var 3)),
            template_app (template_hole 6, template_var 1)),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 9, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 13, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("HAOps.AddSA_CompFun_PseudoHA_ran2_IFF",
     "[| States ?SA1.0 Int States ?RootSA = {};
         States ?SA2.0 Int (States ?RootSA Un States ?SA1.0) = {};
         ?S : States ?RootSA; {{}, {?SA2.0, ?SA1.0}} = ?X |]
      ==> ran (CompFun
                (PseudoHA ?RootSA ?D [++] (?S, ?SA1.0) [++] (?S, ?SA2.0))) =
          ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 5)),
            template_app (template_hole 13, template_var 4)),
          template_hole 12),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 3)),
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 13, template_var 4)),
              template_app (template_hole 13, template_var 5))),
          template_hole 12),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 13, template_var 4))
            ),
        template_equation
         (template_app
           (template_app (template_hole 8, template_hole 7),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_hole 7))),
              template_hole 5)),
          template_var 1)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 5))),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)))),
         template_var 1))),
    ("HAOps.FAddSA_RootEx_Root",
     "[| \<Union> (ran ?G) = ?F - {Root ?F ?G};
         \<Union> (States ` ?F) = dom ?G; dom ?G Int States ?SA = {};
         ?S : dom ?G; RootEx ?F ?G |]
      ==> Root (insert ?SA ?F) (?G [f+] (?S, ?SA)) = Root ?F ?G",
     template_implication
      ([template_equation
         (template_app
           (template_hole 17,
            template_app (template_hole 16, template_var 3)),
          template_app
           (template_app (template_hole 15, template_var 2),
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 3)),
              template_hole 12))),
        template_equation
         (template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 2)),
          template_app (template_hole 7, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 7, template_var 3)),
            template_app (template_hole 8, template_var 1)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 14, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_app
          (template_app (template_hole 13, template_var 2),
           template_var 3)))),
    ("HAOps.FAddSA_OneAncestor",
     "[| \<Union> (ran ?G) = ?F - {Root ?F ?G}; dom ?G Int States ?SA = {};
         ?S : dom ?G; \<Union> (States ` ?F) = dom ?G; RootEx ?F ?G;
         OneAncestor ?F ?G |]
      ==> OneAncestor (insert ?SA ?F) (?G [f+] (?S, ?SA))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 17,
            template_app (template_hole 16, template_var 3)),
          template_app
           (template_app (template_hole 15, template_var 2),
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 3)),
              template_hole 12))),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 3)),
            template_app (template_hole 8, template_var 1)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 9, template_var 3))
            ),
        template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_hole 8),
              template_var 2)),
          template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 14, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("HAOps.FAddSA_ran",
     "[| ALL T:dom ?G. T ~= ?S --> the (?G T) Int the (?G ?S) = {};
         ?S : dom ?G; States ?SA Int dom ?G = {} |]
      ==> ran (?G [f+] (?S, ?SA)) =
          insert {}
           (insert (insert ?SA (the (?G ?S))) (ran ?G - {the (?G ?S)}))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 2)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 20, template_var 2))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 0)),
            template_app (template_hole 20, template_var 2)),
          template_hole 8)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_hole 13),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_hole 14,
                   template_app (template_var 2, template_var 1)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 6, template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 14,
                     template_app (template_var 2, template_var 1))),
                 template_hole 0))))))),
    ("HAOps.AddSA_CompFun_ran2",
     "[| States ?SA1.0 Int HAStates ?A = {};
         States ?SA2.0 Int (HAStates ?A Un States ?SA1.0) = {};
         ?S : HAStates ?A; ?T : States ?SA1.0 |]
      ==> ran (CompFun (?A [++] (?S, ?SA1.0) [++] (?T, ?SA2.0))) =
          insert {}
           (insert {?SA2.0} (ran (CompFun (?A [++] (?S, ?SA1.0)))))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 4)),
            template_app (template_hole 11, template_var 3)),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 2)),
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 11, template_var 3)),
              template_app (template_hole 12, template_var 4))),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 11, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 12, template_var 4))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 4))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_hole 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 4))))))))),
    ("HAOps.AddSA_CompFun_ran2_IFF",
     "[| States ?SA1.0 Int HAStates ?A = {};
         States ?SA2.0 Int (HAStates ?A Un States ?SA1.0) = {};
         ?S : HAStates ?A; ?T : States ?SA1.0;
         insert {}
          (insert {?SA2.0} (ran (CompFun (?A [++] (?S, ?SA1.0))))) =
         ?X |]
      ==> ran (CompFun (?A [++] (?S, ?SA1.0) [++] (?T, ?SA2.0))) = ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 5)),
            template_app (template_hole 11, template_var 4)),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 3)),
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 11, template_var 4)),
              template_app (template_hole 12, template_var 5))),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 11, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 12, template_var 5))
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 5)),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 4),
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 5)))))),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 5))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))),
         template_var 0))),
    ("HAOps.help_InitConf",
     "States ?SA Int HAStates ?A = {} ==>
      {p. fst p ~= InitState ?SA &
          snd p ~= InitState ?SA &
          p : insert (InitState ?SA) (HAInitStates ?A) \<times>
              insert (InitState ?SA) (HAInitStates ?A) &
          (p : {?S} \<times> States ?SA | p : ChiRel ?A)} =
      HAInitStates ?A \<times> HAInitStates ?A Int ChiRel ?A",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 18,
              template_app (template_hole 17, template_var 2)),
            template_app (template_hole 16, template_var 1)),
          template_hole 15)],
       template_equation
        (template_app (template_hole 13, t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 3, template_var 1)),
               t_empty)),
           template_app (template_hole 1, template_var 1))))),
    ("HAOps.AddSA_CompFun_ran3",
     "[| States ?SA1.0 Int HAStates ?A = {};
         States ?SA2.0 Int (HAStates ?A Un States ?SA1.0) = {};
         States ?SA3.0 Int (HAStates ?A Un States ?SA1.0 Un States ?SA2.0) =
         {};
         ?S : HAStates ?A; ?T : States ?SA1.0 |]
      ==> ran (CompFun
                (?A [++] (?S, ?SA1.0) [++] (?T, ?SA2.0) [++]
                 (?T, ?SA3.0))) =
          insert {}
           (insert {?SA3.0, ?SA2.0}
             (ran (CompFun (?A [++] (?S, ?SA1.0)))))",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 5)),
            template_app (template_hole 11, template_var 4)),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 3)),
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 11, template_var 4)),
              template_app (template_hole 12, template_var 5))),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 2)),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 11, template_var 4)),
                  template_app (template_hole 12, template_var 5))),
              template_app (template_hole 12, template_var 3))),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 11, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 12, template_var 5))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 5))),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_var 3))),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2)))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_hole 1))),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 5))))))))),
    ("HAOps.AddSA_CompFun_ran3_IFF",
     "[| States ?SA1.0 Int HAStates ?A = {};
         States ?SA2.0 Int (HAStates ?A Un States ?SA1.0) = {};
         States ?SA3.0 Int (HAStates ?A Un States ?SA1.0 Un States ?SA2.0) =
         {};
         ?S : HAStates ?A; ?T : States ?SA1.0;
         insert {}
          (insert {?SA3.0, ?SA2.0} (ran (CompFun (?A [++] (?S, ?SA1.0))))) =
         ?X |]
      ==> ran (CompFun
                (?A [++] (?S, ?SA1.0) [++] (?T, ?SA2.0) [++]
                 (?T, ?SA3.0))) =
          ?X",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 6)),
            template_app (template_hole 11, template_var 5)),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 4)),
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 11, template_var 5)),
              template_app (template_hole 12, template_var 6))),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 3)),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 11, template_var 5)),
                  template_app (template_hole 12, template_var 6))),
              template_app (template_hole 12, template_var 4))),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app (template_hole 11, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 12, template_var 6))
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_hole 5),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_hole 5))),
              template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 5),
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 6)))))),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 6))),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)))),
         template_var 0)))]
