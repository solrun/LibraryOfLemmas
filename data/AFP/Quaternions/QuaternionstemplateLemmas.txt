   [("Quaternions.Im1_quat_of_real", "Im1 (quat_of_real ?a) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Quaternions.Im2_quat_of_real", "Im2 (quat_of_real ?a) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Quaternions.Im3_quat_of_real", "Im3 (quat_of_real ?a) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Quaternions.Re_Hv", "quat.Re (Hv ?v) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Quaternions.Re_quat_of_real", "quat.Re (quat_of_real ?a) = ?a",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Quaternions.cnj_cnj", "Quaternions.cnj (Quaternions.cnj ?q) = ?q",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Quaternions.him_hv", "HIm (Hv ?x) = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Quaternions.him_of_real", "HIm (quat_of_real ?a) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Quaternions.quat_inner_1", "1 \<bullet> ?x = quat.Re ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_i_left", "quat_ii \<bullet> ?x = Im1 ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_j_left", "\<j> \<bullet> ?x = Im2 ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_k_left", "\<k> \<bullet> ?x = Im3 ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_1_right", "?x \<bullet> 1 = quat.Re ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_i_right", "?x \<bullet> quat_ii = Im1 ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_j_right", "?x \<bullet> \<j> = Im2 ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_inner_k_right", "?x \<bullet> \<k> = Im3 ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.norm_hv", "norm (Hv ?v) = norm ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.quat_norm_cnj", "norm (Quaternions.cnj ?q) = norm ?q",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Quaternions.cnj_of_int", "Quaternions.cnj (of_int ?z) = of_int ?z",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.cnj_of_nat", "Quaternions.cnj (of_nat ?n) = of_nat ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.cnj_numeral", "Quaternions.cnj (numeral ?w) = numeral ?w",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.cnj_of_real",
     "Quaternions.cnj (quat_of_real ?x) = quat_of_real ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Quaternions.Im1_Hv", "Im1 (Hv ?v) = ?v $ 1",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Quaternions.hv_minus", "Hv (- ?x) = - Hv ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Quaternions.cnj_inverse",
     "Quaternions.cnj (inverse ?x) = inverse (Quaternions.cnj ?x)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Quaternions.cnj_minus",
     "Quaternions.cnj (- ?x) = - Quaternions.cnj ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Quaternions.cnj_hv", "Quaternions.cnj (Hv ?v) = - Hv ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Quaternions.him_minus", "HIm (- ?q) = - HIm ?q",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Quaternions.him_cnj", "HIm (Quaternions.cnj ?q) = - HIm ?q",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Quaternions.in_Reals_iff_cnj",
     "(?q : \<real>) = (Quaternions.cnj ?q = ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Quaternions.hv_eq_zero", "(Hv ?v = 0) = (?v = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Quaternions.cnj_one_iff", "(Quaternions.cnj ?z = 1) = (?z = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Quaternions.cnj_zero_iff", "(Quaternions.cnj ?z = 0) = (?z = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Quaternions.of_real_eq_Quat", "quat_of_real ?a = Quat ?a 0 0 0",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_hole 0),
         template_hole 0))),
    ("Quaternions.cnj_neg_numeral",
     "Quaternions.cnj (- numeral ?w) = - numeral ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Quaternions.in_Reals_iff_Re",
     "(?q : \<real>) = (quat_of_real (quat.Re ?q) = ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Quaternions.hv_inj", "(Hv ?x = Hv ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Quaternions.cnj_cancel_iff",
     "(Quaternions.cnj ?x = Quaternions.cnj ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Quaternions.Im2_Hv", "Im2 (Hv ?v) = ?v $ 2",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Quaternions.Im3_Hv", "Im3 (Hv ?v) = ?v $ 3",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Quaternions.dot_hv", "Hv ?u \<bullet> Hv ?v = ?u \<bullet> ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Quaternions.hv_vec", "Hv (vec ?r) = Quat 0 ?r ?r ?r",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 0),
         template_var 0))),
    ("Quaternions.quat_mult_cnj_commute",
     "Quaternions.cnj ?q * ?q = ?q * Quaternions.cnj ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.quat_of_real_times_commute",
     "quat_of_real ?r * ?q = ?q * quat_of_real ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Quaternions.cnj_power",
     "Quaternions.cnj (?x ^ ?n) = Quaternions.cnj ?x ^ ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Quaternions.cnj_scaleR",
     "Quaternions.cnj (?r *\<^sub>R ?x) = ?r *\<^sub>R Quaternions.cnj ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Quaternions.Cauchy_Im1", "Cauchy ?X ==> Cauchy (%n. Im1 (?X n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quaternions.Cauchy_Im2", "Cauchy ?X ==> Cauchy (%n. Im2 (?X n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quaternions.Cauchy_Im3", "Cauchy ?X ==> Cauchy (%n. Im3 (?X n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quaternions.Cauchy_Re", "Cauchy ?X ==> Cauchy (%n. quat.Re (?X n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Quaternions.cnj_eq_of_real",
     "(Quaternions.cnj ?q = quat_of_real ?x) = (?q = quat_of_real ?x)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Quaternions.hv_him_eq", "(Hv (HIm ?q) = ?q) = (quat.Re ?q = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_var 0),
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Quaternions.of_real_continuous_iff",
     "continuous ?net (%x. quat_of_real (?f x)) = continuous ?net ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Quaternions.of_real_continuous_on_iff",
     "continuous_on ?S (%x. quat_of_real (?f x)) = continuous_on ?S ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Quaternions.norm_eq_L2", "norm ?z = L2_set (quat_proj ?z) {..3}",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Quaternions.inverse_mult",
     "inverse (?p * ?q) = inverse ?q * inverse ?p",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Quaternions.hv_diff", "Hv (?x - ?y) = Hv ?x - Hv ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Quaternions.hv_add", "Hv (?x + ?y) = Hv ?x + Hv ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Quaternions.hv_cmult",
     "Hv (?a *\<^sub>R ?x) = quat_of_real ?a * Hv ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Quaternions.cnj_diff",
     "Quaternions.cnj (?x - ?y) = Quaternions.cnj ?x - Quaternions.cnj ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Quaternions.cnj_add",
     "Quaternions.cnj (?x + ?y) = Quaternions.cnj ?x + Quaternions.cnj ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Quaternions.cnj_mult",
     "Quaternions.cnj (?x * ?y) = Quaternions.cnj ?y * Quaternions.cnj ?x",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("Quaternions.quat_divide_numeral",
     "?x / numeral ?w = ?x /\<^sub>R numeral ?w",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 1))),
    ("Quaternions.him_diff", "HIm (?p - ?q) = HIm ?p - HIm ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Quaternions.him_add", "HIm (?p + ?q) = HIm ?p + HIm ?q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Quaternions.him_mult_right",
     "HIm (?q * quat_of_real ?a) = ?a *\<^sub>R HIm ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 3, template_var 1)))),
    ("Quaternions.him_mult_left",
     "HIm (quat_of_real ?a * ?q) = ?a *\<^sub>R HIm ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("Quaternions.Im1_sum", "Im1 (sum ?f ?S) = (SUM x:?S. Im1 (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.Im2_sum", "Im2 (sum ?f ?S) = (SUM x:?S. Im2 (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.Im3_sum", "Im3 (sum ?f ?S) = (SUM x:?S. Im3 (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.Re_sum",
     "quat.Re (sum ?f ?S) = (SUM x:?S. quat.Re (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.Im1_divide_numeral",
     "Im1 (?x / numeral ?w) = Im1 ?x / numeral ?w",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.Im2_divide_numeral",
     "Im2 (?x / numeral ?w) = Im2 ?x / numeral ?w",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.Im3_divide_numeral",
     "Im3 (?x / numeral ?w) = Im3 ?x / numeral ?w",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.Re_divide_numeral",
     "quat.Re (?x / numeral ?w) = quat.Re ?x / numeral ?w",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.hv_sum", "Hv (sum ?f ?S) = (SUM x:?S. Hv (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.cnj_sum",
     "Quaternions.cnj (sum ?f ?S) = (SUM x:?S. Quaternions.cnj (?f x))",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.cnj_divide",
     "Quaternions.cnj (?x / ?y) =
      inverse (Quaternions.cnj ?y) * Quaternions.cnj ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0))),
         template_app (template_hole 3, template_var 1)))),
    ("Quaternions.him_sum", "HIm (sum ?f ?S) = (SUM x:?S. HIm (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Quaternions.real_norm",
     "?q : \<real> ==> norm ?q = \<bar>quat.Re ?q\<bar>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Quaternions.continuous_Im1",
     "continuous ?F ?g ==> continuous ?F (%x. Im1 (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_Im2",
     "continuous ?F ?g ==> continuous ?F (%x. Im2 (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_Im3",
     "continuous ?F ?g ==> continuous ?F (%x. Im3 (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_Re",
     "continuous ?F ?g ==> continuous ?F (%x. quat.Re (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_on_Im1",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. Im1 (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_on_Im2",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. Im2 (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_on_Im3",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. Im3 (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.continuous_on_Re",
     "continuous_on ?s ?g ==> continuous_on ?s (%x. quat.Re (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Quaternions.quat_inverse_eq_cnj",
     "norm ?q = 1 ==> inverse ?q = Quaternions.cnj ?q",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.norm_power2",
     "(norm ?q)\<^sup>2 = quat.Re (Quaternions.cnj ?q * ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)))),
    ("Quaternions.hv_him",
     "Hv (HIm ?q) = Quat 0 (Im1 ?q) (Im2 ?q) (Im3 ?q)",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.quat_add_cnj",
     "?q + Quaternions.cnj ?q = quat_of_real (2 * quat.Re ?q)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 0),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 0))))),
    ("Quaternions.quat_add_cnj",
     "Quaternions.cnj ?q + ?q = quat_of_real (2 * quat.Re ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 0))))),
    ("Quaternions.quat_norm_pow_2",
     "(quat_of_real (norm ?q))\<^sup>2 = ?q * Quaternions.cnj ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.quat_norm_pow_2_alt",
     "(quat_of_real (norm ?q))\<^sup>2 = Quaternions.cnj ?q * ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Quaternions.quat_of_real_times_left_commute",
     "quat_of_real ?r * (?p * ?q) = ?p * (quat_of_real ?r * ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Quaternions.quat_inverse_cnj",
     "inverse ?q =
      inverse (quat_of_real ((norm ?q)\<^sup>2)) * Quaternions.cnj ?q",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 8,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))))),
         template_app (template_hole 0, template_var 0)))),
    ("Quaternions.of_real_quat_re_cnj",
     "quat_of_real (quat.Re ?q) =
      inverse (quat_of_real 2) * (?q + Quaternions.cnj ?q)",
     template_equation
      (template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_hole 8,
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2))))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Quaternions.quat_of_real_inverse_collapse",
     "?c ~= 0 ==> quat_of_real ?c * quat_of_real (inverse ?c) = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Quaternions.quat_of_real_inverse_collapse",
     "?c ~= 0 ==> quat_of_real (inverse ?c) * quat_of_real ?c = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_app (template_hole 2, template_var 0)),
         template_hole 0))),
    ("Quaternions.sums_Im1", "?X sums ?a ==> (%n. Im1 (?X n)) sums Im1 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quaternions.sums_Im2", "?X sums ?a ==> (%n. Im2 (?X n)) sums Im2 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quaternions.sums_Im3", "?X sums ?a ==> (%n. Im3 (?X n)) sums Im3 ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quaternions.sums_Re",
     "?X sums ?a ==> (%n. quat.Re (?X n)) sums quat.Re ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Quaternions.mult_hv_eq_cross_dot",
     "Hv ?x * Hv ?y = Hv (cross3 ?x ?y) - quat_of_real (?x \<bullet> ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Quaternions.hv_vector", "Hv (vector [?x, ?y, ?z]) = Quat 0 ?x ?y ?z",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2))))),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Quaternions.HIm_Quat", "HIm (Quat ?w ?x ?y ?z) = vector [?x, ?y, ?z]",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Quaternions.isCont_Im1",
     "isCont ?g ?a ==> isCont (%x. Im1 (?g x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)
           ))),
    ("Quaternions.isCont_Im2",
     "isCont ?g ?a ==> isCont (%x. Im2 (?g x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)
           ))),
    ("Quaternions.isCont_Im3",
     "isCont ?g ?a ==> isCont (%x. Im3 (?g x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)
           ))),
    ("Quaternions.isCont_Re",
     "isCont ?g ?a ==> isCont (%x. quat.Re (?g x)) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)
           ))),
    ("Quaternions.has_derivative_Im1",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Im1 (?g x)) has_derivative (%x. Im1 (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Quaternions.has_derivative_Im2",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Im2 (?g x)) has_derivative (%x. Im2 (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Quaternions.has_derivative_Im3",
     "(?g has_derivative ?g') ?F ==>
      ((%x. Im3 (?g x)) has_derivative (%x. Im3 (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Quaternions.has_derivative_Re",
     "(?g has_derivative ?g') ?F ==>
      ((%x. quat.Re (?g x)) has_derivative (%x. quat.Re (?g' x))) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, t_empty), t_empty),
             template_var 0)
           ))),
    ("Quaternions.orthogonal_transformation_quat_conjugation",
     "?q ~= 0 ==>
      orthogonal_transformation (%x. HIm (inverse ?q * Hv x * ?q))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Quaternions.orthogonal_transformation_quat_congruence",
     "norm ?q = 1 ==>
      orthogonal_transformation (%x. HIm (Quaternions.cnj ?q * Hv x * ?q))",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Quaternions.tendsto_Im1",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Im1 (?g x)) \<longlongrightarrow> Im1 ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Quaternions.tendsto_Im2",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Im2 (?g x)) \<longlongrightarrow> Im2 ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Quaternions.tendsto_Im3",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. Im3 (?g x)) \<longlongrightarrow> Im3 ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Quaternions.tendsto_Re",
     "(?g \<longlongrightarrow> ?a) ?F ==>
      ((%x. quat.Re (?g x)) \<longlongrightarrow> quat.Re ?a) ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 1))),
             template_var 0)
           ))),
    ("Quaternions.quat_norm_imaginary",
     "quat.Re ?x = 0 ==> ?x\<^sup>2 = - (quat_of_real (norm ?x))\<^sup>2",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 0), template_hole 8)],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 0),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))))))),
    ("Quaternions.quat_proj_add",
     "?i <= 3 ==>
      quat_proj (?x + ?y) ?i = quat_proj ?x ?i + quat_proj ?y ?i",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_hole 4)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("Quaternions.him_eq",
     "(HIm ?p = HIm ?q) =
      (Im1 ?p = Im1 ?q & Im2 ?p = Im2 ?q & Im3 ?p = Im3 ?q)",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 1, template_var 1)),
                   template_app (template_hole 1, template_var 0))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Quaternions.quat_unfold",
     "?q =
      quat_of_real (quat.Re ?q) + quat_ii * quat_of_real (Im1 ?q) +
      \<j> * quat_of_real (Im2 ?q) +
      \<k> * quat_of_real (Im3 ?q)",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0))),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_hole 8,
                     template_app (template_hole 4, template_var 0))))),
             template_app
              (template_app (template_hole 6, template_hole 3),
               template_app
                (template_hole 8,
                 template_app (template_hole 2, template_var 0))))),
         template_app
          (template_app (template_hole 6, template_hole 1),
           template_app
            (template_hole 8,
             template_app (template_hole 0, template_var 0)))))),
    ("Quaternions.quat_trad",
     "Quat ?x ?y ?z ?w =
      quat_of_real ?x + quat_ii * quat_of_real ?y + \<j> * quat_of_real ?z +
      \<k> * quat_of_real ?w",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 3)),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app (template_hole 4, template_var 2)))),
             template_app
              (template_app (template_hole 3, template_hole 1),
               template_app (template_hole 4, template_var 1)))),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_app (template_hole 4, template_var 0))))),
    ("Quaternions.quat_eq_iff",
     "(?x = ?y) =
      (quat.Re ?x = quat.Re ?y &
       Im1 ?x = Im1 ?y & Im2 ?x = Im2 ?y & Im3 ?x = Im3 ?y)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 2, template_var 1)),
                   template_app (template_hole 2, template_var 0))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 1, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 0, template_var 1)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Quaternions.Im1_tendsto_lowerbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. ?b <= Im1 (?f x); ?net ~= bot |]
      ==> ?b <= Im1 ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 3, template_var 2)))),
    ("Quaternions.Im2_tendsto_lowerbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. ?b <= Im2 (?f x); ?net ~= bot |]
      ==> ?b <= Im2 ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 3, template_var 2)))),
    ("Quaternions.Im3_tendsto_lowerbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. ?b <= Im3 (?f x); ?net ~= bot |]
      ==> ?b <= Im3 ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 3, template_var 2)))),
    ("Quaternions.Re_tendsto_lowerbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. ?b <= quat.Re (?f x); ?net ~= bot |]
      ==> ?b <= quat.Re ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 3, template_var 2)))),
    ("Quaternions.Im1_tendsto_upperbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. Im1 (?f x) <= ?b; ?net ~= bot |]
      ==> Im1 ?l <= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_var 0))),
    ("Quaternions.Im2_tendsto_upperbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. Im2 (?f x) <= ?b; ?net ~= bot |]
      ==> Im2 ?l <= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_var 0))),
    ("Quaternions.Im3_tendsto_upperbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. Im3 (?f x) <= ?b; ?net ~= bot |]
      ==> Im3 ?l <= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_var 0))),
    ("Quaternions.Re_tendsto_upperbound",
     "[| (?f \<longlongrightarrow> ?l) ?net;
         \<forall>\<^sub>F x in ?net. quat.Re (?f x) <= ?b; ?net ~= bot |]
      ==> quat.Re ?l <= ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 2),
         template_var 0))),
    ("Quaternions.quat_eqI",
     "[| quat.Re ?x = quat.Re ?y; Im1 ?x = Im1 ?y; Im2 ?x = Im2 ?y;
         Im3 ?x = Im3 ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Quaternions.quat_eq_0_iff",
     "(?q = 0) =
      ((quat.Re ?q)\<^sup>2 + (Im1 ?q)\<^sup>2 + (Im2 ?q)\<^sup>2 +
       (Im3 ?q)\<^sup>2 =
       0)",
     template_bimplication
      (template_equation (template_var 0, template_hole 11),
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 0)),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_hole 4)))),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 3, template_var 0)),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 2, template_var 0)),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))))),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)))),
         template_hole 0)))]
