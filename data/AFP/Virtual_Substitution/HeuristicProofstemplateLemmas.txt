   [("HeuristicProofs.brownHueristic_less_than",
     "brownsHeuristic ?n ?L ?F = ?var ==> ?var <= ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 0, template_var 3))),
    ("HeuristicProofs.sortedListMember",
     "sorted_list_of_fset ?b = ?var # ?list ==> ?var |\<in>| ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 2)
           ))),
    ("HeuristicProofs.rangeHeuristic",
     "heuristicPicker ?n ?L ?F = Some (?var, ?step) ==> ?var <= ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_inequation (less_equals, template_var 1, template_var 4))),
    ("HeuristicProofs.pickedOneOfThem",
     "heuristicPicker ?n ?L ?F = Some (?var, ?step) ==>
      ?step = qe_eq_repeat | ?step = gen_qe | ?step = luckyFind'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 1)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 0)))
           ))),
    ("HeuristicProofs.gen_qe_eval'",
     "(EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval (gen_qe ?var ?L ?F) (xs @ ?\<Gamma>))",
     template_equation
      (template_app (template_hole 12, t_empty),
       template_app (template_hole 12, t_empty))),
    ("HeuristicProofs.luckiestFind_eval'",
     "(EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval (luckiestFind ?var ?L ?F) (xs @ ?\<Gamma>))",
     template_equation
      (template_app (template_hole 12, t_empty),
       template_app (template_hole 12, t_empty))),
    ("HeuristicProofs.luckyFind_eval'",
     "(EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval (luckyFind' ?var ?L ?F) (xs @ ?\<Gamma>))",
     template_equation
      (template_app (template_hole 12, t_empty),
       template_app (template_hole 12, t_empty))),
    ("HeuristicProofs.qe_eq_repeat_eval'",
     "(EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval (qe_eq_repeat ?var ?L ?F) (xs @ ?\<Gamma>))",
     template_equation
      (template_app (template_hole 12, t_empty),
       template_app (template_hole 12, t_empty))),
    ("HeuristicProofs.superPicker_eval",
     "?amount <= ?var + 1 ==>
      (EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval (superPicker ?amount ?var ?L ?F) (xs @ ?\<Gamma>))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 13, template_var 3),
            template_hole 12))],
       template_equation
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 10, t_empty)))),
    ("HeuristicProofs.gen_qe_eval_augment",
     "?amount <= ?var + 1 ==>
      (EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval (step_augment gen_qe IdentityHeuristic ?amount ?var ?L ?F)
           (xs @ ?\<Gamma>))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 15, template_var 3),
            template_hole 14))],
       template_equation
        (template_app (template_hole 12, t_empty),
         template_app (template_hole 12, t_empty)))),
    ("HeuristicProofs.luckyFind_eval_augment",
     "?amount <= ?var + 1 ==>
      (EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval
           (step_augment luckyFind' IdentityHeuristic ?amount ?var ?L ?F)
           (xs @ ?\<Gamma>))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 15, template_var 3),
            template_hole 14))],
       template_equation
        (template_app (template_hole 12, t_empty),
         template_app (template_hole 12, t_empty)))),
    ("HeuristicProofs.qe_eq_repeat_eval_augment",
     "?amount <= ?var + 1 ==>
      (EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 &
          eval
           (step_augment qe_eq_repeat IdentityHeuristic ?amount ?var ?L ?F)
           (xs @ ?\<Gamma>))",
     template_implication
      ([template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 15, template_var 3),
            template_hole 14))],
       template_equation
        (template_app (template_hole 12, t_empty),
         template_app (template_hole 12, t_empty)))),
    ("HeuristicProofs.the_real_step_augment",
     "(!!xs var L F \<Gamma>.
          length xs = var ==>
          (EX x. eval (list_conj (map fm.Atom L @ F)) (xs @ x # \<Gamma>)) =
          (EX x. eval (?step var L F) (xs @ x # \<Gamma>))) ==>
      (EX xs.
          length xs = ?amount &
          eval
           (list_disj
             (map (%(L, F, n). ExN n (list_conj (map fm.Atom L @ F))) ?F))
           (xs @ ?\<Gamma>)) =
      eval (the_real_step_augment ?step ?amount ?F) ?\<Gamma>",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty))],
       template_equation
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)))),
    ("HeuristicProofs.step_converter",
     "(!!xs var L F \<Gamma>.
          length xs = var ==>
          (EX x. eval (list_conj (map fm.Atom L @ F)) (xs @ x # \<Gamma>)) =
          (EX x. eval (?step var L F) (xs @ x # \<Gamma>))) ==>
      (EX xs.
          length xs = ?var + 1 &
          eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
      (EX xs.
          length xs = ?var + 1 & eval (?step ?var ?L ?F) (xs @ ?\<Gamma>))",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 3, t_empty)))),
    ("HeuristicProofs.step_augmenter_eval",
     "[| !!xs var L F \<Gamma>.
            length xs = var ==>
            (EX x. eval (list_conj (map fm.Atom L @ F))
                    (xs @ x # \<Gamma>)) =
            (EX x. eval (?step var L F) (xs @ x # \<Gamma>));
         !!n var L F. ?heuristic n L F = var ==> var <= n;
         ?amount <= ?var + 1 |]
      ==> (EX xs.
              length xs = ?var + 1 &
              eval (list_conj (map fm.Atom ?L @ ?F)) (xs @ ?\<Gamma>)) =
          (EX xs.
              length xs = ?var + 1 &
              eval (step_augment ?step ?heuristic ?amount ?var ?L ?F)
               (xs @ ?\<Gamma>))",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app (template_hole 4, template_var 3),
            template_hole 3))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty))))]
