   [("NegInfinityUni.infinity_evalUni",
     "(EX x. ALL y<x. aEvalUni ?At y) =
      evalUni (substNegInfinityUni ?At) ?x",
     template_equation
      (template_app (template_hole 6, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("NegInfinityUni.infinity_evalUni_EqUni",
     "(EX x. ALL y<x. aEvalUni (EqUni ?p) y) =
      evalUni (substNegInfinityUni (EqUni ?p)) ?x",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("NegInfinityUni.infinity_evalUni_LeqUni",
     "(EX x. ALL y<x. aEvalUni (LeqUni ?p) y) =
      evalUni (substNegInfinityUni (LeqUni ?p)) ?x",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("NegInfinityUni.infinity_evalUni_LessUni",
     "(EX x. ALL y<x. aEvalUni (LessUni ?p) y) =
      evalUni (substNegInfinityUni (LessUni ?p)) ?x",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("NegInfinityUni.infinity_evalUni_NeqUni",
     "(EX x. ALL y<x. aEvalUni (NeqUni ?p) y) =
      evalUni (substNegInfinityUni (NeqUni ?p)) ?x",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1))),
         template_var 0))),
    ("NegInfinityUni.convert_substNegInfinity",
     "[| convert_atom ?var ?A (?xs' @ ?x # ?xs) = Some ?A';
         length ?xs' = ?var |]
      ==> eval (substNegInfinity ?var ?A) (?xs' @ ?x # ?xs) =
          evalUni (substNegInfinityUni ?A') ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))),
          template_app (template_hole 7, template_var 0)),
        template_equation
         (template_app (template_hole 5, template_var 3), template_var 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 9, template_var 3),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("NegInfinityUni.convert_alternateNegInfinity",
     "[| convert_poly ?var ?p (?xs' @ ?x # ?xs) = Some ?X;
         length ?xs' = ?var |]
      ==> eval (alternateNegInfinity ?p ?var) (?xs' @ ?x # ?xs) =
          evalUni (alternateNegInfinity' ?X) ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))),
          template_app (template_hole 7, template_var 0)),
        template_equation
         (template_app (template_hole 5, template_var 3), template_var 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 5)),
           template_app
            (template_app (template_hole 9, template_var 3),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("NegInfinityUni.convert_allZero",
     "[| convert_poly ?var ?p (?xs' @ ?x # ?xs) = Some ?p';
         length ?xs' = ?var |]
      ==> eval (allZero ?p ?var) (?xs' @ ?x # ?xs) =
          evalUni (allZero' ?p') ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))),
          template_app (template_hole 7, template_var 0)),
        template_equation
         (template_app (template_hole 5, template_var 3), template_var 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 5)),
           template_app
            (template_app (template_hole 9, template_var 3),
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("NegInfinityUni.same_eval''",
     "[| getPoly ?At = (?a, ?b, ?c); ?a ~= 0 | ?b ~= 0 | ?c ~= 0 |]
      ==> EX x. ALL y<x. aEvalUni ?At y = aEvalUni ?At x",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app
           (template_app (template_hole 11, template_var 2),
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_hole 6))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_hole 6))),
                template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_hole 6))))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("NegInfinityUni.inequality_case_geq",
     "(EX x. ALL y<x. 0 < ?a * y\<^sup>2 + ?b * y + ?c) =
      (0 < ?a | ?a = 0 & (?b < 0 | ?b = 0 & 0 < ?c))",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_hole 9)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_hole 9)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_hole 9)),
                   template_app
                    (template_app (template_hole 10, template_hole 9),
                     template_var 0)))))
           ))),
    ("NegInfinityUni.inequality_case",
     "(EX x. ALL y<x. ?a * y\<^sup>2 + ?b * y + ?c < 0) =
      (?a < 0 | ?a = 0 & (0 < ?b | ?b = 0 & ?c < 0))",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 10, template_hole 3),
                     template_var 1)),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_hole 3)))))
           ))),
    ("NegInfinityUni.change_eval_eq",
     "aEvalUni (EqUni (?a, ?b, ?c)) ?x ~= aEvalUni (EqUni (?a, ?b, ?c)) ?y &
      ?x < ?y ==>
      EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 11, template_var 3),
                                template_var 2)))),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 4),
                            template_app
                             (template_app
                               (template_hole 11, template_var 3),
                              template_var 2)))),
                      template_var 0)))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("NegInfinityUni.change_eval_leq",
     "aEvalUni (LeqUni (?a, ?b, ?c)) ?x ~=
      aEvalUni (LeqUni (?a, ?b, ?c)) ?y &
      ?x < ?y ==>
      EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 11, template_var 3),
                                template_var 2)))),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 4),
                            template_app
                             (template_app
                               (template_hole 11, template_var 3),
                              template_var 2)))),
                      template_var 0)))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("NegInfinityUni.change_eval_lt",
     "aEvalUni (LessUni (?a, ?b, ?c)) ?x ~=
      aEvalUni (LessUni (?a, ?b, ?c)) ?y &
      ?x < ?y ==>
      EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 11, template_var 3),
                                template_var 2)))),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 4),
                            template_app
                             (template_app
                               (template_hole 11, template_var 3),
                              template_var 2)))),
                      template_var 0)))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("NegInfinityUni.change_eval_neq",
     "aEvalUni (NeqUni (?a, ?b, ?c)) ?x ~=
      aEvalUni (NeqUni (?a, ?b, ?c)) ?y &
      ?x < ?y ==>
      EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app
                         (template_hole 14,
                          template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12, template_var 4),
                              template_app
                               (template_app
                                 (template_hole 11, template_var 3),
                                template_var 2)))),
                        template_var 1)),
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 12, template_var 4),
                            template_app
                             (template_app
                               (template_hole 11, template_var 3),
                              template_var 2)))),
                      template_var 0)))),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("NegInfinityUni.no_change_eval_lt",
     "[| ?x < ?y;
         ~ (EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0) |]
      ==> aEvalUni (LessUni (?a, ?b, ?c)) ?x =
          aEvalUni (LessUni (?a, ?b, ?c)) ?y",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_negation
         (template_predicate (template_app (template_hole 15, t_empty)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_var 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)))),
           template_var 3)))),
    ("NegInfinityUni.change_eval",
     "[| ?x < ?y; aEvalUni ?At ?x ~= aEvalUni ?At ?y;
         getPoly ?At = (?a, ?b, ?c) |]
      ==> EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 15, template_var 3),
                template_var 5),
              template_app
               (template_app (template_hole 15, template_var 3),
                template_var 4))
            ),
        template_equation
         (template_app (template_hole 13, template_var 3),
          template_app
           (template_app (template_hole 12, template_var 2),
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("NegInfinityUni.no_change_eval",
     "[| getPoly ?At = (?a, ?b, ?c); ?x < ?y;
         ~ (EX w>=?x. w <= ?y & ?a * w\<^sup>2 + ?b * w + ?c = 0) |]
      ==> aEvalUni ?At ?x = aEvalUni ?At ?y & ?x < ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 17, template_var 5),
          template_app
           (template_app (template_hole 16, template_var 4),
            template_app
             (template_app (template_hole 15, template_var 3),
              template_var 2))),
        template_inequation (less_than, template_var 1, template_var 0),
        template_negation
         (template_predicate (template_app (template_hole 12, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0))),
             template_app
              (template_app (template_hole 14, template_var 1),
               template_var 0))
           )))]
