   [("MPolyExtension.finite_monomials", "finite (monomials ?m)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("MPolyExtension.monom_zero", "monom ?m (0::?'a) = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("MPolyExtension.coeff_monom", "coeff (monom ?m ?a) ?m = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1),
       template_var 0)),
    ("MPolyExtension.plus_monom_zero", "?p + monom ?m (0::?'a) = ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 1)),
    ("MPolyExtension.vars_code", "vars ?p = \<Union> (keys ` monomials ?p)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("MPolyExtension.insertionNegative",
     "insertion ?f ?p = - insertion ?f (- ?p)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("MPolyExtension.remove_key_code",
     "remove_key ?v (Pm_fmap ?fm) = Pm_fmap (fmdrop ?v ?fm)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("MPolyExtension.Poly_Mapping_update_code",
     "Poly_Mapping.update ?a ?b (Pm_fmap ?fm) = Pm_fmap (fmupd ?a ?b ?fm)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("MPolyExtension.coeff_not_in_monomials",
     "?x ~: monomials ?m ==> coeff ?m ?x = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 0))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("MPolyExtension.coeff_add",
     "coeff (?p + ?q) ?m = coeff ?p ?m + coeff ?q ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("MPolyExtension.monomials_monom",
     "monomials (monom ?m ?a) = (if ?a = (0::?'a) then {} else {?m})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 1))
           ))),
    ("MPolyExtension.insertion_monom",
     "insertion ?i (monom ?m ?a) =
      ?a * (PROD k:keys ?m. ?i k ^ lookup ?m k)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("MPolyExtension.Sum_any_lookup_times_eq",
     "(SUM k. lookup ?x k * ?f k) = (SUM k:keys ?x. lookup ?x k * ?f k)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("MPolyExtension.Prod_any_power_lookup_eq",
     "(PROD k. ?f k ^ lookup ?x k) = (PROD k:keys ?x. ?f k ^ lookup ?x k)",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("MPolyExtension.monomials_add_disjoint",
     "monomials ?a Int monomials ?b = {} ==>
      monomials (?a + ?b) = monomials ?a Un monomials ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("MPolyExtension.extract_var_code",
     "extract_var ?p ?v =
      (SUM m:monomials ?p.
          monom (remove_key ?v m)
           (monom (monomial (lookup m ?v) ?v) (coeff ?p m)))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("MPolyExtension.insertion_code",
     "insertion ?i ?mp =
      (SUM m:monomials ?mp.
          coeff ?mp m * (PROD k:keys m. ?i k ^ lookup m k))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("MPolyExtension.mpoly_induct",
     "[| !!m a. ?P (monom m a);
         !!p1 p2 m a.
            [| ?P p1; ?P p2; p2 = monom m a; m ~: monomials p1;
               a ~= (0::?'a) |]
            ==> ?P (p1 + p2) |]
      ==> ?P ?p",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (template_app (template_var 1, template_var 0))))]
