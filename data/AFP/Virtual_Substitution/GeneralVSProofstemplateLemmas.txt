   [("GeneralVSProofs.freeIn_elimVar",
     "freeIn ?var (elimVar ?var ?L ?F ?A)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("GeneralVSProofs.eval_generalVS''",
     "(EX x. evalUni (list_conj_Uni (map AtomUni ?L)) x) =
      evalUni (generalVS_DNF ?L) ?x",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("GeneralVSProofs.linear_subst_map",
     "evalUni (map_atomUni (linearSubstitutionUni ?b ?c) ?F) ?x =
      evalUni ?F (- ?c / ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 3)))),
    ("GeneralVSProofs.all_degree_2_convert",
     "all_degree_2 ?var ?L ==>
      EX L'. convert_atom_list ?var ?L ?xs = Some L'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("GeneralVSProofs.forallx_substNegInf",
     "(~ evalUni (map_atomUni substNegInfinityUni ?F) ?x) =
      (ALL x. ~ evalUni (map_atomUni substNegInfinityUni ?F) x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 0, t_empty))),
    ("GeneralVSProofs.freeInDisj",
     "freeIn ?var
       (list_disj
         (list_conj (map (substNegInfinity ?var) ?L) #
          map (elimVar ?var ?L []) ?L))",
     template_predicate
      (
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1)),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0),
                     template_hole 0)),
                 template_var 0))))
         )),
    ("GeneralVSProofs.gen_qe_eval'",
     "[| all_degree_2 ?var ?L; length ?xs' = ?var |]
      ==> freeIn ?var (gen_qe ?var ?L [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 3, template_var 0), template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_hole 0))
           ))),
    ("GeneralVSProofs.quadratic_subst_map",
     "evalUni (map_atomUni (quadraticSubUni ?a ?b ?c ?d) ?F) ?x =
      evalUni ?F ((?a + ?b * sqrt ?c) / ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 5),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app (template_hole 0, template_var 3)))),
           template_var 2)))),
    ("GeneralVSProofs.convert_atom_list_change",
     "length ?xs' = ?var ==>
      convert_atom_list ?var ?L (?xs' @ ?x # ?\<Gamma>) =
      convert_atom_list ?var ?L (?xs' @ ?x' # ?\<Gamma>)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 5), template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("GeneralVSProofs.set_split",
     "separateAtoms ?L = (?eq, ?les, ?leq, ?neq) ==>
      set ?L =
      set (map EqUni ?eq @
           map LessUni ?les @ map LeqUni ?leq @ map NeqUni ?neq)",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 4),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 0))))],
       template_equation
        (template_app (template_hole 6, template_var 4),
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 2),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 1),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 4, template_hole 0),
                   template_var 0)))))))),
    ("GeneralVSProofs.gen_qe_eval",
     "length ?xs = ?var ==>
      (EX x. eval (list_conj (map fm.Atom ?L @ ?F)) (?xs @ x # ?\<Gamma>)) =
      (EX x. eval (gen_qe ?var ?L ?F) (?xs @ x # ?\<Gamma>))",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 4), template_var 3)],
       template_equation
        (template_app (template_hole 8, t_empty),
         template_app (template_hole 8, t_empty)))),
    ("GeneralVSProofs.convert_list",
     "[| convert_atom_list ?var ?L (?xs' @ ?x # ?xs) = Some ?L';
         ?l : set ?L |]
      ==> EX l':set ?L'. convert_atom ?var ?l (?xs' @ ?x # ?xs) = Some l'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 6),
              template_var 5),
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))),
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             t_empty)
           ))),
    ("GeneralVSProofs.convert_list2",
     "[| convert_atom_list ?var ?L (?xs' @ ?x # ?xs) = Some ?L';
         ?l' : set ?L' |]
      ==> EX l:set ?L. convert_atom ?var l (?xs' @ ?x # ?xs) = Some ?l'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 6),
              template_var 5),
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2))),
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 5)),
             t_empty)
           ))),
    ("GeneralVSProofs.gen_qe_eval'",
     "[| all_degree_2 ?var ?L; length ?xs' = ?var |]
      ==> (EX x. eval (list_conj (map fm.Atom ?L)) (?xs' @ x # ?\<Gamma>)) =
          (ALL x. eval (gen_qe ?var ?L []) (?xs' @ x # ?\<Gamma>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 11, template_var 1), template_var 3)],
       template_equation
        (template_app (template_hole 9, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("GeneralVSProofs.split_elimvar",
     "separateAtoms ?L = (?eq, ?les, ?leq, ?neq) ==>
      evalUni (elimVarUni_atom ?L ?At) ?x =
      evalUni
       (elimVarUni_atom
         (map EqUni ?eq @
          map LessUni ?les @ map LeqUni ?leq @ map NeqUni ?neq)
         ?At)
       ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 6),
          template_app
           (template_app (template_hole 11, template_var 5),
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2))))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 6),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 5)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 2),
                         template_var 4)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_hole 1),
                           template_var 3)),
                       template_app
                        (template_app (template_hole 4, template_hole 0),
                         template_var 2))))),
               template_var 1)),
           template_var 0)))),
    ("GeneralVSProofs.eval_convert",
     "[| convert_atom_list ?var ?L (?xs' @ ?x # ?xs) = Some ?L';
         length ?xs' = ?var |]
      ==> (ALL f:set ?L. aEval f (?xs' @ ?x # ?xs)) =
          (ALL f:set ?L'. aEvalUni f ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 12, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1))),
          template_app (template_hole 9, template_var 0)),
        template_equation
         (template_app (template_hole 7, template_var 3), template_var 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 4)),
           t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           t_empty)))),
    ("GeneralVSProofs.set_split'",
     "separateAtoms ?L = (?eq, ?les, ?leq, ?neq) ==>
      set (map ?P ?L) =
      set (map (?P o EqUni) ?eq @
           map (?P o LessUni) ?les @
           map (?P o LeqUni) ?leq @ map (?P o NeqUni) ?neq)",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 5),
          template_app
           (template_app (template_hole 12, template_var 4),
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1))))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_var 5)),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_hole 2)),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_hole 1)),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_hole 0)),
                   template_var 1)))))))),
    ("GeneralVSProofs.negInf_convert",
     "[| convert_atom_list ?var ?L (?xs' @ ?x # ?xs) = Some ?L';
         length ?xs' = ?var |]
      ==> (ALL f:set ?L. eval (substNegInfinity ?var f) (?xs' @ ?x # ?xs)) =
          (ALL f:set ?L'. evalUni (substNegInfinityUni f) ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1))),
          template_app (template_hole 11, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 3), template_var 5)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 4)),
           t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           t_empty)))),
    ("GeneralVSProofs.gen_qe_eval''",
     "[| all_degree_2 ?var ?L; length ?xs' = ?var |]
      ==> (EX x. eval (list_conj (map fm.Atom ?L)) (?xs' @ x # ?\<Gamma>)) =
          (ALL x.
              eval
               (list_disj
                 (list_conj (map (substNegInfinity ?var) ?L) #
                  map (elimVar ?var ?L []) ?L))
               (?xs' @ x # ?\<Gamma>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 14, template_var 1), template_var 3)],
       template_equation
        (template_app (template_hole 12, t_empty),
         template_app (template_hole 5, t_empty)))),
    ("GeneralVSProofs.elimVar_atom_single",
     "[| convert_atom ?var ?A (?xs' @ ?x # ?xs) = Some ?A';
         convert_atom_list ?var ?L2.0 (?xs' @ ?x # ?xs) = Some ?L2';
         length ?xs' = ?var |]
      ==> eval (elimVar ?var ?L2.0 [] ?A) (?xs' @ ?x # ?xs) =
          evalUni (elimVarUni_atom ?L2' ?A') ?x",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 7),
              template_var 6),
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))),
          template_app (template_hole 11, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 7),
              template_var 1),
            template_app
             (template_app (template_hole 13, template_var 5),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3))),
          template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 6, template_var 5), template_var 7)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 7),
                   template_var 1),
                 template_hole 2),
               template_var 6)),
           template_app
            (template_app (template_hole 13, template_var 5),
             template_app
              (template_app (template_hole 12, template_var 4),
               template_var 3))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 4)))),
    ("GeneralVSProofs.eq_inf",
     "(ALL (a, b, c):set ?a. EX x. ALL y<x. a * y\<^sup>2 + b * y + c = 0) =
      (ALL (a, b, c):set ?a. a = 0 & b = 0 & c = 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 0)),
         template_app (template_hole 14, t_empty)),
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 0)),
         template_app (template_hole 14, t_empty)))),
    ("GeneralVSProofs.elimVar_atom_convert",
     "[| convert_atom_list ?var ?L (?xs' @ ?x # ?xs) = Some ?L';
         convert_atom_list ?var ?L2.0 (?xs' @ ?x # ?xs) = Some ?L2';
         length ?xs' = ?var |]
      ==> (EX f:set ?L. eval (elimVar ?var ?L2.0 [] f) (?xs' @ ?x # ?xs)) =
          (EX f:set ?L'. evalUni (elimVarUni_atom ?L2' f) ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 15, template_var 7),
              template_var 6),
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3))),
          template_app (template_hole 12, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 15, template_var 7),
              template_var 1),
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3))),
          template_app (template_hole 12, template_var 0)),
        template_equation
         (template_app (template_hole 10, template_var 5), template_var 7)],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 6)),
           t_empty),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2)),
           t_empty)))),
    ("GeneralVSProofs.split_elimVar",
     "separateAtoms ?L = (?eq, ?les, ?leq, ?neq) ==>
      (EX l:set ?L. evalUni (elimVarUni_atom ?L' l) ?x) =
      ((EX (a', b', c'):set ?eq.
           evalUni (elimVarUni_atom ?L' (EqUni (a', b', c'))) ?x) |
       (EX (a', b', c'):set ?les.
           evalUni (elimVarUni_atom ?L' (LessUni (a', b', c'))) ?x) |
       (EX (a', b', c'):set ?leq.
           evalUni (elimVarUni_atom ?L' (LeqUni (a', b', c'))) ?x) |
       (EX (a', b', c'):set ?neq.
           evalUni (elimVarUni_atom ?L' (NeqUni (a', b', c'))) ?x))",
     template_implication
      ([template_equation
         (template_app (template_hole 19, template_var 6),
          template_app
           (template_app (template_hole 18, template_var 5),
            template_app
             (template_app (template_hole 17, template_var 4),
              template_app
               (template_app (template_hole 16, template_var 3),
                template_var 2))))],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app (template_hole 13, template_var 6)),
           t_empty),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 5)),
               template_app (template_hole 7, t_empty))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 4)),
                 template_app (template_hole 7, t_empty))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_var 3)),
                   template_app (template_hole 7, t_empty))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 2)),
                 template_app (template_hole 7, t_empty)))))))),
    ("GeneralVSProofs.separate_aEval",
     "separateAtoms ?L = (?a, ?b, ?c, ?d) ==>
      (ALL l:set ?L. aEvalUni l ?x) =
      ((ALL (a, b, c):set ?a. a * ?x\<^sup>2 + b * ?x + c = 0) &
       (ALL (a, b, c):set ?b. a * ?x\<^sup>2 + b * ?x + c < 0) &
       (ALL (a, b, c):set ?c. a * ?x\<^sup>2 + b * ?x + c <= 0) &
       (ALL (a, b, c):set ?d. a * ?x\<^sup>2 + b * ?x + c ~= 0))",
     template_implication
      ([template_equation
         (template_app (template_hole 23, template_var 5),
          template_app
           (template_app (template_hole 22, template_var 4),
            template_app
             (template_app (template_hole 21, template_var 3),
              template_app
               (template_app (template_hole 20, template_var 2),
                template_var 1))))],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app (template_hole 17, template_var 5)),
           t_empty),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 14,
                 template_app (template_hole 13, template_var 4)),
               template_app (template_hole 12, t_empty))),
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 3)),
                 template_app (template_hole 12, t_empty))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app (template_hole 13, template_var 2)),
                   template_app (template_hole 12, t_empty))),
               template_app
                (template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 1)),
                 template_app (template_hole 12, t_empty)))))))),
    ("GeneralVSProofs.splitAtoms_negInfinity",
     "separateAtoms ?L = (?a, ?b, ?c, ?d) ==>
      (ALL l:set ?L. evalUni (substNegInfinityUni l) ?x) =
      ((ALL (a, b, c):set ?a.
           EX x. ALL y<x. a * y\<^sup>2 + b * y + c = 0) &
       (ALL (a, b, c):set ?b.
           EX x. ALL y<x. a * y\<^sup>2 + b * y + c < 0) &
       (ALL (a, b, c):set ?c.
           EX x. ALL y<x. a * y\<^sup>2 + b * y + c <= 0) &
       (ALL (a, b, c):set ?d.
           EX x. ALL y<x. a * y\<^sup>2 + b * y + c ~= 0))",
     template_implication
      ([template_equation
         (template_app (template_hole 27, template_var 5),
          template_app
           (template_app (template_hole 26, template_var 4),
            template_app
             (template_app (template_hole 25, template_var 3),
              template_app
               (template_app (template_hole 24, template_var 2),
                template_var 1))))],
       template_equation
        (template_app
          (template_app
            (template_hole 22,
             template_app (template_hole 21, template_var 5)),
           t_empty),
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_hole 17,
                 template_app (template_hole 16, template_var 4)),
               template_app (template_hole 15, t_empty))),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 17,
                   template_app (template_hole 16, template_var 3)),
                 template_app (template_hole 15, t_empty))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app (template_hole 16, template_var 2)),
                   template_app (template_hole 15, t_empty))),
               template_app
                (template_app
                  (template_hole 17,
                   template_app (template_hole 16, template_var 1)),
                 template_app (template_hole 15, t_empty)))))))),
    ("GeneralVSProofs.less",
     "((?a' = 0 & ?b' ~= 0) &
       (ALL (d, e, f):set ?a.
           evalUni (substInfinitesimalLinearUni ?b' ?c' (EqUni (d, e, f)))
            ?x) &
       (ALL (d, e, f):set ?b.
           evalUni (substInfinitesimalLinearUni ?b' ?c' (LessUni (d, e, f)))
            ?x) &
       (ALL (d, e, f):set ?c.
           evalUni (substInfinitesimalLinearUni ?b' ?c' (LeqUni (d, e, f)))
            ?x) &
       (ALL (d, e, f):set ?d.
           evalUni (substInfinitesimalLinearUni ?b' ?c' (NeqUni (d, e, f)))
            ?x) |
       ?a' ~= 0 &
       - ?b'\<^sup>2 + 4 * ?a' * ?c' <= 0 &
       ((ALL (d, e, f):set ?a.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') 1
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (EqUni (d, e, f)))
             ?x) &
        (ALL (d, e, f):set ?b.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') 1
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (LessUni (d, e, f)))
             ?x) &
        (ALL (d, e, f):set ?c.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') 1
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (LeqUni (d, e, f)))
             ?x) &
        (ALL (d, e, f):set ?d.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') 1
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (NeqUni (d, e, f)))
             ?x) |
        (ALL (d, e, f):set ?a.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') (- 1)
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (EqUni (d, e, f)))
             ?x) &
        (ALL (d, e, f):set ?b.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') (- 1)
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (LessUni (d, e, f)))
             ?x) &
        (ALL (d, e, f):set ?c.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') (- 1)
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (LeqUni (d, e, f)))
             ?x) &
        (ALL (d, e, f):set ?d.
            evalUni
             (substInfinitesimalQuadraticUni (- ?b') (- 1)
               (?b'\<^sup>2 - 4 * ?a' * ?c') (2 * ?a') (NeqUni (d, e, f)))
             ?x))) =
      ((?a' = 0 & ?b' ~= 0) &
       (ALL (d, e, f):set ?a.
           EX y'>- ?c' / ?b'.
              ALL x:{- ?c' / ?b'<..y'}. aEvalUni (EqUni (d, e, f)) x) &
       (ALL (d, e, f):set ?b.
           EX y'>- ?c' / ?b'.
              ALL x:{- ?c' / ?b'<..y'}. aEvalUni (LessUni (d, e, f)) x) &
       (ALL (d, e, f):set ?c.
           EX y'>- ?c' / ?b'.
              ALL x:{- ?c' / ?b'<..y'}. aEvalUni (LeqUni (d, e, f)) x) &
       (ALL (d, e, f):set ?d.
           EX y'>- ?c' / ?b'.
              ALL x:{- ?c' / ?b'<..y'}. aEvalUni (NeqUni (d, e, f)) x) |
       ?a' ~= 0 &
       - ?b'\<^sup>2 + 4 * ?a' * ?c' <= 0 &
       ((ALL (d, e, f):set ?a.
            EX y'>(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (EqUni (d, e, f)) x) &
        (ALL (d, e, f):set ?b.
            EX y'>(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (LessUni (d, e, f)) x) &
        (ALL (d, e, f):set ?c.
            EX y'>(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (LeqUni (d, e, f)) x) &
        (ALL (d, e, f):set ?d.
            EX y'>(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (NeqUni (d, e, f)) x) |
        (ALL (d, e, f):set ?a.
            EX y'>(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (EqUni (d, e, f)) x) &
        (ALL (d, e, f):set ?b.
            EX y'>(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (LessUni (d, e, f)) x) &
        (ALL (d, e, f):set ?c.
            EX y'>(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (LeqUni (d, e, f)) x) &
        (ALL (d, e, f):set ?d.
            EX y'>(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                  (2 * ?a').
               ALL x:{(- ?b' + - 1 * sqrt (?b'\<^sup>2 - 4 * ?a' * ?c')) /
                      (2 * ?a')<..y'}.
                  aEvalUni (NeqUni (d, e, f)) x)))",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 35,
               template_app
                (template_app
                  (template_hole 34,
                   template_app
                    (template_app
                      (template_hole 34,
                       template_app
                        (template_app (template_hole 33, template_var 7),
                         template_hole 32)),
                     template_app
                      (template_hole 31,
                       template_app
                        (template_app (template_hole 33, template_var 6),
                         template_hole 32)))),
                 template_app
                  (template_app
                    (template_hole 34,
                     template_app
                      (template_app
                        (template_hole 30,
                         template_app (template_hole 29, template_var 5)),
                       template_app (template_hole 28, t_empty))),
                   template_app
                    (template_app
                      (template_hole 34,
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app (template_hole 29, template_var 2)),
                         template_app (template_hole 28, t_empty))),
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 1)),
                           template_app (template_hole 28, t_empty))),
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app (template_hole 29, template_var 0)),
                         template_app (template_hole 28, t_empty))))))),
             template_app
              (template_app
                (template_hole 34,
                 template_app
                  (template_hole 31,
                   template_app
                    (template_app (template_hole 33, template_var 7),
                     template_hole 32))),
               template_app
                (template_app
                  (template_hole 34,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15, template_var 6),
                               template_app
                                (template_hole 14,
                                 template_app
                                  (template_hole 13, template_hole 12))))),
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 13,
                                     template_app
(template_hole 13, template_hole 12)))),
                               template_var 7)),
                           template_var 4))),
                     template_hole 32)),
                 template_app
                  (template_app
                    (template_hole 35,
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 5)),
                           template_app (template_hole 28, t_empty))),
                       template_app
                        (template_app
                          (template_hole 34,
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_hole 29, template_var 2)),
                             template_app (template_hole 28, t_empty))),
                         template_app
                          (template_app
                            (template_hole 34,
                             template_app
                              (template_app
                                (template_hole 30,
                                 template_app
                                  (template_hole 29, template_var 1)),
                               template_app (template_hole 28, t_empty))),
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_hole 29, template_var 0)),
                             template_app (template_hole 28, t_empty)))))),
                   template_app
                    (template_app
                      (template_hole 34,
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app (template_hole 29, template_var 5)),
                         template_app (template_hole 28, t_empty))),
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 2)),
                           template_app (template_hole 28, t_empty))),
                       template_app
                        (template_app
                          (template_hole 34,
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_hole 29, template_var 1)),
                             template_app (template_hole 28, t_empty))),
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 0)),
                           template_app (template_hole 28, t_empty)))))))))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 35,
               template_app
                (template_app
                  (template_hole 34,
                   template_app
                    (template_app
                      (template_hole 34,
                       template_app
                        (template_app (template_hole 33, template_var 7),
                         template_hole 32)),
                     template_app
                      (template_hole 31,
                       template_app
                        (template_app (template_hole 33, template_var 6),
                         template_hole 32)))),
                 template_app
                  (template_app
                    (template_hole 34,
                     template_app
                      (template_app
                        (template_hole 30,
                         template_app (template_hole 29, template_var 5)),
                       template_app (template_hole 28, t_empty))),
                   template_app
                    (template_app
                      (template_hole 34,
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app (template_hole 29, template_var 2)),
                         template_app (template_hole 28, t_empty))),
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 1)),
                           template_app (template_hole 28, t_empty))),
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app (template_hole 29, template_var 0)),
                         template_app (template_hole 28, t_empty))))))),
             template_app
              (template_app
                (template_hole 34,
                 template_app
                  (template_hole 31,
                   template_app
                    (template_app (template_hole 33, template_var 7),
                     template_hole 32))),
               template_app
                (template_app
                  (template_hole 34,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15, template_var 6),
                               template_app
                                (template_hole 14,
                                 template_app
                                  (template_hole 13, template_hole 12))))),
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 13,
                                     template_app
(template_hole 13, template_hole 12)))),
                               template_var 7)),
                           template_var 4))),
                     template_hole 32)),
                 template_app
                  (template_app
                    (template_hole 35,
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 5)),
                           template_app (template_hole 28, t_empty))),
                       template_app
                        (template_app
                          (template_hole 34,
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_hole 29, template_var 2)),
                             template_app (template_hole 28, t_empty))),
                         template_app
                          (template_app
                            (template_hole 34,
                             template_app
                              (template_app
                                (template_hole 30,
                                 template_app
                                  (template_hole 29, template_var 1)),
                               template_app (template_hole 28, t_empty))),
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_hole 29, template_var 0)),
                             template_app (template_hole 28, t_empty)))))),
                   template_app
                    (template_app
                      (template_hole 34,
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app (template_hole 29, template_var 5)),
                         template_app (template_hole 28, t_empty))),
                     template_app
                      (template_app
                        (template_hole 34,
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 2)),
                           template_app (template_hole 28, t_empty))),
                       template_app
                        (template_app
                          (template_hole 34,
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_hole 29, template_var 1)),
                             template_app (template_hole 28, t_empty))),
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_hole 29, template_var 0)),
                           template_app (template_hole 28, t_empty)))))))))
           )))]
