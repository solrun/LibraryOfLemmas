   [("GaleStewartGames.induced_play_infinite",
     "~ lfinite (strategy_progression ?\<sigma> ?p)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("GaleStewartGames.length_plays_from_strategy",
     "llength (strategy_progression ?\<sigma> ?p) = \<infinity>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("GaleStewartGames.length_ltl_plays_from_strategy",
     "llength (ltl (strategy_progression ?\<sigma> ?p)) = \<infinity>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_hole 0)),
    ("GaleStewartGames.plays_from_strategy_lengths",
     "length (strategy_progression ?\<sigma> ?p $ ?i) = ?i",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_var 0)),
    ("GaleStewartGames.infplays_augment_one",
     "strategy_progression ?\<sigma> (augment_list ?\<sigma> ?p) =
      strategy_progression ?\<sigma> ?p",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_hole 0))),
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0))),
    ("GaleStewartGames.plays_from_strategy_chain_Suc",
     "prefix (strategy_progression ?\<sigma> ?p $ ?n)
       (strategy_progression ?\<sigma> ?p $ Suc ?n)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("GaleStewartGames.infplays_augment_many",
     "strategy_progression ?\<sigma> ((augment_list ?\<sigma> ^^ ?n) ?p) =
      strategy_progression ?\<sigma> ?p",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1), t_empty),
           template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 2), template_var 0))),
    ("GaleStewartGames.plays_from_strategy_chain",
     "?n <= ?m ==>
      prefix (strategy_progression ?\<sigma> ?p $ ?n)
       (strategy_progression ?\<sigma> ?p $ ?m)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("GaleStewartGames.plays_from_strategy_remains_const",
     "?n <= ?i ==>
      take ?n (strategy_progression ?\<sigma> ?p $ ?i) =
      strategy_progression ?\<sigma> ?p $ ?n",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 3)))),
    ("GaleStewartGames.infplays_augment_one_joint",
     "even (length ?p) ==>
      strategy_progression
       (joint_strategy ?\<sigma>\<^sub>e ?\<sigma>\<^sub>o)
       (augment_list ?\<sigma>\<^sub>e ?p) =
      strategy_progression
       (joint_strategy ?\<sigma>\<^sub>e ?\<sigma>\<^sub>o) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_hole 7))),
              template_app (template_hole 6, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 2)),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("GaleStewartGames.infplays_augment_one_joint",
     "odd (length ?p) ==>
      strategy_progression
       (joint_strategy ?\<sigma>\<^sub>e ?\<sigma>\<^sub>o)
       (augment_list ?\<sigma>\<^sub>o ?p) =
      strategy_progression
       (joint_strategy ?\<sigma>\<^sub>e ?\<sigma>\<^sub>o) ?p",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_hole 9,
                      template_app (template_hole 8, template_hole 7))),
                  template_app (template_hole 6, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 0, template_var 2)),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("GaleStewartGames.infplays_eq",
     "(!!p'. prefix ?p p' ==>
             augment_list ?s1.0 p' = augment_list ?s2.0 p') ==>
      strategy_progression ?s1.0 ?p = strategy_progression ?s2.0 ?p",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2))))]
