Loading theory "HOL-Computational_Algebra.Fraction_Field" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
Loading theory "HOL-Computational_Algebra.Group_Closure" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
Loading theory "HOL-Library.Cancellation" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Euclidean_Algorithm" via "HOL-Computational_Algebra.Factorial_Ring" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
class ab_group_add = cancel_comm_monoid_add + group_add +
  assumes "ab_left_minus": "!!a. - a + a = (0::'a)"
  assumes "ab_diff_conv_add_uminus": "!!a b. a - b = a + - b"
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Proofs for inductive predicate(s) "group_closurep"
  Proving monotonicity ...
### theory "HOL-Library.Function_Algebras"
### 0.108s elapsed time, 0.469s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series" via "HOL-Computational_Algebra.Polynomial_FPS" via "HOL-Computational_Algebra.Polynomial")
consts
  enumerate :: "'a set => nat => 'a"
instantiation
  fract :: (idom) comm_ring_1
  uminus_fract == uminus :: 'a fract => 'a fract
  one_fract == one_class.one :: 'a fract
  times_fract == times :: 'a fract => 'a fract => 'a fract
  zero_fract == zero_class.zero :: 'a fract
  minus_fract == minus :: 'a fract => 'a fract => 'a fract
  plus_fract == plus :: 'a fract => 'a fract => 'a fract
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
### theory "HOL-Library.Infinite_Set"
### 0.262s elapsed time, 1.030s cpu time, 0.107s GC time
Loading theory "HOL-Library.More_List" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series" via "HOL-Computational_Algebra.Polynomial_FPS" via "HOL-Computational_Algebra.Polynomial")
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.413s elapsed time, 1.663s cpu time, 0.107s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Euclidean_Algorithm" via "HOL-Computational_Algebra.Factorial_Ring")
### theory "HOL-Computational_Algebra.Group_Closure"
### 0.505s elapsed time, 2.019s cpu time, 0.175s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Library.More_List"
### 0.195s elapsed time, 0.753s cpu time, 0.156s GC time
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  fract :: (idom) field
  inverse_fract == inverse :: 'a fract => 'a fract
  divide_fract == divide :: 'a fract => 'a fract => 'a fract
instantiation
  fract :: (linordered_idom) linorder
  less_eq_fract == less_eq :: 'a fract => 'a fract => bool
  less_fract == less :: 'a fract => 'a fract => bool
### theory "HOL-Library.Nat_Bijection"
### 0.503s elapsed time, 1.794s cpu time, 0.593s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs")
instantiation
  fract :: (linordered_idom) linordered_field
  sgn_fract == sgn :: 'a fract => 'a fract
  abs_fract == abs :: 'a fract => 'a fract
### theory "HOL-Library.Set_Algebras"
### 0.442s elapsed time, 1.549s cpu time, 0.504s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fract :: (linordered_idom) distrib_lattice
  inf_fract == inf :: 'a fract => 'a fract => 'a fract
  sup_fract == sup :: 'a fract => 'a fract => 'a fract
### theory "HOL-Computational_Algebra.Fraction_Field"
### 1.075s elapsed time, 4.075s cpu time, 0.767s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs")
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
consts
  cycle :: "'a list => 'a stream"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.875s elapsed time, 3.438s cpu time, 0.408s GC time
### theory "HOL-Library.Stream"
### 0.949s elapsed time, 3.740s cpu time, 0.408s GC time
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "size <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
Found termination order: "size <*mlex*> {}"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
### theory "HOL-Library.Tree"
### 2.100s elapsed time, 6.392s cpu time, 1.340s GC time
Loading theory "Draft.Templates" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.071s elapsed time, 0.167s cpu time, 0.057s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates")
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.538s elapsed time, 1.123s cpu time, 0.105s GC time
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.874s elapsed time, 10.939s cpu time, 3.000s GC time
Loading theory "HOL-Computational_Algebra.Factorial_Ring" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Euclidean_Algorithm")
class normalization_semidom = algebraic_semidom +
  semidom_divide_unit_factor +
  fixes normalize :: "'a => 'a"
  assumes
    "unit_factor_mult_normalize": "!!a. unit_factor a * normalize a = a"
    and "normalize_0": "normalize (0::'a) = (0::'a)"
class semiring_gcd = gcd + normalization_semidom +
  assumes "gcd_dvd1": "!!a b. gcd a b dvd a"
    and "gcd_dvd2": "!!a b. gcd a b dvd b"
    and "gcd_greatest": "!!c a b. [| c dvd a; c dvd b |] ==> c dvd gcd a b"
    and "normalize_gcd": "!!a b. normalize (gcd a b) = gcd a b"
    and "lcm_gcd": "!!a b. lcm a b = normalize (a * b div gcd a b)"
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
class factorial_semiring = normalization_semidom +
  assumes
    "prime_factorization_exists":
      "!!x. x ~= (0::'a) ==>
            EX A. (ALL x. x :# A --> prime_elem x) &
                  normalize (\<Prod>\<^sub># A) = normalize x"
class factorial_semiring_gcd = factorial_semiring + Gcd +
  assumes "gcd_eq_gcd_factorial": "!!a b. gcd a b = gcd_factorial a b"
    and "lcm_eq_lcm_factorial": "!!a b. lcm a b = lcm_factorial a b"
    and "Gcd_eq_Gcd_factorial": "!!A. Gcd A = Gcd_factorial A"
    and "Lcm_eq_Lcm_factorial": "!!A. Lcm A = Lcm_factorial A"
### theory "HOL-Computational_Algebra.Factorial_Ring"
### 4.530s elapsed time, 4.983s cpu time, 0.541s GC time
Loading theory "HOL-Computational_Algebra.Euclidean_Algorithm" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
Loading theory "Polynomial_Interpolation.Missing_Unsorted" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.FPS_Hensel" via "Draft.Puiseux_Polynomial_Library" via "Polynomial_Interpolation.Ring_Hom_Poly" via "Polynomial_Interpolation.Missing_Polynomial")
Loading theory "Polynomial_Interpolation.Ring_Hom" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.FPS_Hensel" via "Draft.Puiseux_Polynomial_Library" via "Polynomial_Interpolation.Ring_Hom_Poly")
Loading theory "HOL-Computational_Algebra.Polynomial" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series" via "HOL-Computational_Algebra.Polynomial_FPS")
### Missing patterns in function definition:
### max_list_non_empty [] = undefined
Found termination order: "length <*mlex*> {}"
locale zero_hom
  fixes hom :: "'a => 'b"
  assumes "zero_hom hom"
locale one_hom
  fixes hom :: "'a => 'b"
  assumes "one_hom hom"
locale times_hom
  fixes hom :: "'a => 'b"
  assumes "times_hom hom"
locale plus_hom
  fixes hom :: "'a => 'b"
  assumes "plus_hom hom"
locale semigroup_mult_hom
  fixes hom :: "'a => 'b"
  assumes "semigroup_mult_hom hom"
locale semigroup_add_hom
  fixes hom :: "'a => 'b"
  assumes "semigroup_add_hom hom"
locale monoid_mult_hom
  fixes hom :: "'a => 'b"
  assumes "monoid_mult_hom hom"
locale monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "monoid_add_hom hom"
locale group_add_hom
  fixes hom :: "'a => 'b"
  assumes "group_add_hom hom"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
locale ab_semigroup_mult_hom
  fixes hom :: "'a => 'b"
  assumes "ab_semigroup_mult_hom hom"
locale ab_semigroup_add_hom
  fixes hom :: "'a => 'b"
  assumes "ab_semigroup_add_hom hom"
locale comm_monoid_mult_hom
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_mult_hom hom"
locale comm_monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_add_hom hom"
locale ab_group_add_hom
  fixes hom :: "'a => 'b"
  assumes "ab_group_add_hom hom"
locale semiring_hom
  fixes hom :: "'a => 'b"
  assumes "semiring_hom hom"
locale ring_hom
  fixes hom :: "'a => 'b"
  assumes "ring_hom hom"
locale comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "comm_semiring_hom hom"
locale comm_ring_hom
  fixes hom :: "'a => 'b"
  assumes "comm_ring_hom hom"
locale idom_hom
  fixes hom :: "'a => 'b"
  assumes "idom_hom hom"
locale idom_divide_hom
  fixes hom :: "'a => 'b"
  assumes "idom_divide_hom hom"
locale field_hom
  fixes hom :: "'a => 'b"
  assumes "field_hom hom"
locale field_char_0_hom
  fixes hom :: "'a => 'b"
  assumes "field_char_0_hom hom"
locale zero_hom_0
  fixes hom :: "'a => 'b"
  assumes "zero_hom_0 hom"
locale one_hom_1
  fixes hom :: "'a => 'b"
  assumes "one_hom_1 hom"
locale monoid_mult_hom_1
  fixes hom :: "'a => 'b"
  assumes "monoid_mult_hom_1 hom"
locale monoid_add_hom_0
  fixes hom :: "'a => 'b"
  assumes "monoid_add_hom_0 hom"
locale comm_monoid_mult_hom_1
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_mult_hom_1 hom"
locale comm_monoid_add_hom_0
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_add_hom_0 hom"
locale injective
  fixes f :: "'a => 'b"
  assumes "injective f"
locale inj_zero_hom
  fixes hom :: "'a => 'b"
  assumes "inj_zero_hom hom"
locale inj_one_hom
  fixes hom :: "'a => 'b"
  assumes "inj_one_hom hom"
locale inj_semigroup_mult_hom
  fixes hom :: "'a => 'b"
  assumes "inj_semigroup_mult_hom hom"
locale inj_semigroup_add_hom
  fixes hom :: "'a => 'b"
  assumes "inj_semigroup_add_hom hom"
locale inj_monoid_mult_hom
  fixes hom :: "'a => 'b"
  assumes "inj_monoid_mult_hom hom"
locale inj_monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "inj_monoid_add_hom hom"
locale inj_comm_monoid_mult_hom
  fixes hom :: "'a => 'b"
  assumes "inj_comm_monoid_mult_hom hom"
locale inj_comm_monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "inj_comm_monoid_add_hom hom"
locale inj_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "inj_semiring_hom hom"
instantiation
  poly :: (zero) zero
  zero_poly == zero_class.zero :: 'a poly
locale inj_comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "inj_comm_semiring_hom hom"
locale inj_group_add_hom
  fixes hom :: "'a => 'b"
  assumes "inj_group_add_hom hom"
locale inj_ab_group_add_hom
  fixes hom :: "'a => 'b"
  assumes "inj_ab_group_add_hom hom"
locale inj_ring_hom
  fixes hom :: "'a => 'b"
  assumes "inj_ring_hom hom"
locale inj_comm_ring_hom
  fixes hom :: "'a => 'b"
  assumes "inj_comm_ring_hom hom"
locale inj_idom_hom
  fixes hom :: "'a => 'b"
  assumes "inj_idom_hom hom"
locale field_hom
  fixes hom :: "'a => 'b"
  assumes "field_hom hom"
consts
  Poly :: "'a list => 'a poly"
locale surjective
  fixes f :: "'a => 'b"
  assumes "surjective f"
### theory "Polynomial_Interpolation.Missing_Unsorted"
### 1.093s elapsed time, 4.430s cpu time, 0.461s GC time
locale bijective
  fixes f :: "'a => 'b"
  assumes "bijective f"
locale bijective
  fixes f :: "'a => 'b"
  assumes "bijective f"
locale monoid_mult_isom
  fixes hom :: "'a => 'b"
  assumes "monoid_mult_isom hom"
instantiation
  poly :: ({zero,equal}) equal
  equal_poly == equal_class.equal :: 'a poly => 'a poly => bool
locale monoid_add_isom
  fixes hom :: "'a => 'b"
  assumes "monoid_add_isom hom"
locale comm_monoid_mult_isom
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_mult_isom hom"
locale comm_monoid_add_isom
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_add_isom hom"
instantiation
  poly :: (comm_monoid_add) comm_monoid_add
  plus_poly == plus :: 'a poly => 'a poly => 'a poly
locale semiring_isom
  fixes hom :: "'a => 'b"
  assumes "semiring_isom hom"
instantiation
  poly :: (cancel_comm_monoid_add) cancel_comm_monoid_add
  minus_poly == minus :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (ab_group_add) ab_group_add
  uminus_poly == uminus :: 'a poly => 'a poly
locale comm_semiring_isom
  fixes hom :: "'a => 'b"
  assumes "comm_semiring_isom hom"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
locale ring_isom
  fixes hom :: "'a => 'b"
  assumes "ring_isom hom"
instantiation
  poly :: (comm_semiring_0) comm_semiring_0
  times_poly == times :: 'a poly => 'a poly => 'a poly
instantiation
  poly :: (comm_semiring_1) comm_semiring_1
  one_poly == one_class.one :: 'a poly
locale comm_ring_isom
  fixes hom :: "'a => 'b"
  assumes "comm_ring_isom hom"
instantiation
  poly :: (linordered_idom) linordered_idom
  sgn_poly == sgn :: 'a poly => 'a poly
  abs_poly == abs :: 'a poly => 'a poly
  less_eq_poly == less_eq :: 'a poly => 'a poly => bool
  less_poly == less :: 'a poly => 'a poly => bool
locale idom_isom
  fixes hom :: "'a => 'b"
  assumes "idom_isom hom"
class euclidean_semiring_gcd = normalization_euclidean_semiring + Gcd +
  assumes "gcd_eucl": "normalization_euclidean_semiring_class.gcd = gcd"
    and "lcm_eucl": "normalization_euclidean_semiring_class.lcm = lcm"
  assumes "Gcd_eucl": "normalization_euclidean_semiring_class.Gcd = Gcd"
    and "Lcm_eucl": "normalization_euclidean_semiring_class.Lcm = Lcm"
locale field_isom
  fixes hom :: "'a => 'b"
  assumes "field_isom hom"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "algebraic_int"
  Proving monotonicity ...
instantiation
  poly :: (idom_divide) idom_divide
  divide_poly == divide :: 'a poly => 'a poly => 'a poly
locale inj_idom_divide_hom
  fixes hom :: "'a => 'b"
  assumes "inj_idom_divide_hom hom"
locale field_hom
  fixes hom :: "'a => 'b"
  assumes "field_hom hom"
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
### theory "Polynomial_Interpolation.Ring_Hom"
### 2.741s elapsed time, 9.526s cpu time, 1.082s GC time
Found termination order:
  "(%p. size (snd (snd (snd (snd (snd p)))))) <*mlex*> {}"
instantiation
  poly :: ({idom_divide,semidom_divide_unit_factor}) normalization_semidom
  normalize_poly == normalize :: 'a poly => 'a poly
  unit_factor_poly == unit_factor :: 'a poly => 'a poly
class field_unit_factor = field + unit_factor +
  assumes "unit_factor_field": "unit_factor = id"
Proofs for inductive predicate(s) "eucl_rel_poly"
  Proving monotonicity ...
instantiation
  poly :: (field) semidom_modulo
  modulo_poly == modulo :: 'a poly => 'a poly => 'a poly
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd (snd (snd p))))) <*mlex*> {}"
### theory "HOL-Computational_Algebra.Polynomial"
### 4.943s elapsed time, 13.941s cpu time, 1.445s GC time
Loading theory "HOL-Computational_Algebra.Fundamental_Theorem_Algebra" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
### theory "HOL-Computational_Algebra.Fundamental_Theorem_Algebra"
### 0.202s elapsed time, 0.402s cpu time, 0.000s GC time
### theory "HOL-Computational_Algebra.Euclidean_Algorithm"
### 7.230s elapsed time, 16.919s cpu time, 1.735s GC time
Loading theory "HOL-Computational_Algebra.Normalized_Fraction" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
Loading theory "HOL-Computational_Algebra.Primes" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Nth_Powers")
Loading theory "HOL-Computational_Algebra.Formal_Power_Series" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series" via "HOL-Computational_Algebra.Polynomial_FPS")
### theory "HOL-Computational_Algebra.Primes"
### 0.221s elapsed time, 0.704s cpu time, 0.086s GC time
Loading theory "HOL-Computational_Algebra.Nth_Powers" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
Loading theory "HOL-Computational_Algebra.Squarefree" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
locale fract_as_normalized_quot
### theory "HOL-Computational_Algebra.Nth_Powers"
### 0.217s elapsed time, 0.857s cpu time, 0.235s GC time
### theory "HOL-Computational_Algebra.Normalized_Fraction"
### 0.457s elapsed time, 1.629s cpu time, 0.321s GC time
### theory "HOL-Computational_Algebra.Squarefree"
### 0.226s elapsed time, 0.887s cpu time, 0.235s GC time
Loading theory "HOL-Computational_Algebra.Polynomial_Factorial" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
instantiation
  fps :: (zero) zero
  zero_fps == zero_class.zero :: 'a fps
instantiation
  fps :: ({one,zero}) one
  one_fps == one_class.one :: 'a fps
instantiation
  fps :: (plus) plus
  plus_fps == plus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (minus) minus
  minus_fps == minus :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (uminus) uminus
  uminus_fps == uminus :: 'a fps => 'a fps
instantiation
  fps :: ({comm_monoid_add,times}) times
  times_fps == times :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (zero) unit_factor
  unit_factor_fps == unit_factor :: 'a fps => 'a fps
### Cannot skip proof of schematic goal statement
instantiation
  fps :: ({minus,zero}) dist
  dist_fps == dist :: 'a fps => 'a fps => real
instantiation
  fps :: (group_add) metric_space
  uniformity_fps == uniformity :: ('a fps * 'a fps) filter
  open_fps == open :: 'a fps set => bool
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  poly :: ({factorial_ring_gcd,semiring_gcd_mult_normalize})
    factorial_ring_gcd
  Gcd_poly == Gcd :: 'a poly set => 'a poly
  Lcm_poly == Lcm :: 'a poly set => 'a poly
  gcd_poly == gcd :: 'a poly => 'a poly => 'a poly
  lcm_poly == lcm :: 'a poly => 'a poly => 'a poly
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
instantiation
  fps :: ({inverse,comm_monoid_add,times,uminus}) inverse
  inverse_fps == inverse :: 'a fps => 'a fps
  divide_fps == divide :: 'a fps => 'a fps => 'a fps
instantiation
  poly :: ({factorial_ring_gcd,field,semiring_gcd_mult_normalize})
    {normalization_euclidean_semiring,unique_euclidean_ring}
  division_segment_poly == division_segment :: 'a poly => 'a poly
  euclidean_size_poly == euclidean_size :: 'a poly => nat
### theory "HOL-Computational_Algebra.Polynomial_Factorial"
### 0.852s elapsed time, 1.907s cpu time, 0.299s GC time
Loading theory "Polynomial_Interpolation.Missing_Polynomial" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.FPS_Hensel" via "Draft.Puiseux_Polynomial_Library" via "Polynomial_Interpolation.Ring_Hom_Poly")
instantiation
  fps :: ({inverse,uminus,comm_semiring_1}) modulo
  modulo_fps == modulo :: 'a fps => 'a fps => 'a fps
instantiation
  fps :: (field) normalization_semidom_multiplicative
  normalize_fps == normalize :: 'a fps => 'a fps
instantiation
  fps :: (field) euclidean_ring_cancel
  euclidean_size_fps == euclidean_size :: 'a fps => nat
instantiation
  fps :: (field) euclidean_ring_gcd
  Gcd_fps == Gcd :: 'a fps set => 'a fps
  Lcm_fps == Lcm :: 'a fps set => 'a fps
  gcd_fps == gcd :: 'a fps => 'a fps => 'a fps
  lcm_fps == lcm :: 'a fps => 'a fps => 'a fps
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
class mult_zero = times + zero +
  assumes "mult_zero_left": "!!a. (0::'a) * a = (0::'a)"
  assumes "mult_zero_right": "!!a. a * (0::'a) = (0::'a)"
Found termination order: "size_list (%p. size (fst p)) <*mlex*> {}"
### theory "Polynomial_Interpolation.Missing_Polynomial"
### 0.798s elapsed time, 1.766s cpu time, 0.349s GC time
Loading theory "Polynomial_Interpolation.Ring_Hom_Poly" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.FPS_Hensel" via "Draft.Puiseux_Polynomial_Library")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd (snd p))) <*mlex*> {}"
locale zero_hom
  fixes hom :: "'a => 'b"
  assumes "zero_hom hom"
locale map_poly_zero_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_zero_hom hom"
locale comm_monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "comm_monoid_add_hom hom"
locale map_poly_comm_monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_comm_monoid_add_hom hom"
locale comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "comm_semiring_hom hom"
locale map_poly_comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_comm_semiring_hom hom"
locale map_poly_comm_ring_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_comm_ring_hom hom"
locale map_poly_idom_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_idom_hom hom"
locale map_poly_inj_zero_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_inj_zero_hom hom"
locale map_poly_inj_comm_monoid_add_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_inj_comm_monoid_add_hom hom"
locale map_poly_inj_comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_inj_comm_semiring_hom hom"
locale map_poly_inj_comm_ring_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_inj_comm_ring_hom hom"
locale map_poly_inj_idom_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_inj_idom_hom hom"
locale zero_hom_0
  fixes hom :: "'a => 'b"
  assumes "zero_hom_0 hom"
locale comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "comm_semiring_hom hom"
bundle fps_notation
### theory "HOL-Computational_Algebra.Formal_Power_Series"
### 3.668s elapsed time, 9.415s cpu time, 3.370s GC time
Loading theory "HOL-Computational_Algebra.Polynomial_FPS" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra" via "HOL-Computational_Algebra.Formal_Laurent_Series")
locale comm_semiring_hom
  fixes hom :: "'a => 'b"
  assumes "comm_semiring_hom hom"
locale comm_ring_hom
  fixes hom :: "'a => 'b"
  assumes "comm_ring_hom hom"
locale field_hom
  fixes hom :: "'a => 'b"
  assumes "field_hom hom"
locale field_hom'
  fixes hom :: "'a => 'b"
  assumes "field_hom' hom"
locale map_poly_inj_idom_divide_hom
  fixes hom :: "'a => 'b"
  assumes "map_poly_inj_idom_divide_hom hom"
signature POLY_FPS =
  sig
    val eq_conv: conv
    val eq_simproc: cterm -> thm option
    val reify_conv: conv
  end
structure Poly_Fps:
  sig
    val const_binop_conv: string -> conv -> cterm -> thm
    val eq_conv: cterm -> thm
    val eq_simproc: cterm -> thm option
    val reify_conv: conv
  end
consts
  prefix_length_aux :: "('a => bool) => nat => 'a list => nat"
### theory "HOL-Computational_Algebra.Polynomial_FPS"
### 0.483s elapsed time, 1.023s cpu time, 0.093s GC time
Loading theory "HOL-Computational_Algebra.Formal_Laurent_Series" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library" via "HOL-Computational_Algebra.Computational_Algebra")
### theory "Polynomial_Interpolation.Ring_Hom_Poly"
### 2.159s elapsed time, 5.497s cpu time, 2.580s GC time
instantiation
  fls :: (zero) zero
  zero_fls == zero_class.zero :: 'a fls
instantiation
  fls :: ({one,zero}) one
  one_fls == one_class.one :: 'a fls
instantiation
  fls :: (monoid_add) plus
  plus_fls == plus :: 'a fls => 'a fls => 'a fls
instantiation
  fls :: (group_add) minus
  minus_fls == minus :: 'a fls => 'a fls => 'a fls
instantiation
  fls :: (group_add) uminus
  uminus_fls == uminus :: 'a fls => 'a fls
instantiation
  fls :: ({comm_monoid_add,times}) times
  times_fls == times :: 'a fls => 'a fls => 'a fls
instantiation
  fls :: ({inverse,comm_monoid_add,times,uminus}) inverse
  inverse_fls == inverse :: 'a fls => 'a fls
  divide_fls == divide :: 'a fls => 'a fls => 'a fls
instantiation
  fls :: (group_add) metric_space
  dist_fls == dist :: 'a fls => 'a fls => real
  uniformity_fls == uniformity :: ('a fls * 'a fls) filter
  open_fls == open :: 'a fls set => bool
bundle fls_notation
### theory "HOL-Computational_Algebra.Formal_Laurent_Series"
### 1.481s elapsed time, 1.706s cpu time, 0.285s GC time
Loading theory "HOL-Computational_Algebra.Computational_Algebra" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.Puiseux_Laurent_Library")
### theory "HOL-Computational_Algebra.Computational_Algebra"
### 0.928s elapsed time, 0.934s cpu time, 0.000s GC time
Loading theory "Draft.Puiseux_Laurent_Library" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series")
Loading theory "Draft.Puiseux_Polynomial_Library" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series" via "Draft.FPS_Hensel")
### theory "Draft.Puiseux_Laurent_Library"
### 0.134s elapsed time, 0.266s cpu time, 0.000s GC time
class alg_closed_field = field +
  assumes
    "alg_closed":
      "!!n f.
          [| 0 < n; f n ~= (0::'a) |]
          ==> EX x. (SUM k<=n. f k * x ^ k) = (0::'a)"
### theory "Draft.Puiseux_Polynomial_Library"
### 0.940s elapsed time, 1.154s cpu time, 0.083s GC time
Loading theory "Draft.FPS_Hensel" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates" via "Draft.Formal_Puiseux_Series")
locale fps_hensel_aux
  fixes F :: "'a poly fps"
    and g :: "'a poly"
    and h :: "'a poly"
  assumes "fps_hensel_aux g h"
Found termination order: "size <*mlex*> {}"
locale fps_hensel
  fixes F :: "'a fps poly"
    and f :: "'a poly"
    and g :: "'a poly"
    and h :: "'a poly"
  assumes "fps_hensel F g h"
  defines "f == reduce_fps_poly F"
### theory "Draft.FPS_Hensel"
### 0.276s elapsed time, 0.276s cpu time, 0.000s GC time
Loading theory "Draft.Formal_Puiseux_Series" (required by "Draft.Formal_Puiseux_SeriesMoreTemplates")
instantiation
  fpxs :: (zero) zero
  zero_fpxs == zero_class.zero :: 'a fpxs
instantiation
  fpxs :: ({one,zero}) one
  one_fpxs == one_class.one :: 'a fpxs
instantiation
  fpxs :: (monoid_add) monoid_add
  plus_fpxs == plus :: 'a fpxs => 'a fpxs => 'a fpxs
instantiation
  fpxs :: (group_add) group_add
  minus_fpxs == minus :: 'a fpxs => 'a fpxs => 'a fpxs
  uminus_fpxs == uminus :: 'a fpxs => 'a fpxs
instantiation
  fpxs :: (comm_semiring_1) comm_semiring_1
  times_fpxs == times :: 'a fpxs => 'a fpxs => 'a fpxs
instantiation
  fpxs :: (field) field
  inverse_fpxs == inverse :: 'a fpxs => 'a fpxs
  divide_fpxs == divide :: 'a fpxs => 'a fpxs => 'a fpxs
instantiation
  fpxs :: (zero) norm
  norm_fpxs == norm :: 'a fpxs => real
instantiation
  fpxs :: (group_add) dist
  dist_fpxs == dist :: 'a fpxs => 'a fpxs => real
instantiation
  fpxs :: (group_add) metric_space
  uniformity_fpxs == uniformity :: ('a fpxs * 'a fpxs) filter
  open_fpxs == open :: 'a fpxs set => bool
### theory "Draft.Formal_Puiseux_Series"
### 0.858s elapsed time, 0.942s cpu time, 0.113s GC time
Loading theory "Draft.Formal_Puiseux_SeriesMoreTemplates"
val templateLemmas =
   [("Formal_Puiseux_Series.fpxs_root_order_pos", "0 < fpxs_root_order ?f",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Formal_Puiseux_Series.fpxs_root_order_nonzero",
     "fpxs_root_order ?f ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Formal_Puiseux_Series.fpxs_X_power_neq_0", "fpxs_X_power ?r ~= 0",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Formal_Puiseux_Series.fpxs_nth_0", "fpxs_nth 0 ?r = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Formal_Puiseux_Series.fpxs_root_order_of_fls",
     "fpxs_root_order (fpxs_of_fls ?f) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Formal_Puiseux_Series.fpxs_val_const", "fpxs_val (fpxs_const ?c) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Formal_Puiseux_Series.fls_of_fpxs_of_fls",
     "fls_of_fpxs (fpxs_of_fls ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Formal_Puiseux_Series.fpxs_compose_power_0",
     "fpxs_compose_power 0 ?r = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Formal_Puiseux_Series.fpxs_compose_power_1_right",
     "fpxs_compose_power ?f 1 = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Formal_Puiseux_Series.fpxs_shift_0_left", "fpxs_shift 0 ?f = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Formal_Puiseux_Series.fpxs_shift_0", "fpxs_shift ?r 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Formal_Puiseux_Series.fpxs_root_order_uminus",
     "fpxs_root_order (- ?f) = fpxs_root_order ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Formal_Puiseux_Series.fpxs_val_uminus",
     "fpxs_val (- ?f) = fpxs_val ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Formal_Puiseux_Series.fls_of_fpxs_const",
     "fls_of_fpxs (fpxs_const ?c) = fls_const ?c",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Formal_Puiseux_Series.fpxs_const_altdef",
     "fpxs_const ?x = fpxs_of_fls (fls_const ?x)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_of_fls_const",
     "fpxs_of_fls (fls_const ?c) = fpxs_const ?c",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Formal_Puiseux_Series.of_int_fpxs_eq",
     "of_int ?n = fpxs_const (of_int ?n)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_radical_0", "fpxs_radical ?rt ?r 0 = 0",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_hole 0)),
    ("Formal_Puiseux_Series.of_nat_fpxs_eq",
     "of_nat ?n = fpxs_const (of_nat ?n)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_val_of_fls",
     "fpxs_val (fpxs_of_fls ?f) = rat_of_int (fls_subdegree ?f)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Formal_Puiseux_Series.quotient_of_int",
     "quotient_of (rat_of_int ?n) = (?n, 1)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Formal_Puiseux_Series.fls_of_fpxs_uminus",
     "fls_of_fpxs (- ?f) = - fls_of_fpxs ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_X_power_conv_shift",
     "fpxs_X_power ?r = fpxs_shift (- ?r) 1",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_shift_1",
     "fpxs_shift ?r 1 = fpxs_X_power (- ?r)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_const_uminus",
     "fpxs_const (- ?x) = - fpxs_const ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.supp_uminus",
     "Formal_Puiseux_Series.supp (%x. - ?f x) =
      Formal_Puiseux_Series.supp ?f",
     template_equation
      (template_app (template_hole 1, t_empty),
       template_app (template_hole 1, template_var 0))),
    ("Formal_Puiseux_Series.fls_of_fpxs_eq_0_iff",
     "(fls_of_fpxs ?x = 0) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_of_fls_eq_1_iff",
     "(fpxs_of_fls ?f = 1) = (?f = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_of_fls_eq_0_iff",
     "(fpxs_of_fls ?f = 0) = (?f = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_X_power_eq_1_iff",
     "(fpxs_X_power ?r = 1) = (?r = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_shift_shift_uminus",
     "fpxs_shift ?r (fpxs_shift (- ?r) ?f) = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_var 0)),
    ("Formal_Puiseux_Series.fpxs_shift_shift_uminus'",
     "fpxs_shift (- ?r) (fpxs_shift ?r ?f) = ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Formal_Puiseux_Series.fpxs_nth_uminus",
     "fpxs_nth (- ?f) ?r = - fpxs_nth ?f ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_val_minus_commute",
     "fpxs_val (?f - ?g) = fpxs_val (?g - ?f)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Formal_Puiseux_Series.fpxs_supp_of_fls",
     "fpxs_supp (fpxs_of_fls ?f) =
      rat_of_int ` Formal_Puiseux_Series.supp (fls_nth ?f)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Formal_Puiseux_Series.fpxs_const_eq_iff",
     "(fpxs_const ?x = fpxs_const ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Formal_Puiseux_Series.fpxs_of_fls_eq_iff",
     "(fpxs_of_fls ?f = fpxs_of_fls ?g) = (?f = ?g)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Formal_Puiseux_Series.fls_base_factor_power",
     "fls_base_factor (?f ^ ?n) = fls_base_factor ?f ^ ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_var 0))),
    ("Formal_Puiseux_Series.fpxs_of_fls_X_power",
     "fpxs_of_fls (fls_shift ?n 1) = fpxs_X_power (- rat_of_int ?n)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Formal_Puiseux_Series.fpxs_shift_uminus",
     "fpxs_shift ?r (- ?f) = - fpxs_shift ?r ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_of_fls_power",
     "fpxs_of_fls (?f ^ ?n) = fpxs_of_fls ?f ^ ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Formal_Puiseux_Series.fpxs_nth_1",
     "fpxs_nth 1 ?r = (if ?r = 0 then 1::?'a else (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Formal_Puiseux_Series.supp_const",
     "Formal_Puiseux_Series.supp (%_. ?c) =
      (if ?c = (0::?'d) then {} else UNIV)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_hole 1),
             template_hole 0)
           ))),
    ("Formal_Puiseux_Series.fpxs_of_fls_shift",
     "fpxs_of_fls (fls_shift ?n ?f) =
      fpxs_shift (rat_of_int ?n) (fpxs_of_fls ?f)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_of_fls_compose_power",
     "fpxs_of_fls (fls_compose_power ?f ?d) =
      fpxs_compose_power (fpxs_of_fls ?f) (rat_of_nat ?d)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_const_diff",
     "fpxs_const (?x - ?y) = fpxs_const ?x - fpxs_const ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_const_add",
     "fpxs_const (?x + ?y) = fpxs_const ?x + fpxs_const ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_of_fls_add",
     "fpxs_of_fls (?f + ?g) = fpxs_of_fls ?f + fpxs_of_fls ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_X_power_add",
     "fpxs_X_power (?a + ?b) = fpxs_X_power ?a * fpxs_X_power ?b",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_const_mult",
     "fpxs_const (?x * ?y) = fpxs_const ?x * fpxs_const ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_of_fls_mult",
     "fpxs_of_fls (?f * ?g) = fpxs_of_fls ?f * fpxs_of_fls ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_X_power_mult",
     "fpxs_X_power (rat_of_nat ?n * ?m) = fpxs_X_power ?m ^ ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 0)),
         template_var 1))),
    ("Formal_Puiseux_Series.fpxs_compose_power_1",
     "0 < ?r ==> fpxs_compose_power 1 ?r = 1",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Formal_Puiseux_Series.div_dvd_self", "?b dvd ?a ==> ?a div ?b dvd ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("Formal_Puiseux_Series.fpxs_nth_shift",
     "fpxs_nth (fpxs_shift ?r ?f) ?n = fpxs_nth ?f (?n + ?r)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Formal_Puiseux_Series.of_int_fls_subdegree_of_fpxs",
     "rat_of_int (fls_subdegree (fls_of_fpxs ?f)) =
      fpxs_val ?f * rat_of_nat (fpxs_root_order ?f)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Formal_Puiseux_Series.fpxs_supp_altdef",
     "fpxs_supp ?f = {x. fpxs_nth ?f x ~= (0::?'a)}",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Formal_Puiseux_Series.fps_to_fls_sum",
     "fps_to_fls (sum ?f ?A) = (SUM x:?A. fps_to_fls (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Formal_Puiseux_Series.fpxs_shift_add_left",
     "fpxs_shift (?m + ?n) ?f = fpxs_shift ?m (fpxs_shift ?n ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_as_fls",
     "fpxs_compose_power (fpxs_of_fls (fls_of_fpxs ?f))
       (1 / rat_of_nat (fpxs_root_order ?f)) =
      ?f",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))),
       template_var 0)),
    ("Formal_Puiseux_Series.fpxs_shift_mult",
     "?f * fpxs_shift ?r ?g = fpxs_shift ?r (?f * ?g)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_shift_mult",
     "fpxs_shift ?r ?f * ?g = fpxs_shift ?r (?f * ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_of_fls_sum",
     "fpxs_of_fls (sum ?f ?A) = (SUM x:?A. fpxs_of_fls (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Formal_Puiseux_Series.fpxs_nth_1'",
     "?r ~= 0 ==> fpxs_nth 1 ?r = (0::?'b)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 0),
         template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_nth_below_val",
     "?n < fpxs_val ?f ==> fpxs_nth ?f ?n = (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_shift_diff_left",
     "fpxs_shift (?m - ?n) ?f = fpxs_shift ?m (fpxs_shift (- ?n) ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_val_leI",
     "fpxs_nth ?f ?r ~= (0::?'a) ==> fpxs_val ?f <= ?r",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Formal_Puiseux_Series.fls_nth_of_fpxs",
     "fls_nth (fls_of_fpxs ?f) ?n =
      fpxs_nth ?f (rat_of_int ?n / rat_of_nat (fpxs_root_order ?f))",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))))),
    ("Formal_Puiseux_Series.fpxs_nth_minus",
     "fpxs_nth (?f - ?g) ?r = fpxs_nth ?f ?r - fpxs_nth ?g ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_nth_add",
     "fpxs_nth (?f + ?g) ?r = fpxs_nth ?f ?r + fpxs_nth ?g ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_eq_iff",
     "(?f = ?g) = (ALL r. fpxs_nth ?f r = fpxs_nth ?g r)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Formal_Puiseux_Series.fpxs_shift_compose_power",
     "fpxs_shift ?r (fpxs_compose_power ?f ?s) =
      fpxs_compose_power (fpxs_shift (?r / ?s) ?f) ?s",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)),
         template_var 0))),
    ("Formal_Puiseux_Series.fpxs_shift_diff",
     "fpxs_shift ?r (?f - ?g) = fpxs_shift ?r ?f - fpxs_shift ?r ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_compose_power_add",
     "fpxs_compose_power (?f + ?g) ?r =
      fpxs_compose_power ?f ?r + fpxs_compose_power ?g ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_shift_add",
     "fpxs_shift ?r (?f + ?g) = fpxs_shift ?r ?f + fpxs_shift ?r ?g",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_compose_power_mult",
     "fpxs_compose_power (?f * ?g) ?r =
      fpxs_compose_power ?f ?r * fpxs_compose_power ?g ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.quotient_of_denom_diff_dvd",
     "snd (quotient_of (?x - ?y)) dvd
      snd (quotient_of ?x) * snd (quotient_of ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))))
         )),
    ("Formal_Puiseux_Series.quotient_of_denom_add_dvd",
     "snd (quotient_of (?x + ?y)) dvd
      snd (quotient_of ?x) * snd (quotient_of ?y)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1))),
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))))
         )),
    ("Formal_Puiseux_Series.fpxs_nth_val_nonzero",
     "?f ~= 0 ==> fpxs_nth ?f (fpxs_val ?f) ~= (0::?'a)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Formal_Puiseux_Series.fpxs_nth_of_fls",
     "fpxs_nth (fpxs_of_fls ?f) ?r =
      (if ?r : \<int> then fls_nth ?f \<lfloor>?r\<rfloor> else (0::?'a))",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Formal_Puiseux_Series.fpxs_shift_power",
     "fpxs_shift ?n ?x ^ ?m = fpxs_shift (rat_of_nat ?m * ?n) (?x ^ ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_compose_power_eq_1_iff",
     "0 < ?l ==> (fpxs_compose_power ?p ?l = 1) = (?p = 1)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0),
         template_equation (template_var 0, template_hole 0)))),
    ("Formal_Puiseux_Series.fpxs_val_compose_power",
     "0 < ?r ==> fpxs_val (fpxs_compose_power ?f ?r) = fpxs_val ?f * ?r",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_var 1)))),
    ("Formal_Puiseux_Series.fpxs_compose_power_eq_0_iff",
     "0 < ?r ==> (fpxs_compose_power ?f ?r = 0) = (?f = 0)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1),
           template_hole 0),
         template_equation (template_var 0, template_hole 0)))),
    ("Formal_Puiseux_Series.fpxs_compose_power_X_power",
     "0 < ?s ==>
      fpxs_compose_power (fpxs_X_power ?r) ?s = fpxs_X_power (?r * ?s)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Formal_Puiseux_Series.fpxs_ext",
     "(!!r. fpxs_nth ?f r = fpxs_nth ?g r) ==> ?f = ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Formal_Puiseux_Series.of_int_div_of_int_in_Ints_iff",
     "(of_int ?n / of_int ?m : \<int>) = (?m = 0 | ?m dvd ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 1)),
                  template_app (template_hole 5, template_var 0))),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Formal_Puiseux_Series.rat_of_int_div_dvd",
     "?d dvd ?n ==> rat_of_int (?n div ?d) = rat_of_int ?n / rat_of_int ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("Formal_Puiseux_Series.fpxs_nth_power_val",
     "fpxs_nth (?f ^ ?r) (rat_of_nat ?r * fpxs_val ?f) =
      fpxs_nth ?f (fpxs_val ?f) ^ ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_var 1))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app (template_hole 1, template_var 1))),
         template_var 0))),
    ("Formal_Puiseux_Series.fpxs_nth_compose_power",
     "0 < ?r ==>
      fpxs_nth (fpxs_compose_power ?f ?r) ?n = fpxs_nth ?f (?n / ?r)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Formal_Puiseux_Series.fpxs_compose_power_eq_iff",
     "0 < ?r ==>
      (fpxs_compose_power ?f ?r = fpxs_compose_power ?g ?r) = (?f = ?g)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_compose_power_power",
     "0 < ?r ==>
      fpxs_compose_power (?f ^ ?n) ?r = fpxs_compose_power ?f ?r ^ ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Formal_Puiseux_Series.fpxs_val_diff_ge",
     "?f ~= ?g ==> min (fpxs_val ?f) (fpxs_val ?g) <= fpxs_val (?f - ?g)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Formal_Puiseux_Series.supp_singleton",
     "?c ~= (0::?'d) ==>
      Formal_Puiseux_Series.supp (%x. if x = ?d then ?c else (0::?'d)) =
      {?d}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Formal_Puiseux_Series.fpxs_val_add_ge",
     "?f + ?g ~= 0 ==>
      min (fpxs_val ?f) (fpxs_val ?g) <= fpxs_val (?f + ?g)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("Formal_Puiseux_Series.fpxs_nth_mult_val",
     "fpxs_nth (?f * ?g) (fpxs_val ?f + fpxs_val ?g) =
      fpxs_nth ?f (fpxs_val ?f) * fpxs_nth ?g (fpxs_val ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 1, template_var 0))))),
    ("Formal_Puiseux_Series.fpxs_compose_power_distrib",
     "0 < ?r1.0 | 0 < ?r2.0 ==>
      fpxs_compose_power (fpxs_compose_power ?f ?r1.0) ?r2.0 =
      fpxs_compose_power ?f (?r1.0 * ?r2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Formal_Puiseux_Series.fpxs_val_power",
     "?f ~= 0 | 0 < ?n ==>
      fpxs_val (?f ^ ?n) = rat_of_nat ?n * fpxs_val ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_hole 7))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_app (template_hole 3, template_var 1))))),
    ("Formal_Puiseux_Series.rat_eq_quotientD",
     "[| ?r = rat_of_int ?a / rat_of_int ?b; ?b ~= 0 |]
      ==> fst (quotient_of ?r) dvd ?a",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 6, template_var 0))),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))),
             template_var 1)
           ))),
    ("Formal_Puiseux_Series.rat_eq_quotientD",
     "[| ?r = rat_of_int ?a / rat_of_int ?b; ?b ~= 0 |]
      ==> snd (quotient_of ?r) dvd ?b",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 6, template_var 0))),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2))),
             template_var 0)
           ))),
    ("Formal_Puiseux_Series.fpxs_compose_power_divide_right",
     "[| 0 < ?r1.0; 0 < ?r2.0 |]
      ==> fpxs_compose_power ?f (?r1.0 / ?r2.0) =
          fpxs_compose_power (fpxs_compose_power ?f ?r1.0) (inverse ?r2.0)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2),
        template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app (template_hole 0, template_var 1))))),
    ("Formal_Puiseux_Series.fpxs_val_mult",
     "[| ?f ~= 0; ?g ~= 0 |]
      ==> fpxs_val (?f * ?g) = fpxs_val ?f + fpxs_val ?g",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("Formal_Puiseux_Series.fpxs_val_geI",
     "[| ?f ~= 0; !!r. r < ?r' ==> fpxs_nth ?f r = (0::?'a) |]
      ==> ?r' <= fpxs_val ?f",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 1)))),
    ("Formal_Puiseux_Series.fpxs_radical_lead_coeff",
     "[| 0 < ?r; ?f ~= 0 |]
      ==> fpxs_nth (fpxs_radical ?rt ?r ?f) (fpxs_val ?f / rat_of_nat ?r) =
          ?rt ?r (fpxs_nth ?f (fpxs_val ?f))",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app (template_var 0, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 1, template_var 1)))))),
    ("Formal_Puiseux_Series.fpxs_power_radical",
     "[| 0 < ?r;
         ?rt ?r (fpxs_nth ?f (fpxs_val ?f)) ^ ?r =
         fpxs_nth ?f (fpxs_val ?f) |]
      ==> fpxs_radical ?rt ?r ?f ^ ?r = ?f",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_var 1, template_var 2),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 0)))),
            template_var 2),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_app (template_hole 3, template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("Formal_Puiseux_Series.fpxs_as_fls'",
     "[| fpxs_root_order ?f dvd ?d; 0 < ?d;
         !!f'. ?f =
               fpxs_compose_power (fpxs_of_fls f') (1 / rat_of_nat ?d) ==>
               ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              template_var 1)
            ),
        template_inequation (less_than, template_hole 7, template_var 1),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Formal_Puiseux_Series.fpxs_nth_mult",
     "fpxs_nth (?f * ?g) ?r =
      (SUM (y, z)
           :{(y, z). y : fpxs_supp ?f & z : fpxs_supp ?g & ?r = y + z}.
          fpxs_nth ?f y * fpxs_nth ?g z)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, t_empty)),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty)))))]:
   (string * thm * template) list
### theory "Draft.Formal_Puiseux_SeriesMoreTemplates"
### 0.655s elapsed time, 0.915s cpu time, 0.126s GC time
val it = (): unit
