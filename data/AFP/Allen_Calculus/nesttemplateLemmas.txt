   [("nest.before_irrefl", "~ ?a \<lless> ?a",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0)
             )
         )),
    ("nest.NEST_BEGIN", "\<I> ?i ==> NEST (BEGIN ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("nest.NEST_END", "\<I> ?i ==> NEST (END ?i)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("nest.intv1", "\<I> ?i ==> ?i : BEGIN ?i",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("nest.intv2", "\<I> ?i ==> ?i : END ?i",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("nest.NEST_nonempty", "NEST ?S ==> ?S ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("nest.before", "\<I> ?i ==> BEGIN ?i \<lless> END ?i",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("nest.meets",
     "[| \<I> ?i; \<I> ?j |] ==> ((?i, ?j) : m) = (END ?i = BEGIN ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0)),
                template_hole 3)
              )],
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("nest.END_BEGIN_before",
     "[| \<I> ?i; \<I> ?j |] ==> END ?i \<lless> BEGIN ?j = ((?i, ?j) : b)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("nest.ends",
     "[| \<I> ?i; \<I> ?j |]
      ==> ((?i, ?j) : f Un f^-1 Un e) = (END ?i = END ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app (template_hole 3, template_hole 4))),
                  template_hole 2))
              )],
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("nest.starts",
     "[| \<I> ?i; \<I> ?j |]
      ==> ((?i, ?j) : s Un s^-1 Un e) = (BEGIN ?i = BEGIN ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app (template_hole 3, template_hole 4))),
                  template_hole 2))
              )],
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("nest.END_END_before",
     "[| \<I> ?i; \<I> ?j |]
      ==> END ?i \<lless> END ?j = ((?i, ?j) : b Un m Un ov Un s Un d)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 1)),
           template_app (template_hole 8, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_hole 3)),
                     template_hole 2)),
                 template_hole 1)),
             template_hole 0))))),
    ("nest.BEGIN_before",
     "[| \<I> ?i; \<I> ?j |]
      ==> BEGIN ?i \<lless> BEGIN ?j =
          ((?i, ?j) : b Un m Un ov Un f^-1 Un d^-1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app (template_hole 9, template_var 1)),
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 6, template_hole 5),
                         template_hole 4)),
                     template_hole 3)),
                 template_app (template_hole 2, template_hole 1))),
             template_app (template_hole 2, template_hole 0)))))),
    ("nest.overlaps",
     "[| \<I> ?i; \<I> ?j |]
      ==> ((?i, ?j) : ov) =
          (BEGIN ?i \<lless> BEGIN ?j &
           BEGIN ?j \<lless> END ?i & END ?i \<lless> END ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 0, template_var 1))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0))))))),
    ("nest.BEGIN_END_before",
     "[| \<I> ?i; \<I> ?j |]
      ==> BEGIN ?i \<lless> END ?j =
          ((?i, ?j)
           : e Un b Un m Un ov Un ov^-1 Un s Un s^-1 Un f Un f^-1 Un d Un
             d^-1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app (template_hole 12, template_var 1)),
           template_app (template_hole 11, template_var 0)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_hole 6)),
       template_hole 5)),
   template_hole 4)),
                                     template_app
(template_hole 3, template_hole 4))),
                                 template_hole 2)),
                             template_app
                              (template_hole 3, template_hole 2))),
                         template_hole 1)),
                     template_app (template_hole 3, template_hole 1))),
                 template_hole 0)),
             template_app (template_hole 3, template_hole 0)))))),
    ("nest.xj_set",
     "(?x : {a |a.
             (a, ?j) : e Un ov^-1 Un s^-1 Un d^-1 Un f Un f^-1 Un m^-1}) =
      ((?x, ?j) : e Un ov^-1 Un s^-1 Un d^-1 Un f Un f^-1 Un m^-1)",
     template_equation
      (template_app
        (template_app (template_hole 14, template_var 1),
         template_app (template_hole 13, t_empty)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 7, template_hole 6),
                               template_app
                                (template_hole 5, template_hole 4))),
                           template_app
                            (template_hole 5, template_hole 3))),
                       template_app (template_hole 5, template_hole 2))),
                   template_hole 1)),
               template_app (template_hole 5, template_hole 1))),
           template_app (template_hole 5, template_hole 0))))),
    ("Limits.nested_sequence_unique",
     "[| ALL n. ?f n <= ?f (Suc n); ALL n. ?g (Suc n) <= ?g n;
         ALL n. ?f n <= ?g n;
         (%n. ?f n - ?g n) \<longlonglongrightarrow> 0 |]
      ==> EX l. ((ALL n. ?f n <= l) & ?f \<longlonglongrightarrow> l) &
                (ALL n. l <= ?g n) & ?g \<longlonglongrightarrow> l",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty),
                template_app (template_hole 4, template_hole 3)),
              template_hole 2)
            )],
       template_predicate (template_app (template_hole 1, t_empty))))]
