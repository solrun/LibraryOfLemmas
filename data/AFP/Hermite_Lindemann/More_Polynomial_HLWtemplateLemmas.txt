   [("More_Polynomial_HLW.content_normalize",
     "content (normalize ?p) = content ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Polynomial_HLW.poly_roots_uminus",
     "poly_roots (- ?p) = poly_roots ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Polynomial_HLW.poly_roots_normalize",
     "poly_roots (normalize ?p) = poly_roots ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Polynomial_HLW.irreducible_imp_squarefree",
     "irreducible ?p ==> squarefree ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("More_Polynomial_HLW.squarefree_imp_rsquarefree",
     "squarefree ?p ==> rsquarefree ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("More_Polynomial_HLW.abs_prod_mset",
     "\<bar>\<Prod>\<^sub># ?A\<bar> = \<Prod>\<^sub># (image_mset abs ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("More_Polynomial_HLW.poly_roots_power",
     "poly_roots (?p ^ ?n) = repeat_mset ?n (poly_roots ?p)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 2, template_var 1)))),
    ("More_Polynomial_HLW.poly_roots_of_int_normalize",
     "poly_roots (of_int_poly (normalize ?p)) =
      poly_roots (of_int_poly ?p)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("More_Polynomial_HLW.poly_roots_conv_sum_prime_factors",
     "poly_roots ?q =
      \<Sum>\<^sub># (image_mset poly_roots (prime_factorization ?q))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("More_Polynomial_HLW.pcompose_monom",
     "Polynomial.monom ?c ?n \<circ>\<^sub>p ?p =
      Polynomial.smult ?c (?p ^ ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("More_Polynomial_HLW.synthetic_div_altdef",
     "synthetic_div ?p ?c = ?p div [:- ?c, 1::?'a:]",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 1),
             template_hole 0))))),
    ("More_Polynomial_HLW.coprime_of_int_polyI",
     "algebraic_semidom_class.coprime ?p ?q ==>
      algebraic_semidom_class.coprime (of_int_poly ?p) (of_int_poly ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("More_Polynomial_HLW.poly_roots_of_int_conv_sum_prime_factors",
     "poly_roots (of_int_poly ?q) =
      (SUM p:#prime_factorization ?q. poly_roots (of_int_poly p))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("More_Polynomial_HLW.irreducible_imp_rsquarefree_of_int_poly",
     "[| irreducible ?p; 0 < Polynomial.degree ?p |]
      ==> rsquarefree (of_int_poly ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("More_Polynomial_HLW.squarefree_imp_coprime_pderiv",
     "[| squarefree ?p; content ?p = (1::?'a) |]
      ==> algebraic_semidom_class.coprime ?p (pderiv ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Polynomial_HLW.squarefree_of_int_polyI",
     "[| squarefree ?p; content ?p = 1 |] ==> squarefree (of_int_poly ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("More_Polynomial_HLW.lead_coeff_prod_mset",
     "Polynomial.lead_coeff (\<Prod>\<^sub># ?A) =
      \<Prod>\<^sub># (image_mset Polynomial.lead_coeff ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("More_Polynomial_HLW.irreducible_imp_coprime_pderiv",
     "[| irreducible ?p; Polynomial.degree ?p ~= 0 |]
      ==> algebraic_semidom_class.coprime ?p (pderiv ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Polynomial_HLW.poly_poly_poly_y_x",
     "poly (poly (poly_y_x ?p) [:?y:]) ?x = poly (poly ?p [:?x:]) ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_var 1))),
    ("More_Polynomial_HLW.dvd_imp_poly_roots_subset",
     "[| ?q ~= 0; ?p dvd ?q |] ==> poly_roots ?p <=# poly_roots ?q",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("More_Polynomial_HLW.content_1_imp_nonconstant_prime_factors",
     "[| content ?p = 1; ?q :# prime_factorization ?p |]
      ==> 0 < Polynomial.degree ?q",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            )],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("More_Polynomial_HLW.poly_gcd_eq_0I",
     "[| poly ?p ?x = (0::?'a); poly ?q ?x = (0::?'a) |]
      ==> poly (gcd ?p ?q) ?x = (0::?'a)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_hole 1),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 0), template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_hole 1))),
    ("More_Polynomial_HLW.poly_poly_eq",
     "poly (poly ?p [:?x:]) ?y =
      poly (eval_poly (%p. [:poly p ?y:]) ?p [:0::?'a, 1::?'a:]) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 2),
             template_app
              (template_app (template_hole 4, template_hole 1),
               template_app
                (template_app (template_hole 4, template_hole 0),
                 template_hole 3)))),
         template_var 1))),
    ("More_Polynomial_HLW.higher_pderiv_pcompose_linear",
     "(pderiv ^^ ?n) (?p \<circ>\<^sub>p [:0::?'a, ?c:]) =
      Polynomial.smult (?c ^ ?n)
       ((pderiv ^^ ?n) ?p \<circ>\<^sub>p [:0::?'a, ?c:])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 2)))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_hole 6),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 2)))))),
    ("More_Polynomial_HLW.poly_eq_0_coprime",
     "[| algebraic_semidom_class.coprime ?p ?q; ?p ~= 0; ?q ~= 0 |]
      ==> poly ?p ?x ~= (0::?'a) | poly ?q ?x ~= (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 0)),
                   template_hole 0))),
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)))
           ))),
    ("More_Polynomial_HLW.rat_to_normalized_int_poly_exists",
     "[| ?p ~= 0;
         !!q lc.
            [| ?p = Polynomial.smult lc (of_int_poly q); 0 < lc;
               content q = 1 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("More_Polynomial_HLW.coeff_prod_linear_factors",
     "finite ?A ==>
      poly.coeff (PROD x:?A. [:- ?f x, 1::?'b:] ^ ?e x) ?i =
      (SUM X | X : Pow (SIGMA x:?A. {..<?e x}) & ?i = sum ?e ?A - card X.
          (- (1::?'b)) ^ card X * (PROD x:X. ?f (fst x)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 21,
             template_app
              (template_app (template_hole 20, t_empty), template_var 3)),
           template_var 0),
         template_app
          (template_app (template_hole 14, t_empty),
           template_app (template_hole 8, t_empty)))))]
