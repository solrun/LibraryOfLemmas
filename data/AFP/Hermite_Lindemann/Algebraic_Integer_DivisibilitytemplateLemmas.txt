   [("Algebraic_Integer_Divisibility.alg_dvd_0_right",
     "?x alg_dvd (0::?'a)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Algebraic_Integer_Divisibility.one_alg_dvd_iff",
     "((1::?'a) alg_dvd ?x) = algebraic_int ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Algebraic_Integer_Divisibility.alg_dvd_0_left_iff",
     "((0::?'a) alg_dvd ?x) = (?x = (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Algebraic_Integer_Divisibility.alg_dvd_uminus_right_iff",
     "(?x alg_dvd - ?y) = (?x alg_dvd ?y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Algebraic_Integer_Divisibility.alg_dvd_of_int_iff",
     "(of_int ?x alg_dvd of_int ?y) = (?x dvd ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Integer_Divisibility.alg_dvd_of_nat_iff",
     "(of_nat ?x alg_dvd of_nat ?y) = (?x dvd ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Algebraic_Integer_Divisibility.alg_dvd_triv_right",
     "algebraic_int ?x ==> ?y alg_dvd ?x * ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_triv_left",
     "algebraic_int ?y ==> ?x alg_dvd ?x * ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_uminus_right",
     "?x alg_dvd ?y ==> ?x alg_dvd - ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_of_int",
     "?x dvd ?y ==> of_int ?x alg_dvd of_int ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_of_nat",
     "?x dvd ?y ==> of_nat ?x alg_dvd of_nat ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_imp_algebraic_int",
     "[| ?x alg_dvd ?y; algebraic_int ?x |] ==> algebraic_int ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 0, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Integer_Divisibility.alg_dvd_triv_left_iff",
     "(?x alg_dvd ?x * ?y) = (?x = (0::?'a) | algebraic_int ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_triv_right_iff",
     "(?y alg_dvd ?x * ?y) = (?y = (0::?'a) | algebraic_int ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_trans",
     "[| ?x alg_dvd ?y; ?y alg_dvd ?z |] ==> ?x alg_dvd ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_triv_left_iff'",
     "?x ~= (0::?'a) ==> (?x alg_dvd ?x * ?y) = algebraic_int ?y",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Integer_Divisibility.alg_dvd_triv_right_iff'",
     "?y ~= (0::?'a) ==> (?y alg_dvd ?x * ?y) = algebraic_int ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Algebraic_Integer_Divisibility.alg_dvd_mult2",
     "[| ?a alg_dvd ?b; algebraic_int ?c |] ==> ?a alg_dvd ?b * ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_mult",
     "[| ?a alg_dvd ?c; algebraic_int ?b |] ==> ?a alg_dvd ?b * ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_diff",
     "[| ?x alg_dvd ?y; ?x alg_dvd ?z |] ==> ?x alg_dvd ?y - ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_add",
     "[| ?x alg_dvd ?y; ?x alg_dvd ?z |] ==> ?x alg_dvd ?y + ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_mono",
     "[| ?a alg_dvd ?c; ?b alg_dvd ?d |] ==> ?a * ?b alg_dvd ?c * ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Algebraic_Integer_Divisibility.coeff_higher_pderiv",
     "coeff ((pderiv ^^ ?m) ?f) ?n =
      pochhammer (of_nat (Suc ?n)) ?m * coeff ?f (?n + ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_hole 5),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0))),
             template_var 2)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Algebraic_Integer_Divisibility.alg_dvd_sum",
     "(!!x. x : ?A ==> ?y alg_dvd ?f x) ==> ?y alg_dvd sum ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Algebraic_Integer_Divisibility.fact_dvd_pochhammer",
     "?m <= ?n + 1 ==> fact ?m dvd pochhammer (int ?n - int ?m + 1) ?m",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 8, template_var 0),
            template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 0)),
                       template_app (template_hole 1, template_var 1))),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Algebraic_Integer_Divisibility.prod_alg_dvd_prod",
     "(!!x. x : ?A ==> ?f x alg_dvd ?g x) ==>
      prod ?f ?A alg_dvd prod ?g ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Algebraic_Integer_Divisibility.alg_dvd_int_rat",
     "[| of_int ?x alg_dvd ?y; ?y : \<rat> |]
      ==> EX n. ?y = of_int n & ?x dvd n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Algebraic_Integer_Divisibility.fact_alg_dvd_poly_higher_pderiv",
     "[| !!i. algebraic_int (coeff ?p i); algebraic_int ?x; ?m <= ?k |]
      ==> fact ?m alg_dvd poly ((pderiv ^^ ?k) ?p) ?x",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0),
                   template_var 3)),
               template_var 2))
           ))),
    ("Algebraic_Integer_Divisibility.not_alg_dvd_sum",
     "[| !!x. x : ?A - {?x'} ==> ?y alg_dvd ?f x; ~ ?y alg_dvd ?f ?x';
         ?x' : ?A; finite ?A |]
      ==> ~ ?y alg_dvd sum ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_var 0, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 3))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3))
               )
           )))]
