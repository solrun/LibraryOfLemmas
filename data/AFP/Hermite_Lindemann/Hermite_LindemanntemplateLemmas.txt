   [("Hermite_Lindemann.tan_square_neq_neg1", "(tan ?z)\<^sup>2 ~= - 1",
     template_negation
      (
         template_equation
          (template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 0)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app (template_hole 1, template_hole 0))
         )),
    ("Hermite_Lindemann.algebraic_exp_complex_iff",
     "algebraic ?x ==> algebraic (exp ?x) = (?x = 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 4,
                template_app (template_hole 2, template_var 0))
              )],
         template_equation (template_var 0, template_hole 0)))),
    ("Hermite_Lindemann.transcendental_Arccos",
     "[| algebraic ?z; ?z ~= 1 |] ==> ~ algebraic (Arccos ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_Arcsin",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (Arcsin ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_cos",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (cos ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_cosh",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (cosh ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_cot",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (cot ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_sin",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (sin ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_sinh",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (sinh ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_tan",
     "[| algebraic ?z; ?z ~= 0 |] ==> ~ algebraic (tan ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 4,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_complex_logarithm",
     "[| algebraic ?x; exp ?y = ?x; ?x ~= 1 |] ==> ~ algebraic ?y",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 0), template_var 1),
        template_negation
         (template_equation (template_var 1, template_hole 0))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 4, template_var 0))
           ))),
    ("Hermite_Lindemann.transcendental_Ln",
     "[| algebraic ?x; ?x ~= 0; ?x ~= 1 |] ==> ~ algebraic (Ln ?x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_Arctan",
     "[| algebraic ?z; ?z ~: {0, \<i>, - \<i>} |]
      ==> ~ algebraic (Arctan ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app
                     (template_app (template_hole 5, template_hole 3),
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app (template_hole 2, template_hole 3)),
                        template_hole 1))))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 8,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.transcendental_tanh",
     "[| algebraic ?z; ?z ~= 0; cosh ?z ~= 0 |] ==> ~ algebraic (tanh ?z)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_negation
         (
            template_equation
             (template_app (template_hole 1, template_var 0),
              template_hole 2)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 5,
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Hermite_Lindemann.Hermite_Lindemann_original",
     "[| inj_on ?\<alpha> {..<?n}; !!i. i < ?n ==> algebraic (?\<alpha> i);
         linearly_independent_over_int (?\<alpha> ` {..<?n}) |]
      ==> algebraically_independent_over_rat ?n (%i. exp (?\<alpha> i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 1),
                template_app (template_hole 7, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Hermite_Lindemann.Hermite_Lindemann_list",
     "[| ALL (x, y):set ?xs. algebraic x & algebraic y;
         distinct (map snd ?xs);
         (SUM (c, \<alpha>)<-?xs. c * exp \<alpha>) = 0 |]
      ==> ALL c:fst ` set ?xs. c = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 0)),
              template_app (template_hole 14, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 10, template_app (template_hole 6, t_empty)),
              template_var 0)),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app (template_hole 15, template_var 0))),
             t_empty)
           ))),
    ("Hermite_Lindemann.Hermite_Lindemann_aux2",
     "[| finite ?X; !!x. x : ?X ==> ?\<beta> x ~= 0;
         !!x. x : ?X ==> algebraic x;
         (SUM x:?X. of_int (?\<beta> x) * exp x) = 0 |]
      ==> ?X = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 6, t_empty), template_var 1),
          template_hole 2)],
       template_equation (template_var 1, template_hole 0))),
    ("Hermite_Lindemann.Hermite_Lindemann_aux3",
     "[| finite ?X; !!x. x : ?X ==> ?\<beta> x ~= 0;
         !!x. x : ?X ==> algebraic x;
         (SUM x:?X. of_rat (?\<beta> x) * exp x) = 0 |]
      ==> ?X = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 6, t_empty), template_var 1),
          template_hole 2)],
       template_equation (template_var 1, template_hole 0))),
    ("Hermite_Lindemann.Hermite_Lindemann'",
     "[| finite ?X; !!x. x : ?X ==> algebraic x;
         !!x. x : ?X ==> algebraic (?\<beta> x);
         (SUM x:?X. ?\<beta> x * exp x) = 0 |]
      ==> ALL x:?X. ?\<beta> x = 0",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 4, t_empty), template_var 1),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)
           ))),
    ("Hermite_Lindemann.sum_of_exp_transcendentalI",
     "[| ALL (x, y):set ?xs. algebraic x & algebraic y & y ~= 0;
         EX x:fst ` set ?xs. x ~= 0; distinct (map snd ?xs) |]
      ==> ~ algebraic (SUM (c, \<alpha>)<-?xs. c * exp \<alpha>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              template_app (template_hole 15, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_app (template_hole 16, template_var 0))),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 13,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 2, t_empty)),
                     template_var 0)))
               )
           ))),
    ("Hermite_Lindemann.Hermite_Lindemann",
     "[| finite ?I; !!x. x : ?I ==> algebraic (?\<alpha> x);
         !!x. x : ?I ==> algebraic (?\<beta> x); inj_on ?\<alpha> ?I;
         (SUM x:?I. ?\<beta> x * exp (?\<alpha> x)) = 0 |]
      ==> ALL x:?I. ?\<beta> x = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, t_empty), template_var 2),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)
           ))),
    ("Hermite_Lindemann.Hermite_Lindemann_aux4",
     "[| finite ?X; !!x. x : ?X ==> algebraic x;
         !!x. x : ?X ==> algebraic (?\<beta> x);
         !!x. x : ?X ==> ?\<beta> x ~= 0;
         (SUM x:?X. ?\<beta> x * exp x) = 0 |]
      ==> ?X = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 4, t_empty), template_var 1),
          template_hole 5)],
       template_equation (template_var 1, template_hole 0))),
    ("Hermite_Lindemann.Hermite_Lindemann_aux1",
     "[| finite ?P; ?P ~= {}; pairwise algebraic_semidom_class.coprime ?P;
         !!p. p : ?P ==> irreducible p;
         !!p. p : ?P ==> 0 < Polynomial.degree p;
         !!p. p : ?P ==> ?\<beta> p ~= 0 |]
      ==> (SUM p:?P.
              of_int (?\<beta> p) *
              (SUM \<alpha> | ipoly p \<alpha> = 0. exp \<alpha>)) ~=
          0",
     template_implication
      ([template_predicate
         (template_app (template_hole 23, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 20)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_hole 18),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 8, t_empty), template_var 1),
             template_hole 0)
           )))]
