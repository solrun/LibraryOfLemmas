   [("More_Polynomial_HLW.content_normalize",
     "content (normalize ?p) = content ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Polynomial_HLW.poly_roots_uminus",
     "poly_roots (- ?p) = poly_roots ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Polynomial_HLW.poly_roots_normalize",
     "poly_roots (normalize ?p) = poly_roots ?p",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Polynomial_HLW.abs_prod_mset",
     "\<bar>\<Prod>\<^sub># ?A\<bar> = \<Prod>\<^sub># (image_mset abs ?A)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_var 0)))),
    ("More_Polynomial_HLW.poly_roots_power",
     "poly_roots (?p ^ ?n) = repeat_mset ?n (poly_roots ?p)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 2, template_var 1)))),
    ("More_Polynomial_HLW.poly_roots_of_int_normalize",
     "poly_roots (of_int_poly (normalize ?p)) =
      poly_roots (of_int_poly ?p)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)))),
    ("More_Polynomial_HLW.poly_roots_conv_sum_prime_factors",
     "poly_roots ?q =
      \<Sum>\<^sub># (image_mset poly_roots (prime_factorization ?q))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("More_Polynomial_HLW.pcompose_monom",
     "Polynomial.monom ?c ?n \<circ>\<^sub>p ?p =
      Polynomial.smult ?c (?p ^ ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("More_Polynomial_HLW.synthetic_div_altdef",
     "synthetic_div ?p ?c = ?p div [:- ?c, 1::?'a:]",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 3, template_hole 1),
             template_hole 0))))),
    ("More_Polynomial_HLW.poly_roots_of_int_conv_sum_prime_factors",
     "poly_roots (of_int_poly ?q) =
      (SUM p:#prime_factorization ?q. poly_roots (of_int_poly p))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("More_Polynomial_HLW.lead_coeff_prod_mset",
     "Polynomial.lead_coeff (\<Prod>\<^sub># ?A) =
      \<Prod>\<^sub># (image_mset Polynomial.lead_coeff ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("More_Polynomial_HLW.poly_poly_poly_y_x",
     "poly (poly (poly_y_x ?p) [:?y:]) ?x = poly (poly ?p [:?x:]) ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_var 1))),
    ("More_Polynomial_HLW.poly_poly_eq",
     "poly (poly ?p [:?x:]) ?y =
      poly (eval_poly (%p. [:poly p ?y:]) ?p [:0::?'a, 1::?'a:]) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 2),
             template_app
              (template_app (template_hole 4, template_hole 1),
               template_app
                (template_app (template_hole 4, template_hole 0),
                 template_hole 3)))),
         template_var 1))),
    ("More_Polynomial_HLW.higher_pderiv_pcompose_linear",
     "(pderiv ^^ ?n) (?p \<circ>\<^sub>p [:0::?'a, ?c:]) =
      Polynomial.smult (?c ^ ?n)
       ((pderiv ^^ ?n) ?p \<circ>\<^sub>p [:0::?'a, ?c:])",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 2), template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 2)))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_hole 6),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 2))))))]
