   [("More_Algebraic_Numbers_HLW.algebraic_int_fact",
     "algebraic_int (fact ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("More_Algebraic_Numbers_HLW.algebraic_inverse_iff",
     "algebraic (inverse ?y) = algebraic ?y",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Algebraic_Numbers_HLW.algebraic_uminus_iff",
     "algebraic (- ?x) = algebraic ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Algebraic_Numbers_HLW.algebraic_csqrt_iff",
     "algebraic (csqrt ?x) = algebraic ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("More_Algebraic_Numbers_HLW.algebraic_csqrt",
     "algebraic ?x ==> algebraic (csqrt ?x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.in_Ints_imp_algebraic",
     "?x : \<int> ==> algebraic ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.in_Rats_imp_algebraic",
     "?x : \<rat> ==> algebraic ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_power",
     "algebraic ?x ==> algebraic (?x ^ ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_diff_cancel_left",
     "algebraic ?x ==> algebraic (?x - ?y) = algebraic ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_add_cancel_left",
     "algebraic ?x ==> algebraic (?x + ?y) = algebraic ?y",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_diff_cancel_right",
     "algebraic ?y ==> algebraic (?x - ?y) = algebraic ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_add_cancel_right",
     "algebraic ?y ==> algebraic (?x + ?y) = algebraic ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_power_iff",
     "0 < ?n ==> algebraic (?x ^ ?n) = algebraic ?x",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_minus",
     "[| algebraic ?x; algebraic ?y |] ==> algebraic (?x - ?y)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_sum_list",
     "(!!x. x : set ?xs ==> algebraic x) ==> algebraic (sum_list ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_prod_list",
     "(!!x. x : set ?xs ==> algebraic x) ==> algebraic (prod_list ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_sum_mset",
     "(!!x. x :# ?A ==> algebraic x) ==> algebraic (\<Sum>\<^sub># ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_prod_mset",
     "(!!x. x :# ?A ==> algebraic x) ==> algebraic (\<Prod>\<^sub># ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_sum",
     "(!!x. x : ?A ==> algebraic (?f x)) ==> algebraic (sum ?f ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_prod",
     "(!!x. x : ?A ==> algebraic (?f x)) ==> algebraic (prod ?f ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_mult_cancel_left",
     "[| algebraic ?x; ?x ~= (0::?'a) |]
      ==> algebraic (?x * ?y) = algebraic ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 5, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_divide_cancel_left",
     "[| algebraic ?x; ?x ~= (0::?'a) |]
      ==> algebraic (?x / ?y) = algebraic ?y",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 5, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_mult_cancel_right",
     "[| algebraic ?y; ?y ~= (0::?'a) |]
      ==> algebraic (?x * ?y) = algebraic ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 5, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_divide_cancel_right",
     "[| algebraic ?y; ?y ~= (0::?'a) |]
      ==> algebraic (?x / ?y) = algebraic ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 5, template_var 0)))),
    ("More_Algebraic_Numbers_HLW.algebraic_imp_algebraic_int",
     "[| ipoly ?p ?x = (0::?'a); ?p ~= 0 |]
      ==> algebraic_int (of_int (lead_coeff ?p) * ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_var 1)),
            template_var 0),
          template_hole 7),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app (template_hole 0, template_var 1)))),
               template_var 0))
           ))),
    ("More_Algebraic_Numbers_HLW.algebraic_imp_algebraic_int'",
     "[| ipoly ?p ?x = (0::?'a); ?p ~= 0; lead_coeff ?p dvd ?c |]
      ==> algebraic_int (of_int ?c * ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_var 2)),
            template_var 1),
          template_hole 8),
        template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 9, template_var 0)),
               template_var 1))
           )))]
