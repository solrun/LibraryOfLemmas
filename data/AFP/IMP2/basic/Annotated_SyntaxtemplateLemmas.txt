   [("Annotated_Syntax.HT'_eq_HT",
     "HT' ?\<pi> ?P (%_. ?c) ?Q = HT ?\<pi> ?P ?c ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Annotated_Syntax.HT'_partial_eq_HT",
     "HT'_partial ?\<pi> ?P (%_. ?c) ?Q = HT_partial ?\<pi> ?P ?c ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           t_empty),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Annotated_Syntax.HT'setD",
     "HT'set ?\<pi> (insert (?f, ?P, ?c, ?Q) ?\<Theta>) ==>
      HT'set ?\<pi> ?\<Theta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_app
                     (template_app (template_hole 1, template_var 3),
                      template_app
                       (template_app (template_hole 0, template_var 2),
                        template_var 1)))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 5), template_var 0)
           ))),
    ("Annotated_Syntax.HT'setD",
     "HT'set ?\<pi> (insert (?f, ?P, ?c, ?Q) ?\<Theta>) ==>
      HT' ?\<pi> ?P ?c ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1)))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Annotated_Syntax.HT'setI",
     "[| wf ?R;
         !!f P c Q s\<^sub>0.
            [| HT'set_r (%f' s'. (f' s', f s\<^sub>0) : ?R) ?\<pi>
                ?\<Theta>;
               (f, P, c, Q) : ?\<Theta>; P s\<^sub>0 |]
            ==> wp ?\<pi> (c s\<^sub>0) (Q s\<^sub>0) s\<^sub>0 |]
      ==> HT'set ?\<pi> ?\<Theta>",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           )))]
