Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.SemanticsMoreTemplates" via "Draft.Semantics" via "HOL-Eisbach.Eisbach_Tools")
Loading theory "Draft.Syntax" (required by "Draft.SemanticsMoreTemplates" via "Draft.Semantics")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
### theory "HOL-Library.Function_Algebras"
### 0.166s elapsed time, 0.648s cpu time, 0.042s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
structure Eisbach_Rule_Insts: sig end
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
### theory "HOL-Library.Set_Algebras"
### 0.318s elapsed time, 1.262s cpu time, 0.071s GC time
### theory "HOL-Library.Nat_Bijection"
### 0.487s elapsed time, 1.920s cpu time, 0.112s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Stream" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs")
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Eisbach.Eisbach"
### 0.675s elapsed time, 2.642s cpu time, 0.203s GC time
Loading theory "HOL-Eisbach.Eisbach_Tools" (required by "Draft.SemanticsMoreTemplates" via "Draft.Semantics")
val try_map = fn: 'a Seq.seq -> 'a Seq.seq -> 'a Seq.seq
val uncurry_rule = fn: thm -> thm
val curry_rule = fn: thm -> thm
### theory "HOL-Eisbach.Eisbach_Tools"
### 0.046s elapsed time, 0.178s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.BigO"
### 1.143s elapsed time, 4.352s cpu time, 0.845s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.408s elapsed time, 5.378s cpu time, 1.029s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Syntax"
### 2.630s elapsed time, 8.893s cpu time, 1.349s GC time
Loading theory "Draft.Semantics" (required by "Draft.SemanticsMoreTemplates")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.357s elapsed time, 7.433s cpu time, 1.304s GC time
Loading theory "Draft.Templates" (required by "Draft.SemanticsMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.328s elapsed time, 0.998s cpu time, 0.834s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SemanticsMoreTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Proofs for inductive predicate(s) "big_step"
  Proving monotonicity ...
### Cannot skip proof of schematic goal statement
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.646s elapsed time, 1.340s cpu time, 0.098s GC time
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "small_steps"
  Proving monotonicity ...
Proofs for inductive predicate(s) "count_it"
  Proving monotonicity ...
### theory "Draft.Semantics"
### 3.291s elapsed time, 5.558s cpu time, 1.176s GC time
Loading theory "Draft.SemanticsMoreTemplates"
val templateLemmas =
   [("Semantics.equiv_refl", "?c \<sim> ?c",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Semantics.combine_collapse", "<?s|?s> = ?s",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Semantics.triv_if", "IF ?b THEN ?c ELSE ?c \<sim> ?c",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 0)),
           template_var 0)
         )),
    ("Semantics.sp_skip_eq", "sp ?\<pi> ?P SKIP ?t = ?P ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_hole 0),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Semantics.wlp_skip_eq", "wlp ?\<pi> SKIP ?Q ?s = ?Q ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0),
           template_var 1),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Semantics.wp_skip_eq", "wp ?\<pi> SKIP ?Q ?s = ?Q ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0),
           template_var 1),
         template_var 0),
       template_app (template_var 1, template_var 0))),
    ("Semantics.equiv_sym", "?c \<sim> ?c' ==> ?c' \<sim> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Semantics.combine_nest", "<?s|<?s'|?t>> = <?s|?t>",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Semantics.combine_nest", "<<?s|?t'>|?t> = <?s|?t>",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Semantics.Skip_simp",
     "?\<pi>: (SKIP, ?s) \<Rightarrow> ?t = (?t = ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 1)),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Semantics.wlp_assign_locals_eq",
     "wlp ?\<pi> (Assign_Locals ?l) ?Q ?s = ?Q <?l|?s>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Semantics.wp_assign_locals_eq",
     "wp ?\<pi> (Assign_Locals ?l) ?Q ?s = ?Q <?l|?s>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 1, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Semantics.combine_query", "is_global ?x ==> <?s|?t> ?x = ?t ?x",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Semantics.big_eq_small",
     "?\<pi>: ?cs \<Rightarrow> ?t =
      small_steps ?\<pi> ?cs (Some (SKIP, ?t))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Semantics.while_unfold",
     "WHILE ?b DO ?c \<sim> IF ?b THEN ?c;; WHILE ?b DO ?c ELSE SKIP",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_hole 0))
         )),
    ("Semantics.combine_query", "is_local ?x ==> <?s|?t> ?x = ?s ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 2),
         template_app (template_var 1, template_var 2)))),
    ("Semantics.wlp_equiv",
     "?c \<sim> ?c' ==> wlp ?\<pi> ?c = wlp ?\<pi> ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Semantics.wp_equiv", "?c \<sim> ?c' ==> wp ?\<pi> ?c = wp ?\<pi> ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Semantics.wp_imp_wlp", "wp ?\<pi> ?c ?Q ?s ==> wlp ?\<pi> ?c ?Q ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantics.small_steps_skip_term",
     "small_steps ?\<pi> (SKIP, ?s) ?cs' = (?cs' = Some (SKIP, ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1))))),
    ("Semantics.wlp_arrayinit_eq",
     "wlp ?\<pi> (CLEAR ?x[]) ?Q ?s = ?Q (?s(?x := %_. 0))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           t_empty)))),
    ("Semantics.wp_arrayinit_eq",
     "wp ?\<pi> (CLEAR ?x[]) ?Q ?s = ?Q (?s(?x := %_. 0))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           t_empty)))),
    ("Semantics.AssignLocals_simp",
     "?\<pi>: (Assign_Locals ?l, ?s) \<Rightarrow> ?t = (?t = <?l|?s>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Semantics.wlp_pscope_eq",
     "wlp ?\<pi> (PScope ?\<pi>' ?c) ?Q ?s = wlp ?\<pi>' ?c ?Q ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantics.wp_pscope_eq",
     "wp ?\<pi> (PScope ?\<pi>' ?c) ?Q ?s = wp ?\<pi>' ?c ?Q ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Semantics.wlp_equiv_iff",
     "(ALL \<pi>. wlp \<pi> ?c = wlp \<pi> ?c') = (?c \<sim> ?c')",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.wp_equiv_iff",
     "(ALL \<pi>. wp \<pi> ?c = wp \<pi> ?c') = (?c \<sim> ?c')",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.big_imp_small",
     "?\<pi>: ?cs \<Rightarrow> ?t ==>
      small_steps ?\<pi> ?cs (Some (SKIP, ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Semantics.small_imp_big_fail",
     "small_steps ?\<pi> ?cs None ==>
      \<nexists>t. ?\<pi>: ?cs \<Rightarrow> t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_negation
        (template_predicate (template_app (template_hole 1, t_empty))))),
    ("Semantics.small_imp_big",
     "small_steps ?\<pi> ?cs\<^sub>1 (Some (SKIP, ?s\<^sub>2)) ==>
      ?\<pi>: ?cs\<^sub>1 \<Rightarrow> ?s\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantics.equiv_trans",
     "[| ?c \<sim> ?c'; ?c' \<sim> ?c'' |] ==> ?c \<sim> ?c''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Semantics.wlp_arraycpy_eq",
     "wlp ?\<pi> (?x[] ::= ?a) ?Q ?s = ?Q (?s(?x := ?s ?a))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_app (template_var 0, template_var 2))))),
    ("Semantics.wp_arraycpy_eq",
     "wp ?\<pi> (?x[] ::= ?a) ?Q ?s = ?Q (?s(?x := ?s ?a))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3),
           template_app (template_var 0, template_var 2))))),
    ("Semantics.small_steps_determ",
     "small_steps ?\<pi> ?cs None ==>
      ~ small_steps ?\<pi> ?cs (Some (SKIP, ?t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_hole 4)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0)))
               )
           ))),
    ("Semantics.ArrayInit_simp",
     "?\<pi>: (CLEAR ?x[], ?s) \<Rightarrow> ?t = (?t = ?s(?x := %_. 0))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           t_empty)))),
    ("Semantics.PScope_simp",
     "?\<pi>: (PScope ?\<pi>' ?p, ?s) \<Rightarrow> ?t =
      ?\<pi>': (?p, ?s) \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Semantics.localize_recursion",
     "?\<pi>': (PScope ?\<pi> ?c, ?s) \<Rightarrow> ?t =
      ?\<pi>: (?c, ?s) \<Rightarrow> ?t",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 4),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Semantics.combine_cases",
     "(!!l g. ?s = <l|g> ==> ?thesis) ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.sp_seq_eq",
     "sp ?\<pi> ?P (?c\<^sub>1;; ?c\<^sub>2) ?t =
      sp ?\<pi> (sp ?\<pi> ?P ?c\<^sub>1) ?c\<^sub>2 ?t",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Semantics.wlp_seq_eq",
     "wlp ?\<pi> (?c\<^sub>1;; ?c\<^sub>2) ?Q ?s =
      wlp ?\<pi> ?c\<^sub>1 (wlp ?\<pi> ?c\<^sub>2 ?Q) ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Semantics.wp_seq_eq",
     "wp ?\<pi> (?c\<^sub>1;; ?c\<^sub>2) ?Q ?s =
      wp ?\<pi> ?c\<^sub>1 (wp ?\<pi> ?c\<^sub>2 ?Q) ?s",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Semantics.ArrayCpy_simp",
     "?\<pi>: (?x[] ::= ?y, ?s) \<Rightarrow> ?t = (?t = ?s(?x := ?s ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_app (template_var 1, template_var 2))))),
    ("Semantics.ArrayClear'",
     "?s' = ?s(?x := %_. 0) ==> ?\<pi>: (CLEAR ?x[], ?s) \<Rightarrow> ?s'",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1),
            t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 2)),
             template_var 3)
           ))),
    ("Semantics.combine_upd",
     "is_global ?x ==> <?s|?t>(?x := ?v) = <?s|?t(?x := ?v)>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3),
             template_var 0))))),
    ("Semantics.ArrayCpy'",
     "?s' = ?s(?x := ?s ?y) ==>
      ?\<pi>: (?x[] ::= ?y, ?s) \<Rightarrow> ?s'",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2),
            template_app (template_var 3, template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)),
                 template_var 3)),
             template_var 4)
           ))),
    ("Semantics.map_leD",
     "[| ?m \<subseteq>\<^sub>m ?m'; ?m ?x = Some ?v |]
      ==> ?m' ?x = Some ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_app (template_var 3, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app (template_var 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Semantics.smalls_big_append",
     "[| small_steps ?\<pi> ?cs\<^sub>1 (Some ?cs\<^sub>2);
         ?\<pi>: ?cs\<^sub>2 \<Rightarrow> ?s\<^sub>3 |]
      ==> ?\<pi>: ?cs\<^sub>1 \<Rightarrow> ?s\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics.small_steps_append",
     "[| small_steps ?\<pi> ?cs\<^sub>1 (Some ?cs\<^sub>2);
         small_steps ?\<pi> ?cs\<^sub>2 ?cs\<^sub>3 |]
      ==> small_steps ?\<pi> ?cs\<^sub>1 ?cs\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_app (template_hole 0, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics.SkipE",
     "[| ?\<pi>: (SKIP, ?s) \<Rightarrow> ?t; ?t = ?s ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_var 2)],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantics.wlp_scope_eq",
     "wlp ?\<pi> (SCOPE ?c) ?Q ?s =
      wlp ?\<pi> ?c (%s'. ?Q <?s|s'>) <<>|?s>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Semantics.wp_scope_eq",
     "wp ?\<pi> (SCOPE ?c) ?Q ?s = wp ?\<pi> ?c (%s'. ?Q <?s|s'>) <<>|?s>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           t_empty),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Semantics.commute_if",
     "IF ?b1.0 THEN IF ?b2.0 THEN ?c11.0 ELSE ?c12.0 ELSE ?c2.0 \<sim>
      IF ?b2.0 THEN IF ?b1.0 THEN ?c11.0 ELSE ?c2.0
      ELSE IF ?b1.0 THEN ?c12.0 ELSE ?c2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1),
               template_var 0)))
         )),
    ("Semantics.combine_upd",
     "is_local ?x ==> <?s|?t>(?x := ?v) = <?s(?x := ?v)|?t>",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 0)),
           template_var 1)))),
    ("Semantics.equivD",
     "?c \<sim> ?c' ==>
      ?\<pi>: (?c, ?s) \<Rightarrow> ?t =
      ?\<pi>: (?c', ?s) \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Semantics.count_it_ex",
     "?\<pi>: (WHILE ?b DO ?c, ?s) \<Rightarrow> ?t ==>
      EX n. count_it ?\<pi> ?b ?c ?s n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantics.small_big_append",
     "[| small_step ?\<pi> ?cs\<^sub>1 = Some ?cs\<^sub>2;
         ?\<pi>: ?cs\<^sub>2 \<Rightarrow> ?s\<^sub>3 |]
      ==> ?\<pi>: ?cs\<^sub>1 \<Rightarrow> ?s\<^sub>3",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Semantics.wlp_pcall_eq",
     "?\<pi> ?p = Some ?c ==>
      wlp ?\<pi> (PCall ?p) ?Q ?s = wlp ?\<pi> ?c ?Q ?s",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics.wp_pcall_eq",
     "?\<pi> ?p = Some ?c ==>
      wp ?\<pi> (PCall ?p) ?Q ?s = wp ?\<pi> ?c ?Q ?s",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_var 3),
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_app (template_hole 0, template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics.wlp_and_term_imp_wp",
     "wlp ?\<pi> ?c ?Q ?s & ?\<pi>: (?c, ?s) \<Rightarrow> ?t ==>
      wp ?\<pi> ?c ?Q ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Semantics.big_step_mono_prog",
     "[| ?\<pi> \<subseteq>\<^sub>m ?\<pi>';
         ?\<pi>: (?c, ?s) \<Rightarrow> ?t |]
      ==> ?\<pi>': (?c, ?s) \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantics.sim_while_cong",
     "[| bval ?b = bval ?b'; ?c \<sim> ?c' |]
      ==> WHILE ?b DO ?c \<sim> WHILE ?b' DO ?c'",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 3),
          template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Semantics.big_step_determ",
     "[| ?\<pi>: (?c, ?s) \<Rightarrow> ?t;
         ?\<pi>: (?c, ?s) \<Rightarrow> ?u |]
      ==> ?u = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Semantics.count_it_determ",
     "[| count_it ?\<pi> ?b ?c ?s ?n; count_it ?\<pi> ?b ?c ?s ?n' |]
      ==> ?n' = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_var 1))),
    ("Semantics.AssignLocalsE",
     "[| ?\<pi>: (Assign_Locals ?l, ?s) \<Rightarrow> ?t;
         ?t = <?l|?s> ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantics.PCall_simp",
     "?\<pi>: (PCall ?p, ?s) \<Rightarrow> ?t =
      (EX c. ?\<pi> ?p = Some c & ?\<pi>: (c, ?s) \<Rightarrow> ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Semantics.wlp_assign_idx_eq",
     "wlp ?\<pi> (?x[?i] ::= ?a) ?Q ?s =
      ?Q (?s(?x := (?s ?x)(aval ?i ?s := aval ?a ?s)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 0, template_var 4)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("Semantics.wp_assign_idx_eq",
     "wp ?\<pi> (?x[?i] ::= ?a) ?Q ?s =
      ?Q (?s(?x := (?s ?x)(aval ?i ?s := aval ?a ?s)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_var 1,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 0, template_var 4)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("Semantics.wlp_conseq",
     "[| wlp ?\<pi> ?c ?P ?s; !!s. ?P s ==> ?Q s |]
      ==> wlp ?\<pi> ?c ?Q ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Semantics.wp_conseq",
     "[| wp ?\<pi> ?c ?P ?s; !!s. ?P s ==> ?Q s |] ==> wp ?\<pi> ?c ?Q ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Semantics.ArrayInitE",
     "[| ?\<pi>: (CLEAR ?x[], ?s) \<Rightarrow> ?t;
         ?t = ?s(?x := %_. 0) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantics.PScopeE",
     "[| ?\<pi>: (PScope ?\<pi>' ?p, ?s) \<Rightarrow> ?t;
         ?\<pi>': (?p, ?s) \<Rightarrow> ?t ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2)),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantics.wlp_if_eq",
     "wlp ?\<pi> (IF ?b THEN ?c\<^sub>1 ELSE ?c\<^sub>2) ?Q ?s =
      (if bval ?b ?s then wlp ?\<pi> ?c\<^sub>1 ?Q ?s
       else wlp ?\<pi> ?c\<^sub>2 ?Q ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics.wp_if_eq",
     "wp ?\<pi> (IF ?b THEN ?c\<^sub>1 ELSE ?c\<^sub>2) ?Q ?s =
      (if bval ?b ?s then wp ?\<pi> ?c\<^sub>1 ?Q ?s
       else wp ?\<pi> ?c\<^sub>2 ?Q ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Semantics.ArrayCpyE",
     "[| ?\<pi>: (?x[] ::= ?y, ?s) \<Rightarrow> ?t;
         ?t = ?s(?x := ?s ?y) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_app (template_var 2, template_var 3)))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantics.Scope_simp",
     "?\<pi>: (SCOPE ?c, ?s) \<Rightarrow> ?t =
      (EX s'. ?t = <?s|s'> & ?\<pi>: (?c, <<>|?s>) \<Rightarrow> s')",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Semantics.sp_arraycpy_eq",
     "sp ?\<pi> ?P (?x[] ::= ?y) ?t =
      (EX vx. let s = ?t(?x := vx) in ?t ?x = s ?y & ?P s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Semantics.wlp_while_unfold",
     "wlp ?\<pi> (WHILE ?b DO ?c) ?Q ?s =
      (if bval ?b ?s then wlp ?\<pi> ?c (wlp ?\<pi> (WHILE ?b DO ?c) ?Q) ?s
       else ?Q ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Semantics.wp_while_unfold",
     "wp ?\<pi> (WHILE ?b DO ?c) ?Q ?s =
      (if bval ?b ?s then wp ?\<pi> ?c (wp ?\<pi> (WHILE ?b DO ?c) ?Q) ?s
       else ?Q ?s)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Semantics.Seq_simp",
     "?\<pi>: (?c1.0;; ?c2.0, ?s1.0) \<Rightarrow> ?s3.0 =
      (EX s\<^sub>2.
          ?\<pi>: (?c1.0, ?s1.0) \<Rightarrow> s\<^sub>2 &
          ?\<pi>: (?c2.0, s\<^sub>2) \<Rightarrow> ?s3.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Semantics.AssignIdx_simp",
     "?\<pi>: (?x[?i] ::= ?a, ?s) \<Rightarrow> ?t =
      (?t = ?s(?x := (?s ?x)(aval ?i ?s := aval ?a ?s)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_var 4),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 4)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("Semantics.smalls_seq",
     "small_steps ?\<pi> (?c, ?s) (Some (?c', ?s')) ==>
      small_steps ?\<pi> (?c;; ?cx, ?s) (Some (?c';; ?cx, ?s'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_var 3)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 1)))
           ))),
    ("Semantics.smalls_pscope",
     "small_steps ?\<pi>' (?c, ?s) (Some (?c', ?s')) ==>
      small_steps ?\<pi> (PScope ?\<pi>' ?c, ?s)
       (Some (PScope ?\<pi>' ?c', ?s'))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4)),
                 template_var 3)),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2)),
                 template_var 1)))
           ))),
    ("Semantics.sp_arraycpy_eq'",
     "sp ?\<pi> ?P (?x[] ::= ?y) ?t =
      (?t ?x = ?t ?y & (EX vx. ?P (?t(?x := vx, ?y := ?t ?x))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 0, template_var 2)),
                 template_app (template_var 0, template_var 1))),
             template_app (template_hole 1, t_empty))
           ))),
    ("Semantics.Assign'",
     "?s' = ?s(?x := (?s ?x)(aval ?i ?s := aval ?a ?s)) ==>
      ?\<pi>: (?x[?i] ::= ?a, ?s) \<Rightarrow> ?s'",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3),
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_var 4, template_var 3)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 4)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 4))))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 1)),
                 template_var 4)),
             template_var 5)
           ))),
    ("Semantics.adjust_prologue",
     "HT ?\<pi> ?P ?body ?Q ==>
      HT ?\<pi> (wp ?\<pi> ?prologue ?P) (?prologue;; ?body)
       (%s\<^sub>0 s.
           wp ?\<pi> ?prologue (%s\<^sub>0. ?Q s\<^sub>0 s) s\<^sub>0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             t_empty)
           ))),
    ("Semantics.adjust_scope",
     "HT ?\<pi> ?P ?body ?Q ==>
      HT ?\<pi> (%s. ?P <<>|s>) (SCOPE ?body)
       (%s\<^sub>0 s. EX l. ?Q <<>|s\<^sub>0> <l|s>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 3), t_empty),
               template_app (template_hole 1, template_var 1)),
             t_empty)
           ))),
    ("Semantics.sim_while_wlp",
     "[| bval ?b = bval ?b'; wlp ?\<pi> ?c = wlp ?\<pi> ?c' |]
      ==> wlp ?\<pi> (WHILE ?b DO ?c) = wlp ?\<pi> (WHILE ?b' DO ?c')",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 4),
          template_app (template_hole 3, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Semantics.sim_while_wp",
     "[| bval ?b = bval ?b'; wp ?\<pi> ?c = wp ?\<pi> ?c' |]
      ==> wp ?\<pi> (WHILE ?b DO ?c) = wp ?\<pi> (WHILE ?b' DO ?c')",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 4),
          template_app (template_hole 3, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Semantics.wp_modularity_rule",
     "[| HT ?\<pi> ?P ?c ?Q; ?P ?s; !!s'. ?Q ?s s' ==> ?Q' s' |]
      ==> wp ?\<pi> ?c ?Q' ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_var 4, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Semantics.Scope'",
     "[| ?s\<^sub>1 = <<>|?s>; ?\<pi>: (?c, ?s\<^sub>1) \<Rightarrow> ?t;
         ?t' = <?s|?t> |]
      ==> ?\<pi>: (SCOPE ?c, ?s) \<Rightarrow> ?t'",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 5)),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 4)),
             template_var 0)
           ))),
    ("Semantics.wlp_whileI'",
     "[| ?I ?s\<^sub>0;
         !!s. ?I s ==> if bval ?b s then wlp ?\<pi> ?c ?I s else ?Q s |]
      ==> wlp ?\<pi> (WHILE ?b DO ?c) ?Q ?s\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_var 5, template_var 4)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0),
             template_var 4)
           ))),
    ("Semantics.PCallE",
     "[| ?\<pi>: (PCall ?p, ?s) \<Rightarrow> ?t;
         !!c. [| ?\<pi> ?p = Some c; ?\<pi>: (c, ?s) \<Rightarrow> ?t |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.sim_while_cong_aux",
     "[| ?\<pi>: (WHILE ?b DO ?c, ?s) \<Rightarrow> ?t; bval ?b = bval ?b';
         ?c \<sim> ?c' |]
      ==> ?\<pi>: (WHILE ?b' DO ?c', ?s) \<Rightarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 6),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4)),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 1, template_var 5),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, template_var 6),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("Semantics.adjust_epilogue",
     "[| HT ?\<pi> ?P ?body ?Q;
         ALL s. EX t. ?\<pi>: (?epilogue, s) \<Rightarrow> t |]
      ==> HT ?\<pi> ?P (?body;; ?epilogue)
           (%s\<^sub>0. sp ?\<pi> (?Q s\<^sub>0) ?epilogue)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             t_empty)
           ))),
    ("Semantics.AssignIdxE",
     "[| ?\<pi>: (?x[?i] ::= ?a, ?s) \<Rightarrow> ?t;
         ?t = ?s(?x := (?s ?x)(aval ?i ?s := aval ?a ?s)) ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 5),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_var 2, template_var 5)),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Semantics.If_simp",
     "?\<pi>: (IF ?b THEN ?c1.0 ELSE ?c2.0, ?s) \<Rightarrow> ?t =
      (bval ?b ?s & ?\<pi>: (?c1.0, ?s) \<Rightarrow> ?t |
       ~ bval ?b ?s & ?\<pi>: (?c2.0, ?s) \<Rightarrow> ?t)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 5),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 5),
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Semantics.small_seq",
     "[| ?c ~= SKIP; small_step ?\<pi> (?c, ?s) = Some (?c', ?s') |]
      ==> small_step ?\<pi> (?c;; ?cx, ?s) = Some (?c';; ?cx, ?s')",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4),
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 3)),
          template_app
           (template_hole 1,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 0)),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1))))),
    ("Semantics.small_pscope",
     "[| ?c ~= SKIP; small_step ?\<pi>' (?c, ?s) = Some (?c', ?s') |]
      ==> small_step ?\<pi> (PScope ?\<pi>' ?c, ?s) =
          Some (PScope ?\<pi>' ?c', ?s')",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4),
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 3)),
          template_app
           (template_hole 1,
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 5)),
             template_var 3)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_var 1))))),
    ("Semantics.ScopeE",
     "[| ?\<pi>: (SCOPE ?c, ?s) \<Rightarrow> ?t;
         !!s'. [| ?t = <?s|s'>; ?\<pi>: (?c, <<>|?s>) \<Rightarrow> s' |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.SeqE",
     "[| ?\<pi>: (?c1.0;; ?c2.0, ?s1.0) \<Rightarrow> ?s3.0;
         !!s\<^sub>2.
            [| ?\<pi>: (?c1.0, ?s1.0) \<Rightarrow> s\<^sub>2;
               ?\<pi>: (?c2.0, s\<^sub>2) \<Rightarrow> ?s3.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.variant_decreases",
     "[| bval ?b ?s; ?\<pi>: (?c, ?s) \<Rightarrow> ?s';
         ?\<pi>: (WHILE ?b DO ?c, ?s') \<Rightarrow> ?t |]
      ==> variant ?\<pi> ?b ?c ?s' < variant ?\<pi> ?b ?c ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 4)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 5),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 5),
             template_var 2),
           template_var 4)))),
    ("Semantics.sim_while_wlp_aux",
     "[| bval ?b = bval ?b'; wlp ?\<pi> ?c = wlp ?\<pi> ?c';
         ?\<pi>: (WHILE ?b DO ?c, ?s) \<Rightarrow> ?t |]
      ==> ?\<pi>: (WHILE ?b' DO ?c', ?s) \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 6),
          template_app (template_hole 5, template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 4),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 6),
                      template_var 3)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantics.sim_while_wp_aux",
     "[| bval ?b = bval ?b'; wp ?\<pi> ?c = wp ?\<pi> ?c';
         ?\<pi>: (WHILE ?b DO ?c, ?s) \<Rightarrow> ?t |]
      ==> ?\<pi>: (WHILE ?b' DO ?c', ?s) \<Rightarrow> ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 6),
          template_app (template_hole 5, template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 3, template_var 4),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 6),
                      template_var 3)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Semantics.wlp_whileI'_complete",
     "[| wlp ?\<pi> (WHILE ?b DO ?c) ?Q ?s\<^sub>0;
         !!I. [| I ?s\<^sub>0;
                 !!s. I s ==>
                      if bval ?b s then wlp ?\<pi> ?c I s else ?Q s |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.HT_simple_recursiveI",
     "[| wf ?R;
         !!s. [| HT ?\<pi> (%s'. (?f s', ?f s) : ?R & ?P s') ?c ?Q; ?P s |]
              ==> wp ?\<pi> ?c (?Q s) s |]
      ==> HT ?\<pi> ?P ?c ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 5)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Semantics.wp_whileI'",
     "[| wf ?R; ?I ?s\<^sub>0;
         !!s. ?I s ==>
              if bval ?b s then wp ?\<pi> ?c (%s'. ?I s' & (s', s) : ?R) s
              else ?Q s |]
      ==> wp ?\<pi> (WHILE ?b DO ?c) ?Q ?s\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 6)),
        template_predicate (template_app (template_var 5, template_var 4)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0),
             template_var 4)
           ))),
    ("Semantics.HT_simple_recursive_procI",
     "[| wf ?R;
         !!s. [| HT ?\<pi> (%s'. (?f s', ?f s) : ?R & ?P s') (PCall ?p) ?Q;
                 ?P s |]
              ==> wp ?\<pi> (PCall ?p) (?Q s) s |]
      ==> HT ?\<pi> ?P (PCall ?p) ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_var 0)
           ))),
    ("Semantics.HT_conseq",
     "[| HT ?\<pi> ?P ?c ?Q; !!s. ?P' s ==> ?P s;
         !!s\<^sub>0 s.
            [| ?P s\<^sub>0; ?P' s\<^sub>0; ?Q s\<^sub>0 s |]
            ==> ?Q' s\<^sub>0 s |]
      ==> HT ?\<pi> ?P' ?c ?Q'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Semantics.HT_partial_conseq",
     "[| HT_partial ?\<pi> ?P ?c ?Q; !!s. ?P' s ==> ?P s;
         !!s\<^sub>0 s.
            [| ?P s\<^sub>0; ?P' s\<^sub>0; ?Q s\<^sub>0 s |]
            ==> ?Q' s\<^sub>0 s |]
      ==> HT_partial ?\<pi> ?P' ?c ?Q'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 0, t_empty)),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Semantics.wlp_whileI",
     "[| ?I ?\<ss>\<^sub>0;
         !!\<ss>. [| ?I \<ss>; bval ?b \<ss> |] ==> wlp ?\<pi> ?c ?I \<ss>;
         !!\<ss>. [| ?I \<ss>; ~ bval ?b \<ss> |] ==> ?Q \<ss> |]
      ==> wlp ?\<pi> (WHILE ?b DO ?c) ?Q ?\<ss>\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_var 5, template_var 4)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0),
             template_var 4)
           ))),
    ("Semantics.IfE",
     "[| ?\<pi>: (IF ?b THEN ?c1.0 ELSE ?c2.0, ?s) \<Rightarrow> ?t;
         [| bval ?b ?s; ?\<pi>: (?c1.0, ?s) \<Rightarrow> ?t |] ==> ?P;
         [| ~ bval ?b ?s; ?\<pi>: (?c2.0, ?s) \<Rightarrow> ?t |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 6),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 2)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app (template_hole 3, template_var 4),
                       template_var 2)),
                   template_var 1)
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 2)
                   )
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 6),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2)),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Semantics.equivI",
     "[| !!s t \<pi>.
            \<pi>: (?c, s) \<Rightarrow> t ==>
            \<pi>: (?c', s) \<Rightarrow> t;
         !!s t \<pi>.
            \<pi>: (?c', s) \<Rightarrow> t ==>
            \<pi>: (?c, s) \<Rightarrow> t |]
      ==> ?c \<sim> ?c'",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Semantics.HTsetI",
     "[| wf ?R;
         !!P c Q s\<^sub>0.
            [| HTset_r (%c' s'. ((c', s'), c, s\<^sub>0) : ?R) ?\<pi>
                ?\<Theta>;
               (P, c, Q) : ?\<Theta>; P s\<^sub>0 |]
            ==> wp ?\<pi> c (Q s\<^sub>0) s\<^sub>0 |]
      ==> HTset ?\<pi> ?\<Theta>",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Semantics.WhileE",
     "[| ?\<pi>: (WHILE ?b DO ?c, ?s) \<Rightarrow> ?t;
         [| ?t = ?s; ~ bval ?b ?s |] ==> ?P;
         !!s\<^sub>2.
            [| bval ?b ?s; ?\<pi>: (?c, ?s) \<Rightarrow> s\<^sub>2;
               ?\<pi>: (WHILE ?b DO ?c, s\<^sub>2) \<Rightarrow> ?t |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 1, template_var 2)],
          template_implication
           ([template_negation
              (
                 template_predicate
                  (
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 2)
                     )
                 )],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.wp_whileI",
     "[| wf ?R; ?I ?\<ss>\<^sub>0;
         !!\<ss>.
            [| ?I \<ss>; bval ?b \<ss> |]
            ==> wp ?\<pi> ?c (%\<ss>'. ?I \<ss>' & (\<ss>', \<ss>) : ?R)
                 \<ss>;
         !!\<ss>. [| ?I \<ss>; ~ bval ?b \<ss> |] ==> ?Q \<ss> |]
      ==> wp ?\<pi> (WHILE ?b DO ?c) ?Q ?\<ss>\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 6)),
        template_predicate (template_app (template_var 5, template_var 4)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0),
             template_var 4)
           ))),
    ("Semantics.wp_whileI'_complete",
     "[| wp ?\<pi> (WHILE ?b DO ?c) ?Q ?s\<^sub>0;
         !!I. [| wf (measure (variant ?\<pi> ?b ?c)); I ?s\<^sub>0;
                 !!s. I s ==>
                      if bval ?b s
                      then wp ?\<pi> ?c
                            (%s'. I s' &
                                  (s', s) : measure (variant ?\<pi> ?b ?c))
                            s
                      else ?Q s |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_app
                   (template_app (template_hole 10, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.big_step_induct",
     "[| ?x1a: (?x2a, ?x2b) \<Rightarrow> ?x3a;
         !!\<pi> s. ?P \<pi> SKIP s s;
         !!\<pi> x i a s.
            ?P \<pi> (x[i] ::= a) s (s(x := (s x)(aval i s := aval a s)));
         !!\<pi> x y s. ?P \<pi> (x[] ::= y) s (s(x := s y));
         !!\<pi> x s. ?P \<pi> (CLEAR x[]) s (s(x := %_. 0));
         !!\<pi> l s. ?P \<pi> (Assign_Locals l) s <l|s>;
         !!\<pi> c\<^sub>1 s\<^sub>1 s\<^sub>2 c\<^sub>2 s\<^sub>3.
            [| \<pi>: (c\<^sub>1, s\<^sub>1) \<Rightarrow> s\<^sub>2;
               ?P \<pi> c\<^sub>1 s\<^sub>1 s\<^sub>2;
               \<pi>: (c\<^sub>2, s\<^sub>2) \<Rightarrow> s\<^sub>3;
               ?P \<pi> c\<^sub>2 s\<^sub>2 s\<^sub>3 |]
            ==> ?P \<pi> (c\<^sub>1;; c\<^sub>2) s\<^sub>1 s\<^sub>3;
         !!b s \<pi> c\<^sub>1 t c\<^sub>2.
            [| bval b s; \<pi>: (c\<^sub>1, s) \<Rightarrow> t;
               ?P \<pi> c\<^sub>1 s t |]
            ==> ?P \<pi> (IF b THEN c\<^sub>1 ELSE c\<^sub>2) s t;
         !!b s \<pi> c\<^sub>2 t c\<^sub>1.
            [| ~ bval b s; \<pi>: (c\<^sub>2, s) \<Rightarrow> t;
               ?P \<pi> c\<^sub>2 s t |]
            ==> ?P \<pi> (IF b THEN c\<^sub>1 ELSE c\<^sub>2) s t;
         !!\<pi> c s s'.
            [| \<pi>: (c, <<>|s>) \<Rightarrow> s'; ?P \<pi> c <<>|s> s' |]
            ==> ?P \<pi> (SCOPE c) s <s|s'>;
         !!b s \<pi> c. ~ bval b s ==> ?P \<pi> (WHILE b DO c) s s;
         !!b s\<^sub>1 \<pi> c s\<^sub>2 s\<^sub>3.
            [| bval b s\<^sub>1;
               \<pi>: (c, s\<^sub>1) \<Rightarrow> s\<^sub>2;
               ?P \<pi> c s\<^sub>1 s\<^sub>2;
               \<pi>: (WHILE b DO c, s\<^sub>2) \<Rightarrow> s\<^sub>3;
               ?P \<pi> (WHILE b DO c) s\<^sub>2 s\<^sub>3 |]
            ==> ?P \<pi> (WHILE b DO c) s\<^sub>1 s\<^sub>3;
         !!\<pi> p c s t.
            [| \<pi> p = Some c; \<pi>: (c, s) \<Rightarrow> t;
               ?P \<pi> c s t |]
            ==> ?P \<pi> (PCall p) s t;
         !!\<pi>' c s t \<pi>.
            [| \<pi>': (c, s) \<Rightarrow> t; ?P \<pi>' c s t |]
            ==> ?P \<pi> (PScope \<pi>' c) s t |]
      ==> ?P ?x1a ?x2a ?x2b ?x3a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 28, template_var 4),
                template_app
                 (template_app (template_hole 27, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.SemanticsMoreTemplates"
### 0.449s elapsed time, 0.675s cpu time, 0.094s GC time
val it = (): unit
