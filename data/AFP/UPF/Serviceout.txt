Loading theory "Draft.Monads" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF" via "Draft.Normalisation" via "Draft.SeqComposition" via "Draft.ElementaryPolicies" via "Draft.UPFCore")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.106s elapsed time, 0.444s cpu time, 0.020s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.220s elapsed time, 0.878s cpu time, 0.099s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
### theory "HOL-Library.Nat_Bijection"
### 0.307s elapsed time, 1.230s cpu time, 0.099s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Monads"
### 0.501s elapsed time, 1.998s cpu time, 0.178s GC time
Loading theory "Draft.UPFCore" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF" via "Draft.Normalisation" via "Draft.SeqComposition" via "Draft.ElementaryPolicies")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.028s elapsed time, 3.893s cpu time, 0.868s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "Draft.UPFCore"
### 0.876s elapsed time, 3.175s cpu time, 0.861s GC time
Loading theory "Draft.ElementaryPolicies" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF" via "Draft.Normalisation" via "Draft.SeqComposition")
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.146s elapsed time, 4.184s cpu time, 0.960s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.ElementaryPolicies"
### 0.154s elapsed time, 0.372s cpu time, 0.000s GC time
Loading theory "Draft.ParallelComposition" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF" via "Draft.Normalisation")
Loading theory "Draft.SeqComposition" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF" via "Draft.Normalisation")
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.ParallelComposition"
### 0.216s elapsed time, 0.665s cpu time, 0.082s GC time
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.SeqComposition"
### 0.428s elapsed time, 1.134s cpu time, 0.160s GC time
Loading theory "Draft.Analysis" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF")
Loading theory "Draft.Normalisation" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.120s elapsed time, 7.072s cpu time, 1.325s GC time
Loading theory "Draft.Templates" (required by "Draft.ServiceMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.Analysis"
### 0.289s elapsed time, 0.886s cpu time, 0.126s GC time
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.059s elapsed time, 0.164s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ServiceMoreTemplates")
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Found termination order: "(%p. length (fst (snd p))) <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.579s elapsed time, 1.234s cpu time, 0.154s GC time
### theory "Draft.Normalisation"
### 0.931s elapsed time, 2.201s cpu time, 0.280s GC time
Loading theory "Draft.NormalisationTestSpecification" (required by "Draft.ServiceMoreTemplates" via "Draft.Service" via "Draft.UPF")
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
### theory "Draft.NormalisationTestSpecification"
### 0.241s elapsed time, 0.294s cpu time, 0.065s GC time
Loading theory "Draft.UPF" (required by "Draft.ServiceMoreTemplates" via "Draft.Service")
### theory "Draft.UPF"
### 0.147s elapsed time, 0.148s cpu time, 0.000s GC time
Loading theory "Draft.Service" (required by "Draft.ServiceMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### Missing patterns in function definition:
### !!v va vb. contentOfOp (createSCR v va vb) = undefined
### !!v va vb vc. contentOfOp (deleteEntry v va vb vc) = undefined
### !!v va vb vc. contentOfOp (readEntry v va vb vc) = undefined
### (5 more)
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Service"
### 6.771s elapsed time, 9.329s cpu time, 2.618s GC time
Loading theory "Draft.ServiceMoreTemplates"
val templateLemmas =
   [("Service.LRsimps",
     "addLRPolicy ?x =
      (if is_addLR (fst ?x) then \<lfloor>allow ()\<rfloor>
       else \<bottom>)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Service.LRsimps",
     "createSCRPolicy ?x =
      (if is_createSCR (fst ?x) then \<lfloor>allow ()\<rfloor>
       else \<bottom>)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Service.SEsimps",
     "get_entry ?S ?p ?e_id =
      (case ?S ?p of \<bottom> => \<bottom>
       | \<lfloor>Scr\<rfloor> => Scr ?e_id)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), t_empty),
         template_app (template_var 2, template_var 1)))),
    ("Service.SEsimps",
     "userHasAccess ?u ?e = (fst ?e = Open | fst (snd ?e) = ?u)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0))),
               template_var 1))
           ))),
    ("Service.SEsimps",
     "deleteEntrySE ?x =
      (case ?x of (createSCR int1 role x, S) => \<emptyset> x
       | (appendEntry int1 role int2 int3 x, S) => \<emptyset> x
       | (deleteEntry u r p e_id, S) =>
           case get_entry S p e_id of \<bottom> => \<bottom>
           | \<lfloor>e\<rfloor> =>
               if userHasAccess u e then \<lfloor>allow ()\<rfloor>
               else \<lfloor>deny ()\<rfloor>
       | (readEntry int1 role int2 x, S) => \<emptyset> x
       | (readSCR int1 role x, S) => \<emptyset> x
       | (addLR int1 role int2 int3 x, S) => \<emptyset> x
       | (removeLR int1 role int2 x, S) => \<emptyset> x
       | (changeStatus int1 role int2 int3 x, S) => \<emptyset> x
       | (deleteSCR int1 role x, S) => \<emptyset> x
       | (editEntry int1 role int2 int3 x, S) => \<emptyset> x)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app (template_hole 10, t_empty), template_var 0))),
    ("Service.SEsimps",
     "editEntrySE ?x =
      (case ?x of (createSCR int1 role x, S) => \<emptyset> x
       | (appendEntry int1 role int2 int3 x, S) => \<emptyset> x
       | (deleteEntry int1 role int2 x, S) => \<emptyset> x
       | (readEntry int1 role int2 x, S) => \<emptyset> x
       | (readSCR int1 role x, S) => \<emptyset> x
       | (addLR int1 role int2 int3 x, S) => \<emptyset> x
       | (removeLR int1 role int2 x, S) => \<emptyset> x
       | (changeStatus int1 role int2 int3 x, S) => \<emptyset> x
       | (deleteSCR int1 role x, S) => \<emptyset> x
       | (editEntry u r p e_id s, S) =>
           case get_entry S p e_id of \<bottom> => \<bottom>
           | \<lfloor>e\<rfloor> =>
               if userHasAccess u e then \<lfloor>allow ()\<rfloor>
               else \<lfloor>deny ()\<rfloor>)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app (template_hole 10, t_empty), template_var 0))),
    ("Service.SEsimps",
     "readEntrySE ?x =
      (case ?x of (createSCR int1 role x, S) => \<emptyset> x
       | (appendEntry int1 role int2 int3 x, S) => \<emptyset> x
       | (deleteEntry int1 role int2 x, S) => \<emptyset> x
       | (readEntry u r p e_id, S) =>
           case get_entry S p e_id of \<bottom> => \<bottom>
           | \<lfloor>e\<rfloor> =>
               if userHasAccess u e then \<lfloor>allow ()\<rfloor>
               else \<lfloor>deny ()\<rfloor>
       | (readSCR int1 role x, S) => \<emptyset> x
       | (addLR int1 role int2 int3 x, S) => \<emptyset> x
       | (removeLR int1 role int2 x, S) => \<emptyset> x
       | (changeStatus int1 role int2 int3 x, S) => \<emptyset> x
       | (deleteSCR int1 role x, S) => \<emptyset> x
       | (editEntry int1 role int2 int3 x, S) => \<emptyset> x)",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app (template_hole 10, t_empty), template_var 0)))]:
   (string * thm * template) list
### theory "Draft.ServiceMoreTemplates"
### 0.436s elapsed time, 0.652s cpu time, 0.063s GC time
val it = (): unit
