   [("ICAInstance.finitnpC", "finite (PR - ?C)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("ICAInstance.finitC", "?C <= PR ==> finite ?C",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 1)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("ICAInstance.fiX_lbound", "?f ?p - \<Delta> <= fiX ?f ?p ?l",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2, template_app (template_var 2, template_var 1)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("ICAInstance.fiX_ubound", "fiX ?f ?p ?l <= ?f ?p + \<Delta>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 2, template_var 1)),
         template_hole 0))),
    ("ICAInstance.abs_fiX_bound",
     "\<bar>fiX ?f ?p ?l - ?f ?p\<bar> <= \<Delta>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app (template_var 2, template_var 1))),
       template_hole 0)),
    ("ICAInstance.sum_abs_triangle_ineq",
     "finite ?S ==> \<bar>sum ?f ?S\<bar> <= (SUM l:?S. \<bar>?f l\<bar>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)),
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("ICAInstance.sum_div_card",
     "sum ?f {..<?n} + ?q * real ?n = (SUM l<?n. ?f l + ?q)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 2, template_var 1)))),
    ("ICAInstance.sum_le",
     "[| finite ?S; ALL r:?S. ?f r <= ?b |]
      ==> sum ?f ?S <= real (card ?S) * ?b",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 3, t_empty), template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 0)))),
    ("ICAInstance.trans_inv'",
     "sum (fiX (%y. ?f y + ?x) ?p) {..<?np'} =
      sum (fiX ?f ?p) {..<?np'} + real ?np' * ?x",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("ICAInstance.sum_np_eq",
     "?C <= PR ==> sum ?f {..<np} = sum ?f ?C + sum ?f ({..<np} - ?C)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 6)],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, t_empty), template_var 1)),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_hole 2)),
               template_var 1)))))),
    ("ICAInstance.abs_sum_np_ineq",
     "?C <= PR ==>
      \<bar>sum ?f {..<np}\<bar>
      <= (SUM l:?C. \<bar>?f l\<bar>) +
         (SUM l:{..<np} - ?C. \<bar>?f l\<bar>)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 7)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, t_empty), template_var 1)),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 3, template_hole 2)),
               template_var 1)))))),
    ("ICAInstance.bound_aux",
     "[| ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?x; ?p : ?C;
         ?q : ?C |]
      ==> \<bar>fiX ?f ?p ?r - ?f ?q\<bar> <= ?x + \<Delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_app (template_var 4, template_var 1))),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_hole 0)))),
    ("ICAInstance.bound_aux_C",
     "[| ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?x; ?p : ?C;
         ?q : ?C; ?r : ?C |]
      ==> \<bar>fiX ?f ?p ?r - ?f ?q\<bar> <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 0)),
             template_app (template_var 4, template_var 1))),
         template_var 3))),
    ("ICAInstance.accur_pres",
     "[| ?C <= PR; ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?x;
         ?p : ?C; ?q : ?C |]
      ==> \<bar>cfni ?p ?f - ?f ?q\<bar>
          <= (real (card ?C) * ?x +
              real (card ({..<np} - ?C)) * (?x + \<Delta>)) /
             real np",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_hole 15),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 4), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_var 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 3)),
             template_app (template_var 3, template_var 0))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 4))),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_hole 1)),
                         template_var 4)))),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_hole 0)))),
           template_app (template_hole 5, template_hole 1))))),
    ("ICAInstance.abs_dif_fiX_bound",
     "[| ALL l:?C. \<bar>?f l - ?g l\<bar> <= ?x;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y; ?p : ?C;
         ?q : ?C |]
      ==> \<bar>fiX ?f ?p ?r - fiX ?g ?q ?r\<bar>
          <= 2 * \<Delta> + ?x + ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 7)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_hole 0)),
               template_var 4)),
           template_var 3)))),
    ("ICAInstance.abs_dif_fiX_bound_C_aux1",
     "[| ALL l:?C. \<bar>?f l - ?g l\<bar> <= ?x;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y;
         ALL l:?C. ALL m:?C. \<bar>?g l - ?g m\<bar> <= ?y; ?p : ?C;
         ?q : ?C; ?r : ?C |]
      ==> \<bar>fiX ?f ?p ?r - fiX ?g ?q ?r\<bar> <= ?x + ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 7)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 3)))),
    ("ICAInstance.abs_dif_fiX_bound_C_aux2",
     "[| ALL l:?C. \<bar>?f l - ?g l\<bar> <= ?x;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y;
         ALL l:?C. ALL m:?C. \<bar>?g l - ?g m\<bar> <= ?y; ?p : ?C;
         ?q : ?C; ?r : ?C |]
      ==> ?y <= \<Delta> --> \<bar>fiX ?f ?p ?r - fiX ?g ?q ?r\<bar> <= ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_hole 1)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 6),
                           template_var 2),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 1),
                       template_var 0)))),
               template_var 4))
           ))),
    ("ICAInstance.abs_dif_fiX_bound_C",
     "[| ALL l:?C. \<bar>?f l - ?g l\<bar> <= ?x;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y;
         ALL l:?C. ALL m:?C. \<bar>?g l - ?g m\<bar> <= ?y; ?p : ?C;
         ?q : ?C; ?r : ?C |]
      ==> \<bar>fiX ?f ?p ?r - fiX ?g ?q ?r\<bar>
          <= ?x + (if ?y <= \<Delta> then 0 else ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 7)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_hole 1)),
               template_hole 0),
             template_var 3))))),
    ("ICAInstance.prec_enh",
     "[| ?C <= PR; ALL l:?C. \<bar>?f l - ?g l\<bar> <= ?x;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y;
         ALL l:?C. ALL m:?C. \<bar>?g l - ?g m\<bar> <= ?y; ?p : ?C;
         ?q : ?C |]
      ==> \<bar>cfni ?p ?f - cfni ?q ?g\<bar>
          <= (real (card ?C) * (?x + (if ?y <= \<Delta> then 0 else ?y)) +
              real (card ({..<np} - ?C)) * (2 * \<Delta> + ?x + ?y)) /
             real np",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_hole 20),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 6), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 6), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 6), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_var 6)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 17,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 14, template_var 1),
                 template_var 5)),
             template_app
              (template_app (template_hole 14, template_var 0),
               template_var 4))),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_var 6))),
                   template_app
                    (template_app (template_hole 12, template_var 3),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 18, template_var 2),
                             template_hole 7)),
                         template_hole 6),
                       template_var 2)))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_hole 4, template_hole 3)),
                         template_var 6)))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 1, template_hole 0))),
                           template_hole 7)),
                       template_var 3)),
                   template_var 2)))),
           template_app (template_hole 10, template_hole 3)))))]
