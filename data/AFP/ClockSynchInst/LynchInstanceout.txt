Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.520s cpu time, 0.045s GC time
Loading theory "Draft.LynchInstance" (required by "Draft.LynchInstanceMoreTemplates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.242s elapsed time, 0.980s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.319s elapsed time, 1.277s cpu time, 0.137s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.LynchInstance"
### 0.206s elapsed time, 0.811s cpu time, 0.092s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.765s elapsed time, 2.409s cpu time, 0.334s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.988s elapsed time, 2.937s cpu time, 0.814s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.943s elapsed time, 4.932s cpu time, 1.036s GC time
Loading theory "Draft.Templates" (required by "Draft.LynchInstanceMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.048s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.LynchInstanceMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.480s elapsed time, 0.541s cpu time, 0.074s GC time
Loading theory "Draft.LynchInstanceMoreTemplates"
val templateLemmas =
   [("LynchInstance.finite_kmax", "finite (kmax ?f PR)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("LynchInstance.finite_kmin", "finite (kmin ?f PR)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("LynchInstance.finite_reduce", "finite (reduce ?f PR)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("LynchInstance.reduce_not_empty", "reduce ?f PR ~= {}",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1),
           template_hole 0)
         )),
    ("LynchInstance.trans_inv", "cfnl ?p ?f + ?x = cfnl ?p (%p. ?f p + ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("LynchInstance.kmax_ge",
     "ALL i:kmax ?f PR. ALL r:reduce ?f PR. r <= ?f i",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)),
           t_empty)
         )),
    ("LynchInstance.kmin_le",
     "ALL i:kmin ?f PR. ALL r:reduce ?f PR. ?f i <= r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)),
           t_empty)
         )),
    ("LynchInstance.exist_reduce",
     "ALL c:reduce ?f PR. EX i:PR - (kmax ?f PR Un kmin ?f PR). ?f i = c",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6)),
           t_empty)
         )),
    ("LynchInstance.abs_distrib_div",
     "0 < ?c ==> \<bar>?a / ?c - ?b / ?c\<bar> = \<bar>?a - ?b\<bar> / ?c",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_var 2)))),
    ("LynchInstance.ex_Maxf",
     "[| finite ?S; ?S ~= {} |] ==> EX m:?S. ALL s:?S. ?f s <= ?f m",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("LynchInstance.ex_Minf",
     "[| finite ?S; ?S ~= {} |] ==> EX m:?S. ALL s:?S. ?f m <= ?f s",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("LynchInstance.lboundmin",
     "[| ?C <= PR; np <= card ?C + khl |]
      ==> EX i:?C. ?f i <= Min (reduce ?f PR)",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 9),
        template_inequation
         (less_equals, template_hole 7,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("LynchInstance.uboundmax",
     "[| ?C <= PR; np <= card ?C + khl |]
      ==> EX i:?C. Max (reduce ?f PR) <= ?f i",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 9),
        template_inequation
         (less_equals, template_hole 7,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("LynchInstance.max_shift",
     "[| ?S ~= {}; finite ?S |]
      ==> Max (?f ` ?S) + ?x = (MAX p\<in>?S. ?f p + ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("LynchInstance.min_shift",
     "[| ?S ~= {}; finite ?S |]
      ==> Min (?f ` ?S) + ?x = (MIN p\<in>?S. ?f p + ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("LynchInstance.kmax_prop",
     "kmax ?f PR <= PR &
      card (kmax ?f PR) = khl &
      (ALL i:kmax ?f PR. ALL j:PR - kmax ?f PR. ?f j <= ?f i)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_hole 6))),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)),
               t_empty)))
         )),
    ("LynchInstance.kmin_prop",
     "kmin ?f PR <= PR &
      card (kmin ?f PR) = khl &
      (ALL i:kmin ?f PR. ALL j:PR - kmin ?f PR. ?f i <= ?f j)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_hole 6))),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)),
               t_empty)))
         )),
    ("LynchInstance.subsets_int",
     "[| finite ?A; ?B <= ?A; ?C <= ?A; card ?A < card ?B + card ?C |]
      ==> ?B Int ?C ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 2),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("LynchInstance.reduce_shift",
     "?f ` (PR - (kmax ?f PR Un kmin ?f PR)) =
      ?f ` (PR - (kmax (%p. ?f p + ?c) PR Un kmin (%p. ?f p + ?c) PR))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 4)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 4)))),
       template_app
        (template_app (template_hole 6, template_var 1),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty), template_hole 4)),
             template_app
              (template_app (template_hole 1, t_empty),
               template_hole 4)))))),
    ("LynchInstance.pigeonhole",
     "[| finite ?A; ?B <= ?A; ?C <= ?A; card ?A + ?k <= card ?B + card ?C |]
      ==> ?k <= card (?B Int ?C)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_inequation (less_equals, template_var 2, template_var 3),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 3)),
            template_var 0),
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 2)),
            template_app (template_hole 1, template_var 1)))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("LynchInstance.same_bound",
     "[| ?C <= PR; np <= card ?C + khl; 3 * khl < np |]
      ==> EX i:?C. Min (reduce ?f PR) <= ?f i & ?g i <= Max (reduce ?g PR)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_hole 16),
        template_inequation
         (less_equals, template_hole 14,
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 2)),
            template_hole 11)),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_hole 6))),
            template_hole 11),
          template_hole 14)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2), t_empty)
           ))),
    ("LynchInstance.accur_pres",
     "[| ?C <= PR; np - ?nF <= card ?C; ?nF = khl;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y; ?q : ?C |]
      ==> \<bar>cfnl ?p ?f - ?f ?q\<bar> <= ?y",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_hole 12),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_var 4),
          template_app (template_hole 8, template_var 5)),
        template_equation (template_var 4, template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 5)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app (template_var 3, template_var 1))),
         template_var 2))),
    ("LynchInstance.prec_enh",
     "[| ?C <= PR; np - ?nF <= card ?C; 3 * ?nF < np; ?nF = khl;
         ALL l:?C. \<bar>?f l - ?g l\<bar> <= ?x;
         ALL l:?C. ALL m:?C. \<bar>?f l - ?f m\<bar> <= ?y;
         ALL l:?C. ALL m:?C. \<bar>?g l - ?g m\<bar> <= ?y; ?p : ?C;
         ?q : ?C |]
      ==> \<bar>cfnl ?p ?f - cfnl ?q ?g\<bar> <= ?y / 2 + ?x",
     template_implication
      ([template_inequation (less_equals, template_var 7, template_hole 21),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 19, template_hole 18),
            template_var 6),
          template_app (template_hole 17, template_var 7)),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12))),
            template_var 6),
          template_hole 18),
        template_equation (template_var 6, template_hole 10),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 7)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 5)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 4))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_hole 12)))),
           template_var 3))))]:
   (string * thm * template) list
### theory "Draft.LynchInstanceMoreTemplates"
### 0.271s elapsed time, 0.346s cpu time, 0.000s GC time
val it = (): unit
