Loading theory "HOL-Library.FuncSet" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.Erdos_Rado_Sunflower" via "Draft.Sunflower")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.145s elapsed time, 0.594s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.205s elapsed time, 0.835s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Nat_Bijection"
### 0.329s elapsed time, 1.314s cpu time, 0.119s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.FuncSet"
### 0.404s elapsed time, 1.611s cpu time, 0.119s GC time
Loading theory "Draft.Sunflower" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.Erdos_Rado_Sunflower")
### theory "Draft.Sunflower"
### 0.103s elapsed time, 0.406s cpu time, 0.098s GC time
Loading theory "Draft.Erdos_Rado_Sunflower" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates")
### theory "Draft.Erdos_Rado_Sunflower"
### 0.079s elapsed time, 0.319s cpu time, 0.000s GC time
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
Found termination order: "size <*mlex*> {}"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.953s elapsed time, 3.277s cpu time, 0.900s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.016s elapsed time, 3.193s cpu time, 0.867s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.863s elapsed time, 4.660s cpu time, 1.014s GC time
Loading theory "Draft.Templates" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.063s elapsed time, 0.115s cpu time, 0.052s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Erdos_Rado_SunflowerMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.450s elapsed time, 0.455s cpu time, 0.000s GC time
Loading theory "Draft.Erdos_Rado_SunflowerMoreTemplates"
val templateLemmas =
   [("Erdos_Rado_Sunflower.Erdos_Rado_sunflower",
     "[| ALL A:?F. finite A & card A <= ?k;
         (?r - 1) ^ ?k * fact ?k < card ?F |]
      ==> EX S<=?F. sunflower S & card S = ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 2), t_empty)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_hole 6)),
                template_var 1)),
            template_app (template_hole 5, template_var 1)),
          template_app (template_hole 4, template_var 2))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Erdos_Rado_Sunflower.Erdos_Rado_sunflower_same_card",
     "[| ALL A:?F. finite A & card A = ?k;
         (?r - 1) ^ ?k * fact ?k < card ?F |]
      ==> EX S<=?F. sunflower S & card S = ?r & {} ~: S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2), t_empty)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 0),
                    template_hole 8)),
                template_var 1)),
            template_app (template_hole 7, template_var 1)),
          template_app (template_hole 6, template_var 2))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Erdos_Rado_Sunflower.sunflower_remove_element_lift",
     "[| ?S <= {A - {?a} |A. A : ?F & ?a : A}; sunflower ?S |]
      ==> EX Sa.
             sunflower Sa &
             Sa <= ?F & card Sa = card ?S & Sa = insert ?a ` ?S",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 14, t_empty)),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Erdos_Rado_Sunflower.Erdos_Rado_sunflower_nonempty_core",
     "[| finite ?E; ALL A:?F. A <= ?E & card A <= ?k; {} ~: ?F;
         card ?E * (?r - 1) ^ ?k * fact ?k < card ?F |]
      ==> EX S<=?F. sunflower S & card S = ?r & \<Inter> S ~= {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 2), t_empty)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_var 2)
                )
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 11,
                  template_app (template_hole 16, template_var 3)),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 0),
                      template_hole 8)),
                  template_var 1))),
            template_app (template_hole 7, template_var 1)),
          template_app (template_hole 6, template_var 2))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Erdos_Rado_Sunflower.sunflower_lower_bound",
     "[| infinite UNIV; ?r ~= 0; ?r = 1 ==> ?k ~= 0 |]
      ==> EX F. card F = (?r - 1) ^ ?k &
                finite F &
                (ALL A:F. finite A & card A = ?k) &
                ~ (EX S<=F. sunflower S & ?r <= card S)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 15, template_hole 14))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_implication
         ([template_equation (template_var 1, template_hole 11)],
          template_negation
           (template_equation (template_var 0, template_hole 12)))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Erdos_Rado_Sunflower.Erdos_Rado_sunflower_card_core",
     "[| finite ?E; ALL A:?F. A <= ?E & ?s <= card A & card A <= ?k;
         (card ?E choose ?s) * (?r - 1) ^ ?k * fact ?k < card ?F; ?s ~= 0;
         ?r ~= 0 |]
      ==> EX S<=?F. sunflower S & card S = ?r & ?s <= card (\<Inter> S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3), t_empty)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 15, template_var 4)),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 0),
                      template_hole 9)),
                  template_var 1))),
            template_app (template_hole 8, template_var 1)),
          template_app (template_hole 7, template_var 3)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Erdos_Rado_SunflowerMoreTemplates"
### 0.310s elapsed time, 0.432s cpu time, 0.055s GC time
val it = (): unit
