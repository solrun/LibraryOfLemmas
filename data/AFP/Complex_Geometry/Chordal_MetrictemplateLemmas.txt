   [("Chordal_Metric.dist_fs_zero1", "dist_fs ?z ?z = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Chordal_Metric.dist_rieman_sphere_zero",
     "dist_riemann_sphere' ?M ?M = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Chordal_Metric.dist_riemann_sphere_ge_0",
     "0 <= dist_riemann_sphere' ?M1.0 ?M2.0",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chordal_Metric.real_inprod_cvec", "is_real \<langle>?z,?z\<rangle>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 0)),
       template_hole 0)),
    ("Chordal_Metric.inprod_cvec_ge_zero",
     "0 <= Re \<langle>?z,?z\<rangle>",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Chordal_Metric.dist_fs_sym",
     "dist_fs ?z1.0 ?z2.0 = dist_fs ?z2.0 ?z1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Chordal_Metric.dist_riemann_sphere_sym",
     "dist_riemann_sphere' ?M1.0 ?M2.0 = dist_riemann_sphere' ?M2.0 ?M1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Chordal_Metric.dist_stereographic'",
     "dist_fs ?A ?B =
      dist_riemann_sphere' (inv_stereographic ?A) (inv_stereographic ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Chordal_Metric.dist_stereographic",
     "dist_riemann_sphere' ?M1.0 ?M2.0 =
      dist_fs (stereographic ?M1.0) (stereographic ?M2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Chordal_Metric.norm_cvec_gt_0",
     "?z ~= vec_zero ==> 0 < \<langle>?z\<rangle>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Chordal_Metric.dist_fs_zero2",
     "dist_fs ?z1.0 ?z2.0 = 0 ==> ?z1.0 = ?z2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation (template_var 1, template_var 0))),
    ("Chordal_Metric.sqrt_1_plus_square", "sqrt (1 + ?a\<^sup>2) ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))))),
           template_hole 0)
         )),
    ("Chordal_Metric.norm_cvec_square",
     "\<langle>?z\<rangle>\<^sup>2 = Re \<langle>?z,?z\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Chordal_Metric.dist_fs_triangle",
     "dist_fs ?A ?B <= dist_fs ?A ?C + dist_fs ?C ?B",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Chordal_Metric.inprod_cvec_g_zero",
     "?z ~= vec_zero ==> 0 < Re \<langle>?z,?z\<rangle>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))))),
    ("Chordal_Metric.chordal_circle_det_positive",
     "?x * ?y < 0 ==> 0 < ?x / (?x - ?y)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Chordal_Metric.cor_sqrt_squared",
     "0 <= ?x ==> (cor (sqrt ?x))\<^sup>2 = cor ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Chordal_Metric.inprod_cvec_bilinear2",
     "?z' = ?k *\<^sub>s\<^sub>v ?z ==>
      \<langle>?w,?z'\<rangle> = ?k * \<langle>?w,?z\<rangle>",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Chordal_Metric.inprod_cvec_bilinear1",
     "?z' = ?k *\<^sub>s\<^sub>v ?z ==>
      \<langle>?z',?w\<rangle> = cnj ?k * \<langle>?z,?w\<rangle>",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Chordal_Metric.dist_fs_infinite2",
     "dist_fs \<infinity>\<^sub>h (of_complex ?z1.0) =
      2 / sqrt (1 + (cmod ?z1.0)\<^sup>2)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_hole 11),
         template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 7, template_hole 6)))))))),
    ("Chordal_Metric.dist_fs_infinite1",
     "dist_fs (of_complex ?z1.0) \<infinity>\<^sub>h =
      2 / sqrt (1 + (cmod ?z1.0)\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 0)),
         template_hole 10),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 7, template_hole 6)))))))),
    ("Chordal_Metric.chordal_circle_cmat_hermitean_nonzero",
     "?a ~= vec_zero ==>
      chordal_circle_cvec_cmat ?a ?r : hermitean_nonzero",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Chordal_Metric.norm_cvec_scale",
     "?z' = ?k *\<^sub>s\<^sub>v ?z ==>
      \<langle>?z'\<rangle>\<^sup>2 =
      Re (cnj ?k * ?k) * \<langle>?z\<rangle>\<^sup>2",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 2)),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))))))),
    ("Chordal_Metric.dist_stereographic_infinite",
     "[| stereographic ?M1.0 = \<infinity>\<^sub>h;
         stereographic ?M2.0 = of_complex ?m2.0 |]
      ==> dist_riemann_sphere' ?M1.0 ?M2.0 =
          2 / sqrt (1 + (cmod ?m2.0)\<^sup>2)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 2),
          template_hole 13),
        template_equation
         (template_app (template_hole 14, template_var 1),
          template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6))),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 7, template_hole 6))))))))),
    ("Chordal_Metric.dist_fs_finite",
     "dist_fs (of_complex ?z1.0) (of_complex ?z2.0) =
      2 * cmod (?z1.0 - ?z2.0) /
      (sqrt (1 + (cmod ?z1.0)\<^sup>2) * sqrt (1 + (cmod ?z2.0)\<^sup>2))",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app (template_hole 12, template_var 1)),
         template_app (template_hole 12, template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 6, template_var 1)),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 8, template_hole 7)))))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_hole 7))))))))),
    ("Chordal_Metric.continuous_on_iff",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL e>0.
             EX d>0. ALL x':?s. dist x' x < d --> dist (?f x') (?f x) < e)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, template_var 1), t_empty))),
    ("Chordal_Metric.dist_fs_cvec_zero",
     "[| ?z ~= vec_zero; ?w ~= vec_zero |]
      ==> (dist_fs_cvec ?z ?w = 0) =
          ((cmod \<langle>?z,?w\<rangle>)\<^sup>2 =
           \<langle>?z\<rangle>\<^sup>2 * \<langle>?w\<rangle>\<^sup>2)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0),
           template_hole 8),
         template_equation
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 0, template_var 1)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 0, template_var 0)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))))),
    ("Chordal_Metric.Lim_within",
     "(?f \<longlongrightarrow> ?l) (at ?a within ?S) =
      (ALL e>0.
          EX d>0.
             ALL x:?S.
                0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 3),
           template_app (template_hole 10, template_var 2)),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Chordal_Metric.dist_fs_cvec_iff",
     "[| ?z ~= vec_zero; ?w ~= vec_zero |]
      ==> dist_fs_cvec ?z ?w =
          2 *
          sqrt
           (1 -
            (cmod \<langle>?z,?w\<rangle>)\<^sup>2 /
            (\<langle>?z\<rangle>\<^sup>2 * \<langle>?w\<rangle>\<^sup>2))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_equation
        (template_app
          (template_app (template_hole 13, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app (template_hole 10, template_hole 9))),
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 1),
                           template_var 0))),
                     template_app
                      (template_hole 1,
                       template_app (template_hole 10, template_hole 9)))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 0, template_var 1)),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 10, template_hole 9)))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 0, template_var 0)),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 10, template_hole 9))))))))))),
    ("Chordal_Metric.chordal_circle1",
     "[| is_real ?A; is_real ?D; Re (?A * ?D) < 0;
         ?r = sqrt (Re (4 * ?A / (?A - ?D))) |]
      ==> mk_circline ?A 0 0 ?D = chordal_circle \<infinity>\<^sub>h ?r",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_hole 14),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_hole 14),
        template_inequation
         (less_than,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)),
          template_hole 14),
        template_equation
         (template_var 0,
          template_app
           (template_hole 10,
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 7, template_hole 6)))),
                    template_var 2)),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2),
             template_hole 2),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Chordal_Metric.chordal_circle2",
     "[| is_real ?A; is_real ?D; Re (?A * ?D) < 0;
         ?r = sqrt (Re (4 * ?D / (?D - ?A))) |]
      ==> mk_circline ?A 0 0 ?D = chordal_circle 0\<^sub>h ?r",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_hole 14),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_hole 14),
        template_inequation
         (less_than,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)),
          template_hole 14),
        template_equation
         (template_var 0,
          template_app
           (template_hole 10,
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 7, template_hole 6)))),
                    template_var 1)),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 2)))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2),
             template_hole 2),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Chordal_Metric.dist_stereographic_finite",
     "[| stereographic ?M1.0 = of_complex ?m1.0;
         stereographic ?M2.0 = of_complex ?m2.0 |]
      ==> dist_riemann_sphere' ?M1.0 ?M2.0 =
          2 * cmod (?m1.0 - ?m2.0) /
          (sqrt (1 + (cmod ?m1.0)\<^sup>2) *
           sqrt (1 + (cmod ?m2.0)\<^sup>2))",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 3),
          template_app (template_hole 14, template_var 2)),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 3), template_var 1),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 6, template_var 2)),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 8, template_hole 7)))))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 6, template_var 0)),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 8, template_hole 7)))))))))),
    ("Chordal_Metric.dist_fs_triangle_infinite2",
     "1 / sqrt (1 + (cmod ?a)\<^sup>2)
      <= cmod (?a - ?c) /
         (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2)) +
         1 / sqrt (1 + (cmod ?c)\<^sup>2)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 10, template_hole 9),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 9),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 9),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 1)),
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3, template_hole 2)))))),
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 0)),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3, template_hole 2)))))))),
         template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 9),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))))))))),
    ("Chordal_Metric.dist_fs_triangle_infinite1",
     "1 / sqrt (1 + (cmod ?b)\<^sup>2)
      <= 1 / sqrt (1 + (cmod ?c)\<^sup>2) +
         cmod (?b - ?c) /
         (sqrt (1 + (cmod ?b)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2))",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 10, template_hole 9),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 9),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))))))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)))))),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3, template_hole 2)))))))))),
    ("Chordal_Metric.dist_fs_triangle_infinite3",
     "cmod (?a - ?b) /
      (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?b)\<^sup>2))
      <= 1 / sqrt (1 + (cmod ?a)\<^sup>2) +
         1 / sqrt (1 + (cmod ?b)\<^sup>2)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 1)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))))),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 9, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 10, template_hole 4),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 1)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))))))),
         template_app
          (template_app (template_hole 10, template_hole 4),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 9, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Chordal_Metric.dist_riemann_sphere_r3_inner",
     "[| ?M1.0 : unit_sphere; ?M2.0 : unit_sphere |]
      ==> (dist_riemann_sphere_r3 ?M1.0 ?M2.0)\<^sup>2 =
          2 - 2 * inner ?M1.0 ?M2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_hole 14, template_app (template_hole 13, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app
               (template_hole 14, template_app (template_hole 13, t_empty)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 4, template_hole 3))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 1,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Chordal_Metric.dist_fs_triangle_finite",
     "cmod (?a - ?b) /
      (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?b)\<^sup>2))
      <= cmod (?a - ?c) /
         (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2)) +
         cmod (?c - ?b) /
         (sqrt (1 + (cmod ?b)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 2)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))))),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 9, template_var 1)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 9, template_var 2)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 1, template_hole 0)))))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 9, template_var 0)),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1, template_hole 0)))))))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 9, template_var 1)),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0)))))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 0)),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1, template_hole 0)))))))))),
    ("Chordal_Metric.chordal_circle'",
     "[| ?B ~= 0; (?A, ?B, ?C, ?D) : hermitean_nonzero;
         Re (mat_det (?A, ?B, ?C, ?D)) <= 0;
         ?C * ?a\<^sup>2 + (?D - ?A) * ?a - ?B = 0;
         ?r =
         sqrt ((4 - Re (- 4 * ?a / ?B * ?A)) / (1 + Re (?a * cnj ?a))) |]
      ==> mk_circline ?A ?B ?C ?D = chordal_circle (of_complex ?a) ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 35)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 34,
                template_app
                 (template_app (template_hole 33, template_var 4),
                  template_app
                   (template_app (template_hole 32, template_var 5),
                    template_app
                     (template_app (template_hole 31, template_var 3),
                      template_var 2)))),
              template_app (template_hole 30, t_empty))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 24,
            template_app
             (template_hole 23,
              template_app
               (template_app (template_hole 33, template_var 4),
                template_app
                 (template_app (template_hole 32, template_var 5),
                  template_app
                   (template_app (template_hole 31, template_var 3),
                    template_var 2))))),
          template_hole 22),
        template_equation
         (template_app
           (template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 3),
                    template_app
                     (template_app (template_hole 18, template_var 1),
                      template_app
                       (template_hole 17,
                        template_app
                         (template_hole 16, template_hole 15))))),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app (template_hole 21, template_var 2),
                      template_var 4)),
                  template_var 1))),
            template_var 5),
          template_hole 35),
        template_equation
         (template_var 0,
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_hole 16,
                        template_app
                         (template_hole 16, template_hole 15)))),
                  template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 19,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7,
                                    template_app
                                     (template_hole 16,
template_app (template_hole 16, template_hole 15))))),
                              template_var 1)),
                          template_var 5)),
                      template_var 4)))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_hole 24,
                  template_app
                   (template_app (template_hole 19, template_var 1),
                    template_app (template_hole 4, template_var 1)))))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 5),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Chordal_Metric.chordal_circle_radius_positive",
     "[| hermitean (?A, ?B, ?C, ?D); Re (mat_det (?A, ?B, ?C, ?D)) <= 0;
         ?B ~= 0; ?dsc = sqrt (Re ((?D - ?A)\<^sup>2 + 4 * (?B * cnj ?B)));
         ?a1.0 = (?A - ?D + cor ?dsc) / (2 * ?C);
         ?a2.0 = (?A - ?D - cor ?dsc) / (2 * ?C) |]
      ==> - 1 <= Re (?A * ?a1.0 / ?B) & - 1 <= Re (?A * ?a2.0 / ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 26,
              template_app
               (template_app (template_hole 25, template_var 6),
                template_app
                 (template_app (template_hole 24, template_var 5),
                  template_app
                   (template_app (template_hole 23, template_var 4),
                    template_var 3))))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 21,
            template_app
             (template_hole 20,
              template_app
               (template_app (template_hole 25, template_var 6),
                template_app
                 (template_app (template_hole 24, template_var 5),
                  template_app
                   (template_app (template_hole 23, template_var 4),
                    template_var 3))))),
          template_hole 19),
        template_negation
         (template_equation (template_var 5, template_hole 16)),
        template_equation
         (template_var 2,
          template_app
           (template_hole 14,
            template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 6)),
                    template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_hole 8)))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 9,
                        template_app (template_hole 9, template_hole 8)))),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app (template_hole 5, template_var 5))))))),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 11, template_var 6),
                    template_var 3)),
                template_app (template_hole 3, template_var 2))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_hole 8))),
              template_var 4))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 11, template_var 6),
                    template_var 3)),
                template_app (template_hole 3, template_var 2))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_hole 8))),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 22,
                   template_app (template_hole 1, template_hole 0)),
                 template_app
                  (template_hole 21,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 7, template_var 6),
                         template_var 1)),
                     template_var 5)))),
             template_app
              (template_app
                (template_hole 22,
                 template_app (template_hole 1, template_hole 0)),
               template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 7, template_var 6),
                       template_var 0)),
                   template_var 5))))
           )))]
