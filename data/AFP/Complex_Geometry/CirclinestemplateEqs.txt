   [("Circlines.conjugate_conjugate_circline",
     "conjugate_circline (conjugate_circline ?H) = ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Circlines.moebius_circline_id", "moebius_circline id_moebius ?H = ?H",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Circlines.inf_on_circline",
     "on_circline ?H \<infinity>\<^sub>h = is_line ?H",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.zero_on_circline",
     "on_circline ?H 0\<^sub>h = circline_D0 ?H",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.circline_intersection_symetry",
     "circline_intersection ?H1.0 ?H2.0 =
      circline_intersection ?H2.0 ?H1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Circlines.inf_in_circline_set",
     "(\<infinity>\<^sub>h : circline_set ?H) = is_line ?H",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.zero_in_circline_set",
     "(0\<^sub>h : circline_set ?H) = circline_D0 ?H",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.moebius_preserve_circline_type",
     "circline_type (moebius_circline ?M ?H) = circline_type ?H",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Circlines.circline_set_circline_inversion",
     "circline_set (circline_inversion ?H) = inversion ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.circline_set_circline_reciprocal",
     "circline_set (circline_reciprocal ?H) = reciprocal ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.circline_set_conjugate_circline",
     "circline_set (conjugate_circline ?H) = conjugate ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.on_unit_circle_conjugate",
     "on_circline unit_circle (conjugate ?z) = on_circline unit_circle ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Circlines.inversion_id_iff_on_unit_circle",
     "(inversion ?a = ?a) = on_circline unit_circle ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Circlines.moebius_circline_comp_inv_right",
     "moebius_circline ?M (moebius_circline (moebius_inv ?M) ?H) = ?H",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_var 0)),
    ("Circlines.moebius_circline_comp_inv_left",
     "moebius_circline (moebius_inv ?M) (moebius_circline ?M ?H) = ?H",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Circlines.on_circline_unit_circle",
     "on_circline unit_circle (of_complex ?z) = (cmod ?z = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Circlines.on_circline_conjugate_circline",
     "on_circline (conjugate_circline ?H) ?z =
      on_circline ?H (conjugate ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Circlines.circline_set_moebius_circline",
     "circline_set (moebius_circline ?M ?H) =
      moebius_pt ?M ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.on_circline_circline_inversion",
     "on_circline (circline_inversion ?H) ?z =
      on_circline ?H (reciprocal (conjugate ?z))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Circlines.circline_equation_x_axis",
     "(of_complex ?z : circline_set x_axis) = (?z = cnj ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 0)))),
    ("Circlines.moebius_circline_comp",
     "moebius_circline (moebius_comp ?M1.0 ?M2.0) ?H =
      moebius_circline ?M1.0 (moebius_circline ?M2.0 ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Circlines.circline_set_moebius_circline_iff",
     "(moebius_pt ?M ?z : circline_set (moebius_circline ?M ?H)) =
      (?z : circline_set ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Circlines.on_circline_cmat_cvec_unit",
     "on_circline_cmat_cvec unit_circle_cmat (?z1.0, ?z2.0) =
      (?z1.0 * cnj ?z1.0 = ?z2.0 * cnj ?z2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Circlines.moebius_circline",
     "{z. on_circline (moebius_circline ?M ?H) z} =
      moebius_pt ?M ` {z. on_circline ?H z}",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Circlines.on_circline_x_axis",
     "on_circline x_axis ?z =
      ((EX c. is_real c & ?z = of_complex c) | ?z = \<infinity>\<^sub>h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            )],
       template_dunno)),
    ("Circlines.on_circline_y_axis",
     "on_circline y_axis ?z =
      ((EX c. is_imag c & ?z = of_complex c) | ?z = \<infinity>\<^sub>h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            )],
       template_dunno)),
    ("Circlines.on_circline_cmat_cvec_circline_equation",
     "on_circline_cmat_cvec (?A, ?B, ?C, ?D) (?z1.0, ?z2.0) =
      circline_equation ?A ?B ?C ?D ?z1.0 ?z2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2)))),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 2, template_var 5),
                           template_var 1)),
                       template_app (template_hole 1, template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 0)),
                     template_app (template_hole 1, template_var 1)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 1, template_var 0))),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 0))),
         template_hole 0)))]
