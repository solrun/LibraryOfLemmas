Loading theory "Draft.Linear_Systems" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices")
Loading theory "Draft.More_Set" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.More_Set"
### 0.059s elapsed time, 0.271s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "Draft.Linear_Systems"
### 0.080s elapsed time, 0.356s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.550s cpu time, 0.040s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex" via "Draft.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.229s elapsed time, 0.891s cpu time, 0.122s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Periodic_Fun"
### 0.178s elapsed time, 0.692s cpu time, 0.082s GC time
Loading theory "Draft.More_Transcendental" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex")
### theory "HOL-Library.Nat_Bijection"
### 0.357s elapsed time, 1.441s cpu time, 0.122s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.More_Transcendental"
### 0.096s elapsed time, 0.383s cpu time, 0.000s GC time
Loading theory "Draft.Canonical_Angle" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex")
### theory "Draft.Canonical_Angle"
### 0.120s elapsed time, 0.469s cpu time, 0.093s GC time
Loading theory "Draft.More_Complex" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "Draft.More_Complex"
### 0.329s elapsed time, 1.293s cpu time, 0.135s GC time
Loading theory "Draft.Angles" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Elementary_Complex_Geometry")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Angles"
### 0.316s elapsed time, 1.099s cpu time, 0.542s GC time
Loading theory "Draft.Elementary_Complex_Geometry" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.029s elapsed time, 3.908s cpu time, 0.822s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices" via "Draft.Quadratic")
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### theory "HOL-Library.Quadratic_Discriminant"
### 0.136s elapsed time, 0.531s cpu time, 0.091s GC time
Loading theory "Draft.Quadratic" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices")
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.155s elapsed time, 4.393s cpu time, 0.913s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Quadratic"
### 0.310s elapsed time, 1.002s cpu time, 0.080s GC time
Loading theory "Draft.Matrices" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius" via "Draft.Homogeneous_Coordinates")
### theory "Draft.Elementary_Complex_Geometry"
### 0.601s elapsed time, 2.126s cpu time, 0.224s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 2.137s elapsed time, 7.268s cpu time, 1.246s GC time
Loading theory "Draft.Templates" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.056s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Circlines_AngleMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.566s elapsed time, 1.188s cpu time, 0.118s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Matrices"
### 1.337s elapsed time, 2.593s cpu time, 0.302s GC time
Loading theory "Draft.Homogeneous_Coordinates" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Moebius")
Loading theory "Draft.Unitary_Matrices" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines" via "Draft.Hermitean_Matrices")
### theory "Draft.Unitary_Matrices"
### 0.104s elapsed time, 0.210s cpu time, 0.000s GC time
Loading theory "Draft.Hermitean_Matrices" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines")
### theory "Draft.Hermitean_Matrices"
### 0.091s elapsed time, 0.207s cpu time, 0.064s GC time
### theory "Draft.Homogeneous_Coordinates"
### 0.582s elapsed time, 0.848s cpu time, 0.127s GC time
Loading theory "Draft.Moebius" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines" via "Draft.Circlines")
instantiation
  moebius :: group_add
  minus_moebius == minus :: moebius => moebius => moebius
  uminus_moebius == uminus_class.uminus :: moebius => moebius
  zero_moebius == zero_class.zero :: moebius
  plus_moebius == plus :: moebius => moebius => moebius
### theory "Draft.Moebius"
### 0.853s elapsed time, 1.488s cpu time, 0.897s GC time
Loading theory "Draft.Circlines" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle" via "Draft.Oriented_Circlines")
### theory "Draft.Circlines"
### 1.331s elapsed time, 1.503s cpu time, 0.236s GC time
Loading theory "Draft.Oriented_Circlines" (required by "Draft.Circlines_AngleMoreTemplates" via "Draft.Circlines_Angle")
### theory "Draft.Oriented_Circlines"
### 0.397s elapsed time, 0.471s cpu time, 0.100s GC time
Loading theory "Draft.Circlines_Angle" (required by "Draft.Circlines_AngleMoreTemplates")
Found termination order: "{}"
### theory "Draft.Circlines_Angle"
### 0.453s elapsed time, 1.259s cpu time, 1.119s GC time
Loading theory "Draft.Circlines_AngleMoreTemplates"
val templateLemmas =
   [("Circlines_Angle.sgn_sqrt", "sgn (sqrt ?x) = sgn ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Circlines_Angle.perpendicular_sym",
     "perpendicular ?H1.0 ?H2.0 = perpendicular ?H2.0 ?H1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Circlines_Angle.cos_angle_opposite2",
     "cos_angle ?H (opposite_ocircline ?H') = - cos_angle ?H ?H'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Circlines_Angle.cos_angle_opposite1",
     "cos_angle (opposite_ocircline ?H) ?H' = - cos_angle ?H ?H'",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Circlines_Angle.moebius_preserve_circline_angle",
     "cos_angle (moebius_ocircline ?M ?H1.0) (moebius_ocircline ?M ?H2.0) =
      cos_angle ?H1.0 ?H2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Circlines_Angle.mat_det_12_sm_r",
     "mat_det_12 ?A (?k *\<^sub>s\<^sub>m ?B) = ?k * mat_det_12 ?A ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Circlines_Angle.mat_det_12_sm_l",
     "mat_det_12 (?k *\<^sub>s\<^sub>m ?A) ?B = ?k * mat_det_12 ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Circlines_Angle.perpendicular_moebius",
     "perpendicular ?H1.0 ?H2.0 ==>
      perpendicular (moebius_circline ?M ?H1.0)
       (moebius_circline ?M ?H2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Circlines_Angle.mat_det_12_mm_r",
     "mat_det_12 (?A *\<^sub>m\<^sub>m ?M) (?B *\<^sub>m\<^sub>m ?M) =
      mat_det ?M * mat_det_12 ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Circlines_Angle.mat_det_12_mm_l",
     "mat_det_12 (?M *\<^sub>m\<^sub>m ?A) (?M *\<^sub>m\<^sub>m ?B) =
      mat_det ?M * mat_det_12 ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Circlines_Angle.real_circle_sgn_r",
     "[| is_circle ?H; (?a, ?r) = euclidean_circle ?H |]
      ==> sgn ?r = - circline_type ?H",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("Circlines_Angle.mat_det_12_congruence",
     "mat_det_12 (congruence ?M ?A) (congruence ?M ?B) =
      cor ((cmod (mat_det ?M))\<^sup>2) * mat_det_12 ?A ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 8, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2))),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))),
         template_app
          (template_app (template_hole 9, template_var 1),
           template_var 0)))),
    ("Circlines_Angle.Re_sgn",
     "[| is_real ?A; ?A ~= 0 |] ==> Re (sgn ?A) = sgn_bool (0 < Re ?A)",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 0), template_hole 9),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 9),
                 template_app (template_hole 5, template_var 0))),
             template_hole 1),
           template_app (template_hole 0, template_hole 1))))),
    ("Circlines_Angle.Re_mult_real3",
     "[| is_real ?z1.0; is_real ?z2.0; is_real ?z3.0 |]
      ==> Re (?z1.0 * ?z2.0 * ?z3.0) = Re ?z1.0 * Re ?z2.0 * Re ?z3.0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 2, template_var 2)),
               template_app (template_hole 2, template_var 1))),
           template_app (template_hole 2, template_var 0))))),
    ("Circlines_Angle.cos_angle_den_scale",
     "[| 0 < ?k1.0; 0 < ?k2.0 |]
      ==> sqrt
           (Re ((cor ?k1.0)\<^sup>2 * mat_det ?H1.0 *
                ((cor ?k2.0)\<^sup>2 * mat_det ?H2.0))) =
          ?k1.0 * ?k2.0 * sqrt (Re (mat_det ?H1.0 * mat_det ?H2.0))",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 3),
        template_inequation (less_than, template_hole 11, template_var 2)],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 3)),
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)))),
                   template_app (template_hole 1, template_var 1))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 2)),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)))),
                 template_app (template_hole 1, template_var 0))))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 1, template_var 0)))))))),
    ("Circlines_Angle.cos_angle_eq_cos_ang_circ",
     "[| is_circle (of_ocircline ?H1.0); is_circle (of_ocircline ?H2.0);
         circline_type (of_ocircline ?H1.0) < 0;
         circline_type (of_ocircline ?H2.0) < 0;
         (?a1.0, ?r1.0) = euclidean_circle (of_ocircline ?H1.0);
         (?a2.0, ?r2.0) = euclidean_circle (of_ocircline ?H2.0);
         of_complex ?E : ocircline_set ?H1.0 Int ocircline_set ?H2.0 |]
      ==> cos_angle ?H1.0 ?H2.0 =
          cos (ang_circ ?E ?a1.0 ?a2.0 (pos_oriented ?H1.0)
                (pos_oriented ?H2.0))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 6))
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 16,
                  template_app (template_hole 15, template_var 5))
                )
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 13,
            template_app (template_hole 15, template_var 6)),
          template_hole 12),
        template_inequation
         (less_than,
          template_app
           (template_hole 13,
            template_app (template_hole 15, template_var 5)),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 4),
            template_var 3),
          template_app
           (template_hole 9,
            template_app (template_hole 15, template_var 6))),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 2),
            template_var 1),
          template_app
           (template_hole 9,
            template_app (template_hole 15, template_var 5))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 6)),
                template_app (template_hole 5, template_var 5)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 6), template_var 5),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 4),
                 template_var 2),
               template_app (template_hole 0, template_var 6)),
             template_app (template_hole 0, template_var 5))))))]:
   (string * thm * template) list
### theory "Draft.Circlines_AngleMoreTemplates"
### 0.388s elapsed time, 0.555s cpu time, 0.056s GC time
val it = (): unit
