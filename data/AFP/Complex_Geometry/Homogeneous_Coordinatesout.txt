Loading theory "Draft.Linear_Systems" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.Linear_Systems"
### 0.075s elapsed time, 0.324s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.514s cpu time, 0.040s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex" via "Draft.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.244s elapsed time, 0.988s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Periodic_Fun"
### 0.177s elapsed time, 0.690s cpu time, 0.080s GC time
Loading theory "Draft.More_Transcendental" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex")
### theory "HOL-Library.Nat_Bijection"
### 0.354s elapsed time, 1.408s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.More_Transcendental"
### 0.087s elapsed time, 0.350s cpu time, 0.000s GC time
Loading theory "Draft.Canonical_Angle" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex")
### theory "Draft.Canonical_Angle"
### 0.103s elapsed time, 0.405s cpu time, 0.075s GC time
Loading theory "Draft.More_Complex" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.More_Complex"
### 0.325s elapsed time, 1.285s cpu time, 0.136s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices" via "Draft.Quadratic")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "HOL-Library.Quadratic_Discriminant"
### 0.273s elapsed time, 0.937s cpu time, 0.547s GC time
Loading theory "Draft.Quadratic" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices")
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 0.990s elapsed time, 3.741s cpu time, 0.877s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.081s elapsed time, 3.935s cpu time, 0.868s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Quadratic"
### 0.340s elapsed time, 1.141s cpu time, 0.110s GC time
Loading theory "Draft.Matrices" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.Homogeneous_Coordinates")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 1.987s elapsed time, 6.360s cpu time, 1.123s GC time
Loading theory "Draft.Templates" (required by "Draft.Homogeneous_CoordinatesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.134s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Homogeneous_CoordinatesMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.563s elapsed time, 1.196s cpu time, 0.140s GC time
### theory "Draft.Matrices"
### 1.351s elapsed time, 2.787s cpu time, 0.335s GC time
Loading theory "Draft.Homogeneous_Coordinates" (required by "Draft.Homogeneous_CoordinatesMoreTemplates")
### theory "Draft.Homogeneous_Coordinates"
### 0.521s elapsed time, 0.573s cpu time, 0.070s GC time
Loading theory "Draft.Homogeneous_CoordinatesMoreTemplates"
val templateLemmas =
   [("Homogeneous_Coordinates.complex_homo_coords_eq_refl",
     "?z \<approx> ?z",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Homogeneous_Coordinates.inf_not_of_complex",
     "\<infinity>\<^sub>h ~= of_complex ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Homogeneous_Coordinates.of_complex_not_inf",
     "of_complex ?x ~= \<infinity>\<^sub>h",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Homogeneous_Coordinates.to_complex_of_complex",
     "to_complex (of_complex ?z) = ?z",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.add_zero_left", "0\<^sub>h +\<^sub>h ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Homogeneous_Coordinates.add_zero_right",
     "?z +\<^sub>h 0\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.conjugate_involution",
     "conjugate (conjugate ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.divide_one_right",
     "?z :\<^sub>h 1\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.inversion_involution",
     "inversion (inversion ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.mult_one_left", "1\<^sub>h *\<^sub>h ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Homogeneous_Coordinates.mult_one_right",
     "?z *\<^sub>h 1\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.reciprocal_involution",
     "reciprocal (reciprocal ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.zero_sub_right",
     "?z -\<^sub>h 0\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.inf_add_of_complex",
     "\<infinity>\<^sub>h +\<^sub>h of_complex ?x = \<infinity>\<^sub>h",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Homogeneous_Coordinates.of_complex_add_inf",
     "of_complex ?x +\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Homogeneous_Coordinates.add_commute",
     "?z +\<^sub>h ?w = ?w +\<^sub>h ?z",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Homogeneous_Coordinates.conjugate_of_complex",
     "conjugate (of_complex ?z) = of_complex (cnj ?z)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Homogeneous_Coordinates.mult_commute",
     "?z1.0 *\<^sub>h ?z2.0 = ?z2.0 *\<^sub>h ?z1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Homogeneous_Coordinates.uminus_of_complex",
     "~\<^sub>h (of_complex ?z) = of_complex (- ?z)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Homogeneous_Coordinates.cross_ratio_01inf_id",
     "cross_ratio ?z 0\<^sub>h 1\<^sub>h \<infinity>\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2),
           template_hole 1),
         template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.of_complex_ii_iff",
     "(of_complex ?x = ii\<^sub>h) = (?x = \<i>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.of_complex_one_iff",
     "(of_complex ?x = 1\<^sub>h) = (?x = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.of_complex_zero_iff",
     "(of_complex ?x = 0\<^sub>h) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.reciprocal_inf_iff",
     "(reciprocal ?z = \<infinity>\<^sub>h) = (?z = 0\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.reciprocal_zero_iff",
     "(reciprocal ?z = 0\<^sub>h) = (?z = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.uminus_inf_iff",
     "(~\<^sub>h ?z = \<infinity>\<^sub>h) = (?z = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.zero_sub_left",
     "0\<^sub>h -\<^sub>h of_complex ?x = of_complex (- ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Homogeneous_Coordinates.complex_homo_coords_eq_sym",
     "?z1.0 \<approx> ?z2.0 ==> ?z2.0 \<approx> ?z1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Homogeneous_Coordinates.of_complex_sub_one",
     "of_complex ?x -\<^sub>h 1\<^sub>h = of_complex (?x - 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Homogeneous_Coordinates.inf_or_of_complex",
     "?z = \<infinity>\<^sub>h | (EX x. ?z = of_complex x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app (template_hole 1, t_empty))
         )),
    ("Homogeneous_Coordinates.of_complex_add_of_complex",
     "of_complex ?x +\<^sub>h of_complex ?y = of_complex (?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Homogeneous_Coordinates.of_complex_mult_of_complex",
     "of_complex ?z1.0 *\<^sub>h of_complex ?z2.0 =
      of_complex (?z1.0 * ?z2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Homogeneous_Coordinates.of_complex_sub_of_complex",
     "of_complex ?x -\<^sub>h of_complex ?y = of_complex (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Homogeneous_Coordinates.conjugate_inj",
     "conjugate ?x = conjugate ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Homogeneous_Coordinates.of_complex_inj",
     "of_complex ?x = of_complex ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Homogeneous_Coordinates.inf_add_left",
     "?z ~= \<infinity>\<^sub>h ==>
      \<infinity>\<^sub>h +\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.inf_add_right",
     "?z ~= \<infinity>\<^sub>h ==>
      ?z +\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 1),
         template_hole 1))),
    ("Homogeneous_Coordinates.divide_inf_left",
     "?z ~= \<infinity>\<^sub>h ==>
      \<infinity>\<^sub>h :\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.divide_inf_right",
     "?z ~= \<infinity>\<^sub>h ==>
      ?z :\<^sub>h \<infinity>\<^sub>h = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 2),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_zero_left",
     "?z ~= \<infinity>\<^sub>h ==> 0\<^sub>h *\<^sub>h ?z = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_zero_right",
     "?z ~= \<infinity>\<^sub>h ==> ?z *\<^sub>h 0\<^sub>h = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.of_complex_to_complex",
     "?z ~= \<infinity>\<^sub>h ==> of_complex (to_complex ?z) = ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Homogeneous_Coordinates.inf_sub_left",
     "?z ~= \<infinity>\<^sub>h ==>
      \<infinity>\<^sub>h -\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.inf_sub_right",
     "?z ~= \<infinity>\<^sub>h ==>
      ?z -\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 1),
         template_hole 1))),
    ("Homogeneous_Coordinates.sub_eq_zero",
     "?z ~= \<infinity>\<^sub>h ==> ?z -\<^sub>h ?z = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.divide_zero_left",
     "?z ~= 0\<^sub>h ==> 0\<^sub>h :\<^sub>h ?z = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.divide_zero_right",
     "?z ~= 0\<^sub>h ==> ?z :\<^sub>h 0\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 2),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_inf_left",
     "?z ~= 0\<^sub>h ==>
      \<infinity>\<^sub>h *\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_inf_right",
     "?z ~= 0\<^sub>h ==>
      ?z *\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.uminus_id_iff",
     "(~\<^sub>h ?z = ?z) = (?z = 0\<^sub>h | ?z = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.cross_ratio_commute_13",
     "cross_ratio ?z ?u ?v ?w = reciprocal (cross_ratio ?v ?u ?z ?w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 3),
           template_var 0)))),
    ("Homogeneous_Coordinates.cross_ratio_commute_24",
     "cross_ratio ?z ?u ?v ?w = reciprocal (cross_ratio ?z ?w ?v ?u)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1),
           template_var 2)))),
    ("Homogeneous_Coordinates.of_complex_image_inj",
     "of_complex ` ?A = of_complex ` ?B ==> ?A = ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Homogeneous_Coordinates.complex_homo_coords_eq_trans",
     "[| ?z1.0 \<approx> ?z2.0; ?z2.0 \<approx> ?z3.0 |]
      ==> ?z1.0 \<approx> ?z3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Homogeneous_Coordinates.conjugate_id_iff",
     "(conjugate ?a = ?a) =
      (is_real (to_complex ?a) | ?a = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 6, template_var 0), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_hole 1)),
             template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.reciprocal_of_complex",
     "?z ~= 0 ==> reciprocal (of_complex ?z) = of_complex (1 / ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Homogeneous_Coordinates.divide_eq_inf",
     "?z :\<^sub>h ?w = \<infinity>\<^sub>h ==>
      ?z = \<infinity>\<^sub>h | ?w = 0\<^sub>h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.mult_eq_inf",
     "?z *\<^sub>h ?w = \<infinity>\<^sub>h ==>
      ?z = \<infinity>\<^sub>h | ?w = \<infinity>\<^sub>h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Homogeneous_Coordinates.sub_eq_inf",
     "?z -\<^sub>h ?w = \<infinity>\<^sub>h ==>
      ?z = \<infinity>\<^sub>h | ?w = \<infinity>\<^sub>h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Homogeneous_Coordinates.reciprocal_id_iff",
     "(reciprocal ?z = ?z) = (?z = of_complex 1 | ?z = of_complex (- 1))",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_hole 1))))
           ))),
    ("Homogeneous_Coordinates.one_div_of_complex",
     "?x ~= 0 ==> 1\<^sub>h :\<^sub>h of_complex ?x = of_complex (1 / ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Homogeneous_Coordinates.inversion_of_complex",
     "?z ~= 0 ==> inversion (of_complex ?z) = of_complex (1 / cnj ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Homogeneous_Coordinates.of_complex_divide_of_complex",
     "?z2.0 ~= 0 ==>
      of_complex ?z1.0 :\<^sub>h of_complex ?z2.0 =
      of_complex (?z1.0 / ?z2.0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Homogeneous_Coordinates.inf_cvec_z2_zero_iff",
     "(?z1.0, ?z2.0) ~= vec_zero ==>
      ((?z1.0, ?z2.0) \<approx>\<^sub>v \<infinity>\<^sub>v) = (?z2.0 = 0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_hole 2)
              )],
         template_equation (template_var 0, template_hole 0)))),
    ("Homogeneous_Coordinates.zero_cvec_z1_zero_iff",
     "(?z1.0, ?z2.0) ~= vec_zero ==>
      ((?z1.0, ?z2.0) \<approx>\<^sub>v 0\<^sub>v) = (?z1.0 = 0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_hole 2)
              )],
         template_equation (template_var 1, template_hole 0)))),
    ("Homogeneous_Coordinates.ex_3_different_points",
     "EX z1 z2. ?z ~= z1 & z1 ~= z2 & ?z ~= z2",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Homogeneous_Coordinates.inversion_id_iff",
     "(?a = inversion ?a) =
      (?a ~= \<infinity>\<^sub>h &
       to_complex ?a * cnj (to_complex ?a) = 1)",
     template_bimplication
      (template_equation
        (template_var 0, template_app (template_hole 8, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_var 0)))),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.cross_ratio_0inf",
     "?y ~= 0 ==>
      cross_ratio (of_complex ?x) 0\<^sub>h (of_complex ?y)
       \<infinity>\<^sub>h =
      of_complex (?x / ?y)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2),
             template_app (template_hole 3, template_var 1)),
           template_hole 1),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Homogeneous_Coordinates.mult_noteq_inf",
     "[| ?z ~= \<infinity>\<^sub>h; ?w ~= \<infinity>\<^sub>h |]
      ==> ?z *\<^sub>h ?w ~= \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Homogeneous_Coordinates.sub_noteq_inf",
     "[| ?z ~= \<infinity>\<^sub>h; ?w ~= \<infinity>\<^sub>h |]
      ==> ?z -\<^sub>h ?w ~= \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Homogeneous_Coordinates.cross_ratio_0",
     "[| ?u ~= ?v; ?u ~= ?w |] ==> cross_ratio ?u ?u ?v ?w = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.cross_ratio_1",
     "[| ?u ~= ?v; ?v ~= ?w |] ==> cross_ratio ?v ?u ?v ?w = 1\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.cross_ratio_inf",
     "[| ?u ~= ?w; ?v ~= ?w |]
      ==> cross_ratio ?w ?u ?v ?w = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Homogeneous_Coordinates.is_real_inversion",
     "[| is_real ?x; ?x ~= 0 |]
      ==> is_real (to_complex (inversion (of_complex ?x)))",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))),
         template_hole 6))),
    ("Homogeneous_Coordinates.sub_eq_zero_iff",
     "?z ~= \<infinity>\<^sub>h | ?w ~= \<infinity>\<^sub>h ==>
      (?z -\<^sub>h ?w = 0\<^sub>h) = (?z = ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0),
         template_equation (template_var 1, template_var 0)))),
    ("Homogeneous_Coordinates.cross_ratio_not_zero",
     "[| ?z ~= ?u; ?v ~= ?w |] ==> cross_ratio ?z ?u ?v ?w ~= 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Homogeneous_Coordinates.cross_ratio_not_inf",
     "[| ?z ~= ?w; ?u ~= ?v |]
      ==> cross_ratio ?z ?u ?v ?w ~= \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2),
             template_hole 0)
           ))),
    ("Homogeneous_Coordinates.reciprocal_real",
     "[| is_real (to_complex ?z); ?z ~= 0\<^sub>h;
         ?z ~= \<infinity>\<^sub>h |]
      ==> Re (to_complex (reciprocal ?z)) = 1 / Re (to_complex ?z)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 0)),
          template_hole 8),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 9,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 0)))))),
    ("Homogeneous_Coordinates.complex_cvec_eq_mix",
     "[| (?z1.0, ?z2.0) ~= vec_zero; (?w1.0, ?w2.0) ~= vec_zero |]
      ==> ((?z1.0, ?z2.0) \<approx>\<^sub>v (?w1.0, ?w2.0)) =
          (?z1.0 * ?w2.0 = ?z2.0 * ?w1.0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_hole 4)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0))
              )],
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Homogeneous_Coordinates.cross_ratio_real",
     "[| is_real ?z; is_real ?u; is_real ?v; is_real ?w;
         ?z ~= ?u & ?v ~= ?w | ?z ~= ?w & ?u ~= ?v |]
      ==> is_real
           (to_complex
             (cross_ratio (of_complex ?z) (of_complex ?u) (of_complex ?v)
               (of_complex ?w)))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 2), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 0), template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2))),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 0))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_app (template_hole 0, template_var 2)),
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))),
         template_hole 7))),
    ("Homogeneous_Coordinates.cross_ratio",
     "[| ?z ~= ?u & ?v ~= ?w | ?z ~= ?w & ?u ~= ?v;
         ?z ~= \<infinity>\<^sub>h; ?u ~= \<infinity>\<^sub>h;
         ?v ~= \<infinity>\<^sub>h; ?w ~= \<infinity>\<^sub>h |]
      ==> cross_ratio ?z ?u ?v ?w =
          (?z -\<^sub>h ?u) *\<^sub>h (?v -\<^sub>h ?w) :\<^sub>h
          ((?z -\<^sub>h ?w) *\<^sub>h (?v -\<^sub>h ?u))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2))),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 0)))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 0))),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))))
            ),
        template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))))))]:
   (string * thm * template) list
### theory "Draft.Homogeneous_CoordinatesMoreTemplates"
### 0.551s elapsed time, 1.199s cpu time, 0.774s GC time
val it = (): unit
