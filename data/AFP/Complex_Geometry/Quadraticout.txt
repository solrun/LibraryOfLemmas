Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.502s cpu time, 0.042s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.QuadraticMoreTemplates" via "Draft.Quadratic" via "Draft.More_Complex" via "Draft.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
### theory "HOL-Library.Set_Algebras"
### 0.199s elapsed time, 0.815s cpu time, 0.042s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs")
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Periodic_Fun"
### 0.177s elapsed time, 0.693s cpu time, 0.083s GC time
Loading theory "Draft.More_Transcendental" (required by "Draft.QuadraticMoreTemplates" via "Draft.Quadratic" via "Draft.More_Complex")
### theory "HOL-Library.Nat_Bijection"
### 0.339s elapsed time, 1.355s cpu time, 0.126s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.More_Transcendental"
### 0.093s elapsed time, 0.369s cpu time, 0.000s GC time
Loading theory "Draft.Canonical_Angle" (required by "Draft.QuadraticMoreTemplates" via "Draft.Quadratic" via "Draft.More_Complex")
### theory "Draft.Canonical_Angle"
### 0.114s elapsed time, 0.450s cpu time, 0.079s GC time
Loading theory "Draft.More_Complex" (required by "Draft.QuadraticMoreTemplates" via "Draft.Quadratic")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "Draft.More_Complex"
### 0.339s elapsed time, 1.334s cpu time, 0.159s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.QuadraticMoreTemplates" via "Draft.Quadratic")
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Quadratic_Discriminant"
### 0.290s elapsed time, 1.011s cpu time, 0.633s GC time
Loading theory "Draft.Quadratic" (required by "Draft.QuadraticMoreTemplates")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 1.056s elapsed time, 4.015s cpu time, 1.004s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.138s elapsed time, 4.161s cpu time, 1.005s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Quadratic"
### 0.351s elapsed time, 1.164s cpu time, 0.134s GC time
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.986s elapsed time, 6.126s cpu time, 1.196s GC time
Loading theory "Draft.Templates" (required by "Draft.QuadraticMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.051s elapsed time, 0.074s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.QuadraticMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.447s elapsed time, 0.493s cpu time, 0.054s GC time
Loading theory "Draft.QuadraticMoreTemplates"
val templateLemmas =
   [("Quadratic_Discriminant.divide_non_zero",
     "?x ~= 0 ==> (?x * ?y = ?z) = (?y = ?z / ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_equation
          (template_var 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Quadratic_Discriminant.plus_or_minus_sqrt",
     "0 <= ?y ==> (?x\<^sup>2 = ?y) = (?x = sqrt ?y | ?x = - sqrt ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 9, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))),
           template_var 1),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app (template_hole 1, template_var 1))),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 1, template_var 1))))
             )))),
    ("Quadratic_Discriminant.discriminant_negative",
     "[| ?a ~= 0; discrim ?a ?b ?c < 0 |]
      ==> ?a * ?x\<^sup>2 + ?b * ?x + ?c ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 8)),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 8)],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1, template_hole 0))))),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0))),
               template_var 1),
             template_hole 8)
           ))),
    ("Quadratic_Discriminant.discriminant_nonneg_ex",
     "[| ?a ~= 0; 0 <= discrim ?a ?b ?c |]
      ==> EX x. ?a * x\<^sup>2 + ?b * x + ?c = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_inequation
         (less_equals, template_hole 9,
          template_app
           (template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Quadratic_Discriminant.discriminant_pos_distinct",
     "[| ?a ~= 0; 0 < discrim ?a ?b ?c |]
      ==> EX y. ?x ~= y & ?a * y\<^sup>2 + ?b * y + ?c = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 10)),
        template_inequation
         (less_than, template_hole 10,
          template_app
           (template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2),
            template_var 1))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Quadratic.viette2'_monic",
     "[| ?b\<^sup>2 - 4 * ?c = 0; ?\<xi>\<^sup>2 + ?b * ?\<xi> + ?c = 0 |]
      ==> ?\<xi> * ?\<xi> = ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4)))),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_hole 2,
                  template_app
                   (template_hole 5,
                    template_app (template_hole 5, template_hole 4)))),
              template_var 1)),
          template_hole 1),
        template_equation
         (template_app
           (template_app
             (template_hole 0,
              template_app
               (template_app
                 (template_hole 0,
                  template_app
                   (template_app (template_hole 7, template_var 0),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4)))),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0))),
            template_var 1),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 0),
         template_var 1))),
    ("Quadratic_Discriminant.Rats_solution_QE_converse",
     "[| ?a : \<rat>; ?b : \<rat>; ?a * ?x\<^sup>2 + ?b * ?x + ?c = 0;
         ?x : \<rat> |]
      ==> sqrt (discrim ?a ?b ?c) : \<rat>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_hole 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_hole 10)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_hole 3))))),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1))),
            template_var 0),
          template_hole 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 0))),
             template_hole 10)
           ))),
    ("Quadratic_Discriminant.complete_square",
     "?a ~= 0 ==>
      (?a * ?x\<^sup>2 + ?b * ?x + ?c = 0) =
      ((2 * ?a * ?x + ?b)\<^sup>2 = discrim ?a ?b ?c)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 9))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_app
                      (template_app (template_hole 5, template_var 2),
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3, template_hole 2))))),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_var 2))),
             template_var 0),
           template_hole 9),
         template_equation
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 3, template_hole 2))),
                         template_var 3)),
                     template_var 2)),
                 template_var 1)),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0))))),
    ("Quadratic_Discriminant.discriminant_zero",
     "[| ?a ~= 0; discrim ?a ?b ?c = 0 |]
      ==> (?a * ?x\<^sup>2 + ?b * ?x + ?c = 0) = (?x = - ?b / (2 * ?a))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 11)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 11)],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 4, template_hole 3))))),
                 template_app
                  (template_app (template_hole 7, template_var 2),
                   template_var 0))),
             template_var 1),
           template_hole 11),
         template_equation
          (template_var 0,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_hole 3))),
               template_var 3)))))),
    ("Quadratic_Discriminant.Rats_solution_QE",
     "[| ?a : \<rat>; ?b : \<rat>; ?a ~= 0;
         ?a * ?x\<^sup>2 + ?b * ?x + ?c = 0;
         sqrt (discrim ?a ?b ?c) : \<rat> |]
      ==> ?x : \<rat>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_hole 11)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_hole 11)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 8)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_app
                       (template_hole 4,
                        template_app (template_hole 3, template_hole 2))))),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1))),
            template_var 0),
          template_hole 8),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 1,
                  template_app
                   (template_app
                     (template_app (template_hole 0, template_var 3),
                      template_var 2),
                    template_var 0))),
              template_hole 11)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 1),
             template_hole 11)
           ))),
    ("Quadratic.viette2'",
     "[| ?a ~= 0; ?b\<^sup>2 - 4 * ?a * ?c = 0;
         ?a * ?\<xi>\<^sup>2 + ?b * ?\<xi> + ?c = 0 |]
      ==> ?\<xi> * ?\<xi> = ?c / ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 9)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4)))),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 5,
                        template_app (template_hole 5, template_hole 4)))),
                  template_var 3)),
              template_var 1)),
          template_hole 9),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 7, template_var 0),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4))))),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 0))),
            template_var 1),
          template_hole 9)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("Quadratic.complex_quadratic_equation_monic_distinct_roots",
     "?b\<^sup>2 - 4 * ?c ~= 0 ==>
      EX k\<^sub>1 k\<^sub>2.
         k\<^sub>1 ~= k\<^sub>2 &
         k\<^sub>1\<^sup>2 + ?b * k\<^sub>1 + ?c = 0 &
         k\<^sub>2\<^sup>2 + ?b * k\<^sub>2 + ?c = 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_app
                     (template_hole 8,
                      template_app (template_hole 7, template_hole 6)))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_hole 7,
                        template_app (template_hole 7, template_hole 6)))),
                  template_var 0)),
              template_hole 3)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Quadratic_Discriminant.discriminant_pos_ex",
     "[| ?a ~= 0; 0 < discrim ?a ?b ?c |]
      ==> EX x y.
             x ~= y &
             ?a * x\<^sup>2 + ?b * x + ?c = 0 &
             ?a * y\<^sup>2 + ?b * y + ?c = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10)),
        template_inequation
         (less_than, template_hole 10,
          template_app
           (template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Quadratic.complex_quadratic_equation_only_two_roots",
     "[| ?a ~= 0; ?qf = (%x. ?a * x\<^sup>2 + ?b * x + ?c); ?qf ?x1.0 = 0;
         ?qf ?x2.0 = 0; ?x1.0 ~= ?x2.0; ?qf ?x = 0 |]
      ==> ?x = ?x1.0 | ?x = ?x2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 6, template_hole 8)),
        template_equation (template_var 5, t_empty),
        template_equation
         (template_app (template_var 5, template_var 2), template_hole 8),
        template_equation
         (template_app (template_var 5, template_var 1), template_hole 8),
        template_negation
         (template_equation (template_var 2, template_var 1)),
        template_equation
         (template_app (template_var 5, template_var 0), template_hole 8)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 9, template_var 0),
               template_var 1))
           ))),
    ("Quadratic.viette2_monic",
     "[| 0 <= ?b\<^sup>2 - 4 * ?c;
         ?\<xi>1.0\<^sup>2 + ?b * ?\<xi>1.0 + ?c = 0;
         ?\<xi>2.0\<^sup>2 + ?b * ?\<xi>2.0 + ?c = 0;
         ?\<xi>1.0 ~= ?\<xi>2.0 |]
      ==> ?\<xi>1.0 * ?\<xi>2.0 = ?c",
     template_implication
      ([template_inequation
         (less_equals, template_hole 10,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5)))),
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 6, template_hole 5)))),
              template_var 2))),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 8, template_var 1),
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5)))),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 1))),
            template_var 2),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 8, template_var 0),
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5)))),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0))),
            template_var 2),
          template_hole 10),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_var 2))),
    ("Quadratic.complex_quadratic_equation_monic_only_two_roots",
     "?\<xi>\<^sup>2 + ?b * ?\<xi> + ?c = 0 ==>
      ?\<xi> = (- ?b + ccsqrt (?b\<^sup>2 - 4 * ?c)) / 2 |
      ?\<xi> = (- ?b - ccsqrt (?b\<^sup>2 - 4 * ?c)) / 2",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_hole 8)))),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 2))),
            template_var 0),
          template_hole 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app (template_hole 3, template_var 1)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 11, template_var 1),
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 9, template_hole 8)))),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_hole 9, template_hole 8)))),
                             template_var 0))))),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 9, template_hole 8))))),
             template_app
              (template_app (template_hole 13, template_var 2),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 3, template_var 1)),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_hole 11, template_var 1),
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9, template_hole 8)))),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 9, template_hole 8)))),
                           template_var 0))))),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 9, template_hole 8)))))
           ))),
    ("Quadratic.complex_quadratic_equation_monic_roots",
     "?\<xi> = (- ?b + ccsqrt (?b\<^sup>2 - 4 * ?c)) / 2 |
      ?\<xi> = (- ?b - ccsqrt (?b\<^sup>2 - 4 * ?c)) / 2 ==>
      ?\<xi>\<^sup>2 + ?b * ?\<xi> + ?c = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_app
                         (template_hole 10,
                          template_app (template_hole 9, template_var 1)),
                        template_app
                         (template_hole 8,
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 6, template_var 1),
                                template_app
                                 (template_hole 5,
                                  template_app
                                   (template_hole 4, template_hole 3)))),
                            template_app
                             (template_app
                               (template_hole 2,
                                template_app
                                 (template_hole 1,
                                  template_app
                                   (template_hole 4,
                                    template_app
                                     (template_hole 4, template_hole 3)))),
                              template_var 0))))),
                    template_app
                     (template_hole 1,
                      template_app (template_hole 4, template_hole 3))))),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 9, template_var 1)),
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 6, template_var 1),
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 4, template_hole 3)))),
                          template_app
                           (template_app
                             (template_hole 2,
                              template_app
                               (template_hole 1,
                                template_app
                                 (template_hole 4,
                                  template_app
                                   (template_hole 4, template_hole 3)))),
                            template_var 0))))),
                  template_app
                   (template_hole 1,
                    template_app (template_hole 4, template_hole 3)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3)))),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2))),
           template_var 0),
         template_hole 0))),
    ("Quadratic_Discriminant.discriminant_iff",
     "?a ~= 0 ==>
      (?a * ?x\<^sup>2 + ?b * ?x + ?c = 0) =
      (0 <= discrim ?a ?b ?c &
       (?x = (- ?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a) |
        ?x = (- ?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a)))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 16))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_var 3),
                     template_app
                      (template_app (template_hole 12, template_var 2),
                       template_app
                        (template_hole 11,
                         template_app
                          (template_hole 10, template_hole 9))))),
                 template_app
                  (template_app (template_hole 13, template_var 1),
                   template_var 2))),
             template_var 0),
           template_hole 16),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 16),
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 17, template_var 2),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_hole 3, template_var 1)),
                           template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 6, template_var 3),
                                 template_var 1),
                               template_var 0)))),
                       template_app
                        (template_app
                          (template_hole 13,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 10, template_hole 9))),
                         template_var 3)))),
                 template_app
                  (template_app (template_hole 17, template_var 2),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 0,
                           template_app (template_hole 3, template_var 1)),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 6, template_var 3),
                               template_var 1),
                             template_var 0)))),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 10, template_hole 9))),
                       template_var 3)))))
             )))),
    ("Quadratic_Discriminant.discriminant_nonneg",
     "[| ?a ~= 0; 0 <= discrim ?a ?b ?c |]
      ==> (?a * ?x\<^sup>2 + ?b * ?x + ?c = 0) =
          (?x = (- ?b + sqrt (discrim ?a ?b ?c)) / (2 * ?a) |
           ?x = (- ?b - sqrt (discrim ?a ?b ?c)) / (2 * ?a))",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 15)),
        template_inequation
         (less_equals, template_hole 15,
          template_app
           (template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2),
            template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 3),
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7, template_hole 6))))),
                 template_app
                  (template_app (template_hole 10, template_var 2),
                   template_var 0))),
             template_var 1),
           template_hole 15),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 16, template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app (template_hole 3, template_var 2)),
                         template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 13, template_var 3),
                               template_var 2),
                             template_var 1)))),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 7, template_hole 6))),
                       template_var 3)))),
               template_app
                (template_app (template_hole 16, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app (template_hole 3, template_var 2)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 13, template_var 3),
                             template_var 2),
                           template_var 1)))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 7, template_hole 6))),
                     template_var 3))))
             )))),
    ("Quadratic.viette2",
     "[| ?a ~= 0; 0 <= ?b\<^sup>2 - 4 * ?a * ?c;
         ?a * ?\<xi>1.0\<^sup>2 + ?b * ?\<xi>1.0 + ?c = 0;
         ?a * ?\<xi>2.0\<^sup>2 + ?b * ?\<xi>2.0 + ?c = 0;
         ?\<xi>1.0 ~= ?\<xi>2.0 |]
      ==> ?\<xi>1.0 * ?\<xi>2.0 = ?c / ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 10)),
        template_inequation
         (less_equals, template_hole 10,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4)))),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 2,
                      template_app
                       (template_hole 5,
                        template_app (template_hole 5, template_hole 4)))),
                  template_var 4)),
              template_var 2))),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4))))),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1))),
            template_var 2),
          template_hole 10),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 7, template_var 0),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4))))),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0))),
            template_var 2),
          template_hole 10),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 4)))),
    ("Quadratic.complex_quadratic_equation_two_roots",
     "[| ?a ~= 0; ?a * ?\<xi>\<^sup>2 + ?b * ?\<xi> + ?c = 0 |]
      ==> ?\<xi> = (- ?b + ccsqrt (?b\<^sup>2 - 4 * ?a * ?c)) / (2 * ?a) |
          ?\<xi> = (- ?b - ccsqrt (?b\<^sup>2 - 4 * ?a * ?c)) / (2 * ?a)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 12)),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_app
                     (template_app (template_hole 9, template_var 2),
                      template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_hole 6))))),
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 2))),
            template_var 0),
          template_hole 12)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 13, template_var 2),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app (template_hole 3, template_var 1)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 9, template_var 1),
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6)))),
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app
                                (template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 7, template_app (template_hole 7, template_hole 6)))),
                                 template_var 3)),
                             template_var 0))))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 0,
                         template_app (template_hole 7, template_hole 6))),
                     template_var 3)))),
             template_app
              (template_app (template_hole 13, template_var 2),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 3, template_var 1)),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 9, template_var 1),
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7, template_hole 6)))),
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 7,
                                     template_app
(template_hole 7, template_hole 6)))),
                               template_var 3)),
                           template_var 0))))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 0,
                       template_app (template_hole 7, template_hole 6))),
                   template_var 3))))
           ))),
    ("Quadratic.quadratic_change_coefficients",
     "[| ?A1.0 ~= 0;
         ?qf =
         (%x y. ?A1.0 * x\<^sup>2 + ?A1.0 * y\<^sup>2 + ?b1.0 * x +
                ?b2.0 * y +
                ?c);
         ?qf ?x ?y = 0;
         ?qf_1.0 =
         (%x y. x\<^sup>2 + y\<^sup>2 + ?b1.0 / ?A1.0 * x +
                ?b2.0 / ?A1.0 * y +
                ?c / ?A1.0) |]
      ==> ?qf_1.0 ?x ?y = 0",
     template_implication
      ([template_negation
         (template_equation (template_var 7, template_hole 8)),
        template_equation (template_var 6, t_empty),
        template_equation
         (template_app
           (template_app (template_var 6, template_var 2), template_var 1),
          template_hole 8),
        template_equation (template_var 0, t_empty)],
       template_equation
        (template_app
          (template_app (template_var 0, template_var 2), template_var 1),
         template_hole 8))),
    ("Quadratic.quadratic_linear_at_most_2_intersections_help'",
     "[| ?qf =
         (%x y. ?a11.0 * x\<^sup>2 + 2 * ?a12.0 * x * y +
                ?a22.0 * y\<^sup>2 +
                ?b1.0 * x +
                ?b2.0 * y +
                ?c);
         ?x = - ?n / ?k1.0; ?k1.0 ~= 0; ?qf ?x ?y = 0;
         ?yf =
         (%y. ?k1.0\<^sup>2 * ?a22.0 * y\<^sup>2 +
              (- 2 * ?a12.0 * ?n * ?k1.0 + ?b2.0 * ?k1.0\<^sup>2) * y +
              ?a11.0 * ?n\<^sup>2 -
              ?b1.0 * ?n * ?k1.0 +
              ?c * ?k1.0\<^sup>2) |]
      ==> ?yf ?y = 0",
     template_implication
      ([template_equation (template_var 11, t_empty),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 3)),
            template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 2)),
        template_equation
         (template_app
           (template_app (template_var 11, template_var 4), template_var 1),
          template_hole 2),
        template_equation (template_var 0, t_empty)],
       template_equation
        (template_app (template_var 0, template_var 1), template_hole 2))),
    ("Quadratic.quadratic_quadratic_at_most_2_intersections'",
     "[| ?b2.0 ~= ?B2.0 | ?b1.0 ~= ?B1.0;
         (?b2.0 - ?B2.0)\<^sup>2 + (?b1.0 - ?B1.0)\<^sup>2 ~= 0;
         ?qf1.0 =
         (%x y. x\<^sup>2 + y\<^sup>2 + ?b1.0 * x + ?b2.0 * y + ?c);
         ?qf2.0 =
         (%x y. x\<^sup>2 + y\<^sup>2 + ?B1.0 * x + ?B2.0 * y + ?C);
         ?qf1.0 ?x1.0 ?y1.0 = 0; ?qf2.0 ?x1.0 ?y1.0 = 0;
         ?qf1.0 ?x2.0 ?y2.0 = 0; ?qf2.0 ?x2.0 ?y2.0 = 0;
         (?x1.0, ?y1.0) ~= (?x2.0, ?y2.0); ?qf1.0 ?x ?y = 0;
         ?qf2.0 ?x ?y = 0 |]
      ==> (?x, ?y) = (?x1.0, ?y1.0) | (?x, ?y) = (?x2.0, ?y2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_var 13),
                    template_var 12))),
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 11),
                  template_var 10)))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 8, template_var 13),
                        template_var 12)),
                    template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_hole 5)))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 11),
                      template_var 10)),
                  template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_hole 5)))),
              template_hole 4)
            ),
        template_equation (template_var 9, t_empty),
        template_equation (template_var 7, t_empty),
        template_equation
         (template_app
           (template_app (template_var 9, template_var 5), template_var 4),
          template_hole 4),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 5), template_var 4),
          template_hole 4),
        template_equation
         (template_app
           (template_app (template_var 9, template_var 3), template_var 2),
          template_hole 4),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 3), template_var 2),
          template_hole 4),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 0, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_var 9, template_var 1), template_var 0),
          template_hole 4),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 1), template_var 0),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)))
           ))),
    ("Quadratic.quadratic_linear_at_most_2_intersections",
     "[| (?a11.0, ?a12.0, ?a22.0) ~= (0, 0, 0); (?k1.0, ?k2.0) ~= (0, 0);
         ?a11.0 * ?k2.0\<^sup>2 - 2 * ?a12.0 * ?k1.0 * ?k2.0 +
         ?a22.0 * ?k1.0\<^sup>2 ~=
         0;
         ?qf =
         (%x y. ?a11.0 * x\<^sup>2 + 2 * ?a12.0 * x * y +
                ?a22.0 * y\<^sup>2 +
                ?b1.0 * x +
                ?b2.0 * y +
                ?c);
         ?lf = (%x y. ?k1.0 * x + ?k2.0 * y + ?n); ?qf ?x1.0 ?y1.0 = 0;
         ?lf ?x1.0 ?y1.0 = 0; ?qf ?x2.0 ?y2.0 = 0; ?lf ?x2.0 ?y2.0 = 0;
         (?x1.0, ?y1.0) ~= (?x2.0, ?y2.0); ?qf ?x ?y = 0; ?lf ?x ?y = 0 |]
      ==> (?x, ?y) = (?x1.0, ?y1.0) | (?x, ?y) = (?x2.0, ?y2.0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 14, template_var 16),
                template_app
                 (template_app (template_hole 13, template_var 15),
                  template_var 14)),
              template_app
               (template_app (template_hole 14, template_hole 12),
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_hole 12)))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 13, template_var 13),
                template_var 12),
              template_app
               (template_app (template_hole 13, template_hole 12),
                template_hole 12))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 7, template_var 16),
                        template_app
                         (template_app (template_hole 6, template_var 12),
                          template_app
                           (template_hole 5,
                            template_app
                             (template_hole 4, template_hole 3))))),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 2,
                                  template_app
                                   (template_hole 4, template_hole 3))),
                              template_var 15)),
                          template_var 13)),
                      template_var 12))),
                template_app
                 (template_app (template_hole 7, template_var 14),
                  template_app
                   (template_app (template_hole 6, template_var 13),
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_hole 3))))),
              template_hole 12)
            ),
        template_equation (template_var 11, t_empty),
        template_equation (template_var 7, t_empty),
        template_equation
         (template_app
           (template_app (template_var 11, template_var 5), template_var 4),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 5), template_var 4),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_var 11, template_var 3), template_var 2),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 3), template_var 2),
          template_hole 12),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 13, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_var 11, template_var 1), template_var 0),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_var 7, template_var 1), template_var 0),
          template_hole 12)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 13, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 13, template_var 5),
                   template_var 4))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 13, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 13, template_var 3),
                 template_var 2)))
           ))),
    ("Quadratic.quadratic_quadratic_at_most_2_intersections",
     "[| ?A1.0 ~= 0; ?A2.0 ~= 0;
         ?qf1.0 =
         (%x y. ?A1.0 * x\<^sup>2 + ?A1.0 * y\<^sup>2 + ?b1.0 * x +
                ?b2.0 * y +
                ?c);
         ?qf2.0 =
         (%x y. ?A2.0 * x\<^sup>2 + ?A2.0 * y\<^sup>2 + ?B1.0 * x +
                ?B2.0 * y +
                ?C);
         ?qf1.0 ?x1.0 ?y1.0 = 0; ?qf2.0 ?x1.0 ?y1.0 = 0;
         ?qf1.0 ?x2.0 ?y2.0 = 0; ?qf2.0 ?x2.0 ?y2.0 = 0;
         (?x1.0, ?y1.0) ~= (?x2.0, ?y2.0); ?qf1.0 ?x ?y = 0;
         ?qf2.0 ?x ?y = 0;
         (?b2.0 * ?A2.0 - ?B2.0 * ?A1.0)\<^sup>2 +
         (?b1.0 * ?A2.0 - ?B1.0 * ?A1.0)\<^sup>2 ~=
         0;
         ?b2.0 * ?A2.0 ~= ?B2.0 * ?A1.0 | ?b1.0 * ?A2.0 ~= ?B1.0 * ?A1.0 |]
      ==> (?x, ?y) = (?x1.0, ?y1.0) | (?x, ?y) = (?x2.0, ?y2.0)",
     template_implication
      ([template_negation
         (template_equation (template_var 15, template_hole 11)),
        template_negation
         (template_equation (template_var 14, template_hole 11)),
        template_equation (template_var 13, t_empty),
        template_equation (template_var 9, t_empty),
        template_equation
         (template_app
           (template_app (template_var 13, template_var 5), template_var 4),
          template_hole 11),
        template_equation
         (template_app
           (template_app (template_var 9, template_var 5), template_var 4),
          template_hole 11),
        template_equation
         (template_app
           (template_app (template_var 13, template_var 3), template_var 2),
          template_hole 11),
        template_equation
         (template_app
           (template_app (template_var 9, template_var 3), template_var 2),
          template_hole 11),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_var 13, template_var 1), template_var 0),
          template_hole 11),
        template_equation
         (template_app
           (template_app (template_var 9, template_var 1), template_var 0),
          template_hole 11),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_hole 1,
                          template_app
                           (template_app (template_hole 8, template_var 11),
                            template_var 14)),
                        template_app
                         (template_app (template_hole 8, template_var 7),
                          template_var 15))),
                    template_app
                     (template_hole 6,
                      template_app (template_hole 5, template_hole 4)))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 1,
                        template_app
                         (template_app (template_hole 8, template_var 12),
                          template_var 14)),
                      template_app
                       (template_app (template_hole 8, template_var 8),
                        template_var 15))),
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4)))),
              template_hole 11)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 8, template_var 11),
                        template_var 14)),
                    template_app
                     (template_app (template_hole 8, template_var 7),
                      template_var 15)))),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 8, template_var 12),
                      template_var 14)),
                  template_app
                   (template_app (template_hole 8, template_var 8),
                    template_var 15))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 4))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)))
           ))),
    ("Quadratic.quadratic_linear_at_most_2_intersections_help",
     "[| (?a11.0, ?a12.0, ?a22.0) ~= (0, 0, 0); ?k2.0 ~= 0;
         ?qf =
         (%x y. ?a11.0 * x\<^sup>2 + 2 * ?a12.0 * x * y +
                ?a22.0 * y\<^sup>2 +
                ?b1.0 * x +
                ?b2.0 * y +
                ?c);
         ?lf = (%x y. ?k1.0 * x + ?k2.0 * y + ?n); ?qf ?x ?y = 0;
         ?lf ?x ?y = 0;
         ?pf =
         (%x. (?a11.0 - 2 * ?a12.0 * ?k1.0 / ?k2.0 +
               ?a22.0 * ?k1.0\<^sup>2 / ?k2.0\<^sup>2) *
              x\<^sup>2 +
              (- 2 * ?a12.0 * ?n / ?k2.0 + ?b1.0 +
               ?a22.0 * 2 * ?n * ?k1.0 / ?k2.0\<^sup>2 -
               ?b2.0 * ?k1.0 / ?k2.0) *
              x +
              ?a22.0 * ?n\<^sup>2 / ?k2.0\<^sup>2 -
              ?b2.0 * ?n / ?k2.0 +
              ?c);
         ?yf = (%x. (- ?n - ?k1.0 * x) / ?k2.0) |]
      ==> ?y = ?yf ?x",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 15, template_var 14),
                template_app
                 (template_app (template_hole 14, template_var 13),
                  template_var 12)),
              template_app
               (template_app (template_hole 15, template_hole 13),
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_hole 13)))
            ),
        template_negation
         (template_equation (template_var 11, template_hole 13)),
        template_equation (template_var 10, t_empty),
        template_equation (template_var 6, t_empty),
        template_equation
         (template_app
           (template_app (template_var 10, template_var 3), template_var 2),
          template_hole 13),
        template_equation
         (template_app
           (template_app (template_var 6, template_var 3), template_var 2),
          template_hole 13),
        template_equation (template_var 1, t_empty),
        template_equation (template_var 0, t_empty)],
       template_equation
        (template_var 2, template_app (template_var 0, template_var 3)))),
    ("Quadratic.quadratic_linear_at_most_2_intersections_help",
     "[| (?a11.0, ?a12.0, ?a22.0) ~= (0, 0, 0); ?k2.0 ~= 0;
         ?qf =
         (%x y. ?a11.0 * x\<^sup>2 + 2 * ?a12.0 * x * y +
                ?a22.0 * y\<^sup>2 +
                ?b1.0 * x +
                ?b2.0 * y +
                ?c);
         ?lf = (%x y. ?k1.0 * x + ?k2.0 * y + ?n); ?qf ?x ?y = 0;
         ?lf ?x ?y = 0;
         ?pf =
         (%x. (?a11.0 - 2 * ?a12.0 * ?k1.0 / ?k2.0 +
               ?a22.0 * ?k1.0\<^sup>2 / ?k2.0\<^sup>2) *
              x\<^sup>2 +
              (- 2 * ?a12.0 * ?n / ?k2.0 + ?b1.0 +
               ?a22.0 * 2 * ?n * ?k1.0 / ?k2.0\<^sup>2 -
               ?b2.0 * ?k1.0 / ?k2.0) *
              x +
              ?a22.0 * ?n\<^sup>2 / ?k2.0\<^sup>2 -
              ?b2.0 * ?n / ?k2.0 +
              ?c);
         ?yf = (%x. (- ?n - ?k1.0 * x) / ?k2.0) |]
      ==> ?pf ?x = 0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 15, template_var 14),
                template_app
                 (template_app (template_hole 14, template_var 13),
                  template_var 12)),
              template_app
               (template_app (template_hole 15, template_hole 13),
                template_app
                 (template_app (template_hole 14, template_hole 13),
                  template_hole 13)))
            ),
        template_negation
         (template_equation (template_var 11, template_hole 13)),
        template_equation (template_var 10, t_empty),
        template_equation (template_var 6, t_empty),
        template_equation
         (template_app
           (template_app (template_var 10, template_var 3), template_var 2),
          template_hole 13),
        template_equation
         (template_app
           (template_app (template_var 6, template_var 3), template_var 2),
          template_hole 13),
        template_equation (template_var 1, t_empty),
        template_equation (template_var 0, t_empty)],
       template_equation
        (template_app (template_var 1, template_var 3),
         template_hole 13)))]:
   (string * thm * template) list
### theory "Draft.QuadraticMoreTemplates"
### 0.351s elapsed time, 0.518s cpu time, 0.071s GC time
val it = (): unit
