Loading theory "Draft.Linear_Systems" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices")
Loading theory "Draft.More_Set" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "Draft.Circlines")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.More_Set"
### 0.059s elapsed time, 0.269s cpu time, 0.000s GC time
Loading theory "HOL-Library.Product_Plus" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "HOL-Analysis.Product_Vector")
### theory "Draft.Linear_Systems"
### 0.080s elapsed time, 0.353s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  prod :: (zero, zero) zero
  zero_prod == zero_class.zero :: 'a * 'b
instantiation
  prod :: (plus, plus) plus
  plus_prod == plus :: 'a * 'b => 'a * 'b => 'a * 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  prod :: (minus, minus) minus
  minus_prod == minus :: 'a * 'b => 'a * 'b => 'a * 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  prod :: (uminus, uminus) uminus
  uminus_prod == uminus :: 'a * 'b => 'a * 'b
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.505s cpu time, 0.039s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Product_Plus"
### 0.104s elapsed time, 0.399s cpu time, 0.039s GC time
Loading theory "HOL-Analysis.Inner_Product" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.831s cpu time, 0.082s GC time
Loading theory "HOL-Analysis.L2_Norm" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "HOL-Analysis.Euclidean_Space")
### theory "HOL-Library.Nat_Bijection"
### 0.333s elapsed time, 1.331s cpu time, 0.121s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Analysis.L2_Norm"
### 0.083s elapsed time, 0.323s cpu time, 0.000s GC time
Loading theory "HOL-Analysis.Product_Vector" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
locale module_prod
  fixes s1 :: "'a => 'b => 'b"
    and s2 :: "'a => 'c => 'c"
  assumes "module_prod s1 s2"
class real_inner = dist_norm + real_vector + sgn_div_norm +
  uniformity_dist + open_uniformity +
  fixes inner :: "'a => 'a => real"
  assumes "inner_commute": "!!x y. inner x y = inner y x"
    and "inner_add_left": "!!x y z. inner (x + y) z = inner x z + inner y z"
    and
    "inner_scaleR_left": "!!r x y. inner (r *\<^sub>R x) y = r * inner x y"
    and "inner_ge_zero": "!!x. 0 <= inner x x"
    and "inner_eq_zero_iff": "!!x. (inner x x = 0) = (x = (0::'a))"
    and "norm_eq_sqrt_inner": "!!x. norm x = sqrt (inner x x)"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
locale vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
  assumes "vector_space_prod (*a) (*b)"
### Cannot skip proof of schematic goal statement
consts
  snth :: "'a stream => nat => 'a"
instantiation
  prod :: (real_vector, real_vector) real_vector
  scaleR_prod == scaleR :: real => 'a * 'b => 'a * 'b
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### Cannot skip proof of schematic goal statement
class height = type +
  fixes height :: "'a => nat"
instantiation
  prod :: (metric_space, metric_space) dist
  dist_prod == dist :: 'a * 'b => 'a * 'b => real
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
instantiation
  prod :: (uniformity, uniformity) uniformity
  uniformity_prod == uniformity :: (('a * 'b) * 'a * 'b) filter
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
instantiation
  prod :: (uniform_space, uniform_space) uniform_space
instantiation
  prod :: (metric_space, metric_space) uniformity_dist
instantiation
  prod :: (metric_space, metric_space) metric_space
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
instantiation
  prod :: (real_normed_vector, real_normed_vector) real_normed_vector
  sgn_prod == sgn :: 'a * 'b => 'a * 'b
  norm_prod == norm :: 'a * 'b => real
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
instantiation
  real :: real_inner
  inner_real == inner :: real => real => real
instantiation
  complex :: real_inner
  inner_complex == inner :: complex => complex => real
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
bundle inner_syntax
bundle no_inner_syntax
### theory "HOL-Analysis.Inner_Product"
### 1.233s elapsed time, 4.706s cpu time, 0.831s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Stream"
### 1.090s elapsed time, 4.151s cpu time, 0.749s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex" via "Draft.More_Transcendental")
Found termination order: "size <*mlex*> {}"
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
locale finite_dimensional_vector_space_prod
  fixes s1 :: "'a => 'b => 'b"  (infixr \<open>*a\<close> 75)
    and s2 :: "'a => 'c => 'c"  (infixr \<open>*b\<close> 75)
    and B1 :: "'b set"
    and B2 :: "'c set"
  assumes "finite_dimensional_vector_space_prod (*a) (*b) B1 B2"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
Found termination order: "size <*mlex*> {}"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Analysis.Product_Vector"
### 1.158s elapsed time, 4.402s cpu time, 0.819s GC time
Loading theory "HOL-Analysis.Euclidean_Space" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Periodic_Fun"
### 0.189s elapsed time, 0.738s cpu time, 0.070s GC time
Loading theory "Draft.More_Transcendental" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.More_Transcendental"
### 0.122s elapsed time, 0.474s cpu time, 0.071s GC time
Loading theory "Draft.Canonical_Angle" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates" via "Draft.More_Complex")
Found termination order: "size <*mlex*> {}"
### theory "Draft.Canonical_Angle"
### 0.096s elapsed time, 0.384s cpu time, 0.000s GC time
Loading theory "Draft.More_Complex" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.More_Complex"
### 0.582s elapsed time, 2.145s cpu time, 0.992s GC time
Loading theory "Draft.Angles" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "Draft.Circlines" via "Draft.Elementary_Complex_Geometry")
### theory "HOL-Library.BigO"
### 1.085s elapsed time, 4.129s cpu time, 1.133s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices" via "Draft.Quadratic")
### theory "HOL-Library.Tree"
### 2.441s elapsed time, 9.317s cpu time, 2.030s GC time
Loading theory "Draft.Templates" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Angles"
### 0.146s elapsed time, 0.578s cpu time, 0.066s GC time
Loading theory "Draft.Elementary_Complex_Geometry" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "Draft.Circlines")
class euclidean_space = real_inner +
  fixes Basis :: "'a set"
  assumes "nonempty_Basis": "Basis ~= {}"
  assumes "finite_Basis": "finite Basis"
  assumes
    "inner_Basis":
      "!!u v.
          [| u : Basis; v : Basis |]
          ==> inner u v = (if u = v then 1 else 0)"
  assumes
    "euclidean_all_zero_iff":
      "!!x. (ALL u:Basis. inner x u = 0) = (x = (0::'a))"
### theory "HOL-Library.Quadratic_Discriminant"
### 0.108s elapsed time, 0.425s cpu time, 0.066s GC time
Loading theory "Draft.Quadratic" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates" via "Draft.Matrices")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.084s elapsed time, 0.335s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Chordal_MetricMoreTemplates")
### theory "Draft.Quadratic"
### 0.327s elapsed time, 1.279s cpu time, 0.172s GC time
Loading theory "Draft.Matrices" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Homogeneous_Coordinates")
### theory "Draft.Elementary_Complex_Geometry"
### 0.566s elapsed time, 2.230s cpu time, 0.253s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.694s elapsed time, 2.605s cpu time, 0.320s GC time
Found termination order: "{}"
instantiation
  real :: euclidean_space
  Basis_real == Basis :: real set
instantiation
  complex :: euclidean_space
  Basis_complex == Basis :: complex set
Found termination order: "{}"
instantiation
  prod :: (real_inner, real_inner) real_inner
  inner_prod == inner :: 'a * 'b => 'a * 'b => real
instantiation
  prod :: (euclidean_space, euclidean_space) euclidean_space
  Basis_prod == Basis :: ('a * 'b) set
### Cannot skip proof of schematic goal statement
Found termination order: "{}"
### Cannot skip proof of schematic goal statement
Found termination order: "{}"
### theory "HOL-Analysis.Euclidean_Space"
### 1.959s elapsed time, 7.110s cpu time, 1.449s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.Matrices"
### 1.288s elapsed time, 2.643s cpu time, 0.271s GC time
Loading theory "Draft.Homogeneous_Coordinates" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric")
Loading theory "Draft.Unitary_Matrices" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "Draft.Circlines" via "Draft.Hermitean_Matrices")
### theory "Draft.Unitary_Matrices"
### 0.070s elapsed time, 0.145s cpu time, 0.000s GC time
Loading theory "Draft.Hermitean_Matrices" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "Draft.Circlines")
### theory "Draft.Hermitean_Matrices"
### 0.369s elapsed time, 1.157s cpu time, 1.006s GC time
### theory "Draft.Homogeneous_Coordinates"
### 0.874s elapsed time, 1.767s cpu time, 1.060s GC time
Loading theory "Draft.Moebius" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere" via "Draft.Circlines")
instantiation
  moebius :: group_add
  minus_moebius == minus :: moebius => moebius => moebius
  uminus_moebius == uminus_class.uminus :: moebius => moebius
  zero_moebius == zero_class.zero :: moebius
  plus_moebius == plus :: moebius => moebius => moebius
### theory "Draft.Moebius"
### 0.591s elapsed time, 0.657s cpu time, 0.089s GC time
Loading theory "Draft.Circlines" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric" via "Draft.Riemann_Sphere")
### theory "Draft.Circlines"
### 1.312s elapsed time, 1.508s cpu time, 0.263s GC time
Loading theory "Draft.Oriented_Circlines" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric")
Loading theory "Draft.Riemann_Sphere" (required by "Draft.Chordal_MetricMoreTemplates" via "Draft.Chordal_Metric")
Found termination order: "{}"
### theory "Draft.Oriented_Circlines"
### 0.413s elapsed time, 0.875s cpu time, 0.095s GC time
### theory "Draft.Riemann_Sphere"
### 0.658s elapsed time, 1.195s cpu time, 0.187s GC time
Loading theory "Draft.Chordal_Metric" (required by "Draft.Chordal_MetricMoreTemplates")
instantiation
  complex_homo :: metric_space
  dist_complex_homo == dist :: complex_homo => complex_homo => real
  uniformity_complex_homo == uniformity ::
    (complex_homo * complex_homo) filter
  open_complex_homo == open :: complex_homo set => bool
instantiation
  riemann_sphere :: metric_space
  dist_riemann_sphere == dist :: riemann_sphere => riemann_sphere => real
  uniformity_riemann_sphere == uniformity ::
    (riemann_sphere * riemann_sphere) filter
  open_riemann_sphere == open :: riemann_sphere set => bool
instantiation
  riemann_sphere :: perfect_space
instantiation
  complex_homo :: perfect_space
### theory "Draft.Chordal_Metric"
### 0.677s elapsed time, 0.745s cpu time, 0.092s GC time
Loading theory "Draft.Chordal_MetricMoreTemplates"
val templateLemmas =
   [("Chordal_Metric.dist_fs_zero1", "dist_fs ?z ?z = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Chordal_Metric.dist_rieman_sphere_zero",
     "dist_riemann_sphere' ?M ?M = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Chordal_Metric.dist_riemann_sphere_ge_0",
     "0 <= dist_riemann_sphere' ?M1.0 ?M2.0",
     template_inequation
      (less_equals, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chordal_Metric.real_inprod_cvec", "is_real \<langle>?z,?z\<rangle>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 0)),
       template_hole 0)),
    ("Chordal_Metric.inprod_cvec_ge_zero",
     "0 <= Re \<langle>?z,?z\<rangle>",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Chordal_Metric.dist_fs_sym",
     "dist_fs ?z1.0 ?z2.0 = dist_fs ?z2.0 ?z1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Chordal_Metric.dist_riemann_sphere_sym",
     "dist_riemann_sphere' ?M1.0 ?M2.0 = dist_riemann_sphere' ?M2.0 ?M1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Chordal_Metric.dist_stereographic'",
     "dist_fs ?A ?B =
      dist_riemann_sphere' (inv_stereographic ?A) (inv_stereographic ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Chordal_Metric.dist_stereographic",
     "dist_riemann_sphere' ?M1.0 ?M2.0 =
      dist_fs (stereographic ?M1.0) (stereographic ?M2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Chordal_Metric.norm_cvec_gt_0",
     "?z ~= vec_zero ==> 0 < \<langle>?z\<rangle>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Chordal_Metric.dist_fs_zero2",
     "dist_fs ?z1.0 ?z2.0 = 0 ==> ?z1.0 = ?z2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation (template_var 1, template_var 0))),
    ("Chordal_Metric.sqrt_1_plus_square", "sqrt (1 + ?a\<^sup>2) ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))))),
           template_hole 0)
         )),
    ("Chordal_Metric.norm_cvec_square",
     "\<langle>?z\<rangle>\<^sup>2 = Re \<langle>?z,?z\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 0)))),
    ("Chordal_Metric.dist_fs_triangle",
     "dist_fs ?A ?B <= dist_fs ?A ?C + dist_fs ?C ?B",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("Chordal_Metric.inprod_cvec_g_zero",
     "?z ~= vec_zero ==> 0 < Re \<langle>?z,?z\<rangle>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))))),
    ("Chordal_Metric.chordal_circle_det_positive",
     "?x * ?y < 0 ==> 0 < ?x / (?x - ?y)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Chordal_Metric.cor_sqrt_squared",
     "0 <= ?x ==> (cor (sqrt ?x))\<^sup>2 = cor ?x",
     template_implication
      ([template_inequation (less_equals, template_hole 7, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_app (template_hole 4, template_var 0)))),
    ("Chordal_Metric.inprod_cvec_bilinear2",
     "?z' = ?k *\<^sub>s\<^sub>v ?z ==>
      \<langle>?w,?z'\<rangle> = ?k * \<langle>?w,?z\<rangle>",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Chordal_Metric.inprod_cvec_bilinear1",
     "?z' = ?k *\<^sub>s\<^sub>v ?z ==>
      \<langle>?z',?w\<rangle> = cnj ?k * \<langle>?z,?w\<rangle>",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Chordal_Metric.dist_fs_infinite2",
     "dist_fs \<infinity>\<^sub>h (of_complex ?z1.0) =
      2 / sqrt (1 + (cmod ?z1.0)\<^sup>2)",
     template_equation
      (template_app
        (template_app (template_hole 12, template_hole 11),
         template_app (template_hole 10, template_var 0)),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 7, template_hole 6)))))))),
    ("Chordal_Metric.dist_fs_infinite1",
     "dist_fs (of_complex ?z1.0) \<infinity>\<^sub>h =
      2 / sqrt (1 + (cmod ?z1.0)\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 0)),
         template_hole 10),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_hole 6))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 7, template_hole 6)))))))),
    ("Chordal_Metric.chordal_circle_cmat_hermitean_nonzero",
     "?a ~= vec_zero ==>
      chordal_circle_cvec_cmat ?a ?r : hermitean_nonzero",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             template_app (template_hole 4, t_empty))
           ))),
    ("Chordal_Metric.norm_cvec_scale",
     "?z' = ?k *\<^sub>s\<^sub>v ?z ==>
      \<langle>?z'\<rangle>\<^sup>2 =
      Re (cnj ?k * ?k) * \<langle>?z\<rangle>\<^sup>2",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 2)),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))))))),
    ("Chordal_Metric.dist_stereographic_infinite",
     "[| stereographic ?M1.0 = \<infinity>\<^sub>h;
         stereographic ?M2.0 = of_complex ?m2.0 |]
      ==> dist_riemann_sphere' ?M1.0 ?M2.0 =
          2 / sqrt (1 + (cmod ?m2.0)\<^sup>2)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 2),
          template_hole 13),
        template_equation
         (template_app (template_hole 14, template_var 1),
          template_app (template_hole 12, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 10, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app (template_hole 7, template_hole 6))),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 7, template_hole 6))))))))),
    ("Chordal_Metric.dist_fs_finite",
     "dist_fs (of_complex ?z1.0) (of_complex ?z2.0) =
      2 * cmod (?z1.0 - ?z2.0) /
      (sqrt (1 + (cmod ?z1.0)\<^sup>2) * sqrt (1 + (cmod ?z2.0)\<^sup>2))",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app (template_hole 12, template_var 1)),
         template_app (template_hole 12, template_var 0)),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app (template_hole 8, template_hole 7))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 6, template_var 1)),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 8, template_hole 7)))))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_hole 7))))))))),
    ("Chordal_Metric.continuous_on_iff",
     "continuous_on ?s ?f =
      (ALL x:?s.
          ALL e>0.
             EX d>0. ALL x':?s. dist x' x < d --> dist (?f x') (?f x) < e)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 8, template_var 1), t_empty))),
    ("Chordal_Metric.dist_fs_cvec_zero",
     "[| ?z ~= vec_zero; ?w ~= vec_zero |]
      ==> (dist_fs_cvec ?z ?w = 0) =
          ((cmod \<langle>?z,?w\<rangle>)\<^sup>2 =
           \<langle>?z\<rangle>\<^sup>2 * \<langle>?w\<rangle>\<^sup>2)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0),
           template_hole 8),
         template_equation
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 0, template_var 1)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 0, template_var 0)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))))),
    ("Chordal_Metric.Lim_within",
     "(?f \<longlongrightarrow> ?l) (at ?a within ?S) =
      (ALL e>0.
          EX d>0.
             ALL x:?S.
                0 < dist x ?a & dist x ?a < d --> dist (?f x) ?l < e)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 11, template_var 3),
           template_app (template_hole 10, template_var 2)),
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("Chordal_Metric.dist_fs_cvec_iff",
     "[| ?z ~= vec_zero; ?w ~= vec_zero |]
      ==> dist_fs_cvec ?z ?w =
          2 *
          sqrt
           (1 -
            (cmod \<langle>?z,?w\<rangle>)\<^sup>2 /
            (\<langle>?z\<rangle>\<^sup>2 * \<langle>?w\<rangle>\<^sup>2))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (template_equation (template_var 0, template_hole 15))],
       template_equation
        (template_app
          (template_app (template_hole 13, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app (template_hole 10, template_hole 9))),
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 1),
                           template_var 0))),
                     template_app
                      (template_hole 1,
                       template_app (template_hole 10, template_hole 9)))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 0, template_var 1)),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 10, template_hole 9)))),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 0, template_var 0)),
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 10, template_hole 9))))))))))),
    ("Chordal_Metric.chordal_circle1",
     "[| is_real ?A; is_real ?D; Re (?A * ?D) < 0;
         ?r = sqrt (Re (4 * ?A / (?A - ?D))) |]
      ==> mk_circline ?A 0 0 ?D = chordal_circle \<infinity>\<^sub>h ?r",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_hole 14),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_hole 14),
        template_inequation
         (less_than,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)),
          template_hole 14),
        template_equation
         (template_var 0,
          template_app
           (template_hole 10,
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 7, template_hole 6)))),
                    template_var 2)),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2),
             template_hole 2),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Chordal_Metric.chordal_circle2",
     "[| is_real ?A; is_real ?D; Re (?A * ?D) < 0;
         ?r = sqrt (Re (4 * ?D / (?D - ?A))) |]
      ==> mk_circline ?A 0 0 ?D = chordal_circle 0\<^sub>h ?r",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 2),
          template_hole 14),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_hole 14),
        template_inequation
         (less_than,
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)),
          template_hole 14),
        template_equation
         (template_var 0,
          template_app
           (template_hole 10,
            template_app
             (template_hole 12,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 7, template_hole 6)))),
                    template_var 1)),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 2)))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 2),
             template_hole 2),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Chordal_Metric.dist_stereographic_finite",
     "[| stereographic ?M1.0 = of_complex ?m1.0;
         stereographic ?M2.0 = of_complex ?m2.0 |]
      ==> dist_riemann_sphere' ?M1.0 ?M2.0 =
          2 * cmod (?m1.0 - ?m2.0) /
          (sqrt (1 + (cmod ?m1.0)\<^sup>2) *
           sqrt (1 + (cmod ?m2.0)\<^sup>2))",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 3),
          template_app (template_hole 14, template_var 2)),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 12, template_var 3), template_var 1),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 6, template_var 2)),
                     template_app
                      (template_hole 0,
                       template_app (template_hole 8, template_hole 7)))))),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 6, template_var 0)),
                   template_app
                    (template_hole 0,
                     template_app
                      (template_hole 8, template_hole 7)))))))))),
    ("Chordal_Metric.dist_fs_triangle_infinite2",
     "1 / sqrt (1 + (cmod ?a)\<^sup>2)
      <= cmod (?a - ?c) /
         (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2)) +
         1 / sqrt (1 + (cmod ?c)\<^sup>2)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 10, template_hole 9),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 9),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 9),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 1)),
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3, template_hole 2)))))),
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 0)),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 3, template_hole 2)))))))),
         template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 9),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2))))))))),
    ("Chordal_Metric.dist_fs_triangle_infinite1",
     "1 / sqrt (1 + (cmod ?b)\<^sup>2)
      <= 1 / sqrt (1 + (cmod ?c)\<^sup>2) +
         cmod (?b - ?c) /
         (sqrt (1 + (cmod ?b)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2))",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 10, template_hole 9),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 9),
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 10, template_hole 9),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2))))))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 1)),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2)))))),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3, template_hole 2)))))))))),
    ("Chordal_Metric.dist_fs_triangle_infinite3",
     "cmod (?a - ?b) /
      (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?b)\<^sup>2))
      <= 1 / sqrt (1 + (cmod ?a)\<^sup>2) +
         1 / sqrt (1 + (cmod ?b)\<^sup>2)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 1)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))))),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 9, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 10, template_hole 4),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 1)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))))))),
         template_app
          (template_app (template_hole 10, template_hole 4),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 9, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Chordal_Metric.dist_riemann_sphere_r3_inner",
     "[| ?M1.0 : unit_sphere; ?M2.0 : unit_sphere |]
      ==> (dist_riemann_sphere_r3 ?M1.0 ?M2.0)\<^sup>2 =
          2 - 2 * inner ?M1.0 ?M2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_app
               (template_hole 14, template_app (template_hole 13, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app
               (template_hole 14, template_app (template_hole 13, t_empty)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 4, template_hole 3))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 1,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Chordal_Metric.dist_fs_triangle_finite",
     "cmod (?a - ?b) /
      (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?b)\<^sup>2))
      <= cmod (?a - ?c) /
         (sqrt (1 + (cmod ?a)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2)) +
         cmod (?c - ?b) /
         (sqrt (1 + (cmod ?b)\<^sup>2) * sqrt (1 + (cmod ?c)\<^sup>2))",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 2)),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))))),
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 9, template_var 1)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app (template_hole 9, template_var 2)),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 1, template_hole 0)))))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 9, template_var 0)),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1, template_hole 0)))))))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app (template_hole 9, template_var 1)),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0)))))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 9, template_var 0)),
                   template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1, template_hole 0)))))))))),
    ("Chordal_Metric.chordal_circle'",
     "[| ?B ~= 0; (?A, ?B, ?C, ?D) : hermitean_nonzero;
         Re (mat_det (?A, ?B, ?C, ?D)) <= 0;
         ?C * ?a\<^sup>2 + (?D - ?A) * ?a - ?B = 0;
         ?r =
         sqrt ((4 - Re (- 4 * ?a / ?B * ?A)) / (1 + Re (?a * cnj ?a))) |]
      ==> mk_circline ?A ?B ?C ?D = chordal_circle (of_complex ?a) ?r",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 35)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 34,
                template_app
                 (template_app (template_hole 33, template_var 4),
                  template_app
                   (template_app (template_hole 32, template_var 5),
                    template_app
                     (template_app (template_hole 31, template_var 3),
                      template_var 2)))),
              template_app (template_hole 30, t_empty))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 24,
            template_app
             (template_hole 23,
              template_app
               (template_app (template_hole 33, template_var 4),
                template_app
                 (template_app (template_hole 32, template_var 5),
                  template_app
                   (template_app (template_hole 31, template_var 3),
                    template_var 2))))),
          template_hole 22),
        template_equation
         (template_app
           (template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 19, template_var 3),
                    template_app
                     (template_app (template_hole 18, template_var 1),
                      template_app
                       (template_hole 17,
                        template_app
                         (template_hole 16, template_hole 15))))),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app (template_hole 21, template_var 2),
                      template_var 4)),
                  template_var 1))),
            template_var 5),
          template_hole 35),
        template_equation
         (template_var 0,
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_hole 10,
                      template_app
                       (template_hole 16,
                        template_app
                         (template_hole 16, template_hole 15)))),
                  template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 19,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7,
                                    template_app
                                     (template_hole 16,
template_app (template_hole 16, template_hole 15))))),
                              template_var 1)),
                          template_var 5)),
                      template_var 4)))),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_hole 24,
                  template_app
                   (template_app (template_hole 19, template_var 1),
                    template_app (template_hole 4, template_var 1)))))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 5),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Chordal_Metric.chordal_circle_radius_positive",
     "[| hermitean (?A, ?B, ?C, ?D); Re (mat_det (?A, ?B, ?C, ?D)) <= 0;
         ?B ~= 0; ?dsc = sqrt (Re ((?D - ?A)\<^sup>2 + 4 * (?B * cnj ?B)));
         ?a1.0 = (?A - ?D + cor ?dsc) / (2 * ?C);
         ?a2.0 = (?A - ?D - cor ?dsc) / (2 * ?C) |]
      ==> - 1 <= Re (?A * ?a1.0 / ?B) & - 1 <= Re (?A * ?a2.0 / ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 26,
              template_app
               (template_app (template_hole 25, template_var 6),
                template_app
                 (template_app (template_hole 24, template_var 5),
                  template_app
                   (template_app (template_hole 23, template_var 4),
                    template_var 3))))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 21,
            template_app
             (template_hole 20,
              template_app
               (template_app (template_hole 25, template_var 6),
                template_app
                 (template_app (template_hole 24, template_var 5),
                  template_app
                   (template_app (template_hole 23, template_var 4),
                    template_var 3))))),
          template_hole 19),
        template_negation
         (template_equation (template_var 5, template_hole 16)),
        template_equation
         (template_var 2,
          template_app
           (template_hole 14,
            template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_hole 12,
                      template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 6)),
                    template_app
                     (template_hole 10,
                      template_app (template_hole 9, template_hole 8)))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_hole 9,
                        template_app (template_hole 9, template_hole 8)))),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app (template_hole 5, template_var 5))))))),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 11, template_var 6),
                    template_var 3)),
                template_app (template_hole 3, template_var 2))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_hole 8))),
              template_var 4))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 11, template_var 6),
                    template_var 3)),
                template_app (template_hole 3, template_var 2))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app (template_hole 9, template_hole 8))),
              template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 22,
                   template_app (template_hole 1, template_hole 0)),
                 template_app
                  (template_hole 21,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 7, template_var 6),
                         template_var 1)),
                     template_var 5)))),
             template_app
              (template_app
                (template_hole 22,
                 template_app (template_hole 1, template_hole 0)),
               template_app
                (template_hole 21,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 7, template_var 6),
                       template_var 0)),
                   template_var 5))))
           )))]:
   (string * thm * template) list
### theory "Draft.Chordal_MetricMoreTemplates"
### 0.439s elapsed time, 0.639s cpu time, 0.126s GC time
val it = (): unit
