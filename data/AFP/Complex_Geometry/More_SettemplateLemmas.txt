   [("More_Set.infinite_contains_2_elems",
     "infinite ?A ==> EX x y. x ~= y & x : ?A & y : ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("More_Set.card_eq_2_iff_doubleton",
     "(card ?A = 2) = (EX x y. x ~= y & ?A = {x, y})",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_hole 7))),
       template_app (template_hole 6, t_empty))),
    ("More_Set.card_geq_2_iff_contains_2_elems",
     "(2 <= card ?A) = (finite ?A & (EX x y. x ~= y & x : ?A & y : ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app (template_hole 8, template_hole 7))),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty)))),
    ("More_Set.bij_image_singleton",
     "[| ?f ` ?A = {?b}; ?f ?a = ?b; bij ?f |] ==> ?A = {?a}",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_hole 7)),
        template_equation
         (template_app (template_var 3, template_var 0), template_var 1),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_hole 4),
              template_hole 3)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("More_Set.card_eq_2_doubleton",
     "[| card ?A = 2; ?x ~= ?y; ?x : ?A; ?y : ?A |] ==> ?A = {?x, ?y}",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_hole 6))),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("More_Set.infinite_contains_3_elems",
     "infinite ?A ==>
      EX x y z. x ~= y & x ~= z & y ~= z & x : ?A & y : ?A & z : ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("More_Set.card_geq_3_iff_contains_3_elems",
     "(3 <= card ?A) =
      (finite ?A &
       (EX x y z. x ~= y & x ~= z & y ~= z & x : ?A & y : ?A & z : ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app (template_hole 8, template_hole 7))),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, t_empty))))]
